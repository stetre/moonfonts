// Font generated by stb_font_inl_generator.c (4/1 bpp)
//
// Following instructions show how to use the only included font, whatever it is, in
// a generic way so you can replace it with any other font by changing the include.
// To use multiple fonts, replace STB_SOMEFONT_* below with STB_FONT_courier_bold_35_usascii_*,
// and separately install each font. Note that the CREATE function call has a
// totally different name; it's just 'stb_font_courier_bold_35_usascii'.
//
/* // Example usage:

static stb_fontchar fontdata[STB_SOMEFONT_NUM_CHARS];

static void init(void)
{
    // optionally replace both STB_SOMEFONT_BITMAP_HEIGHT with STB_SOMEFONT_BITMAP_HEIGHT_POW2
    static unsigned char fontpixels[STB_SOMEFONT_BITMAP_HEIGHT][STB_SOMEFONT_BITMAP_WIDTH];
    STB_SOMEFONT_CREATE(fontdata, fontpixels, STB_SOMEFONT_BITMAP_HEIGHT);
    ... create texture ...
    // for best results rendering 1:1 pixels texels, use nearest-neighbor sampling
    // if allowed to scale up, use bilerp
}

// This function positions characters on integer coordinates, and assumes 1:1 texels to pixels
// Appropriate if nearest-neighbor sampling is used
static void draw_string_integer(int x, int y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0, cd->t0); glVertex2i(x + cd->x0, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t0); glVertex2i(x + cd->x1, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t1); glVertex2i(x + cd->x1, y + cd->y1);
        glTexCoord2f(cd->s0, cd->t1); glVertex2i(x + cd->x0, y + cd->y1);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance_int;
    }
    glEnd();
}

// This function positions characters on float coordinates, and doesn't require 1:1 texels to pixels
// Appropriate if bilinear filtering is used
static void draw_string_float(float x, float y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0f, cd->t0f); glVertex2f(x + cd->x0f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t0f); glVertex2f(x + cd->x1f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t1f); glVertex2f(x + cd->x1f, y + cd->y1f);
        glTexCoord2f(cd->s0f, cd->t1f); glVertex2f(x + cd->x0f, y + cd->y1f);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance;
    }
    glEnd();
}
*/

#ifndef STB_FONTCHAR__TYPEDEF
#define STB_FONTCHAR__TYPEDEF
typedef struct
{
    // coordinates if using integer positioning
    float s0,t0,s1,t1;
    signed short x0,y0,x1,y1;
    int   advance_int;
    // coordinates if using floating positioning
    float s0f,t0f,s1f,t1f;
    float x0f,y0f,x1f,y1f;
    float advance;
} stb_fontchar;
#endif

#define STB_FONT_courier_bold_35_usascii_BITMAP_WIDTH         256
#define STB_FONT_courier_bold_35_usascii_BITMAP_HEIGHT        130
#define STB_FONT_courier_bold_35_usascii_BITMAP_HEIGHT_POW2   256

#define STB_FONT_courier_bold_35_usascii_FIRST_CHAR            32
#define STB_FONT_courier_bold_35_usascii_NUM_CHARS             95

#define STB_FONT_courier_bold_35_usascii_LINE_SPACING          16

static unsigned int stb__courier_bold_35_usascii_pixels[]={
    0x40e66440,0x200000dc,0x54000028,0x04014c1d,0x886a0004,0xcca8802a,
    0x999913cc,0x000db837,0x000005b5,0x0abdca88,0x00000000,0x00000000,
    0x98000000,0x7fd42fff,0x3fe00005,0xff100003,0xd027fc4d,0x4037d45f,
    0xffb0fffc,0x7fffc01f,0xffff36ff,0x1bfe67ff,0x981ffe60,0x1003dfec,
    0xfffffff9,0x3fb26005,0x332600bd,0xffec89cc,0x3b6601ce,0x3ffb6a03,
    0xbccca8ce,0xdfdd9101,0xff30003b,0x0fff885f,0x5ff98000,0xbff90000,
    0xf982ffcc,0x807ffa5f,0xfb1ffffa,0x3fe01dff,0xff36ffff,0x3e27ffff,
    0x7ff403ff,0xfffff506,0xfff980bf,0x5fffffff,0x7ffffdc0,0xfff881ff,
    0xfffffeff,0xffd04fff,0xfffd883f,0xffefffff,0xfffc86ff,0x005fffff,
    0x6c0f774c,0xb80004ff,0x0008afff,0x4c5fff10,0xbff506ff,0xfd007ffc,
    0x7fe445bf,0xfb97103f,0x33ffe6df,0x07ffe42c,0xa82fff98,0xffdabeff,
    0xbfffd105,0x7fffd957,0x3ffffee0,0xff80ffff,0xffffffff,0x4c5fffff,
    0x3a24ffff,0xffffffff,0x45ffffff,0xfffffffa,0x00004fff,0x0007ffcc,
    0xfffffea8,0xfb8006ff,0x837fcc6f,0x3ffe5ffa,0x40dff300,0xf9805ffb,
    0x40bff36f,0xfb03fff8,0x21bfe0df,0xffd80ffa,0xfffd882f,0x5ffffc41,
    0x504fffc9,0x13bffffb,0x47fffb51,0x364ffff9,0xd711cfff,0xd039ffff,
    0xb7115dff,0x00003fff,0x8004ffe8,0xfffffffc,0x7c001fff,0x37fcc2ff,
    0x3fe4ffb8,0x81bfe607,0xf9805ffa,0x80bff36f,0xff987ffd,0x00ffb82f,
    0xfffa85ff,0x237fec01,0xff986ffb,0x13fff207,0xf10fffd8,0x3fea7fff,
    0xfffd102f,0xe813ee07,0xccc983ff,0x0ccccccc,0x0007ffd4,0xb7bffff1,
    0x4005ffff,0xff986ffb,0x229ff706,0x3fe607ff,0x017fea06,0x7fcdbfe6,
    0x17ffcc05,0x7f41fff2,0xfb13f205,0xfff1009f,0xd80fffc3,0xfff901ff,
    0x22ffe801,0xff92ffff,0x3fff880b,0x13fee000,0xfffffff1,0xfd03ffff,
    0x7fdc007f,0x00ffd885,0x260fffa0,0x7ff906ff,0xf981bfe6,0x17fea06f,
    0x7cdbfe60,0x5ffd805f,0xff81fffc,0x45fd9883,0xf9000fff,0x81bfe27f,
    0xff903ffa,0x49ff7009,0xffd1ffff,0x07ffd005,0x41ffec00,0xffffffff,
    0xffb81fff,0x0bff6007,0xf50026c4,0x9bfe60ff,0xfffffec8,0x40dfffff,
    0x3ea06ff9,0x6ff9805f,0xf700bff3,0x0fffc4ff,0x3f20ffc4,0x3fe25fff,
    0x53fea007,0x3e605ffa,0x0bff905f,0x7f49ff90,0x07ffb1ff,0x0007ffd0,
    0x203fff91,0xfaaaaaaa,0x5fff01ff,0x07bfea00,0x1fff4000,0x3ea6ff98,
    0xffffffff,0x7cc3ffff,0x17fea06f,0x7cdbfe60,0xfffa805f,0x301fff50,
    0x7fff41ff,0x17fea5ff,0xf76ff980,0x3ffc409f,0x201fffc8,0x3f62fff9,
    0x0fff70ff,0x003fffb8,0x9ffffff7,0x07ffa000,0xf0037fdc,0x0179dfff,
    0x01fff300,0xfe89bfe6,0xffffffff,0x7fe41fff,0x03bfe605,0x3e6dff30,
    0xfff8805f,0x260fff71,0x273ff27f,0x1bfea5fc,0xf76ff980,0x3ffc409f,
    0x81efffc8,0x360fffe9,0x3ffe67ff,0xffffa81d,0xfffff003,0x7f4000df,
    0x5fff101f,0x3fffee00,0x2003efff,0x3e604ffd,0xafff886f,0x540cffc9,
    0x2203ffff,0x2605ffff,0x0bff36ff,0x7e4bffe0,0x74ff305f,0xf897f24f,
    0x3fea007f,0x4409ff74,0xfff907ff,0xfff99fff,0x7ffc85ff,0x5f7fffe4,
    0x3ffffffd,0xfffff900,0x3fa0007f,0x1bff201f,0xffffd980,0xf9805fff,
    0x3fe600ff,0x321fff06,0xfffd83ff,0xffffc807,0x26dff300,0xffd005ff,
    0x4c13ff67,0xfc87fe7f,0x800fffc5,0x9ff73ffc,0xc83ffc40,0xffffffff,
    0xfb83ffff,0xffffd86f,0xffffffff,0x3ee62003,0xe8002fff,0x3fe201ff,
    0x5cc4001f,0x403ffffd,0x7cc05ffd,0x21fff06f,0xffa83ffc,0x3fe203ff,
    0x3fe605ff,0x200bff36,0xbffb2fff,0x4ff9fe60,0xbffb17f2,0x23fff300,
    0x3e205ffa,0xb9ff907f,0x5dffffff,0x5417fea0,0xcfffffff,0x10003ffd,
    0xd000dffb,0xffc803ff,0x7ec40005,0x3ffe205f,0x137fcc01,0xd55fff75,
    0x3f2039ff,0x3ffe605f,0x9b7fcc00,0xff8805ff,0x20dff71f,0x37ff27f9,
    0x7fcc5fdb,0x3ffa203f,0x981bfe25,0x5ff905ff,0x006f32e6,0xba805ff1,
    0x7ff90acc,0x7ffc4000,0x0fff4000,0x407ffe60,0x3e601fe8,0x17ff207f,
    0xfe9bfe60,0xffffffff,0xff985fff,0x017fea06,0x7fcdbfe6,0x0fffa805,
    0xf101fff5,0x7ffff41f,0x7ffec0ff,0x0fffe984,0xfb807ff4,0x05ff904f,
    0x00018800,0x0001ffe4,0xd000bffa,0xffb003ff,0x817fea09,0xff106ffb,
    0xdff3003f,0x7ffffffc,0x86ffffff,0x3ea06ff9,0x6ff9805f,0xf700bff3,
    0x0fffccff,0x7f5c1ff8,0xffe80eff,0xffffdeff,0x84ffc83f,0xf901fff8,
    0x0000005f,0x007ff900,0x007ffcc0,0x2007ffa0,0xfb80fff9,0x3ee60dff,
    0xdff704ff,0x99bfe600,0xfcceffdb,0xf980bcff,0x17fea06f,0x7cdbfe60,
    0x5ffd805f,0xfd81fffc,0x3f620002,0xffffffff,0x47fff302,0x3206ffd9,
    0x000002ff,0x83ffc800,0x3f6202c9,0xffe8006f,0x09ffd001,0xdffffff7,
    0x201fffff,0xf3002fff,0x4bff50df,0x3e600fff,0x17fea06f,0x7cdbfe60,
    0x7ffcc05f,0xc837fe42,0xfa80006f,0x00dfffff,0x7effffe4,0xeb982fff,
    0x001ccdff,0x54001cb8,0x0bdffecc,0x337bfffa,0x03ffffee,0x001ffe80,
    0xfa81fff5,0xffffffff,0xdff701ff,0x437fcc00,0x1ffe4ffb,0x540dff30,
    0xff9805ff,0xd80bff36,0xfff987ff,0x002ff982,0x67fffe40,0x7ec05c40,
    0x83ffffff,0xfffffff8,0x3ee000ff,0x3fea006f,0x26ffffff,0xfffffffb,
    0x0003ffff,0x74003ffd,0xdbdd83ff,0x00cfffff,0x9800fffa,0x4ffb86ff,
    0xf980fff1,0x17fea06f,0x7cdbfe60,0x3ffe205f,0x20dffb03,0x7e441ffd,
    0x3ffff201,0xffdcefff,0xffffd885,0x3fffe02f,0x000fffff,0xa8017fea,
    0xffffffff,0x7ffff5c5,0x0001efff,0xa800fff3,0xffa807ff,0x07ffa806,
    0x6437fcc0,0x0dff13ff,0x40bfff88,0x2202ffd9,0xff36ffa9,0xfff9033d,
    0x0bffea01,0x3bbbffe2,0xff301fff,0xffffffff,0xa9809fff,0xaaaa8800,
    0x98000aaa,0xaaa88002,0x3100aaaa,0x80001355,0x8005ffd8,0x7cc03ffe,
    0x3ffe806f,0x437fcc00,0xdff32ffc,0x1ffffb00,0xd81ffff2,0xf36fffff,
    0x225fffff,0x7ec04fff,0xfffb306f,0x7cc05fff,0xffedefff,0x0000cfff,
    0x00000000,0x00000000,0x37333260,0x8002ffff,0x7cc06ffb,0x7ffcc06f,
    0x2ffc4000,0xff997fe4,0xfffe8804,0x407fffb1,0x36ffffff,0x29ffffff,
    0xf8806ff9,0x5654407f,0x10353002,0x00000575,0x00000000,0x00000000,
    0xfffffff1,0x740007ff,0x27fc406f,0x000ffe60,0x26c40edc,0x5c400772,
    0x002f663d,0x2bddddb5,0x0ceeeee9,0x6d40036e,0x00000002,0x00000000,
    0x00000000,0xf8800000,0x2effffff,0x00544000,0x1d400edc,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x55551000,
    0x00000015,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00080000,0x00000000,
    0x00000000,0xcccccc98,0x0000accc,0x507332e6,0x99999999,0x22059999,
    0x665cc001,0x32a0001c,0xcb983ccc,0x99511bcc,0x22000079,0x26001ccc,
    0x000bcdcb,0x016f764c,0x2b7fffae,0x202cccc9,0x01cefedb,0x0cefec98,
    0x0176a200,0x9dfd9710,0x7fffd401,0x06ffffff,0xfffff100,0xfffffd85,
    0x5fffffff,0x05f7fe4c,0x3ffffe20,0xfff30002,0xffe87fff,0xfffb6fff,
    0x260000bf,0x5c402fff,0xfffffffe,0xffffc803,0xfe983fff,0xffffffff,
    0x7441ffff,0x4fffffff,0x3ffffea0,0x3b2a03ff,0x26006fff,0xffffffff,
    0xfffff503,0x00dfffff,0x3ffffe20,0x7ffffec2,0x5fffffff,0x3ff3bfe2,
    0x7fffc404,0xff10002f,0xfd85ffff,0xffb5ffff,0x20000bff,0x7402fff9,
    0xffffffff,0x3ff604ff,0x43ffffff,0xfffffff9,0xffffffff,0x7fffff40,
    0xfa83ffff,0xffffffff,0x7ffffc43,0xff5006ff,0xffffffff,0x99dff505,
    0x00179999,0x17ff5cc0,0x33337ff2,0x25ffeccc,0x01fa23fb,0x00bffae6,
    0x0effd880,0x447fff70,0x0005ffda,0x803ddd30,0xcacefffe,0xfd82ffff,
    0x3a89beff,0x51dfffe8,0x15dffffd,0x8adfffc8,0x6c1fffeb,0xfeb8bfff,
    0x3ffea0ff,0x8806ffff,0xc99cffff,0x7d40fffe,0x8000004f,0x7fd42ffd,
    0xe8bffa00,0xb002fb87,0x980005ff,0xff901fff,0x017fea0d,0x7f400000,
    0x8bffd01f,0x7004fffd,0x3ee03fff,0x7ffd05ff,0x447fff10,0x7fc40fff,
    0x55676c4f,0xffb806ff,0x85fff106,0x00004ffa,0x882ffd80,0x83ffe200,
    0x01fdc0fe,0x0002ffd8,0xf885ffd8,0xbff501ff,0x20000000,0x3fea07fc,
    0x00fffee6,0x2205ffd8,0xff885fff,0x4bff900f,0xff905ffa,0x06ff980f,
    0x3202ffc8,0x27fd44ff,0xdb700013,0x3ff67dff,0x5ffb8002,0x0fd11fdc,
    0x6457fec0,0x801ceffe,0x7e41fff9,0x97fea06f,0x02ccccc9,0x79999971,
    0x2601b880,0x13ffa6ff,0x805ffd00,0xfff05ffc,0xc93ff603,0xfff103ff,
    0x037fcc01,0x3f201e44,0x77ffd44f,0x400dffff,0xffffffd8,0x002ffeff,
    0x7c42ffe8,0x444ffdef,0xffdffb01,0x07ffffff,0x7c4bffb0,0x3fea01ff,
    0xffffff15,0xffffb03f,0x88000bff,0xfff54ffe,0xff002a21,0x5ffb803f,
    0xf30bffb0,0x27fe45ff,0x201fff88,0x00006ff9,0xfa85fff1,0xffffffff,
    0xffff101f,0xffffffff,0xff98005f,0xeffc980f,0x0ffeb98b,0xffffffd8,
    0x05ffffff,0xfd8fffcc,0x2ffd405f,0x1fffffff,0xffffff90,0x7fd4000b,
    0x3bff71ff,0x207ffffd,0x7f404ffd,0xffff305f,0x8dfffd79,0xffb06ffb,
    0x37fcc05f,0x7ff44000,0x7fffd40f,0x0fffffef,0x11cfffd8,0x05fffff5,
    0x405ffb80,0xfffeb998,0xffffb03e,0xffb3113b,0xdffd805f,0x5401fff9,
    0xffff95ff,0x554c0157,0x44005ffc,0x24fffffc,0xffffeffc,0xffc85fff,
    0xbfff500f,0x7ffffdc0,0x7cc0ffff,0x7ffdc2ff,0x1bfe604f,0xfffd1000,
    0x17bfd105,0x517ffee2,0x3a203fff,0x74002fff,0x3b2602ff,0x400befff,
    0x3204fffd,0x3e600fff,0x805ffeff,0xfffdeffa,0xff98001e,0x7ffcc005,
    0x7ffec2ff,0xffffefff,0x177ffc43,0x0bffff71,0x7fffffd4,0xffc80eff,
    0xffffebef,0x1bfe605f,0xfffe8800,0x3fee0003,0x2027fec7,0x2002fff9,
    0x6440fff9,0x08befffe,0x00dffb00,0xfd805ffd,0xa801ffff,0x0dffffff,
    0x0bff3000,0x0bfff980,0x1dffffc8,0xb81fffb3,0xffdfffff,0xf305ffff,
    0xfffdffff,0xfffd10bf,0x9fffffff,0x0037fcc0,0x03ffff98,0x0fffc400,
    0xff003ffd,0x7fdc005f,0x8bdffb85,0x402dffc8,0xfc804ffd,0x7ffc403f,
    0xfff5005f,0x40001fff,0xf8005ff9,0x3ffee04f,0x17ffc40e,0x7fffffe4,
    0xd05fffff,0x32615dff,0xfd883fff,0xffccffff,0x01bfe602,0x0ffffea0,
    0x17fec000,0xfb001fff,0x7ff4005f,0x3e20a882,0x203ffdef,0xfb803ffd,
    0xfffc804f,0xffff5001,0x20001dff,0x98005ff9,0x3ffe600a,0x209ffb02,
    0xdfffffe9,0xff885ffb,0x0bffb02f,0xff8de5cc,0x1bfe600f,0x5ffff700,
    0x7ffc0000,0x100fffa1,0x26005fff,0xf7000fff,0xfb037c47,0x7ffb00bf,
    0x00bffb00,0x7fe7ffd4,0xf98000ef,0x1000005f,0x7fdc0fff,0x84d4c405,
    0xffa85ffa,0x01ffe606,0x980fff90,0x3f2006ff,0x00001fff,0xfc83ffea,
    0x7ffe406f,0x0bff9002,0x0fe43f40,0x201fffd8,0x4c02fff9,0x2a001fff,
    0xffff75ff,0x5ff98003,0x3fe00000,0x07ffb03f,0x213ff200,0x3ea06ff9,
    0x3ff2006f,0x37fcc02f,0x77ffec40,0x03bf7000,0xf51bff62,0x3fea09ff,
    0xffd002ff,0x5c37c005,0xbfffb02f,0x1dffd101,0x005ffd80,0xff52ffd4,
    0x7cc005ff,0x6dc4005f,0x0fffe403,0x000bffea,0x7c0bffe6,0x7f4c0cff,
    0x7f4c044f,0xff9803ff,0x7fff4406,0xfe85300d,0xfedcdeff,0xffc81fff,
    0xffedcdff,0x203fffff,0x2000fff9,0x6c3f42fc,0xefffffff,0x1ffffecc,
    0x7fe6664c,0xffb802df,0x7ffe45ff,0x3fee1eff,0xffffffff,0xffb00eff,
    0x7ffc405f,0x6ffffdef,0x33332e20,0x900efffe,0xffbdffff,0x7fd43fff,
    0x5fffffdd,0xfffffd88,0x23ffffff,0xfffffffa,0x23ffffff,0xfffffff9,
    0x3603ffff,0xffffffff,0x06ffffff,0x10017fea,0x89ff9bff,0xfffffff9,
    0xffffffff,0x7ffffc43,0x401fffff,0x745ffffe,0x24ffffff,0xffffffff,
    0x03ffffff,0xa803fff9,0xffffffff,0x3fff201f,0x00efffff,0x7fffffe4,
    0x7fe42fff,0x04ffffff,0xfffffff5,0x54ffffff,0xffffffff,0x4c5fffff,
    0xfffffffd,0xfffa801d,0xffecffff,0x3ba202ef,0xffda8000,0xfffc80be,
    0xfffffdcf,0xfff880df,0x1fffffff,0x2ffff540,0x37ffffaa,0x3ffffae1,
    0xdfffffff,0x4002a600,0xdfffffea,0x7fffdc00,0x7000dfff,0x3bfffffd,
    0xfffffd10,0xfffd801b,0xefffffff,0x3ffffea2,0xffffffff,0x35553105,
    0x55510001,0x00000003,0x44000510,0x44009aa9,0xaaaaaaaa,0x00000000,
    0x00000000,0x80026aa6,0x001aaaa9,0x4006a620,0x00001aa8,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x15400000,0x2ea20000,0xcc980aac,0xa880004c,0x003ccccc,0x137b9510,
    0x33326000,0x9b731003,0x31000459,0x33333333,0x03333301,0x00133331,
    0x10de6dcc,0x59b97300,0x4cccc404,0x26666201,0x99999980,0x80999999,
    0x99999999,0x3ff30099,0xff910000,0x23dfffff,0x00fffffa,0x7fffe400,
    0x644006ff,0x2fffffff,0x5fffe800,0xfffffc80,0x805fefff,0xfffffffb,
    0xff54ffff,0x323fffff,0x06ffffff,0x3fffff62,0x104fedff,0xfffffffb,
    0x7ffd49fd,0x7ec1ffff,0x226fffff,0xffffffff,0x3e25ffff,0xffffffff,
    0xffb84fff,0xffe80003,0x4fffffff,0x01fffff5,0xffffc800,0x3e6006ff,
    0xffffffff,0x3fee004f,0x3f6205ff,0xffffffff,0xffd807ff,0xffffffff,
    0xfffff76f,0x3fffa5ff,0xe880ffff,0xffffffff,0xff887fff,0xffffffff,
    0x3fffee7f,0x7ff43fff,0xf10fffff,0xffffffff,0x7fd4bfff,0xffffffff,
    0x3ffc86ff,0x7ffdc000,0x1efedcce,0x003ffee6,0xfb995100,0x3fa200df,
    0xfecabdff,0xff8804ff,0xfd105fff,0xd9579dff,0x9100ffff,0xdfffdddd,
    0x3ff2239d,0x3b263def,0xfb02efff,0xfb759dff,0xffd0ffff,0xffd957df,
    0x7ff644ff,0x76cc0bdf,0x3e22dfff,0xeeeeeeff,0x76dc4fff,0xeeefffee,
    0x03ffc81c,0x027fec00,0x0007ffc0,0x01bfe600,0xd817ffec,0x7e401fff,
    0xf905ffff,0x7fdc03ff,0x3ffe0007,0x00bff600,0x3f605ffb,0xffd302ff,
    0x02fff88f,0xff30fffb,0x6ffb801f,0xfd07ff88,0xff9801ff,0x3fb2e206,
    0xccccccef,0x01ffe802,0x000fff80,0x037fcc00,0x200fffd4,0x3e606ffc,
    0x985ffcff,0xfe802fff,0x3ffe0006,0x00bff600,0xff105ffb,0x7ff9805f,
    0xf102ffd4,0x0fffa0df,0xf105fff0,0x5fff90ff,0x40dff300,0xfffffffc,
    0x80ffffff,0xcdfffcca,0x3e01bccc,0xeffec9ff,0xff98000c,0x04ffd806,
    0xd02fff88,0x0bff3dff,0x2a00bff9,0x3fe0002d,0x0bff600f,0xf505ffb0,
    0x17f600bf,0xfc80dff3,0x40dff504,0x3fe07ffa,0x027ffd46,0x2e06ff98,
    0xffffffff,0xf987ffff,0xffffffff,0x3fe06fff,0xffffffff,0x7fcc001f,
    0x00fff806,0xf507ff70,0x0bff33ff,0x00007ffb,0x007ffc00,0xfd805ffb,
    0x03ffc82f,0xfff01510,0x3e00403b,0x9ffb02ff,0xff31fdc0,0x7fcc00bf,
    0x7fed4406,0x0aaaaaad,0xffffff88,0x06ffffff,0x3ffffffe,0x4007ffff,
    0x7c406ff9,0x3fea007f,0x9a7ffc45,0x1ffe85ff,0x3e000000,0x3ff600ff,
    0x417fec02,0x80001ffe,0xbdfffffb,0x17ff2001,0x8003ffe6,0x000effe8,
    0x6401bfe6,0xa88003ff,0xaaabffea,0x7fffc01a,0xfffb88ae,0x1bfe6002,
    0x400bff30,0x7fe46ff9,0xf0bff30f,0x000000ff,0x3600fff8,0x7fec02ff,
    0x0007ff82,0x3ffffee0,0x4400cfff,0x7fe40fff,0x7ffec005,0x37fcc001,
    0x003ffc80,0x000fff40,0x6406fffc,0x3e6004ff,0x37fcc06f,0x44dff300,
    0x3fe63fff,0xb507ff85,0x85bddddd,0x7ffc00cb,0x00bff600,0xfff05ffb,
    0xec980000,0x0effffff,0xf127fec0,0x7dc005ff,0xf98003ff,0x7ff9006f,
    0x1ffe8000,0x00fff800,0x4c00bff5,0x7fc406ff,0x93fea007,0x7fcc6ffd,
    0x440fff85,0xffffffff,0x807ff11f,0x3f600fff,0x17fec02f,0x00007ffc,
    0xfffdb980,0x3ffd407f,0x4c00dff7,0x00a84fff,0xc8037fcc,0x740003ff,
    0xff8001ff,0x0bff500f,0x4037fcc0,0xf9001ffe,0x33ffea7f,0x1effcaaa,
    0x7fc0ffec,0x0fffffff,0xff80bff5,0x0bff600f,0xf905ffb0,0x0100005f,
    0x803fff50,0x7ffd2ffe,0x1bffe200,0xff301fee,0x0fff200d,0x03ffd000,
    0x201fff00,0x26005ffa,0xffd806ff,0x1fff9805,0xfffffffb,0x647fffff,
    0x555303ff,0x7fd41fff,0x203ffc05,0x7f404ffc,0x05ffa80f,0x4027e400,
    0x7dc03ffc,0x00fff9ef,0xb01fffb0,0x7fcc03ff,0x07ff9006,0x01ffe800,
    0x500fff80,0x7cc00bff,0xfff9806f,0x97ffa203,0xfffffffd,0x2a3fffff,
    0xff800fff,0x302ffd47,0xffa80dff,0x0fff500f,0x200bffe2,0x07ffc5e8,
    0x1013ff60,0x09ffdfff,0x40bfff20,0x3e602ffd,0xbff7006f,0x409d9510,
    0xf8001ffe,0xbff500ff,0x037fcc00,0x984fffb8,0x32a0fffe,0xfdcccccc,
    0xeffe83ff,0x8fff5102,0x540beffa,0x7c404fff,0x7fd42dff,0x3fff204f,
    0x5fff500c,0x20bfffe2,0x802fffc9,0x01fffffd,0x204fffa8,0x3e602ffd,
    0xfff3006f,0xffffdbbf,0x07ffa01f,0x403ffe00,0x26005ffa,0x3f6006ff,
    0xffedefff,0x7cc003ff,0xffff105f,0xffffbbdf,0xffffa8ff,0xefffedef,
    0xffffa800,0x06ffffdf,0xdeffffc8,0x0fffffed,0xdffffff1,0x1dfffffb,
    0xdffff300,0x3ffff600,0xffffffff,0xffffb12f,0x7fffffff,0x3fffff60,
    0x265fffff,0xfffffffe,0xfd81efff,0x3e25ffff,0x5c3fffff,0xffffffff,
    0x880effff,0xfffffffd,0xfd1002ff,0x503dffff,0xffffffff,0xd88bffff,
    0xffffffff,0x3ee000ef,0xefffffff,0xffff9001,0x3dffffff,0xfffffff8,
    0x01ffffff,0x00bfffa0,0x7fffffec,0x2fffffff,0xfffffff5,0x20dfffff,
    0xffffffc8,0x7ffe42df,0xffffffff,0x7fffc44f,0xfff71fff,0xfff8dfff,
    0xffffffff,0x3aa03fff,0x00dfffff,0x3ffffee0,0x3fae04ff,0x0cffffff,
    0x3ffff220,0x98000cef,0x04fffffe,0xfffeca80,0x7d704eff,0xffffffd7,
    0xfff70007,0x7fffec00,0xffffffff,0xffffb12f,0x5dffffff,0x09aa9880,
    0x3ffff660,0x1dffffff,0x4fffffc8,0x3bffff62,0x7ffff5c3,0xdfffffff,
    0x01a98800,0xffffb100,0x2a2003bf,0xa880019a,0x3100000a,0x22000035,
    0x530001a9,0x00000355,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x26666620,
    0x99999999,0x09998819,0x03333310,0x26666666,0x99980009,0x02666201,
    0x804ccccc,0x88099999,0x19999999,0x03333100,0x40033331,0x33330018,
    0x33333333,0x33330333,0x33333333,0x33330133,0x98003333,0x99880199,
    0x33333009,0x20013333,0xfffffffd,0xffffffff,0x1bffffa1,0x3fffffee,
    0x3ffffe66,0x1dffffff,0x7ffffc40,0x7fffec1f,0x7ffffc4f,0x7fffc4ff,
    0x3ffa3fff,0xffffffff,0xffff503e,0x3ffee3ff,0x3a600fff,0x440defff,
    0xffffffff,0xffffffff,0xffffff30,0xffffffff,0x7fffcc5f,0x2effffff,
    0x1fffffc0,0x93ffffa0,0xfffffff9,0x403fffff,0xfffffffd,0xffffffff,
    0xffffff11,0xfffffd87,0xffff70ff,0xffffffff,0x7ffcc09f,0x7ffc3fff,
    0x3fe65fff,0x265fffff,0x5fffffff,0x3ffffffe,0x0effffff,0x7fffffe4,
    0xffffffb3,0x3fffea03,0x7fd44fff,0xffffffff,0x50ffffff,0xffffffff,
    0x5fffffff,0x7fffffdc,0x0dffffff,0x7fffff88,0x3ffffe60,0x3ffffee6,
    0xffffffff,0x3bbff606,0xeeefffee,0x3f6a1fff,0x3260ffff,0x223efffe,
    0xeeefffdb,0x03fffffe,0x037fffae,0x83bffff5,0x1ceefffb,0x77fff6dc,
    0x3bfff6a1,0xfffffeee,0x77ffe445,0xfffd930b,0x3fffe207,0xdb81ffff,
    0xeeeeefff,0x10fffeee,0xdddfffb7,0x5fffdddd,0x777ffdc4,0x6fffffee,
    0x5fffff70,0x37ffff60,0x3fffae21,0xfffeeeee,0x45ffb04f,0x7ff45ffa,
    0x5ffffd81,0x7c05ffb0,0x7ed440ff,0x7ff4407f,0x27ffd40e,0x2005ffd0,
    0xff902ffd,0x5fff9307,0x7d40fff0,0x3bfee05f,0xff801b70,0x07ffc00f,
    0xfb007ffc,0x07ff905f,0x209fff93,0x886ffffc,0x202fffff,0xff9107ff,
    0x45ffb01f,0x7ff45ffa,0xfffffd81,0x202ffd83,0xff100fff,0xfff9803f,
    0x017ffe65,0x77547ffb,0xc80fff45,0x3ff603ff,0x2a07ff84,0x3ff205ff,
    0x0fff8004,0x7c07ff40,0x3ff200ff,0x203ffc82,0xfc80fffd,0x7e41ffff,
    0x3e02ffff,0x0fff407f,0xff517fec,0xd81ffe8b,0x40ffffff,0x3fe02ffd,
    0x07ffa00f,0x233ffea0,0x6400efff,0x3fff63ff,0x6403ffe2,0x3fea03ff,
    0x2a07ff85,0x3fee05ff,0x0fff8007,0x06fd8bae,0x975c1fff,0xffc80ffa,
    0x427ff403,0x25fffffc,0x2ffffff8,0xf881ffe0,0x0ffc81ff,0xff917fea,
    0x3fefff60,0x017fec5f,0x3ee01fff,0x3fee007f,0x800fffff,0xfff14ffb,
    0x81ffe29f,0x3f603ffc,0x207ff84f,0x3e205ffa,0x7fc003ff,0xa89bfe0f,
    0x221fff00,0x6406a5ff,0x7fdc03ff,0xffcffc86,0xfbdff71f,0x83ffc05f,
    0xb107ffda,0x445ffa87,0x55ffb02d,0x7fec5fff,0x443ffe02,0x05fffea9,
    0x7ffffe40,0x2bff5001,0xf37ffffa,0x1ffe40df,0xf82fffa8,0xccccccff,
    0x7ec05ffd,0x3fe001ff,0x07ffeeef,0x3bbbffe0,0xff9006ff,0x87ff9807,
    0x4ffdbffc,0x5ffb7ffd,0x6667ffc0,0x03fffffd,0x002ffd40,0x7fecbff6,
    0x405ffb0e,0xffffffff,0x8000dfff,0x2003fffe,0xfffb6ff9,0x0bff55ff,
    0x5d56ffe4,0xf06ffffd,0xffffffff,0x7e40bfff,0x33b66fff,0xffffff80,
    0x3fe007ff,0x06ffffff,0xf007ff90,0x37ff90ff,0x2fff7fff,0x3fe02ffd,
    0xffffffff,0x7d4000ff,0x7fec005f,0x369fff12,0x3ffe02ff,0x4fffffff,
    0xffff5000,0x3fe2001d,0xffdfff8f,0x3205ffbc,0xffffffff,0xfff00eff,
    0xffffffff,0x3fff20bf,0xfff8cfff,0xffffff85,0x3fe007ff,0x06ffffff,
    0xf007ff90,0x27ff90ff,0xb4fffffe,0x7ffc05ff,0xffffffff,0x3ea000ef,
    0x7fec005f,0x367ffee2,0x3ffe02ff,0x3fffffff,0xffff9800,0x3fe005ff,
    0xff9effbf,0x3204ffcf,0xffffffff,0x3ffe00cf,0xfcaaaaaa,0xcfff885f,
    0xfffcfffb,0xbabfff84,0x3fe007ff,0x06ffbabf,0x8807ff90,0x3ffc87ff,
    0x21fffff5,0x3fe02ffd,0xfdbaaaaf,0x2a006fff,0x7ec005ff,0x6f7ff42f,
    0x3ffe02ff,0x0bfffea0,0xaeffe880,0xfd004fff,0x3fe7ffff,0x3203ffff,
    0xacdeeeff,0x207ff801,0xffa85ffa,0x3fffff65,0x7c1fff04,0x3ffe005f,
    0x2d997fe0,0x5403ffc8,0x3ffc85ff,0xfd93fffe,0x01ffe02f,0x2003fff7,
    0x6c005ffa,0x7ffcc2ff,0x3fe02fff,0x7fff4c0f,0x3fffd001,0x200fffee,
    0x91fffffd,0x405fffff,0x20003ffc,0x3fea07ff,0x224ffb85,0xf00fffff,
    0x006441ff,0x5cc1fff0,0x3f21bfa0,0x27fec03f,0xff71ffe4,0x017fec3f,
    0xffb00fff,0x17fea007,0x705ffb00,0x405fffff,0xfe880fff,0x7fe400ef,
    0x0fffec2f,0x9bffff20,0x01fffff9,0x8000fff2,0x3fea07ff,0x5c6ffa85,
    0x3fe05fff,0x7fc0000f,0x43ffc00f,0x3f203ffc,0x3ffc81ff,0xffb0f322,
    0x403ffc05,0xf5004ffb,0xffd800bf,0x5ffffd02,0x9807ffc0,0x3ee04fff,
    0xfffd03ff,0x7fffdc01,0x07ffffc4,0x0007ff90,0xff503ffc,0xbffff10b,
    0x5ffffffb,0x0001fff0,0x7c00fff8,0x43ffc87f,0x04fffda9,0x36007ff9,
    0x1ffe02ff,0x17ffdd44,0xfffffd88,0xd102efff,0x41dfffff,0x442ffff9,
    0x5ffffffe,0x24ffffb8,0x3fffffe9,0x2fffffec,0x41ffffa8,0xf907fffc,
    0xdfffffff,0xffffd803,0xfffd50ef,0xfffb87ff,0xffffffff,0xfffffd16,
    0xd100bfff,0xffffffff,0x4fffffff,0xffffffe8,0x86ffffff,0xefffffe8,
    0x7ffffd40,0x3fffa25f,0xffffffff,0xf500ffff,0xffffffff,0x3ffee0df,
    0x7e43ffff,0x7ffdc2ff,0xd80fffff,0xff90ffff,0x7ccdffff,0x81ffffff,
    0xf986fff9,0xffff06ff,0x09ffffff,0x7fffffcc,0xfffffb3f,0xffff50df,
    0x25dffbff,0xfffffffa,0x7dc01fff,0xffffffff,0x27ffffff,0xfffffffb,
    0x80dfffff,0xfffffffb,0x7fffff43,0xffff70ff,0xffffffff,0xfd803fff,
    0xefffffff,0xffffb102,0xfff881bf,0x7fffec42,0xdfd104ff,0x7fffecc9,
    0x7fffe42e,0x9fff104f,0x5c17ffe0,0xfffffffe,0x7ffe400d,0xffd50dff,
    0x54c05dff,0x3f62009a,0x5fffffff,0xffffd880,0xffffffff,0x3ff627ff,
    0xbdefffff,0x3fff6201,0x7f540dff,0x3624ffff,0xffffffff,0x0003deff,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x88000000,0x01999999,0x20199980,0x4c409998,0x00999999,
    0x02666660,0x2a026666,0x00000001,0xb9800dc4,0x015cc000,0x00000000,
    0x00000000,0xa8800000,0x0999881c,0xfb81ddd7,0x1fffffff,0xfffff100,
    0xffffd83f,0xfffff94f,0x9807ffff,0x6fffffff,0x93fffffe,0x0001effb,
    0xfffb8000,0x003ff800,0x8813ffe6,0x01bdfeca,0x77ff6cc0,0xfdb3002c,
    0x01777dff,0x3ffffb2a,0x76dc002d,0x0baadfff,0x320fffe4,0xfff92fff,
    0xfffffc81,0xf3004fff,0xf85fffff,0xfd6fffff,0xffffffff,0xffffb80b,
    0xff98ffff,0x3f26ffff,0x0001dfff,0xffffa800,0x2ffcc00f,0x0ffff700,
    0x3fffffea,0x6c400eff,0xffffffff,0x3fff600d,0x3fffffff,0xffffffe8,
    0xe9805fff,0xffffffff,0x7fffc3ff,0xf52fffc3,0xfdd910ff,0x001fffff,
    0x213fffae,0x31cffffa,0xddfffdd9,0xfeb88019,0x3f62deff,0x7e41dfff,
    0x000cffff,0xfffea800,0xff9801ef,0x3ffe2006,0xfffffa84,0x00efffff,
    0xfffffff1,0x901fffff,0xffffffff,0xfff09fff,0xffffffff,0x7fffd409,
    0xffffffff,0x307ffdc5,0x7fcc3fff,0xfffff806,0x7ff4003f,0x03fff986,
    0x8001ffe2,0xfffa87ff,0x3ff6601f,0x00003fff,0x7fffffb3,0x037fcc00,
    0x3ea06a20,0xf730aeff,0xffb01dff,0xf951159f,0x9fff0bff,0x3ffae215,
    0x09acca84,0x220fff93,0x711affff,0x510bfffb,0xf88bff70,0x7ffd405f,
    0x4c006ffb,0x7ff43fff,0x03ffc405,0xfc8fff00,0xd3001eff,0x005dffff,
    0x3ffff220,0x7cc000cf,0x3a00006f,0x3fe605ff,0x1fffd43f,0xf85fff70,
    0x3ff102ff,0x03ffe000,0xd803bff2,0x3f6005ff,0x404ff81f,0xfff8cffd,
    0x7ffdc001,0x801fff91,0x20007ff8,0x3fff67ff,0xfea8000e,0x2001efff,
    0x0dfffffb,0x0dff3000,0x3bfe2000,0x22ffdc00,0xaaaaeffc,0x5ffeaaaa,
    0x66ffffdc,0x3b6e001a,0x0fffeeff,0x4401ffe8,0x3fe003ff,0x4407fd05,
    0xbff90fff,0x5dffd000,0xf1005fff,0x7fc000ff,0x05fffe8f,0xffffb800,
    0x3fea00df,0x2001efff,0xffcaaaa8,0x001aaaae,0x8804ffb8,0x7fff47ff,
    0xffffffff,0x7fc46fff,0x4fffffff,0x3ffffea0,0x40ffffff,0x31007ff8,
    0x807fd400,0x3ff202fd,0x003ffe65,0xffffff30,0x1ffe200b,0xfefff800,
    0x200005ff,0xcfffffc8,0x3ffffa60,0x7fdc002e,0xffffffff,0x4007ffff,
    0xfd003ffc,0x7ffffc3f,0xffffffff,0xfec887ff,0x1effffff,0x7fffffd4,
    0x40ffffff,0x00006ff9,0x7dc09f90,0xd0bffe00,0xf70007ff,0x2001ffff,
    0x20007ff8,0xffffffff,0x3a600002,0xb12fffff,0x019fffff,0xfffffc80,
    0xffffffff,0x2665c0ff,0x22013fea,0x77fec7ff,0xeeeeeeee,0x22046eee,
    0x5fffdca9,0x2f7fffe2,0x0fffa999,0x0003ffc4,0x0400db80,0xf50fff50,
    0x3fa000df,0x3e2002ff,0x3fe0007f,0x2fffffff,0x7fec4000,0xe980cfff,
    0x003fffff,0x3bbbb6e2,0xdeeeefff,0x227ffc42,0x6c01fff8,0x77fe45ff,
    0x0df30000,0xf70fff98,0x7ffc01ff,0x002ffe80,0x00173011,0xffffd800,
    0x1fffffff,0x06ff9800,0x203ffc40,0xffff81fd,0x02fffe99,0xffffc880,
    0xfea800cf,0x0002efff,0x5401bfe6,0xfffb06ff,0x5fffb107,0x01efff88,
    0x7e439731,0xfff301df,0x5c17ff23,0xfc80ffff,0x3f2202ff,0x07fff21f,
    0x7ffc4000,0xffffffff,0xff98005f,0x3ffc4006,0xff09ff30,0x07ffd81f,
    0x7ffffdc0,0xffb8001d,0x8001dfff,0xfb006ff9,0x3ffa205f,0xfffecdef,
    0xffff504f,0xffffd9bf,0x7fffecdf,0xffffecde,0x37fffea7,0xffffffec,
    0x7fff41ef,0xffedccef,0x3fffa2ff,0xff900003,0xffffffff,0x98001fff,
    0x7c4006ff,0x17fea07f,0x3fe21ffe,0xffea803f,0x40002eff,0xcfffffc8,
    0x1bfe6000,0x2202ffc0,0xfffffffe,0x7fe403ff,0xffffffff,0x3fff25ff,
    0xffffffff,0x7fffec1f,0xffffffff,0x7ff444ff,0xffffffff,0x0fffe45f,
    0x2fff8000,0x001ffec0,0x1001bfe6,0x7fd40fff,0xf507ff85,0x3fa601ff,
    0x0003ffff,0x7fffec40,0xdff3004f,0x001ff500,0x3fffffb2,0xffb3002d,
    0x7bffffff,0xfffdde98,0x700cffff,0x7dffffff,0x103bffff,0xfffffff7,
    0x02e605df,0x3ffd4000,0x0037fd40,0x1001bfe6,0x7fd40fff,0x3a07ff85,
    0xfffa84ff,0x00000cff,0x3ffffa60,0x06ff9806,0x88003fc8,0x220001aa,
    0x0009aaa9,0x026aaaa2,0x02aae620,0x57553000,0x00000013,0x3fffffa6,
    0x7fffdc0e,0x3ff605ff,0x3fffffff,0xffffffb8,0xffffffff,0xffffd15f,
    0xfffa89ff,0xbfff91ef,0x40000001,0x401fffea,0x5e804ff8,0x00000000,
    0x00000000,0x00000000,0xffc80000,0x7c3fffff,0x0fffffff,0xffffff98,
    0xfe86ffff,0xffffffff,0x75ffffff,0xffffffff,0x4ffffe81,0x00003bb3,
    0x0275c000,0x00801ec8,0x00000000,0x00000000,0x00000000,0xffb30000,
    0xea81bfff,0x204fffff,0xfffffffd,0xffea82ef,0xffffffff,0xfb15ffff,
    0x509dffff,0x0003bfff,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x40000000,0x540cccca,
    0xb883cccc,0x2e21cccc,0x9802cccc,0xcccb9802,0x9999500b,0xcccccc87,
    0x23cccccc,0x1cccccb9,0x333332e2,0x44001003,0x99999999,0x64099999,
    0x3332a3cc,0x02dfd981,0xba801710,0xaccca801,0xfd88dffc,0x32e202df,
    0xeffeb8cc,0x6665c00d,0x2fbfae2c,0x3ffffea0,0x3ffffe60,0xfffffc86,
    0xfffff70f,0x03ff801f,0x2ffffff4,0x7fffffcc,0x3fffffe3,0x25ffffff,
    0xfffffffe,0xffffff70,0x00eb807f,0x7fffffc4,0xffffffff,0x9bffa4ff,
    0x7dc1fffa,0x6c43ffff,0x201df70e,0x2a01fffc,0xffffffff,0xffffffff,
    0xdffffb03,0x5fffffff,0x3ffffee0,0xfffffe9c,0xfffff30f,0x7ffffc41,
    0xfffffb86,0x3ffffea6,0x17fe600f,0x9fffffd0,0xffffff10,0x7fffffc5,
    0x25ffffff,0x6ffffffd,0x3fffffea,0x1bfea02f,0xffffff30,0xffffffff,
    0x2ffecdff,0x7d41fff3,0x25ffffff,0x3ff63ffe,0x03fffe82,0x3fffffe6,
    0xffffffff,0xffc80fff,0xffffffff,0xffa80fff,0xffffffff,0x2a24ffff,
    0x5d440fff,0xffd306ff,0x7fffccbf,0x2ffcc00c,0x88fffdc0,0xfff714ee,
    0xaabfff81,0x40ffffda,0x40afffc9,0x00afffd9,0x013fffe6,0xddddddb7,
    0xbddddddd,0xf11ffe43,0x9efff8ff,0xffeefffd,0x21ffe41f,0x4400fffb,
    0xfa8cfffd,0xffe89fff,0xdffff302,0x7ffd5115,0x3fff6a20,0xfea8bfff,
    0x300fff81,0x7ec40dff,0xffffadff,0x3e659702,0x8839735f,0xfff90fff,
    0x3a17fee1,0x7fffd46f,0x40fffe00,0x74403ffe,0x003fffff,0x5ff50000,
    0x6ff46ff8,0x3fffff20,0x81ff503f,0xff9000a9,0xb0fffc4b,0x7ffc05ff,
    0x05ffb80e,0x077fffdc,0x201fff00,0xfc806ff9,0x01ffffff,0xffdffff5,
    0xd0dfffdf,0x3fffe5ff,0x9307ffb3,0x077ffd43,0x2a1bfee0,0x7f400fff,
    0x02fffdff,0xff980000,0x0a22ff41,0x017fffd4,0x320000a2,0x1ffe23ff,
    0x7fc05ff9,0x0dff300f,0x004fffb8,0xf300fff8,0x3fee00df,0x3e600eff,
    0xffffffff,0xffc85fff,0xf6ffffab,0xff5003ff,0x3fe001df,0x027ff43f,
    0x7f4bfff2,0xaaa881ff,0xaaaaaaaa,0x7fc41aaa,0x40027ec0,0x00000019,
    0xff11ffe4,0x202ffc8f,0xff300fff,0x04ffb80d,0x201fff00,0xfb006ff9,
    0x8805ffff,0xffffffec,0xbff502df,0xf7fffffb,0xfff500ff,0x7fdc001d,
    0x803ffea6,0x3e23fffb,0x3fe20eff,0xffffffff,0x45ffffff,0x003fb87f,
    0x00000000,0x7fc47ff9,0xf017fe47,0x3fe601ff,0x027fdc06,0x300fff80,
    0xfe880dff,0x03ffffff,0x1fffff70,0xfffff880,0x5fffffef,0x077ffd40,
    0x4bffe200,0x3e204ffe,0xfff985ff,0x3ffffe65,0xffffffff,0x41dc5fff,
    0x776d40c8,0xeeeeeeee,0xceeeeeee,0x26666661,0x20999999,0x3fe23ffc,
    0xf017fe47,0x3fe601ff,0x027fdc06,0x500fff80,0x7f440dff,0xfffe8cff,
    0x7fffc404,0xffe804ff,0xffff9eff,0x3ffea03f,0x2016cc0e,0xfffaeffb,
    0x81bfea00,0x66546ffa,0xcccccccc,0x000bcccc,0x3ffffe20,0xffffffff,
    0x5fffffff,0xfffffff1,0x64bfffff,0x1ffe23ff,0x7fc05ff9,0x0dff300f,
    0x0004ffb8,0xfc887ffd,0xfff306ff,0x7ffec45f,0x2fbffa05,0x7e402fff,
    0xfffd3fff,0x3ffea03f,0x406fe80e,0x4ffffff8,0x5400cb80,0x0000001d,
    0x7ffff400,0xffffffff,0x3fffffff,0xfffffff1,0x64bfffff,0x1ffe23ff,
    0x7fc05ff9,0x0dff300f,0x0004ffb8,0xfd9bfff9,0x43dfffff,0x25fffffd,
    0x3ffffff9,0xfd8fffd4,0x7ffd406f,0x0ffff70f,0x3fffffe6,0x0fffffff,
    0x7ffffe40,0x00000000,0x10000000,0x33333333,0x33333333,0x66664413,
    0xcccccccc,0x5ffffe8b,0x325ffff1,0x7fe45fff,0x7fe46fff,0x3ff61eff,
    0xffffffff,0x7ff4403f,0xffffffff,0xffff34ff,0x3ff21fff,0x7cc6ffff,
    0x017fa23f,0x7c4bfff1,0xfff506ff,0xffffffff,0xff8801ff,0x000004ff,
    0x00000000,0x00000000,0xfffff500,0xbffff13f,0x447ffff2,0x1fffffff,
    0x9ffffff1,0x3fffffe6,0x07ffffff,0xfffffe88,0x21dfffcd,0x24fffffc,
    0x2effffd9,0x00288298,0xffc85ffd,0xfffff504,0xffffffff,0x3fff9001,
    0x00000000,0x00000000,0x20000000,0x15ffffd8,0x3f25dfff,0x7ff644ff,
    0x7ff5c5ff,0x3fff61df,0xefffffff,0x26aa2003,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
};

static signed short stb__courier_bold_35_usascii_x[95]={ 0,6,3,1,2,2,3,7,8,3,2,1,6,2,
6,2,2,2,1,2,2,1,3,2,2,3,6,6,-1,0,1,3,2,-1,0,0,0,0,1,0,0,2,1,0,
1,-1,-1,0,1,0,0,1,1,0,-1,-1,0,0,2,7,2,3,2,-2,6,1,-1,1,0,0,2,0,0,1,
2,1,1,-1,0,1,-1,1,1,2,2,0,0,-1,0,0,2,5,7,5,1, };
static signed short stb__courier_bold_35_usascii_y[95]={ 25,4,6,3,3,5,7,6,5,5,5,7,20,14,
21,3,4,4,4,4,5,5,4,5,4,4,11,11,7,11,7,6,4,6,6,6,6,6,6,6,6,6,6,6,
6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,5,3,5,4,31,4,10,5,10,5,10,5,10,5,5,
5,5,5,10,10,10,10,10,10,10,6,11,11,11,11,11,11,5,5,5,13, };
static unsigned short stb__courier_bold_35_usascii_w[95]={ 0,6,12,16,15,15,14,5,8,8,14,17,7,14,
6,15,15,15,15,15,14,16,14,14,15,14,6,8,19,18,18,14,14,21,18,18,18,18,18,19,19,15,18,19,
17,21,20,18,17,18,20,16,17,19,21,20,19,18,15,8,15,8,15,22,7,17,19,17,19,18,16,19,19,16,
13,17,16,21,18,17,19,19,17,15,17,18,19,20,18,18,15,9,4,9,16, };
static unsigned short stb__courier_bold_35_usascii_h[95]={ 0,22,9,25,26,21,19,10,25,25,14,18,10,4,
5,26,22,21,21,22,20,21,22,21,22,22,15,18,18,10,18,20,24,19,19,20,19,19,19,20,19,19,20,19,
19,19,19,20,19,24,19,20,19,20,19,19,19,19,19,25,26,25,11,4,6,16,21,16,21,16,20,22,20,20,
27,20,20,15,15,16,22,22,15,16,20,15,14,14,14,21,14,25,25,25,7, };
static unsigned short stb__courier_bold_35_usascii_s[95]={ 254,211,205,68,31,151,140,250,132,123,98,
119,242,241,243,47,175,67,83,238,92,99,1,136,36,52,235,137,99,186,80,
241,141,1,234,166,193,174,155,107,120,240,127,60,42,212,19,73,102,156,40,
185,1,146,202,81,61,23,224,114,15,105,170,218,235,199,167,217,116,164,19,
16,36,224,1,206,56,1,23,146,191,218,42,183,1,60,150,113,79,187,134,
85,63,95,218, };
static unsigned short stb__courier_bold_35_usascii_t[95]={ 1,1,113,1,1,29,73,93,1,1,113,
93,93,121,113,1,1,29,29,1,52,29,29,29,29,29,93,93,93,113,93,
29,1,93,73,52,73,73,73,52,73,52,52,93,93,73,73,52,73,1,73,
52,73,52,52,73,73,93,52,1,1,1,113,121,113,93,29,93,29,93,52,
29,52,29,1,29,52,113,113,93,1,1,113,93,52,113,113,113,113,29,113,
1,1,1,113, };
static unsigned short stb__courier_bold_35_usascii_a[95]={ 297,297,297,297,297,297,297,297,
297,297,297,297,297,297,297,297,297,297,297,297,297,297,297,297,
297,297,297,297,297,297,297,297,297,297,297,297,297,297,297,297,
297,297,297,297,297,297,297,297,297,297,297,297,297,297,297,297,
297,297,297,297,297,297,297,297,297,297,297,297,297,297,297,297,
297,297,297,297,297,297,297,297,297,297,297,297,297,297,297,297,
297,297,297,297,297,297,297, };

// Call this function with
//    font: NULL or array length
//    data: NULL or specified size
//    height: STB_FONT_courier_bold_35_usascii_BITMAP_HEIGHT or STB_FONT_courier_bold_35_usascii_BITMAP_HEIGHT_POW2
//    return value: spacing between lines
static void stb_font_courier_bold_35_usascii(stb_fontchar font[STB_FONT_courier_bold_35_usascii_NUM_CHARS],
                unsigned char data[STB_FONT_courier_bold_35_usascii_BITMAP_HEIGHT][STB_FONT_courier_bold_35_usascii_BITMAP_WIDTH],
                int height)
{
    int i,j;
    if (data != 0) {
        unsigned int *bits = stb__courier_bold_35_usascii_pixels;
        unsigned int bitpack = *bits++, numbits = 32;
        for (i=0; i < STB_FONT_courier_bold_35_usascii_BITMAP_WIDTH*height; ++i)
            data[0][i] = 0;  // zero entire bitmap
        for (j=1; j < STB_FONT_courier_bold_35_usascii_BITMAP_HEIGHT-1; ++j) {
            for (i=1; i < STB_FONT_courier_bold_35_usascii_BITMAP_WIDTH-1; ++i) {
                unsigned int value;
                if (numbits==0) bitpack = *bits++, numbits=32;
                value = bitpack & 1;
                bitpack >>= 1, --numbits;
                if (value) {
                    if (numbits < 3) bitpack = *bits++, numbits = 32;
                    data[j][i] = (bitpack & 7) * 0x20 + 0x1f;
                    bitpack >>= 3, numbits -= 3;
                } else {
                    data[j][i] = 0;
                }
            }
        }
    }

    // build font description
    if (font != 0) {
        float recip_width = 1.0f / STB_FONT_courier_bold_35_usascii_BITMAP_WIDTH;
        float recip_height = 1.0f / height;
        for (i=0; i < STB_FONT_courier_bold_35_usascii_NUM_CHARS; ++i) {
            // pad characters so they bilerp from empty space around each character
            font[i].s0 = (stb__courier_bold_35_usascii_s[i]) * recip_width;
            font[i].t0 = (stb__courier_bold_35_usascii_t[i]) * recip_height;
            font[i].s1 = (stb__courier_bold_35_usascii_s[i] + stb__courier_bold_35_usascii_w[i]) * recip_width;
            font[i].t1 = (stb__courier_bold_35_usascii_t[i] + stb__courier_bold_35_usascii_h[i]) * recip_height;
            font[i].x0 = stb__courier_bold_35_usascii_x[i];
            font[i].y0 = stb__courier_bold_35_usascii_y[i];
            font[i].x1 = stb__courier_bold_35_usascii_x[i] + stb__courier_bold_35_usascii_w[i];
            font[i].y1 = stb__courier_bold_35_usascii_y[i] + stb__courier_bold_35_usascii_h[i];
            font[i].advance_int = (stb__courier_bold_35_usascii_a[i]+8)>>4;
            font[i].s0f = (stb__courier_bold_35_usascii_s[i] - 0.5f) * recip_width;
            font[i].t0f = (stb__courier_bold_35_usascii_t[i] - 0.5f) * recip_height;
            font[i].s1f = (stb__courier_bold_35_usascii_s[i] + stb__courier_bold_35_usascii_w[i] + 0.5f) * recip_width;
            font[i].t1f = (stb__courier_bold_35_usascii_t[i] + stb__courier_bold_35_usascii_h[i] + 0.5f) * recip_height;
            font[i].x0f = stb__courier_bold_35_usascii_x[i] - 0.5f;
            font[i].y0f = stb__courier_bold_35_usascii_y[i] - 0.5f;
            font[i].x1f = stb__courier_bold_35_usascii_x[i] + stb__courier_bold_35_usascii_w[i] + 0.5f;
            font[i].y1f = stb__courier_bold_35_usascii_y[i] + stb__courier_bold_35_usascii_h[i] + 0.5f;
            font[i].advance = stb__courier_bold_35_usascii_a[i]/16.0f;
        }
    }
}

#ifndef STB_SOMEFONT_CREATE
#define STB_SOMEFONT_CREATE              stb_font_courier_bold_35_usascii
#define STB_SOMEFONT_BITMAP_WIDTH        STB_FONT_courier_bold_35_usascii_BITMAP_WIDTH
#define STB_SOMEFONT_BITMAP_HEIGHT       STB_FONT_courier_bold_35_usascii_BITMAP_HEIGHT
#define STB_SOMEFONT_BITMAP_HEIGHT_POW2  STB_FONT_courier_bold_35_usascii_BITMAP_HEIGHT_POW2
#define STB_SOMEFONT_FIRST_CHAR          STB_FONT_courier_bold_35_usascii_FIRST_CHAR
#define STB_SOMEFONT_NUM_CHARS           STB_FONT_courier_bold_35_usascii_NUM_CHARS
#define STB_SOMEFONT_LINE_SPACING        STB_FONT_courier_bold_35_usascii_LINE_SPACING
#endif

