// Font generated by stb_font_inl_generator.c (4/1 bpp)
//
// Following instructions show how to use the only included font, whatever it is, in
// a generic way so you can replace it with any other font by changing the include.
// To use multiple fonts, replace STB_SOMEFONT_* below with STB_FONT_times_bold_10_latin_ext_*,
// and separately install each font. Note that the CREATE function call has a
// totally different name; it's just 'stb_font_times_bold_10_latin_ext'.
//
/* // Example usage:

static stb_fontchar fontdata[STB_SOMEFONT_NUM_CHARS];

static void init(void)
{
    // optionally replace both STB_SOMEFONT_BITMAP_HEIGHT with STB_SOMEFONT_BITMAP_HEIGHT_POW2
    static unsigned char fontpixels[STB_SOMEFONT_BITMAP_HEIGHT][STB_SOMEFONT_BITMAP_WIDTH];
    STB_SOMEFONT_CREATE(fontdata, fontpixels, STB_SOMEFONT_BITMAP_HEIGHT);
    ... create texture ...
    // for best results rendering 1:1 pixels texels, use nearest-neighbor sampling
    // if allowed to scale up, use bilerp
}

// This function positions characters on integer coordinates, and assumes 1:1 texels to pixels
// Appropriate if nearest-neighbor sampling is used
static void draw_string_integer(int x, int y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0, cd->t0); glVertex2i(x + cd->x0, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t0); glVertex2i(x + cd->x1, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t1); glVertex2i(x + cd->x1, y + cd->y1);
        glTexCoord2f(cd->s0, cd->t1); glVertex2i(x + cd->x0, y + cd->y1);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance_int;
    }
    glEnd();
}

// This function positions characters on float coordinates, and doesn't require 1:1 texels to pixels
// Appropriate if bilinear filtering is used
static void draw_string_float(float x, float y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0f, cd->t0f); glVertex2f(x + cd->x0f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t0f); glVertex2f(x + cd->x1f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t1f); glVertex2f(x + cd->x1f, y + cd->y1f);
        glTexCoord2f(cd->s0f, cd->t1f); glVertex2f(x + cd->x0f, y + cd->y1f);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance;
    }
    glEnd();
}
*/

#ifndef STB_FONTCHAR__TYPEDEF
#define STB_FONTCHAR__TYPEDEF
typedef struct
{
    // coordinates if using integer positioning
    float s0,t0,s1,t1;
    signed short x0,y0,x1,y1;
    int   advance_int;
    // coordinates if using floating positioning
    float s0f,t0f,s1f,t1f;
    float x0f,y0f,x1f,y1f;
    float advance;
} stb_fontchar;
#endif

#define STB_FONT_times_bold_10_latin_ext_BITMAP_WIDTH         256
#define STB_FONT_times_bold_10_latin_ext_BITMAP_HEIGHT         82
#define STB_FONT_times_bold_10_latin_ext_BITMAP_HEIGHT_POW2   128

#define STB_FONT_times_bold_10_latin_ext_FIRST_CHAR            32
#define STB_FONT_times_bold_10_latin_ext_NUM_CHARS            560

#define STB_FONT_times_bold_10_latin_ext_LINE_SPACING           6

static unsigned int stb__times_bold_10_latin_ext_pixels[]={
    0x00008800,0x02201100,0x00000000,0x0000000c,0x00000000,0x0000c000,
    0x01101802,0x80000000,0x30000000,0x9012a003,0xab816403,0x01601d04,
    0x5c0a2059,0x5404983a,0xf301c02d,0x5c072e03,0xe80ab203,0x2a075700,
    0x405b500f,0x2a02aa03,0xe82ec42d,0x2e055900,0xd103b04a,0xcc886987,
    0x0c859300,0x200c12ea,0x09806021,0x00a20510,0x4404d405,0x2009a80c,
    0x804d4031,0x8026a052,0x08812201,0x19403220,0x07dc0630,0x10630288,
    0x4c011022,0x02806404,0x18188313,0x26e0ec03,0x2b260dc3,0x65d6541a,
    0x986ab260,0x4d41914f,0xd980aa80,0x453e65aa,0x2395710c,0x2e1914f9,
    0x2714f99f,0x4c1914f9,0x53e61aac,0x229f30c8,0x3229f30c,0x83229f30,
    0x3e61aac9,0x56cc1914,0x4c3fa85a,0x2e21914f,0x437a21ca,0x7cc934f9,
    0xaad98934,0x9872ae25,0x8d51dbab,0xfb81aac9,0xf98e2e23,0x87c47e24,
    0x221f51f9,0x17c1f11f,0x09103985,0x8be143f1,0x5f0c56a2,0x9b64fe14,
    0x3e228be0,0x517c1f11,0x45f0a2f8,0x7c4517c2,0x517c1f11,0x91850fc4,
    0xb5145f0d,0xfd89d062,0x452fd852,0x15a8a1f8,0x2a330fc3,0x07c47e26,
    0x87ef51e6,0x27f1ee3f,0x73f998fb,0x28be3f8f,0x3ee13326,0x8be03dc0,
    0x5f07be62,0x4fe5b214,0x3dc517c2,0xf0a2f8fe,0x428be145,0x7c7b8a2f,
    0x1ee28be3,0xf85f3350,0x81ef98a2,0x14fe544e,0x7b8a7f2a,0x7a87be60,
    0x7c7b9aa0,0x7de62dc3,0x7c7b8fe1,0x53e31f73,0x45f1fc7b,0x2a1b2a22,
    0x3e03dc3f,0x45fb10a2,0x17f30a2f,0x8a2f839d,0x45f1fc7b,0x2f8517c2,
    0xf7145f0a,0x228be3f8,0x744ee07b,0x4428be0e,0x4a2742fd,0x2ed942ed,
    0x5fb101ee,0xf72ca9ee,0xd87f1ee1,0x3e1fbcc3,0x8fc47e23,0x223f12f9,
    0x1f43f11f,0x4635ecc5,0x810fcc6c,0x8f238a3e,0x5d760a3e,0xf88a3e87,
    0x51f43f11,0x47d0a3e8,0x7c451f42,0x51f43f11,0x54010fcc,0x91c51f40,
    0x250fa727,0x3e8943e8,0xc8e087e6,0x47e63f33,0x7c47e21a,0x2fe20ec1,
    0x3730fe2f,0x2c9cc835,0x2a0d4dcc,0x75f5c2ae,0x50be66a0,0xaea8555b,
    0x505ce5c2,0x446a055d,0x982aea84,0x57541a9b,0xa82aea82,0x2aea82ae,
    0x541a9b98,0xaada82ae,0xea832e02,0x85ce5c2a,0x89261eab,0x54389263,
    0x272e2aad,0x3aa76a0b,0x4dcc1b50,0x3001641a,0x0104009f,0x2e000800,
    0x0101dd13,0x00802008,0x80001000,0x00200400,0x40080001,0x10040000,
    0x10000000,0x00010040,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x94060088,
    0x81800cc2,0x001b14f9,0x00003000,0x510015e4,0x16640035,0x1b5bf300,
    0xeebc8600,0x8000004b,0x000003aa,0x02000000,0xd1044000,0x640bb881,
    0x982db81d,0x5402441f,0x40147f04,0x5415642a,0x5e42542d,0x2b205101,
    0x220d5443,0x4c0a883e,0x88bf8131,0xe882ee20,0x31057630,0x4b1065cc,
    0x0b81cab8,0xa82cac98,0x45982a9a,0x4c156419,0x0edd64c3,0xd703a03e,
    0x4c2a804c,0x70318152,0x4039b873,0x2628fe01,0x9303b14f,0x54060c60,
    0x1914f983,0x4f9863a6,0x98a26191,0x8661914f,0x2a8267c5,0x217617dc,
    0x50e82b85,0xbab9862b,0x3e23f11d,0x428842e0,0x1260cc18,0x1987e164,
    0x540220a2,0xb31fdad9,0x5dee3fb5,0x43629f50,0x22e238b8,0x36b7b203,
    0x17c28fe1,0x43d41c05,0x2f3e64f9,0xdb0a2f84,0xf98a2f83,0x0cc517c4,
    0x32267c39,0x0f34beeb,0x3e6498bb,0xf99a0dad,0x2330fc1e,0xb189fc7b,
    0x56cc51f5,0x33e6330e,0xf51dc0db,0xf987c401,0x88c20dbc,0x227c464f,
    0x19b6c1af,0xf7a8fdea,0x2233aa03,0x17c28fa0,0xf303ee05,0x97c3f811,
    0x5c517c5d,0x8517c6a9,0x40517c3f,0x1942fe3c,0x6c3cc2bb,0x22fe25c5,
    0xfd88a608,0x23dc0f52,0x5ab2e73f,0x199a72e1,0x171274be,0xf85953dc,
    0x90274be0,0x3ae1b20d,0x26157c40,0x0fde63f7,0xda84de94,0x40a2f82a,
    0x7d7cc3fa,0x325f0fe0,0x754517c7,0xf8517c48,0x640517c3,0x85b5bf33,
    0xd107c45d,0x33e25c1d,0x9e471b84,0x7c4b2a7b,0x56ca1f31,0x0de4433d,
    0x0fcd7c33,0xf31f886e,0x26be0f83,0x305f301f,0x320b105f,0x31fbcc0f,
    0xd35307ef,0x3e82409b,0x2636460a,0x3e1fc3d7,0x0a3e8f92,0x0a3e85f5,
    0x98a3e87f,0x20660361,0x41a8385d,0x34267c58,0x3e617397,0x564c3f31,
    0x5de6542c,0x98ab2a09,0x2e13f3e1,0x06d564c3,0x44fcf83e,0xbd14bd69,
    0xf7018894,0x225f7f10,0x9d142fbf,0x2a0b6061,0xf33504ae,0x3e2ebcc5,
    0x545e97c3,0x2cd442ae,0x0fe0abaa,0x219855d5,0x5d81b504,0x240c40a8,
    0x81b142fe,0x0ea9da84,0x088284e8,0x0cc7b366,0x2c83f55f,0xf83e2090,
    0x2f621faa,0x7f75cabf,0x440eeb95,0xc80001fc,0x0595bd12,0x44ee0100,
    0x7f1f50ee,0xccf993e6,0x2ae0100c,0x09f30102,0x000c6602,0x00003ba2,
    0x4b6b7e63,0x01014439,0x4cc0bb88,0x1cd54199,0x7e53e633,0x441c0e20,
    0x7e53e64c,0x000000a0,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0xb0016200,0x2e000001,0x5550003b,
    0x00a72000,0x00cf9800,0x000126e0,0x00011018,0x0440f2a0,0x86057900,
    0xf3000008,0x18989269,0x22073000,0x8000b800,0x40501d02,0x500ec02c,
    0x55500e80,0x45403ae0,0x85aad981,0x6883f80d,0x17603130,0x20b6a0d1,
    0x2165c1dc,0x20353039,0x4c24f41c,0xd53da80a,0x75a61a20,0xf514bf61,
    0x40d5707e,0x2249b818,0xf982a2fd,0x2b662c8b,0x5730225a,0x180503b7,
    0x10355930,0x06ab2603,0x29f3062a,0x143f10c8,0x4c1fc0c4,0x41aac980,
    0x404c0998,0x88113031,0xac982882,0x4266661a,0x53e61319,0xea8ccc49,
    0x54404c08,0x14fe5428,0xb1f07ef3,0x43fb5b30,0xf34c8418,0x11f14f89,
    0xf8d7143f,0x2a0e0661,0x3e21b14f,0x10701f11,0x0e03e23f,0x03dc517c,
    0x7c1b5bf3,0x436b7e63,0x261f11f8,0x9f30dadf,0x8fe467cc,0x5b30ead9,
    0x43b3661d,0x2e1f11f8,0x05dee177,0x1f10a5fb,0x7cc7efea,0x21fb540c,
    0xfbcc5db2,0x462aafc1,0x12b624f8,0x3e1fc3d3,0xa81eebe3,0x3ee01ea6,
    0x5c336d80,0x03ee1fc7,0x7dc3f8f7,0x7b8a2f80,0xf0445fc0,0x7088bf87,
    0x22fe3f8f,0x27f0fe08,0xb9a72e7a,0x9a76a69c,0x35f1fc7b,0x7e541af8,
    0x2d50f829,0x5aa0fe3d,0x11f44a1f,0x27227f5f,0x46c80baf,0x3620f8cb,
    0x7c7f0fe6,0xb9aa07ba,0x7f50b2a7,0x7b855f10,0x70fea1fc,0x1fd43f8f,
    0x0fcc517c,0x7cc4cf81,0xf7133e0c,0x2133e3f8,0x3dce7c3f,0x5e443791,
    0x8f70de41,0xd703ae3f,0xf05db281,0x7f1edaa1,0x24c7ed50,0xb5c71071,
    0x42f983fb,0x258878cb,0x7c45fc3f,0x6a821f98,0x30fcc7e6,0x207e41b2,
    0x8c3f11f8,0xf88fc46c,0x1f436461,0x42aada85,0xcf8484cf,0x1f88fc44,
    0xf0fe133e,0x5654f739,0xd98ab2a2,0x7c47e22a,0x21621621,0x21f07d12,
    0x0fe0ebfa,0x5107e3ee,0xee98ec40,0x52f44fcb,0x9cd8eb22,0xbcf98fe1,
    0x8aab6a3c,0x754ed46a,0x20be66a0,0x3537307b,0x4c2f99a8,0x4cd41a9b,
    0x0157542f,0xb142fe09,0x4c50bf85,0x85fc1a9b,0x2a7f0fe2,0x4c7b3667,
    0xd9b11ecd,0x10d4dcc3,0x4c188831,0x21f10e24,0x2147f06a,0x001441f8,
    0x957f7004,0x09f3000b,0x01f70100,0x3ba27701,0x0007f220,0x003ba277,
    0x80ee89dc,0x3e60e200,0x3e602dad,0xf3002dad,0x93e65b5b,0x51fc8cf9,
    0x1cd54735,0x5c005355,0x88003b83,0xf303ee4c,0x04c8795b,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x98000000,0x801080cf,0x02235c03,0x44022021,0xa8739007,0x0aa9804b,
    0x4c1b79f3,0x000000bd,0x40400000,0x0440c408,0x10000084,0x02020102,
    0x64400ea0,0x5440880b,0x8180000a,0x4c39903f,0x2543bcab,0x2e0dd8d5,
    0x83e25848,0x22607326,0x0dc40981,0xe97c1553,0xac886624,0x550af224,
    0x44eb8355,0x0eadfab9,0x221c4736,0x6e415c4d,0x7c6264c1,0xb032eb62,
    0x88f2a219,0x4a8a62bc,0x40cc8088,0x444b9819,0x11e5c0aa,0x41898997,
    0x7c47103f,0x54301f11,0x64426226,0xf88620c9,0x4fa831a0,0xd13e61b1,
    0x57c4f981,0xb93e61f9,0x33ce64f6,0x221555b3,0x6c7e2189,0x77b3088c,
    0x15062212,0x0454cccc,0x14c74437,0xb8a62dc3,0x8ef6e1ab,0x5bf30c43,
    0xbf30c41b,0x8a2a21b5,0x310dadf9,0x13d5cc33,0x883f8353,0x3f8f73cc,
    0x1354f322,0x36b6a799,0x22c79910,0x6d895b16,0x3aa3f833,0x33e1fc2c,
    0x3e23f84f,0x43e36e2e,0xbd4ab3d2,0x3761f71f,0x81a8cd84,0xb92ea4ba,
    0x750aaf8e,0x310d7dc9,0x3221f733,0x5b8bf32b,0xf8af2248,0x5791088b,
    0x7a8445fc,0x8445fc3f,0x21c83f7a,0x51fc3f7a,0x23dc232e,0x54232e3f,
    0x6d4232e6,0x411970cb,0x0f8cbb42,0x8fe0abe2,0x0fe0f9dc,0x3f83f55f,
    0xcc89bf22,0x329674a6,0xbb3dc7ef,0x25c5c409,0x217dc5f7,0x3ee1ddaf,
    0x27ee1e62,0x77b70fb9,0x39d137cc,0x23bdb8a2,0x1dedc4cf,0x3f79899f,
    0x7de6267c,0x8fde60c1,0xd73cadf9,0x43f11f88,0x6b87dc6b,0x6b855d54,
    0x78cbb418,0x23f80fc8,0x8fe0f8db,0x7c1f94f9,0x903eaf23,0x564eccc5,
    0x7cc7ef30,0x520619b1,0x1f711dcb,0x9dc83ee2,0x4c3ee21f,0xb96e7887,
    0x2a0eb845,0xf85b82e0,0x67c2dc4c,0x3e1fbcc4,0x21fbcc4c,0x41fbcc08,
    0x30ef441a,0xde883957,0x8ef44511,0x8ef4448b,0x5645a0f8,0x47f07b83,
    0x41fc4ad8,0x64c7f038,0x2a0aa249,0x2fe21aaa,0x3beb2a2f,0xc98d42da,
    0x55cb570d,0x55c594c5,0x32a03e25,0x473a21ba,0x86d43cab,0x7f0e7444,
    0xf0e744a1,0x7dfc4a17,0xf8942fe2,0xf116e2fb,0x001a85f7,0x100a2000,
    0x01220002,0x9f307f22,0x7109f300,0x00009f30,0x81000000,0x00000000,
    0x400c0000,0xdadf9800,0x36b7e602,0x6d6fcc02,0x00000002,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x08404400,0x800aae00,0x83d41aa8,0x003d14f9,
    0x40880c00,0x00010008,0x08804400,0x0000000c,0x00f2e044,0x40306022,
    0x01880008,0x11008800,0x3ba60018,0x9993111c,0x16641cc8,0x42bc8144,
    0x9bcc1aa8,0x22029fc0,0x16762faf,0x983b05b7,0x0cbaca84,0x5d16ab66,
    0x6e42ed87,0x41dc0d80,0x5d41aaaa,0x0edd5cc0,0x44737036,0xb31762bd,
    0x301b02b8,0x09a83559,0x0bb62574,0xa81b03b9,0x3fa69e83,0x32a36e2e,
    0x01441cc6,0x20f1b507,0xf8197983,0x2ba2205c,0x44313129,0x8666228a,
    0x47e61998,0x143f10fa,0x08881804,0x4cc280c4,0x3260ab9a,0x44330fc1,
    0x041c5c42,0x40441111,0x7c418981,0x41cc1f11,0x89818808,0x21440c40,
    0x3bfa1f69,0x266bd982,0x133264cc,0xf19903ee,0x7cc0fb81,0x85fcf81c,
    0x2a1afae8,0x8fdea3f7,0x7dea3f7a,0x7f331f71,0x4ad881ee,0xad892b62,
    0xd892b624,0x25126a4a,0x81ea6ac8,0x7dea6ad8,0x32257911,0x2257912b,
    0x3d7932bc,0x4cfe3dcb,0x933264cc,0x33264cc9,0xc9933264,0xa967a64c,
    0xebeb82ef,0x544d9510,0x643fa86c,0x1fd40f8c,0x2fe1afe6,0x2eadc3f9,
    0x2f31fbcc,0x4c7ef31f,0x463ee3f7,0x65c0f74f,0x1f1970f8,0x65c3e32e,
    0x1f1970f8,0x32e512aa,0x654f70f8,0x261f5b72,0x4ef6e3f7,0x77b73bdb,
    0x5d44ef6e,0xf8f70d9f,0x544d9513,0x89b2a26c,0x9b2a26ca,0x6da66ca8,
    0x4c1115c3,0xd99af661,0x5c6c8c6b,0x46c8c78d,0x3e64e8fa,0xeadc7fb4,
    0xf31fbcc2,0x31fbcc7e,0x897cc7ef,0x7043f31f,0x3c65cf19,0x465cf197,
    0x999e32e7,0x1990a99b,0x1f98fccf,0x5e61f1d7,0x45b8b71f,0x3222dc5b,
    0x88fc40f9,0x4cd7b31f,0x9af666bd,0x2f666bd9,0x699af666,0x8722b87b,
    0x1d7d70da,0x9a83afae,0x0af622f9,0x0705f335,0x7f7d1038,0xf12fbf88,
    0x3efe25f7,0x645f7f12,0x56d42c9c,0x88eb222a,0x8eb223ac,0x2b223ac8,
    0x10d55543,0xa9da875b,0x4495b50e,0x39d12fbf,0x674473a2,0x3ae39d11,
    0x4dcc3eda,0x43afae1a,0x7d70ebeb,0x43afae1d,0x7d70ebeb,0x0333ae1d,
    0x00000457,0x007744ee,0x107744ee,0x0001c407,0x20800000,0x00000400,
    0x00000000,0x00000002,0x00000000,0x00000000,0x00000ae0,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x07ce6000,0x89350af2,0x00010810,0x020a20a0,0x004014e4,0xbb881002,
    0x510440c1,0x4411005f,0x80010810,0x08401bb9,0x77104220,0x00010105,
    0x43031020,0x04410108,0x82101080,0x54c3ce61,0x332144c0,0x2ee1e5c1,
    0x3072ae25,0x04815503,0x10d88315,0x44532c47,0x13310e25,0x5106c3a8,
    0x06c2cc5d,0x6541f7f5,0x98803e63,0xcc8bb609,0x57cc7321,0xb102a60f,
    0x233e6788,0x44d5d72f,0x983723bc,0xcd96fe64,0x4eb89750,0x33207da6,
    0x20f01d30,0x1c44f983,0x53f06e62,0x2f618ad4,0x00b84885,0x34243607,
    0x3e624d09,0x88620dad,0x447eba21,0x41311098,0x2e223d79,0x44084540,
    0x730621ac,0x8f5e2188,0x226249c8,0x94cbe040,0x0465c969,0x88462113,
    0x5426a20f,0x9822222f,0x85d441f6,0xfb8781fb,0x2b623f80,0xfa8fdea4,
    0x987be60c,0x40fb81ad,0x540fb828,0xbb441a8a,0xf81ab440,0xa9aa088b,
    0x9a8f52e6,0x21f7f53e,0x2fea3d79,0x1ee7460f,0x235477b7,0x2f13546a,
    0x21f1971e,0x3e0c3e9a,0x70474c32,0x5fccd50b,0x5bf98f15,0x2fea1f71,
    0xa87ed30f,0xf03f73e9,0x47f07f50,0x2f30f8cb,0x8817b11f,0x201f52fd,
    0xfa8483fa,0x306e7103,0x73883b55,0x34c267c3,0x21eadcd3,0xa8f5e66b,
    0x3af32f8f,0x2e4bae81,0x234c6985,0x47a3ea69,0x135c78cb,0x6982f81b,
    0x9a61ce88,0x883ea0f8,0x7996ae0f,0x0fafea3d,0x47834cd7,0x5c7f0d91,
    0x8fde678c,0x64708ad8,0x323077a3,0x06c8c386,0x5c907269,0x3e1c9a40,
    0x9a66984c,0x5f12fbd8,0x0e0f5e61,0x2ba07af3,0x9873624b,0x21a634c6,
    0x475911e8,0x96d50af8,0x8834ca2f,0x30f134c3,0x305c3c43,0x880dc7af,
    0xf01d10af,0x7c2f99a8,0xf88eb223,0x4df972fb,0x4060b9cb,0x14c2f99a,
    0x1a85f335,0xc985c7d7,0xf1f5c6a1,0x70fb8a17,0x4aec801f,0x1c45f1f5,
    0xd10be3ea,0x1f700b97,0x81f707dc,0x4aec805c,0x37e655b1,0x301f73ca,
    0x1f50fb85,0x503ea1a8,0xb97c7d41,0x0095d901,0x7744ee19,0x00009f30,
    0x9dc02040,0x3b840ee8,0x02041dd1,0x08104c41,0x00b6b7e6,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x02000000,0x10001101,0xf30de882,0x20003269,0x811111f8,0x11044221,
    0x20888882,0x376c8008,0x18084408,0x220f535c,0x3ea08888,0x303d4775,
    0xb837e29f,0x00aee23b,0x86c4bee0,0x001914f9,0x267ee080,0x3fec714f,
    0xa82110d5,0x21f10fff,0x1d5b30f8,0x3d3b1070,0x197e44d8,0x447791a6,
    0x1d7f51e8,0xbfbd43a2,0x2047ef53,0x665c9750,0x4431f10c,0x41dee49c,
    0x22f334c3,0x0abe3ae0,0x179851f7,0x223e8be0,0x1054c299,0xd1d7439b,
    0x228be0c9,0x0bfa26b8,0x5b27f12a,0x4c115109,0x2a3bdc16,0xb8204599,
    0x40fa869c,0x44d83d5b,0x86219fc9,0x3eba20f8,0x7dcf6d31,0x798bef31,
    0x3ea1023f,0x2fa1c2e2,0xf83e32e1,0x46726619,0x2065e669,0x6e81ccaf,
    0xf80faf98,0x3f7a8fa2,0x86a92f26,0xf82bdc08,0x44cd50a2,0x3226c45d,
    0x7dc33f96,0x87abe62e,0x0c38819f,0xa81ac88a,0x41eadc3f,0x22ed8c4d,
    0x4b87e66a,0x99eda63d,0xf30fde66,0x5c42047e,0xca8e170f,0x8f1970ae,
    0x2b6a60eb,0x0dfccd31,0x5407cee4,0x81ebcc3f,0xf798fa2f,0x6a972a23,
    0x157c46a8,0x8698517c,0x2226542c,0x4c1ce8af,0x71eda66c,0x7cc1701d,
    0x41bca961,0xfad88d91,0x1187d391,0x71e34c7d,0x757cc7ab,0x7d7c4d30,
    0x04befe22,0x9972d5c2,0x42bf2a1b,0x22443ac8,0x4d309c98,0xb2986bf9,
    0x4c1f7130,0x195f03d7,0x31fbcc7d,0x4c354b5b,0x47d06c86,0x2e1c34c2,
    0xf75d85d9,0x8f6d32c0,0x21309058,0x3d9b30f8,0xe817d4d4,0x24c3d571,
    0x11e34c71,0x21a65f7b,0x260000e8,0x90001888,0x5540001f,0x2a1f72aa,
    0x2a004e8f,0xf50ef88d,0xccf885f1,0x3efe20ea,0x2a1d7d52,0x03986986,
    0x8d3055d5,0x3bb2e28b,0x5c489540,0x967661ad,0x41071030,0x453750e8,
    0x881dd13b,0x7dc0002e,0xd7003f30,0x00000001,0x00000000,0x00000000,
    0x2e000000,0x0007dc0e,0xf50fb804,0x000990df,0x003b8100,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0xc8000000,
    0x9f34beeb,0x3e6083b5,0x108083cc,0x0cf98110,0x6f98035c,0x764033e6,
    0x79f30dad,0x1fdad989,0x5c3629f5,0x412f3e66,0xe8a7cc50,0x12bbaf21,
    0x0dbcf983,0xf5040fe6,0x0085fb5b,0x42019f30,0x86d67cc0,0x3e65ccf9,
    0x3f233e64,0xb8819f31,0xf983f72b,0x0aec24bc,0xac8844fe,0x443e6be1,
    0x3d7933bc,0x3e25e4cb,0xb8834c0a,0x1f547ee4,0x41119b50,0xf88cbb2f,
    0x2608b6c4,0x225d97c6,0x29fc3dad,0x0702bb18,0x79f0fa5f,0xbf887c43,
    0xd3b10fb9,0x417c05dc,0x7c5ae9d8,0x22be088a,0x25f0be2f,0xa9817c7a,
    0x2f813f50,0x2177549b,0x1dedc3cf,0x465cb97f,0x1b3f7510,0x09f172a2,
    0x2f2631d3,0x74c674c0,0x31376503,0xd90f739f,0xf9855f10,0x4f739f30,
    0x67c0f8cb,0x2662ec05,0x3e6be19c,0x023d57c1,0x65cf939f,0xf165c0fa,
    0xb5f19905,0x67c267c1,0x33e17c4c,0x0c57c7c9,0x0faf99aa,0x1763dcbe,
    0xf0b7133e,0x6445b839,0x2d6cc0f9,0x33d305f1,0xf5302f26,0x26a20fa7,
    0xf72f83ce,0xfc817cc1,0x5cbe35c0,0xf0f1970f,0x22ec0bd9,0x33e2ada9,
    0x47aaf84f,0x73dc5fc1,0x2ca81f1b,0x3e32e0be,0xaf84bf81,0x7f0be1f9,
    0x19af8f71,0x87af334c,0x85d8f72f,0x0e6c40bf,0x239d105f,0x2a3edaea,
    0x45f10ebe,0x8ee20d32,0x8a0fa7f1,0xd97c30cd,0x7a852f45,0x5d97c698,
    0x2fe0eb22,0x20bb03f9,0x41faaf83,0x83e21bcf,0x56ccf52f,0x8be072e4,
    0x85db5712,0xe97c50af,0x2a5f0be3,0x34c517c7,0xb2f87af3,0xf107744b,
    0x013e2009,0x59f10000,0x2003ee79,0x89f11749,0x595bd12c,0xb832f3e6,
    0x7e44cabf,0xcf987dc0,0x9f1000cb,0x1dd10ff6,0xd94f9830,0x2200fe21,
    0x001fc8cf,0x0795bf30,0x4b6b7e20,0xf10cbcf9,0x7e467c49,0x4795bf31,
    0x5f1f50fb,0x0032f3e6,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x11000000,0x42222002,0x20000888,
    0x84220108,0x10444440,0x02400001,0x01a9c400,0x026665c0,0xccb80811,
    0x400aea6c,0x0002bbbb,0x00000000,0x00000000,0xbfa80000,0x542e2e0f,
    0x475f33e9,0x20e80b8a,0x4cb15bf9,0x264cbeaf,0x11aa0c8f,0x1d50d889,
    0x55466666,0x0ddc9952,0x0fbc4795,0x2eeeeb3b,0x65493243,0x554702ad,
    0x00aeeee2,0x00000000,0x00000000,0x00000000,0x55d47af3,0x11b235c3,
    0x24d41b1b,0x5e2681f1,0x2fe26aad,0x977334c1,0xaa98e0d8,0x5529191a,
    0x1e545751,0x3880035a,0x0000c104,0x00000000,0x00000000,0x00000000,
    0x47af3000,0x2be24aca,0x8d887e60,0x788d5225,0x2b6f1344,0x31afe26a,
    0x2aa1ac8d,0x44483b70,0x4cc79309,0x5286a711,0x00000000,0x00000000,
    0x00000000,0x00000000,0x8fa80000,0x642a2a2f,0x1d9734ae,0x7d40054a,
    0x7d1f5040,0x2747d4d7,0x400841f7,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,
};

static signed short stb__times_bold_10_latin_ext_x[560]={ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,0,0,0,0,0,0,0,0,0,0,
-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,-1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,-1,0,-1,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,-1,0,-1,0,-1,0,0,0,0,0,0,0,-1,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,-1,1,1,1,
1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,-1,0,
0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,0,0,-1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1, };
static signed short stb__times_bold_10_latin_ext_y[560]={ 8,1,1,1,1,1,1,1,1,1,1,2,6,5,
6,1,1,1,1,1,1,2,1,2,1,1,3,3,2,4,2,1,1,1,2,1,2,2,2,1,2,2,2,2,
2,2,2,1,2,1,2,1,2,2,2,2,2,2,2,2,1,2,1,9,1,3,2,3,2,3,1,3,2,1,
1,2,2,3,3,3,3,3,3,3,2,3,3,3,3,3,3,1,1,1,4,2,2,2,2,2,2,2,2,2,
2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,8,3,2,1,2,2,
1,1,1,1,1,3,4,5,1,0,1,2,1,1,1,3,2,4,7,1,1,3,1,1,1,3,-1,-1,-1,0,
0,0,2,1,-1,-1,-1,0,-1,-1,-1,0,2,0,-1,-1,-1,0,0,3,1,-1,-1,-1,0,-1,2,1,1,1,
1,1,1,1,3,3,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,3,3,1,1,1,1,1,1,1,
0,2,0,1,1,3,-1,1,-1,1,0,1,-1,1,-1,1,2,2,0,2,0,1,0,1,2,3,-1,1,-1,1,
0,1,0,1,1,1,-1,-1,2,2,0,1,0,2,0,1,2,1,0,3,2,1,-1,1,2,2,3,-1,-1,2,
2,1,1,2,2,2,2,-1,1,2,3,-1,1,1,1,3,0,2,0,1,-1,1,1,3,-1,1,2,3,-1,1,
-1,1,-1,1,1,3,-1,1,2,2,-1,1,2,2,0,1,0,2,0,1,-1,1,-1,1,2,3,-1,1,-1,1,
0,-1,1,0,1,-1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,2,2,1,2,2,2,
2,2,2,2,2,2,2,2,2,2,1,3,2,2,2,2,2,2,2,2,2,2,2,2,2,0,3,2,2,2,
2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,-1,1,-1,1,-1,
1,-1,1,-1,1,-1,0,-1,0,-1,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,
2,2,2,2,2,2,2,2,2,2,-2,-1,-1,1,-1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,
2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,
2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,
2,2,2,2,2,2, };
static unsigned short stb__times_bold_10_latin_ext_w[560]={ 0,3,5,5,5,9,8,2,3,3,5,5,2,3,
2,3,5,4,5,4,5,5,5,5,5,5,3,3,5,6,5,5,9,7,6,7,7,6,6,7,7,4,5,8,
6,9,7,7,6,7,7,5,6,7,7,9,7,7,6,3,3,3,5,6,3,5,5,4,5,4,4,5,5,3,
4,6,3,8,5,5,5,5,4,4,3,5,5,7,5,5,4,4,2,3,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,3,5,5,5,5,
2,5,3,7,3,5,6,3,7,6,4,5,3,3,2,6,5,2,3,3,3,5,7,7,7,4,7,7,7,7,
7,7,10,7,6,6,6,6,4,4,4,4,7,7,7,7,7,7,7,5,7,7,7,7,7,7,6,5,5,5,
5,5,5,5,7,4,4,4,4,4,4,3,4,4,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
7,5,7,5,7,5,7,4,7,4,7,4,7,4,7,7,7,5,6,4,6,4,6,4,6,4,6,4,7,5,
7,5,7,5,7,5,7,5,7,5,4,4,4,4,4,4,4,3,4,3,8,5,5,4,8,6,6,6,3,6,
3,6,5,6,4,6,3,7,5,7,5,7,5,8,7,5,7,5,7,5,7,5,9,7,7,4,7,4,7,4,
5,4,5,4,5,4,5,4,6,3,6,5,6,3,7,5,7,5,7,5,7,5,7,5,7,5,9,7,7,5,
7,6,4,6,4,6,4,4,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,7,5,5,6,5,5,5,
5,5,5,5,5,5,5,5,5,5,8,6,5,5,5,5,5,5,5,5,5,5,5,5,5,8,6,5,5,5,
5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,7,5,4,4,7,
5,7,5,7,5,7,5,7,5,7,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5,5,5,5,5,7,5,10,7,7,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5, };
static unsigned short stb__times_bold_10_latin_ext_h[560]={ 0,8,4,8,8,8,8,4,9,9,5,6,4,2,
3,8,8,7,7,8,7,7,8,7,8,8,6,7,6,3,6,8,9,7,6,8,6,6,6,8,6,6,7,6,
6,6,7,8,6,9,6,8,6,7,7,7,6,6,6,8,8,8,5,1,3,6,7,6,7,6,7,7,6,7,
9,6,6,5,5,6,7,7,5,6,7,6,6,6,5,7,5,9,9,9,3,6,6,6,6,6,6,6,6,6,
6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,0,7,8,8,6,6,
9,9,3,8,4,5,3,2,8,2,4,6,5,5,3,7,8,2,3,5,4,5,8,8,8,7,9,9,9,8,
8,8,6,9,9,9,9,8,9,9,9,8,6,9,10,10,10,9,9,4,8,10,10,10,9,9,6,8,8,8,
8,8,8,8,6,7,8,8,8,8,7,7,7,7,8,7,8,8,8,8,8,4,6,8,8,8,8,9,9,9,
8,7,8,8,10,8,10,8,10,8,9,8,10,8,9,8,6,7,8,7,8,8,8,8,9,8,9,8,10,9,
9,9,9,9,9,9,9,9,6,6,8,7,8,6,8,7,9,10,8,5,7,9,10,9,8,8,5,9,9,8,
8,7,7,6,6,6,6,10,7,8,7,10,7,7,8,7,9,7,9,8,10,8,8,6,9,7,8,7,9,7,
10,8,10,8,9,7,10,8,9,9,9,8,6,7,9,8,9,7,9,8,10,8,10,8,9,8,10,8,9,9,
8,9,7,8,7,9,7,7,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,8,6,6,9,6,6,6,
6,6,6,6,6,6,6,6,6,6,8,6,6,6,6,6,6,6,6,6,6,6,6,6,6,9,6,6,6,6,
6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,9,8,9,7,10,
8,10,8,10,8,10,9,10,9,10,9,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,
6,6,6,6,6,6,6,6,6,6,10,10,9,8,10,8,6,6,6,6,6,6,6,6,6,6,6,6,6,6,
6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,
6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,
6,6,6,6,6,6, };
static unsigned short stb__times_bold_10_latin_ext_s[560]={ 255,248,104,237,132,80,216,253,163,134,65,
143,253,142,253,143,27,48,53,238,59,75,20,93,44,50,164,99,58,114,182,
190,200,113,210,97,248,203,8,149,222,217,127,127,188,64,133,197,20,192,149,
36,136,40,32,65,239,100,93,1,56,252,30,153,125,40,81,27,150,15,145,
107,247,141,240,224,220,45,1,202,156,121,36,185,162,173,208,231,18,87,13,
227,216,174,129,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,
179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,255,103,42,
30,190,196,131,104,110,135,94,7,135,142,56,146,89,214,75,71,253,237,247,
253,121,41,85,24,84,76,68,183,21,45,61,5,60,48,74,77,85,97,112,
92,119,83,118,13,85,170,1,17,95,150,104,98,89,111,127,143,69,29,157,
241,235,229,223,217,211,205,32,201,184,179,174,169,99,104,206,27,143,231,129,
123,117,111,105,79,176,83,77,71,65,158,183,164,33,16,19,13,159,1,47,
243,151,232,1,223,203,209,88,57,112,108,177,146,164,159,152,147,138,138,167,
127,217,132,184,138,13,210,232,144,124,77,168,242,39,151,26,237,15,161,92,
225,243,61,1,196,181,178,48,41,54,189,9,202,228,188,195,230,53,46,108,
187,119,202,125,195,131,137,248,166,53,172,37,1,229,232,70,195,245,211,31,
216,219,221,211,95,175,90,178,226,63,108,156,152,145,113,1,249,123,64,110,
10,96,184,167,196,25,171,52,210,77,100,21,15,7,1,178,225,114,8,244,
22,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,119,179,179,237,
179,179,179,179,179,179,179,179,179,179,179,179,179,214,120,179,179,179,179,179,
179,179,179,179,179,179,179,179,60,166,179,179,179,179,179,179,179,179,179,179,
179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,69,7,
250,156,135,18,119,24,103,163,87,244,69,29,55,35,179,179,179,179,179,179,
179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,
179,179,179,39,33,41,189,9,157,179,179,179,179,179,179,179,179,179,179,179,
179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,
179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,
179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,
179,179,179,179,179,179,179,179,179, };
static unsigned short stb__times_bold_10_latin_ext_t[560]={ 1,31,74,31,32,32,22,17,12,12,74,
67,12,74,41,32,41,59,59,22,59,59,32,59,32,32,67,58,67,74,67,
32,12,58,67,41,67,67,67,41,67,67,58,67,67,67,58,41,67,12,67,
50,67,59,59,59,58,67,67,50,50,31,74,74,74,67,59,67,58,67,58,
58,58,58,12,58,58,74,74,58,58,58,74,58,58,58,58,58,74,59,74,
12,12,12,74,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,
58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,1,58,50,
50,58,58,12,12,74,41,74,74,74,74,32,74,74,58,74,74,45,50,41,
49,74,74,74,74,50,50,50,50,22,22,22,50,50,50,67,22,22,22,22,
50,22,12,12,50,67,22,1,1,1,22,22,74,41,1,1,1,22,22,67,
41,41,41,41,41,41,41,67,50,41,41,41,41,50,50,50,59,41,50,41,
41,41,41,41,74,67,41,41,41,41,22,22,22,41,59,41,41,1,41,1,
31,1,31,22,31,1,31,12,41,67,50,32,50,32,32,32,32,12,32,12,
32,1,22,12,22,22,12,12,22,22,12,67,67,32,50,32,67,32,50,22,
1,22,74,59,22,1,22,41,41,74,22,22,31,31,50,50,67,67,67,67,
1,50,22,50,1,50,50,22,50,22,50,22,32,1,22,32,67,12,50,32,
50,12,50,1,32,1,32,12,50,1,32,12,12,12,32,67,50,12,32,12,
59,12,32,1,32,1,32,12,22,1,32,12,12,32,12,50,22,50,12,50,
59,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,32,58,58,1,
58,58,58,58,58,58,58,58,58,58,58,58,58,31,67,58,58,58,58,58,
58,58,58,58,58,58,58,58,12,58,58,58,58,58,58,58,58,58,58,58,
58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,12,41,
1,50,1,50,1,50,1,41,1,1,1,12,1,12,58,58,58,58,58,58,
58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,
58,58,58,1,1,12,41,1,41,58,58,58,58,58,58,58,58,58,58,58,
58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,
58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,
58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,
58,58,58,58,58,58,58,58,58, };
static unsigned short stb__times_bold_10_latin_ext_a[560]={ 36,48,80,72,72,144,120,40,
48,48,72,82,36,48,36,40,72,72,72,72,72,72,72,72,
72,72,48,48,82,82,82,72,134,104,96,104,104,96,88,112,
112,56,72,112,96,136,104,112,88,112,104,80,96,104,104,144,
104,104,96,48,40,48,84,72,48,72,80,64,80,64,48,72,
80,40,48,80,40,120,80,72,80,80,64,56,48,80,72,104,
72,72,64,57,32,57,75,112,112,112,112,112,112,112,112,112,
112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,
112,112,112,112,112,112,112,112,36,48,72,72,72,72,32,72,
48,108,43,72,82,48,108,72,58,79,43,43,48,83,78,36,
48,43,48,72,108,108,108,72,104,104,104,104,104,104,144,104,
96,96,96,96,56,56,56,56,104,104,112,112,112,112,112,82,
112,104,104,104,104,104,88,80,72,72,72,72,72,72,104,64,
64,64,64,64,40,40,40,40,72,80,72,72,72,72,72,79,
72,80,80,80,80,72,80,72,104,72,104,72,104,72,104,64,
104,64,104,64,104,64,104,106,104,80,96,64,96,64,96,64,
96,64,96,64,112,72,112,72,112,72,112,72,112,80,112,80,
56,40,56,40,56,40,56,40,56,40,119,80,72,48,112,80,
80,96,40,96,40,96,68,96,57,96,40,104,80,104,80,104,
80,105,111,80,112,72,112,72,112,72,144,104,104,64,104,64,
104,64,80,56,80,56,80,56,80,56,96,48,96,75,96,48,
104,80,104,80,104,80,104,80,104,80,104,80,144,104,104,72,
104,96,64,96,64,96,64,40,112,112,112,112,112,112,112,112,
112,112,112,112,112,112,112,107,112,112,72,112,112,112,112,112,
112,112,112,112,112,112,112,112,112,80,112,112,112,112,112,112,
112,112,112,112,112,112,112,115,87,112,112,112,112,112,112,112,
112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,
112,112,112,112,112,104,72,56,40,112,72,104,80,104,80,104,
80,104,80,104,80,112,112,112,112,112,112,112,112,112,112,112,
112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,
112,112,104,72,144,104,112,72,112,112,112,112,112,112,112,112,
112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,
112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,
112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,
112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,
112,112,112,112,112,112,112,112, };

// Call this function with
//    font: NULL or array length
//    data: NULL or specified size
//    height: STB_FONT_times_bold_10_latin_ext_BITMAP_HEIGHT or STB_FONT_times_bold_10_latin_ext_BITMAP_HEIGHT_POW2
//    return value: spacing between lines
static void stb_font_times_bold_10_latin_ext(stb_fontchar font[STB_FONT_times_bold_10_latin_ext_NUM_CHARS],
                unsigned char data[STB_FONT_times_bold_10_latin_ext_BITMAP_HEIGHT][STB_FONT_times_bold_10_latin_ext_BITMAP_WIDTH],
                int height)
{
    int i,j;
    if (data != 0) {
        unsigned int *bits = stb__times_bold_10_latin_ext_pixels;
        unsigned int bitpack = *bits++, numbits = 32;
        for (i=0; i < STB_FONT_times_bold_10_latin_ext_BITMAP_WIDTH*height; ++i)
            data[0][i] = 0;  // zero entire bitmap
        for (j=1; j < STB_FONT_times_bold_10_latin_ext_BITMAP_HEIGHT-1; ++j) {
            for (i=1; i < STB_FONT_times_bold_10_latin_ext_BITMAP_WIDTH-1; ++i) {
                unsigned int value;
                if (numbits==0) bitpack = *bits++, numbits=32;
                value = bitpack & 1;
                bitpack >>= 1, --numbits;
                if (value) {
                    if (numbits < 3) bitpack = *bits++, numbits = 32;
                    data[j][i] = (bitpack & 7) * 0x20 + 0x1f;
                    bitpack >>= 3, numbits -= 3;
                } else {
                    data[j][i] = 0;
                }
            }
        }
    }

    // build font description
    if (font != 0) {
        float recip_width = 1.0f / STB_FONT_times_bold_10_latin_ext_BITMAP_WIDTH;
        float recip_height = 1.0f / height;
        for (i=0; i < STB_FONT_times_bold_10_latin_ext_NUM_CHARS; ++i) {
            // pad characters so they bilerp from empty space around each character
            font[i].s0 = (stb__times_bold_10_latin_ext_s[i]) * recip_width;
            font[i].t0 = (stb__times_bold_10_latin_ext_t[i]) * recip_height;
            font[i].s1 = (stb__times_bold_10_latin_ext_s[i] + stb__times_bold_10_latin_ext_w[i]) * recip_width;
            font[i].t1 = (stb__times_bold_10_latin_ext_t[i] + stb__times_bold_10_latin_ext_h[i]) * recip_height;
            font[i].x0 = stb__times_bold_10_latin_ext_x[i];
            font[i].y0 = stb__times_bold_10_latin_ext_y[i];
            font[i].x1 = stb__times_bold_10_latin_ext_x[i] + stb__times_bold_10_latin_ext_w[i];
            font[i].y1 = stb__times_bold_10_latin_ext_y[i] + stb__times_bold_10_latin_ext_h[i];
            font[i].advance_int = (stb__times_bold_10_latin_ext_a[i]+8)>>4;
            font[i].s0f = (stb__times_bold_10_latin_ext_s[i] - 0.5f) * recip_width;
            font[i].t0f = (stb__times_bold_10_latin_ext_t[i] - 0.5f) * recip_height;
            font[i].s1f = (stb__times_bold_10_latin_ext_s[i] + stb__times_bold_10_latin_ext_w[i] + 0.5f) * recip_width;
            font[i].t1f = (stb__times_bold_10_latin_ext_t[i] + stb__times_bold_10_latin_ext_h[i] + 0.5f) * recip_height;
            font[i].x0f = stb__times_bold_10_latin_ext_x[i] - 0.5f;
            font[i].y0f = stb__times_bold_10_latin_ext_y[i] - 0.5f;
            font[i].x1f = stb__times_bold_10_latin_ext_x[i] + stb__times_bold_10_latin_ext_w[i] + 0.5f;
            font[i].y1f = stb__times_bold_10_latin_ext_y[i] + stb__times_bold_10_latin_ext_h[i] + 0.5f;
            font[i].advance = stb__times_bold_10_latin_ext_a[i]/16.0f;
        }
    }
}

#ifndef STB_SOMEFONT_CREATE
#define STB_SOMEFONT_CREATE              stb_font_times_bold_10_latin_ext
#define STB_SOMEFONT_BITMAP_WIDTH        STB_FONT_times_bold_10_latin_ext_BITMAP_WIDTH
#define STB_SOMEFONT_BITMAP_HEIGHT       STB_FONT_times_bold_10_latin_ext_BITMAP_HEIGHT
#define STB_SOMEFONT_BITMAP_HEIGHT_POW2  STB_FONT_times_bold_10_latin_ext_BITMAP_HEIGHT_POW2
#define STB_SOMEFONT_FIRST_CHAR          STB_FONT_times_bold_10_latin_ext_FIRST_CHAR
#define STB_SOMEFONT_NUM_CHARS           STB_FONT_times_bold_10_latin_ext_NUM_CHARS
#define STB_SOMEFONT_LINE_SPACING        STB_FONT_times_bold_10_latin_ext_LINE_SPACING
#endif

