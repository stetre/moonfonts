// Font generated by stb_font_inl_generator.c (4/1 bpp)
//
// Following instructions show how to use the only included font, whatever it is, in
// a generic way so you can replace it with any other font by changing the include.
// To use multiple fonts, replace STB_SOMEFONT_* below with STB_FONT_arial_19_latin1_*,
// and separately install each font. Note that the CREATE function call has a
// totally different name; it's just 'stb_font_arial_19_latin1'.
//
/* // Example usage:

static stb_fontchar fontdata[STB_SOMEFONT_NUM_CHARS];

static void init(void)
{
    // optionally replace both STB_SOMEFONT_BITMAP_HEIGHT with STB_SOMEFONT_BITMAP_HEIGHT_POW2
    static unsigned char fontpixels[STB_SOMEFONT_BITMAP_HEIGHT][STB_SOMEFONT_BITMAP_WIDTH];
    STB_SOMEFONT_CREATE(fontdata, fontpixels, STB_SOMEFONT_BITMAP_HEIGHT);
    ... create texture ...
    // for best results rendering 1:1 pixels texels, use nearest-neighbor sampling
    // if allowed to scale up, use bilerp
}

// This function positions characters on integer coordinates, and assumes 1:1 texels to pixels
// Appropriate if nearest-neighbor sampling is used
static void draw_string_integer(int x, int y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0, cd->t0); glVertex2i(x + cd->x0, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t0); glVertex2i(x + cd->x1, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t1); glVertex2i(x + cd->x1, y + cd->y1);
        glTexCoord2f(cd->s0, cd->t1); glVertex2i(x + cd->x0, y + cd->y1);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance_int;
    }
    glEnd();
}

// This function positions characters on float coordinates, and doesn't require 1:1 texels to pixels
// Appropriate if bilinear filtering is used
static void draw_string_float(float x, float y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0f, cd->t0f); glVertex2f(x + cd->x0f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t0f); glVertex2f(x + cd->x1f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t1f); glVertex2f(x + cd->x1f, y + cd->y1f);
        glTexCoord2f(cd->s0f, cd->t1f); glVertex2f(x + cd->x0f, y + cd->y1f);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance;
    }
    glEnd();
}
*/

#ifndef STB_FONTCHAR__TYPEDEF
#define STB_FONTCHAR__TYPEDEF
typedef struct
{
    // coordinates if using integer positioning
    float s0,t0,s1,t1;
    signed short x0,y0,x1,y1;
    int   advance_int;
    // coordinates if using floating positioning
    float s0f,t0f,s1f,t1f;
    float x0f,y0f,x1f,y1f;
    float advance;
} stb_fontchar;
#endif

#define STB_FONT_arial_19_latin1_BITMAP_WIDTH         256
#define STB_FONT_arial_19_latin1_BITMAP_HEIGHT        112
#define STB_FONT_arial_19_latin1_BITMAP_HEIGHT_POW2   128

#define STB_FONT_arial_19_latin1_FIRST_CHAR            32
#define STB_FONT_arial_19_latin1_NUM_CHARS            224

#define STB_FONT_arial_19_latin1_LINE_SPACING          12

static unsigned int stb__arial_19_latin1_pixels[]={
    0x0440884c,0x30026200,0x0c403333,0x31015140,0x80266213,0x013000a8,
    0x20001310,0x10000098,0x20003101,0x22000aa9,0x00a6510a,0x20288188,
    0x00200098,0x31000098,0x29f27401,0x2002744e,0xffda80ed,0xfa80ffff,
    0x4b92e03f,0xff93ffe8,0xdfffd709,0x17fff207,0x64001ba0,0x4164000f,
    0x002fa84e,0xdfdfff91,0x8ffcc019,0x100df96b,0x6c0d709f,0xbea800ef,
    0x000fc800,0x93a00ed8,0x04e8351a,0x3e607e60,0x81fb9dff,0x881facf8,
    0x13a0740e,0x473ee274,0x97cc1fc9,0x17c403f8,0x000be200,0x640ae03a,
    0x1bee8806,0x6403baa2,0x2f99ae0e,0x06b82e40,0x440bd1f9,0x802fefff,
    0x0fcc004e,0x013a0000,0xafffe400,0x1100c47a,0x3a25c264,0x27d49d04,
    0x707dc6e8,0x000a9807,0x2600054c,0x22018805,0xed805d80,0x235c4d80,
    0x1100c42f,0x00a981ae,0x36c6c764,0x10002620,0x5b9b8013,0xd99d0e98,
    0x4c2dc19d,0x2bfffd0e,0xdb03e47a,0x87e207e2,0x3649d04e,0x6fc41530,
    0xffffa800,0x7ffd404e,0x3f6604ef,0xf93d80ef,0x997236c0,0x9b3d8dfd,
    0x7c6b89b0,0x2db03e43,0xffffa86b,0x2367f04e,0x13f200c9,0xd809f900,
    0xd3642f9a,0x4cbf75df,0xff73642f,0x0f91eabf,0x3a07bb6c,0xd27413a3,
    0xffd8800b,0x22fbf202,0xdf904fb9,0x109f7317,0xd0dfd3bf,0x26d81f29,
    0xb59f30f9,0x3a1aa5fd,0x90fa35c4,0x46bb6c0f,0xfb98befc,0x001b4f84,
    0xf8003f7e,0x74f600fd,0x41fd1fc5,0x7f17a2f9,0x7aafffc4,0x32db03e4,
    0x04e97606,0x0013e29d,0x81bfb17d,0x87f503f9,0x87f503f9,0x83f5d16d,
    0x36c0f94e,0xfd13e2b7,0x87f03e23,0x1f22646b,0x7ccd76d8,0xfc87f503,
    0x8fa800ec,0xf1f5003f,0x0fb9f407,0x7c3741f5,0x07d43ee4,0x647aaf54,
    0x02edb607,0x4e8274d9,0x0f98013e,0x06d83bea,0xb01b63ec,0x40954e8f,
    0x36c0f94e,0xf903ee7b,0x0fc887c4,0xc8bea35c,0xb045b607,0xfb87d80d,
    0x57600cef,0x36bb006d,0x97c53a06,0x2f41f45d,0xc81765f1,0x207c8f55,
    0x3dc09d6d,0x5e93a09d,0x987f1040,0xf7017e3f,0x3ee02fc1,0xd0164fe0,
    0x26d81f29,0x4bb0bb1f,0x2e07ee7a,0x0f91fb86,0x405f836c,0xdfbd00fb,
    0x0fd4be20,0x0fd4be20,0x3e3765f8,0x227c2f42,0x3202f8dd,0x207c8f55,
    0x3640bb6d,0xfc93a09d,0x7dc5f500,0x27c4fa0d,0x27c4be60,0xd3e8be60,
    0x07ca740c,0x0bd1f9b6,0xbb32ec9f,0x23f98d70,0x221b607c,0x817cc04f,
    0xfb83f98d,0x1f7017e0,0x2a5f82fc,0x4c7e87bf,0x03dfd42f,0x1f23d572,
    0x6c0d96d8,0x327413a4,0x2a17a0bf,0xf10faaff,0xf12f9807,0x362f9807,
    0xe83f359d,0xb36c0f94,0x25f91f27,0x5c1f80fb,0x81f22ec6,0x0fe2d76d,
    0x43225f30,0x8bd09f0d,0x917a00fc,0xff8bf01f,0xea9dfe84,0xc809ff06,
    0x207c8f55,0x1fc0f56d,0xf513a09d,0x03fd737b,0xbd03ff62,0x17a0fa80,
    0x77cc1f50,0x94e85e9b,0x2b936c0f,0xcfec9df9,0xb87d02fc,0x81f21f46,
    0x02f4d76d,0xd9fc43ea,0x7fcc1f88,0x303fffff,0x7fffffff,0x81fc8bf0,
    0x00dffdde,0x55c803f9,0xbd00fa8f,0x87e203e6,0xb509d04e,0x50039dff,
    0x200fc89f,0xb007e46d,0x19fff30d,0x403ea9d0,0x7543e65e,0x31dfe8be,
    0x235c4e81,0xe807d43e,0x007e4d75,0x9dbfd8db,0xaaafc86d,0x5f906eaa,
    0x50dd5555,0x29d06c85,0xc806c800,0x83f98f55,0x2e1363f9,0x04e82746,
    0xb8750132,0x5406fc47,0x406fc43f,0x01e883fa,0x983f9a74,0x800fe43f,
    0x2e26c0fc,0x0fe61fc6,0xf135cfe6,0x887f501b,0xf81cfffd,0x9f03f704,
    0xf1007ee0,0x44013a07,0xf55c803f,0xfb559f90,0x0fc0f98d,0x3027413a,
    0xb0fd409b,0x539ff30d,0x3fe607f9,0x503fca9c,0x7e45f009,0xb06fdaac,
    0xfb31017f,0x26b8bb03,0xacfc82f8,0x31ae6fda,0x7f9539ff,0xfa807440,
    0xfa8bf101,0x754bf101,0x2740dff1,0xc8037fc0,0x3fb20f55,0x23c80cef,
    0x72efe85b,0x3f2a09fd,0x7f77ec03,0xbffd9302,0xffec9805,0xb807602d,
    0x7ff641fe,0x3faa00ce,0x0cffedef,0x5ae3df50,0xfd900ffb,0x435c19df,
    0x02dffec9,0x80db00c8,0x901b60fc,0x5dc7aa1f,0x2e006a00,0x2233000b,
    0x22004402,0x2aaa02e3,0x26035530,0x1771001a,0x04000200,0x05d40180,
    0xa9800110,0x98009acb,0x032a730c,0x01cc0220,0x00000002,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x31000000,0x00066001,0x00130013,0x310254ea,0xbda80310,
    0x131001c9,0x1c89c880,0xadb804c4,0x02b96459,0x003937b3,0x52600726,
    0xb95c00c9,0x06619803,0x0098004c,0x004c0098,0xe800cc00,0x03f7006f,
    0xf9003f20,0x32db003f,0xf889f107,0x3f2fa05f,0x003f2005,0x885f15f3,
    0xfdae986e,0xd05ea7c3,0xa400bf97,0xfa8fb804,0x06daf400,0x6c0ba3d8,
    0x00ffd806,0x7ec03ff6,0xd7bf700e,0xd803f703,0xb9004e8e,0xa805f100,
    0x9800ecaf,0x361ae00a,0x2a603f8e,0x807e2000,0xf8822018,0x10440311,
    0x00131003,0x26204bc8,0x01999999,0x1f8004c4,0x0ba201f1,0x706d8fb8,
    0x1f70db1f,0x36a760bb,0x22017204,0x26662009,0x26219999,0x21999999,
    0x99999998,0xdffff501,0x06203109,0x4effffa8,0x90c40188,0x43136c0f,
    0x54d902fd,0x027e401f,0xfc813f20,0x0fffffff,0x22013f20,0x0000f30f,
    0x00000000,0x13f20000,0xffffffc8,0xffff90ff,0x3f21ffff,0x0fffffff,
    0x5cc5f7e4,0x540fd44f,0x8befc81f,0x1fdc4fb9,0x81f25f88,0x7ec7ea6d,
    0x3ea6c80f,0x007efc01,0x3201fbf0,0x1999999f,0xc807efc0,0xefeeefee,
    0x80efe4c1,0x9301dfd9,0x4c3d83bf,0x0efe4c1e,0x203d30f6,0x3f900fdf,
    0x64333333,0x1999999f,0x266667f2,0xa81fcc19,0x2a07ea3f,0xa81fcc1f,
    0x6c07f43f,0x6d81f20f,0x2ffec7ea,0x403f5364,0x5003f8fa,0x1f207f1f,
    0x1fc7d400,0xeaaddaa8,0x2b7ee0ad,0x56fd46fc,0x56fdc5fc,0xf313a6fc,
    0x7e56fdc3,0x03f313a6,0x3207f1f5,0x200f9007,0x01b6007c,0x540fd4fb,
    0x36036c1f,0x3ea2fcc7,0x4db03e42,0x5f7db1fa,0x807ea6c8,0x3600db5d,
    0x01f20db5,0x406daec0,0xbf10ba3d,0x317e3fa8,0xf517e25f,0x23f313a7,
    0xe9fd45f8,0xaec0fcc4,0x200f906d,0x00f9007c,0x43ee02fc,0x41fa81fa,
    0x207dc05f,0x909f12fb,0x3f536c0f,0xd907edb6,0x2f880fd4,0x2f8803f5,
    0x00f903f5,0x07ea5f10,0x981f11f8,0x7f34f82f,0x269f3333,0x89d4f82f,
    0xf05f31f9,0x83f313a9,0x903f52f8,0x401f200f,0x09f1007c,0x03f52f98,
    0x027c43f5,0x23fa0be6,0x207c80ed,0xb6c7ea6d,0xfa9b25f8,0x2fc1f701,
    0x85f83ee0,0xfffffffc,0x2fc1f705,0x7ee67e5c,0xb01f50cc,0x3ffffeab,
    0xb01f55ff,0x23f313ab,0x9d5d80fa,0x07dc1f98,0xffff90bf,0x7fe4bfff,
    0x325fffff,0x5fffffff,0x5f300fe2,0x87ea07ea,0x17cc03f8,0xc80ff7cc,
    0x1fa9b607,0x6c97dcdb,0x22f407ea,0x917a00fc,0xaaafc81f,0x8bd01aaa,
    0x67edc0fc,0xf30cceec,0x0be69f05,0x29f05f30,0xf98fd44e,0xa89d4f82,
    0x3f22f41f,0x55557e40,0x2abf21aa,0x3f21aaaa,0x41aaaaaa,0xa87d405e,
    0x741fa81f,0xb807d405,0xd81f204f,0x236c7ea6,0x3ea6c8fd,0xfffff981,
    0xfff303ff,0x7c87ffff,0x7fffcc00,0x24c83fff,0x4c4f883d,0xd88bf13f,
    0x3f989f12,0xf11fb8bd,0x8bd3f989,0x3ffe61fb,0x3e43ffff,0xf9007c80,
    0xb007e400,0x7d40fd4d,0xdb007e41,0xf5017cc0,0x1fa97a01,0x6cdf88db,
    0x2bf207ea,0x906eaaaa,0xdd55555f,0x7e4007c8,0x86eaaaaa,0x7e40be3d,
    0x320eea8c,0x646d98cf,0x90eea8cf,0x43ff715f,0x0eea8cfc,0x3ff715f9,
    0x555557e4,0xc803e46e,0x400f9007,0x3fa80df8,0x07ea07ea,0x7f501bf1,
    0xf3017cc0,0x7d47f307,0xdff70db1,0x827c0fd4,0x704f81fb,0x2003e43f,
    0xf83f704f,0x6d401f11,0xffb80dff,0xffda81df,0x3bff620d,0x7fed41f9,
    0x3bff620d,0x5c13e1f9,0x6401f21f,0x800f9007,0xfca9cff9,0x7d40fd43,
    0xa9cff981,0x17cc03fc,0x36ab3f20,0x6d8fd46f,0x0fd4dfb0,0x2fc407ea,
    0x2fc407ea,0x555555f9,0x880fd415,0x40060c5f,0x02001000,0x00200110,
    0x407ea011,0x2abf25f8,0xf90aaaaa,0x15555555,0x2aaaabf2,0xfec980aa,
    0x81fa82df,0xfd9301fa,0x5f3005bf,0x9dffd900,0x0db1fa81,0x41fa9be2,
    0xb07e406d,0xf90fc80d,0x5fffffff,0x03f2036c,0x00000000,0x00000000,
    0x87e406d8,0xfffffffc,0xfffff92f,0x3ff25fff,0x02ffffff,0x207ea004,
    0x000801fa,0x110017cc,0x0000fd40,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x0004c013,0x2004c013,0x80003108,
    0x46203108,0x09a88018,0x80131026,0x1b880098,0x00001300,0x2004c026,
    0x0a80500a,0x200a8050,0x1500c009,0x26003100,0x54022001,0x003f202f,
    0x06d80bea,0xf707bb64,0x2d903d7b,0x1eef907c,0xcffffea8,0xebfc81f9,
    0x077ffdc2,0xf5009190,0x0f7f6a05,0x6fc41fb8,0xb10d505e,0x6c42e40f,
    0xfd81aa07,0x2fde980f,0x3f6007cc,0xd9ec01ef,0x3a0ceeca,0x9b009d04,
    0xe8807d00,0x814ca602,0x5304da9d,0x2994c0a6,0x7117df50,0x3fee05ff,
    0x4e89fd42,0x3a0126e0,0xf75bf504,0x4620fe07,0x441f887a,0x81f307ce,
    0x3f107ce8,0x21b63ee0,0x03d8b54c,0x405d87d4,0xf75dfd1f,0x0000274b,
    0x00000000,0x00000000,0x7fd107f5,0xb8d91970,0x1501b20f,0x5c5f8000,
    0x05f70006,0x443cc07b,0x6c1e601f,0x89740003,0xd900f30f,0x74d303dc,
    0x274be60f,0x5c077f26,0xeb81dffe,0xfd981dff,0x3bfb301d,0x077ffae0,
    0x2077ffae,0x6c81dfc9,0x2e0fd7d0,0x89b63fcd,0xbffd703f,0x83bfb303,
    0x21ec03f8,0x20f981e9,0x6c3cc05b,0x2dc3cc04,0x077ffae0,0x03d9e65b,
    0x04e8bfa8,0x4f86e92e,0x656fdc9d,0x5cdfe46f,0x5cdfe47e,0x656fd47e,
    0x656fd45f,0x5cdfe45f,0x5cdfe47e,0x656fdc7e,0xa6c2746f,0x2fbea1fc,
    0x64bb0ffd,0xd737f906,0xfcadfa8f,0x9d007e65,0x26951f98,0x9801f30f,
    0x3cc03547,0xbfc803e6,0x46dc7eb9,0x6c00d34c,0xd17404ff,0x453abd07,
    0x7b1fd45f,0x50f61fa8,0x3e62fc3f,0x45f317e2,0x7b0fd43d,0x8bf11fa8,
    0xc87f13fa,0x45e8bea5,0x2f4bb2fb,0xf0fd43d8,0x7f32f98b,0x3e627410,
    0x747dfb11,0x3e279802,0x17479801,0x43f50f60,0x07b0cfc8,0x803ffa20,
    0x3e17a0f8,0x20be69d4,0x3f95104f,0x4c7f2a20,0x4f9999bf,0xf33337f3,
    0x07f2a209,0xf98fe544,0x47f14f82,0xf98fcc6c,0x25d9fc43,0x654403fb,
    0x3337f31f,0x2e2fc9f3,0x1f989d0f,0x01ea2640,0x0efeccfa,0x40f51320,
    0x4c01fca8,0xa817d916,0x8756f9df,0x3e63f46a,0x203ea9d2,0x3bff665d,
    0x3ff661fd,0xfff51fde,0x3eabffff,0x25ffffff,0x1fdeffd9,0x3f7bff66,
    0x4bb01f51,0xfb81d74f,0x2bd03f50,0x306fdc5d,0x23fbdffb,0xfffffffa,
    0x3aa33ee5,0x03f313a3,0x0ff30754,0x362f65b8,0xf983aa05,0x6f7fecc7,
    0xdc97401f,0xf52f43d8,0x743c8bd9,0x3a6ea9df,0x29f05f34,0x3f30aef8,
    0x7cc2bbe2,0xf9805f31,0x8577c402,0x15df11f9,0x417cc7e6,0x03ebf64f,
    0xf82f89b6,0x27f30bb4,0x3f30aef8,0x6d400be6,0x513a0bef,0x887e203f,
    0x03e607bf,0x21f8826c,0x3be27be8,0x5403f30a,0xf1354be6,0x7c2ffc85,
    0x6ffeef41,0x227c53a0,0xb83f33f9,0xfb83f31f,0x2d88bf11,0x32d88bf1,
    0xf31fb83f,0x9f11fb83,0x3fe63f98,0x2742fb81,0x08aecfea,0x2e0fcd76,
    0xd88bf11f,0x5e80ea82,0x43d80fdc,0x5d1078be,0x1ec0bb10,0x1f99e2fa,
    0x45d00fdc,0x45e8f31f,0x21e62ff8,0xc93a014e,0x10eea8cf,0x5ff511bf,
    0x3ea237e2,0x2633f22f,0x4c67e46d,0x2237e26d,0x1bf12ffa,0x7e45ff51,
    0x260eea8c,0xfca9aeff,0xea8bfc83,0x546f5766,0x511bf12f,0x467e45ff,
    0x0f7106d9,0x3ff715f9,0xfff98d70,0xe884c87f,0xff31ae04,0x237e2fff,
    0xd502ffa8,0xfc8972d8,0x2feeea9c,0xe809d0b7,0x06ffed44,0x3e37ffaa,
    0x237ffaa3,0x6fffdc3f,0x1dfffb81,0x7c6fff54,0x237ffaa3,0x6ffed43f,
    0x3fa6ba20,0x3ee02dff,0x45760bef,0x7f544ffe,0x7dc3f8df,0xfea81dff,
    0x9effd884,0x1007cc1f,0x3fa0d50f,0x007cc5ee,0xdffea8f1,0xa85d03f8,
    0xffc81fdf,0x5b4e88df,0x04e809d0,0x02001001,0x00100080,0x08002001,
    0x10006060,0x00200400,0x004c4008,0x00330022,0x26601503,0x400cc099,
    0x0a200101,0x200c0144,0x00003501,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x20000000,0x00998018,
    0x0200c422,0x54c00044,0x00544000,0x05440010,0x10000000,0x002a2001,
    0x03530008,0x4000002a,0x0cc00201,0x401100c4,0x003100a8,0x0fa80262,
    0xeffffea8,0x20f96c80,0x2744ffea,0xdffff500,0xfffeb809,0x3ffae03e,
    0x3f7bb204,0x37f6e02e,0x7fffc1e9,0x7ff4c1ff,0xfbdd901d,0x7ff5405d,
    0xfffff504,0x36e03d87,0x4c01e8bf,0x677f5c1f,0x2effeb80,0xb86d81f2,
    0x6c3efffe,0x409f1007,0x4efcc0fa,0x4c0fe988,0x19f30532,0x802749f7,
    0xfb98befc,0x317df704,0x15f509f9,0x0ce889f5,0x67d41f4c,0x3e21ffd9,
    0x260aaaac,0x446d98cf,0x41f4c0ce,0x44ea8cfa,0xfc98adf9,0x6fd416e3,
    0x4c02ffda,0x2a2fe61f,0xc89fd44f,0x36c0f90f,0x7e4c73ee,0xf9801f61,
    0x7cc1f500,0x0009f104,0x9d0fa8bb,0x2a07f300,0xb81fd43f,0x1f22743f,
    0x2155517d,0x3627c3e8,0xb003ea1f,0x4fa1e98d,0x87d11cb8,0xf90fd45d,
    0xf0799ba0,0x4c02fc89,0x8f71b21f,0x7c97c47c,0x04fa9b60,0x6667ecdd,
    0xfa8001cc,0x2a803ee0,0x7c3d30f6,0x9ce97c43,0x036c0cfd,0xd80db1f6,
    0xb53ec086,0x44bf33ae,0x3f70be66,0x01fc03dc,0x6d67456a,0x217c4d14,
    0x203f22f8,0x3e60f419,0x36e17d42,0x1f21fadf,0x6407d8f7,0x06c9b607,
    0x777ec2a6,0x74c5feee,0x36c1f500,0x3f313a00,0x74fe0be2,0x7c6fbaef,
    0x9f07dc05,0x2e207c80,0x725cf23f,0x41fa8749,0x3b3b61f8,0x2ebe20be,
    0x4c9e41dd,0x0fe21d1c,0x5f7cc7f1,0x3ea26401,0xbf517c40,0x7cc3ffb5,
    0x7e44fb9c,0x6d81f200,0x07d8017a,0x807d43f9,0x2613e0fa,0x313a1999,
    0x3e07e63f,0x97d41fd4,0x97cc04f8,0x0fd403f8,0x43a2ffcc,0x321ecadb,
    0x1fa85f33,0x9bf2b3fa,0x5fdbfdf9,0x7900f43a,0x313ee36c,0x503bfffd,
    0x7d42f88d,0x83fb13e2,0x75c5fffa,0x07c85eef,0x0027c5b6,0xa8fe20fb,
    0x7c1f500f,0x0fffff85,0xf31f989d,0x117a9f03,0x300fe29f,0x500fe25f,
    0xdd51103f,0x75edc7a1,0x44f89641,0xf506a1fc,0x1f51bea3,0x5900ec7a,
    0x77767fcc,0x7ffb7104,0x22740f88,0xb85f32fc,0x2a2ff21f,0x9df950ee,
    0x36c0f907,0x83ec009f,0x403ea2f9,0x261b60fa,0x89d0fb99,0xf05f11f9,
    0xe97a0fa7,0x9d07d405,0x4c00fb80,0x4d2e772f,0xcfb83a0e,0xf801ffb8,
    0x3f889f34,0x0f892a77,0x8beb881d,0x0fd8803e,0x2b7ee174,0x81f52ffd,
    0xf313e1f9,0x1f204e85,0x1017a6d8,0x23ecc3ec,0x7dc498fa,0xfa803ee0,
    0x21fa89d0,0x4e97c43f,0x803f24f8,0xd0436c6d,0x34f80a8d,0xd34c92ed,
    0x3f7ffb30,0xf8a7c04c,0x22d34f83,0x0d33eced,0x0fe25f10,0x212e17cc,
    0x31f9beeb,0xf31fa85f,0x17c49d03,0x97a01f50,0x25f500fc,0xfffffffd,
    0x0fcc7d42,0x00ee88f9,0xf717a1f9,0x43ea2ec3,0xf117cc6e,0x987f501b,
    0x3f33e64f,0x87ea2742,0x26a219dc,0x0fcc201f,0x3a1fa89f,0x4b917cc5,
    0xd83f30a8,0x1dd07d44,0x47981f50,0x13e0f981,0x261f43f9,0xf301ae1f,
    0x7cc7f307,0x67ecbd05,0xfa80abcc,0x0bf75df0,0xd7559fd1,0x22bf21bf,
    0x37e61ffb,0x3bfa3fb8,0xff986ea9,0x503fca9c,0xbff935bf,0xbd515f70,
    0x2e615b90,0x43f3001e,0x46ea8bfb,0x86ea8cfa,0x3d730adc,0x5f515f70,
    0xcaabef98,0x2743f05f,0x717f71b6,0x457dc3ff,0x377ea6ea,0x3f22a9bc,
    0xa86fdaac,0x1feb9bdf,0x0fa801f6,0x440bffb3,0x41dfffec,0x1f9effd8,
    0x3a27ffd4,0x300bffdc,0x805bffd9,0xfcdfffd9,0x5f7f5c1d,0x9dffb500,
    0x20fcc003,0xa80dffeb,0xb500dfff,0x64039dff,0xfb303efe,0x1ec07dff,
    0x03ffbdf5,0x83f5fff9,0x2e0befda,0x5fffcbce,0x0677ff64,0x1ceffda8,
    0x1f5003ec,0x00440008,0x80080044,0x80004000,0x00816440,0xa8800040,
    0x00200100,0x00080010,0x10220022,0x00801575,0x00880010,0x00100022,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x22013000,0x4cccc409,0x04018000,0x30e985b8,
    0x09880221,0x00666620,0x2621c400,0x02200999,0x99980198,0x20999999,
    0x99999998,0x26666621,0x00011099,0x70022110,0x05305d09,0x10098044,
    0x20098813,0x07e400eb,0x3ff607ec,0x800cffff,0x9ffd707d,0x9b217cc3,
    0x7e40bd4f,0x3ffff604,0x7ffc42ef,0x1b24ffff,0x9ffffffb,0x5fb06d81,
    0xfffffb80,0x3f26ffff,0x0fffffff,0xfffffff9,0x3a6013a9,0x753a3dbe,
    0x1fc36404,0xf301ffd1,0x1dfffc85,0x1bfa07e4,0x7c400eb8,0x7ec1fcc4,
    0x06fba999,0x5fd43fd4,0x22f46e98,0x00d46a3f,0x3b601fbf,0x22fda999,
    0xfcaaaaa8,0x33fb1b22,0x6d8df953,0xde802fd8,0x99999de9,0x26667f20,
    0x267f2199,0x09d09999,0x41b93570,0x6c809d2b,0x407ea3f8,0x4bee2ff9,
    0xb07e26d8,0x00009d1d,0xd83741f7,0x2209f307,0x4c5e87df,0x7d43ee1f,
    0xf8fa8000,0x17a0db03,0xeffc97a0,0x93ea0fb1,0x4017ec6d,0x900bd1fa,
    0x201f200f,0x7400004e,0x1fc36404,0x3fbf20f7,0x05f113a2,0x8016a000,
    0x3605f55e,0x66c1f607,0x7c40a87b,0x42ecbe23,0x6d7600e9,0x17a0db06,
    0x7ecc1f90,0x3ec0fb0a,0x800fecdb,0x32017a6e,0xd00f9007,0x75b1ecc9,
    0xe9ec1bfd,0x320dfc9c,0xdfd93f86,0x17c57c47,0x3a67f013,0x3200e980,
    0x3a7ea006,0xfb81f605,0x007bb5c0,0xf8dd83f7,0xf100fa82,0x1b607ea5,
    0x7cc03f73,0x03ec6c82,0x7edb61f9,0x745f5001,0x9007c805,0x3e69d00f,
    0x75df7745,0x577f53a6,0xf11b26eb,0x406bf6a7,0x87ec02f8,0x00fa80fa,
    0x331007f3,0xc8135ffd,0x2a0cccfe,0x3dc7e61f,0x7d427cc0,0x201f507b,
    0x3617e0fb,0x03ffffff,0x6c6c836c,0x76c7ea07,0xdd003ffd,0xffffffe8,
    0x3fffff22,0x3fff25ff,0x233a5fff,0x2a0fe85f,0x83ba9d1f,0x4c1f90fb,
    0xf101ee3f,0xf50fe405,0xf301f501,0x3ffee00b,0x7546ffff,0x3ea0aaaf,
    0x407b8fa1,0x13fe05f9,0x45e807d4,0x5576c0fc,0xf104fdba,0x0fb1b207,
    0x9ffd8fd4,0x17d401fd,0x2aaaabba,0x2aaabf20,0x2abf21aa,0x3f7a1aaa,
    0x1f98dd06,0x3f317a9d,0x3faa77f2,0x5f101ee3,0x1f50bee0,0x5f881f50,
    0xb00fe000,0xec87dc0f,0x809fc999,0x0fe405fa,0xff980fa8,0x6c3fffff,
    0xf701f906,0x0fb1b201,0x11fd87dc,0x7ff401dd,0xc805ffff,0xd00f9007,
    0x89d05fbf,0x13a9d1f9,0x3f7b23f1,0x01ee3ecf,0x213a05f1,0x40fa80fa,
    0x7754007b,0xd85eeefe,0xffd9b607,0x544fffff,0x206c804f,0xaafc80fa,
    0x36c6eaaa,0x05e82f98,0x6c0fb1b2,0x0bf31b67,0x2aaab3e6,0x007c805f,
    0x32bd00f9,0x3e62740f,0xf113a9d1,0xb8045b23,0xf817c407,0xfa80fa82,
    0x83643dc0,0xaadfaaa9,0x7f507d82,0x3fa87b80,0x2a03f880,0xf704f80f,
    0x1fb836c3,0x5f701fc4,0x1fd41f61,0xb07f90db,0x32017a0d,0xd00f9007,
    0x89d17e29,0x13a9d1f9,0x201b23f1,0x017c407b,0x3ea03ea0,0x7f31fc40,
    0xfb00fe00,0x0bfb9555,0xaef88f70,0x3fe1aaaa,0x2a07d406,0x6cbf101f,
    0x5fdaaaae,0x3a201f98,0x9555fb3f,0xd06d8bfb,0xe81fcc3f,0x22aaaaae,
    0xaaaaaafc,0x9d00f90a,0x989d17d4,0x113a9d1f,0x2e01b23f,0x4417c407,
    0xa80fa82e,0xfeffb80f,0xb00fe005,0x05bfffff,0xfff51ee0,0x5dc9ffff,
    0x3607d400,0xfd87e406,0x503effff,0xffd8001f,0x6d83dfff,0x03ecdf30,
    0xfffffffd,0x7fffffe4,0xd00f92ff,0x89d0fd89,0x13a9d1f9,0x200a63f1,
    0x417c407b,0x80fa83f8,0x02ea00fa,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x44310022,
    0x10c42201,0x26200443,0x19999999,0x4ccccccc,0x18803109,0x20880262,
    0x22033008,0x03333310,0x01999988,0x98844031,0x0ea84c00,0x40000000,
    0x00040009,0x80000000,0x99999999,0x3ec01f91,0xfab6c0f9,0x01b63f71,
    0xfffffff9,0xfffff8ff,0x07f75fff,0x01fd17e2,0x443e45f5,0xf94f81ff,
    0x09ffffff,0xbffffffb,0x6c817ec3,0xb7dc0dfb,0x77f5c0ea,0x02dfea8c,
    0xf807bfb5,0x2f7f6a02,0x01dfd986,0x883bffd7,0xc981dffd,0x4600c1df,
    0x49f102f9,0x7d5b607c,0x01b63f71,0x33fb3331,0x99999833,0x03fa3fc9,
    0x8bf303f6,0x20fd44f8,0x97c43ffa,0xda9999fc,0x4ccfec4f,0xffb0ffb9,
    0x3ff6d901,0x640dfd01,0xcfffb9be,0x6fd42fca,0x0be03fba,0x1fed5ff4,
    0x17f2b7ea,0x8fd737f9,0x20fdaade,0x26fcadfb,0x20bd0c01,0xd81f20fa,
    0x47ee3f56,0x03e4006d,0x3e62fcc0,0xfb817d45,0x0fe21ba2,0x0fa8b9b9,
    0x363740f9,0x3f65f507,0xddb6c85f,0x40dbf309,0x321fe42d,0x81ae2fc7,
    0x361fb82f,0x3e62fc7e,0x23f50f62,0x447222f8,0x019fd45f,0xbb01f70c,
    0x55b607c8,0x1b63f71f,0x8800f900,0x12fb80ef,0xc8fd809f,0xbf8bd01f,
    0x0f93647a,0x441f636c,0x85f7db3f,0x70d9db6c,0x2a200d9b,0xfa999afd,
    0xe9807f11,0xb3eeefee,0x987d6dcf,0x4f9999bf,0x743f9510,0x82f981cf,
    0x2218034f,0x3217c43f,0xd999999f,0x43ea3f56,0x03e4006d,0xfe807fa0,
    0x7c400ed8,0x99f202fe,0x93a2f88f,0xd89f307c,0x5b61f707,0x76db20fd,
    0x365741f9,0xfbdffb10,0x25ffffff,0x554401f9,0xbd1aacfa,0x547e63a6,
    0x5fffffff,0x3f7bff66,0x93fff621,0x035d80fa,0x1ee36c18,0x3ffffff2,
    0x2a3f56ff,0xc800db0f,0x00bf2007,0x2003fdf3,0x87cc06fa,0x0fc53a6b,
    0xffddddf9,0xaaafd819,0x45b66fdb,0xeb6db25f,0x41b23e64,0x03ee2ef8,
    0x40107f30,0x1e8de82f,0x00be61f7,0x3e615df1,0x269f9501,0x8034f82f,
    0x09d0fd41,0x333333f9,0x3cc7eadb,0x07c800db,0x2e007f70,0x3ffa004f,
    0x24d97c01,0xcfc8f56c,0xfb00ffcc,0x419dffff,0xb64bee6d,0xcae4d76d,
    0x07ea1d56,0x20ea85fb,0xf807dc5f,0x362dfc82,0x5b117e27,0x23f707e6,
    0xf8af40e8,0x4019fcc4,0x03f33f81,0xfab6c0f9,0x0036cf31,0x17e601f2,
    0x9002f980,0x6c01fd3f,0x647cc5f4,0x3ba23e45,0xdb007d80,0xdb6c8fd8,
    0x6c9747e6,0x233e23f7,0xa8afefc8,0x5467dc4f,0x2207a03e,0x43fc99ff,
    0x26d98cfc,0xffa88df8,0x3ea277a2,0x3aa33f23,0xc818030e,0x81f20d96,
    0x9e23f56d,0x03e4006d,0x98003be2,0x33fa802f,0x3d75c0bf,0x1f21f57c,
    0x01f617e6,0x337e236c,0x3ce74db6,0xfd506cd9,0x3bff21bf,0x17dfb504,
    0x55555544,0xbffbd51a,0x37ffee05,0x46fff541,0x3fff663f,0x0dffda83,
    0x3f103006,0xd81f205f,0x1b603f56,0xfe80f900,0x017cc000,0x05f717e2,
    0x336173e6,0xfc83e41f,0x6d803ec3,0x4db6ffb8,0x4db24ceb,0x80040105,
    0xfffff500,0x008269ff,0x40010010,0x33500800,0x20533333,0x0f900fee,
    0xd51fab6c,0x2aaabb63,0x5c0f902a,0xaaaaaacf,0xd805f302,0xf00fe80f,
    0x90ff707f,0xfb07f40f,0x7ec1b600,0x17fccdb6,0x000002d9,0x00000000,
    0x00000000,0x4fa80000,0x56d81f20,0x7ec7ee3f,0x906fffff,0x7fffe40f,
    0xf307ffff,0x8817dc05,0x303fb06f,0x4c0f909f,0x6c01f65f,0x1b6df106,
    0x0006c8fd,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x987b0000,0x42dc001e,0x5c8990e9,0xdddd32d4,0x2174cbdd,
    0xd50c304d,0x28044223,0x40351028,0x50066009,0x20330188,0xbbbbb809,
    0x5dc0c3bb,0x263bbbbb,0x88981440,0x710036a1,0x2b61360d,0x9fd34feb,
    0x6ff5d6c1,0xe93f2b60,0xf313a00b,0x26e27a23,0xd83f32d8,0x43ff1ee6,
    0x2aaaa25d,0xc87ec4fc,0x4d74d81f,0x3e6d71ea,0x3f91fd40,0xbf107f10,
    0x441fe0bd,0x837bf27d,0xbd10fcde,0xeeeee8dd,0x1d9d36ee,0x7f777774,
    0x85985f37,0xf71fabf8,0x13ff2601,0x56f7426c,0x4fabedfc,0x9baefbba,
    0x3f23ceee,0x4c4e81cf,0x3ffff61f,0xf893a1ff,0x77cc7e62,0x5f880be3,
    0x83f9df88,0x401f88fa,0x7f70b94e,0x06a207f7,0x75c3d462,0xd37ce82f,
    0x4f23896c,0xb0007e39,0x5ea00ea1,0x9d9d32f9,0x0fd5fc4b,0x2efea81b,
    0x077426c0,0xfd35c3fd,0x07e8fd41,0x9d16ff54,0x4bea1f98,0xf53dc5e8,
    0xb9b73f81,0x374403e6,0xf10bff30,0x3e6017a7,0xffb83f89,0x777774c3,
    0x417dc3ee,0x2f306bbe,0xfeb96e4b,0x8006c84f,0xf500570d,0xbfd98be2,
    0x43eabe20,0x00e7fc59,0xbddffddd,0x7a8f917a,0x3a3f31ba,0x2df93005,
    0xb90fcc4e,0x4be20fa8,0x57b5c84d,0x0ed8172f,0xbec0ff40,0x2dd001fb,
    0x1ffe40fc,0x33333326,0x2a0f982c,0x7981f88f,0x1eb9e4b5,0x740dd899,
    0x36eeeeee,0x9ea00bbd,0x216fa60f,0x3a02788e,0x333201cf,0x89d4ccee,
    0x89d3d46c,0x2009d1f9,0xa89d6fc9,0x0f51721f,0xf503f1bb,0x7d3f13f1,
    0xf5007f20,0xf15f30dd,0x3a5f1007,0x1fddfdc4,0x34a81a88,0x0bb2ec1f,
    0x8fd5fcf3,0xb15fb9ea,0xbbbb811b,0x00043bbb,0x5c660473,0xb5001040,
    0x84d805df,0x9ea3644e,0x4e8fcc4e,0xd16ff540,0x3ea1fb8b,0x7f50bd32,
    0xbd3e7c0d,0x805f701f,0xc84f8cf8,0x5d801f56,0x71fd41d7,0x107f105f,
    0x0fcc7dfb,0x226981f3,0x4d6dc1dc,0x05ffff74,0x00000000,0x7e4c0000,
    0x9d09b04f,0x9d3d46c8,0x209d1f98,0xfc80cffc,0x361ffb8a,0x81ffffff,
    0x97f603ff,0x9cfa86fc,0x736c1999,0x9727d03f,0xf11f31ea,0x22050503,
    0x40c4001a,0x00000009,0x00000000,0x22000000,0x9d09b06b,0x9d3d46c8,
    0x209d1f98,0x3f6200be,0x1b11f9ef,0x320b6351,0x98fea00f,0xffffc83f,
    0x83f70fff,0x289440fd,0x288cc7ee,0x00000000,0x00000000,0x00000000,
    0x00000000,0xa8d913a0,0x23f313a7,0x0880004e,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x40000000,
    0x01883300,0x04444198,0x11106231,0x4c111111,0x9999910d,0x00079999,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0xa83f0000,
    0x9fff912f,0x87e41b55,0xf70ffffa,0x7ffcc3ea,0x54ffffff,0x2aaaa23f,
    0x001aaaaa,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x1fa80000,0xdaad98fa,0x9ec0efff,0x4e62aaa8,0x00000038,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x80000000,0x01020fdc,
    0x00000331,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x57000000,0x00000001,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
};

static signed short stb__arial_19_latin1_x[224]={ 0,1,0,0,0,0,0,0,1,1,0,0,1,0,
1,0,0,1,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,-1,1,0,1,1,1,0,1,1,0,1,
1,1,1,0,1,0,1,0,0,1,0,0,0,0,0,1,0,0,0,-1,0,0,1,0,0,0,0,0,1,1,
-1,1,1,1,1,0,1,0,1,0,0,1,0,0,0,0,0,0,1,0,0,2,2,2,2,2,2,2,2,2,
2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,1,0,0,0,-1,
1,0,0,0,0,1,0,0,0,-1,1,0,0,0,1,1,0,1,0,0,0,1,0,0,0,1,-1,-1,-1,-1,
-1,-1,0,0,1,1,1,1,0,1,-1,0,-1,1,0,0,0,0,0,1,0,1,1,1,1,0,1,1,0,0,
0,0,0,0,0,0,0,0,0,0,0,1,-1,0,0,1,0,0,0,0,0,0,1,1,1,1,1,0,1,0,
 };
static signed short stb__arial_19_latin1_y[224]={ 15,2,2,2,1,2,2,2,2,2,2,4,13,9,
13,2,2,2,2,2,2,2,2,2,2,2,6,6,4,6,4,2,2,2,2,2,2,2,2,2,2,2,2,2,
2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,17,2,5,2,5,2,5,2,5,2,2,
2,2,2,5,5,5,5,5,5,5,3,6,6,6,6,6,6,2,2,2,7,4,4,4,4,4,4,4,4,4,
4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,15,6,2,2,4,2,
2,2,2,2,2,6,6,9,2,0,2,4,2,2,2,6,2,8,14,2,2,6,2,2,2,6,-1,-1,-1,0,
0,0,2,2,-1,-1,-1,0,-1,-1,-1,0,2,0,-1,-1,-1,0,0,5,2,-1,-1,-1,0,-1,2,2,2,2,
2,2,2,2,5,5,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,5,5,2,2,2,2,2,2,2,
 };
static unsigned short stb__arial_19_latin1_w[224]={ 0,3,6,10,9,15,11,3,5,5,7,9,3,6,
3,5,9,6,9,9,9,9,9,9,9,9,3,3,9,9,9,9,17,13,10,12,11,10,9,13,10,3,8,11,
8,12,10,13,10,13,12,11,11,10,12,16,12,12,10,4,5,4,8,11,4,9,8,9,9,9,6,9,8,2,
4,8,2,13,8,9,8,9,5,8,5,8,9,13,9,9,9,6,2,6,10,9,9,9,9,9,9,9,9,9,
9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,0,3,9,9,9,11,
2,9,6,13,6,8,9,6,13,11,5,9,6,6,4,8,10,3,5,4,6,8,14,14,14,9,13,13,13,13,
13,13,17,12,10,10,10,10,4,4,6,5,13,10,13,13,13,13,13,8,13,10,10,10,10,12,10,9,9,9,
9,9,9,9,15,9,9,9,9,9,4,4,7,5,9,8,9,9,9,9,9,9,9,8,8,8,8,9,8,9,
 };
static unsigned short stb__arial_19_latin1_h[224]={ 0,13,6,14,16,14,14,6,17,17,6,10,5,3,
2,14,14,13,13,14,13,14,14,13,14,14,9,12,10,6,10,13,17,13,13,14,13,13,13,14,13,13,14,13,
13,13,13,14,13,14,13,14,13,14,13,13,13,13,13,17,14,17,8,2,4,11,14,11,14,11,13,14,13,13,
17,13,13,10,10,11,14,14,10,11,13,10,9,9,9,13,9,17,17,17,4,11,11,11,11,11,11,11,11,11,
11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,13,17,14,10,13,
17,17,3,14,7,9,6,3,14,2,6,11,7,8,4,13,17,2,5,7,7,9,14,14,14,13,16,16,16,15,
15,15,13,17,16,16,16,15,16,16,16,15,13,15,17,17,17,16,16,8,14,17,17,17,16,16,13,14,14,14,
14,14,14,14,11,14,14,14,14,14,13,13,13,13,14,13,14,14,14,14,14,8,11,14,14,14,14,17,17,17,
 };
static unsigned short stb__arial_19_latin1_s[224]={ 214,29,244,187,214,209,225,232,52,58,236,
11,251,28,54,237,33,213,37,80,27,114,124,88,196,148,132,156,1,206,50,
220,151,63,77,227,104,146,157,10,14,25,1,116,33,143,132,52,121,66,108,
158,42,216,1,91,78,65,54,64,170,69,171,58,23,216,43,176,186,206,206,
176,188,185,135,167,252,21,35,235,243,104,44,226,98,60,79,89,113,47,103,
169,176,179,12,245,245,245,245,245,245,245,245,245,245,245,245,245,245,245,245,
245,245,245,245,245,245,245,245,245,245,245,245,245,245,245,245,245,214,252,125,
206,69,1,197,87,35,134,192,123,222,28,90,42,216,186,199,164,7,197,30,
252,1,180,185,136,184,169,154,243,224,238,1,134,173,148,128,74,15,26,37,
162,112,62,67,128,13,117,97,111,200,74,48,145,81,140,186,41,101,88,240,
105,11,21,199,51,61,115,160,135,31,125,208,41,251,230,235,57,95,176,198,
1,218,237,71,154,196,247,145,228,24,20,11,1, };
static unsigned short stb__arial_19_latin1_t[224]={ 18,80,94,19,1,36,36,94,1,1,94,
94,94,105,105,36,51,66,66,51,66,51,51,66,51,51,94,80,94,94,94,
66,1,66,66,51,66,66,66,51,80,80,51,66,80,80,80,51,80,51,80,
51,80,51,80,80,80,80,80,1,51,1,94,105,105,80,51,80,51,80,66,
51,66,66,1,66,36,94,94,80,36,51,94,80,66,94,94,94,94,66,94,
1,1,1,105,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,
80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,18,1,1,
51,94,66,1,1,105,51,94,94,94,105,51,105,94,80,94,94,105,66,1,
15,105,94,94,94,36,36,36,66,1,1,19,19,19,19,66,1,19,19,19,
19,19,19,19,19,66,19,1,1,1,19,19,94,36,1,1,1,19,19,51,
36,36,36,36,36,36,36,80,36,36,36,19,36,51,66,66,66,36,66,19,
36,19,19,36,94,80,19,36,19,51,1,1,1, };
static unsigned short stb__arial_19_latin1_a[224]={ 76,76,97,151,151,242,181,52,
91,91,106,159,76,91,76,76,151,151,151,151,151,151,151,151,
151,151,76,76,159,159,159,151,276,181,181,197,197,181,166,212,
197,76,136,181,151,227,197,212,181,212,197,181,166,197,181,257,
181,181,166,76,76,76,128,151,91,151,151,136,151,151,76,151,
151,60,60,136,60,227,151,151,151,151,91,136,76,151,136,197,
136,136,136,91,71,91,159,204,204,204,204,204,204,204,204,204,
204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,
204,204,204,204,204,204,204,204,76,91,151,151,151,151,71,151,
91,200,101,151,159,91,200,150,109,149,91,91,91,157,146,76,
91,91,99,151,227,227,227,166,181,181,181,181,181,181,272,197,
181,181,181,181,76,76,76,76,197,197,212,212,212,212,212,159,
212,197,197,197,197,181,181,166,151,151,151,151,151,151,242,136,
151,151,151,151,76,76,76,76,151,151,151,151,151,151,151,149,
166,151,151,151,151,136,151,136, };

// Call this function with
//    font: NULL or array length
//    data: NULL or specified size
//    height: STB_FONT_arial_19_latin1_BITMAP_HEIGHT or STB_FONT_arial_19_latin1_BITMAP_HEIGHT_POW2
//    return value: spacing between lines
static void stb_font_arial_19_latin1(stb_fontchar font[STB_FONT_arial_19_latin1_NUM_CHARS],
                unsigned char data[STB_FONT_arial_19_latin1_BITMAP_HEIGHT][STB_FONT_arial_19_latin1_BITMAP_WIDTH],
                int height)
{
    int i,j;
    if (data != 0) {
        unsigned int *bits = stb__arial_19_latin1_pixels;
        unsigned int bitpack = *bits++, numbits = 32;
        for (i=0; i < STB_FONT_arial_19_latin1_BITMAP_WIDTH*height; ++i)
            data[0][i] = 0;  // zero entire bitmap
        for (j=1; j < STB_FONT_arial_19_latin1_BITMAP_HEIGHT-1; ++j) {
            for (i=1; i < STB_FONT_arial_19_latin1_BITMAP_WIDTH-1; ++i) {
                unsigned int value;
                if (numbits==0) bitpack = *bits++, numbits=32;
                value = bitpack & 1;
                bitpack >>= 1, --numbits;
                if (value) {
                    if (numbits < 3) bitpack = *bits++, numbits = 32;
                    data[j][i] = (bitpack & 7) * 0x20 + 0x1f;
                    bitpack >>= 3, numbits -= 3;
                } else {
                    data[j][i] = 0;
                }
            }
        }
    }

    // build font description
    if (font != 0) {
        float recip_width = 1.0f / STB_FONT_arial_19_latin1_BITMAP_WIDTH;
        float recip_height = 1.0f / height;
        for (i=0; i < STB_FONT_arial_19_latin1_NUM_CHARS; ++i) {
            // pad characters so they bilerp from empty space around each character
            font[i].s0 = (stb__arial_19_latin1_s[i]) * recip_width;
            font[i].t0 = (stb__arial_19_latin1_t[i]) * recip_height;
            font[i].s1 = (stb__arial_19_latin1_s[i] + stb__arial_19_latin1_w[i]) * recip_width;
            font[i].t1 = (stb__arial_19_latin1_t[i] + stb__arial_19_latin1_h[i]) * recip_height;
            font[i].x0 = stb__arial_19_latin1_x[i];
            font[i].y0 = stb__arial_19_latin1_y[i];
            font[i].x1 = stb__arial_19_latin1_x[i] + stb__arial_19_latin1_w[i];
            font[i].y1 = stb__arial_19_latin1_y[i] + stb__arial_19_latin1_h[i];
            font[i].advance_int = (stb__arial_19_latin1_a[i]+8)>>4;
            font[i].s0f = (stb__arial_19_latin1_s[i] - 0.5f) * recip_width;
            font[i].t0f = (stb__arial_19_latin1_t[i] - 0.5f) * recip_height;
            font[i].s1f = (stb__arial_19_latin1_s[i] + stb__arial_19_latin1_w[i] + 0.5f) * recip_width;
            font[i].t1f = (stb__arial_19_latin1_t[i] + stb__arial_19_latin1_h[i] + 0.5f) * recip_height;
            font[i].x0f = stb__arial_19_latin1_x[i] - 0.5f;
            font[i].y0f = stb__arial_19_latin1_y[i] - 0.5f;
            font[i].x1f = stb__arial_19_latin1_x[i] + stb__arial_19_latin1_w[i] + 0.5f;
            font[i].y1f = stb__arial_19_latin1_y[i] + stb__arial_19_latin1_h[i] + 0.5f;
            font[i].advance = stb__arial_19_latin1_a[i]/16.0f;
        }
    }
}

#ifndef STB_SOMEFONT_CREATE
#define STB_SOMEFONT_CREATE              stb_font_arial_19_latin1
#define STB_SOMEFONT_BITMAP_WIDTH        STB_FONT_arial_19_latin1_BITMAP_WIDTH
#define STB_SOMEFONT_BITMAP_HEIGHT       STB_FONT_arial_19_latin1_BITMAP_HEIGHT
#define STB_SOMEFONT_BITMAP_HEIGHT_POW2  STB_FONT_arial_19_latin1_BITMAP_HEIGHT_POW2
#define STB_SOMEFONT_FIRST_CHAR          STB_FONT_arial_19_latin1_FIRST_CHAR
#define STB_SOMEFONT_NUM_CHARS           STB_FONT_arial_19_latin1_NUM_CHARS
#define STB_SOMEFONT_LINE_SPACING        STB_FONT_arial_19_latin1_LINE_SPACING
#endif

