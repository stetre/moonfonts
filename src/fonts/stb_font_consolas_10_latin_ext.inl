// Font generated by stb_font_inl_generator.c (4/1 bpp)
//
// Following instructions show how to use the only included font, whatever it is, in
// a generic way so you can replace it with any other font by changing the include.
// To use multiple fonts, replace STB_SOMEFONT_* below with STB_FONT_consolas_10_latin_ext_*,
// and separately install each font. Note that the CREATE function call has a
// totally different name; it's just 'stb_font_consolas_10_latin_ext'.
//
/* // Example usage:

static stb_fontchar fontdata[STB_SOMEFONT_NUM_CHARS];

static void init(void)
{
    // optionally replace both STB_SOMEFONT_BITMAP_HEIGHT with STB_SOMEFONT_BITMAP_HEIGHT_POW2
    static unsigned char fontpixels[STB_SOMEFONT_BITMAP_HEIGHT][STB_SOMEFONT_BITMAP_WIDTH];
    STB_SOMEFONT_CREATE(fontdata, fontpixels, STB_SOMEFONT_BITMAP_HEIGHT);
    ... create texture ...
    // for best results rendering 1:1 pixels texels, use nearest-neighbor sampling
    // if allowed to scale up, use bilerp
}

// This function positions characters on integer coordinates, and assumes 1:1 texels to pixels
// Appropriate if nearest-neighbor sampling is used
static void draw_string_integer(int x, int y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0, cd->t0); glVertex2i(x + cd->x0, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t0); glVertex2i(x + cd->x1, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t1); glVertex2i(x + cd->x1, y + cd->y1);
        glTexCoord2f(cd->s0, cd->t1); glVertex2i(x + cd->x0, y + cd->y1);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance_int;
    }
    glEnd();
}

// This function positions characters on float coordinates, and doesn't require 1:1 texels to pixels
// Appropriate if bilinear filtering is used
static void draw_string_float(float x, float y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0f, cd->t0f); glVertex2f(x + cd->x0f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t0f); glVertex2f(x + cd->x1f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t1f); glVertex2f(x + cd->x1f, y + cd->y1f);
        glTexCoord2f(cd->s0f, cd->t1f); glVertex2f(x + cd->x0f, y + cd->y1f);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance;
    }
    glEnd();
}
*/

#ifndef STB_FONTCHAR__TYPEDEF
#define STB_FONTCHAR__TYPEDEF
typedef struct
{
    // coordinates if using integer positioning
    float s0,t0,s1,t1;
    signed short x0,y0,x1,y1;
    int   advance_int;
    // coordinates if using floating positioning
    float s0f,t0f,s1f,t1f;
    float x0f,y0f,x1f,y1f;
    float advance;
} stb_fontchar;
#endif

#define STB_FONT_consolas_10_latin_ext_BITMAP_WIDTH         256
#define STB_FONT_consolas_10_latin_ext_BITMAP_HEIGHT         78
#define STB_FONT_consolas_10_latin_ext_BITMAP_HEIGHT_POW2   128

#define STB_FONT_consolas_10_latin_ext_FIRST_CHAR            32
#define STB_FONT_consolas_10_latin_ext_NUM_CHARS            560

#define STB_FONT_consolas_10_latin_ext_LINE_SPACING           7

static unsigned int stb__consolas_10_latin_ext_pixels[]={
    0x06004000,0x03201904,0x664c0800,0x5c055442,0x40081b80,0x510f2208,
    0x02074035,0x0488a231,0x04420d54,0x32054076,0x4100841d,0x08d35a82,
    0x10088018,0x55306200,0x04201055,0x23b50f22,0x202b84ea,0x192c40bd,
    0x2b865b2a,0x86dc4264,0x57443258,0x1540d40a,0x2540ee64,0x36ba2042,
    0x24ca8502,0x02c43b49,0x4e4c757b,0x09710185,0xb05d9837,0x2288c434,
    0x81661dcc,0x8c89704a,0xd530ea1c,0x984ca857,0x22c0844d,0x5440103a,
    0x8191640d,0x3206c196,0x5c733a21,0x0b52aaa9,0x099312e6,0x4a088551,
    0x95589a3b,0x0887f744,0x221de4ca,0x441d4975,0x1df990a0,0x370a2a22,
    0x76445044,0x562930d1,0x82a88a08,0x235502a8,0x77764a08,0x154406c4,
    0xee885544,0x9075160f,0x57441df9,0x8191623f,0x2e24c196,0x9d86f2a2,
    0x0bb22adc,0xd10760ae,0x2d15c995,0x67449368,0x8ae1b00d,0x7b10bd36,
    0x74c89c89,0x8eab1345,0x5c371a2b,0x865745a2,0x2eb14986,0x265745a2,
    0xbd8995d1,0x7534573a,0x95d10360,0x40557449,0x43a8b30d,0x9ab87558,
    0x5a00ea6b,0x8326340c,0x367362fc,0xdb26442a,0x2e27443d,0x4d15c3a2,
    0x27621c9d,0xd15c3605,0xdd103b66,0x2ed31c81,0x2d9e89a2,0x70dc68ae,
    0x22abab45,0x2eb14986,0x21d15da2,0x41d43a2b,0xb03a9a2b,0x543a2b81,
    0x1e446c05,0x5b3d10ea,0x70d9b9c8,0xd032d005,0xa66c2d88,0x880bd9cd,
    0x1aae4985,0x22b86c39,0x2b11b2a6,0x8ae1b02b,0x441d1936,0x2d2d459d,
    0x1ac99a2b,0x21b8d15c,0x0dec5a2b,0x5d62930d,0x21b0e5a2,0x44e4361c,
    0x9334574c,0x6c390360,0x06c0bb20,0x564c3a8b,0x21b59c81,0x65a06449,
    0xb0551a20,0x8eb272d1,0x32e1edea,0xc872365c,0x8d15c361,0x068ac43e,
    0x9368ae1b,0x8b55896a,0x34576deb,0x15c7d9f1,0x5d3bba2d,0xd2cec9a2,
    0xac5269dd,0x1b0e5a2b,0x2390d872,0x36345769,0x87206c3d,0x6c26440d,
    0xf88751a0,0x466543ec,0x2d032346,0x45712a0c,0x0371dfda,0xacd26098,
    0x4ee4b9e8,0x1344ea68,0x4d004c0d,0x0098d13a,0x3a826013,0x54d1dcd1,
    0x2a098d13,0x4c0d8d13,0x44ea9300,0x3b9a2776,0x2ad2d4d1,0x98098d13,
    0x10689dc0,0x2a0d8d0b,0xbb0d1dc3,0x0323b83d,0x2074432d,0x2e22441c,
    0x744580cc,0xd99b75cc,0x6ec1edd8,0x2c03d91e,0x376176cc,0x40b02c1e,
    0x261edd85,0x76ec3dce,0x0f6ec2c1,0x3b661616,0xdd87b760,0x20f6ec1e,
    0x3b766deb,0xbb0582c1,0x8f6f543d,0x8ecc2ed9,0x373a64ea,0xc8640583,
    0x5c32d950,0x00082e41,0x1c836000,0x00000000,0x00000000,0x20000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x12e60888,0x80420f22,0x71286208,0x23208840,0x0808441b,0x204428a2,
    0x10810010,0x0440bb10,0x4208804c,0x2a066540,0x214110cc,0x101d4010,
    0x88098001,0x80008040,0x04402200,0x88064403,0x11037620,0x17660210,
    0x87d47762,0x27260936,0x1bb00845,0x343ea4b8,0x26cc3bb1,0x4d98b188,
    0x036202b8,0x98950973,0x2215444d,0xa8d15ca0,0x2032203d,0x40e4644a,
    0x1d84a838,0x32322654,0x2a226541,0x2cc4a80d,0x81b10088,0x3bf321aa,
    0x883bf320,0x2a35502a,0x3b366d4c,0x4770aa22,0x54c1a986,0x531a9951,
    0x20aaaa63,0x8514413a,0x02aa600d,0x22514457,0x95d12aaa,0x8aed15c9,
    0x6406aa26,0x2aaa21fd,0x37209852,0x55544141,0xa882aaa2,0xd10aa882,
    0x0aa887f5,0x1a3b9411,0x3abd86a6,0x5588eab1,0x22657447,0x1b553abd,
    0x45a23a6d,0x4da24cae,0x7b1d5ec4,0x9a3aaa75,0x7d533abd,0x24eeec85,
    0x3f26d0fa,0x215bd02c,0x43eab149,0x2eb95516,0x2d15c3a2,0xdae89a2b,
    0x135cdd42,0xe8eeb955,0x221a0dc0,0x36aa5caa,0x44995d11,0x73570aae,
    0xb855744d,0x449b45a2,0x10753abd,0x4f445b3d,0x50e8ae2d,0x2db35507,
    0x1d15da49,0x0930e4ec,0xd7555093,0x500d8126,0xd1a99507,0x52625d40,
    0x21a99558,0xb86c390e,0x44d15da2,0x8cab8955,0x5c741d06,0x20341b83,
    0x4571c80e,0x7390b50e,0x2e16a1b3,0x21c9d9a2,0x4c89c849,0xac983593,
    0x321b0e41,0x36554c89,0x0e562936,0x2e36541b,0xd2a82b82,0x00d80aed,
    0xd1d55075,0x9d3b02c4,0xaaac5261,0x3916468e,0x55a2b86c,0x6e744d13,
    0xc86add40,0x1b836542,0x32059034,0xd906c391,0x20dace45,0x268ae2ec,
    0x6415c6ca,0x3b3e2d31,0xc8fb3e23,0x698e4361,0x67cde255,0x206c391d,
    0x2542543e,0x0957b954,0xa849806c,0x41266baa,0x9ac448c8,0x4cd75555,
    0x2a689dc5,0x0f6ecd13,0x3b60b3b1,0x2e82cc1e,0xb3068370,0x361c8e40,
    0xccaa6440,0x574c8868,0x0950fa34,0x9a3bb4b5,0xd13b9a3b,0x2d10d2d4,
    0x8d13b849,0x440e8868,0x7441300e,0x6ec01b00,0xebb74aa3,0xb0999901,
    0x374aab9b,0x83dbb01d,0x20641edd,0x01905758,0xb806c03a,0x200e8341,
    0x41a2771d,0x407b7658,0x89a27558,0xeb80e886,0x47b9d36d,0x6ec3dce9,
    0x436f5c1e,0x3760932e,0x5407b21e,0x13b6a4ed,0xd89db50b,0x7b954000,
    0x19d15801,0x2af72a80,0x80005eef,0x068ac42c,0xb17bbea0,0x24eee881,
    0xddf54eee,0xbb13ba2b,0x0f6f543d,0x87b7aa0b,0x03d91edd,0x00013b6a,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x08000000,0x22020020,0x8804c0aa,
    0x3b008060,0x121aaa88,0x06ecc084,0x040aa202,0x14c2e75c,0x0880202a,
    0x08801808,0x20002008,0x02104401,0x06aaa02a,0x04202015,0x08000084,
    0x132a3530,0x43b8132a,0x2e60aae8,0x82cc4a84,0x5440981d,0x260321be,
    0x66406c5d,0x8995d11d,0x3ff31dcc,0x1d4c190d,0x212a132a,0x502cc4ca,
    0x99099509,0x41c8c83b,0xd9895059,0x57425c44,0x6c13a21a,0x6cc2ecc1,
    0x190e4645,0x36265439,0x284c1bab,0x8355104c,0xa88ae05a,0x46aaa1aa,
    0x3b61aaa8,0x44981b01,0x3b61aaa8,0x45728a22,0x2355510e,0x2c469ffa,
    0x29411071,0x1aaa884c,0x500a8054,0x05402a01,0xaa86aaa2,0x906aaa1a,
    0x1aae0d03,0x01506aaa,0x2aa23555,0xa86aaa1a,0x0d8931aa,0x41d1dc6e,
    0x7642dae8,0xa88f76c2,0x46aba1be,0x0dc1bea8,0x544580d8,0x7b1931be,
    0x21cb43ea,0x237d511d,0x0dc69fe8,0xbb457093,0x5f5443a3,0x3a213a21,
    0xe884e884,0x5444e884,0x86aba1be,0x13a21aae,0xc8d8733e,0xd10d5741,
    0x22355d09,0x2aba1bea,0x15c6aba1,0x1d064232,0x09558877,0xd8930991,
    0x701b0340,0x0ea03603,0x2b0e8836,0xd872d4ca,0x468406c0,0xb8eeecc5,
    0x83b8e9a2,0x5c355c0d,0xb86ab86a,0xb06ab86a,0x2e0d0681,0x9e88686a,
    0x6ab8344b,0x0d036068,0xb3912a1a,0x43654193,0xb100dce8,0x0362e65c,
    0x80d8399f,0x1601b01b,0x25bb1036,0x27768eaa,0x9a00d868,0x749b4c3a,
    0x3654f99b,0x0e46c0d8,0x91b07236,0x6c1c8d83,0x7c0d81c8,0x8733e1cc,
    0x5c341c8d,0x667c6ccd,0x9f072361,0x67c0d839,0x44733e1c,0x1736ae0e,
    0x167620ba,0x5263bbd5,0x81a06c59,0x93bba20d,0x1b83efe8,0x551c806c,
    0x0f6ecd75,0x3658806c,0x5758a4c0,0x06c0ba34,0x744973d1,0x2e7a24b9,
    0x892e7a24,0x40d84b9e,0x73d10d06,0x1b3eef89,0x3d10d0e4,0x03606897,
    0x77541a0d,0xd85d9dbc,0xb0575880,0x6c5cce88,0x201b0340,0xb103702a,
    0x373220d8,0x591ba550,0xecc81b02,0x22930932,0x03634575,0xd99b706c,
    0xb73666dc,0x666dcd99,0x21b336e6,0xb868340d,0x03706ccd,0x99b70d16,
    0xd036068d,0xd50c81a0,0x220361ae,0x20030d15,0x3be3efe8,0x07dfd13e,
    0x1012a095,0x20447dfd,0xdc88f72a,0x087dfd10,0x5d629300,0xe881b1a2,
    0x8e41b3ef,0x906c720d,0x1b1c8363,0x3efe88e4,0xeef8fbbe,0x5c0e41b3,
    0x777c5903,0xdf0e41b3,0x8fbfa27d,0x3bbe3eef,0x000000c3,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x40021000,0x91065440,0xcca87219,0x02202640,0x26265410,0x13261ddd,
    0x980d4995,0x2066544b,0x48b984b9,0x19055544,0x441e4437,0x0c80ea0c,
    0x2e321aa8,0x220de641,0xa819103c,0xd8897303,0x32a0ec1b,0x64066544,
    0xc886e321,0x83b0c883,0x2d5403da,0x41107726,0x886aaa1d,0x0c9dc808,
    0xd3009128,0x2a001126,0x02a02203,0x4c084044,0x0420aead,0x04044042,
    0x2f60fee4,0x0300423a,0x08044021,0x0b970220,0x2aaa2003,0x20420441,
    0x20411010,0x0ba801a8,0xdb31376e,0x1aae8767,0x26e0fb66,0xdc822d00,
    0x72c5261d,0x8eedc3bb,0x43bb700c,0x1ddc84e8,0x1390eee4,0x26b1498b,
    0xac526b14,0x26eab149,0x6e40ea6b,0x20eee41d,0x6ee41ddc,0x360eee41,
    0x87b6e1ee,0x3bb61ddb,0x4c37d511,0x8776e3ed,0x376e1ddb,0x6565c191,
    0x263edc82,0x6c0e8934,0x700741a0,0x8a543403,0x49ac5266,0x8ac526b1,
    0x22931edd,0x2951aae5,0xd3452a68,0x8a4c33a2,0xa4d62935,0x5d629358,
    0x227268ca,0xa9a2954c,0x68a54d14,0x2953452a,0x52693068,0x21629359,
    0x03a06c49,0x8a4d6293,0x06562935,0x54ee2c57,0xb124cae3,0x8e67c190,
    0xd00dc058,0x29334570,0x2b99b558,0x1d15ccda,0x97336ab1,0x68ae1c8d,
    0x223668ae,0x9358a4c5,0x358a4d62,0x6add5629,0x22bb4c72,0x8ae68ae6,
    0x8ae68ae6,0x2bae65c6,0x72e66d5a,0x220d8b99,0x55ccda85,0x336ab99b,
    0xd15c3b5c,0x9d4751c8,0x1a0c344b,0x6806e034,0x130d13a8,0x442cc2cc,
    0x7442cda5,0x344ea4b9,0x8ac9a275,0xb159ac45,0x159ac566,0x1eed966b,
    0x2275696a,0x75344ea6,0x4d13a9a2,0x9a4cd13a,0x2cd62755,0x06c59a4c,
    0x1661661a,0x2b876166,0x88f2591e,0x6ed44cde,0xda8343d3,0x1a01b83d,
    0x42c0f6ec,0x33b23cec,0x9d934b13,0xb1b336e7,0x1edd83db,0xd87bf7a2,
    0x973765cd,0x33765cdd,0x6f5c0325,0xbb07b766,0x41edd83d,0x76ec1edd,
    0xd9733a21,0x4f3b21ed,0x06c5cce8,0xcec8f76a,0xec8f3b23,0xa95c3b3c,
    0x01e6f445,0x0fbbe000,0x413bba20,0x00004eee,0x40696200,0x0000720d,
    0x00000000,0x00000000,0x00000000,0x03efe880,0xd7000000,0x000001bd,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x6eecc3a8,0x7902aaa1,0x3321b8c8,
    0x220f221b,0x36e0ea0c,0x930aa20d,0x5c9105d9,0x0f7364dd,0x419106a6,
    0x8f221edb,0x24c98a08,0x440c42da,0xb98d1dc1,0x1125cc48,0x99032214,
    0x4416d437,0x880d442a,0x542aa21a,0x40e2192d,0x20d441aa,0x89509149,
    0x2a49b4c0,0x420441da,0x10108300,0x75588101,0xe9932ba2,0xb3588688,
    0xd8d1f962,0x1a0443ab,0x468ae084,0x41d43b00,0x449b443a,0x2b822010,
    0x10c0111a,0xc9e883ad,0xb8973b34,0x155d11ad,0x0931d6d6,0xcae8766a,
    0x44245263,0xa4c776e0,0x3661c858,0xd87bb63e,0x87bb61ee,0x3bb61eed,
    0x2e1b3931,0x4d24c3a2,0x22755edb,0xb824c1a5,0x833aa1ed,0x34571edb,
    0x92b83db7,0x3bb29ddd,0x9872764e,0x58a4cb14,0xdddab457,0x3d2c5265,
    0x3293588b,0x0b11cbd8,0x8b7b70b5,0x2b82ecd9,0x1499a675,0x45267309,
    0x32162935,0x849803a1,0x49849849,0x45793498,0x8a4c361c,0x9d562b35,
    0x815c1a5b,0x70d25406,0x3360d345,0x20ea0ea0,0x58a4c6ca,0x22bac526,
    0x498dcec6,0x5c2b6cb1,0x2a37b0ee,0x645b9d52,0x74c1c82e,0xb9726688,
    0x55666dba,0xcda96cc4,0x2162935c,0x32e0b11c,0xb9732e5c,0x9732e5cc,
    0xd1935ccb,0xf30d8725,0x2c4ea3d9,0xa834b79d,0x2219d504,0x33aa1ecd,
    0x9d534570,0x3bbaa2c1,0x21f40ea2,0x8a4cb149,0xedab4575,0x562931dc,
    0x3626bcab,0x5375b4c9,0x64468ea5,0x49933264,0x3ae9711a,0x766fccd3,
    0x980b31a0,0x261a1d84,0xacd26b34,0x4d26b349,0x24d66935,0x93344eed,
    0x2216e950,0x03a204c5,0xa804c4a8,0x2a1a2754,0x26126064,0x35886884,
    0x5759ac4b,0x5883b5b4,0x527472b3,0xd999cb47,0x2c434930,0x5263773b,
    0x29359858,0x1e812658,0x3a21e764,0xda89dd10,0x2b99d13d,0x9d15cce8,
    0x5733a2b9,0x5935cce8,0x30f6ec9b,0x216f7a09,0xeda82c58,0x583d9b14,
    0xbb0f66c4,0x47b3623d,0xd87bb078,0x3603d93d,0xae6ec5cd,0x7b73dbab,
    0xae6ec19b,0xb10edde9,0x16e645b9,0x6f547772,0x1bb1391e,0x644773a2,
    0x87b720dd,0x01b62049,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0xcc800000,
    0x82aaa0ef,0x0c9ae4ca,0x98140d91,0x5e5c190d,0xb3064d71,0x060c887b,
    0x2f2e0ee4,0x14403511,0x54c0eedc,0x4555510a,0x0f6e44b9,0x26543719,
    0x0a098644,0x64415300,0x2aa61dc3,0x510d442a,0x45555303,0x71749148,
    0x804103bb,0x088884b9,0x55d0eab1,0x20e6b001,0x474c1a06,0x73583039,
    0xd81100e8,0x98603700,0x0ec82cad,0x6f42c522,0x316eaa22,0x01092601,
    0x22b30440,0x71667265,0x18184539,0xb1145c54,0x32b66593,0x88af6a22,
    0x0d054b14,0x304b86cc,0x22355501,0x4c2c2d9e,0xd05a4b14,0x59da8340,
    0x290eee44,0x6e442c45,0x2e12f61d,0x3987b63d,0x541b9316,0x25d45ccd,
    0x37722570,0xed9372e1,0x3b60f6c1,0x3a06ce41,0x6c06c2ec,0x250f6c1e,
    0xac4ae2c8,0x10321639,0xcea81629,0x8b5036a0,0x37aa2dbd,0x81ac98de,
    0x22930cdd,0xb1680e45,0x83907668,0x81c89368,0x26936886,0xb82eb83e,
    0x562cfb61,0x8d81660d,0x5a2680ce,0x71269349,0x83703703,0x475683e8,
    0x0dc0bce9,0x8b2e50dc,0x7db6a8d9,0x443bd916,0x54054b35,0x8f201d14,
    0x0c8c8d1f,0x2e07d9f1,0xb9962934,0x68b3684b,0x24ab9876,0x55ccb148,
    0x489ef544,0x260366b1,0x92a1b81b,0x90762ae7,0x6c64479b,0x45222b80,
    0xb8999d15,0x21b81b81,0x4743dec8,0x2067a22b,0x94a1b81b,0x4aad5cc2,
    0xd813b11e,0xcd8f65cd,0x7907621d,0x5b7b5068,0x293068ee,0x0b2cb358,
    0x91b0340d,0x3658a44b,0x220c85c8,0xb806cb14,0x54e61b81,0x033b32e5,
    0x04ccb891,0x50b1488d,0x81b81b85,0x10ded41b,0x20587bbb,0x9ca1b81b,
    0x54e65702,0x8aa00c85,0x23b02c1c,0x3b10681c,0x8f73a63b,0x3760ddc8,
    0x4376375c,0xdf82dfd9,0x3ae26e3d,0x4dd62910,0x22140eb8,0xa6eecb14,
    0xdb13dec8,0x037ba69d,0xb06c406c,0x43a873a2,0x2950b148,0xdb14eed8,
    0x93bb629d,0x38661bda,0x6c5377ea,0x9ddb14ee,0xd892eeee,0x037ba63d,
    0x574a8032,0x06800050,0x000002d6,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x20000000,0x25dc81ca,
    0x102a0a18,0x41dc8155,0x6c0f2204,0x80980e21,0x20310dda,0x46aaa1a8,
    0x8222aaa9,0x5446aaa2,0x88355501,0x6c09850c,0x14aaaa21,0x0c504c26,
    0x51441426,0x28622862,0x35506aa2,0x20c81a88,0x6dc5dbd9,0x4c0c881d,
    0xb925cc4b,0xadb83a87,0x113a20ea,0x41b8595b,0x4180c205,0x82ed8848,
    0x641ad885,0x2355d1da,0x8aa2bda8,0x6546f6a6,0x0d5742ca,0x0361d822,
    0x75caa883,0x926b3347,0xfa868dc5,0x3355aeb0,0xdad88769,0x445b5b14,
    0xc846c459,0x01a1bad8,0x26026011,0x64333220,0x0ebadb81,0x26911aaa,
    0x25d60dc4,0x87b61b8b,0x2e21ddd8,0x8867a622,0xd3a84c9d,0x68aa0640,
    0x22455064,0x53edd886,0x7dbb12c9,0x15c741d0,0x08c836b2,0x532a1a19,
    0x4cb93975,0x2d2443bc,0x35dc9548,0x6569bd95,0x033aa1cd,0x1ed85b7b,
    0x744fb762,0xb30393a8,0x1c8d8b97,0x3703b7a2,0x5c644ad8,0xd10dc0c8,
    0x5d457126,0x869223bf,0xc8399f1c,0x23666d40,0x7c58aa0c,0x5a0d82cc,
    0x2b81b03a,0x43f82e54,0x0d0c9d8c,0x26eb1b55,0x217a65bd,0x33a29748,
    0x32172e0d,0x95016d60,0x0370d1f8,0x958a4436,0x4b339303,0x3224b9e8,
    0x360dc5a8,0x2d74dc0e,0x162910dc,0x2910d057,0x11d1dc4a,0x88aa8190,
    0x3c550646,0xb076023a,0x983b0191,0xbb305d05,0x1a4cc9b8,0x4656eaaa,
    0x1b930c8d,0x3623de88,0x20555459,0x37b36a0a,0x0d077360,0x221d81b8,
    0x26072b14,0x6ccda963,0x06e34522,0xdaca8b3b,0x45221b85,0x443415c5,
    0x1a1dc3de,0x8d1540c8,0x22d4aa0c,0xb9507706,0x201b0770,0x22c8e80c,
    0x21a5d9db,0xc832bd2a,0x488b1930,0x4cc57488,0x09bbb309,0x5c068040,
    0x45221dc1,0x2c730395,0xde88e41b,0x49ddb11d,0x647ccb55,0x453bb625,
    0x3bba2b14,0x4c244344,0x640d5eef,0x362d1540,0x19dd53de,0xbf13ddf8,
    0x221fc47b,0xddf53ddf,0x89dc0c8b,0xe9aed50e,0x5ae554dd,0xaa4c320d,
    0x45221224,0x80000006,0x29ddb106,0x0003ddf8,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x40000000,0x76e41ddb,0xb8bbbb51,0x122911dd,0xa8f76601,0x76c00ba1,
    0x892f6ee1,0x944a1ddc,0xb0a50dc5,0x76ec45b7,0x5d22c573,0x18988384,
    0x777166b3,0x40dda801,0xda936a09,0x41707aa5,0x2654390a,0x96446e32,
    0x82e0c881,0x4c36723b,0xd8224ddd,0x4192dddd,0x1260d149,0x45223719,
    0x3d162915,0x1dac81d0,0x3700c815,0xd12ce55c,0x90dbc926,0x46419171,
    0xd8347e1c,0x5b126b10,0x6c57b909,0x836ee1c8,0xbb34aca9,0x911556bb,
    0x26685a89,0x25f1f41c,0x6410801d,0x40885cc9,0x1b390c2e,0xddb84ccc,
    0xd15c2800,0xdb54dcb8,0x3336a3bb,0x20162915,0x40556858,0x45c3700c,
    0x2c52258c,0x574dc7f1,0x0d24dcc5,0x0e46c1d8,0x33aa03b6,0x7d0b1b10,
    0xb03ad8a8,0xc8c836b6,0x16c43a61,0x2603b06e,0x00980000,0x44313000,
    0x00003bbb,0x26933475,0x0b3072b4,0x6edd66b1,0x2ed4345d,0x177b6e13,
    0x58c8b86e,0x91b2c522,0xb176b2a5,0x770341b1,0xb3b0d950,0xb9b86730,
    0xc8836ee2,0x04c103b9,0x2edce251,0x3bae3bdb,0x00000370,0x00000000,
    0xddd80000,0x5d333a21,0x3720cdbd,0x3173763c,0x554f76a0,0x40c85d0a,
    0x9174eed8,0x258a44b1,0x2e47cc20,0x7c41a042,0xac1fc3dd,0x4210085a,
    0x1b88b359,0x00000000,0x00000000,0x00000000,0x00000000,0x3001d800,
    0x005c0133,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,
};

static signed short stb__consolas_10_latin_ext_x[560]={ 0,2,1,0,0,0,0,2,1,1,0,0,1,1,
1,0,0,0,0,0,0,0,0,0,0,0,2,1,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,0,
1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,
2,0,0,0,1,0,0,1,0,0,1,0,1,1,0,0,0,1,2,1,1,0,0,0,0,0,0,0,0,0,
0,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,
0,-2,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,0,0,0,-1,0,
0,0,0,0,0,0,0,0,0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,-1,0,-1,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0, };
static signed short stb__consolas_10_latin_ext_y[560]={ 7,0,0,0,-1,0,0,0,-1,-1,0,1,5,3,
5,0,0,0,0,0,0,0,0,0,0,0,2,2,1,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,0,-1,0,8,0,2,0,2,0,2,0,2,0,0,
0,0,0,2,2,2,2,2,2,2,0,2,2,2,2,2,2,-1,-1,-1,3,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,2,-1,0,0,0,
-1,0,0,0,0,2,3,3,0,0,0,1,0,0,0,2,0,3,7,0,0,2,0,0,0,2,-2,-2,-2,-2,
-2,-2,0,0,-2,-2,-2,-2,-2,-2,-2,-2,0,-2,-2,-2,-2,-2,-2,2,-1,-2,-2,-2,-2,-2,0,0,0,0,
0,0,0,-1,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,
-1,0,-2,0,0,2,-2,0,-2,0,-2,0,-2,0,-2,-1,0,0,-1,0,-2,0,-2,0,0,2,-2,0,-2,0,
-2,0,-2,0,0,-1,-2,-2,0,0,-2,0,-1,0,-2,0,0,0,-2,2,0,0,-2,0,0,0,2,-2,-2,0,
0,-1,-1,0,0,0,0,-2,0,0,2,-2,0,-1,0,2,-1,0,-2,0,-2,0,0,2,-2,0,0,2,-2,0,
-2,0,-2,0,0,2,-2,0,0,0,-2,-1,0,0,-2,0,-1,0,-2,0,-2,-1,-2,0,0,2,-2,0,-2,0,
-2,-2,0,-2,0,-2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,-3,-2,-2,0,-2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0, };
static unsigned short stb__consolas_10_latin_ext_w[560]={ 0,2,4,6,5,6,6,2,4,4,5,6,3,4,
3,5,6,5,5,5,6,5,5,5,5,5,2,3,5,5,4,4,6,6,5,5,6,5,4,5,5,5,5,6,
4,6,5,6,5,6,6,5,6,5,6,6,6,6,5,4,5,3,5,6,4,5,5,5,5,5,6,6,5,5,
5,6,5,6,5,6,5,5,6,5,5,5,6,6,6,6,5,5,2,4,6,6,6,6,6,6,6,6,6,6,
6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,0,2,5,5,6,6,
2,5,5,6,4,5,5,4,5,5,4,5,4,4,5,6,5,3,2,4,4,5,6,6,6,5,6,6,6,6,
6,6,7,5,5,5,5,5,5,5,5,5,6,5,6,6,6,6,6,5,6,5,5,5,5,6,5,5,5,5,
5,5,5,5,6,5,5,5,5,5,5,5,5,5,5,5,6,6,6,6,6,6,6,5,5,5,5,6,5,6,
6,5,6,5,6,5,5,5,5,5,5,5,5,5,7,7,6,6,5,5,5,5,5,5,5,5,5,5,5,6,
5,6,5,6,5,6,5,5,6,5,5,5,5,5,5,5,5,6,5,5,5,5,5,5,6,6,6,5,5,4,
5,7,7,6,7,5,5,5,5,5,5,5,5,5,5,5,6,6,6,6,6,6,6,6,7,6,6,6,7,6,
5,5,5,5,5,5,5,5,6,5,6,7,6,5,5,5,5,5,5,5,5,5,6,6,5,5,6,6,6,6,
6,5,5,5,5,5,5,5,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,
6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,
6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,
6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,
6,6,6,6,6,6,6,6,6,6,6,5,7,6,7,7,6,6,6,6,6,6,6,6,6,6,6,6,6,6,
6,6,6,6,6,6,6,6,6,6,5,5,6,5,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,
6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,
6,6,6,6,6,6, };
static unsigned short stb__consolas_10_latin_ext_h[560]={ 0,8,3,7,10,8,8,3,11,11,5,6,4,2,
3,9,8,7,7,8,7,8,8,7,8,7,6,7,7,3,7,8,10,7,7,8,7,7,7,8,7,7,8,7,
7,7,7,8,7,9,7,8,7,8,7,7,7,7,7,11,9,11,4,2,3,6,8,6,8,6,7,8,7,7,
10,7,7,5,5,6,8,8,5,6,8,6,5,5,5,8,5,11,11,11,3,7,7,7,7,7,7,7,7,7,
7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,0,8,10,7,7,7,
11,9,3,8,6,5,4,2,5,3,4,6,4,4,3,8,9,3,2,4,6,5,7,7,7,8,9,9,9,9,
9,9,7,9,9,9,9,9,9,9,9,9,7,9,10,10,10,10,10,5,10,10,10,10,10,9,7,8,8,8,
8,8,8,9,6,7,8,8,8,8,7,7,7,7,8,7,8,8,8,8,8,6,8,8,8,8,8,10,10,10,
8,8,9,8,9,7,10,8,10,8,10,8,10,8,9,9,7,8,8,8,9,8,9,8,9,7,9,8,10,10,
10,10,10,10,10,11,9,9,7,7,9,7,8,7,9,7,9,9,9,5,8,10,10,10,10,10,5,9,9,10,
10,8,8,7,7,7,7,9,7,10,8,9,7,8,10,8,9,8,10,8,10,8,8,6,9,7,10,8,9,7,
10,8,10,8,9,7,10,8,10,10,9,9,7,8,10,8,9,8,10,8,10,9,10,8,9,7,9,7,9,10,
9,9,7,9,7,9,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,9,7,7,7,
7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,
7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,
7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,
7,7,7,7,7,7,7,7,7,7,10,10,9,8,11,9,7,7,7,7,7,7,7,7,7,7,7,7,7,7,
7,7,7,7,7,7,7,7,7,7,10,8,10,10,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,
7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,
7,7,7,7,7,7, };
static unsigned short stb__consolas_10_latin_ext_s[560]={ 255,30,228,249,52,217,185,191,27,42,126,
54,183,239,187,109,236,84,103,230,99,8,205,120,192,195,51,221,231,233,237,
129,58,39,46,93,133,140,109,157,121,127,13,210,192,203,197,61,217,90,223,
211,114,117,152,185,178,171,165,7,66,35,162,244,223,8,224,40,74,21,90,
1,78,72,111,58,52,67,74,1,68,80,99,248,140,27,112,86,138,146,106,
1,39,47,206,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,
188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,255,252,175,
170,163,156,32,78,200,198,230,132,151,239,145,194,157,235,173,168,213,243,103,
219,251,178,46,93,55,20,42,250,140,147,154,161,168,193,112,250,41,181,244,
238,175,35,134,232,201,84,198,205,237,84,7,80,20,33,91,117,218,127,97,
55,49,43,37,31,25,29,14,62,1,246,240,234,182,150,176,138,204,49,191,
184,177,170,163,33,150,144,138,132,126,39,91,104,98,216,219,198,206,132,46,
228,129,39,117,19,111,24,1,9,92,17,33,80,226,92,213,210,200,106,187,
74,79,65,52,58,212,150,137,12,121,115,32,20,97,86,222,144,72,8,60,
53,47,61,166,186,1,250,123,130,119,243,237,181,163,53,45,35,27,74,80,
177,68,123,68,150,126,86,85,7,189,61,72,105,97,112,119,241,15,1,104,
86,208,242,27,99,14,111,23,225,244,123,230,224,135,142,208,134,192,179,196,
14,169,160,157,171,143,153,202,215,1,65,8,97,230,224,146,249,159,183,14,
26,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,156,
188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,
188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,
188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,
188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,
188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,
188,188,188,77,71,163,172,19,216,188,188,188,188,188,188,188,188,188,188,188,
188,188,188,188,188,188,188,188,188,188,188,188,188,65,105,230,224,188,188,188,
188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,
188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,
188,188,188,188,188,188,188,188,188, };
static unsigned short stb__consolas_10_latin_ext_t[560]={ 12,34,70,53,1,44,44,70,1,1,70,
70,70,70,70,24,44,61,61,44,53,53,44,53,44,53,70,53,53,70,53,
44,1,61,61,44,61,61,61,34,61,61,44,61,61,61,61,44,61,24,61,
44,61,44,61,61,61,61,61,1,24,1,70,70,70,70,44,70,44,70,61,
53,61,61,1,61,61,70,70,70,44,44,70,61,44,70,70,70,70,44,70,
1,1,1,70,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,
53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,12,34,1,
53,53,53,1,24,70,44,61,70,70,70,70,70,70,61,70,70,70,44,24,
70,70,70,70,70,53,53,53,44,24,24,24,24,24,24,53,24,24,24,24,
24,24,24,24,24,53,24,1,1,1,1,13,70,13,13,1,1,1,24,61,
44,44,44,44,44,44,24,70,53,44,34,34,34,53,53,53,53,34,53,34,
34,34,34,34,70,34,34,34,34,34,13,12,12,34,34,24,34,24,53,13,
34,12,34,12,44,12,34,34,34,53,34,34,34,24,34,24,34,24,53,24,
34,12,12,12,12,1,1,1,1,24,24,61,61,24,53,34,53,24,62,24,
24,24,70,44,1,13,1,1,1,70,12,12,1,1,34,34,53,53,53,53,
12,53,12,34,12,53,34,12,44,12,34,12,34,12,34,34,61,24,62,1,
44,12,53,13,44,13,44,24,53,1,44,1,1,12,12,53,44,1,44,12,
53,1,44,1,12,1,44,12,53,24,61,24,1,12,12,61,12,61,12,62,
61,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,12,
53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,
53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,
53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,
53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,
53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,
53,53,53,1,1,12,44,1,12,53,53,53,53,53,53,53,53,53,53,53,
53,53,53,53,53,53,53,53,53,53,53,53,53,1,44,1,1,53,53,53,
53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,
53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,
53,53,53,53,53,53,53,53,53, };
static unsigned short stb__consolas_10_latin_ext_a[560]={ 88,88,88,88,88,88,88,88,
88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,
88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,
88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,
88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,
88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,
88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,
88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,
88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,
88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,
88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,
88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,
88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,
88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,
88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,
88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,
88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,
88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,
88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,
88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,
88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,
88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,
88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,
88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,
88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,
88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,
88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,
88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,
88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,
88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,
88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,
88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,
88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,
88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,
88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,
88,88,88,88,88,88,88,88, };

// Call this function with
//    font: NULL or array length
//    data: NULL or specified size
//    height: STB_FONT_consolas_10_latin_ext_BITMAP_HEIGHT or STB_FONT_consolas_10_latin_ext_BITMAP_HEIGHT_POW2
//    return value: spacing between lines
static void stb_font_consolas_10_latin_ext(stb_fontchar font[STB_FONT_consolas_10_latin_ext_NUM_CHARS],
                unsigned char data[STB_FONT_consolas_10_latin_ext_BITMAP_HEIGHT][STB_FONT_consolas_10_latin_ext_BITMAP_WIDTH],
                int height)
{
    int i,j;
    if (data != 0) {
        unsigned int *bits = stb__consolas_10_latin_ext_pixels;
        unsigned int bitpack = *bits++, numbits = 32;
        for (i=0; i < STB_FONT_consolas_10_latin_ext_BITMAP_WIDTH*height; ++i)
            data[0][i] = 0;  // zero entire bitmap
        for (j=1; j < STB_FONT_consolas_10_latin_ext_BITMAP_HEIGHT-1; ++j) {
            for (i=1; i < STB_FONT_consolas_10_latin_ext_BITMAP_WIDTH-1; ++i) {
                unsigned int value;
                if (numbits==0) bitpack = *bits++, numbits=32;
                value = bitpack & 1;
                bitpack >>= 1, --numbits;
                if (value) {
                    if (numbits < 3) bitpack = *bits++, numbits = 32;
                    data[j][i] = (bitpack & 7) * 0x20 + 0x1f;
                    bitpack >>= 3, numbits -= 3;
                } else {
                    data[j][i] = 0;
                }
            }
        }
    }

    // build font description
    if (font != 0) {
        float recip_width = 1.0f / STB_FONT_consolas_10_latin_ext_BITMAP_WIDTH;
        float recip_height = 1.0f / height;
        for (i=0; i < STB_FONT_consolas_10_latin_ext_NUM_CHARS; ++i) {
            // pad characters so they bilerp from empty space around each character
            font[i].s0 = (stb__consolas_10_latin_ext_s[i]) * recip_width;
            font[i].t0 = (stb__consolas_10_latin_ext_t[i]) * recip_height;
            font[i].s1 = (stb__consolas_10_latin_ext_s[i] + stb__consolas_10_latin_ext_w[i]) * recip_width;
            font[i].t1 = (stb__consolas_10_latin_ext_t[i] + stb__consolas_10_latin_ext_h[i]) * recip_height;
            font[i].x0 = stb__consolas_10_latin_ext_x[i];
            font[i].y0 = stb__consolas_10_latin_ext_y[i];
            font[i].x1 = stb__consolas_10_latin_ext_x[i] + stb__consolas_10_latin_ext_w[i];
            font[i].y1 = stb__consolas_10_latin_ext_y[i] + stb__consolas_10_latin_ext_h[i];
            font[i].advance_int = (stb__consolas_10_latin_ext_a[i]+8)>>4;
            font[i].s0f = (stb__consolas_10_latin_ext_s[i] - 0.5f) * recip_width;
            font[i].t0f = (stb__consolas_10_latin_ext_t[i] - 0.5f) * recip_height;
            font[i].s1f = (stb__consolas_10_latin_ext_s[i] + stb__consolas_10_latin_ext_w[i] + 0.5f) * recip_width;
            font[i].t1f = (stb__consolas_10_latin_ext_t[i] + stb__consolas_10_latin_ext_h[i] + 0.5f) * recip_height;
            font[i].x0f = stb__consolas_10_latin_ext_x[i] - 0.5f;
            font[i].y0f = stb__consolas_10_latin_ext_y[i] - 0.5f;
            font[i].x1f = stb__consolas_10_latin_ext_x[i] + stb__consolas_10_latin_ext_w[i] + 0.5f;
            font[i].y1f = stb__consolas_10_latin_ext_y[i] + stb__consolas_10_latin_ext_h[i] + 0.5f;
            font[i].advance = stb__consolas_10_latin_ext_a[i]/16.0f;
        }
    }
}

#ifndef STB_SOMEFONT_CREATE
#define STB_SOMEFONT_CREATE              stb_font_consolas_10_latin_ext
#define STB_SOMEFONT_BITMAP_WIDTH        STB_FONT_consolas_10_latin_ext_BITMAP_WIDTH
#define STB_SOMEFONT_BITMAP_HEIGHT       STB_FONT_consolas_10_latin_ext_BITMAP_HEIGHT
#define STB_SOMEFONT_BITMAP_HEIGHT_POW2  STB_FONT_consolas_10_latin_ext_BITMAP_HEIGHT_POW2
#define STB_SOMEFONT_FIRST_CHAR          STB_FONT_consolas_10_latin_ext_FIRST_CHAR
#define STB_SOMEFONT_NUM_CHARS           STB_FONT_consolas_10_latin_ext_NUM_CHARS
#define STB_SOMEFONT_LINE_SPACING        STB_FONT_consolas_10_latin_ext_LINE_SPACING
#endif

