// Font generated by stb_font_inl_generator.c (4/1 bpp)
//
// Following instructions show how to use the only included font, whatever it is, in
// a generic way so you can replace it with any other font by changing the include.
// To use multiple fonts, replace STB_SOMEFONT_* below with STB_FONT_consolas_bold_32_usascii_*,
// and separately install each font. Note that the CREATE function call has a
// totally different name; it's just 'stb_font_consolas_bold_32_usascii'.
//
/* // Example usage:

static stb_fontchar fontdata[STB_SOMEFONT_NUM_CHARS];

static void init(void)
{
    // optionally replace both STB_SOMEFONT_BITMAP_HEIGHT with STB_SOMEFONT_BITMAP_HEIGHT_POW2
    static unsigned char fontpixels[STB_SOMEFONT_BITMAP_HEIGHT][STB_SOMEFONT_BITMAP_WIDTH];
    STB_SOMEFONT_CREATE(fontdata, fontpixels, STB_SOMEFONT_BITMAP_HEIGHT);
    ... create texture ...
    // for best results rendering 1:1 pixels texels, use nearest-neighbor sampling
    // if allowed to scale up, use bilerp
}

// This function positions characters on integer coordinates, and assumes 1:1 texels to pixels
// Appropriate if nearest-neighbor sampling is used
static void draw_string_integer(int x, int y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0, cd->t0); glVertex2i(x + cd->x0, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t0); glVertex2i(x + cd->x1, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t1); glVertex2i(x + cd->x1, y + cd->y1);
        glTexCoord2f(cd->s0, cd->t1); glVertex2i(x + cd->x0, y + cd->y1);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance_int;
    }
    glEnd();
}

// This function positions characters on float coordinates, and doesn't require 1:1 texels to pixels
// Appropriate if bilinear filtering is used
static void draw_string_float(float x, float y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0f, cd->t0f); glVertex2f(x + cd->x0f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t0f); glVertex2f(x + cd->x1f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t1f); glVertex2f(x + cd->x1f, y + cd->y1f);
        glTexCoord2f(cd->s0f, cd->t1f); glVertex2f(x + cd->x0f, y + cd->y1f);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance;
    }
    glEnd();
}
*/

#ifndef STB_FONTCHAR__TYPEDEF
#define STB_FONTCHAR__TYPEDEF
typedef struct
{
    // coordinates if using integer positioning
    float s0,t0,s1,t1;
    signed short x0,y0,x1,y1;
    int   advance_int;
    // coordinates if using floating positioning
    float s0f,t0f,s1f,t1f;
    float x0f,y0f,x1f,y1f;
    float advance;
} stb_fontchar;
#endif

#define STB_FONT_consolas_bold_32_usascii_BITMAP_WIDTH         256
#define STB_FONT_consolas_bold_32_usascii_BITMAP_HEIGHT        142
#define STB_FONT_consolas_bold_32_usascii_BITMAP_HEIGHT_POW2   256

#define STB_FONT_consolas_bold_32_usascii_FIRST_CHAR            32
#define STB_FONT_consolas_bold_32_usascii_NUM_CHARS             95

#define STB_FONT_consolas_bold_32_usascii_LINE_SPACING          21

static unsigned int stb__consolas_bold_32_usascii_pixels[]={
    0x80005999,0xca880000,0x579d70ed,0x1e540000,0x002a6200,0xdddddddb,
    0x3bbbba23,0x797005ee,0x88000000,0x009bcdb9,0x00000000,0x4d440406,
    0x00000000,0x3fe00188,0x42f4404f,0x2e0004e8,0xf91fffff,0x0003dfff,
    0x805fffb8,0x3effffe9,0xffffffd0,0x3fffe63f,0xff007fff,0xff30000b,
    0x3ffa607f,0x201fffff,0xa8006ffe,0x32a07fff,0xfddffffe,0x1ffffe43,
    0x3f23ffd0,0x3200bcef,0xfffd52ee,0x4fff803b,0x897ffa20,0xa8004ffe,
    0x91ffffff,0x00dfffff,0x07fffe80,0x7fffffdc,0xfffe83ff,0xff31ffff,
    0x00ffffff,0x00009ff1,0xf701fff9,0xffffffff,0x3ffee07f,0x7ffd4001,
    0xffffc887,0x23ffffff,0x1ffffffc,0x3f24ffb8,0x80cfffff,0xfffbbffe,
    0x3e02ffff,0xffd104ff,0x7fff447f,0x7fff4004,0x3666219c,0x20003fff,
    0x3207fffd,0xfdbbdfff,0x4ccc43ff,0xff31fffa,0x8033335f,0x000cffb9,
    0x213ffe20,0xeefffffa,0x881fffff,0x54004fff,0xffe87fff,0xffffefff,
    0x51dff13f,0x6ff98bff,0x7fffffe4,0x77ff40ff,0xffffffff,0x09fff00f,
    0x2213fff6,0x3003fffe,0x3a007fff,0x260006ff,0xff502fff,0x0fff707f,
    0xf31fff98,0xfb3003ff,0x7fffffff,0x3fff7000,0x889fffd0,0xf905fffe,
    0x7cc001ff,0x7ffdc6ff,0x9fffdc2f,0x1bfe3ffa,0xcb983ffd,0x46fffffd,
    0x8cfffffe,0xf04fffe9,0xfff509ff,0x7fff4409,0x0fffa800,0x00fff700,
    0x3e201300,0x3ff603ff,0x47ffe602,0x6c01fff9,0xffffffff,0xfe8004ff,
    0x5fffa86f,0x03ffff10,0x4007fff3,0x3e26fff9,0xffa81fff,0x745ff73f,
    0x013fee7f,0x8fffff22,0x441ffffe,0xfff07fff,0x06fff889,0x805fffa8,
    0x2a007ffb,0x00000fff,0x501bfee0,0x7fcc0bff,0x03fff31f,0x7fffffe4,
    0x004fffff,0x7417ffd4,0x3f601fff,0xdffb03ff,0x37ffcc00,0x2a0bfff5,
    0x7ff53fff,0x6ff8b7fc,0x2fffe400,0x3a05fffd,0xfff80fff,0x017ffec4,
    0x403fffd8,0x26007ffb,0x3ae00fff,0xeeeeeeee,0x01fff84e,0xf303ffc4,
    0x3ffe63ff,0x5ffff101,0x0aa2dfd1,0x20fffb00,0x7d407fff,0xfff504ff,
    0x3ffe2005,0x40bffee5,0xff13fffa,0x369ff95d,0x7cc001ff,0x1fffa7ff,
    0xf81fffc8,0x3ffe24ff,0x3ffe2005,0x03ffdc06,0x401fff30,0xfffffffc,
    0x7fd45fff,0x36f3b2a6,0xf300ffea,0x3ffe63ff,0x4bfff501,0x220005ff,
    0xff883fff,0x7ffcc06f,0x017ffa05,0xfb2fffc4,0x3fea03ff,0x3ffff23f,
    0x04ffb8ff,0x27fff980,0x3f207ffe,0x4fff82ff,0x0007ffee,0x5c03fff9,
    0x3e6006ff,0x3ff201ff,0xffffffff,0xfc9ffec5,0xfd9fffff,0x3fff301f,
    0x5c07ffe6,0x9ff15fff,0x7ffe4000,0x05fff980,0x7037ffc4,0xf1003fff,
    0x7ffecbff,0x87fff501,0xf88dfffc,0xfb8000ef,0x1fffa5ff,0xf82fffc8,
    0x1bffa4ff,0x13ffe600,0x2006ffc8,0x0003fff8,0xfff17ffe,0xffffff51,
    0x203ffb3f,0xff31fff9,0x3ffe603f,0x002ffacf,0x209fff10,0x4404fffa,
    0x3e207fff,0xff8804ff,0x07fff65f,0x081fffd4,0x98017fec,0x2ffffca9,
    0xfd81fffa,0x4fff80ff,0x0009fff3,0x7c41fffe,0x7fc004ff,0x3fe0005f,
    0x6dbfe25f,0x8fff9cff,0xff302ffc,0x07ffe63f,0x7fffffc4,0xf70001ff,
    0x3fea03ff,0x7ffc405f,0x07ffe406,0xf927ffc0,0x3ff205ff,0x4ffa803f,
    0xfffff300,0x7ffe8bff,0x7c1fffe0,0x5fff54ff,0x9fff2000,0x1ffffca9,
    0x7fffe400,0x3fe000ad,0x237fea5f,0x7ff88fff,0x3e605ff9,0x3fff31ff,
    0x7ffffd40,0x4000bfff,0x3e606ffe,0x7fc405ff,0x7ffcc05f,0x24fff803,
    0xfb85fffa,0x7c403fff,0xff3000ff,0xfd09ffff,0x3ffee0ff,0x2e9fff06,
    0x70001fff,0x3ff21fff,0x30001dff,0x003ffffd,0xff92fffc,0x3e6dff57,
    0x205ff97f,0xff31fff9,0xffea803f,0x03ffffff,0x405fff30,0x4c06fff8,
    0xfd805fff,0x4fff806f,0x44ffffe2,0x03fffffc,0x01117fec,0x056fffc4,
    0xfa87ffe8,0xfff01fff,0x003fff29,0xc8fffdc0,0x0003ffff,0x07ffffae,
    0x325fff80,0x55ffbaff,0x07ff2dff,0xf98fffcc,0xfd7001ff,0x0bffffff,
    0x880fffb0,0x2e00ffff,0xfa804fff,0x7ffc02ff,0x7ffffe43,0x3fffffff,
    0x7dd7fea0,0xff882fff,0x7fff402f,0xfffffeef,0x6d3ffe04,0x2a0007ff,
    0xfd952fff,0xc8001fff,0x00ccefff,0xfd97ffe0,0xf74ffbaf,0x407ff6bf,
    0xff31fff9,0x7fc4003f,0x03ffffff,0x2013ffe2,0x3a02fffe,0xfd001fff,
    0x3ffe80bf,0x7fffff44,0x03fffbff,0xff71fff1,0xf883ffff,0x7ff402ff,
    0xffffffff,0xca7ffc04,0x50000fff,0xff503fff,0xfff8009f,0x3ffe0005,
    0x3f27ff65,0x3a9ff74f,0xfff300ff,0x007ffe63,0xfeabff98,0x3ff206ff,
    0xfffb800f,0x5fffa80e,0x03ffee00,0xfb01ccb8,0xff31dfff,0x2bff607f,
    0xffbaeff8,0x400ccc85,0xfffffffe,0xfff801df,0x003fff74,0x403ffee0,
    0x26005ffe,0x20001fff,0x3ffa5fff,0xff94ffc9,0xf981bfe7,0x3fff31ff,
    0xa97fd400,0x3fe07fff,0xfff1005f,0xff9335df,0x7c4005ff,0x300004ff,
    0x1fffd415,0xff9affd4,0x0001ffa4,0x1331fffd,0x74fff800,0x20005fff,
    0x3f207ffc,0x3fe6006f,0x3fe0000f,0x2e7ff65f,0xbfff8cff,0x3e604ffa,
    0x3fff31ff,0x88ffdc00,0xff507fff,0x7fd4003f,0xffffffff,0xffc8004f,
    0x0057100f,0x10fffea0,0x3fea1fff,0x3261ff62,0x07ffe803,0xaa7ffc00,
    0xb0004fff,0x7fdc0fff,0x3ffe6007,0x3ffe0000,0x3eabff25,0xfefffeff,
    0x3fe602ff,0x03fff31f,0x5cff9026,0xffd05fff,0xfff7000d,0x09ffffff,
    0x0fffe600,0x0017ffe2,0xf90fffea,0xd27fcc5f,0x5fffb8ff,0x003fff40,
    0xff93ffe0,0xff88006f,0x1ffee04f,0x00fff980,0xc97ffe00,0xfffff3ff,
    0x809ffffd,0xff31fff9,0x33bf203f,0xffdbffeb,0xfff982ff,0xff930002,
    0x0003bfff,0xfb86ffe8,0x54000fff,0x3fe63fff,0x5cf7fc45,0x7fff45ff,
    0x1fffa00f,0x49fff000,0x4001fffc,0x2e01fffb,0x3e6007ff,0x3e0000ff,
    0x53fee5ff,0xff99fffa,0xfff9805f,0x203fff31,0xfffffffc,0xb04fffff,
    0x10000fff,0x00009fff,0xf707ffea,0xa8001fff,0x3ffa3fff,0xfffffc80,
    0x7fffec0f,0x01fffa00,0x4c9fff00,0x74004fff,0x7fdc06ff,0x3ffe6007,
    0xfff10000,0x3137fd4b,0x7fcc0030,0x03fff31f,0x3ffffff2,0x103fffff,
    0x00009fff,0x0103bffe,0x117ffe00,0x50009ffd,0x3ff27fff,0xdfff9103,
    0x07fff303,0x0007ffe8,0x3fa27ffc,0xff7001ff,0x7ffa807f,0x01ffea00,
    0x24fffa80,0x0001fff8,0x4c7ffe60,0x95101fff,0x59dffffb,0x00fffc80,
    0xdfffb000,0x0007f957,0x3301fff7,0x26662000,0x00988000,0x4c400544,
    0x7fc00019,0x37ffcc4f,0x037ffc40,0x800fffcc,0x20006ffc,0x7e43fffc,
    0x2600005f,0xfff31fff,0x0bfea003,0x005fff80,0x3fffe200,0x001fffff,
    0x0027ffc4,0x00000000,0x00000000,0x7e427ffc,0x7fec03ff,0xfff8801f,
    0x7ffd400e,0x2602a205,0x7cc1ffff,0x00a604ff,0xf98fffcc,0xff9001ff,
    0x3ffea003,0x7d400001,0x1effffff,0x07ffd800,0x00000000,0x00000000,
    0x884fff80,0xf903fffe,0x7e4009ff,0xd70eefff,0x403ffffd,0xfeccdff8,
    0xffd05fff,0xfb7337bf,0x3bbbb609,0xfff31fff,0x360bdddd,0x2aa6007f,
    0x71000002,0x0007bddb,0x00055544,0x00000000,0x00000000,0x7cc13ffe,
    0x7fe42fff,0x7f44006f,0xff91ffff,0xf8809fff,0xffffffff,0x3fff600e,
    0x04ffffff,0xfffffffd,0x3ffffe63,0x0bd907ff,0x00000000,0x00000000,
    0x00000000,0x00000000,0x4c09fff0,0x3fe26fff,0xd70000ef,0x3ff23fff,
    0xff8801df,0x03ffffff,0xffffff90,0x3ffa039f,0xf31fffff,0x0fffffff,
    0x00000000,0x00000000,0x00000000,0x00000000,0x09fff000,0x7d40ef98,
    0x86200005,0x53000098,0x00013597,0x80135753,0x19999998,0x4ccccccc,
    0x00000001,0x00000000,0x00000000,0x00000000,0xfff80000,0x03009804,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x0027ffc0,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x35550000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x80000000,0x00000019,0x00000000,0x00039910,0x00000000,
    0x3deedb80,0x09ddd500,0x001dddb0,0x009aa988,0x8000eb98,0x09bcdb98,
    0x802aaa60,0x5510aaa9,0x55555555,0x5c400035,0xeeeffffe,0x7d4003ee,
    0x0fffd3ff,0x01fff900,0xffff8800,0x00fffd00,0x1177e440,0xffffffff,
    0xfffd3003,0x8803dfff,0x2600ffff,0x26005fff,0x2ffffffe,0x003fffa0,
    0xffffff30,0x3ff203ff,0x3fff201f,0xffffff11,0x889fffff,0xff302efc,
    0xffffffff,0xfa8009ff,0x0fffd3ff,0x01fff900,0xffffa800,0x00fffd03,
    0x8ffffe40,0xfffffff8,0xfffe801f,0x806fffff,0x3203fffd,0xf7002fff,
    0x5fffffff,0x007fff40,0xffffff90,0xf907ffff,0x7fe403ff,0xfffff11f,
    0x89ffffff,0x441ffffc,0xfebcfffe,0x004fffff,0xfe9fffd4,0xffc8007f,
    0x7cc0000f,0xffd02fff,0x7ffc000f,0xdddd13ff,0xb803ffff,0xffb13fff,
    0xfff9805f,0x01fffe06,0x6f7fffcc,0x3fa02fed,0xff5000ff,0xfffddfff,
    0xfffc83ff,0x47fff201,0xfffffff8,0x7fc4ffff,0x7fd43fff,0x17ffd42f,
    0x3fffa800,0x9000fffd,0x00001fff,0x7f40bffb,0x3fa0007f,0x3f603fff,
    0x7ff401ff,0x027ffc45,0x540ffff4,0xfb004fff,0xfd0009ff,0x3fa001ff,
    0x7ff444ff,0x0fffe45f,0x223fff90,0x9999bfff,0x7ff40999,0x37fe43ff,
    0x0005fff8,0x3fa7fff5,0xffc8007f,0x1100000f,0x007ffe80,0x03bffea0,
    0x401fffd8,0xfff84fff,0x4fffb803,0x000fffd8,0x3a00fffd,0xeffffeee,
    0x2e1eeeee,0xff105fff,0x7ffe41ff,0x47fff201,0x4002fff8,0x6c0efffa,
    0xdffb06ff,0xfff51800,0x021fffa7,0x001fff90,0x7ff40000,0x73000c47,
    0xfffd8017,0x237ff401,0x8802fffa,0x7fc47fff,0x3ffe005f,0xfffff005,
    0xffffffff,0x0ffff43f,0x647fffb0,0x3f201fff,0x5fff11ff,0x01773000,
    0xfd01fff9,0xfed9809f,0xd3ffffff,0x3ff66dff,0xfffc81df,0x0deeec80,
    0xddddddd1,0x5bffa01d,0x01efffea,0x3fff6000,0x97ffe401,0x2006fff9,
    0x3ee1fffd,0xff1002ff,0x3ffe00bf,0xffffffff,0x3ffe1fff,0x27ffd407,
    0x6403fff9,0xfff11fff,0xf5000005,0x7fe43bff,0xfff9102f,0x7fffffff,
    0x3febbffa,0x642fffff,0x7fdc0fff,0x3ffe21ff,0xd01fffff,0xffff7dff,
    0x00003fff,0x1007fff6,0xfff9ffff,0x7fd4003f,0x01fffa4f,0x005fff88,
    0x801fffd0,0x4c06fff8,0x3ff25fff,0x3fff201f,0x99bfff11,0xb0000157,
    0xffffffff,0x7fff40bf,0xfffffeff,0xffffffd3,0x41ffffff,0x3e60fffc,
    0x7fc42fff,0x01ffffff,0xfffffffd,0x000dffff,0x007fff60,0x3fffffee,
    0xffe8000e,0x409fff37,0xfffccccb,0x04ccccce,0x2007fff4,0x4405fff9,
    0x3ff26fff,0x3fff201f,0xffffff11,0x0003bfff,0x3fffffa2,0xf700cfff,
    0xffb85fff,0xfffffd3f,0x9fffd319,0xf887ffe4,0xfb003fff,0x3ffa03ff,
    0xffa8cfff,0xd80001ff,0xf8801fff,0x0003ffff,0x3f2bffee,0x3ff601ff,
    0xffffffff,0x7f407fff,0x7fd400ff,0x7ffc404f,0x807fff27,0xff11fffc,
    0xffffffff,0xff90003f,0x0179995b,0x40ffffc4,0xffd3fffa,0xfff883ff,
    0x223fff27,0x2004fffe,0xfd01fffd,0xffc83fff,0x019b702f,0x401fffd8,
    0x3ffffff9,0x10033322,0xdffdbfff,0xfffffd80,0xffffffff,0x07fff407,
    0x017ffea0,0x7e4dfff1,0x3ff201ff,0x7555511f,0x0fffffd9,0x17ffc026,
    0x2fffd400,0xfd3fffa8,0x3ffa05ff,0xb1fff90f,0xd8009fff,0xffd01fff,
    0x7fff505f,0x01ffff70,0x100fffec,0xffffffff,0x003ffe63,0x3ffffff6,
    0x5d554c03,0xaaaaefff,0x7fff402a,0x2fffcc00,0xc97ffe20,0x3f201fff,
    0xff5001ff,0x7ff443ff,0x09efff84,0x0bffee00,0xfe9fffd4,0x3fff207f,
    0xffbfff91,0xffb000bf,0x1fffa03f,0x741fffd4,0x3604ffff,0x3f601fff,
    0xffffaaff,0x800fffa8,0x0ffffffa,0x2fffc400,0x0fffe800,0x037ffc40,
    0xfc93ffe6,0x3ff201ff,0x3ff2001f,0x3ffff63f,0x7ffffec2,0x40bdefff,
    0xf501fffc,0x1fffa7ff,0xf92fffc8,0x03ffffff,0x03fffb00,0x7d41fffa,
    0xfffd83ff,0x3fff606f,0x49fff101,0xffcefffc,0x3fffe007,0xff88004f,
    0xffd0005f,0xffff001f,0x1fffdc01,0x6c03fff9,0x2a000fff,0x3ffe4fff,
    0x7ff444ff,0xffffffff,0x07fff61f,0xfe9fffd4,0x3fff207f,0xff9fff92,
    0xfd8001df,0xfffd01ff,0x20fffea0,0x207ffff9,0xf501fffd,0xfffd85ff,
    0x32005fff,0x8000ffff,0x0005fff8,0xd001fffd,0x7f405fff,0x3ffee1ff,
    0x01fffa02,0x747fff70,0x7d42ffff,0xffeeeeff,0xffb0ffff,0x3ffea03f,
    0x6c0fffd3,0xfff90fff,0x00bfffb1,0xd01fffd8,0x3fea0fff,0xbfff503f,
    0x80fffec0,0x7441fffb,0x001fffff,0x0013fff2,0x002fffc4,0x802fffd8,
    0xa80efffa,0x7fd46fff,0xbfff105f,0x7fff4400,0x317ffe61,0x3a60bfff,
    0xfff92fff,0x4ffff205,0x3fe07ffe,0x23fff27f,0x003ffff8,0x7407fff6,
    0xfff507ff,0x13ffe207,0x501fffd8,0xff309fff,0x7c400dff,0x10000fff,
    0x2000bfff,0x800dfffc,0x99aefffe,0x441ffffc,0x7443ffff,0x20662fff,
    0x86fffea8,0xfffc8198,0x4bffee00,0xfb85fffa,0xfffd3fff,0xc9bffee0,
    0xfff50fff,0x3ff6005f,0x0fffd01f,0x540fffea,0x3f601fff,0xfff101ff,
    0xfffe985f,0xffe9801f,0x3e20003f,0xf50005ff,0xfdddffff,0xfffffb83,
    0x05ffffff,0xfdfffff7,0xfc8bffff,0xffffffff,0x7ec000ef,0x3ff602ff,
    0x7ffff10f,0x3fffff22,0xf50fffd3,0x7fe43fff,0x3ffff20f,0x1fffd801,
    0x2a0fffd0,0x7dc43fff,0x7fec03ff,0x3fff201f,0xffffeeef,0x66c40eff,
    0x005ffffd,0x02fffc40,0xfffffb00,0xff503fff,0x9fffffff,0xfffffd80,
    0x640effff,0xffffffff,0xfb8001ef,0xa989bfff,0x7e45fffd,0xffffffff,
    0xfffd3fff,0xfffffddf,0x40fffc89,0x360efffe,0xffffffff,0xffd5ffff,
    0x4fffea0f,0x44fffffb,0xfffffffd,0x745fffff,0xffffffff,0x445fffef,
    0x0effffff,0x7ffc4000,0x7fdc0005,0x301fffff,0x5dfffffb,0x3fffaa00,
    0xff903fff,0x03bfffff,0x7fff4400,0xffffffff,0x7fff440e,0xffe9ffff,
    0xffffffd3,0xf909ffff,0xfff881ff,0x3ffff65f,0xffffffff,0x2a0fffd5,
    0xfff73fff,0xffffb03b,0xffffffff,0xfffff70b,0x3fffa1bf,0x3ffffe24,
    0xff100003,0x260000bf,0x220009a9,0x54c0001a,0x33331001,0x64400001,
    0xffffffff,0x7ffec03e,0x27ffd1df,0xfffffeca,0xfff901df,0x9ffff501,
    0x3ffffff6,0xd5ffffff,0x3fea0fff,0xd803533f,0xffffffff,0x2205ffff,
    0xcb8001a9,0x4400001a,0x00005fff,0x00000000,0x00000000,0x55975300,
    0x00a98003,0x00099980,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x40000000,0xbcdedca8,0x2aaaaa00,
    0x202aaaaa,0xbcdecba8,0xdcb9800a,0x9530001b,0xa98379bb,0xaaa801aa,
    0x0155550a,0x26355530,0x551002aa,0x01555445,0x5506aaaa,0x55555555,
    0x2aaa5555,0x4009aaaa,0x100aaaa9,0x31001555,0xa8803555,0x000acddc,
    0x2f332e62,0x3ffffe61,0x440cffff,0xffffffff,0xffb80fff,0x3fffffff,
    0x3ffffa60,0xf5000eff,0xffffffff,0x1bffea1f,0x6cdfff10,0xfd804fff,
    0x0fff71ff,0xff1ffe60,0x3fe207ff,0x7fffc2ff,0xffffffff,0xfffffd6f,
    0x7017ffff,0x2609ffff,0xf9301fff,0x20bfffff,0xffffffc8,0x7ec404ff,
    0x5fffffff,0xfffffff3,0xff88bfff,0xffffffff,0x7fffec0f,0x03ffffff,
    0xfffffff5,0x6c405fff,0xffffffff,0x3ffa0fff,0x3fff202f,0x01bffea2,
    0xffa9fffe,0x8fff3007,0xc80ffffa,0xfff85fff,0xffffffff,0xffffd6ff,
    0x5fffffff,0x0fffffb8,0xd81fff98,0xffffffff,0xfffffb05,0x209fffff,
    0xfffffffa,0x9df35fff,0xfffffb79,0x77777447,0x20ffffee,0xcceffffb,
    0xf983fedc,0xffcbdfff,0x3ffa07ff,0xfeedefff,0x3ffea0ff,0x8dfff106,
    0x200ffff8,0x3ea5fffa,0xfff3007f,0x887fffd0,0xff81ffff,0xffffffff,
    0xfffd6fff,0xfffffddd,0x7fffdc1f,0x1fff983f,0x3fffff62,0xfb84eeef,
    0xfca9beff,0x7fd41fff,0xfeddffff,0xffd8025f,0x3ff6004f,0x0ffffe0f,
    0xfffd8088,0x83fffe83,0x00dffffb,0xfffe81b5,0x82fffc81,0x3203fffe,
    0x3fe62fff,0x0dff3007,0x641ffff5,0x50005fff,0x3fa3ffff,0xfffea87f,
    0x3ffffee5,0x21fff987,0x00bffffc,0x701fffb0,0xffe87fff,0x03a882ff,
    0x00bfff30,0xf887ffec,0xf88007ff,0xfff305ff,0x3ffff88f,0xbfff5000,
    0x706fff88,0x7f40bfff,0x3ffe60ff,0x06ffa800,0x3e29fffb,0x88000fff,
    0x3fa4fffe,0xffff307f,0x7fffffdc,0x98fffcc2,0x4000ffff,0xff106fff,
    0x77ffdc7f,0xff100000,0x7fec007f,0x1ffff30f,0x2fffc800,0x43fffd10,
    0x0006fffb,0xf90ffff4,0x3fe605ff,0xbfff107f,0x220fff88,0x82ffd419,
    0xfc8ffff9,0xf90004ff,0x7ffe8dff,0x5c3fffa0,0x46ffefff,0xff91fff9,
    0xffd0005f,0x5fff701f,0x0017fffc,0x03fff700,0xf07ffec0,0x4003dfff,
    0xfd307ffd,0x7fec5fff,0x7d40002f,0xdfff15ff,0x81fffe80,0x7c43fffb,
    0x8bfee0ff,0x3f205ffa,0x0ffffdff,0xffffa800,0xb03fff41,0x3fee3fff,
    0x262fffbf,0xfffd1fff,0x3fff2000,0x9bffe61e,0x0007fff9,0x5fffc988,
    0x07ffec00,0x5dfffffb,0x86ffe801,0x3ffffffb,0x0003fffa,0x323fffa0,
    0x7e402fff,0xfffd84ff,0x3a0fff80,0x13fee4ff,0xffffff88,0xfe88003f,
    0x7ffe84ff,0xfb9fffe0,0x25fff8ff,0xff89fff9,0xbcdcb8ef,0x3fffe202,
    0x1ffffbcf,0x0017ffea,0x7fffffd4,0xffd8003f,0x3fffe20f,0xf00cffff,
    0x7ff44bff,0x3e4fffff,0x777447ff,0xf500eeee,0x0dfff9ff,0xf0dfff30,
    0x3ffe0dff,0x5cffff11,0x7fe404ff,0x90006fff,0x3fa0dfff,0xdfff507f,
    0xffcbffdc,0x33fff31f,0xffffffff,0x2603bfff,0xffffffff,0x27ffdc1e,
    0xffffa800,0x4001cfff,0x7440fffd,0xffffffff,0xaafffc43,0xff9dffff,
    0x8dfff15f,0xfffffff8,0x3ffffa00,0xfff002ff,0x27ffcc1f,0xff71fff8,
    0x13fee3ff,0x7fffff10,0xffff3000,0x21fffa03,0x2e2ffffa,0xbfff17ff,
    0x3ea7ffe6,0xffffffff,0xd100ffff,0x09ffffff,0x0007fff9,0x3fffffea,
    0x36003fff,0xfd500fff,0x49ffffff,0xffcdfff8,0x9fff13ff,0xf11bffe6,
    0x01ffffff,0x37ffffd4,0x45fffb00,0xfd01fffc,0x3ffff63f,0xb807ff74,
    0x006fffff,0x01ffff44,0xfdddfffd,0xfb8bffff,0x23fff67f,0xffa9fff9,
    0xfdbbdfff,0xfd885fff,0xefffffff,0x013fff20,0xfffc9800,0xfffb001f,
    0xfffc9801,0x3ffe2fff,0x261effff,0xfff13fff,0xffb5550f,0xfffe801f,
    0x3fea002f,0x81fffa5f,0xdff89ffe,0x07ff96ff,0x7fffffc4,0x3ff2003f,
    0x7fff406f,0xdfffffff,0xf33ffdc0,0x3fff39ff,0x2a0bfff5,0x7f447fff,
    0xfffdadff,0x13ffee6f,0x3ff20000,0xfffb005f,0x3ff22001,0x3fffa4ff,
    0xfffa85ff,0x803fffe3,0x5400fffc,0x44006fff,0xfff17fff,0x557fec09,
    0xc8fffaff,0x3ff202ff,0x00ffffef,0x01ffff98,0x7ffffff4,0xff702eff,
    0xf9fffe8f,0x4fffa9ff,0xc87fff60,0x7fd43fff,0xbfff53ff,0xff100000,
    0x3ffa00df,0x7fe4000f,0x3ffff66f,0x45fff702,0x3202fffd,0x7cc00fff,
    0xfd8005ff,0x2fffa9ff,0x3f6bff60,0xffb7ff97,0x3fffe605,0x804fffe8,
    0xe803fffe,0x01aaafff,0x7d47ffb8,0x99fffdff,0x3f205fff,0xdfff12ff,
    0x4dbffea0,0x0000ffff,0x02fffcc0,0x8007fff8,0x3f25fffa,0x3ffa03ff,
    0x1bfff20f,0x400fffc8,0x8005fff9,0xffdbfffb,0x2fff600f,0xbbff55ff,
    0x3ff603ff,0x3ffff34f,0x037ffe40,0x8007ffe8,0xffe87ffb,0xff89ffff,
    0x3fff607f,0x407fff31,0xfff17fff,0xc800009f,0x4c014fff,0x40026fff,
    0x3e24fffc,0xffa80fff,0x7fffc44f,0x01fff904,0x005fff98,0xffefff88,
    0x6ffe405f,0x37ffe2ff,0xfffa81ff,0x1bfff60f,0x007fffcc,0x8007ffe8,
    0xffb87ffb,0xffd1ffff,0xffff105f,0xf02fffd4,0x7ffe4dff,0x0088403f,
    0x23ffff93,0x3fa60be9,0x2f7ee4ff,0xfff93109,0xdfffd85f,0x03fffea1,
    0x2bbfffee,0x01fffb31,0x005fff98,0xffffffd0,0xffffc807,0x3ffff60f,
    0x4fffe80f,0x417fffcc,0xaaadfffe,0xfd2aaaaa,0xff7000ff,0xfffff10f,
    0x3fffea3f,0x97fff621,0xc82ffff8,0x3fe24fff,0xa99bdfff,0xffffd5ec,
    0x7fffffff,0x7fffffcc,0x3ee0ffff,0xffffffff,0xff984fff,0xffffefff,
    0x3fffa04f,0xffffffff,0x7ffcc00f,0xfff90005,0xfb801fff,0x7fd45fff,
    0x7fdc0fff,0xfffd80ff,0x3fffea0f,0xffffffff,0x00fffd7f,0x320fff70,
    0x3a1fffff,0xffffffff,0x7fec0eff,0xfffddfff,0x7ffdc0ff,0xffffffff,
    0xffffffd5,0xf989ffff,0xffffffff,0x7ffffdc2,0x05ffffff,0x3fffffe6,
    0xfc803fff,0xffffffff,0x7fcc00ff,0xff30005f,0xf700dfff,0xff887fff,
    0x3fe20fff,0xfff303ff,0x7fffd49f,0xffffffff,0x00fffd7f,0x220fff70,
    0x261fffff,0xfffffffe,0xffe881ef,0xffffffff,0xffffd301,0x3abfffff,
    0xefffffff,0xfffc880b,0xd980cfff,0xffffffff,0xffd8801d,0x2001dfff,
    0xffffffda,0xff9801cf,0x3fe0005f,0xfa804fff,0xffd80fff,0x7fffe47f,
    0x3ffff600,0xffffff50,0xffffffff,0x2001fffa,0x3f607ffb,0xffc81fff,
    0xb803ffff,0xcfffffff,0xfffec800,0x2661ceff,0x440009a9,0x26200099,
    0x200009a9,0x880000a8,0x00000999,0x00000000,0x00000000,0x00000000,
    0x4c400000,0xa9880009,0x26200009,0x00000001,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x55000000,
    0x881aa885,0x55302aaa,0x01555455,0x54055550,0x2aaa1aaa,0x4019aaaa,
    0xaaaaaaaa,0x0aaaaaaa,0x4c015553,0x2aaa62aa,0xaaaaaaaa,0x2aaaaa0a,
    0x22aaaaaa,0xaaaaaaaa,0x5530aaaa,0x00135555,0x379b9510,0x2aaaaa20,
    0xaaaaaaaa,0x55555552,0x55000135,0xc8003555,0xdff100ce,0xfa84ffb8,
    0xffe82fff,0x01fffe6f,0xf907fff8,0x7ffc1fff,0xbfffffff,0xfffffd80,
    0xffffffff,0x05fff72f,0xfc87ffec,0xffffffff,0xfff11fff,0xffffffff,
    0x3ffffe2f,0x0fffffff,0xfffffff9,0xd8803bff,0xdfffffff,0x7ffffd40,
    0xffffffff,0xfffffff6,0x2005bfff,0x05fffff8,0x41bfff60,0x7fe45ff9,
    0x4ffffa83,0xf3ffffc4,0x7fc00fff,0xffff987f,0x7fffffc1,0x40efffff,
    0xfffffffd,0x2fffffff,0x6c05fff7,0xfff90fff,0xffffffff,0x3fffe23f,
    0x7fffffff,0xfffffff1,0x321fffff,0xffffffff,0xff504fff,0xffffffff,
    0xfffffa8d,0xffffffff,0xfffffff6,0x005fffff,0x0ffffff7,0x17ffffc0,
    0x3f627fd4,0xffffb82f,0x3ffffdc7,0x7c00ffff,0xfffe87ff,0xeeffff84,
    0x45ffffff,0xffeeeeec,0x1eeeeeff,0x6c05fff7,0xddd70fff,0xdddffffd,
    0x3fffe23d,0x5eeeeeee,0xdddffff1,0x321ddddd,0xffeeefff,0xfc85ffff,
    0xffeddfff,0x3ffea3ff,0xffffffff,0x9ffff6ff,0xfffffd99,0xffffd801,
    0xffd002ff,0x9ff709ff,0xfb81ffe8,0x3f61ffff,0x3ffe7fff,0x1fffe007,
    0x3e0dfff7,0x7fecc6ff,0xfff8807f,0x17ffdc05,0x201fffb0,0x2205fff8,
    0xf1005fff,0x7e400bff,0x7ff4c0ff,0x83fe81ff,0x2626fffd,0x99999999,
    0xfff4fffd,0x5ffff30d,0xffefff80,0xfff5004f,0x3fb32abf,0xfffcccef,
    0x37fee4cd,0xfbff14ff,0x1fffe1ff,0x267fff80,0xff01ffff,0xffff10df,
    0x5fff8803,0x017ffdc0,0x2201fffb,0x3e205fff,0xff1005ff,0x7fe400bf,
    0xdfffb00f,0x3fe20110,0x7fc4007f,0x0dfff0ff,0xa80fffee,0x7fffafff,
    0x53fff200,0xfffffffb,0x7fffffff,0x5bfefff2,0x0fffbffa,0x7c00ffff,
    0x3fffa7ff,0x41bffe03,0x4402fffd,0x7dc05fff,0x3ff602ff,0xbfff100f,
    0x02fffc40,0x005fff88,0x4403fff2,0x4001ffff,0x2000ffff,0x3fe4fffc,
    0x7fff706f,0xfdbffe40,0xff3001ff,0x3fffee5f,0xffffffff,0x2bff27ff,
    0x8ffd8ffe,0xffff1fff,0xbbfffc00,0x7fc05fff,0x1fffd06f,0x05fff880,
    0xb017ffdc,0x3e201fff,0x3fe205ff,0xfff1005f,0x7ffe400b,0x0bfff600,
    0x07fff880,0x83fffe20,0xffb06fff,0xafff401f,0x9003fffb,0x2aa61fff,
    0xfbaabfff,0x3f62aaef,0xffaffcaf,0x3fe3ffd6,0x3ffe007f,0x00ffff8f,
    0x7dc37ffc,0xff8806ff,0x7ffdc05f,0xd999999b,0xff100fff,0x7ffc40bf,
    0xbfff1005,0x07ffe400,0x007fff90,0x002fffd4,0xff89fff9,0x7ffe4c6f,
    0x4fffe604,0x4c06fff9,0xff02fffc,0xb05ffa8f,0xfdff35ff,0x7c7ffa7f,
    0x3fe007ff,0x02fffdff,0xcbaefff8,0x801ffffe,0x5c05fff8,0xffffffff,
    0x00ffffff,0x440bfff1,0xccccefff,0xfff11ccc,0xffffffff,0x007ffe4b,
    0x4009fff7,0x1002fffe,0xff81ffff,0xffffffff,0x7ffdc04f,0x203fffa1,
    0x03fffffd,0xffa8fff1,0x3e3ffb04,0xffd0ffff,0x801fffe5,0x6fffffff,
    0xffffff00,0x003dffff,0x7017ffe2,0xffffffff,0x01ffffff,0x8817ffe2,
    0xffffffff,0xfff13fff,0xffffffff,0x007ffe4b,0x200bfff5,0x2006fffc,
    0xff85fffc,0xffffffff,0x3ff600cf,0x417ffe46,0x200cfffd,0x7fdc6ff8,
    0x323ffd04,0x3ffa6fff,0x400ffff2,0xfffeffff,0xfffff803,0x4003ffff,
    0x5c05fff8,0xffffffff,0x00ffffff,0x440bfff1,0xffffffff,0xfff13fff,
    0xffffffff,0x007ffe4b,0x5009fff7,0x2001ffff,0xf81ffff8,0xffffffff,
    0xf880efff,0x7ffd44ff,0x2201a984,0x99effa99,0x419cffd9,0xfff51ffe,
    0xff9ffec7,0x3ffe007f,0x01ffff9f,0x7f67fffc,0x22003fff,0x7dc05fff,
    0x99999bff,0x100fffd9,0x7c40bfff,0xccccceff,0xbfff11cc,0x07ffe400,
    0x807fff70,0x002ffffa,0x7c17ffee,0x7f5cc6ff,0xfffa85ff,0x03fffc42,
    0xfffffa80,0xffffffff,0x47ffe0ff,0x3f61fff8,0x00ffff3f,0xffcbfffc,
    0x37ffc06f,0x001ffff5,0x7017ffe2,0x7ec05fff,0xfff100ff,0x2fffc40b,
    0x05fff880,0x803fff20,0x2a02fffc,0x4002ffff,0xff01ffff,0x3ffea0df,
    0x4fffe40f,0xfffe9999,0xa819b701,0xffffffff,0x0fffffff,0x6fe83ffe,
    0xfff9ffec,0x5fffe007,0x204fffe8,0x7fe46fff,0xfff1005f,0x2fffb80b,
    0x403fff60,0x2205fff8,0xf1005fff,0x7e400bff,0xfff100ff,0x3ffea03f,
    0x7fdc002f,0x1bffe05f,0x7c2fffe8,0xffffffff,0xfc84ffff,0x33260fff,
    0xfcccdffe,0x7fc4ccff,0x4ffd800f,0x7c00ffff,0x3ffea7ff,0x8dfff01f,
    0x801ffff8,0x5c05fff8,0x3f602fff,0xfff100ff,0x2fffc40b,0x05fff880,
    0x403fff20,0xf306fffb,0xf0005fff,0x7fc03fff,0x3fffa06f,0x3ffffe61,
    0xffffffff,0x7ffffc46,0xf85ffb04,0x1fff107f,0x3e9ff900,0x3fe007ff,
    0x37ffec7f,0xfc86fff8,0xff8804ff,0x7ffdc05f,0x03fff602,0x102fffc4,
    0x2200bfff,0x32005fff,0xffb80fff,0xfff981ff,0xffb8002f,0x37ffc06f,
    0x647fffa8,0xffffffff,0x20ffffff,0x05fffff9,0x7fc43ffb,0x01fff107,
    0x3febff90,0x999999ff,0x8ffff099,0xf84ffff8,0xfff986ff,0x7ffc400f,
    0x17ffdc05,0x221fffb0,0xefffa999,0x3fe21999,0xfff1005f,0x3333333d,
    0x4d7ffe43,0x5ffffdba,0xceffff98,0x03cccccc,0xf805fffd,0xc9999eff,
    0x7f45ffff,0x7ffec06f,0x1fffffc3,0x3e60ffe8,0x0fff106f,0x7fd7ff20,
    0xffffffff,0x0ffff4ff,0xf83ffff7,0xfffb06ff,0x5fff8809,0x017ffdc0,
    0x3f21fffb,0xffffffff,0xfff11fff,0x3ffe200b,0xffffffff,0xfffff90f,
    0x1bffffff,0xfffffff0,0x0dffffff,0xf00dfff5,0xffffffff,0x7c41ffff,
    0x7fd404ff,0x2fffd45f,0xffa8fff0,0x00fff305,0x7ffd7ff2,0xffffffff,
    0x20ffff4f,0x3e0efffe,0xfff506ff,0x7ffc401f,0x17ffdc05,0x321fffb0,
    0xffffffff,0xff11ffff,0x3fe200bf,0xffffffff,0xffff90ff,0x05ffffff,
    0x7ffffffc,0x86ffffff,0xf802fffe,0xffffffff,0x7fdc1eff,0x7ffc401f,
    0x22019887,0x27fd47ff,0x7007ff98,0x3fffedff,0xffffffff,0x260ffff4,
    0x3fe4ffff,0x3fffa06f,0x17ffe204,0x405fff70,0xff90fffd,0xffffffff,
    0x3ffe23ff,0xffff1005,0xffffffff,0x3fffff21,0x7c00abde,0xffffffff,
    0x7d46ffff,0xfff006ff,0x39bdffff,0x401fff60,0x0002fffe,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00073322,0x0155554c,0x0de6e544,0x00804000,0x00022000,
    0x04400020,0x00998800,0x80004c40,0x80008808,0x03100018,0xe982f76c,
    0x4ccc02ee,0x77775400,0xeeeeeeee,0xffff9100,0xfff10007,0x7e440dff,
    0x0cffffff,0x40ee8800,0x2e0003fa,0x03effffd,0xffffd930,0x7f6cc09d,
    0x75c02eff,0x06ffffff,0xfffffd95,0x6d3ba07d,0xfff90dff,0xb8f77443,
    0x640dffff,0xfffd52ee,0x07ffe83d,0xf805fff5,0x7fdc04ff,0xffffffff,
    0x7fe440ff,0x8003ffff,0x06fffffc,0xfffffff1,0x4001dfff,0xf50effe9,
    0xd88009ff,0xffffffff,0x3fff200d,0x707fffff,0xffffffff,0xfffe881b,
    0xf07fffff,0xffffffff,0xcdff81ff,0xffbbffff,0xfff10fff,0xffffffb5,
    0x5dfff41d,0x1fffffff,0x7d41fffa,0x7ffc02ff,0x7fffdc04,0xffffffff,
    0x3ffffee0,0x4c003fff,0x06ffffff,0xb79ffffb,0x2007ffff,0x70effffa,
    0x001bffff,0xfffffff1,0x3a0dffff,0xffffffff,0xffffb87f,0x44ffffde,
    0xdcdffffe,0xdfff07fe,0xbffffd9d,0xfffffff8,0xffffffff,0xffdfff12,
    0x47ffffff,0xffffeffe,0x3fa6ffff,0x5fff507f,0x404fff80,0xbaaaaaa8,
    0x7fc4ffff,0x3fffdfff,0x77fff400,0xfffa86ff,0x7fffcc0e,0x7fffdc00,
    0x7fffcc0d,0x7ffe400e,0xfffb98ae,0x7fffdc2f,0x46ca99ad,0x221dfff8,
    0xff51fffe,0x2d80c0df,0x41ffff30,0xfff2ffff,0x453ffa9f,0x52efffff,
    0x7ff4dfff,0xffa8cfff,0x0fffd1ff,0xf00bffea,0x6c0009ff,0xffc86fff,
    0x03fffa8c,0x3abffea0,0xfffc86ff,0x07fffb02,0x027fffe4,0x03ffffd1,
    0x203fffe6,0x3e26fffa,0x32003fff,0xff981fff,0x09fff74f,0xfff90000,
    0xfd37ffc3,0x8a7fe4ff,0x740effff,0x3fffa7ff,0x97ffe41f,0xff507ffe,
    0x4fff805f,0xffff7000,0x7d43b101,0xff1003ff,0x21bffabf,0xf500fffd,
    0xffb109ff,0xfb1007ff,0xff707fff,0x7fff409f,0x00bfff70,0x3e06fff8,
    0xffff55ff,0x54000017,0x3ffe2fff,0xfc93ffa2,0x1ffff14f,0x3a1fff90,
    0xffa82fff,0x20fffd3f,0x7c02fffa,0xf98004ff,0x2a001fff,0xf9003fff,
    0x1bffa1ff,0x4c07fffa,0x7f445fff,0x64001fff,0x7e44ffff,0x3ff201ff,
    0x05fff91f,0x77fffc40,0xfffeeeee,0xffffff17,0x5d44005b,0x2fffeedc,
    0xffe87ffe,0x7c53ff23,0x333105ff,0xfa83fff4,0x0fffd3ff,0x7ecbffea,
    0xffffffff,0x102fffff,0x8007ffff,0x9803fffa,0x3ffa3fff,0x04fffc86,
    0x7ccdfff1,0x0000efff,0x21bffff7,0x3200fffd,0xfffb2fff,0x7ffcc003,
    0xffffffff,0x3ffea7ff,0x00cfffff,0xffffff91,0x7fc5ffff,0xc8fffa1f,
    0xbfff14ff,0x07ffe800,0x3fa7fff5,0x5fff507f,0x3ffffff6,0xffffffff,
    0x0bfffd02,0x07fff500,0xfe8dffd0,0xffffb86f,0x3fff260b,0x1fffff17,
    0xfffb8000,0x01fffd5f,0xfe97ffdc,0x3ea001ff,0xffffffff,0x6cc7ffff,
    0xffffffff,0x7ffff441,0x2fffffff,0xffe87ffe,0x7c53ff23,0x7f4005ff,
    0x7fff507f,0x7d41fffa,0xffffb2ff,0xffffffff,0xfff905ff,0xff50001d,
    0xfffb807f,0x4437ff41,0xfefffffe,0x266fffff,0x000effff,0x4bffff50,
    0x3201fffd,0xfffb1fff,0x7ffcc005,0x6d440003,0x746fffff,0x7d41dfff,
    0x87ffe2ff,0x3ff23ffe,0x00bfff14,0xf507ffe8,0x1fffa7ff,0x2017ffec,
    0xf5004fff,0x20003fff,0x2203fffa,0xffe84fff,0xfffff306,0xbfffffff,
    0x2ffffe88,0x7fffe400,0x01fffdc4,0x3f21fffd,0x3e2005ff,0x200005ff,
    0x10ffffc8,0x3ea0dfff,0x87ffe2ff,0x3ff23ffe,0x00bfff14,0xf507ffe8,
    0x3fff67ff,0x17fffdc1,0x2013ffe0,0x003ffff9,0x80fffea0,0xffd06ffd,
    0x7ffe440d,0x5fffceff,0x3ffffd88,0xffffd880,0x06fffa82,0x7d4dfff5,
    0x3e002fff,0x00001fff,0xf98ffffc,0xffd886ff,0xe87ffe2f,0x53ff23ff,
    0x4005fff8,0xff507ffe,0x33fff27f,0xfffffc88,0x027ffc02,0x2bbfffa2,
    0x00aaaaaa,0x981fffd4,0xccccefff,0x4ccffffc,0x7d426620,0x3ff204ff,
    0x3fa204ff,0x3fa01fff,0xff511eff,0xfffe83ff,0x6b9889cf,0x8177ffdc,
    0x5402aa28,0x3fe27fff,0x3ffa21ff,0x87ffe2ff,0x3ff23ffe,0x00bfff14,
    0xf507ffe8,0x3ffea7ff,0xffffffff,0x27ffc02f,0x3fffff20,0x1fffffff,
    0x81fffd40,0xfffffffa,0xffffffff,0x7ffe4007,0x7fffdc01,0x7fffcc0d,
    0x7ffd400e,0xffffffff,0xfffff985,0xe87fffff,0xeddeffff,0xdff90ffe,
    0xffffd99b,0xeffffe89,0x2ffffffe,0xffe87ffe,0x7c53ff23,0x7f4005ff,
    0x7fff507f,0x7ffffff4,0x402fff9f,0x7e404fff,0xffffffff,0x7d401fff,
    0xfff503ff,0xffffffff,0x400fffff,0x3006fff8,0x2e3dffff,0x000dffff,
    0xfffffff7,0x3ea019ff,0xffffffff,0xffffe887,0x90ffffff,0xffffffff,
    0xfff50bff,0xff5fffff,0xd0fffc5f,0xa7fe47ff,0x4005fff8,0xff507ffe,
    0xffffd87f,0x805ffd1d,0x7e404fff,0xffffffff,0x7d401fff,0xddd303ff,
    0xffdddddd,0x200bddff,0x003fffe9,0x543bffa6,0x98004fff,0x2efffffd,
    0xfffec880,0x3ae03eff,0xdfffffff,0xffffff70,0x7d407dff,0xfd1dffff,
    0xd0fffc5f,0xa7fe47ff,0x4005fff8,0xff507ffe,0x0133107f,0x004ccc00,
    0x2aa60000,0xadfffcaa,0x7f4002aa,0x5533106f,0x0dffffb7,0xa81db100,
    0xa980003f,0x0ccc0001,0x04d54c00,0x13553310,0x004d4400,0x00000000,
    0x00000000,0x00000000,0xffffffc8,0x07ffffff,0xc837ff40,0xffffffff,
    0x020000ef,0x00000004,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x3ffffff2,0x07ffffff,0xc837ff40,0xffffffff,0x00000003,
    0x013bbaa0,0x7643bbb6,0x3bba004e,0x813bbb21,0x0002eeec,0x00555400,
    0x26666666,0x00999999,0x00000000,0x26660001,0x00999999,0xfffffc80,
    0x7fffffff,0x837ff400,0xaceefffc,0x00000000,0x07fffc40,0x6cbfff30,
    0xff1007ff,0x7fffcc3f,0x06fffa82,0x4002ffd8,0x7c05fff9,0xffffffff,
    0xff33ffff,0x93ffeadf,0x7ec47fff,0x36201fff,0x2000cfff,0xffffffff,
    0x0000004f,0x00000000,0x00000000,0x901fffec,0x7fdc5fff,0x1fff3007,
    0x20ffffb8,0x801ffff8,0x74001ffd,0x3e02ffff,0xffffffff,0xff33ffff,
    0x8fffeadf,0xff707fff,0xffd103ff,0xfb83ffff,0x3ffffe5f,0x0004ffff,
    0x00000000,0x00000000,0x7ffcc000,0x51fffe06,0xf5001fff,0x3fff60ff,
    0x40ffff65,0x447ff23c,0x37fee01d,0x3ffe06ff,0xffffffff,0xbfff13ff,
    0xfe8fffe6,0x3ffa606f,0x7fffe41f,0x3f21ffff,0x3ffffe5f,0x0004ffff,
    0x00000000,0x00000000,0xfffe8000,0x44fffa81,0x2a61fff9,0x41bfee0a,
    0xfabffff8,0xbff305ff,0xff51ff71,0x6dffe20d,0x800003ff,0xff35fff8,
    0x037ff45f,0xf87fff62,0xfffc9cff,0x23fffbcf,0x99999999,0x00000009,
    0x00000000,0x00000000,0xd84fffb8,0x7fc40fff,0xc93ffa2f,0x3fea05ff,
    0x00ffffff,0xffbffff9,0x903ffff9,0x3ffe25ff,0xff800000,0x45fff14f,
    0x20005ffd,0x3ea0fff8,0x0fffffff,0x00000000,0x00000000,0x00000000,
    0x47fff880,0xff05fff8,0x9fffe69f,0x7e404ffc,0x402fffff,0xffffffd9,
    0xff980cff,0x002ffe46,0x8a7ffc00,0x3ff61fff,0x3ba20005,0xfffffa86,
    0x0000003f,0x00000000,0x00000000,0x3ff60000,0x0bffee1f,0xffcafff4,
    0x05ffb2ff,0x0bffffd0,0x7ffff4c0,0x07ffa00c,0xff85fff1,0xffffffff,
    0x3ffe3fff,0xfc87ffe3,0x4000004f,0x002deed8,0x00000000,0x00000000,
    0x00000000,0xfd27ffd4,0xb7fec0ff,0xfd5ffffe,0xfffd003f,0x3faa00bf,
    0x81dfffff,0xff705ffa,0x7ffffc1f,0xffffffff,0xed8bbb63,0x00fbae0e,
    0x00000000,0x00000000,0x00000000,0x00000000,0xff9bfff4,0x3ffee04f,
    0x8fffeff9,0x7e400fff,0x203fffff,0xffeffffb,0xf10dfffe,0x7ff403ff,
    0x3fffffe4,0x3fffffff,0x00000000,0x00000000,0x00000000,0x00000000,
    0x5c000000,0xfffcafff,0x33ffea01,0xfbffeaff,0x7ffd407f,0x501fffff,
    0x1ff75fff,0x3261fffb,0x2664c03c,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x37ffe200,0x7cc06ffe,0xfb8fffff,0x2206ffef,
    0xffc9ffff,0x643ba06f,0x007f50ff,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x3f600000,0x403fffff,0x35fffff8,0x40bfffff,
    0xfd13fffe,0xf90209ff,0x3332043f,0xcccccccc,0x02cccccc,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0xffffff50,0xfffff001,
    0x27ffff47,0x546fffc8,0xd802ffff,0x3ffe02ff,0xffffffff,0x04ffffff,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x13ffffe0,
    0x07ffff40,0x507ffff7,0xf901ffff,0xaa801fff,0x3fffe00a,0xffffffff,
    0x004fffff,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x007ffff2,0x2637ffec,0x7c42ffff,0xfd103fff,0x20000bff,0xaaaaaaaa,
    0xaaaaaaaa,0x0000001a,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
};

static signed short stb__consolas_bold_32_usascii_x[95]={ 0,6,3,0,1,0,0,6,4,3,2,1,3,3,
5,1,0,1,1,2,0,2,1,1,1,1,5,3,1,2,3,4,0,0,2,1,1,2,2,0,1,2,2,2,
3,0,1,0,2,0,2,1,1,1,0,0,0,0,1,4,1,4,1,0,0,1,2,2,1,1,0,1,2,2,
1,2,2,0,2,1,2,1,2,2,0,2,0,0,0,0,2,2,7,3,0, };
static signed short stb__consolas_bold_32_usascii_y[95]={ 23,0,0,2,-1,0,1,0,-1,-1,0,6,17,12,
17,0,2,2,2,2,2,2,2,2,2,2,6,6,5,9,5,0,0,2,2,2,2,2,2,2,2,2,2,2,
2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,0,0,2,26,0,6,0,6,0,6,0,6,0,0,
0,0,0,6,6,6,6,6,6,6,2,7,7,7,7,7,7,0,-3,0,10, };
static unsigned short stb__consolas_bold_32_usascii_w[95]={ 0,6,12,17,16,18,19,5,11,11,14,16,9,11,
7,15,17,15,15,14,17,14,16,15,15,15,7,9,14,14,13,12,18,18,15,15,16,14,13,17,16,14,13,16,
13,17,16,18,15,18,15,15,16,16,18,18,18,18,15,9,16,9,16,18,11,15,15,14,15,15,17,16,14,14,
14,15,14,17,14,16,15,15,15,14,16,14,18,18,18,18,14,13,4,13,17, };
static unsigned short stb__consolas_bold_32_usascii_h[95]={ 0,24,9,21,28,24,23,9,31,31,15,17,12,5,
7,27,22,21,21,22,21,22,22,21,22,21,18,23,19,11,19,24,30,21,21,22,21,21,21,22,21,21,22,21,
21,21,21,22,21,27,21,22,21,22,21,21,21,21,21,30,27,30,11,4,8,18,24,18,24,18,23,24,23,23,
30,23,23,17,17,18,24,24,17,18,22,17,16,16,16,23,16,30,33,30,8, };
static unsigned short stb__consolas_bold_32_usascii_s[95]={ 252,181,190,1,112,204,121,184,6,18,137,
223,246,233,246,129,95,1,179,50,17,231,1,195,18,35,246,96,51,169,66,
223,73,227,211,34,162,147,133,113,101,118,65,51,37,19,239,195,223,145,68,
79,84,214,150,169,188,131,207,102,164,92,152,152,203,143,34,97,18,112,160,
1,81,66,58,50,106,159,193,80,236,188,177,128,178,208,80,99,118,141,240,
30,1,44,215, };
static unsigned short stb__consolas_bold_32_usascii_t[95]={ 1,1,124,83,1,1,35,124,1,1,124,
105,83,124,96,1,59,105,83,59,105,35,60,83,60,105,35,35,105,124,105,
1,1,83,83,60,83,83,83,59,83,83,59,83,83,83,59,35,59,1,83,
59,83,35,59,59,59,59,59,1,1,1,124,136,124,105,35,105,35,105,35,
35,35,35,1,35,35,105,105,105,1,1,105,105,35,105,124,124,124,35,105,
1,1,1,124, };
static unsigned short stb__consolas_bold_32_usascii_a[95]={ 282,282,282,282,282,282,282,282,
282,282,282,282,282,282,282,282,282,282,282,282,282,282,282,282,
282,282,282,282,282,282,282,282,282,282,282,282,282,282,282,282,
282,282,282,282,282,282,282,282,282,282,282,282,282,282,282,282,
282,282,282,282,282,282,282,282,282,282,282,282,282,282,282,282,
282,282,282,282,282,282,282,282,282,282,282,282,282,282,282,282,
282,282,282,282,282,282,282, };

// Call this function with
//    font: NULL or array length
//    data: NULL or specified size
//    height: STB_FONT_consolas_bold_32_usascii_BITMAP_HEIGHT or STB_FONT_consolas_bold_32_usascii_BITMAP_HEIGHT_POW2
//    return value: spacing between lines
static void stb_font_consolas_bold_32_usascii(stb_fontchar font[STB_FONT_consolas_bold_32_usascii_NUM_CHARS],
                unsigned char data[STB_FONT_consolas_bold_32_usascii_BITMAP_HEIGHT][STB_FONT_consolas_bold_32_usascii_BITMAP_WIDTH],
                int height)
{
    int i,j;
    if (data != 0) {
        unsigned int *bits = stb__consolas_bold_32_usascii_pixels;
        unsigned int bitpack = *bits++, numbits = 32;
        for (i=0; i < STB_FONT_consolas_bold_32_usascii_BITMAP_WIDTH*height; ++i)
            data[0][i] = 0;  // zero entire bitmap
        for (j=1; j < STB_FONT_consolas_bold_32_usascii_BITMAP_HEIGHT-1; ++j) {
            for (i=1; i < STB_FONT_consolas_bold_32_usascii_BITMAP_WIDTH-1; ++i) {
                unsigned int value;
                if (numbits==0) bitpack = *bits++, numbits=32;
                value = bitpack & 1;
                bitpack >>= 1, --numbits;
                if (value) {
                    if (numbits < 3) bitpack = *bits++, numbits = 32;
                    data[j][i] = (bitpack & 7) * 0x20 + 0x1f;
                    bitpack >>= 3, numbits -= 3;
                } else {
                    data[j][i] = 0;
                }
            }
        }
    }

    // build font description
    if (font != 0) {
        float recip_width = 1.0f / STB_FONT_consolas_bold_32_usascii_BITMAP_WIDTH;
        float recip_height = 1.0f / height;
        for (i=0; i < STB_FONT_consolas_bold_32_usascii_NUM_CHARS; ++i) {
            // pad characters so they bilerp from empty space around each character
            font[i].s0 = (stb__consolas_bold_32_usascii_s[i]) * recip_width;
            font[i].t0 = (stb__consolas_bold_32_usascii_t[i]) * recip_height;
            font[i].s1 = (stb__consolas_bold_32_usascii_s[i] + stb__consolas_bold_32_usascii_w[i]) * recip_width;
            font[i].t1 = (stb__consolas_bold_32_usascii_t[i] + stb__consolas_bold_32_usascii_h[i]) * recip_height;
            font[i].x0 = stb__consolas_bold_32_usascii_x[i];
            font[i].y0 = stb__consolas_bold_32_usascii_y[i];
            font[i].x1 = stb__consolas_bold_32_usascii_x[i] + stb__consolas_bold_32_usascii_w[i];
            font[i].y1 = stb__consolas_bold_32_usascii_y[i] + stb__consolas_bold_32_usascii_h[i];
            font[i].advance_int = (stb__consolas_bold_32_usascii_a[i]+8)>>4;
            font[i].s0f = (stb__consolas_bold_32_usascii_s[i] - 0.5f) * recip_width;
            font[i].t0f = (stb__consolas_bold_32_usascii_t[i] - 0.5f) * recip_height;
            font[i].s1f = (stb__consolas_bold_32_usascii_s[i] + stb__consolas_bold_32_usascii_w[i] + 0.5f) * recip_width;
            font[i].t1f = (stb__consolas_bold_32_usascii_t[i] + stb__consolas_bold_32_usascii_h[i] + 0.5f) * recip_height;
            font[i].x0f = stb__consolas_bold_32_usascii_x[i] - 0.5f;
            font[i].y0f = stb__consolas_bold_32_usascii_y[i] - 0.5f;
            font[i].x1f = stb__consolas_bold_32_usascii_x[i] + stb__consolas_bold_32_usascii_w[i] + 0.5f;
            font[i].y1f = stb__consolas_bold_32_usascii_y[i] + stb__consolas_bold_32_usascii_h[i] + 0.5f;
            font[i].advance = stb__consolas_bold_32_usascii_a[i]/16.0f;
        }
    }
}

#ifndef STB_SOMEFONT_CREATE
#define STB_SOMEFONT_CREATE              stb_font_consolas_bold_32_usascii
#define STB_SOMEFONT_BITMAP_WIDTH        STB_FONT_consolas_bold_32_usascii_BITMAP_WIDTH
#define STB_SOMEFONT_BITMAP_HEIGHT       STB_FONT_consolas_bold_32_usascii_BITMAP_HEIGHT
#define STB_SOMEFONT_BITMAP_HEIGHT_POW2  STB_FONT_consolas_bold_32_usascii_BITMAP_HEIGHT_POW2
#define STB_SOMEFONT_FIRST_CHAR          STB_FONT_consolas_bold_32_usascii_FIRST_CHAR
#define STB_SOMEFONT_NUM_CHARS           STB_FONT_consolas_bold_32_usascii_NUM_CHARS
#define STB_SOMEFONT_LINE_SPACING        STB_FONT_consolas_bold_32_usascii_LINE_SPACING
#endif

