// Font generated by stb_font_inl_generator.c (4/1 bpp)
//
// Following instructions show how to use the only included font, whatever it is, in
// a generic way so you can replace it with any other font by changing the include.
// To use multiple fonts, replace STB_SOMEFONT_* below with STB_FONT_arial_20_latin1_*,
// and separately install each font. Note that the CREATE function call has a
// totally different name; it's just 'stb_font_arial_20_latin1'.
//
/* // Example usage:

static stb_fontchar fontdata[STB_SOMEFONT_NUM_CHARS];

static void init(void)
{
    // optionally replace both STB_SOMEFONT_BITMAP_HEIGHT with STB_SOMEFONT_BITMAP_HEIGHT_POW2
    static unsigned char fontpixels[STB_SOMEFONT_BITMAP_HEIGHT][STB_SOMEFONT_BITMAP_WIDTH];
    STB_SOMEFONT_CREATE(fontdata, fontpixels, STB_SOMEFONT_BITMAP_HEIGHT);
    ... create texture ...
    // for best results rendering 1:1 pixels texels, use nearest-neighbor sampling
    // if allowed to scale up, use bilerp
}

// This function positions characters on integer coordinates, and assumes 1:1 texels to pixels
// Appropriate if nearest-neighbor sampling is used
static void draw_string_integer(int x, int y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0, cd->t0); glVertex2i(x + cd->x0, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t0); glVertex2i(x + cd->x1, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t1); glVertex2i(x + cd->x1, y + cd->y1);
        glTexCoord2f(cd->s0, cd->t1); glVertex2i(x + cd->x0, y + cd->y1);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance_int;
    }
    glEnd();
}

// This function positions characters on float coordinates, and doesn't require 1:1 texels to pixels
// Appropriate if bilinear filtering is used
static void draw_string_float(float x, float y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0f, cd->t0f); glVertex2f(x + cd->x0f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t0f); glVertex2f(x + cd->x1f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t1f); glVertex2f(x + cd->x1f, y + cd->y1f);
        glTexCoord2f(cd->s0f, cd->t1f); glVertex2f(x + cd->x0f, y + cd->y1f);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance;
    }
    glEnd();
}
*/

#ifndef STB_FONTCHAR__TYPEDEF
#define STB_FONTCHAR__TYPEDEF
typedef struct
{
    // coordinates if using integer positioning
    float s0,t0,s1,t1;
    signed short x0,y0,x1,y1;
    int   advance_int;
    // coordinates if using floating positioning
    float s0f,t0f,s1f,t1f;
    float x0f,y0f,x1f,y1f;
    float advance;
} stb_fontchar;
#endif

#define STB_FONT_arial_20_latin1_BITMAP_WIDTH         256
#define STB_FONT_arial_20_latin1_BITMAP_HEIGHT        120
#define STB_FONT_arial_20_latin1_BITMAP_HEIGHT_POW2   128

#define STB_FONT_arial_20_latin1_FIRST_CHAR            32
#define STB_FONT_arial_20_latin1_NUM_CHARS            224

#define STB_FONT_arial_20_latin1_LINE_SPACING          13

static unsigned int stb__arial_20_latin1_pixels[]={
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x29b02ea8,
    0x01f7646b,0x0004eeb8,0x3b260710,0x0993eeee,0x89320000,0x64c0790f,
    0x3f600bef,0x027e4f54,0xceffeb88,0x740f500a,0xfdb8804f,0x3fb001be,
    0x0003f600,0x2a002fc4,0x7f5001ff,0x9b02f400,0x835db1ae,0x3754c5fd,
    0x01be21fd,0xffff112e,0x17a5bf99,0xe807f500,0x00f88f25,0x209f75dd,
    0x4cf51cfa,0x7fdc02fc,0x1fedb9bd,0xf3f907a8,0x5f7f4407,0x7cc03fec,
    0x013a2002,0x10007640,0x2001d99f,0x0c8800fb,0x32176000,0x56d83f9f,
    0x402f983f,0x3fffdc1d,0x4002f45f,0x21e6007c,0x2e1fa84c,0x3d46c80f,
    0x07f90274,0x43d41fc8,0x6c0531a8,0x201fd81f,0x02880029,0x98001500,
    0x54003512,0x42203100,0x17611018,0xb6c14c6a,0x51033019,0xffffd0f5,
    0x2aabd17c,0x44015000,0x81f309b0,0x5c8043f9,0xa82743d4,0x2e30d44f,
    0x0eb9ea1f,0x17dc5d10,0x03ae4f88,0xfdb81744,0xfb7002ce,0x36e0059d,
    0x1d702cef,0x0fd4ba20,0x20fd4fe2,0x260bb3f8,0x3a6db01e,0x3ea0f4c1,
    0x7fec5fef,0xeee8be7f,0x775c5fef,0x43eeeeee,0x9d01f9de,0xbb009f90,
    0xd05d87a8,0x5efffd49,0x93d47d0f,0xc8fe601f,0x807e4007,0x7ff443f9,
    0x2205febc,0x5febcffe,0x2f3ffa20,0x00fc85fe,0x513e27f3,0xf513e21f,
    0x17d41761,0xa85f56d8,0x6e53ea2f,0x9fffea3f,0x5c37fa2f,0x3333f23f,
    0x6f42cccc,0xd51b207a,0x2ec03dfb,0x261721ea,0x7ec4fe67,0x327a96e7,
    0x747f300f,0x807e4006,0x417f43f9,0x05fd05fa,0x0bfa0bf5,0x01f917ea,
    0x747c8fe6,0xd97a3e45,0x3605f505,0x2fa85f56,0x42b8e9b6,0xe8be7ffc,
    0x1f93740f,0x0366f400,0xfd32f8f7,0x0f50fa09,0x2fcd70d7,0x267997e6,
    0x7cc03f26,0xf90017e3,0xfb8fe601,0xf70bee02,0x2e17dc05,0xc8bee02f,
    0x4c7f300f,0xf985f12f,0x82ec5f12,0x2adb02fa,0xbd17d42f,0xf9f201a6,
    0x43f21ba2,0x37a000fc,0x4c3ea06d,0xb327e41f,0xe887a81d,0x0fcd361d,
    0x207a93e2,0x47f300fc,0x07e4006e,0x01f63f98,0xf00fb13e,0x4f807d89,
    0x1fcc03f2,0x5e83dd7a,0xf505d8f7,0x17d5b605,0x774f8bea,0xd17cf700,
    0x3f21f709,0x17b7a000,0x037e1fa8,0x540fdcfb,0x97c7f507,0x322f987b,
    0x4c03f205,0x3301f63f,0x3f9807e4,0xf1ba017e,0x5f8dd00b,0x03f26e80,
    0x75ee1fcc,0xb13af704,0x6c0bea0b,0x2fa85f56,0x0198ed7a,0x0dd17cf7,
    0x555fe4fb,0x6f40aaaa,0x983ee06d,0xb89ae2ff,0x7cc3d41f,0x43e4fa0b,
    0x445f10fb,0x7cc03f21,0x7c407ee3,0x7cc03f26,0xfb009f13,0x3ec027c4,
    0x4fb009f1,0x87f300fc,0xf101fbf8,0x505d83f7,0x7d5b605f,0x1f917d42,
    0x27b8274f,0xbf03fa2f,0x7fffffe4,0x3def41ff,0xbfd10d90,0xa87d07f5,
    0x55d86c87,0xbd37cc3f,0x403f27a8,0x03fa23f9,0x00fc87f2,0x402fc7f3,
    0x6c02fc6d,0x36c02fc6,0x0fe601f9,0xdfb01bf6,0x0bea0bb0,0x542fab6c,
    0x277be22f,0x7cf700fc,0x366bbfa2,0x2667f21f,0x9de81999,0x5c0bb00f,
    0xa89b03ff,0x17b85d87,0x7ffd75dd,0x2e7a81dd,0x985f301f,0x4febacef,
    0x2f980fdc,0xb17a01b6,0x6d8bd00d,0x07ee5e80,0x1fd417cc,0x1760fea0,
    0x56d817d4,0x4c2fa85f,0x2e02dfff,0xfcde8be7,0x007e41ef,0x205f1bd0,
    0x07f4403f,0x3a1ea2ec,0xfb12f984,0x4c9df71b,0x817ccf50,0xfec981fa,
    0x17cc0adf,0x07ee1fa8,0x0fdc3fa8,0x1fb87f50,0x2f98fea0,0x1f503f50,
    0x5d80fa80,0x5b605f50,0x417d42fa,0x27b8009f,0x90097a2f,0xdaf4001f,
    0x24c0fa85,0x51b20be6,0x3ee09d0f,0x21db1002,0x7417e27a,0x10075407,
    0xd11fa0bf,0x81dd101d,0xee880ee8,0x44077440,0x417e20ee,0xd00bd07e,
    0x7d41760b,0x0beadb02,0x006985f5,0x17a2f9ee,0xf8003f20,0x83e83f14,
    0x20bea2f9,0x27c3d46c,0x22019fb0,0x71ea1fe9,0x5ffb57bf,0x5c06c980,
    0x2ffdabdf,0xbaabfe88,0x7fd100ef,0x201df755,0xfbaabfe8,0xabdfb80e,
    0x7f6c2ffd,0x407fb601,0x17d43efd,0x17d5bfae,0x00790bea,0x2f45f3dc,
    0x66667e40,0x5fb54ccc,0x6c0d52dc,0xf306fddf,0xfea9ea5d,0x6fff5401,
    0x40cffecc,0xfffeb87a,0x3edc402d,0x6ffff5c0,0x3ffae202,0x75c400ce,
    0x4400ceff,0x00ceffeb,0x0b7fffae,0x3b900772,0x2a1665c0,0xa9e6542f,
    0x2a17d42f,0x1c926000,0x3ff200ee,0x77ffffff,0x0b21b03b,0xa807b930,
    0x16dcd33d,0x79b95500,0x301a6015,0x005e4c00,0x02200060,0x80004400,
    0x00180008,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x02a25300,0xa8000000,0x57100551,0x00000731,0x42a201e4,
    0x455c401a,0xa8dc4039,0x20298d41,0x4a6001a8,0x080000a8,0x00000000,
    0x0fe40220,0x001fd400,0x2e001df7,0x1002f98f,0x2ff880bf,0x806da7c0,
    0x003ffdec,0xfd7013e6,0x4be605df,0x7f6e404f,0x7f6fc03f,0x07da7c1f,
    0x6c003272,0x95003f57,0x41ea7dfd,0x02cefdb8,0x16e077ae,0xd81ba0ba,
    0x005e8005,0x4017abe6,0x20015129,0x5ef400ec,0x1546a01f,0x00188540,
    0x33e6036c,0xa880fdbc,0x10a80350,0x02628803,0x19014c6a,0x44a60017,
    0x5eff400a,0x882fefdb,0x5fecbdfe,0xf87b9eb8,0x03b85c81,0x151000a2,
    0x0a895400,0x2cefdb80,0xa8801500,0x00eb8350,0x3f6e05d1,0x02a002ce,
    0x3e2aebb0,0x3bbbbae4,0x3a603eee,0x4407ae05,0x3007a62e,0x5e9800df,
    0xfb81ed80,0xf503dd06,0xb87e4d89,0x9800f305,0x2f4c005e,0x2017a600,
    0xfebcffe8,0xeeeeeb85,0xddd73eee,0x327ddddd,0x887f300f,0x5febcffe,
    0x3aa01eb8,0x4095d3e2,0xccccccfc,0x07ff202c,0x7c4077e4,0xf900bea3,
    0x7fe4003f,0x220bee01,0x17dc2fee,0xd1f45f90,0x1f807e25,0x1ffc81e4,
    0x007ff200,0x7401ffc8,0x645fa82f,0xcccccccf,0x99999f92,0x403f2599,
    0x417f43f9,0x077c45fa,0x23ba37c4,0x001f902b,0x6413afe0,0x23f884ff,
    0x75fc02fa,0x13afe004,0xf19d06d8,0x7c406d8b,0xb87c5324,0x1321ec05,
    0xf00275fc,0x5fc009d7,0x80bee04e,0x003f22fb,0x3f2003f2,0x7dc7f300,
    0xf50bee02,0xf983fb09,0x0fc80cef,0xfc9fa800,0x42fcfc80,0x80bea3f8,
    0x800fc9fa,0xd00fc9fa,0x23fcbb0b,0x265f804f,0x03f16dbf,0x5426c6b8,
    0xa800fc9f,0xa800fc9f,0xfb00fc9f,0x07e49f00,0x64007e40,0x6c7f300f,
    0xfd84f807,0x6440fea1,0x07e43fff,0x3f9b6c00,0x20ee8fc8,0x80bea3f8,
    0xb007f36d,0x3e20fe6d,0x89f63644,0x4c7d803f,0x8089722c,0x361760f8,
    0xdb007f36,0x5b600fe6,0x00bf03f9,0x4007e4dd,0x0fc800fc,0x02fc7f30,
    0x8b7c4374,0xfdcb806f,0x2aaaff23,0x3f880aaa,0x7cdf21ba,0x2fa8fe24,
    0x03747f10,0xf06e8fe2,0x1b6075c9,0x80dd009f,0x09ff91f8,0x3e23745d,
    0x7f101ba3,0x8fe20374,0x804f886e,0x2aaff27d,0x7f90aaaa,0x21555555,
    0x27f300fc,0x07d804f8,0x001f97f5,0xffc9fa57,0x81ffffff,0x907ee0fb,
    0x3f897e4f,0x07dc0bea,0x07dc03f7,0x2adf03f7,0x2f44f80f,0x57202fc0,
    0x641e88f9,0x41f71ba4,0x83ee01fb,0x83ee01fb,0x805f81fb,0x3ffff26d,
    0xff91ffff,0x23ffffff,0x47f300fc,0x206d805f,0x3b103ffd,0x3f93e4ae,
    0x20333333,0x5f9999ee,0x11dd13e4,0xe817d47f,0x05f9999e,0x3e6667ba,
    0x81fbfb85,0x20fe42fa,0xf880fee1,0x2a264d70,0x33dd1fe6,0x7740bf33,
    0x205f9999,0x5f9999ee,0x25e806d8,0x999999fc,0x26667f21,0x407ee199,
    0x201b62f9,0x01be205e,0x9274aebf,0x7fcc001f,0x20ffffff,0x7c67cc7c,
    0x3e60bea3,0x0fffffff,0xffffff98,0x17fc40ff,0x3a207744,0x1beffa0e,
    0xb92dc990,0x4cff1f88,0xffffffff,0xfffff980,0xff980fff,0x40ffffff,
    0x8fea01fb,0x0fc800fc,0xf502f980,0xf500fdc3,0x6405f807,0x21fcbccf,
    0x3f2000fc,0x3fa99999,0x3eff21f2,0x3f20bea3,0x3fa99999,0x99999fc8,
    0x7ffc43fa,0x00efcaab,0xfd557ff1,0x307c405f,0xf9ec174f,0x26667f27,
    0x9fc83fa9,0x83fa9999,0xa99999fc,0x4077443f,0x03f20ee8,0x22003f20,
    0xe88fd05f,0x00ee880e,0x7fe402fc,0x007e42df,0x93740bf0,0x47ffd10f,
    0x205f82fa,0x3a05f86e,0x7fec5f46,0x64400cef,0x4fdbeffe,0xdddb09b0,
    0xf932b701,0x17e1ba05,0x205f86e8,0xabfe886e,0x7e40efba,0x000fc800,
    0xffb57bf7,0x557fd105,0xbf001df7,0xfc81e400,0x4ccccccc,0x1fb80bea,
    0x8ffea0f9,0x017d42fa,0x017d43f7,0x0440c3f7,0x2cc08800,0x403300a8,
    0x202fa818,0x80bea1fb,0x80bea1fb,0xfeb881fb,0xcfc80cef,0x94cccccc,
    0x9999999f,0xdfffeb89,0x3ffae202,0x0bf000ce,0xffc80d40,0x27ffffff,
    0xcafc407d,0xfa8ff207,0x3e203ec2,0xbf101f65,0x00000000,0x7d800000,
    0x0fb2fc40,0x01f65f88,0x00880bf1,0x7fffffe4,0xffff97ff,0x0c0fffff,
    0x40004400,0x0000005f,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000400,0x00000000,0x00000000,
    0x00000000,0x20000000,0x7103a8dc,0xbb007315,0x0f4c7540,0x426c0bb0,
    0x202cefdb,0x400ceec8,0x5c41ae5b,0x9801befd,0x6dc400cc,0x3b201bef,
    0xb81ae03e,0x5c02defe,0xbefdb886,0xefeca801,0x37f2600c,0xb007d401,
    0x33fae209,0x5c01f501,0x80f7f406,0x402ffddd,0x23aa01fa,0x0fe201e9,
    0x9ffd12f4,0xdd10bfd7,0x4d80dd57,0x2b3ea132,0x5c03eb98,0x33ea0298,
    0x983eb98a,0xf981f98d,0xcbefe880,0x10f604fe,0x7fd97dfd,0x65e77ec0,
    0xadf882ff,0x03ff207d,0xbfe8835c,0x7fe41fda,0x2601f300,0x42a06dde,
    0x002b8008,0xbd039800,0x2fd417f4,0x01fa87ea,0x7d43e8ba,0x4409d101,
    0x407ea04c,0x0d9104e8,0x0bea05d1,0x20fc07f6,0x81fd81fd,0x0fd882fc,
    0x02f887dc,0x3f301f17,0x8bd0bee0,0x2e880f8b,0x0fa62220,0xa801aa98,
    0x0554400a,0xaf405540,0x8bee02fb,0x2207dc7b,0xaf99af99,0x3faa3f10,
    0x2605d13e,0x99f881aa,0x5d11deee,0x5c81bb50,0x174c1f20,0x40bee3cc,
    0x01fd44f8,0x51fb85f3,0x407c403f,0x261f203e,0x5c80f882,0x7ffff540,
    0x7ff7f440,0xffffc80e,0x9ffff904,0x13ffff20,0x3e01f6bd,0xd09d1b24,
    0xffffffff,0x897cd2ab,0xfe88952e,0x52a0effe,0x254f5169,0x1d51f411,
    0x2001fd40,0x4003e45b,0x440400fc,0x4405faee,0x3202e40f,0x81f1000f,
    0x33ee00ea,0x7ec4fd98,0x7f90fea0,0x5f70fee2,0x7f90fee2,0xf5e8fee2,
    0x364dd00b,0x72dc01f7,0x08b92d8d,0x541fb1a2,0x134cb63f,0x75f5344f,
    0x2007e23f,0x400adffd,0x4003742e,0x3ea0006d,0x20f8804f,0x17d400f9,
    0x3e20f880,0x3e1be201,0x127c1546,0x5f8fd0bf,0x217e27d8,0x13e37a7e,
    0x2e6c9f60,0x4c93601f,0x7c03d874,0xe93e0aa0,0x85dddf30,0xd8732a0f,
    0xfda80444,0x0f881eff,0x2fc002fc,0x21e66654,0x9004fefa,0x4088be21,
    0x01fffffc,0x0889b064,0x41f20fe6,0x265fdca9,0xf30fc83f,0x1fd9999b,
    0x43f20fe6,0xdb00bf5e,0x05fd1364,0x96c3e8be,0x0788444b,0x6cbfb953,
    0x88b93d32,0x7446b807,0x7fe54405,0x03743542,0x7fe43740,0x6d3ee6ff,
    0xd802f8af,0x443bbba4,0x40019ee9,0xf32f446b,0x7cc3f705,0x2a5fbdff,
    0xf31fa81f,0x1ddddddd,0x47ea07ea,0xbd00db5e,0x8ff62364,0xefeeefec,
    0x83e2974e,0xff98b53d,0x52e5fbdf,0x05a93669,0x17fa07cc,0x917e2013,
    0x1980fb09,0x9ba007e4,0x07eff45e,0x3a499aa0,0x4c002f43,0xf12ff40f,
    0x3e21fb07,0x7f32fc0e,0x01fc4f90,0xd3e41fcc,0xfa807eeb,0x87e41b23,
    0xafcaafca,0x3ae1f11a,0xf88b65fd,0x1f12fc0e,0x2d8fc4d3,0x2f761f40,
    0x8fb027c5,0x101fb82f,0x402fa8df,0xf889f16e,0x80fc405f,0x00fe21f9,
    0xb7bb0fa0,0x266f86e8,0xf12fcc2f,0x86f8df0d,0x3e1be25d,0x077457a6,
    0x2d907744,0x5b87ea18,0x3075c1ae,0x0be626c1,0x09eb8bf3,0x32026c44,
    0x22dc75c5,0x24f881fd,0x01fd1079,0x05fb03f9,0xd86e9be6,0x40fa00ef,
    0x0035c2fb,0x2e3ae2e4,0x754efdc5,0x544f7c1f,0x4efdc5ff,0x6fd42fda,
    0x7dc2fc9a,0x3a2fda9d,0x2aaffa25,0xcb640efb,0x26c6d9af,0x8df5c09b,
    0x3df05eb8,0xd70bff51,0x017ae237,0xfffe81f5,0x2f3fa64f,0x16e1ffba,
    0xebacef98,0x2f7f604f,0x2e2ffdba,0xfdfeaaef,0xd906b80e,0xcdeefb83,
    0x0fa80caa,0x227ffff4,0xa81effea,0x87caeffd,0x502efffb,0x2e07bfff,
    0x2f42efff,0x33bffae2,0x3ff66c80,0x07d17c1d,0x2dffec98,0x2bbff6a0,
    0xffd9307c,0x02f8805b,0x7f6c42dc,0x01ec0dff,0x2b7ffb26,0x7ffedc00,
    0xdfff704e,0x1f307ea3,0x27dddf70,0xffebacfb,0x2017c41f,0x2002205b,
    0x00220008,0x00880044,0x20001100,0x00098300,0x00110002,0x014c0010,
    0x80220044,0x00020009,0x20220018,0x33101980,0x01880133,0x00110053,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x8ea80000,0x37a602e9,0x880bb000,
    0x06f4c02a,0x807bb510,0x2206205d,0xd7017600,0x01bd3003,0x80f4c754,
    0x02cccccb,0x22017bb7,0x220398bb,0x0e6d4009,0x880b36a0,0xd1002ddb,
    0x74403ae7,0x001320c2,0xe98ea800,0x0db9d102,0x7e403f70,0xde883fff,
    0x373f606d,0x40fe605f,0xf506c87c,0x880bd003,0x3aa06dce,0xddf01e98,
    0x9fb07ddd,0x37760ff9,0x0bea03ff,0x85fccfe8,0x84fdcff8,0x04fdbef8,
    0x01f94f88,0x747a8fe6,0x3bae6005,0x9500000b,0x2b803911,0x7e42fee0,
    0x0e446540,0x05f50fdc,0xc87c81cc,0x22005706,0x64465404,0x17c40001,
    0x7f117d40,0x30022150,0xa87ea039,0xf307dc1f,0x3ee0fc85,0xfca7c401,
    0x3dc7f300,0x77cc017a,0x5400febb,0x0d54c00a,0x7c06aa60,0xaa80e446,
    0x0bd0bd00,0x1f202aa2,0x02aa21b2,0x88035530,0x554c00aa,0xd001f501,
    0x5540530b,0x1f201800,0xe85e87f1,0x0fe61dc5,0x03f29f10,0x9fc89fcc,
    0x406a2bd0,0xc827c47c,0xe884ffff,0x440effef,0x20effefe,0xff9003f8,
    0x907f09ff,0x9ffff90d,0x646c87c8,0xe884ffff,0xc80effef,0xe884ffff,
    0x5c0effef,0x89fc0537,0x7fffe400,0x5c07e604,0xf88bea1f,0xfc806c83,
    0xfca7c401,0x3f27f300,0xff9dd4ff,0xf907b0bf,0x3ee27f90,0x7f507ec3,
    0x8fea0fd8,0x3fc802f9,0x1fc47f71,0x44bee3e4,0x321f23fb,0x7dc4bee6,
    0x7f507ec3,0x7f712fb8,0x0fea0fd8,0x89fffdfb,0x2effdaf8,0x7f713fc8,
    0xfc803ee0,0x85e83fdd,0x0ff6e07f,0x07e53e20,0xd1ee3f98,0x00fee1bf,
    0x217e22f4,0x27c1547e,0xf893e0aa,0x0bf10a84,0x5c17ccfd,0x93ec2fc7,
    0x42fcdb0f,0x27c1547d,0x551f617e,0x12fe89f0,0x6ffcc5f9,0x3e21fd9a,
    0x5f987e85,0x1fff7dc0,0x1ff717dc,0x007ffd10,0x403f29f1,0xfd1ee3f9,
    0xfd807e81,0x7e41fcc1,0x5fdca980,0x8bfb9530,0xf997c46f,0x5f10fc83,
    0x66fccf90,0xf90feccc,0xdf9b7c43,0x80fecccc,0x265fdca9,0xfeccccdf,
    0x5fdca980,0x3fccbd00,0x907f327c,0x0077cc1f,0x227d43fb,0x7cefefd8,
    0x4404fa80,0x2601f94f,0x0dd1ee3f,0x17ec01f9,0x0fd40fd4,0xbf7bfff3,
    0xfbdfff98,0x6ccefd45,0x3ea07ea6,0x4d907f11,0xeeeeeef9,0xb55df90e,
    0x3bbbe6df,0x3e60eeee,0x265fbdff,0xeeeeeeef,0x2f7ffe60,0x21f7005f,
    0x2a7c84f8,0xd11fa81f,0xd84f801d,0xd7159306,0xf101ba00,0x7cc07ee9,
    0x709d1ee2,0x40bee01f,0x227c83f9,0xf12fc0ef,0xfa85f81d,0x0fe61cff,
    0xbb09f1f2,0x7e401fc4,0xf16ceffc,0x81df1007,0x200fe25f,0x12fc0ef8,
    0x4f8f9035,0x20fe67c8,0x1003ea7c,0x001f705f,0x7c81b8bb,0x33f883a6,
    0xb87ea05f,0x03ec3747,0x437c40db,0xf30be66f,0x3e617ccb,0xf103f305,
    0x47c8df0d,0x6c37c3f8,0xf8045f25,0x0be65d86,0xd86f8bf3,0xbf30be65,
    0x6c4f86e8,0x1be25f86,0x4c0fb9be,0x17a1762f,0x743f88bb,0x8be24f86,
    0x20bf11fa,0x3fa3dc7e,0x07b037c0,0xfda9dfb8,0x7d44f7c2,0x544f7c5f,
    0x3f5105ff,0xfb53bf70,0xfaaef885,0xc9adfa86,0x2a01f22f,0x42fc9adf,
    0x5ffa89ef,0x7e4d6fd4,0x7d44f7c2,0x54e7d45f,0x4efcc1fe,0x6fdc1fd9,
    0x3e22fda9,0x33ea36c4,0x7cc1fd99,0xfa85ea8b,0x740fda9c,0x2e0febbe,
    0x2ffdabdf,0xffe8dfd4,0x0001fe9a,0x82efffb8,0x7caeffda,0x6577fed4,
    0x00fec887,0x205dfff7,0x501dfff9,0x7c87bfff,0x7bfff500,0x95dffb50,
    0x7bfff50f,0x95dffb50,0x3dffb50f,0x0bbffa60,0x4177ffdc,0x82ffcefb,
    0x701cffda,0x2a019ffd,0xd981cffd,0xfeb81eff,0xfe882dff,0x19ff99d5,
    0x22004d80,0x10008800,0x01551001,0x00200110,0x00950088,0x00880088,
    0x02200220,0x11000880,0x51002200,0x00080159,0x10008002,0x00006001,
    0x0037c002,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x2ea800f6,0x8088d440,0x1bd304e8,
    0x43d31d50,0x98015308,0x4062111a,0xddddd708,0xddd7079b,0x327ddddd,
    0x01cdeeee,0x376a21e4,0x40bd3002,0xeeeeeeea,0xddddd70e,0x223d3059,
    0x656e9b09,0xdddd7004,0x3299059d,0x88075c04,0x8000d92e,0x41ff5c4e,
    0x3fffa06d,0x80fb85dd,0xea85dcf8,0x3b7a1e98,0xdfb05fef,0x07ea9bbf,
    0x333f27f1,0x645ffdcc,0xcccccccf,0xddb99fb2,0x893ee07f,0x00ffccff,
    0xfb80ffe4,0x24cccccc,0xfeecccfc,0x7d4bea0e,0x2f56e9b2,0xecccfc80,
    0x757a0efe,0x9807e405,0x8000fb3f,0x02b7e64e,0x4bf20322,0x01b85fd9,
    0x00391195,0x7f70dfe8,0x9fb12fc8,0x21f513e2,0x45f900fc,0x07d800fc,
    0x7fe441fb,0x07f11ee4,0xf704ebf8,0x2e0f9001,0x64cbea5f,0xc802f401,
    0x3a0bf507,0x9807e405,0x9800fb3f,0x0fd49d1a,0x7c422022,0x808afcc5,
    0x21101108,0x1fd08808,0x262fc6e8,0x4bd1f24f,0x49f300fc,0x07d800fc,
    0x757fc3f5,0x81b613a4,0xb80fc9fa,0x207c800f,0x805f52fb,0x02622f41,
    0x897dc0f9,0x906a6bd0,0x6cfe601f,0x3fffa007,0x33f714fd,0xf9a742f4,
    0xd0bd5f82,0x753a17a9,0x90dd4e85,0x3e0fe61f,0x17c4be64,0x8bea01f9,
    0x07d800fc,0x4e8641f9,0x5b606f80,0x00fb83f9,0x53e607c8,0x87e602fa,
    0x3217e65e,0xd5ea7c07,0x21dfffbd,0x27f300fc,0x25f9007d,0xfffd4fd9,
    0xaa742f4f,0x0bd5d81f,0x53a17a9d,0x09d4e85e,0x20bea1f7,0x47baf44e,
    0xb99999fc,0x555fe47f,0x5fb0aaaa,0x405fb755,0x81fd404e,0x2e1ba3f8,
    0x0aaaaabf,0x2adf01f2,0xe87e602f,0x1f209f35,0x7f57add0,0x3f27f70c,
    0xfdcccccc,0x17e00fb3,0x207dc9f3,0x0fe4e85e,0x3a17abf1,0x3a9d0bd4,
    0xb0dd4e85,0x27c27ccf,0x3f2275ee,0x0bffffff,0x7fffffe4,0xffffb1ff,
    0x27403dff,0x7dc0bf30,0xff707ee0,0x641fffff,0x2fabf407,0x9de87e60,
    0xfffff04f,0x2bd7e89f,0xff94f87e,0x7fffffff,0x0fe601f6,0x740fb93e,
    0x51b64e85,0x53a17abf,0x0bd4e85e,0xbf03fa9d,0x227cc6e8,0x7e41fbf8,
    0x904fcaab,0x3333333f,0x3f6623ec,0x3ea09d02,0x267ba00d,0x57dc5f99,
    0x3e419999,0x017d5ba0,0x7ff743f3,0x333fb301,0x3abd5e81,0x01f95e86,
    0x403ecfe6,0x2e4e81fa,0x2742f40f,0xbff97df5,0x2f53a17a,0x4e85ea74,
    0x3fb35dfd,0xfea9dfa8,0xfc86fd84,0x7e427dc0,0x3e07d800,0xbf509d05,
    0xfffff980,0x03ee0fff,0x2bf01f20,0x4c3d52fa,0x1bb3fa1f,0xea7c07c8,
    0x32bd0bd5,0x367f300f,0xf83f8807,0x0bd03ee4,0x8cfda89f,0x29f0bd4e,
    0x0bd4f85e,0x3ff37a9f,0x7ff9301e,0x907f509d,0xc87fb01f,0x207d800f,
    0xfb89d06e,0x999fc804,0x3ee3fa99,0x2a07c800,0x3ea5f53f,0x56e87e62,
    0xa81f207f,0x217abd2f,0x2601f95e,0x3e00fb3f,0x1f727d46,0x127cc6d8,
    0x2636cfe0,0x4f98db4f,0xbd4f98db,0x13a08004,0x03f203ea,0x0fc83fe2,
    0xbf307d80,0x04fa93a0,0x73740bf0,0x20f9001f,0xc8bea7f8,0x25e87e61,
    0x107c81fd,0x85eaf4df,0x2601f95e,0x2a00fb3f,0x24feb9df,0x4e7dc0fb,
    0x51764fea,0x2a73ee5f,0x539f74fe,0x273ee9fd,0x00bd4fea,0x05e84e80,
    0x97ea01f9,0xccccccfc,0x9999fb4c,0x53a03ff9,0xcccccff8,0xf7017d44,
    0x32003ee3,0xffdccccf,0x2344bea1,0xf897a1f9,0xccccfc86,0x757a1ffd,
    0x01f95e85,0x667ecfe6,0x7541cccc,0x3ee4dbff,0xdafffd80,0x3f73bea4,
    0x6d7ffec4,0x36bfff64,0x36bfff64,0xe8000bd4,0x6407fb64,0x64bf600f,
    0xffffffff,0xdfffffb7,0xfaa74039,0x47ffffff,0xbafc407d,0xfffc800f,
    0x7d40ceff,0x21f98112,0x321fd45e,0x0cefffff,0x5e85eaf4,0x4fe601f9,
    0xfffffffd,0x07dc0102,0xcdb98010,0x00200202,0x0001dc02,0x001dc8ae,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x98000000,0x2e17543e,0xeeeed84e,0x3d71eeee,0x5d897540,
    0x835c36e0,0x93e883eb,0x913e880b,0x19999999,0x3bbbbbae,0x20d93eee,
    0x3a201dd8,0x4ccccc41,0x25510199,0x8351112a,0x2a7d105c,0xd80bd72e,
    0x7776c03e,0x74eeeeee,0x50ba203d,0x775c9117,0x5c0beeee,0xd07e4006,
    0x43fbfa8b,0xfccccccb,0x101df11f,0xa84fa8df,0x3a07ea3f,0xf52fa86f,
    0xe88fd405,0x0ffeeeee,0x9bfb9995,0x221f6599,0x17f402fe,0x6cc11006,
    0x9d1fffef,0x83f98ffd,0x327f70fc,0x9ff102ff,0x6feefdc0,0xf92ccccc,
    0x547f101d,0x3f25ffde,0x1ffedccc,0x46e001f2,0xca9dc0c8,0x544fb800,
    0xd81fd84f,0xf117e21f,0x40fcf887,0xd817e0fc,0x203f9806,0x88fb02fa,
    0x7fdc01fe,0x442200c2,0x21ff31ef,0xfd819cfe,0x3fb93e60,0x3ae09df9,
    0x7ddba04f,0x427fe401,0x418663f8,0x64df307c,0x4019999f,0x400300c1,
    0x43fb05f9,0x1fd103fa,0x717a03fa,0x45e85f1f,0x03f880fc,0x3ea02f44,
    0x7f44fb02,0x17dfcc01,0x3f211006,0x3f4ff721,0x0fd93e20,0x3e7e4fea,
    0xf504fbe8,0xf9007ee5,0x13f885f9,0x0f906a61,0xfffc87ec,0xf983ffff,
    0x3f303f31,0x201df100,0x80df16f8,0x901fcdf9,0x44bd5d8f,0x5c1fcc3f,
    0x007e400f,0x8bec0bea,0x5f4401fe,0x2200c2f9,0x5eb5cfb0,0x31f900dd,
    0xf92fa87f,0xf9f983f3,0x0fdcdd04,0x83ba3f20,0xffb9d3f8,0xe81f21df,
    0x2aaaff26,0x8fcc3fea,0x01f981f9,0x7d401fe8,0xfc800fcb,0xf83ea03f,
    0x40fccf73,0x4c05e86e,0x02fa803f,0x007fd1fb,0x030be6d9,0x3e6dd088,
    0x2017abd0,0xf986ecf8,0xd713af92,0xb8fea13e,0x0aaaaabf,0xf893e6f9,
    0x3ea19fd3,0x93ea0f93,0xf31fa07c,0x3e607e63,0x8017ec01,0xf1003ffd,
    0x997c403f,0x1ee3f30f,0x05f307dc,0xfa800fc8,0xfdfdfb02,0xf987d401,
    0x6c2200c2,0x29f12e8f,0x3b32605e,0xf31cceff,0x3a3ddf23,0xb8dd09f3,
    0x1fffffff,0xf897e4f9,0x94f81fd3,0xfffddddf,0x1f903e41,0x81f98fcc,
    0x13ee01f9,0x2006f880,0xa7406ffe,0x05d9fc6c,0x403e47f1,0x05f5005f,
    0x1be63bf6,0x85f31fc4,0xefb84401,0x02f4fea4,0x99df9993,0xbe47e239,
    0x3e1f31f9,0x4cce7d44,0x19999afc,0x88ee89f2,0x2bd0dd3f,0xbceeeefc,
    0x8bf03e40,0x303f31f9,0x017e603f,0x7e4017e0,0x5b204fba,0x02faec4e,
    0x5404f9b6,0x05f5001f,0x84fb83f6,0xdfdcccfd,0x22110064,0x26fc9bff,
    0x417a005e,0xa74f90f8,0xffd13e5c,0x803fffff,0x7c67cc7c,0x32bd0bd3,
    0x267f2007,0x4c2fda99,0xf303f31f,0x001df103,0x9f300bf0,0x9fa80fec,
    0x07cfdc2f,0x01f53f50,0x3ea006d8,0x3fb0fb02,0xffffffd8,0x088030ff,
    0x17dff9d3,0xfff702f4,0x345fffff,0x22ebdcf9,0x2ab3e64f,0x6401fdaa,
    0xd3fbfc87,0x01f2bd0b,0xffffffc8,0xf31f984f,0xfd03f303,0x017e0003,
    0x0ff88df1,0xf887cf88,0x5dcf806c,0x2a005f80,0xf10fb02f,0x42f9801f,
    0x21984401,0x33310000,0x201333bd,0x83efe67c,0x2e03f64f,0x443e401f,
    0xd0bd3ffe,0xfc801f2b,0x3009aaab,0x2607e63f,0x6677dc1f,0x201ccccc,
    0x40fec05f,0x0bfd05fa,0x3b2013fa,0x01fc402f,0x1f605f50,0x3e602fd4,
    0x4ccccd42,0x00000999,0x2ea82f40,0x7c5fe8f9,0x3ee09f34,0x94cccccd,
    0x74ffea0f,0x00f95e85,0x3e6003e4,0x3f303f31,0xffffffc8,0x17e03fff,
    0x3f203fb8,0xf903fb83,0x00ff1005,0x7d4005f3,0x7ec0fb02,0x000be603,
    0x3a000000,0x1f25f505,0xfb4f85f7,0x3fffee01,0x40f97fff,0xbd0bd3fc,
    0x07c801f2,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x221aa980,0x554c00aa,0x20154401,0x2a200aa8,
    0x0880881a,0x2aa00790,0x11198000,0x261106a6,0x3106a21a,0x26609881,
    0x06219999,0x1109884c,0x70440988,0x81881400,0x89d46e48,0x9500000c,
    0x74c00000,0x3ffbfa21,0x84ffffbd,0x0effefe8,0x83ffffc8,0xa84ffffc,
    0x3a1efeff,0x09d04e85,0x04ffffc8,0x33a7fd50,0x9d0efffd,0xff57fffb,
    0xd1be21df,0x3fffe61d,0x81f71fff,0x365f53f8,0x8fe1fdc6,0x3e200cff,
    0x87eceecd,0x3e21f54d,0x41e98bb1,0xa81ee04c,0x1fb01dfe,0x83b62fa8,
    0x0bea3ffc,0x21fd41fb,0x41f90bfb,0x87f712fb,0x5e93e24f,0x409d04e8,
    0x07f713fc,0xe8b7ff22,0x3a7f50cf,0x23dfb14f,0x64fea2f9,0x127cc01f,
    0x930fb87f,0x5fe83ea3,0xffb887e6,0x99ff502d,0x88fb83ff,0x7c47643f,
    0x7e47fa22,0x7c41ee03,0x7ff10b91,0x220dc390,0x1546e86f,0x911be27c,
    0x13ec2fc3,0x17a0889f,0x74ccc53a,0x17e2199d,0x7ffb31fa,0x4f81fd01,
    0x744fa8fd,0x01fdfe45,0xd1b617e2,0xf89fc40b,0xda81b27d,0x83ea0bef,
    0x6cfe61f9,0x1f94f886,0x01feff44,0xdb9881ee,0x446beb87,0xdfb95106,
    0x20fd9999,0x225fdca9,0x66fcc03f,0x360feccc,0x85e82cff,0xfffff54e,
    0x0fe61fff,0x02ff83f2,0x6eaf4374,0x117a17cc,0xee880bfd,0x5f31fa80,
    0xf3f55d80,0x362013a3,0x93a1723f,0x903f98fc,0xf887f31f,0xfffff04f,
    0x3be67fff,0xf8bf87cc,0xdfd30222,0xdddddf7b,0x7ffcc1dd,0x0be65fbd,
    0xdddddf30,0xffda81dd,0x53a17a2f,0x99de9998,0x3ea07ea1,0x4033ff21,
    0x8bd5e85e,0x6c2f41f9,0x007ec04f,0x2e01f29f,0x3e2feb97,0x0f7f5401,
    0x222f88f7,0xf881f94f,0xfff90db3,0x5fb55503,0x7c9ae155,0x206d87dc,
    0x13e20df8,0xbf03be20,0x885427c4,0xea88003f,0x413e17a7,0x907f304e,
    0x5bfd710f,0xbd5e85e8,0x22f41f98,0xfb02fdfa,0x09f7c803,0x367d3f30,
    0xff9107bd,0x53bf3039,0xd0fa81fb,0x83f36d89,0x01fe8bfc,0x6efcc1ee,
    0xf997a0fd,0x0be65d31,0x4cdd0df7,0x3e2fcc2f,0x0df17c46,0x2e17ccbb,
    0x4f98db0f,0x1be209d0,0xffb501be,0x757a17a3,0x97a0fcc5,0xc81fb5f8,
    0xfcf9802f,0x23fbd000,0xffd84efa,0xfdfd100b,0x2b90bfdf,0x3a1f30f9,
    0xbd11fd43,0x15103dc0,0x3a0fd42a,0x4efc5f55,0x99dfdfb8,0x44f7c1fc,
    0x6fd45ffa,0x6fd46d99,0x76c2fc9a,0x3ee6ea8a,0x904fea9c,0x54efdc07,
    0x591002fd,0x2f57a17a,0x6cbd07e6,0x7d4bf10f,0x81aaaaad,0x42e986fe,
    0x0bfe27fc,0x986400ba,0x1a8a0930,0x40c0a233,0x001ee008,0xffd50000,
    0x37ffa63d,0xaeffda82,0xcfffa87c,0x3dfffa81,0x0dfffd88,0xa6d7ffec,
    0xaaaaaaa8,0x2efffb82,0x3a17a000,0x41f98bd5,0xfb85f75e,0xffffff93,
    0x507f709f,0x745f985f,0x00000007,0x00000000,0x10000000,0x04400440,
    0x02200100,0xa8040040,0xffffffff,0x00001100,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x07cc04d8,
    0x44eeb800,0x00003eec,0x74df4400,0x85d10442,0xa88c0bca,0x97a20aaa,
    0x983b6098,0xeeeeeeee,0xd11d50ee,0x33333225,0x000ccccc,0x00000000,
    0x00000000,0xb3000000,0x02fc017f,0x7ffc1fd9,0xf32fffff,0x23667f33,
    0x3fffe0f9,0x3c42ffff,0xf8867644,0x11743f9c,0x3fffe27f,0xff54ecdf,
    0x507dc5ff,0x511fc45f,0x55555555,0x97447545,0xbbbbbbb8,0x00000bbb,
    0x00000000,0x00000000,0xd37f0000,0x7c5c0007,0x2eeeeee0,0x885d01bb,
    0x5ddddc6c,0xd1712fbb,0x14b9dc71,0xea87f37f,0x22e67f12,0x21effda8,
    0x20dc0888,0x001cc1c9,0x00000000,0x00000000,0x00000000,0xd5000000,
    0xffff5354,0x1f01ffff,0x42f44000,0x5f000dd9,0x437fff66,0xf97cd10d,
    0x2f8feea1,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x544f32dc,0x02aaaaaa,0x4444441f,0x21fcc088,0x7c00fa08,0x32a276c2,
    0x064323c9,0x000c8599,0x00000000,0x00000000,0x00000000,0x00000000,
    0x4c000000,0x03c816e7,0x3fffe0f8,0xbf32ffff,0x2ebea377,0x5c5f001f,
    0x16d42e8e,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0xbfb00000,0x402fc05f,0x2aaaaa0c,0x99950aaa,0x00e65459,0x00108130,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x14c00000,
    0x000004c0,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,
};

static signed short stb__arial_20_latin1_x[224]={ 0,1,0,0,0,1,0,0,1,1,0,0,1,0,
1,0,0,1,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,-1,1,0,1,1,1,0,1,1,0,1,
1,1,1,0,1,0,1,0,0,1,0,0,0,0,0,1,0,0,0,-1,0,0,1,0,0,0,0,0,1,1,
-1,1,1,1,1,0,1,0,1,0,0,1,0,0,0,0,0,0,1,0,0,2,2,2,2,2,2,2,2,2,
2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,2,0,0,0,-1,
1,0,0,0,0,1,0,0,0,-1,1,0,0,0,1,1,0,1,0,0,0,1,0,0,0,1,-1,-1,-1,-1,
-1,-1,0,0,1,1,1,1,0,1,-1,0,-1,1,0,0,0,0,0,1,0,1,1,1,1,0,1,1,0,0,
0,0,0,0,0,0,0,0,0,0,0,1,-1,0,0,1,0,0,0,0,0,0,1,1,1,1,1,0,1,0,
 };
static signed short stb__arial_20_latin1_y[224]={ 16,3,3,2,2,2,2,3,2,2,2,5,14,10,
14,2,3,3,3,3,3,3,3,3,3,3,6,6,5,6,5,2,2,3,3,2,3,3,3,2,3,3,3,3,
3,3,3,2,3,2,3,2,3,3,3,3,3,3,3,3,2,3,2,18,3,6,3,6,3,6,2,6,3,3,
3,3,3,6,6,6,6,6,6,6,3,6,6,6,6,6,6,2,2,2,8,4,4,4,4,4,4,4,4,4,
4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,16,6,3,2,5,3,
2,2,3,2,2,7,6,10,2,1,2,5,3,3,3,6,3,8,15,3,2,7,2,2,2,6,-1,-1,-1,0,
0,0,3,2,-1,-1,-1,0,-1,-1,-1,0,3,0,-1,-1,-1,0,0,5,2,-1,-1,-1,0,-1,3,2,3,3,
3,3,3,2,6,6,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,6,6,3,3,3,3,3,3,3,
 };
static unsigned short stb__arial_20_latin1_w[224]={ 0,3,6,10,10,14,12,3,5,5,7,10,3,6,
3,5,10,6,10,10,10,10,10,10,10,10,3,3,10,10,10,10,18,13,10,13,11,10,10,13,11,3,8,11,
9,13,11,14,11,14,12,12,11,11,12,17,12,12,11,4,5,4,8,12,5,10,9,9,9,10,6,9,8,2,
4,8,2,13,8,10,9,9,6,9,5,8,9,13,9,9,9,6,3,6,10,10,10,10,10,10,10,10,10,10,
10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,0,2,10,10,10,11,
3,10,6,14,7,8,10,6,14,12,5,10,6,6,5,8,10,3,5,5,7,8,15,15,15,9,13,13,13,13,
13,13,17,13,10,10,10,10,4,4,7,5,13,11,14,14,14,14,14,9,14,11,11,11,11,12,11,10,10,10,
10,10,10,10,16,9,10,10,10,10,4,4,7,5,10,8,10,10,10,10,10,10,9,8,8,8,8,9,9,9,
 };
static unsigned short stb__arial_20_latin1_h[224]={ 0,13,5,15,16,15,15,5,18,18,7,9,5,3,
2,15,14,13,13,14,13,14,14,13,14,14,10,13,10,7,10,14,18,13,13,15,13,13,13,15,13,13,14,13,
13,13,13,15,13,15,13,15,13,14,13,13,13,13,13,17,15,17,8,2,3,11,14,11,14,11,14,14,13,13,
17,13,13,10,10,11,14,14,10,11,14,11,10,10,10,14,10,18,18,18,4,12,12,12,12,12,12,12,12,12,
12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,0,14,17,15,9,13,
18,18,2,15,8,9,7,3,15,2,6,11,7,7,3,14,17,3,5,7,8,9,15,15,15,14,17,17,17,16,
16,16,13,18,17,17,17,16,17,17,17,16,13,16,18,18,18,17,17,9,15,18,18,18,17,17,13,15,14,14,
14,14,14,15,11,14,14,14,14,14,13,13,13,13,14,13,14,14,14,14,14,8,11,14,14,14,14,17,17,17,
 };
static unsigned short stb__arial_20_latin1_s[224]={ 160,13,76,27,120,232,142,89,1,7,62,
223,251,104,251,108,55,129,136,195,216,130,141,181,173,184,155,188,91,26,173,
243,42,147,118,114,172,107,161,128,233,184,206,204,245,17,49,1,70,217,94,
95,192,215,168,150,137,124,112,180,247,193,242,147,121,18,233,29,1,39,11,
27,224,221,251,198,253,111,102,80,64,74,248,50,227,60,145,159,125,84,135,
24,31,35,93,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,
227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,160,253,208,
171,184,1,61,13,140,38,234,195,51,104,64,127,70,69,37,44,111,77,219,
117,83,20,1,204,182,155,79,163,1,15,29,142,188,174,31,77,240,58,69,
131,203,198,185,168,207,156,103,118,133,92,43,213,202,148,91,65,80,107,82,
16,97,23,12,209,119,53,1,34,66,86,108,231,94,99,104,192,198,61,242,
220,44,152,1,9,238,18,37,46,55,160,230,170, };
static unsigned short stb__arial_20_latin1_t[224]={ 19,84,110,38,20,20,38,110,1,1,110,
98,98,110,104,38,54,69,69,54,83,54,54,83,54,54,98,69,98,110,98,
54,1,69,69,38,69,69,69,38,69,69,54,83,69,84,84,38,84,20,69,
38,83,54,83,83,83,83,83,1,20,1,98,110,110,98,54,98,69,98,69,
69,69,69,1,69,38,98,98,98,69,69,83,98,54,98,98,98,98,69,98,
1,1,1,110,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,
83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,19,20,1,
38,98,84,1,1,110,38,98,98,110,110,38,110,110,98,110,110,110,54,1,
110,110,110,110,98,38,38,38,54,20,20,20,20,20,20,84,1,1,20,20,
20,1,1,1,20,69,20,1,1,1,20,20,98,20,1,1,1,20,20,84,
38,54,54,54,38,54,38,98,54,54,54,54,38,83,83,83,69,38,84,38,
38,54,54,54,110,83,69,69,69,69,1,1,1, };
static unsigned short stb__arial_20_latin1_a[224]={ 80,80,102,159,159,255,191,55,
95,95,111,167,80,95,80,80,159,159,159,159,159,159,159,159,
159,159,80,80,167,167,167,159,291,191,191,207,207,191,175,223,
207,80,143,191,159,239,207,223,191,223,207,191,175,207,191,270,
191,191,175,80,80,80,134,159,95,159,159,143,159,159,80,159,
159,64,64,143,64,239,159,159,159,159,95,143,80,159,143,207,
143,143,143,96,74,96,167,215,215,215,215,215,215,215,215,215,
215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,
215,215,215,215,215,215,215,215,80,95,159,159,159,159,74,159,
95,211,106,159,167,95,211,158,115,157,95,95,95,165,154,80,
95,95,105,159,239,239,239,175,191,191,191,191,191,191,286,207,
191,191,191,191,80,80,80,80,207,207,223,223,223,223,223,167,
223,207,207,207,207,191,191,175,159,159,159,159,159,159,255,143,
159,159,159,159,80,80,80,80,159,159,159,159,159,159,159,157,
175,159,159,159,159,143,159,143, };

// Call this function with
//    font: NULL or array length
//    data: NULL or specified size
//    height: STB_FONT_arial_20_latin1_BITMAP_HEIGHT or STB_FONT_arial_20_latin1_BITMAP_HEIGHT_POW2
//    return value: spacing between lines
static void stb_font_arial_20_latin1(stb_fontchar font[STB_FONT_arial_20_latin1_NUM_CHARS],
                unsigned char data[STB_FONT_arial_20_latin1_BITMAP_HEIGHT][STB_FONT_arial_20_latin1_BITMAP_WIDTH],
                int height)
{
    int i,j;
    if (data != 0) {
        unsigned int *bits = stb__arial_20_latin1_pixels;
        unsigned int bitpack = *bits++, numbits = 32;
        for (i=0; i < STB_FONT_arial_20_latin1_BITMAP_WIDTH*height; ++i)
            data[0][i] = 0;  // zero entire bitmap
        for (j=1; j < STB_FONT_arial_20_latin1_BITMAP_HEIGHT-1; ++j) {
            for (i=1; i < STB_FONT_arial_20_latin1_BITMAP_WIDTH-1; ++i) {
                unsigned int value;
                if (numbits==0) bitpack = *bits++, numbits=32;
                value = bitpack & 1;
                bitpack >>= 1, --numbits;
                if (value) {
                    if (numbits < 3) bitpack = *bits++, numbits = 32;
                    data[j][i] = (bitpack & 7) * 0x20 + 0x1f;
                    bitpack >>= 3, numbits -= 3;
                } else {
                    data[j][i] = 0;
                }
            }
        }
    }

    // build font description
    if (font != 0) {
        float recip_width = 1.0f / STB_FONT_arial_20_latin1_BITMAP_WIDTH;
        float recip_height = 1.0f / height;
        for (i=0; i < STB_FONT_arial_20_latin1_NUM_CHARS; ++i) {
            // pad characters so they bilerp from empty space around each character
            font[i].s0 = (stb__arial_20_latin1_s[i]) * recip_width;
            font[i].t0 = (stb__arial_20_latin1_t[i]) * recip_height;
            font[i].s1 = (stb__arial_20_latin1_s[i] + stb__arial_20_latin1_w[i]) * recip_width;
            font[i].t1 = (stb__arial_20_latin1_t[i] + stb__arial_20_latin1_h[i]) * recip_height;
            font[i].x0 = stb__arial_20_latin1_x[i];
            font[i].y0 = stb__arial_20_latin1_y[i];
            font[i].x1 = stb__arial_20_latin1_x[i] + stb__arial_20_latin1_w[i];
            font[i].y1 = stb__arial_20_latin1_y[i] + stb__arial_20_latin1_h[i];
            font[i].advance_int = (stb__arial_20_latin1_a[i]+8)>>4;
            font[i].s0f = (stb__arial_20_latin1_s[i] - 0.5f) * recip_width;
            font[i].t0f = (stb__arial_20_latin1_t[i] - 0.5f) * recip_height;
            font[i].s1f = (stb__arial_20_latin1_s[i] + stb__arial_20_latin1_w[i] + 0.5f) * recip_width;
            font[i].t1f = (stb__arial_20_latin1_t[i] + stb__arial_20_latin1_h[i] + 0.5f) * recip_height;
            font[i].x0f = stb__arial_20_latin1_x[i] - 0.5f;
            font[i].y0f = stb__arial_20_latin1_y[i] - 0.5f;
            font[i].x1f = stb__arial_20_latin1_x[i] + stb__arial_20_latin1_w[i] + 0.5f;
            font[i].y1f = stb__arial_20_latin1_y[i] + stb__arial_20_latin1_h[i] + 0.5f;
            font[i].advance = stb__arial_20_latin1_a[i]/16.0f;
        }
    }
}

#ifndef STB_SOMEFONT_CREATE
#define STB_SOMEFONT_CREATE              stb_font_arial_20_latin1
#define STB_SOMEFONT_BITMAP_WIDTH        STB_FONT_arial_20_latin1_BITMAP_WIDTH
#define STB_SOMEFONT_BITMAP_HEIGHT       STB_FONT_arial_20_latin1_BITMAP_HEIGHT
#define STB_SOMEFONT_BITMAP_HEIGHT_POW2  STB_FONT_arial_20_latin1_BITMAP_HEIGHT_POW2
#define STB_SOMEFONT_FIRST_CHAR          STB_FONT_arial_20_latin1_FIRST_CHAR
#define STB_SOMEFONT_NUM_CHARS           STB_FONT_arial_20_latin1_NUM_CHARS
#define STB_SOMEFONT_LINE_SPACING        STB_FONT_arial_20_latin1_LINE_SPACING
#endif

