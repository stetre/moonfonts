// Font generated by stb_font_inl_generator.c (4/1 bpp)
//
// Following instructions show how to use the only included font, whatever it is, in
// a generic way so you can replace it with any other font by changing the include.
// To use multiple fonts, replace STB_SOMEFONT_* below with STB_FONT_courier_bold_20_latin1_*,
// and separately install each font. Note that the CREATE function call has a
// totally different name; it's just 'stb_font_courier_bold_20_latin1'.
//
/* // Example usage:

static stb_fontchar fontdata[STB_SOMEFONT_NUM_CHARS];

static void init(void)
{
    // optionally replace both STB_SOMEFONT_BITMAP_HEIGHT with STB_SOMEFONT_BITMAP_HEIGHT_POW2
    static unsigned char fontpixels[STB_SOMEFONT_BITMAP_HEIGHT][STB_SOMEFONT_BITMAP_WIDTH];
    STB_SOMEFONT_CREATE(fontdata, fontpixels, STB_SOMEFONT_BITMAP_HEIGHT);
    ... create texture ...
    // for best results rendering 1:1 pixels texels, use nearest-neighbor sampling
    // if allowed to scale up, use bilerp
}

// This function positions characters on integer coordinates, and assumes 1:1 texels to pixels
// Appropriate if nearest-neighbor sampling is used
static void draw_string_integer(int x, int y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0, cd->t0); glVertex2i(x + cd->x0, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t0); glVertex2i(x + cd->x1, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t1); glVertex2i(x + cd->x1, y + cd->y1);
        glTexCoord2f(cd->s0, cd->t1); glVertex2i(x + cd->x0, y + cd->y1);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance_int;
    }
    glEnd();
}

// This function positions characters on float coordinates, and doesn't require 1:1 texels to pixels
// Appropriate if bilinear filtering is used
static void draw_string_float(float x, float y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0f, cd->t0f); glVertex2f(x + cd->x0f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t0f); glVertex2f(x + cd->x1f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t1f); glVertex2f(x + cd->x1f, y + cd->y1f);
        glTexCoord2f(cd->s0f, cd->t1f); glVertex2f(x + cd->x0f, y + cd->y1f);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance;
    }
    glEnd();
}
*/

#ifndef STB_FONTCHAR__TYPEDEF
#define STB_FONTCHAR__TYPEDEF
typedef struct
{
    // coordinates if using integer positioning
    float s0,t0,s1,t1;
    signed short x0,y0,x1,y1;
    int   advance_int;
    // coordinates if using floating positioning
    float s0f,t0f,s1f,t1f;
    float x0f,y0f,x1f,y1f;
    float advance;
} stb_fontchar;
#endif

#define STB_FONT_courier_bold_20_latin1_BITMAP_WIDTH         256
#define STB_FONT_courier_bold_20_latin1_BITMAP_HEIGHT        110
#define STB_FONT_courier_bold_20_latin1_BITMAP_HEIGHT_POW2   128

#define STB_FONT_courier_bold_20_latin1_FIRST_CHAR            32
#define STB_FONT_courier_bold_20_latin1_NUM_CHARS            224

#define STB_FONT_courier_bold_20_latin1_LINE_SPACING           9

static unsigned int stb__courier_bold_20_latin1_pixels[]={
    0x000cc000,0x00200910,0x03300066,0x00500010,0x00100051,0x02880050,
    0x4400a800,0x000a2099,0x02880150,0x00400040,0x028800a2,0x4e9b2008,
    0x0001fff0,0x1f7009f3,0x2002fa80,0x0ff6207f,0x4402f440,0x7fb1004f,
    0x001b6200,0x1eed90fb,0x7e403d90,0x005f71ff,0xf1003b20,0x037f2009,
    0x880ff620,0x04e8804f,0x2540ff62,0x03fae059,0x1005f100,0x4c0159fb,
    0x2099003f,0x405e9cf9,0x3a2004e8,0x74e7cc05,0x4005e806,0xfb7d85f9,
    0x901fb801,0x1be2179f,0x4003b600,0x37a205e8,0x3e600fd9,0x3a206e9c,
    0x980fe205,0x0005e9cf,0x00000fc8,0xbfffff50,0x80001880,0x00c01418,
    0x20c40180,0xc8001802,0x0fb7e81f,0x07e40260,0x06000fe4,0x50a00c00,
    0x00a0c401,0x44018806,0x1bdb3141,0xf9037baa,0x9819dfd7,0xbdd50ded,
    0x7dcd7f41,0x542aaa25,0x3bb622aa,0x55510eee,0xa80aaaa1,0xbca800bc,
    0x80bca800,0x5550aaa8,0xe837c405,0x2aa20fd6,0x01f900aa,0x55100bf1,
    0x2aa20155,0x40aaaaaa,0x100aaaa8,0x55555555,0x2aaaaa21,0x2aaaa21a,
    0x2aaa21aa,0xdff51aaa,0x903bfee1,0x1dffdfff,0xfb877fd4,0x98bf10ef,
    0x237fff61,0xfd32ffff,0x3f61ffff,0xffff8dff,0x7ffffe42,0xfffff902,
    0x3ffff205,0x6fffec2f,0x902ffff8,0xffffa85f,0x7fe41eff,0x01f904ff,
    0xff9007f6,0x3ff209ff,0x42ffffff,0x904ffffc,0xffffffff,0x3ffffee5,
    0x3fffee7f,0x3ffee7ff,0x0fee7fff,0x1bf901fd,0x0fee2fdc,0xcffd81fd,
    0x30afd882,0x0fc807f9,0x32615fb1,0x4df7dc3f,0x77dc0ffc,0x5c0ffc9b,
    0x0ffc9bef,0x64c2bf62,0x30df103f,0x3bffdffb,0x0fffda88,0xbf300fc8,
    0xfffda880,0xaadfb880,0x6d442fca,0xfb880fff,0x22fcaaad,0x40abfda9,
    0x40abfda9,0x40abfda9,0x209f50fe,0xe87e81fc,0x2e09f50f,0x3ec1ffff,
    0x3f2017dc,0x8bee1f60,0x25fa87f8,0x25fa87f8,0x45fa87f8,0x702fb87d,
    0x7d3e205f,0x1fdff405,0x1fb007e4,0x07f7fd00,0x7d44cfe6,0x07f7fd01,
    0x7d44cfe6,0x6400fc81,0x807e400f,0x201fd3fb,0xb86e82fc,0x8801fd3f,
    0x5c3ec5fb,0xb07e402f,0x7d45f70f,0x27d4ff04,0x413ea7f8,0x7dc3ec7f,
    0x2a20df02,0x300df9df,0xf90df19f,0x2027d401,0x306f8cf9,0x40abd39f,
    0x306f8cf9,0x40abd39f,0x07e400fc,0xfe803f20,0x3bf204fb,0x3a05f912,
    0x0fa84fbf,0x2e1f63ec,0xb07e402f,0x7e45f70f,0x3f23f901,0x3f23f901,
    0x3ec3f901,0x1fdc17dc,0xffffffe8,0x3f23f907,0x3a007e41,0x647f200f,
    0xffff981f,0xfc8fe405,0x5ffff981,0x32007e40,0x007e400f,0x6401fff5,
    0x05ffffff,0x3203ffea,0x45fc9aef,0x402fb87d,0x2e1f60fc,0x6c0bee2f,
    0x3605f70f,0x3605f70f,0x3ee1f60f,0xb300fe82,0x105dfbbf,0x89fb99ff,
    0x1fd400fc,0xfdccff88,0x5fcdf984,0x3733fe20,0xfcdf984f,0x2007e405,
    0x07e400fc,0xf9013fa0,0xd0017b93,0x3ffee09f,0x07e41eff,0x1f9007ee,
    0x87ee07e4,0x27f885fa,0x27f885fa,0x47f885fa,0x20fdc0fc,0x57d403fa,
    0xfff703f9,0x7e41ffff,0xf707e800,0x81ffffff,0x0b2793f9,0xfffffff7,
    0x2793f981,0x400fc82c,0x07e400fc,0xf9003fe0,0x01ff0001,0x40ff6662,
    0x403743fb,0xd0fee0fd,0x6c45fd0d,0xb117f43f,0x222fe87f,0x21fdc3fd,
    0x400fe86e,0xd02fa9fb,0x7f73333f,0x7dc007e4,0x9999fe83,0x41fcc3fb,
    0x4ccff45f,0x1fcc3fb9,0x007e42fc,0x1f9003f2,0x6401fdc0,0x1fdc000f,
    0xd100fc80,0x805fd9df,0x77f446fa,0xff982fec,0xf986ffce,0x986ffcef,
    0x86ffceff,0x2fecefe8,0x7dc027cc,0x7ec41fb9,0x7ffb50df,0xf007fff2,
    0x86ffec4d,0xfd53ffda,0x2bfddddd,0xb50dffd8,0x3bfaa7ff,0xb35feeee,
    0x4c9ddffd,0x24eeffed,0x4eeffed9,0x05fffff7,0x007ffff4,0x05fffff7,
    0xfd880f70,0xfff982df,0xffd881ff,0x3fee202d,0x3fee204f,0x3fee204f,
    0x3ff6204f,0x800fa82d,0xff309148,0x3ffee1df,0x801bdd75,0x3bffe66a,
    0x2ebfff70,0xffffffff,0x21dfff35,0xff75fffb,0x2bffffff,0x6ffffffa,
    0x3fffffea,0x3ffffea6,0x9999936f,0x66665c03,0x33332600,0x2001001c,
    0x33322008,0x0004400b,0x80030006,0x00022001,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x01000000,0x88020cc4,0x4020002b,
    0x6c4010ba,0x80110950,0x8099ccb9,0x100a2009,0x44012a1b,0x1b100002,
    0x4060012a,0x100111c9,0x02a60133,0x3663b000,0x401ca800,0xa80950d8,
    0x40a2010b,0x7ffec1ff,0x27201f71,0x73fc802c,0xdfdeb81f,0x323f300f,
    0xf900ee86,0x989fffff,0x809d103f,0x100d91f9,0x1dd8809d,0x03647e60,
    0x217dcb2a,0x02fdfdf9,0x7fffffb5,0x817ffec4,0x54be207a,0x3fff200f,
    0x23f301ef,0x3f7ae06c,0x83ff80fd,0x7f64c7fb,0x2b201f91,0x8efcc01c,
    0x173040fc,0x09f70000,0xfb313df7,0xf881fe8b,0xf1000003,0x09137007,
    0x3fff2000,0x22106fff,0xf7df501c,0x70ec83f5,0x001f901f,0x26bbee00,
    0x80000ffc,0x3e202e60,0x901f904f,0x4403f23f,0x21fc802b,0x179500fc,
    0x10179500,0x886f81ff,0x4417e64f,0x85554401,0x03102aaa,0x440b7660,
    0x41aaaaaa,0xffc8befb,0x0aaaa882,0xf3f31fd0,0x417c2e81,0x555103fc,
    0x21fe2015,0x2aaa25fa,0x260aaaaa,0x0aaaa0aa,0x03f207ff,0x207e47f2,
    0x400aaaa8,0x903f20fc,0x205fffff,0x82fffffc,0x413e63fc,0xa887f609,
    0xd8aaa22a,0xfff8dfff,0x5555512f,0x02201555,0xffffffb8,0xffd1fe27,
    0x9ffff90b,0x7cfcdfa0,0x7dc43e20,0x3ffff622,0x27fffe44,0x4ff04fa8,
    0xfffffffc,0x457ffe2f,0x3fe2ffff,0xf901f903,0xff903f23,0x0fc809ff,
    0xbefb83f2,0x7dc0ffc9,0x40ffc9be,0x00bea5f9,0x3ffee3fc,0x221fffb0,
    0x7f930afd,0x7fffffe4,0x3fb222ff,0xfb5302df,0x927d4157,0xb510fd9f,
    0x7f901fff,0xb541f3f3,0x3fa2fefa,0x5445fcbd,0xfc80fffd,0x2e21f901,
    0x2fcaaadf,0x64cbffa2,0xc817f43f,0xd51fc82f,0x1fffb510,0xfc83f620,
    0xbf50ff10,0x2fd43fc4,0x02fa9be2,0x6fb86f88,0x0fb07be6,0x6fdc45f7,
    0x262fcaaa,0x00ffeeff,0x47f203f2,0x203f95fb,0xfb03fbfe,0xb5c1f3ff,
    0x13e65d4d,0x3effa07b,0xfb02fb83,0xa899fcc1,0x537fe41f,0x301fd85f,
    0x01fc87ff,0x207f7fd0,0xa87e46ff,0x7d4ff04f,0x4ff0ff04,0x5f9805f8,
    0x07fa5fb0,0x30bee1f6,0x07ea267f,0x3204f988,0xf9afa80f,0xf301fb0f,
    0x5c40df19,0x75ae0f9f,0x00bee5d2,0x437c67cc,0x47f885f8,0x055e9cf9,
    0x3ea9f9f9,0xfb807e42,0x030fe40d,0x41be33e6,0xc87e47fb,0x323f901f,
    0xf83f901f,0xa5c17f47,0x9ff105f9,0x2e1f609f,0x74e7cc2f,0xfffb5055,
    0x407e409f,0xf11fedf8,0x7e47f20f,0x83e7e601,0x27fbf77a,0x6404c5f8,
    0xfd03f91f,0x261fec45,0x3205ffff,0x2fa9fe8f,0x01f9024c,0x203ee3f9,
    0x203f91fc,0x5c3f20fc,0x2e1fb02f,0x4c1fb02f,0x67ffcc5f,0x81be5fec,
    0x1f606ffa,0xfff30bee,0x37fee0bf,0x3f204fed,0x227ffb00,0xcff883fd,
    0x3e604fdc,0x4c7e60f9,0x33bfa2dc,0x67fc45fe,0xfe984fdc,0xf986ffce,
    0x3f205fcd,0x02faef98,0x7e407e40,0xff881f91,0xf904fdcc,0x5fa87e41,
    0x17ea7f88,0x09f51fe2,0x89ffffb3,0x0bf600fe,0x0fdc0fc8,0x217f37e6,
    0x027cc6f8,0x3ff201f9,0xf706ffcd,0x01ffffff,0x7f03e7e6,0x3bfff900,
    0xffffffb8,0xfffe880f,0x4f27f304,0xfc87e42c,0x901cc2fe,0x323f901f,
    0x7fffdc0f,0x0fc80fff,0x22fe83f2,0x17f43fd8,0x1fe87fb1,0x7dc03e20,
    0xb803f204,0x7cc3743f,0xfe8b2793,0x04fffdcc,0xbdf501f9,0x7f405bff,
    0x03fb9999,0xec81f3f3,0x3f901711,0x26667fa0,0xfff983fb,0x1fcc4a9b,
    0x443f22fc,0x0fec2ffe,0x1fc80fd8,0x99fe81f9,0xfb83fb99,0xff983f21,
    0xf986ffce,0x546ffcef,0x82f4c05f,0x1f900ff8,0x7677f440,0xf83f982f,
    0x37fffa65,0x3fb666ff,0x83f64eef,0x37ff6200,0x4c7ffb50,0x41efcfed,
    0xb80efefe,0x6ffec40f,0xe87ffb50,0x0fffffff,0xdddddfd5,0x9f7fd4bf,
    0xd0082ffa,0x1fffb8bf,0x3ff621f9,0x87ffb50d,0x81f93ff9,0x204fffb8,
    0xd84fffb8,0x17be601f,0x7f5c3fb8,0xfb101def,0xdfd505bf,0x10bfdddd,
    0x7ffd4013,0x00046fff,0x2e1dfff3,0x32e25fff,0xa980cc9c,0x3e60a200,
    0xfff70eff,0xba9aba8b,0x3fffee0a,0x3ee5ffff,0x00bf64ff,0x76d40bc8,
    0x7fcc930e,0xbfff70ef,0x01263b30,0x2e018003,0x39003003,0x2fffffd8,
    0xff700440,0x0bffffff,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x000cccc4,0x00004980,0x88000000,0x40093002,
    0x0153001c,0x01440010,0x03900730,0x144024c0,0x00000080,0x30000051,
    0x26666015,0x00a88009,0x98fffff9,0x5f5003fe,0x0d91f980,0x106c8fcc,
    0x03bbffd9,0x2003bfea,0x3fa800ed,0x0ffffa20,0x03bbefd8,0xb801bff5,
    0x02fa802f,0x7d402fa8,0xdfb300df,0x6c8fcc07,0xd9007dc0,0xffeb8274,
    0xfffff85f,0xfffd503f,0xa99af985,0x00f45747,0x362007e6,0x86c40950,
    0xeffe884a,0x2f984fff,0x01b200f9,0xdfc80f4c,0xfd301feb,0x25f505ff,
    0x007aa07c,0x3e601f98,0x7c97d401,0x05fdbfd0,0x20254362,0xc92a00fc,
    0xdacff882,0x6667fc3f,0xacffa80c,0x9223dc0b,0x0000ee69,0x32000000,
    0x40fee0cf,0x00000040,0x09f337c0,0x40bf2f76,0x00000040,0x01020000,
    0x002fc7f3,0x0001f900,0xdf1ba0a0,0x401df300,0x3a00effb,0xd9101eab,
    0x32205bff,0x2202dffe,0xfe82efeb,0x76440c80,0xd9102dff,0x5c405bff,
    0x1fcc2efe,0xe9a981ba,0x2efeb887,0x05dfd710,0x40f7fb22,0x103dfec8,
    0xf307bfd9,0x220bf717,0xa983dfec,0x50aabfda,0x1bb665dd,0x5df1be60,
    0x007ee039,0x207fb37f,0x0fdaadc9,0x3ffbbfe6,0xfeeff980,0xeeffa80f,
    0x0037c4ff,0x1ffddff3,0xffddff30,0xfddff501,0x320fdc9f,0x7fff5c0f,
    0x3bfea1ff,0x7fd44ffe,0x7444ffee,0x444ffeff,0x44ffeffe,0x4ffeffe8,
    0x1fffdfcc,0x7ff7ff44,0x3ffffe24,0x7ff75fff,0xed81ffaa,0x7fffc1ff,
    0x7e7741ef,0xf50ed82e,0xdfda883d,0x27cc400b,0x2227cc40,0x87fa21ff,
    0x401881fd,0x98804f98,0x10ffc44f,0x907f23fd,0x4d77d41f,0x3ff12ffd,
    0xff88ff44,0xfd87fa21,0xfd8bf663,0xfd8bf663,0xf98bf663,0x6c2ffdab,
    0xa8bf663f,0x0aabfdaa,0x40fb0fe6,0x6e41fffd,0x3e24fb9b,0x445fefff,
    0x23f913fd,0x01cbbdfb,0x09ffffb5,0x13ffff6a,0xdddddff3,0x677fcc9f,
    0xfda86fcc,0xfb504fff,0xff989fff,0x74feeeee,0x3a0fc83f,0xf99ff40f,
    0x4feeeeef,0xdddddff3,0x7c437c9f,0x97e21be5,0x265f886f,0xdf1fe63f,
    0x3f20bf10,0x7d87f300,0xd807fa80,0x1fb2ffc7,0x5363df70,0x85d7b908,
    0x4feddffb,0xfeddffb8,0x7ffffcc4,0x7ed45fff,0x7dc1deff,0xb84feddf,
    0x44feddff,0xfffffff9,0x6f89f35f,0x4bf21be2,0xfffffff9,0xfffff35f,
    0x13e2bfff,0x427c57e2,0x109f15f8,0x361fccbf,0xf109f11f,0x4c03f20b,
    0xc803ec3f,0xd0fdc01f,0x8817d41f,0x0f82fefd,0x2637c4b5,0x2637c44f,
    0x000ee84f,0x6f880fc4,0x1be227cc,0x01dd09f3,0x21fccdf0,0xd0ff40fd,
    0x01dd001d,0x3fc83fd0,0x47f907fa,0x31fe41fe,0x87ee777f,0x81fe41fe,
    0x49f300fb,0x3fb007e8,0xf91f6022,0x8510fdc5,0x325d01fb,0x7ee67f44,
    0x667f44ff,0x7d44fffd,0x84feccde,0x3fa06da8,0x44fffdcc,0xfffdccfe,
    0x666f7d44,0x33bee4fe,0x67fcc0ff,0x77d44feb,0x2a4feccd,0x4feccdef,
    0x3fb37fea,0x337fea0e,0x3fea0efe,0xd50efecd,0x8df9fddf,0xefecdffa,
    0x7c407100,0x24fffccf,0x6fecccfd,0x3fb337f6,0x7ee7fc44,0x81ea3546,
    0x74c0efe9,0x46ffdfff,0xffdfffe9,0xfffffb86,0x04fe981d,0x3f7fffa6,
    0x7fff4c6f,0xffb86ffd,0x7e41dfff,0xffb502ff,0x3ffee07d,0x7fdc1dff,
    0x74c1dfff,0xe980dfff,0xe980dfff,0x3ee0dfff,0x82effaef,0x20dfffe9,
    0xeeeeeed8,0x77ffd43e,0x3ff666fe,0x3b660dff,0xea80cfff,0x77d41dff,
    0x00804fee,0x988004c4,0x00266000,0x00988004,0x4c001310,0x10018009,
    0x00266001,0x06200266,0x18800c40,0x0c400400,0xffffff88,0x001305ff,
    0x00620026,0xaaa88044,0x0000002a,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x10000000,
    0x03333333,0x30000051,0x00330015,0x00000072,0x4cc0024c,0x01980000,
    0x40002a20,0x00144048,0x01b002a6,0xd500a980,0x01bb665d,0x2a3b9100,
    0x151dc880,0x41970730,0x7ffffffd,0x413fff66,0xeebdfeb8,0x027ffec3,
    0xf7007ff9,0xebeec805,0x2fa802df,0x417fec00,0xdedcffc8,0x200fff11,
    0x98000ffc,0x3bfaa04f,0x7effe400,0x003f701e,0x83dfbff9,0xffd53ffb,
    0x01f53f88,0x03bfef6e,0x03bfef6e,0x2ff883f2,0x3f3333f2,0x3f6f3f67,
    0x7f7ffcc2,0x37f24fff,0x8dd82fdb,0x1f9804e9,0x3bffff60,0x07e606fe,
    0x50bf6600,0xdffffdff,0x2003f5c3,0x02f8000f,0x807e4be6,0x80fcc2dc,
    0x0b7200fa,0x43f983f3,0x1b31d87d,0x22003100,0x21d40401,0xf9afc439,
    0x8bf637c4,0x23f42ff9,0x0008087f,0xb87bf200,0x5000002f,0x321fd85f,
    0x800fb07f,0x8000300f,0xb37a8040,0x000f35bf,0x4fbfebea,0x361fcc79,
    0x76440007,0xfec883df,0x000202df,0x49f32fb8,0x213e26f8,0x322fc2fb,
    0x265dd51f,0x977546ed,0x3f906ed9,0x97754dd0,0xd7106ed9,0x7c45f9bf,
    0x7fb07f84,0x07c05bfd,0x3b60bf62,0xdddb00ee,0xc8f53201,0x7776c3b4,
    0x22769900,0x1fcc3b1d,0x3bbb61f6,0xfdffd100,0xeeff989f,0x00fc80ff,
    0xdfe8fd00,0x13e63fec,0x44fb0bf2,0x27ff72ff,0x7fdc7fea,0x320ffd53,
    0x3ee7e82f,0x30ffd53f,0x5ffffdff,0x83f41fcc,0x6ffefffd,0xfa96fe4c,
    0x1fffd02f,0x403fffa0,0x3b84498f,0x7c03fffa,0x2e1d77b0,0x7e88fe63,
    0xb00fffe8,0x017ecc7f,0x3fb09f31,0x3e201e4c,0x7ffffd45,0x5c45ffc0,
    0x5f7d42ff,0x0fe63ffe,0xd87f30fb,0x265df907,0x21fcc5fc,0x2a1fd87d,
    0x507742ff,0x47bf60ff,0x33262fc8,0xdecdfdbc,0xc801f902,0x0933d00f,
    0x403f20ee,0x5c9dbb1e,0x3f33fe63,0x01f904ff,0x517e21be,0xd09ffffb,
    0x200fe45f,0x33fe22fb,0x7fcc5fda,0xb82fffff,0x262fefff,0x7cc3ec3f,
    0xffc83ec3,0x4c0effff,0x3e23ec3f,0x7dc2fd84,0xb07ffecf,0x2e0bf05f,
    0xfa8ea9ef,0x6400fc80,0x2ba9900f,0xf903d3a8,0xd96d3201,0x7ffcc3d3,
    0xf906feff,0xf109f101,0x76effdcb,0x3e2ff84f,0x7d47e805,0xdda83f43,
    0x22a02fbb,0xb0fe60fe,0x7d87f30f,0x39d93f90,0x8fb0fe60,0x82fb82fa,
    0x07eeffda,0x50fb03fb,0x641ee09f,0x807e400f,0x8cec98f9,0x201f906a,
    0xd88deaf9,0x0ce7cc6c,0xfd00fc80,0xdf13fc83,0x3ff84f98,0x5f9801f3,
    0x01fa17d4,0xf91017d4,0x3a24f98b,0x3a24f987,0x2001f907,0x21fa24f9,
    0x202fe86f,0x3f60fd08,0x00827c44,0x03f201d9,0x7d401f90,0x201d710b,
    0x2fea00fc,0xf981d710,0x807e4003,0xefecdffa,0x3f733fa0,0x53fe24ff,
    0x42fb802a,0x5fecdff8,0xcd85f500,0xff886ffd,0x444fffcc,0x4fffccff,
    0xf1000fc8,0x89fff99f,0xfffdcffb,0x17ee202e,0x373bfff2,0xbd3000ff,
    0xeffeeb81,0xffdd70de,0xfb501bdd,0xeeb819fd,0xa80deeff,0x980cfefd,
    0xfeeb803f,0x74c0deef,0x74c0dfff,0x46ffdfff,0x35c003ff,0x04fffe98,
    0x25ffffa8,0x2a02dffe,0x86feefff,0x6feefffa,0x007ffff4,0x7f77ffd4,
    0xefffda86,0x7ffd44ff,0xdffe80ff,0x2001cfff,0xf90ffffd,0x23ffffff,
    0xfffffffc,0xff900401,0x803fffff,0xc800c800,0x1fffffff,0x13100310,
    0x00003980,0x64c00310,0x00442ccc,0x04c00130,0x033332e0,0x22000980,
    0x6664c009,0x0031000b,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x10000000,0x0ba80015,0x00000288,0x82980098,0xdd50ded9,
    0x2026201b,0x5cc02cca,0xb98099cc,0x1a809acc,0x55555400,0x5001980a,
    0x02620179,0x19bcb880,0x5542aaa2,0x8804402a,0x06660009,0x5440e540,
    0x70aaa22a,0x74007d9d,0x803fe42f,0x9999999a,0x07ff6e22,0x24ffffa8,
    0xff70effa,0x89bfa01d,0x81ffffff,0x4ffffffc,0x7fffffdc,0x2a006e85,
    0x45ffffff,0x7fe407f8,0x7fcc2fff,0xffff7006,0x3fff61ff,0x82ffff8d,
    0x325fffda,0xff8803ff,0x3fe200ff,0x7ffdc5ff,0x101fff91,0x300800b9,
    0x4300600f,0x301ffffb,0x45fd77df,0x807f43fb,0x37e26ffa,0x7dc4fa89,
    0x25fd989e,0xfc98adfb,0x4c006e85,0x440adfba,0x2fbee04c,0x2e20ffc9,
    0x9df8806f,0xfb10ffa8,0x20ff2615,0x25eccff8,0x97003fd9,0x57dc01fd,
    0x37dc46c8,0xff303ff3,0x40200885,0x00c31079,0x03f91506,0x45f887f2,
    0x209f50fe,0x0f46fff8,0xf10df1f6,0x23e83749,0xdeeeffea,0x004f8800,
    0xbf50ff10,0x5f700df0,0x5c3ec7b8,0x402fa82f,0x7e4003f9,0x6c01f600,
    0xb805fb3f,0x3dc17ee7,0x26fa8798,0x1fc80c01,0x46f88310,0x201fd3fb,
    0x4c06ebfc,0x4c13e66f,0x2e007f10,0x0effffff,0xed84f880,0x04fa80ee,
    0x3b2df0ff,0x2bbe60de,0xf70fb020,0x777f6cc5,0xfedf985e,0x807e404f,
    0x4400afc8,0x7704fcff,0x09fd1bb7,0xfb503fa6,0x41bfb119,0x1fc80c01,
    0x3a0ff600,0xdf104fbf,0x7fecc1ba,0x2a00bea2,0x0374002f,0xfe84f880,
    0x01fc80ff,0xfd6f83f9,0xfffb81df,0x5c3ec0ce,0x3fffa62f,0xfff986ff,
    0x3f204ffe,0xfffffa80,0x077fd404,0xefcacb98,0x67fe45d9,0x7e666540,
    0x30065daf,0x6c007f20,0x1fff505f,0x83747f60,0x17d40dfc,0xffb17d40,
    0x806e83ff,0x9027c43d,0x205f701f,0x7ef7c0fd,0x3f6e200e,0x7dc3ec6f,
    0x4c01fb82,0xc81be0ef,0xefcc880f,0x3fb2e01c,0x3fa601cd,0x6fccdf93,
    0x467ec400,0x030067fb,0xfd1007f2,0x504fe80b,0x01dd33df,0x017e20b3,
    0xfeeb93e6,0x7c03741f,0xf9027c45,0xf10bf501,0x40dfff0f,0x322fc819,
    0x5c0fdc0f,0x21fcc01f,0x803f207d,0xc98805f8,0x877c01af,0x0bee6cf9,
    0xf11ee857,0x40600cf9,0x3fa601fc,0x900ff804,0x0dffffff,0x9705fd00,
    0x42fc07fc,0x22fc186e,0x03f203fa,0x7fb117f4,0x207ffff0,0x717dc0fe,
    0xf706e87f,0x6c3f9803,0xa803f207,0x32a0d44f,0x0201cdfe,0x3e21d79d,
    0x045fa89d,0x00c3ef7a,0xa80fe406,0x3fb803ff,0x3f3332a0,0x300b981f,
    0xbfd99fff,0x76677fdc,0xdcdfc85f,0x33bfe2ff,0x3f200efc,0xf9dff300,
    0x3a3be0df,0xcdffe84f,0x77f446fe,0x3f702fec,0x3ec3f980,0x3f201f90,
    0x44feeeef,0x004effd9,0xc87fbba6,0x204fffff,0x032feee8,0x3ffb6618,
    0x77ffc4ee,0xfff75eee,0xfb5005ff,0x407fd07f,0x84ffffd9,0x1dffffea,
    0x3ffffd88,0x06fffed4,0x777ff75c,0x7ffdc40d,0xf16fd884,0x7f6e49df,
    0xfd881cff,0xfeda82df,0x7f4c3eee,0x54bff72e,0x0deeffed,0x3ffffff6,
    0x7fffd41e,0x7fd4000e,0x005e5c42,0x3352ff98,0x54533333,0x46ffffff,
    0x7fffffff,0x03999993,0x20bfff70,0x40022000,0x00260019,0xfffc8026,
    0x0601ffff,0xfd16ff98,0x400620df,0x3ffee008,0x7fd45fff,0x21dffb3f,
    0xfffffffc,0x00000001,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x98000000,0x8aaaa0aa,0x00aaaaa8,
    0x40000000,0x2aaaa64a,0x55555102,0x55000001,0x83555555,0x30288cd9,
    0x55555555,0x419bb301,0x102aaaa9,0x20355555,0x2aaaaaa8,0xaa88aaa2,
    0xa88aaa22,0x3155542a,0x55541555,0x106aaa22,0x22015555,0xaaaaaaaa,
    0xfff076e2,0x4bfffe2b,0xdffffffc,0x4001aa00,0x7f6444ea,0x3ffa7fcd,
    0x320dffff,0x1dffffff,0x500067c4,0xffffffff,0x4ffcbe89,0xfffffff0,
    0xfffa85ff,0x3ffffa1f,0xffffc80f,0x7fd42eff,0x3ee7ffff,0x1fffb0ff,
    0x7e47ffee,0xffff10ff,0x4d7fffa5,0xff91ffff,0xffffc8df,0xfffff304,
    0x1ff4dfff,0x64cbffa2,0x2aff623f,0x3f205fdb,0x3ff66000,0x3f7ffe63,
    0x33f221ff,0x2e24fdaa,0x45fcaadf,0x000cffe8,0xf75bf9f5,0xd100cc09,
    0x5f95557f,0x44198fd8,0x7102cdfc,0x8dd755bf,0x5fdaacfa,0x3df337dc,
    0x3fea6fb8,0x510efdc1,0x0ffcc1fd,0xa881bf71,0xf980fffd,0x6fabfdad,
    0x3ff202a6,0x1f90bea6,0x1f901fd8,0x1bff9100,0xfff32fe8,0x3ec1fb87,
    0x03f70fe6,0x5007ffd5,0x53e29f5f,0x2efdced8,0xfa943f20,0xf7007f41,
    0x983dffff,0xf50fdc3f,0x3603fe65,0x3203fd2f,0x981ff8cf,0x1be3d94f,
    0x03f907f6,0x4c1fdff4,0x1ba1f93f,0xaa7e7e40,0x2607e42f,0x801f904f,
    0xf981effb,0x8df5ff35,0x263f41fb,0x803fa23f,0x3202effb,0x1bbecf9e,
    0xffdfffd1,0x3ee7f207,0x40bf7052,0x6fca9afb,0x75cce7cc,0x3a23220f,
    0xf9ff101f,0x2fffd809,0xbff19f10,0x893e617e,0x233e606f,0xf92f886f,
    0x7e401761,0x42fa9fe8,0xd15f80fc,0x9fffffff,0x30177fd4,0x3e3ff37f,
    0x75d67dc6,0x7777cc5f,0xfc8803ff,0xf9cf81df,0x0ef985ff,0x7ffe41ba,
    0x7fff302f,0x20fdc5f9,0x3ffe60fd,0x3f604fff,0x037fd403,0x3e02ffc4,
    0x4f9fffad,0x0fee1fd0,0x03f91fc8,0x40007e41,0xfaef98fc,0xafc07e42,
    0xeeffeed8,0x0fffaa3e,0x2e5ffdd0,0x7fffdc4f,0xffff984f,0xff91005f,
    0xfddf981b,0x43f984fe,0xfb9f907d,0x3faffa05,0xd07ee1fe,0xeccdf98f,
    0x25fc83ff,0x200bf600,0x3a00fffb,0x3fcfcfde,0x03fa7f70,0x7ee67fc4,
    0xc807e404,0xf90fc82f,0x40fc85fd,0x01f903f9,0x702effb8,0x1dfd9dff,
    0x00aacfb8,0x0bfe67f3,0x01effc88,0x379fddf7,0x361fcc31,0x1d11f907,
    0x27fcdbe0,0x3ffbbbee,0x3e21fcc3,0x3f537d46,0xf5003f20,0x3601df5d,
    0x2fff8eff,0x813e7be0,0xfffffffb,0x7403f200,0xd10fc83f,0x20fc85ff,
    0x1f901fe8,0x3bff9100,0x7fff7fc4,0x801fb80d,0x07fe23f9,0xd00bbfee,
    0x26d93e69,0xc83ec3f9,0xcdfc800f,0x3bee1eff,0x3f981bce,0x83fe27e8,
    0x01f902fb,0x5fb87fc4,0x3fa7ff90,0x3fbf201f,0x2667fa01,0x3f203fb9,
    0x3fea0600,0x545ff53e,0x4ffeeefe,0x88003f20,0x25f73ffd,0x3bfae018,
    0xbdfd504e,0x744ffea1,0x7ec403ff,0xfeeefebe,0x2a5dfd37,0x77fe44ff,
    0x3ff6204e,0xdfd73fff,0x3bfaa09d,0x325ffeee,0x2feeeeff,0x0ef7ff5c,
    0x7dc7bfea,0x87fdc0df,0x3e600ffb,0xbffb105f,0x70fff6a1,0x003bdffd,
    0xfd93ffee,0x3bfffee2,0x0035402d,0x80024d98,0x80effffd,0x320efffb,
    0x0019d15f,0xfffbfff1,0x3feaffff,0xe8dff93f,0x3006ffff,0xdffffb01,
    0xfffff701,0x7fec19df,0x6c2fffff,0x5c2fffff,0xfff92fff,0x3e26fa83,
    0x302fd807,0x3ee1dfff,0x7ffec5ff,0x000002ff,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x154c0000,
    0x2aa05544,0x2aa00aaa,0x4435551a,0x55532aaa,0x55555544,0x555510aa,
    0xaaa88355,0x000000aa,0x00000000,0xd5000000,0x265dd501,0x200006ed,
    0x00000100,0x3bb20000,0xa877b623,0x7ffc4d40,0xf32ffec2,0x2209ffff,
    0xfff8efff,0x23ffff26,0xff90fffe,0x25ffffff,0x7ffffffb,0x7fffffe4,
    0x7ff6440d,0x3fb2202d,0xeb881ddf,0xfeb882ef,0xfec883df,0x3dfd903d,
    0x2cc01df7,0xfd53ffb8,0xffced88f,0x7e40dfdb,0x81fdbdcb,0xb9db107b,
    0x3b6605df,0x6c2efc8d,0xfe898cff,0x2e1df12f,0x44dff55f,0x7dcc0fff,
    0x33ea00ad,0x5c41fd30,0x43dfb1df,0xcaaadfb8,0x2ff6a62f,0x55fec40a,
    0x7fcc5fdb,0xe880ffee,0x44fffeff,0x4ffeeffa,0x3fff77f4,0x3ffbffa2,
    0x7ff7fcc4,0x20006fef,0x223ec3f9,0xefffeffe,0x7fffcc4f,0x01f905ff,
    0xffdfffd1,0xfffff507,0x36df0ffd,0x7d43f9af,0xff30efbe,0x41bff23f,
    0x3f9804f9,0x45fcc3ec,0x27f305fd,0xfc81fa89,0xfb03f200,0x427cc405,
    0x8fee0cfc,0x3fa21ff8,0x2e419f31,0x2fd98ff6,0xf75fc884,0x0fe60007,
    0x2ebf30fb,0x5fd0fd3f,0x6fd47f91,0x7cc6dcfd,0xfe81ba0e,0x3fb0312f,
    0x505f7bff,0x6fcc1dff,0x06eef8df,0x7f3009f3,0xecf987d8,0x273e604f,
    0x03f2055e,0xf30cfec4,0xffffda89,0x0c80fe84,0x3bbbbfe6,0x3bffa4fe,
    0xf886f83d,0x3ffff625,0xfb15feee,0x49dfffff,0x4c3ec3f9,0x1fa3f74f,
    0x32fc4bf1,0x89fffffd,0xd03ec3f9,0xfdf7001f,0xf701fdff,0x6dfcc1df,
    0x306ebfcf,0xfff3009f,0xff30ffff,0x7fcc05ff,0x07e405ff,0x27ffffc4,
    0x6effdcbf,0x006f84fe,0xfffffff3,0xffecb8bf,0x3e213e25,0xffbdff15,
    0x362bffff,0x4eeeeeee,0x87e893e6,0x3a3f74f9,0x13ea6f87,0x2603ffee,
    0xfd03ec3f,0x2fffe200,0xbefb86ff,0xf57f30ef,0x7cc1baff,0x37e61c44,
    0xf987eccc,0xf303febf,0xfc80bf9b,0x399fd700,0x4c6f8afc,0x881fd84f,
    0x2a007741,0x3fa1fd85,0x4f99fe41,0x40000ff2,0xfffccff8,0x1fba7cc4,
    0xf9dfd0fd,0xfdff887f,0x3ec3f983,0x7fc00fd0,0xef889ff4,0x4fe6bf50,
    0x260dd4fe,0xf307e44f,0x3f987d87,0x7f301ff1,0x7e4164f2,0xf303f200,
    0x7ee67f49,0x77fcc4ff,0x7d46fccc,0xb4feccde,0x8dfb99df,0xefecdffa,
    0x3ff73fe0,0x0004fdcf,0x3fbbffea,0x2e7bf626,0x324fe8df,0x0fffffff,
    0x26374bea,0x9ff52efe,0xdeeffec8,0x7e47f601,0x98cc0b82,0x1ba1953f,
    0x83f227cc,0x4c3ec3f9,0x2613ea3f,0xfc85f83f,0xe883f200,0x3fffa61f,
    0xfda86ffd,0xfb81deff,0xd71dffff,0x303bffff,0x981bfffd,0xffeeefff,
    0x200b302e,0x3ffa2009,0x5fe9efba,0x0d98c52a,0xffa81104,0xe8dff93f,
    0x02ffffff,0xfd880000,0x7ffb30de,0x7777f6c4,0xdfd30ffe,0xea97ff27,
    0x477fa4ef,0xeeeeefea,0xdffdb35f,0xeefea89d,0x13104ffe,0x30009800,
    0x00198013,0x98110031,0x0006cc00,0x00000000,0x00000000,0x3a200000,
    0xfff70eff,0x7ffffccb,0xff50ffff,0x1dffd19f,0x543bffee,0xffff73ff,
    0x3eabffff,0x5c6fffff,0x02deffff,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0xc8c18800,0xbdd92eee,
    0x64bbb623,0x80a143ee,0x6eeeeee9,0x02980a98,0x4c0a2014,0xfd11ec82,
    0xbfffffff,0x5c405544,0xcc965c2d,0x99999710,0x70550799,0x2020cd98,
    0x71122049,0x77777777,0x710ca857,0x77777777,0x774c0057,0x0006eeee,
    0xd13e8800,0x6cbfff69,0xffd12fff,0xbb13ffa7,0x7fcc06ec,0x76c7ffff,
    0x3f7b61fc,0xfd01fc80,0x2fded88d,0x776c47f2,0x26feeeee,0x7740fddd,
    0x74bee2fd,0x3ffffee7,0x3ea0ffff,0xffa87c45,0x2a2fa8ef,0xed8bf22f,
    0xffffff90,0x743fffff,0xfffff93f,0x23ffffff,0x74cd91f9,0x006eeeee,
    0x9a7cc000,0xf127cc4f,0x3efbf60d,0xb0ee882f,0xf52f981d,0x38fa203f,
    0x1fff70f6,0x44b71a60,0xe8003ee6,0x98fb2e66,0x8fd4d70f,0x4cccc47d,
    0x0fe40999,0x23b6bb51,0xf30efffb,0x3643fe83,0x33333333,0x20ca8333,
    0xaaaaaaa9,0x543621aa,0x00000004,0x0bf54fa8,0x01fdc3fa,0x4403dff7,
    0x083fd1ee,0x3ea03ff5,0x2a0ec80f,0xd306fbef,0x543e24b8,0xe9b74007,
    0x47e23eab,0x2e43e65c,0x26666666,0x3a62f409,0x66cc113f,0x00003000,
    0x00000000,0x20000000,0x2fe89fe8,0x0df19f50,0x402fffc8,0x509f94fd,
    0x4bb001ff,0x3fe20de8,0x0d30bf70,0x34c9d9bd,0x5f55ba00,0x3bf60efd,
    0x24a9e22f,0xfffffffb,0x201f10ff,0x00000000,0x00000000,0x00000000,
    0x3627f620,0x7f9fd01f,0x3eb7f620,0x325f903f,0x30ffa82f,0x9f5de449,
    0xf51cbff9,0x7edc7d83,0x0c05cc1b,0xab993200,0x005d40aa,0x2eeeee20,
    0x00e62bbb,0x00000000,0x00000000,0x00000000,0x07ee3f70,0x74c1ffea,
    0x8bffb2ff,0x503d90ec,0x1fddddff,0x7730ddd4,0xb8004377,0x00001bbb,
    0x00000000,0x00000000,0x00000000,0x00000000,0x54000000,0x1ff40a62,
    0xfd3fffa8,0x02a1c1df,0x7fffffdc,0x0000001f,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
};

static signed short stb__courier_bold_20_latin1_x[224]={ 0,3,2,1,1,1,1,4,4,2,1,0,3,1,
3,1,1,1,0,1,1,1,1,1,1,1,3,3,-1,0,0,1,1,-1,0,0,0,0,0,0,0,1,0,0,
0,-1,-1,0,1,0,0,1,0,0,-1,-1,0,0,1,4,1,2,1,-1,3,0,-1,0,0,0,1,0,0,1,
1,0,1,-1,0,0,-1,0,0,1,1,0,0,-1,0,0,1,2,4,2,1,2,2,2,2,2,2,2,2,2,
2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,3,1,0,1,0,
4,0,2,-1,2,0,-1,1,-1,-1,2,0,2,2,3,0,1,3,3,2,2,0,0,-1,0,1,-1,-1,-1,-1,
-1,-1,-1,0,0,0,0,0,1,1,1,1,-1,-1,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,
0,0,0,0,-1,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,0,
 };
static signed short stb__courier_bold_20_latin1_y[224]={ 14,2,3,1,1,2,4,3,2,2,2,3,11,8,
11,1,2,2,2,2,2,2,2,2,2,2,6,6,3,6,3,3,2,3,3,3,3,3,3,3,3,3,3,3,
3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,1,2,2,17,2,5,2,5,2,5,2,5,2,2,
2,2,2,5,5,5,5,5,5,5,3,6,6,6,6,6,6,2,2,2,7,2,2,2,2,2,2,2,2,2,
2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,14,6,1,3,4,3,
2,2,2,3,2,6,8,8,3,0,1,1,2,2,2,6,2,7,13,2,2,6,2,2,2,6,-1,-1,-1,0,
0,-1,3,3,-1,-1,-1,0,-1,-1,-1,0,3,0,-1,-1,-1,0,0,5,2,-1,-1,-1,0,-1,3,2,2,2,
2,3,2,1,5,5,2,2,2,2,2,2,2,2,2,3,2,2,2,3,2,4,5,2,2,2,2,2,2,2,
 };
static unsigned short stb__courier_bold_20_latin1_w[224]={ 0,4,7,9,9,9,9,3,5,5,9,10,5,8,
4,9,9,9,9,9,8,9,9,8,9,9,4,5,11,11,11,9,8,12,11,10,10,10,11,11,11,9,11,11,
11,13,12,11,10,11,11,9,10,11,12,12,11,11,9,5,9,5,9,13,4,11,12,11,11,10,10,11,11,9,
8,11,9,13,11,10,12,11,11,9,10,11,11,12,11,11,9,6,3,6,9,10,10,10,10,10,10,10,10,10,
10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,0,4,8,10,9,11,
3,10,7,12,7,10,11,8,12,13,7,10,6,6,4,11,9,4,4,6,7,11,11,13,11,8,12,12,12,12,
12,12,12,10,10,10,10,10,9,9,9,9,11,12,11,11,11,11,11,8,11,11,11,11,11,11,10,10,11,11,
11,11,11,11,12,11,10,10,10,10,9,9,9,9,10,11,10,10,10,10,10,10,11,11,11,11,11,11,12,11,
 };
static unsigned short stb__courier_bold_20_latin1_h[224]={ 0,13,6,15,16,13,11,6,15,15,9,11,6,2,
4,16,13,12,12,13,12,13,13,13,13,13,9,10,11,6,11,12,14,11,11,12,11,11,11,12,11,11,12,11,
11,11,11,12,11,14,11,12,11,12,11,11,11,11,11,15,15,15,7,3,4,10,13,10,13,10,12,13,12,12,
16,12,12,9,9,10,13,13,9,10,12,9,8,8,8,12,8,15,15,15,4,12,12,12,12,12,12,12,12,12,
12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,0,12,14,11,9,11,
15,14,3,12,6,8,6,2,12,3,6,13,7,7,4,12,14,3,5,7,6,8,12,12,12,12,15,15,15,14,
14,15,11,15,15,15,15,14,15,15,15,14,11,14,16,16,16,15,15,8,14,16,16,16,15,15,11,13,13,13,
13,12,13,14,10,13,13,13,13,13,12,12,12,12,13,11,13,13,13,12,13,10,11,13,13,13,13,16,16,16,
 };
static unsigned short stb__courier_bold_20_latin1_s[224]={ 139,248,129,139,38,12,132,97,83,66,200,
25,149,226,175,129,104,45,55,225,77,235,245,1,10,32,249,248,36,137,83,
86,181,225,153,96,14,51,120,107,27,62,130,39,15,1,1,152,60,212,71,
176,238,186,212,199,187,175,165,162,168,8,72,204,180,84,115,96,91,108,198,
103,209,142,60,164,221,176,210,129,66,20,222,119,119,164,12,234,24,65,48,
31,38,1,160,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,
34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,139,243,190,
231,190,242,14,1,218,162,113,1,101,226,185,185,121,202,65,58,170,198,171,
199,155,82,89,36,22,128,1,13,149,178,202,158,199,18,95,72,191,113,215,
224,226,236,246,136,72,235,93,81,105,42,54,247,146,48,117,69,101,89,142,
180,81,22,69,231,34,124,140,57,93,136,125,46,175,142,152,210,114,108,147,
158,169,220,191,153,48,54,79,42,213,26,13,1, };
static unsigned short stb__courier_bold_20_latin1_t[224]={ 17,18,100,1,1,34,76,100,18,18,88,
76,100,100,100,1,34,63,63,34,63,34,34,49,49,49,76,49,76,100,76,
63,18,76,76,63,76,88,76,63,88,88,63,88,88,88,76,63,76,18,76,
63,76,63,76,76,76,76,76,1,1,18,100,100,100,88,49,88,49,88,63,
49,63,63,1,63,63,88,88,88,49,49,88,88,63,88,100,88,100,63,100,
18,18,18,100,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,
63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,17,49,18,
63,88,63,18,34,100,49,100,100,100,100,49,100,100,34,100,100,100,49,18,
100,100,100,100,100,63,49,63,63,1,1,1,18,18,18,76,18,1,18,1,
18,1,1,1,18,88,18,1,1,1,18,18,88,18,1,1,1,18,18,76,
34,34,34,34,49,34,18,88,34,34,34,34,34,49,49,49,49,34,76,34,
34,34,49,34,88,76,49,49,49,34,1,1,1, };
static unsigned short stb__courier_bold_20_latin1_a[224]={ 170,170,170,170,170,170,170,170,
170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,
170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,
170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,
170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,
170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,
170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,
170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,
170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,
170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,
170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,
170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,
170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,
170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,
170,170,170,170,170,170,170,170, };

// Call this function with
//    font: NULL or array length
//    data: NULL or specified size
//    height: STB_FONT_courier_bold_20_latin1_BITMAP_HEIGHT or STB_FONT_courier_bold_20_latin1_BITMAP_HEIGHT_POW2
//    return value: spacing between lines
static void stb_font_courier_bold_20_latin1(stb_fontchar font[STB_FONT_courier_bold_20_latin1_NUM_CHARS],
                unsigned char data[STB_FONT_courier_bold_20_latin1_BITMAP_HEIGHT][STB_FONT_courier_bold_20_latin1_BITMAP_WIDTH],
                int height)
{
    int i,j;
    if (data != 0) {
        unsigned int *bits = stb__courier_bold_20_latin1_pixels;
        unsigned int bitpack = *bits++, numbits = 32;
        for (i=0; i < STB_FONT_courier_bold_20_latin1_BITMAP_WIDTH*height; ++i)
            data[0][i] = 0;  // zero entire bitmap
        for (j=1; j < STB_FONT_courier_bold_20_latin1_BITMAP_HEIGHT-1; ++j) {
            for (i=1; i < STB_FONT_courier_bold_20_latin1_BITMAP_WIDTH-1; ++i) {
                unsigned int value;
                if (numbits==0) bitpack = *bits++, numbits=32;
                value = bitpack & 1;
                bitpack >>= 1, --numbits;
                if (value) {
                    if (numbits < 3) bitpack = *bits++, numbits = 32;
                    data[j][i] = (bitpack & 7) * 0x20 + 0x1f;
                    bitpack >>= 3, numbits -= 3;
                } else {
                    data[j][i] = 0;
                }
            }
        }
    }

    // build font description
    if (font != 0) {
        float recip_width = 1.0f / STB_FONT_courier_bold_20_latin1_BITMAP_WIDTH;
        float recip_height = 1.0f / height;
        for (i=0; i < STB_FONT_courier_bold_20_latin1_NUM_CHARS; ++i) {
            // pad characters so they bilerp from empty space around each character
            font[i].s0 = (stb__courier_bold_20_latin1_s[i]) * recip_width;
            font[i].t0 = (stb__courier_bold_20_latin1_t[i]) * recip_height;
            font[i].s1 = (stb__courier_bold_20_latin1_s[i] + stb__courier_bold_20_latin1_w[i]) * recip_width;
            font[i].t1 = (stb__courier_bold_20_latin1_t[i] + stb__courier_bold_20_latin1_h[i]) * recip_height;
            font[i].x0 = stb__courier_bold_20_latin1_x[i];
            font[i].y0 = stb__courier_bold_20_latin1_y[i];
            font[i].x1 = stb__courier_bold_20_latin1_x[i] + stb__courier_bold_20_latin1_w[i];
            font[i].y1 = stb__courier_bold_20_latin1_y[i] + stb__courier_bold_20_latin1_h[i];
            font[i].advance_int = (stb__courier_bold_20_latin1_a[i]+8)>>4;
            font[i].s0f = (stb__courier_bold_20_latin1_s[i] - 0.5f) * recip_width;
            font[i].t0f = (stb__courier_bold_20_latin1_t[i] - 0.5f) * recip_height;
            font[i].s1f = (stb__courier_bold_20_latin1_s[i] + stb__courier_bold_20_latin1_w[i] + 0.5f) * recip_width;
            font[i].t1f = (stb__courier_bold_20_latin1_t[i] + stb__courier_bold_20_latin1_h[i] + 0.5f) * recip_height;
            font[i].x0f = stb__courier_bold_20_latin1_x[i] - 0.5f;
            font[i].y0f = stb__courier_bold_20_latin1_y[i] - 0.5f;
            font[i].x1f = stb__courier_bold_20_latin1_x[i] + stb__courier_bold_20_latin1_w[i] + 0.5f;
            font[i].y1f = stb__courier_bold_20_latin1_y[i] + stb__courier_bold_20_latin1_h[i] + 0.5f;
            font[i].advance = stb__courier_bold_20_latin1_a[i]/16.0f;
        }
    }
}

#ifndef STB_SOMEFONT_CREATE
#define STB_SOMEFONT_CREATE              stb_font_courier_bold_20_latin1
#define STB_SOMEFONT_BITMAP_WIDTH        STB_FONT_courier_bold_20_latin1_BITMAP_WIDTH
#define STB_SOMEFONT_BITMAP_HEIGHT       STB_FONT_courier_bold_20_latin1_BITMAP_HEIGHT
#define STB_SOMEFONT_BITMAP_HEIGHT_POW2  STB_FONT_courier_bold_20_latin1_BITMAP_HEIGHT_POW2
#define STB_SOMEFONT_FIRST_CHAR          STB_FONT_courier_bold_20_latin1_FIRST_CHAR
#define STB_SOMEFONT_NUM_CHARS           STB_FONT_courier_bold_20_latin1_NUM_CHARS
#define STB_SOMEFONT_LINE_SPACING        STB_FONT_courier_bold_20_latin1_LINE_SPACING
#endif

