// Font generated by stb_font_inl_generator.c (4/1 bpp)
//
// Following instructions show how to use the only included font, whatever it is, in
// a generic way so you can replace it with any other font by changing the include.
// To use multiple fonts, replace STB_SOMEFONT_* below with STB_FONT_consolas_9_latin_ext_*,
// and separately install each font. Note that the CREATE function call has a
// totally different name; it's just 'stb_font_consolas_9_latin_ext'.
//
/* // Example usage:

static stb_fontchar fontdata[STB_SOMEFONT_NUM_CHARS];

static void init(void)
{
    // optionally replace both STB_SOMEFONT_BITMAP_HEIGHT with STB_SOMEFONT_BITMAP_HEIGHT_POW2
    static unsigned char fontpixels[STB_SOMEFONT_BITMAP_HEIGHT][STB_SOMEFONT_BITMAP_WIDTH];
    STB_SOMEFONT_CREATE(fontdata, fontpixels, STB_SOMEFONT_BITMAP_HEIGHT);
    ... create texture ...
    // for best results rendering 1:1 pixels texels, use nearest-neighbor sampling
    // if allowed to scale up, use bilerp
}

// This function positions characters on integer coordinates, and assumes 1:1 texels to pixels
// Appropriate if nearest-neighbor sampling is used
static void draw_string_integer(int x, int y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0, cd->t0); glVertex2i(x + cd->x0, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t0); glVertex2i(x + cd->x1, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t1); glVertex2i(x + cd->x1, y + cd->y1);
        glTexCoord2f(cd->s0, cd->t1); glVertex2i(x + cd->x0, y + cd->y1);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance_int;
    }
    glEnd();
}

// This function positions characters on float coordinates, and doesn't require 1:1 texels to pixels
// Appropriate if bilinear filtering is used
static void draw_string_float(float x, float y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0f, cd->t0f); glVertex2f(x + cd->x0f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t0f); glVertex2f(x + cd->x1f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t1f); glVertex2f(x + cd->x1f, y + cd->y1f);
        glTexCoord2f(cd->s0f, cd->t1f); glVertex2f(x + cd->x0f, y + cd->y1f);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance;
    }
    glEnd();
}
*/

#ifndef STB_FONTCHAR__TYPEDEF
#define STB_FONTCHAR__TYPEDEF
typedef struct
{
    // coordinates if using integer positioning
    float s0,t0,s1,t1;
    signed short x0,y0,x1,y1;
    int   advance_int;
    // coordinates if using floating positioning
    float s0f,t0f,s1f,t1f;
    float x0f,y0f,x1f,y1f;
    float advance;
} stb_fontchar;
#endif

#define STB_FONT_consolas_9_latin_ext_BITMAP_WIDTH         256
#define STB_FONT_consolas_9_latin_ext_BITMAP_HEIGHT         70
#define STB_FONT_consolas_9_latin_ext_BITMAP_HEIGHT_POW2   128

#define STB_FONT_consolas_9_latin_ext_FIRST_CHAR            32
#define STB_FONT_consolas_9_latin_ext_NUM_CHARS            560

#define STB_FONT_consolas_9_latin_ext_LINE_SPACING           6

static unsigned int stb__consolas_9_latin_ext_pixels[]={
    0x22013021,0x09980980,0x881c41cc,0x203018c0,0x0d4c0408,0x10080c04,
    0x10040a98,0x02220c44,0x88108842,0x0318040b,0x0404c451,0x18420226,
    0x22033060,0x08108300,0x20043101,0x56108181,0x2e217ae5,0xfd115e42,
    0x22064459,0x2e1cb80c,0x59090572,0x2ae14439,0x205c0540,0x5c4682ba,
    0x9660aea3,0x4c1b82b8,0x8b2950a9,0x4c1261c9,0x2aa1d81c,0x77515d41,
    0x0b50a998,0x44354355,0x4a42982a,0x994c0644,0x35506a03,0xbaad6738,
    0x1d8bb704,0x751577dc,0x4581ca85,0x55306c48,0x36e48aa3,0x87b706e3,
    0x22131dda,0x98e60aa1,0x435511aa,0x37661dda,0x844a6351,0x4ca63509,
    0x14c6a134,0x22531a92,0x8a6351aa,0x3a22c3db,0x6ecc2c5e,0x84c77661,
    0xd9176e18,0x0986ae6b,0x352edc31,0x5e9ad6a6,0x932daba8,0x1577cc97,
    0x20e88395,0x8570aea8,0x21d1912a,0x2754dd9c,0xb9d4372b,0x73a84b32,
    0x89cc34c3,0x56660e8c,0x212c4259,0x5ce6731b,0x64ce6371,0x11cc6e4a,
    0x26398dc7,0x54e63759,0x8b01c573,0x96212c45,0x1d46e750,0x9e985dd4,
    0x546e751c,0x2b731b83,0x8c837a21,0x86e9349c,0x36662aa9,0xda88b2e0,
    0x26930321,0xa5c664b4,0xc86e910c,0x26272910,0x4c2c2da0,0x56216933,
    0x0570989c,0xb9cce637,0x6cce6371,0xb1398dc5,0x588731b8,0x8864e637,
    0x162c06c4,0x5a057057,0x9750ba25,0x2da2a9cc,0x731b85d1,0x8d8af20b,
    0x0376a48c,0x21eca8aa,0x2e1cc58d,0x1bc99d41,0x86d2ab72,0x886c3748,
    0x64793194,0x3398583b,0x32b10379,0x70573c98,0x1b9cce63,0x664ce637,
    0x711cc6e1,0xac4398dc,0x4436731b,0x22c580e4,0x7902b82b,0xb10db887,
    0x915ce67d,0x70db8877,0xeaa56e63,0x1d55dc4e,0x3995c162,0x706d2239,
    0x98e43985,0x97590cde,0x1b9d4ae3,0x52b9d4ae,0xd9107c47,0xde99cc19,
    0x52bac40c,0x5cae1267,0x95c6e732,0x5c76932b,0x4ae48572,0x72bac42b,
    0x0b1d4ae5,0x30cec8ac,0x3e209309,0x30d85700,0x00f8899d,0xad5cae57,
    0x37a206a5,0xb90f7225,0xb8ee6ccb,0x01b72eee,0x52b96639,0x336206e7,
    0x5cd886e5,0x09316eec,0xa95ce624,0x5bbb24c3,0xcd88e6dc,0x33621b05,
    0x2e6c4185,0x30b9b12c,0xd8973629,0x37622c5c,0x0e6dc0c2,0x224c39b7,
    0x32445cca,0x99512607,0xb5ae6c4b,0x00001200,0x9c016258,0x706664c3,
    0x05950059,0xb8032e00,0x33265971,0x001b930c,0x00795000,0x012a001c,
    0x20001b93,0x000e002d,0x40001970,0x000cb829,0x00002520,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x100c0400,0x22021010,0x80988040,0x81130301,
    0x10831810,0x3a860108,0x5c088853,0x4080845d,0x2edc533a,0x11008408,
    0x351f775c,0x21880210,0x07102408,0x30602102,0x882102e5,0x214c6a0b,
    0x502a0201,0x0d015035,0x42a88393,0xb81aa828,0x2ea0d540,0x0e4c39c3,
    0x20e70726,0x0a63ae1a,0x9103a873,0x3ae2ba81,0x54075298,0x2c80ecc0,
    0x0566cc58,0x33350191,0x260b265c,0x64c0a80b,0x5750d541,0x2a0b9b87,
    0x51cc6e2b,0xdb815035,0x1a94c6a5,0x30d54c53,0x8eed4355,0x1edc531a,
    0x3db87766,0x0f6e1edc,0x098447b7,0x2a992219,0xe98a72ae,0x750ba22d,
    0x2e2a98a6,0x85d129cb,0x154c533a,0x222c254c,0x3bbae1ac,0x442b3663,
    0x35416130,0x321a9824,0x1132a910,0x4c444261,0x224e6370,0x2a5ddd54,
    0x2e731b83,0x3a322731,0x261d1910,0x5398dc25,0x212c4ae7,0x5cea573a,
    0x9d4ae752,0x4c6e732b,0x70cec394,0xd9cc5793,0x75c36e20,0xb8676298,
    0x36e22ad9,0x6c531d70,0x0ee64c19,0x42c06e16,0x5ce61ac8,0x42c2c0b1,
    0x2931d9c9,0x3989b51c,0xb8dce637,0xb0916731,0x2370ba21,0x4ce63739,
    0x325a4cb4,0x26370989,0x15d22193,0x21948864,0x65221948,0x0dce6910,
    0x21cd893b,0x3262e89b,0x2ee57059,0xb873629c,0x72b82d99,0x0e6c5397,
    0x0b0e726e,0x0dc16057,0x2058dce6,0x731b8585,0x577524ec,0x2731b9cc,
    0xa4ae571b,0x5c42c894,0x5ce6370d,0x86f26731,0x26321bc9,0x6ce6373c,
    0x360ae910,0xa4436910,0x4436910d,0xf8872934,0x2370d880,0xa8b7662c,
    0x2b66e5cc,0xd1b86c42,0x9b9732a5,0x706c42ad,0x88585575,0x2b82c0cd,
    0x99d1ca4c,0x1b858583,0x7507c455,0x31ca4c76,0x6e6c4729,0x4c73d590,
    0xb95cae04,0x74cae572,0x19bd30cd,0x72b9d4ae,0x499d4ae5,0x4ae752b8,
    0x5cea573a,0x0ee74752,0x20b99116,0x0c2ce62b,0x644b666e,0x4488185c,
    0x9912d99b,0x185de88b,0x6c416030,0x18773a0c,0x9b10b0b0,0x3a060b0b,
    0x0773a1dc,0x23d9db89,0x12e6540d,0x2e6c4b9b,0xa95cea57,0x6c4b7763,
    0x7173625c,0x9736239b,0x33625cd8,0x80173625,0x2624c005,0x8dc38573,
    0x0207002e,0x2400ba37,0x02c0e070,0x76443800,0x00733a0c,0x0000382c,
    0x72eadc17,0x00005ddf,0x930ccc98,0x00000199,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x43006000,0x0420eee9,0x4c40c0c6,0x044c1080,0xc8811018,0x16f4c180,
    0x0b88776a,0x1008980c,0x08418108,0x105c4084,0x30081ddd,0x10630210,
    0x02013101,0x88111001,0x01008408,0x40202101,0x4c090200,0x40c88582,
    0xaa8481c9,0x7505cdc1,0x02e03507,0x21aa8315,0x09661b39,0x50550aea,
    0x7386e077,0x220ecc68,0x910e4c0c,0xc9848340,0x3f20e4c1,0x75c0d544,
    0x07b00734,0x50591073,0x89481b01,0x415d43b9,0x01ddd339,0x7545859b,
    0x1ddd32ee,0x74cbbbaa,0x986a60ee,0x53530eee,0x7316f4c1,0x64ca6350,
    0x82627259,0x20d4c1ca,0x0ed440e8,0x54c681d1,0x883bba21,0x30ab620e,
    0x07774435,0x77744353,0xee893660,0x4c36a60e,0x86a981ab,0x22a81bea,
    0x1540eee8,0x30aa06a6,0x05855035,0x6c0b03b5,0x581b02c0,0x160ece4c,
    0x9cc93d33,0x5c35730d,0x8b766751,0x2663c98c,0x43b3930d,0x327622cb,
    0x44b0b2e1,0x20910d9c,0x8ab622cb,0x0910d9c8,0x1221b391,0x24436762,
    0xe986cecc,0x1a72a1c9,0x33b0646e,0x219d8244,0x2760d9c8,0xd8367221,
    0xbbc82c19,0x582c82c0,0x1b8b0590,0x764c5873,0x9967265c,0x95970d9e,
    0x2572ce67,0x5c7b2a3a,0x72c6c731,0x458d86e5,0x44b736a5,0x12c6c2ad,
    0x25b9b509,0x336a2ad8,0x5c55b12d,0x8ab62551,0x54e6191b,0x8dc2c322,
    0x5b107339,0x66d41cc5,0x9b50732d,0x42c0e65b,0xf911cbc8,0x85824c19,
    0x51b8b049,0x985ac585,0x8dce62dd,0x2733cacb,0x4cb7762b,0x9546e393,
    0x6cae1b48,0x21836911,0x22ad883a,0x33a21b48,0x5b10750c,0x56c41d45,
    0xd895cae2,0x986cae2a,0x86864573,0x2162931b,0x21622ad8,0x3a85883a,
    0x990b0588,0x01b1203b,0x22c03616,0x64585cd8,0x2ce62cbc,0xa8dc6e73,
    0x6cc180c3,0x4b9b11dc,0x9d12eeeb,0x8bbbae3b,0x488666c7,0x482eeeb8,
    0x0488666c,0x2122199b,0x21225cd8,0x9b30dce8,0xb85ce989,0x866dc591,
    0x419b7048,0x336e0ccd,0xdb833360,0x20cfc88c,0x21707b75,0xf912eefb,
    0x4bbbee19,0x4400cfc8,0x39800cfc,0xb8dce657,0x07038751,0x01625800,
    0x22002c4b,0x2c4b0cce,0x33a2005c,0x6674400c,0x06674400,0xdb700000,
    0x199d1007,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x80000000,0x40e880c1,0x10831810,
    0x44040988,0x0843db80,0x00306008,0x88108218,0x260c0100,0x0080c1dd,
    0x10020602,0x04021030,0x08044c02,0x840204c4,0x20500440,0x988600c1,
    0x2a0d4300,0x64c2cb82,0x1ce0e4c1,0xb50b06aa,0x522b9d45,0x0d415d44,
    0xc8f760aa,0x22522aab,0x415d44cb,0x2a09621a,0x5815d41a,0x40a20d54,
    0x4e0d540a,0x41440a83,0x220a83ba,0xa41446ad,0x36e265c4,0x41541a85,
    0x416a24b9,0x1a983536,0x06aa2c6c,0x777441d1,0x01903a20,0x22910c9a,
    0x84c22130,0x4c221308,0x56491930,0x260d4c4b,0x260d4c1a,0x7440ae1a,
    0x1cc0d540,0x3a21ddd1,0x522190ee,0xdd30eee9,0x43bba61d,0x2750eee9,
    0xba83a229,0x2a074458,0x750d541a,0x20d545b5,0x36f261aa,0x9c8d82c0,
    0x21b3910d,0x6ccc1b48,0x0488b2e0,0x44488597,0x9a44365b,0x8dce6373,
    0x5ce63739,0xca8837a1,0x4c767260,0xb3931d9c,0x5c767263,0x99859702,
    0x0910640d,0x07293091,0x582c160b,0x9714c75c,0x2e06d545,0x306ccc2c,
    0x272321b3,0x99836664,0x8739370d,0xdcda8135,0x2e5b9b52,0x3b2a2eee,
    0xad896361,0x22c2c6c2,0x33a95c49,0x1b9cc6e7,0xb9cc6e73,0x4c75b771,
    0x4e6371bb,0x4c6e731b,0x24ce6373,0x765458d8,0x55b11221,0x276156c4,
    0x160b0584,0x8a72ee2c,0x12eaa58d,0x1eca8b1b,0x646c7b2a,0xa87b2a48,
    0x557571ec,0x1d6c7b58,0x2b12c1d4,0x6d223939,0xa4455b10,0x8311540d,
    0x65265cd8,0xa4c72931,0x6c72931c,0x22f21f98,0x8dcaa374,0x5caa372a,
    0x8e75c551,0x64e61b48,0x55b106e1,0x3e2156c4,0x160b0580,0x4ab66e2c,
    0x5caa1b48,0x9cc36912,0x5c72731c,0x32733aab,0x6c472731,0x3610584d,
    0x033360cc,0x8ee6cca6,0x0912eeeb,0x4b05ddd7,0x7433b04a,0x8773a1dc,
    0x373a1dce,0x327bbb51,0xb9b13ca8,0x9b12e6c4,0x2c2e6c4b,0x6ccbbbae,
    0x122161dc,0x0b058122,0x5c582c16,0xddd72d99,0x5c76eaa5,0xb9b32eee,
    0x44773663,0x373665de,0x1c3b9b31,0x00027654,0x89601cc0,0x96199d15,
    0x8801b858,0x0000002c,0x00000000,0x05896040,0x6674414c,0x58199d10,
    0xc8867e44,0x19f910cf,0x8dc33f22,0x202c4b2e,0x48001625,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x20000000,0x444302ca,0x5c40841a,0x01b84c41,0x16543573,
    0x1ba8f372,0x1300cc2a,0x204215cc,0x46603301,0x54041542,0x8108302c,
    0x22020100,0x010041a8,0x0c104426,0x208410c1,0x1e5c1308,0x4cd85b91,
    0x20984430,0x426644c8,0x261b81ba,0x10ecc59d,0x2b661919,0xb1910371,
    0x5370dcc1,0x370d9a85,0x361d20a6,0x1544a418,0x28ea8354,0x85750676,
    0x4c1b81b8,0xbb1e5c1c,0x6cc79707,0x0680a659,0xb94d6615,0x14d6e535,
    0x1b94c3b3,0x91a07273,0x2e530dc0,0x32730360,0x8886cd41,0x88dca61a,
    0x36f6a1a8,0x1a998192,0x9c996326,0xa86eab1d,0x0a6370ec,0x2a0e6c16,
    0x13b02a82,0x550398b0,0x2a0c8c88,0x42a82a82,0x0d4441a9,0x55cc6e53,
    0x30a81541,0x4894891d,0x53155449,0x1ed4dc6e,0x40ad8751,0x85ca6299,
    0x25ec2bca,0x9d987654,0xd98dca65,0x5822ea59,0x930d9e88,0xb398dc37,
    0x0c9cc72a,0x8160a637,0x261a60d8,0x8b03e986,0xda8d3058,0x261a62db,
    0x5f4c6986,0x29967665,0x3167a637,0x2661b30d,0x2206440c,0x932ccc0c,
    0x1cde6472,0x754c1b51,0xa4c6eba0,0x4391750c,0x64e60dbc,0x94c6e530,
    0xd86e531b,0x2710b0cc,0x2199d31a,0x2a32551b,0x5c373662,0x910b0551,
    0x2160b0b9,0x36e1605b,0x22ea2c0c,0x160b0580,0xb94c6e73,0x94c6e531,
    0x4c2c2c1b,0x86ee60bb,0x206c0bb9,0x2a751dce,0x20c81b82,0x333e6114,
    0x954aa753,0x4373662b,0x4c283729,0x161a8372,0x51b8d4e2,0xe8933627,
    0x26e483dd,0x0a0580dc,0x40b0582c,0x36160b05,0x0582c0cc,0x2637298b,
    0x26190372,0x0d858372,0x2690e564,0x2b872b23,0x4499b120,0x0f3224cc,
    0x33605309,0x00373624,0x30e0dca6,0x2c7306e5,0x9911a9c4,0x37000019,
    0x20e67400,0x8867e443,0x9d910cfc,0x2067e441,0x0067e440,0x64433f22,
    0x19f910cf,0x7298dca6,0x5ca63a83,0x4419f911,0x27b5172c,0x5172e88b,
    0x0333e27b,0x0402006e,0x00029848,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x2e15cc28,
    0xdd98085d,0x644776a1,0x970f6e4c,0x29981987,0x85404084,0x44261829,
    0x01a888a1,0x20554413,0x2ca81a80,0x5cc240d4,0x433260a9,0x2aaa1308,
    0xd98ae62a,0x4540a61b,0x9506e60b,0x98cc1c45,0x2659b951,0x259b01bd,
    0x4426531a,0x1b1620c0,0x88d01d43,0xaac04985,0x2a66e573,0x2eba1aa3,
    0x83887661,0x21b8731b,0xd324373a,0x11bd8393,0x15d4193b,0x422157b3,
    0x4157b309,0x27a6618d,0x8dca6164,0x23628b9a,0xd9864aa1,0x527a724c,
    0x0aa1d9c9,0x9d9b9091,0x40c95458,0x12d621da,0x80581bbb,0x107a21cd,
    0x640dc555,0x19580988,0x2455e522,0x33045216,0x37099c45,0x215544e6,
    0x54a638b5,0x2e571222,0x35911830,0x5911b94c,0x93067443,0x827a2b9d,
    0x54ca3729,0x8cc87362,0xacae7329,0x8e6375ce,0x518a4469,0x0f4c3737,
    0xbc853199,0x2b0b6a0b,0x28b3b2a5,0x36e20d88,0x82b96660,0xb582c98c,
    0x485e5221,0xbae8242c,0x8dc95711,0x77166639,0x8dca6587,0x2552cedb,
    0xdaa46b0d,0x70dca64d,0x8b586b83,0x65262be9,0xb10a7151,0x4d263321,
    0x2e356393,0xa4458551,0x43b7955a,0x263323eb,0x446eae24,0x16b10bfb,
    0x66443e16,0x20d83705,0x0532b848,0x8c9546eb,0x8242c49b,0x71762114,
    0x881b0aa3,0x99d32c0f,0x65ec4388,0x5c71d190,0x2e1ca4c1,0xcbcc8581,
    0x8ee74162,0x3322518a,0xe9964aa5,0x4b736a3d,0x44584cd8,0x58352a84,
    0x32e2c954,0x887a621d,0x2c4386de,0x71732a2c,0x6439b705,0x25bb12dd,
    0x33224cd8,0x48282c0c,0x3621cb88,0x24c15c5c,0x0e20532c,0x597950b8,
    0xb9d066c4,0x9d066c43,0xccfa8039,0x1d5ddc01,0x398fb6a0,0xcfc88000,
    0x2a199d10,0x6d458352,0x13daa43e,0x4c2615d5,0x2a399931,0x9f100080,
    0x00000019,0x2067e440,0x3b388483,0x70ccf880,0x10299209,0xd6985407,
    0x00000003,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0xd886e200,0x36a2a82d,0x506ea1dd,0xdc859871,0x2a8f7662,0x98ccea57,
    0x22191ddd,0x21ca6353,0x51c44893,0x43a859b9,0x10b8cc0b,0x4c2a19b9,
    0x4199b0a1,0x6c4122cb,0xda8666c0,0x88b3661b,0x8aaa2111,0x26661a88,
    0x998b2a0a,0x098c1802,0x98c41831,0x91910310,0x3b06ce61,0xd9a83203,
    0x263b5910,0x9ccb085b,0x5cf6b72c,0x2658298e,0x96362394,0x4731ca45,
    0xc88580d8,0x55306c45,0x531b8b07,0x25509162,0x0b2a0b0c,0x4c323709,
    0x22c6c193,0x96766599,0x2e63aebc,0x8c86eba4,0x27548d64,0x2179911b,
    0x0eea4ab8,0x3265b7b5,0x4880e659,0x9d887654,0x4cb02c1d,0x2aef2573,
    0xc8539773,0x3aa24ec1,0x2934a521,0x42c0d10c,0x261d10b4,0xabb8b04c,
    0xb8ab602b,0x46c16572,0x2370cec5,0x98959329,0x4a60d81f,0x4719191b,
    0x884524ad,0x23a322ac,0x19372d63,0x0ae17625,0x6ecc1175,0x21c81622,
    0x27621939,0x22b82c0d,0x3a324de9,0x455b3748,0x4c0f8849,0x8e7a721e,
    0x8b04a8b6,0x4c390b2a,0xabb8b04d,0x855b022b,0x910b1dcc,0x8dc77d16,
    0x41b59349,0x2615c3cb,0x1c652372,0x8d824555,0xc8b2f2a5,0x46aaa63b,
    0x0b721cb8,0x59cc3336,0x8b10665c,0x7b50dcd9,0x42b8583b,0x5d214839,
    0x40362d99,0x32e58d85,0x20ef23c9,0x66645849,0x7530723e,0x531b8b05,
    0x0c8091e2,0x45b9b50b,0x26591b84,0x8e526573,0x2530ccf8,0xa8e3291b,
    0x2084122a,0x07cc3d69,0x3b388aea,0x9cc00262,0x001b802b,0xdfd88a32,
    0x263bbf31,0xd1ba4583,0xb0777aa5,0x56e752c8,0x8003e62e,0x4a601605,
    0x219f911d,0x6740531b,0x7439910c,0x92c4b1cc,0x74c7db70,0x0000004d,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x102a8000,0x09028188,0x00018595,
    0x18509018,0x180bbb98,0xcca84204,0x0c10860d,0xc9e64b2a,0x00004ccc,
    0x00000000,0x00000000,0x00000000,0x21a60000,0xb0ee61b9,0xd92d60a0,
    0x1b124644,0x2e2d641b,0x5dc3e239,0x202223ad,0x9483e21b,0x743e2370,
    0x0000aa58,0x00000000,0x00000000,0x00000000,0x00000000,0x222eb858,
    0x259d952d,0x2b62ccca,0x8326e2c4,0x225ac1f9,0x10962193,0x07332617,
    0x00880020,0x00000129,0x00000000,0x00000000,0x00000000,0x80000000,
    0x731ddc45,0x73010589,0x91b17543,0x0e545ad8,0x00000540,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x19f91000,0x81c0cc18,
    0x2622aa85,0x02102220,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
};

static signed short stb__consolas_9_latin_ext_x[560]={ 0,1,1,0,0,0,0,1,1,1,0,0,1,1,
1,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,
1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,
2,0,0,0,0,0,0,1,0,0,0,0,1,1,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,
0,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,
0,-2,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,0,0,0,-1,0,
0,0,0,0,0,0,0,0,0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,-1,0,-1,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0, };
static signed short stb__consolas_9_latin_ext_y[560]={ 6,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,1,4,3,
4,-1,0,0,0,0,0,0,0,0,0,0,1,1,1,2,1,-1,-1,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,-1,-1,0,7,-1,1,-1,1,-1,1,-1,1,-1,-1,
-1,-1,-1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,-1,-2,-1,2,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,1,-1,0,0,0,
-2,-1,-1,0,0,1,3,3,-1,0,-1,0,-1,-1,-1,1,-1,2,6,-1,0,1,-1,-1,-1,1,-2,-2,-2,-2,
-2,-2,0,0,-2,-2,-2,-2,-2,-2,-2,-2,0,-2,-2,-2,-2,-2,-2,1,-1,-2,-2,-2,-2,-2,0,-1,-1,-1,
-1,-1,-1,-1,1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,0,-1,-1,-1,-1,-1,-1,-1,
-2,0,-2,-1,0,1,-2,-1,-2,-1,-2,-1,-2,-1,-2,-1,0,-1,-2,0,-2,-1,-2,-1,0,1,-2,-1,-2,-1,
-2,-1,-2,-1,0,-1,-2,-2,0,-1,-2,-1,-2,0,-2,-1,0,-1,-2,1,0,-1,-2,-1,0,-1,1,-2,-2,0,
-1,-1,-1,0,-1,0,-1,-2,-1,0,1,-2,-1,-1,0,1,-2,0,-2,-1,-2,-1,0,1,-2,-1,0,1,-2,-1,
-2,-1,-2,-1,0,1,-2,-1,0,0,-2,-1,0,0,-2,-1,-2,0,-2,-1,-2,-1,-2,-1,0,1,-2,-1,-2,-1,
-2,-2,-1,-2,-1,-2,-1,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,-3,-2,-2,-1,-2,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0, };
static unsigned short stb__consolas_9_latin_ext_w[560]={ 0,3,3,5,5,5,5,2,3,3,5,5,3,3,
3,5,5,5,5,5,5,5,5,5,5,5,3,3,5,5,5,4,5,5,5,5,5,5,5,5,5,5,4,5,
4,5,5,5,5,5,5,5,5,5,5,5,5,5,5,3,5,3,5,5,3,5,5,5,5,5,5,5,5,5,
4,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,4,1,4,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,3,4,5,5,5,
1,5,4,5,4,5,5,3,5,4,5,5,3,3,5,5,5,3,2,4,4,5,5,5,5,4,5,5,5,5,
5,5,6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5,5,5,5,5,5,5,5,5,6,7,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,4,4,5,5,5,5,5,4,
5,7,6,5,6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,6,5,5,5,6,5,
5,5,5,5,5,5,5,5,5,5,5,6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5,5,4,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5,5,5,5,5,5,5,6,5,6,6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5, };
static unsigned short stb__consolas_9_latin_ext_h[560]={ 0,8,3,6,9,8,8,3,9,9,5,5,4,1,
3,8,7,6,6,7,6,7,7,6,7,6,6,7,6,3,6,8,9,6,6,7,6,6,6,7,6,6,7,6,
6,6,6,7,6,8,6,7,6,7,6,6,6,6,6,9,8,9,4,1,3,6,8,6,8,6,7,7,7,7,
9,7,7,5,5,6,7,7,5,6,7,6,5,5,5,7,5,9,10,9,3,6,6,6,6,6,6,6,6,6,
6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,0,7,9,6,6,6,
10,9,3,7,5,5,3,1,5,2,4,6,5,5,3,7,9,3,2,5,5,5,7,7,7,7,8,8,8,8,
8,8,6,8,8,8,8,8,8,8,8,8,6,8,9,9,9,9,9,5,8,9,9,9,9,8,6,8,8,8,
8,8,8,8,6,7,8,8,8,8,7,7,7,7,8,7,8,8,8,8,8,5,7,8,8,8,8,9,9,9,
8,7,8,8,8,7,9,8,9,8,9,8,9,8,8,8,6,8,8,7,8,8,8,8,8,7,8,8,9,9,
9,9,9,9,8,9,8,8,6,7,8,7,8,6,8,7,8,9,8,5,7,9,9,9,8,9,5,8,8,8,
9,7,7,6,7,6,7,8,7,8,7,8,7,7,8,7,9,7,9,8,9,8,7,6,8,7,8,7,8,7,
9,8,9,8,8,7,9,8,8,8,8,8,6,7,9,8,9,7,9,8,9,8,9,8,8,7,8,7,8,9,
8,8,7,8,7,8,7,7,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,9,6,6,6,
6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,
6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,
6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,
6,6,6,6,6,6,6,6,6,6,9,9,8,8,9,8,6,6,6,6,6,6,6,6,6,6,6,6,6,6,
6,6,6,6,6,6,6,6,6,6,8,7,8,8,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,
6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,
6,6,6,6,6,6, };
static unsigned short stb__consolas_9_latin_ext_s[560]={ 5,123,104,31,5,90,84,253,48,52,7,
17,63,117,100,138,212,37,43,218,109,224,242,19,248,149,139,1,97,73,115,
49,62,160,178,23,172,143,166,29,133,127,35,121,155,55,61,40,49,54,7,
11,103,76,91,85,79,73,67,74,43,102,57,121,108,25,193,13,111,1,104,
42,165,171,112,70,52,202,196,194,98,110,213,170,134,158,231,225,184,88,190,
159,1,187,67,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,
164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,5,94,227,
152,243,237,3,18,89,46,208,219,94,117,237,112,51,249,249,13,79,236,24,
85,253,34,29,39,194,188,182,177,204,192,126,105,117,139,230,120,150,220,144,
31,180,174,162,168,224,186,68,78,55,61,67,45,222,37,13,7,250,156,182,
198,234,228,132,216,210,93,146,111,7,1,244,232,92,129,117,86,175,153,99,
114,108,102,96,23,240,78,72,66,60,238,232,215,37,1,25,19,13,60,209,
250,203,238,49,226,123,214,207,199,176,187,181,123,169,163,157,151,145,25,133,
127,31,106,117,25,84,19,87,56,75,69,212,147,50,141,38,200,26,135,14,
96,1,1,66,135,192,170,219,147,243,201,195,190,197,72,104,206,246,140,98,
140,7,128,13,116,19,36,97,159,43,48,73,207,181,44,54,188,62,230,81,
58,103,64,1,91,244,122,134,5,221,146,159,165,171,177,218,122,175,184,164,
128,153,79,141,231,129,225,237,206,243,116,213,90,85,249,82,32,17,20,200,
31,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,42,
164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,
164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,
164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,
164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,
164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,
164,164,164,36,30,7,56,11,152,164,164,164,164,164,164,164,164,164,164,164,
164,164,164,164,164,164,164,164,164,164,164,164,164,110,80,159,165,164,164,164,
164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,
164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,
164,164,164,164,164,164,164,164,164, };
static unsigned short stb__consolas_9_latin_ext_t[560]={ 11,22,63,56,1,31,31,31,1,1,63,
63,63,63,63,31,40,56,56,40,56,40,40,56,40,56,56,48,56,63,56,
31,1,56,56,48,56,56,56,48,56,56,48,56,56,56,56,48,56,31,56,
48,56,48,56,56,56,56,56,1,31,1,63,63,63,56,22,56,22,56,48,
40,40,40,1,48,48,56,56,48,48,48,56,48,48,48,56,56,56,48,56,
1,1,1,63,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,
48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,11,48,1,
48,48,48,1,1,63,48,56,56,63,63,56,63,63,48,56,63,63,40,1,
63,35,63,63,63,40,40,40,40,31,31,31,22,22,22,48,31,31,22,31,
31,31,31,31,31,48,31,1,1,12,12,12,63,31,12,12,12,1,31,48,
31,31,31,31,31,31,22,48,40,31,31,22,22,40,40,40,40,22,40,22,
31,31,31,31,63,31,31,31,31,31,1,1,1,31,40,31,31,31,40,1,
22,1,22,12,22,1,22,22,22,48,22,22,40,22,22,22,22,22,40,22,
22,12,1,1,12,1,12,22,1,22,22,48,40,22,40,22,48,22,40,22,
1,22,63,40,1,1,1,12,1,56,12,12,12,1,40,40,48,31,48,40,
12,40,12,40,12,40,40,12,40,12,40,12,12,1,22,40,48,22,40,22,
48,12,48,12,12,1,12,12,48,1,12,12,12,12,12,48,48,1,12,1,
48,1,12,1,12,1,12,12,40,12,48,12,1,12,12,48,22,48,22,40,
40,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,1,
48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,
48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,
48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,
48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,
48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,
48,48,48,1,1,22,22,1,12,48,48,48,48,48,48,48,48,48,48,48,
48,48,48,48,48,48,48,48,48,48,48,48,48,12,40,12,12,48,48,48,
48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,
48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,
48,48,48,48,48,48,48,48,48, };
static unsigned short stb__consolas_9_latin_ext_a[560]={ 79,79,79,79,79,79,79,79,
79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,
79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,
79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,
79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,
79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,
79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,
79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,
79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,
79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,
79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,
79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,
79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,
79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,
79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,
79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,
79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,
79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,
79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,
79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,
79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,
79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,
79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,
79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,
79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,
79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,
79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,
79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,
79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,
79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,
79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,
79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,
79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,
79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,
79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,
79,79,79,79,79,79,79,79, };

// Call this function with
//    font: NULL or array length
//    data: NULL or specified size
//    height: STB_FONT_consolas_9_latin_ext_BITMAP_HEIGHT or STB_FONT_consolas_9_latin_ext_BITMAP_HEIGHT_POW2
//    return value: spacing between lines
static void stb_font_consolas_9_latin_ext(stb_fontchar font[STB_FONT_consolas_9_latin_ext_NUM_CHARS],
                unsigned char data[STB_FONT_consolas_9_latin_ext_BITMAP_HEIGHT][STB_FONT_consolas_9_latin_ext_BITMAP_WIDTH],
                int height)
{
    int i,j;
    if (data != 0) {
        unsigned int *bits = stb__consolas_9_latin_ext_pixels;
        unsigned int bitpack = *bits++, numbits = 32;
        for (i=0; i < STB_FONT_consolas_9_latin_ext_BITMAP_WIDTH*height; ++i)
            data[0][i] = 0;  // zero entire bitmap
        for (j=1; j < STB_FONT_consolas_9_latin_ext_BITMAP_HEIGHT-1; ++j) {
            for (i=1; i < STB_FONT_consolas_9_latin_ext_BITMAP_WIDTH-1; ++i) {
                unsigned int value;
                if (numbits==0) bitpack = *bits++, numbits=32;
                value = bitpack & 1;
                bitpack >>= 1, --numbits;
                if (value) {
                    if (numbits < 3) bitpack = *bits++, numbits = 32;
                    data[j][i] = (bitpack & 7) * 0x20 + 0x1f;
                    bitpack >>= 3, numbits -= 3;
                } else {
                    data[j][i] = 0;
                }
            }
        }
    }

    // build font description
    if (font != 0) {
        float recip_width = 1.0f / STB_FONT_consolas_9_latin_ext_BITMAP_WIDTH;
        float recip_height = 1.0f / height;
        for (i=0; i < STB_FONT_consolas_9_latin_ext_NUM_CHARS; ++i) {
            // pad characters so they bilerp from empty space around each character
            font[i].s0 = (stb__consolas_9_latin_ext_s[i]) * recip_width;
            font[i].t0 = (stb__consolas_9_latin_ext_t[i]) * recip_height;
            font[i].s1 = (stb__consolas_9_latin_ext_s[i] + stb__consolas_9_latin_ext_w[i]) * recip_width;
            font[i].t1 = (stb__consolas_9_latin_ext_t[i] + stb__consolas_9_latin_ext_h[i]) * recip_height;
            font[i].x0 = stb__consolas_9_latin_ext_x[i];
            font[i].y0 = stb__consolas_9_latin_ext_y[i];
            font[i].x1 = stb__consolas_9_latin_ext_x[i] + stb__consolas_9_latin_ext_w[i];
            font[i].y1 = stb__consolas_9_latin_ext_y[i] + stb__consolas_9_latin_ext_h[i];
            font[i].advance_int = (stb__consolas_9_latin_ext_a[i]+8)>>4;
            font[i].s0f = (stb__consolas_9_latin_ext_s[i] - 0.5f) * recip_width;
            font[i].t0f = (stb__consolas_9_latin_ext_t[i] - 0.5f) * recip_height;
            font[i].s1f = (stb__consolas_9_latin_ext_s[i] + stb__consolas_9_latin_ext_w[i] + 0.5f) * recip_width;
            font[i].t1f = (stb__consolas_9_latin_ext_t[i] + stb__consolas_9_latin_ext_h[i] + 0.5f) * recip_height;
            font[i].x0f = stb__consolas_9_latin_ext_x[i] - 0.5f;
            font[i].y0f = stb__consolas_9_latin_ext_y[i] - 0.5f;
            font[i].x1f = stb__consolas_9_latin_ext_x[i] + stb__consolas_9_latin_ext_w[i] + 0.5f;
            font[i].y1f = stb__consolas_9_latin_ext_y[i] + stb__consolas_9_latin_ext_h[i] + 0.5f;
            font[i].advance = stb__consolas_9_latin_ext_a[i]/16.0f;
        }
    }
}

#ifndef STB_SOMEFONT_CREATE
#define STB_SOMEFONT_CREATE              stb_font_consolas_9_latin_ext
#define STB_SOMEFONT_BITMAP_WIDTH        STB_FONT_consolas_9_latin_ext_BITMAP_WIDTH
#define STB_SOMEFONT_BITMAP_HEIGHT       STB_FONT_consolas_9_latin_ext_BITMAP_HEIGHT
#define STB_SOMEFONT_BITMAP_HEIGHT_POW2  STB_FONT_consolas_9_latin_ext_BITMAP_HEIGHT_POW2
#define STB_SOMEFONT_FIRST_CHAR          STB_FONT_consolas_9_latin_ext_FIRST_CHAR
#define STB_SOMEFONT_NUM_CHARS           STB_FONT_consolas_9_latin_ext_NUM_CHARS
#define STB_SOMEFONT_LINE_SPACING        STB_FONT_consolas_9_latin_ext_LINE_SPACING
#endif

