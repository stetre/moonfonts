// Font generated by stb_font_inl_generator.c (4/1 bpp)
//
// Following instructions show how to use the only included font, whatever it is, in
// a generic way so you can replace it with any other font by changing the include.
// To use multiple fonts, replace STB_SOMEFONT_* below with STB_FONT_times_34_usascii_*,
// and separately install each font. Note that the CREATE function call has a
// totally different name; it's just 'stb_font_times_34_usascii'.
//
/* // Example usage:

static stb_fontchar fontdata[STB_SOMEFONT_NUM_CHARS];

static void init(void)
{
    // optionally replace both STB_SOMEFONT_BITMAP_HEIGHT with STB_SOMEFONT_BITMAP_HEIGHT_POW2
    static unsigned char fontpixels[STB_SOMEFONT_BITMAP_HEIGHT][STB_SOMEFONT_BITMAP_WIDTH];
    STB_SOMEFONT_CREATE(fontdata, fontpixels, STB_SOMEFONT_BITMAP_HEIGHT);
    ... create texture ...
    // for best results rendering 1:1 pixels texels, use nearest-neighbor sampling
    // if allowed to scale up, use bilerp
}

// This function positions characters on integer coordinates, and assumes 1:1 texels to pixels
// Appropriate if nearest-neighbor sampling is used
static void draw_string_integer(int x, int y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0, cd->t0); glVertex2i(x + cd->x0, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t0); glVertex2i(x + cd->x1, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t1); glVertex2i(x + cd->x1, y + cd->y1);
        glTexCoord2f(cd->s0, cd->t1); glVertex2i(x + cd->x0, y + cd->y1);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance_int;
    }
    glEnd();
}

// This function positions characters on float coordinates, and doesn't require 1:1 texels to pixels
// Appropriate if bilinear filtering is used
static void draw_string_float(float x, float y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0f, cd->t0f); glVertex2f(x + cd->x0f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t0f); glVertex2f(x + cd->x1f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t1f); glVertex2f(x + cd->x1f, y + cd->y1f);
        glTexCoord2f(cd->s0f, cd->t1f); glVertex2f(x + cd->x0f, y + cd->y1f);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance;
    }
    glEnd();
}
*/

#ifndef STB_FONTCHAR__TYPEDEF
#define STB_FONTCHAR__TYPEDEF
typedef struct
{
    // coordinates if using integer positioning
    float s0,t0,s1,t1;
    signed short x0,y0,x1,y1;
    int   advance_int;
    // coordinates if using floating positioning
    float s0f,t0f,s1f,t1f;
    float x0f,y0f,x1f,y1f;
    float advance;
} stb_fontchar;
#endif

#define STB_FONT_times_34_usascii_BITMAP_WIDTH         256
#define STB_FONT_times_34_usascii_BITMAP_HEIGHT        134
#define STB_FONT_times_34_usascii_BITMAP_HEIGHT_POW2   256

#define STB_FONT_times_34_usascii_FIRST_CHAR            32
#define STB_FONT_times_34_usascii_NUM_CHARS             95

#define STB_FONT_times_34_usascii_LINE_SPACING          22

static unsigned int stb__times_34_usascii_pixels[]={
    0x02666000,0x02218000,0x00800cc0,0x10000210,0x0157b973,0x9dddddb0,
    0x3bbbbbaa,0x00540000,0x0c406600,0x00500000,0x00000408,0x372e6200,
    0x0c4000ab,0x37726000,0x01cfecbc,0x6457f600,0x1026401d,0x1c8803b9,
    0xf7000191,0x9ffb779d,0xfdaaaa80,0x5555df75,0x03d80d00,0x36617400,
    0x4400005f,0x32200feb,0x0fbafffe,0x7e457aa0,0xdf7002ef,0x09fd9559,
    0x0009fb30,0xa88077aa,0xff8000dc,0x990174c6,0x2a00ba60,0x8017441e,
    0xf9104fd8,0x57ee003d,0x931005fb,0x0d50359f,0x3723cc00,0x200005ff,
    0x300fffda,0x3ff221bd,0x5fffc80f,0x07fffffd,0xf9027f4c,0x3ff7203d,
    0x01ec8004,0x200174c0,0x01fa81c9,0x009d1099,0x0fa203f3,0xd007ff10,
    0xbf7003ff,0x3aa017ee,0x2effcfcf,0x4b80007c,0x0000bff0,0xf301ff70,
    0x803ff60b,0xea8bddfe,0xff880fff,0x01ffb803,0xd88013fe,0x1d10000d,
    0x837c0000,0x401fc84c,0x0fcc02f8,0x2200ffb0,0x5fb806fe,0x5fa80bf7,
    0x3237dc5a,0x205d0003,0x800005fd,0x0fd80ffa,0x6c01ff70,0x5ffc82ff,
    0x3a007fd8,0x013fa06f,0x880005e8,0xff100006,0x5fd09901,0xd9007e80,
    0x800ffee0,0x7dc03ffa,0xff80bf75,0x6a8d71a1,0x36079800,0xa800005f,
    0x02fd40ff,0x7ec01ff5,0xb8fff105,0x3ee003ff,0x009fd03f,0x400003b2,
    0xf980001c,0xff84c81f,0x4013f203,0x3ffc43f9,0x03ffe200,0x0bf75fb8,
    0x88d07fcc,0x5c001f86,0x0017f604,0x903fea00,0x07fd409f,0x7ec0bfb0,
    0x00fff10f,0xfd01fff0,0x003f5009,0x1d41886a,0x3fea0200,0x4fe84c80,
    0xe8003fe0,0x01bfea0f,0xb80bffa0,0x4c0bf75f,0x2161a2ff,0x00f4003c,
    0x20000bfb,0xfb03fea0,0x007fd409,0x7fe40bfb,0x000dff31,0x9fd05ffd,
    0xc8809d00,0x46facbbe,0x5eb88058,0x09907fb8,0x1bea0bfb,0x7dcbf900,
    0xffc8005f,0x7dd7ee04,0x6877fc05,0x2006a808,0x8afec079,0x4401effd,
    0xffabeeec,0xf5027fc0,0x02fec01f,0x3fee1ff7,0x4ffd8005,0x7cc04fe8,
    0xd913a201,0xfc80d09f,0x06fc85ff,0x20df9099,0x7d4004fe,0x0013ff67,
    0xfb817ff2,0xfd80bf75,0x3e0069ef,0xd8099001,0xfffff9df,0x23bf303f,
    0x740fffd8,0x03fea05f,0x3ea05fd8,0x0013ff27,0x3fa17ff2,0x3a036404,
    0xc81ffa86,0x985ff801,0xf709905f,0x007ff307,0xffd0ffa8,0xfff70009,
    0x5fbafdc0,0x37fffc40,0x3a007900,0x5777ec01,0x40fffc88,0x1ffd06f9,
    0xf500ffd8,0x02fec01f,0x1fff4df7,0x43ffdc00,0x01fc04fe,0x0ff703fb,
    0x17fa0076,0xb84c82f4,0x03ffa80f,0xfd97fcc0,0xffb8004f,0x7dd7ee06,
    0xfffe8805,0x300d3004,0x01dfb00f,0x1fd8bff7,0xfb81ff90,0x01ff504f,
    0x7fb037ec,0x40027ff4,0x4fe86ffb,0x7e407e60,0x1a09fb05,0xfa82fec0,
    0x03e84c80,0x88005ff7,0x0bff94ff,0x40bff900,0x00bf75fb,0x03bfff62,
    0x099007e0,0x7f40bfb0,0xfa81fe67,0x1fffc40f,0xd803ffa6,0x46f880ff,
    0xc8005ffc,0x04fe85ff,0x3fe603ea,0xb105ff00,0x8817f600,0x3932642c,
    0x000ffe40,0x6ffaaffc,0x04ffd800,0x02fdd7ee,0x07fffea0,0x01e80990,
    0x3f205fd8,0x540df90f,0xfffa80ff,0x0ffacedf,0xb317ff60,0x06ffb83f,
    0xe83ffd80,0x6c1ea04f,0x01ff304f,0x17f60075,0xd94c9b20,0x001ffb00,
    0x3fe6fff0,0x2ffe8007,0x2fdd7ee0,0x7ffefc00,0x7981a602,0x540bfb00,
    0x40bfb1ff,0xff500ffa,0x03fea9ff,0xdcfdefd8,0x7ffa80ef,0x82ffe800,
    0x21ae04fe,0xdfb02ff8,0x7ec00b20,0x990e5c05,0xfc8032e2,0x6ff8001f,
    0xf0007ffe,0x75fb80df,0x32d000bf,0x80fc07ff,0x0bfb004c,0x6ff87fd4,
    0x3003fea0,0x200ffa85,0x015515fd,0x4001ffe8,0x09fd06ff,0x07fd43d4,
    0x7441ffd4,0x20bfb000,0x444c82d8,0x05ff501e,0x2a5ff880,0x3ee005ff,
    0xbafdc02f,0x2e68005f,0x413201ff,0x0bfb001e,0x0ffd3fd4,0x40007fd4,
    0x3f600ffa,0x5ffa8005,0x407fee00,0x21e604fe,0xffd886fb,0x36003c81,
    0x320db05f,0xff307c84,0x4ff88005,0xf800ffe4,0x75fb805f,0xf8d000bf,
    0x261a604f,0x817f6007,0x07ff65fb,0x40007fd4,0x3f600ffa,0x3ffb0005,
    0xe813fe00,0x703e204f,0x7c6c41ff,0x2003540f,0x04f885fd,0x205f5099,
    0x7cc003ff,0x805fd83f,0xbf7005fc,0x83a817ee,0x3e02fe46,0xfb002641,
    0xf70ff40b,0x03fea0bf,0x803fea00,0xd10005fd,0xdfd801bf,0xd013fa00,
    0xcadff885,0x3227f88e,0xfb00660d,0x320df70b,0xfd05fb84,0x1ffa8009,
    0x880efd88,0x3ee005fd,0x3540bf75,0x900ff634,0x36001f89,0xd09f505f,
    0x3ff907ff,0x03ff7000,0x200037f4,0xfe980efc,0x405fe803,0xdfffc86b,
    0x0f777fa0,0x217f601a,0xb09907fc,0x017f20df,0xd980bf70,0x1dfeccef,
    0xfbafdc00,0x4d07ea05,0x34c00ff8,0xffc800d3,0xf982fcc4,0xfefbadff,
    0xb1001cef,0xff3019ff,0x4c00015f,0xdffddefd,0x80dff001,0x80a980f8,
    0x07900aa8,0xff50bfb0,0x9fd09901,0xd001fe20,0x3fea005f,0xf70005ff,
    0xfa817eeb,0x0ff45a1e,0x00991f80,0xfdbffd50,0xfffe9805,0x00bffaaf,
    0x99999950,0x66666643,0x55100004,0x7ff5c001,0x017203ef,0x200d1000,
    0x1ff984fd,0x03ff84c8,0x7cc00bee,0x7ff44006,0x5fb8002f,0x75c40bf7,
    0x0dfdfdef,0x00546600,0x00153100,0x00a21a88,0x00000000,0x00000000,
    0x100003e8,0x0ff6003d,0x13203fe2,0x09d00bfa,0x4000bf20,0x4000fffd,
    0x00bf75fb,0x0007ee62,0x00000000,0x00000000,0x00000000,0x3e200000,
    0x0f440002,0x3e05fb00,0x3fb09907,0xf801f880,0x7f540003,0x57ee001f,
    0x068005fb,0xcccc8800,0xcccccccc,0x00002ccc,0x00000000,0x00000000,
    0x09d10000,0x0007aa00,0x40fe60dd,0x804f984c,0x002e406b,0x039fb300,
    0x17eebf70,0xffb00a00,0x322fffff,0xcccccccc,0x02cccccc,0x00000000,
    0x00000000,0x40000000,0xea800aec,0x4bfe200c,0x40bb03f8,0x001d704c,
    0x01b901b5,0xb9510000,0x7fffff47,0xffffff75,0xffd80001,0x0007ffff,
    0x00000000,0x00000000,0x00000000,0x337b2200,0x0cedcaaa,0xedfff880,
    0x6403ea83,0x200faa04,0x000b20c8,0x4cc40000,0x00000999,0x99999980,
    0x00000019,0x00000000,0x00000000,0x00000000,0x03579753,0x01597100,
    0x05500153,0x44600530,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x0a000000,0x18065c00,0x40000280,
    0x00180000,0x441dc074,0x64000bdb,0x5b730003,0x37950000,0x05e64c00,
    0xaaaaaa80,0xb731000a,0x55555507,0x2a055555,0x9800bcdc,0x55002bdb,
    0x25555555,0xa8007fc8,0x84fd83ff,0x80007fc8,0x99ceded9,0x3b660099,
    0x3cc01cff,0x4e7cc2e8,0x1d5001fd,0xbdfe9800,0xfa8002fe,0x4c04fbae,
    0x02fffffe,0x7fffffd4,0x15bf7006,0xffffff30,0xe98dffff,0x03fda9be,
    0x37f6b3f6,0x7ff54c00,0xffda8bef,0x5ffb8007,0x7edc6ff8,0x7dc0007f,
    0x3ffffa63,0x3e61f305,0xf835406f,0x5f89ba21,0x4001f880,0x02f41ff8,
    0xbf517ea0,0x3aef7a20,0x3fa00fff,0x403fffff,0x7e402fe8,0xffffffff,
    0x6c1fa24f,0x2077442f,0xff3006fb,0x00ff901f,0x930bff70,0x001ff603,
    0x7d40ff98,0x3f9809af,0x9900ffcc,0x44fb8f30,0x004d807e,0x1fb86fb8,
    0xb01ff100,0xf903b05f,0x267aa07f,0x7d401999,0x56fc400e,0xfc999999,
    0x7d40ff21,0xff817e46,0x07ff8803,0xf5000ff7,0xff70009f,0x837ec000,
    0x0bf202ff,0x707b0066,0x7ec3fc8b,0x4001aa02,0x00fc85fd,0x3ea0df90,
    0xff881446,0x30005d05,0x097003ff,0x02fd8dd0,0x03fc4ff1,0xff001ff7,
    0x001fee0d,0x2000ffe6,0x3a0007fb,0x40bfd04f,0x3f0002fd,0x43fe89b0,
    0x03f104fd,0x3e1bfa00,0x413fe005,0x3a002ff9,0x0006a83f,0x00a007fd,
    0x09fd13e2,0x07fb9be6,0x3e00ffe2,0x00ff706f,0x0005ff10,0x6c000ff7,
    0x40bfd05f,0x788002ff,0x43fd85d0,0x009b04fd,0xf90ffec0,0x0bfe6003,
    0xd002ffc4,0x37dfd01f,0x001bf200,0xfb83f700,0x323fb81f,0x02ffc07f,
    0x7fb837fc,0x403ff000,0x000ff700,0x7fc43fdc,0x005ff103,0xfffffff7,
    0x2bffffff,0x41fec4fc,0x7dc0006b,0x002fe8cf,0xff80bfee,0x505f1006,
    0x01dfffff,0x0001ffd4,0x3fe61ba0,0xfb17e21f,0x806fe80f,0x8ff706ff,
    0x43eeeed8,0x2f5c41ff,0x3fae7fb8,0x1ff4402e,0x3bb21bea,0x105eeeff,
    0x333bb333,0x26133f73,0x2207fc5f,0x7c40001f,0x3a60cfff,0x3f64efff,
    0x01ffa01f,0xffeb816c,0xfb03ffff,0x17bb931f,0x209f1000,0x4e8bfffb,
    0x3a00ffc8,0x06ff807f,0x5df10ff7,0xffd83fa0,0x36ff705f,0x401fffde,
    0xdfc9dfe8,0xcffbaa80,0x05d002aa,0x543f20b7,0x0003d84f,0x2209ffd0,
    0x0ffd84ff,0x9803ff60,0xfa8805fd,0xeff82fff,0x1effdcdd,0x700fdc00,
    0x2e05ffff,0x1ffe03ff,0x7dc1bfe0,0x3600dd87,0x705ff887,0x7fc45bff,
    0x6556c405,0x2ff8801a,0x6c0fc400,0x0ff7b204,0x260001ae,0xf01fffee,
    0x803ffa0d,0xfe981ffd,0x8801efff,0x3e20fffd,0x7ffcc0df,0x201ba000,
    0x880dfffb,0x17fe07ff,0x7dc1bfe0,0x32017627,0x2e0bfd06,0x07fb81ff,
    0x44000b62,0x3cc002ff,0x300802e8,0x3bdd901f,0x7ec6fe40,0xd02f986f,
    0x1ffd80ff,0x1fffee60,0x2a4ffc80,0x9ff702ff,0x1013e200,0x01dfff9d,
    0x74c5dff7,0x6ff804ff,0x13a2ff70,0x5fe82dc0,0x3ea0ff70,0x0273ee07,
    0x005ff100,0x00f886b8,0x3f60fa00,0x9f901f90,0x321fffc4,0x803ff605,
    0xd8800ffd,0x3fa001ff,0x4c07ff25,0x3f7006ff,0xfe8a7440,0xfffb80ef,
    0x02ffdcfe,0xff706ff8,0x25400bd1,0xff705fd8,0x6403fea0,0xffffffff,
    0x05ff102d,0x99dd9930,0x7999fb99,0x7dc2e400,0xff91be64,0x261fff90,
    0x03ff200f,0x22007fe8,0x3f2004ff,0xf807ff27,0x40db007f,0x7ff446e8,
    0x21595104,0xdff007ff,0x3ff7fee0,0x36093001,0x20ff705f,0xfb100ffa,
    0xffffffff,0x005ff10d,0x999bf993,0x07999dd9,0x3f603e60,0x9ff07fc2,
    0x3abffd10,0x00ffdc02,0xfd800dfd,0xa9be6005,0x3ffa01ff,0x7027c400,
    0x0ffd107f,0x8027fd40,0x1ff706ff,0x31001dff,0x7dc17f60,0x201ff507,
    0xa99988d8,0x7c41fdba,0x07e2002f,0x174000f6,0x97fc2ff8,0xff302ffa,
    0xff100bdf,0x013fe205,0xf8009f70,0xc80bfe64,0x01fb807f,0x7fc40bfa,
    0x01dfd002,0x7dc17fe0,0x000bff37,0xff705fd8,0x7403fea0,0xf887b003,
    0x41e6002f,0x05c8002e,0x27fd07fe,0x3f203ffd,0x9fd002ff,0x0007fe60,
    0x7c4005f9,0xf9027fc2,0xf80db00b,0x00ffa01f,0xf8007fea,0x5cff703f,
    0x360003ff,0x20ff705f,0x0fb80ffa,0xff885d00,0x2216e002,0x07cc000f,
    0x2ff85fd0,0xff80dffb,0x7d4902ff,0x000bf706,0x85c800df,0x07f606fc,
    0xfd809f10,0x3007f204,0x20c407ff,0x8ff702ff,0xb9102ffd,0x2e0bfb01,
    0x01ff507f,0x0b7009ff,0x64005ff1,0x44007984,0x217ec02e,0x5fff71ff,
    0xfffddd10,0xfb072217,0x981ff883,0x6445f500,0x3a01f703,0x805f883f,
    0x37cc01fa,0xff980df0,0x44bfe202,0x83fee06f,0xfb81ffe8,0x905fe84f,
    0x03fea0ff,0x26afbff2,0x980deb99,0x0ba002ff,0x0990016e,0x2fd4bf30,
    0x2ef7fffa,0x3fff64fc,0x6e885fff,0x7fe417e4,0xa83db30c,0xefc9ceff,
    0x983fe200,0x06d800dd,0xfb817fb0,0x007be601,0x3f31dff3,0x2a0ffec0,
    0x7fcc1eff,0xfb06ff83,0x05ff901f,0x3fffffee,0x3fee02ef,0x901f1004,
    0x00754007,0x0ee9bfb8,0x7ffffec4,0xffffb81e,0xdbfb100d,0x3ffe6039,
    0xfb00ceff,0x2007bfff,0x04fddfe9,0x5c009f10,0x40dfccff,0x002eeca8,
    0x40b7bff2,0x8cffffdb,0x2cffffd8,0xfffd7062,0x3fff6a7d,0xfffda8cf,
    0x795500cf,0x7fedc035,0x2201ceff,0x6c001502,0x66e4c001,0x026aa200,
    0x18002a60,0x00353100,0x22000198,0x0544000a,0x100d4400,0x22000135,
    0x0000000a,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0xcdca8000,0xaaaa881b,0xaaa8800a,0xb9801aaa,
    0x0e0acdec,0x2aaaaaa6,0x2aaaaaa2,0xaaaa882a,0x5555531a,0x55440355,
    0x55552aaa,0x22055555,0x02aaaaaa,0x1c159b95,0x37b99500,0x2aaa6288,
    0x5102aaaa,0x88355555,0xaaaaaaaa,0x11aaaaaa,0x55555555,0x55555505,
    0x2aaaa615,0x10009aaa,0x9ff9337d,0x5fffca88,0xeffc9880,0x3bfaa00b,
    0xcefcbaac,0xffffb887,0x3fff261c,0xfda881bf,0xfff731cf,0x5c4017df,
    0xd512dfff,0x2037ffff,0x0bfffc98,0x7667fec4,0xeb807dff,0xdecaacef,
    0x3ff264eb,0x5101bfff,0xb817fffd,0xeeeeffff,0x10ffffee,0xbfffffb7,
    0xbfff7305,0x3ff6a215,0x4effffff,0xff309d10,0x13ffe607,0x6400fc80,
    0x3fa601ff,0x81ffea07,0xf8806ffc,0x05fff304,0xf982fdc0,0x3f2001ff,
    0xd105fd01,0x6fec40ff,0x213fee00,0x5005fff9,0x2bee01df,0x0bffa200,
    0x007fffcc,0xffb00ff6,0x077fe4c5,0x37fc0fea,0x005fff70,0x3dfb01ee,
    0xe803fa00,0xfff100ff,0x6c01f500,0x3f2004ff,0x003ffe00,0x0bf907b8,
    0xfe883f44,0x20bf7005,0xc800fffb,0x200b200f,0x7cc05ffd,0x0fe603ff,
    0x2e07ff20,0x837dc7ff,0xff501ffc,0x0d7003ff,0x50007fe4,0x1ffdc01f,
    0xc803ffb0,0x037fcc05,0x7fe809d0,0xfe83d400,0xfd83cc02,0x8172000f,
    0x7c404ffe,0x2a006403,0xfb800eff,0x04e880ff,0x3a03ff90,0x03fea2ff,
    0x75407fea,0x5c00effc,0x00bff306,0x7fcc03b0,0x013fea06,0x3ffd005d,
    0xe803f100,0x8354007f,0xb87804ff,0x34c003ff,0x403fff10,0x4403805c,
    0x36001fff,0x006d84ff,0x7e407ff2,0xfc82645f,0x7fedaa07,0xfd835c06,
    0x0198001f,0xf8807ff4,0x003e607f,0x32017fea,0x007fe806,0x2ffe8354,
    0x0fff42c0,0x3ee02400,0x001f306f,0x009ffb00,0x2e2fff88,0x3ff2000f,
    0x00fff701,0x2d5027f4,0x2e04ffe8,0x000dff06,0x81ffdc00,0xb901fffa,
    0x007ffc00,0x1ffa00be,0x3f20d500,0xf30203ff,0x002000ff,0x0fa0fffa,
    0x1bfee000,0x477fd400,0x7e4001f9,0x0bffb01f,0xa803fe60,0x40fffe66,
    0x05ff986b,0x3fe20000,0x09ffdb06,0xffb800ba,0x7401ea03,0x8354007f,
    0x01efffe8,0x0005ffc8,0x83ffe600,0xf980006c,0x360001ff,0x8003fdff,
    0xff881ffc,0x05fb003f,0x7ffd46a8,0xffb86b81,0x6c000004,0x7d7c41ff,
    0x000f987f,0x4e81ffe2,0x800ffd00,0x3ffe206a,0x3f600dff,0x4000004f,
    0x03f35ffb,0x07ffd000,0x5fff8800,0x03ff9000,0x2200dff7,0xc86a803f,
    0x435c0fff,0xb9004ffd,0x405dffff,0xcbd43ffa,0x002e42ff,0x7cc17fec,
    0x00ffd000,0x7ec406a8,0xfd04ffff,0x0000009f,0x009d7ffd,0x00bff900,
    0x03ffea00,0x26fff200,0x01effea8,0x1aa00b90,0x1ae37fec,0xb0017ffa,
    0xff100bff,0xbff34d8d,0xf98002f8,0x2005c86f,0x354007fe,0xffffea80,
    0x027ff41e,0x7fcc0000,0x4c0000ef,0x00000fff,0x000bfff5,0xdddbbff9,
    0x07440059,0xfd106a80,0x7ec35cbf,0x7fe4007f,0x23ffb004,0x43ffa1f8,
    0x3fa00079,0xd0017c1f,0x06a800ff,0x77fffdc0,0x0017ff60,0x1ffe4000,
    0x3ffa2000,0x7f300002,0xc8005fff,0xa80001ff,0x881aa002,0x70d73fff,
    0x5c001fff,0xff5003ff,0x5ff91aa9,0xfa800172,0xd001ea5f,0x06b800ff,
    0x5fffc880,0x0001ffee,0x017fdc00,0x017ff200,0xfaa74400,0x3f2000ff,
    0x0b80001f,0xf301aa00,0xf50d75ff,0x7dc005ff,0x5ffe003f,0xfaffcc3d,
    0x7ffc0002,0xfe8009d0,0x41ae000f,0x0fffb802,0x0001fff5,0x05ff7000,
    0x07ffd400,0x6c5d8000,0x3f2005ff,0x0480001f,0x7dc03540,0xffd06cff,
    0x1ffdc009,0x1f5ff900,0x00f5ffd0,0xf39ff700,0x0ffd8001,0x03417200,
    0x3fa2ffd8,0x8000001f,0x10002ffb,0x06003fff,0xff881f70,0x3ff9002f,
    0x80010000,0xfff9006a,0x03ffe60d,0x001ffdc0,0x2e0dfff3,0x80004fff,
    0x005dfff8,0x2002ffb8,0x5003d03e,0x37fdc3ff,0x70005c00,0x360005ff,
    0x816004ff,0xfff501fa,0x03ff9001,0xf5000000,0x037ff400,0x2e00bffb,
    0x7f4003ff,0x5fff103f,0x3ff60000,0xff98002f,0x201f5005,0x0ffb804e,
    0x5002fff4,0x2ffb8007,0x06ffb800,0x1fcc12a0,0x2017ff60,0x40001ffc,
    0x1ee003ea,0x406ff880,0xfb804ffb,0x7fe4003f,0x001ffa00,0x006ff980,
    0x500bfea0,0x01ff405f,0x3f6213fa,0x005a804f,0x4003ffc8,0x1001fff8,
    0x00bf305f,0xd807fff1,0x7c0002ff,0x3fb000ff,0x4037cc00,0x980adff9,
    0x4c002ffd,0x027dc05f,0x00ffa000,0x417ff900,0x7404fca8,0x7ecc1cff,
    0x5f7fe406,0x00136e21,0x0017ffa2,0x33339ffd,0xffb73333,0x004ffb83,
    0x2207ffff,0x40004ffe,0x7e4407fd,0x5003dfff,0x3f72200d,0xbefedcef,
    0x805d0000,0x400001f8,0xb80000fa,0xeffefffe,0xfebae803,0x003fffef,
    0xffffffb7,0xfc98005b,0x00cfffff,0x7fffffdc,0xffffffff,0x3fffae7f,
    0xffd701df,0x3669ffff,0x0cefffff,0x00013000,0x40006000,0x0009aaa8,
    0x02800980,0x00050000,0x1aaaa980,0x55510600,0x55440003,0x00000009,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x55555555,0x55555555,
    0x2aaaaa65,0x2aaa0000,0x555511aa,0x40055555,0xaaaaaaa9,0x2aaaa60a,
    0xaaa981aa,0x099aaaaa,0x2aaaa200,0x5531aaaa,0x81555555,0xaaaaaaaa,
    0x55555531,0x55555555,0x3bbbbb23,0x86f76c42,0xaaaaaaa8,0xaaaaaaaa,
    0x555554c0,0x00999aaa,0x00816600,0xfffd0004,0xffffffff,0x2a2bffff,
    0x0004fffd,0x215dfff7,0xcffffc98,0x3262001a,0x441bffff,0x81befffb,
    0xfffffd98,0x002efffe,0x5bffff73,0x3fff2621,0xffb981bf,0x9310acff,
    0xdddddfff,0x7dc9fffd,0x83be00ff,0xeefffc98,0xfffeeeee,0x7ffecc42,
    0xefffefff,0xffb3002c,0x2c05fd10,0x07ba7fb0,0xdf511bfe,0x001fffd0,
    0xc80fffd0,0xd80005ff,0x27fc03ff,0x883ffb00,0x2e004ffe,0x7fec05ff,
    0x06ffb803,0xf500ffec,0x100ffd8b,0x17fe405f,0xfd80bea0,0x7f5cc0bf,
    0xfbb100df,0x0bff50ff,0xb7fcc1ea,0x20dff00f,0x4fffd869,0x37ffd400,
    0x000ffee0,0xc80bff20,0x7fe4002f,0x007fff01,0xf9013fea,0xbff5005f,
    0x401ffc80,0x81ffc45a,0x17fdc06b,0xff901e40,0x7ffec405,0xe83fe401,
    0x207e882f,0x7fc0b3fe,0x3f721606,0x37a000ff,0x7fdc05ff,0xffc80003,
    0x0005f701,0x3f203ff9,0x9ff5006f,0x801ffc80,0x7e404ff9,0xfd85801f,
    0xfb807d06,0x2039802f,0xfc802ffc,0x1fee00ef,0x101ffa00,0x40dff00c,
    0x3ffcdc81,0xbff3f300,0x002ffb80,0xa81ffc80,0xff90002f,0x07ffe603,
    0x9013fea0,0xff3003ff,0x01ffc809,0x42ff9808,0x7fdc00f9,0x7e401002,
    0xbffd002f,0x3003fdc0,0x1dddfffd,0x01bfe000,0x0dff1b90,0x17fe3760,
    0x0005ff70,0xfb83ff90,0x3ff20002,0x01fff101,0xc809ff50,0xff9801ff,
    0x00ffe404,0x5c8dfb00,0x402ffb80,0x02ffc800,0x201fff50,0x2a6007fb,
    0x002aaffd,0x9001bfe0,0x300bff2b,0x80bff13f,0x80002ffb,0x0bee1ffc,
    0x03ff9000,0x54017fe6,0x7fe404ff,0x04ff9801,0x0b80ffe4,0xf897fcc0,
    0x02ffb801,0x3ff20122,0x0fffe002,0x5c003fdc,0xff00007f,0xf15c800d,
    0xf16c80df,0x2ffb80bf,0x1ffc8000,0x900005f9,0x3ffa03ff,0x09ff5002,
    0x9801ffc8,0x7fe404ff,0xfd001d01,0x7dc01aed,0x2012e02f,0x36002ffc,
    0x0ff705ff,0x000ff700,0x9001bfe0,0x8817fecb,0x80bff12f,0x80002ffb,
    0x03fcaffc,0x83ff9000,0x2004ffd8,0x7e404ffa,0x4ff9801f,0x4cd7fe40,
    0xa800fda9,0x7003e9ff,0x533337ff,0xff9009d7,0x37fe4005,0xb8007fb8,
    0xff00007f,0x265c800d,0x44d905ff,0x7fdc05ff,0xffc80002,0x0000effe,
    0xdcbcffc8,0x54002dff,0x7fe404ff,0xeeeeeeee,0x6404ffee,0xffffffff,
    0xfdfd000f,0x3ffee001,0x4fffffff,0x002ffc80,0x7dc1ffee,0x07fb8007,
    0x00dff000,0x0fff45c8,0x0bff11fc,0x0002ffb8,0xffebffc8,0x7e40000e,
    0x04ffdcdf,0x809ff500,0x9999bffc,0x4ffa9999,0x220ffe40,0xff5000fa,
    0x17fdc009,0xfc804e98,0x3fee002f,0x000ff706,0x20000ff7,0x2e4006ff,
    0x8f717fea,0x7dc05ff8,0xfc80002f,0x0effe89f,0x87ff2000,0xa8002ffe,
    0x7fe404ff,0x04ff9801,0x0c80ffe4,0x8007fa00,0x12602ffb,0x800bff20,
    0xff705ffc,0xf703bb30,0x400ee40f,0x2e4006ff,0x87d07ff4,0x7dc05ff8,
    0xfc80002f,0x1dffd11f,0x87ff2000,0x4000fff8,0x7e404ffa,0x4ff9801f,
    0xa80ffe40,0x001b2000,0x04805ff7,0x2002ffc8,0xff703ffe,0xf70fffb0,
    0x01bfe60f,0xb9001bfe,0x3ea9ff50,0x202ffc40,0x80002ffb,0x3fa21ffc,
    0xfc8000ef,0x02ffd41f,0x9013fea0,0xff3003ff,0x01ffc809,0x8007d000,
    0x80002ffb,0x3e002ffc,0x0ff702ff,0xfb85fff9,0x009ff107,0x5c800dff,
    0x09d1fff0,0xfb80bff1,0x640a002f,0x7ff441ff,0x7fe4000e,0x003ffc81,
    0xf9013fea,0x9ff3003f,0x001ffc80,0x4000f980,0x80002ffb,0xf7002ffc,
    0x83fdc0df,0x3fdc3d9a,0x3fe00510,0xb82e4006,0xf880fdff,0x17fdc05f,
    0xff905880,0x1dffd103,0x80ffe400,0xf5001ffe,0x1ffc809f,0x404ff980,
    0x80001ffc,0xffb8004e,0x7e416002,0xfff8802f,0xf01fee01,0x331ffa81,
    0x01bfe000,0x3fe20b90,0x0bff105f,0x9003ffb8,0x40bff207,0x001effe8,
    0x3e605ff9,0xffa800ef,0x017fe404,0x32027fcc,0x544001ff,0x2e000d70,
    0x079002ff,0x3600bff2,0x3fdc04ff,0xdff30b50,0x4026ccb9,0x6c006ff8,
    0x407ff205,0x7e406ff9,0x00fb804f,0x7c405ffb,0xfd802fff,0x17fee02f,
    0xb013fee0,0xff3005ff,0x02ffd80b,0x0fffff40,0x03ffc800,0xffb00fa8,
    0x17ff4c05,0x5c07fdc0,0x1bff700c,0x2e017fe4,0xf1000fff,0x81be201f,
    0xd100fffb,0x53355dff,0x220dfb75,0x7ec04ffe,0xd100bfff,0xffd809ff,
    0x1bff601e,0x804ffe88,0xf100effc,0xfe8009ff,0x360003ff,0x99999dff,
    0xd106fc99,0x531359ff,0x2001bff9,0x00e41ffc,0x07fdc044,0xfffffeb8,
    0xfffb302d,0x905905bf,0x5bfffffd,0x3fffff26,0xffffffff,0x7ffecc3f,
    0x3620ceff,0xefffffff,0xfffffb31,0xfff1019d,0x3ff227ff,0xb31cefff,
    0x19dfffff,0x7ffffe44,0xfffb32ce,0x10019dff,0x32600057,0xfffffffe,
    0x43ffffff,0xffffffd9,0x01acdeff,0xbffffd90,0x04c00005,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x20000000,0xaaaaaaa9,0x000009aa,0x200000aa,0xcb8803e9,0x060001bc,
    0x46200000,0x80000009,0x00000400,0x00000200,0x1f77775c,0xec97bb66,
    0x7775c4ee,0x5eeeec85,0x3dddddb1,0x222f774c,0xdeffffda,0x001effed,
    0x00002f40,0xf7013fa2,0x009fffff,0x000007e0,0xdfaa7e44,0xeda80001,
    0xfea85cef,0xd9803dfe,0x2601beff,0x200dfffd,0x03dfeeb9,0xf807ffe6,
    0x886ff885,0xbff707fe,0x220bff90,0x17fec05f,0x006ffdc4,0x000ffcc0,
    0x409ff900,0xfffddffa,0x01f8004f,0x6fecc000,0x0177e4c1,0xf510eb80,
    0x3ea4fa8d,0x433ee03f,0x2ec81ffb,0xf305ffb1,0x817fa217,0x1f101ffb,
    0x7e41bf60,0x741bfa07,0x801f304f,0x3e602ffc,0xffc8006f,0xff500004,
    0x833e209f,0x001fffb8,0xb80000fc,0x5c400cfe,0x3e000bff,0x07f46b82,
    0x17d41fee,0x03ee37f4,0x4f883bfa,0xf106ff88,0xc816e09f,0x40ff706f,
    0x7fb80ffa,0xff900970,0x01ffc805,0x03fffe20,0xfd5f1000,0xfc816a09,
    0x00fc004f,0x07df9100,0x073faa00,0x99a09f50,0x07fd40ff,0x7fe41be2,
    0x3f20bf10,0x5c07fa2f,0x0ff902ff,0x06fc807a,0x3ff80ff7,0x1e82ffa8,
    0x402ffc80,0x2e004ffa,0x0003ffce,0x904fea6c,0x02ffcc01,0x260007e0,
    0x00001dfd,0x2605bfb3,0x1e4283ff,0x3ee07fcc,0xcfb86604,0xffcaaaaa,
    0x7c40ff34,0x85ff306f,0x837e4069,0x37e407fb,0x1a637fec,0x2017fe40,
    0x3a005ffa,0x0006ff8b,0x004fe9ae,0xf0013fa0,0x67f54003,0x91000000,
    0xfff817df,0x3b26001e,0x01fe41ff,0x55559f90,0x3ee35555,0xd03ff406,
    0x6403c8df,0x80ff706f,0x2ba21ff9,0x400f21ff,0x7ec02ffc,0x21f5002f,
    0x88001ffd,0x0013fa1f,0x7c002fe8,0x0bff9801,0x71000000,0x7ffcc7fd,
    0x37aa00ef,0x7f41ff9a,0x00bf6004,0x7ec06fd8,0x23ff501f,0x37e400f8,
    0xfe807fb8,0x8a7fcf24,0x5ff9000f,0x007ffd40,0x17fea4d8,0x9fd0fa00,
    0x207fc000,0xeeeeeeea,0xeeeeeeef,0x017ff914,0xfb300000,0xfffc883b,
    0x262fd82f,0x03ff41ff,0x74007fd0,0x07fe407f,0x012e9ff0,0x3fdc1bf2,
    0x0f8bfdc0,0x8016aff9,0x5d4c3ffc,0xf3000dff,0x000ffe81,0x013fa16e,
    0x54427cc0,0xbfaaaaaa,0x81aaaaaa,0x0001cfea,0x00cfea80,0x88fffecc,
    0x0ffcc1fe,0x21007ff6,0xfb0806fd,0x037dc01f,0x007a3fee,0x3fdc1bf2,
    0x2657fc40,0x003b5ff1,0x7fffffe4,0x4004ffff,0x03ffb85c,0x9fd01f30,
    0x003f6000,0x4c0007e0,0x40002dfd,0x300befb8,0x329ff501,0x41ff985f,
    0x4aa03ffc,0x4e602ffb,0x3f202ffc,0x36ffc404,0xf907fb80,0x3f7f600f,
    0x00377ec0,0xba88fff2,0x8802dffd,0x06ff882f,0x13fa05d0,0x000be600,
    0x220000fc,0x4c003efc,0x4b802dfc,0x17fabfb0,0xff507fe6,0x261d101d,
    0x21d01eff,0x3f605ff8,0x02ffd802,0xec83ff50,0xffa800ff,0x003ffa84,
    0xf7017fe4,0x06b809ff,0xb900bff2,0x40027f40,0x07e0004e,0x7f5c4000,
    0x33faa00c,0x203ee001,0x41ff94fb,0x6c51ffd8,0x7d711eff,0x89bfffd8,
    0x0ffe43da,0xf98027c4,0x3ffe2007,0xeffbbebc,0x80ffc00c,0x7e4000ff,
    0x7ffd402f,0x3ffffa02,0x05ffffff,0x2aaaafea,0x0aadffaa,0x40005d80,
    0xa800001f,0xff711dfe,0xbf700017,0xff30fe83,0xdff5db9f,0x7fff441b,
    0xfe885fff,0x80ffffff,0x17aa1ffd,0xa8009d00,0xdf72ffff,0x40b90017,
    0xffc8005c,0x04fff802,0x333333f5,0x201ffd33,0xfffffffb,0x01ffffff,
    0x7c00035c,0x26000001,0x0005d75c,0xecdffeb8,0x67ffdc1c,0xb103dfd0,
    0x4409ffff,0x00dffffd,0x33bbbff2,0x0004c000,0x000cc198,0x00188022,
    0xd802ffc8,0x009b05ff,0x32a09ff5,0xfccccccc,0x2a00ccef,0x1f80000e,
    0x00000000,0x0a620800,0x44004060,0x5310009a,0x0054c001,0x00000000,
    0x80000000,0xfe802ffc,0x000f883f,0x74000fff,0x00e9804f,0x0001b000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0xf8805ff9,
    0x005d80ff,0x4000fff2,0x075404fe,0x00000160,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0xe880bff6,0x03f884ff,0x001ffea0,
    0x5f5027f4,0xd7533333,0x02000409,0x00200000,0x777774c0,0x50eeeeee,
    0x229ddddd,0x0402eeed,0xc8038800,0x50b620be,0x2624c83b,0x99999999,
    0x01999999,0x3b608001,0xcffe880e,0xffc9989a,0x007fd02f,0x002fffcc,
    0xffa827f4,0xffffffff,0xb17ea81f,0x54fb50bf,0x7ecc4efe,0x9faa00df,
    0x2a02efdb,0xdaaaaabf,0x7ff444ff,0x20077c46,0xfd8004f9,0x8fffe601,
    0x9bfa0ffc,0xfff52ffa,0xffffffff,0xea8bffff,0x14c01cff,0x7ecc7ff1,
    0xffffffff,0xfb80bdef,0x2202efff,0x4ffffffd,0x2613fa00,0xffffffff,
    0x7f5c6fff,0x23fffd7f,0xbd97ffea,0x37ea7fff,0xfeb85fff,0xfffdf97f,
    0x7c40ea03,0x3ffd106f,0x7dc007dc,0x2efd4006,0x6cdfff10,0xb9ffe0ff,
    0x800002ff,0xefebabea,0x7cc0d80b,0x00000005,0x00000000,0x7fec0000,
    0xfd85c99c,0x3ff622cf,0x817fdc4b,0x3e62cffd,0x3a03705f,0x3fe600ff,
    0x32603f35,0x0ee29f31,0x405f17d0,0x1ff279a8,0x17fd4bfd,0x406c0000,
    0xebbdffc9,0x0001f505,0x00000000,0x00000000,0x5c01ffdc,0x3ffa81ff,
    0x3f207ff0,0x007fd81f,0x5c017fe4,0x3603ebff,0xfd15f2ff,0x6a9ae01f,
    0x1bee4b80,0x0ffc49f9,0x00e20000,0x805dfb71,0x0000002b,0x00000000,
    0x3ee00000,0x20ff7007,0x9fd02ff9,0x7dc1fee0,0x13fea007,0x405ffd80,
    0xeadbffe8,0x83f103ff,0xf30f404e,0x3fc2fb89,0x55555551,0x55555555,
    0x10000003,0x00000000,0x00000000,0x03fdc000,0xff107fb8,0x5c13fa05,
    0x01ff507f,0x800dff10,0x51005ff8,0xd8037bfb,0xc880f984,0x3e61fc42,
    0xddd53741,0xdddddddd,0x0009dddd,0x00000000,0x00000000,0xb8000000,
    0x0ff7007f,0x7f40bfe2,0x2a0ff704,0xffe800ff,0x7ffc4000,0x77654403,
    0x03ea02de,0xe80e62e4,0x13207c41,0x00000000,0x00000000,0x00000000,
    0xfb800000,0x20ff7007,0x9fd02ff8,0x7d41fee0,0x17fe400f,0x7fedf400,
    0xb3fff500,0x7d07ffb3,0xb0017c40,0x00770d01,0x00000000,0x00000000,
    0x00000000,0x3fdc0000,0xf107fb80,0x413fa05f,0x1ff507fb,0x0827fd40,
    0x37fc5720,0x25f0efd8,0x4035c7fd,0x0000006b,0x00000000,0x00000000,
    0x00000000,0xf7000000,0x41fee00f,0x9fd02ff8,0x7d41fee0,0x0dff100f,
    0x2a0ea824,0x30b883ff,0x3f10d49f,0x0000fa00,0x00000000,0x00000000,
    0x00000000,0x00000000,0x7dc01fee,0x205ff107,0x0ff704fe,0x7f403fea,
    0x3e21600f,0x401ffd81,0x000006fb,0x00000000,0x00000000,0x00000000,
    0x00000000,0x0ffb8000,0x880ffb80,0x0bfd02ff,0x7fd41ff2,0x302ffc80,
    0x305e88bb,0x7cc01dff,0x00000004,0x00000000,0x00000000,0x00000000,
    0x00000000,0x802ffd80,0xffa81ffc,0x3a0dff04,0x2ffc80ff,0x7fffffcc,
    0x2a5fffff,0x7f4c5fff,0x00004fff,0x00000000,0x00000000,0x00000000,
    0x00000000,0x2a000000,0x81dffffd,0x8cffffda,0x2dffffd9,0x27dfffd9,
    0x8cefffea,0x0cffffda,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,
};

static signed short stb__times_34_usascii_x[95]={ 0,3,1,0,1,1,1,1,1,0,2,0,1,1,
2,0,1,3,0,1,0,1,1,1,1,1,2,2,0,0,0,1,1,0,0,1,0,0,0,1,0,0,0,0,
0,0,-1,1,0,1,0,1,0,0,0,0,0,0,0,2,0,1,0,-1,1,1,-1,1,1,1,1,0,0,0,
-3,0,0,0,0,1,-1,1,0,1,0,0,0,0,0,0,0,4,2,2,0, };
static signed short stb__times_34_usascii_y[95]={ 27,6,6,6,4,6,6,6,5,5,5,8,24,18,
24,5,6,6,6,6,6,6,6,6,6,6,12,12,9,13,9,6,5,6,6,6,6,6,6,6,6,6,6,6,
6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,5,6,6,32,6,12,5,12,5,12,5,12,5,5,
5,5,5,12,12,12,12,12,12,12,8,13,13,13,13,13,13,5,5,5,16, };
static unsigned short stb__times_34_usascii_w[95]={ 0,4,10,15,13,24,22,4,9,9,12,17,6,8,
4,9,14,9,15,12,15,13,14,13,13,14,4,5,17,17,17,12,27,22,19,19,22,19,16,21,22,10,12,23,
19,27,23,20,16,21,21,15,18,22,22,29,22,22,18,8,9,7,14,17,6,13,16,12,15,12,13,15,16,8,
9,16,8,24,16,14,16,15,11,10,9,16,16,22,15,16,14,9,2,10,17, };
static unsigned short stb__times_34_usascii_h[95]={ 0,22,9,22,26,22,22,9,29,29,14,17,9,4,
4,23,22,21,21,22,21,22,22,22,22,22,16,21,16,7,16,22,29,21,21,22,21,21,21,22,21,21,22,21,
21,21,22,22,21,28,21,22,21,22,22,22,21,21,21,28,23,28,12,2,6,16,23,16,23,16,22,22,22,22,
29,22,22,15,15,16,22,22,15,16,20,15,15,15,14,21,14,29,29,29,6, };
static unsigned short stb__times_34_usascii_s[95]={ 252,18,201,79,122,95,120,196,63,73,161,
76,189,136,251,146,143,225,60,158,44,171,185,200,214,228,251,235,94,212,112,
1,1,21,1,152,202,182,148,38,125,114,243,68,48,20,14,222,237,83,92,
136,1,113,90,60,214,172,195,113,136,105,174,145,248,141,156,155,173,168,65,
49,32,23,29,1,243,88,113,181,205,189,76,130,241,213,196,230,145,165,130,
53,50,39,230, };
static unsigned short stb__times_34_usascii_t[95]={ 1,31,117,31,1,31,31,117,1,1,117,
99,117,25,94,1,31,77,99,31,99,31,31,31,31,31,77,77,99,117,99,
54,1,99,99,54,77,77,77,54,77,77,31,77,77,77,54,1,54,1,77,
54,77,54,54,54,54,54,54,1,1,1,117,25,117,99,1,99,1,99,31,
31,31,31,1,31,1,117,117,99,1,1,117,99,77,99,99,99,117,77,117,
1,1,1,117, };
static unsigned short stb__times_34_usascii_a[95]={ 123,164,201,246,246,409,382,89,
164,164,246,277,123,164,123,136,246,246,246,246,246,246,246,246,
246,246,136,136,277,277,277,218,452,355,328,328,355,300,273,355,
355,164,191,355,300,437,355,355,273,355,328,273,300,355,355,464,
355,355,300,164,136,164,231,246,164,218,246,218,246,218,164,246,
246,136,136,246,136,382,246,246,246,246,164,191,136,246,246,355,
246,246,218,236,98,236,266, };

// Call this function with
//    font: NULL or array length
//    data: NULL or specified size
//    height: STB_FONT_times_34_usascii_BITMAP_HEIGHT or STB_FONT_times_34_usascii_BITMAP_HEIGHT_POW2
//    return value: spacing between lines
static void stb_font_times_34_usascii(stb_fontchar font[STB_FONT_times_34_usascii_NUM_CHARS],
                unsigned char data[STB_FONT_times_34_usascii_BITMAP_HEIGHT][STB_FONT_times_34_usascii_BITMAP_WIDTH],
                int height)
{
    int i,j;
    if (data != 0) {
        unsigned int *bits = stb__times_34_usascii_pixels;
        unsigned int bitpack = *bits++, numbits = 32;
        for (i=0; i < STB_FONT_times_34_usascii_BITMAP_WIDTH*height; ++i)
            data[0][i] = 0;  // zero entire bitmap
        for (j=1; j < STB_FONT_times_34_usascii_BITMAP_HEIGHT-1; ++j) {
            for (i=1; i < STB_FONT_times_34_usascii_BITMAP_WIDTH-1; ++i) {
                unsigned int value;
                if (numbits==0) bitpack = *bits++, numbits=32;
                value = bitpack & 1;
                bitpack >>= 1, --numbits;
                if (value) {
                    if (numbits < 3) bitpack = *bits++, numbits = 32;
                    data[j][i] = (bitpack & 7) * 0x20 + 0x1f;
                    bitpack >>= 3, numbits -= 3;
                } else {
                    data[j][i] = 0;
                }
            }
        }
    }

    // build font description
    if (font != 0) {
        float recip_width = 1.0f / STB_FONT_times_34_usascii_BITMAP_WIDTH;
        float recip_height = 1.0f / height;
        for (i=0; i < STB_FONT_times_34_usascii_NUM_CHARS; ++i) {
            // pad characters so they bilerp from empty space around each character
            font[i].s0 = (stb__times_34_usascii_s[i]) * recip_width;
            font[i].t0 = (stb__times_34_usascii_t[i]) * recip_height;
            font[i].s1 = (stb__times_34_usascii_s[i] + stb__times_34_usascii_w[i]) * recip_width;
            font[i].t1 = (stb__times_34_usascii_t[i] + stb__times_34_usascii_h[i]) * recip_height;
            font[i].x0 = stb__times_34_usascii_x[i];
            font[i].y0 = stb__times_34_usascii_y[i];
            font[i].x1 = stb__times_34_usascii_x[i] + stb__times_34_usascii_w[i];
            font[i].y1 = stb__times_34_usascii_y[i] + stb__times_34_usascii_h[i];
            font[i].advance_int = (stb__times_34_usascii_a[i]+8)>>4;
            font[i].s0f = (stb__times_34_usascii_s[i] - 0.5f) * recip_width;
            font[i].t0f = (stb__times_34_usascii_t[i] - 0.5f) * recip_height;
            font[i].s1f = (stb__times_34_usascii_s[i] + stb__times_34_usascii_w[i] + 0.5f) * recip_width;
            font[i].t1f = (stb__times_34_usascii_t[i] + stb__times_34_usascii_h[i] + 0.5f) * recip_height;
            font[i].x0f = stb__times_34_usascii_x[i] - 0.5f;
            font[i].y0f = stb__times_34_usascii_y[i] - 0.5f;
            font[i].x1f = stb__times_34_usascii_x[i] + stb__times_34_usascii_w[i] + 0.5f;
            font[i].y1f = stb__times_34_usascii_y[i] + stb__times_34_usascii_h[i] + 0.5f;
            font[i].advance = stb__times_34_usascii_a[i]/16.0f;
        }
    }
}

#ifndef STB_SOMEFONT_CREATE
#define STB_SOMEFONT_CREATE              stb_font_times_34_usascii
#define STB_SOMEFONT_BITMAP_WIDTH        STB_FONT_times_34_usascii_BITMAP_WIDTH
#define STB_SOMEFONT_BITMAP_HEIGHT       STB_FONT_times_34_usascii_BITMAP_HEIGHT
#define STB_SOMEFONT_BITMAP_HEIGHT_POW2  STB_FONT_times_34_usascii_BITMAP_HEIGHT_POW2
#define STB_SOMEFONT_FIRST_CHAR          STB_FONT_times_34_usascii_FIRST_CHAR
#define STB_SOMEFONT_NUM_CHARS           STB_FONT_times_34_usascii_NUM_CHARS
#define STB_SOMEFONT_LINE_SPACING        STB_FONT_times_34_usascii_LINE_SPACING
#endif

