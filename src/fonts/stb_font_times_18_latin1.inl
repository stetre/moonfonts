// Font generated by stb_font_inl_generator.c (4/1 bpp)
//
// Following instructions show how to use the only included font, whatever it is, in
// a generic way so you can replace it with any other font by changing the include.
// To use multiple fonts, replace STB_SOMEFONT_* below with STB_FONT_times_18_latin1_*,
// and separately install each font. Note that the CREATE function call has a
// totally different name; it's just 'stb_font_times_18_latin1'.
//
/* // Example usage:

static stb_fontchar fontdata[STB_SOMEFONT_NUM_CHARS];

static void init(void)
{
    // optionally replace both STB_SOMEFONT_BITMAP_HEIGHT with STB_SOMEFONT_BITMAP_HEIGHT_POW2
    static unsigned char fontpixels[STB_SOMEFONT_BITMAP_HEIGHT][STB_SOMEFONT_BITMAP_WIDTH];
    STB_SOMEFONT_CREATE(fontdata, fontpixels, STB_SOMEFONT_BITMAP_HEIGHT);
    ... create texture ...
    // for best results rendering 1:1 pixels texels, use nearest-neighbor sampling
    // if allowed to scale up, use bilerp
}

// This function positions characters on integer coordinates, and assumes 1:1 texels to pixels
// Appropriate if nearest-neighbor sampling is used
static void draw_string_integer(int x, int y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0, cd->t0); glVertex2i(x + cd->x0, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t0); glVertex2i(x + cd->x1, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t1); glVertex2i(x + cd->x1, y + cd->y1);
        glTexCoord2f(cd->s0, cd->t1); glVertex2i(x + cd->x0, y + cd->y1);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance_int;
    }
    glEnd();
}

// This function positions characters on float coordinates, and doesn't require 1:1 texels to pixels
// Appropriate if bilinear filtering is used
static void draw_string_float(float x, float y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0f, cd->t0f); glVertex2f(x + cd->x0f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t0f); glVertex2f(x + cd->x1f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t1f); glVertex2f(x + cd->x1f, y + cd->y1f);
        glTexCoord2f(cd->s0f, cd->t1f); glVertex2f(x + cd->x0f, y + cd->y1f);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance;
    }
    glEnd();
}
*/

#ifndef STB_FONTCHAR__TYPEDEF
#define STB_FONTCHAR__TYPEDEF
typedef struct
{
    // coordinates if using integer positioning
    float s0,t0,s1,t1;
    signed short x0,y0,x1,y1;
    int   advance_int;
    // coordinates if using floating positioning
    float s0f,t0f,s1f,t1f;
    float x0f,y0f,x1f,y1f;
    float advance;
} stb_fontchar;
#endif

#define STB_FONT_times_18_latin1_BITMAP_WIDTH         256
#define STB_FONT_times_18_latin1_BITMAP_HEIGHT         98
#define STB_FONT_times_18_latin1_BITMAP_HEIGHT_POW2   128

#define STB_FONT_times_18_latin1_FIRST_CHAR            32
#define STB_FONT_times_18_latin1_NUM_CHARS            224

#define STB_FONT_times_18_latin1_LINE_SPACING          12

static unsigned int stb__times_18_latin1_pixels[]={
    0x00000200,0x00000002,0x20002108,0x18800000,0x4000c400,0x00980009,
    0x26000110,0x80062000,0x7b930008,0x171a8177,0x11001300,0x13100440,
    0x01fd40a6,0x3d402f88,0x3b21f993,0xdddda83c,0x8a42a201,0x3090c01a,
    0x40959999,0x1aa9abb9,0x54007d00,0x0754006e,0x4000f980,0x3fa000ea,
    0x801f3002,0x8299fffb,0xf9807f4d,0x807f4400,0x911ae07a,0x1d400fa0,
    0x90f88180,0xf9877207,0x82c48b02,0x03aa2428,0x980e60d7,0x20048802,
    0x06400754,0x9000ae00,0x2c4dc001,0xff805500,0x000299ff,0x98c801b8,
    0x06c07204,0x801ec0e4,0x87c40002,0xa80fb83c,0xd123c40f,0x5240e883,
    0x1261a03f,0x00200660,0x00800204,0x00800100,0x08002040,0x4cffffc0,
    0x4c426622,0x10400201,0x26010080,0x40a8bd86,0x03310998,0x3c87c414,
    0x8bf104f8,0x83f120f9,0x817a484a,0x45542c41,0x1deda8e3,0x2a0736e2,
    0x5401ddcd,0x5401ddcd,0xda81ddcd,0x336e21de,0x443bdb51,0x02e01cdb,
    0x533fffb0,0x98b62fcc,0x3dcccdec,0x33337b26,0x8f7b263d,0x1f83dec9,
    0x327f6dec,0xd882d8bf,0x8790f887,0x21be03f9,0x40f8920f,0x09f1483c,
    0x64760dc0,0x203f70e6,0x2a0dc80e,0x541b902e,0x541b902e,0xd01fb82e,
    0x1d01fb81,0x6c404f80,0x35c299ff,0x910be616,0x22442f98,0x04f884f8,
    0x1f25d87f,0x1ea058d7,0x2a1e43e2,0xb11f602f,0x0ba06c48,0xb001fd4a,
    0x439363c8,0xf70b00fa,0xfb81f501,0x7dc0fa80,0x7d40fa80,0x01f50b00,
    0x00fd5016,0x97c14cdc,0x182f8829,0x7c0c17c4,0x13a07f03,0x3e17cc7b,
    0x43cc0532,0xf98790f8,0x0a89b603,0x7c46a224,0x800fe201,0x1c3f1aa5,
    0x7c2c03ea,0x09f17e04,0xf813e2fc,0x85807d45,0xd80b00fa,0x333002f9,
    0x4412d705,0x17c4042f,0x3f81fc02,0x7c3d89d0,0x4c04b5c2,0x0790f887,
    0x551f409f,0x3e653090,0x8802f401,0x227a8f24,0x45807d42,0x99fa03f9,
    0xf99fa03f,0x1f51fa03,0x403ea160,0x036ce605,0xf8829998,0x445f104b,
    0x1222f884,0xd03f81fc,0x207c3d85,0x3cc04bf8,0xd83c87c4,0x4883f307,
    0x2f887224,0x4403f218,0xbb11f920,0x403ea05c,0xfb017d45,0x4fb017d4,
    0x51f602fa,0x3ea1601f,0xa8640b00,0x2999801f,0x3e201f90,0xf885eccd,
    0x7f05eccd,0x207c0fe0,0x7e41664d,0x7c43cc00,0x113a0790,0x4483e07b,
    0x1241740f,0x258330dd,0x174caace,0x8b00fa82,0x99f603f9,0xf99f603f,
    0x1f51f603,0x403ea160,0xf333b105,0x05333009,0x42f88162,0x81c2f883,
    0xd107f03f,0x01757db0,0x21e60162,0x220790f8,0x101ecbec,0x83f1241f,
    0x76c4484c,0x30b82bbd,0x642b2659,0x22c07e60,0x897a04f8,0xf897a04f,
    0x3f317a04,0x407e6160,0x95557705,0x2999801f,0x17c40550,0x010be202,
    0x641fc0fe,0x4008bd83,0x8869802a,0xe980790f,0x891e603f,0x0242c41f,
    0x8024401b,0x5817c44a,0x83f307c8,0xc83f307c,0xf883f307,0x05f10b02,
    0x1fc42c16,0x2c0a6660,0x10c0be20,0x07f0605f,0x1ec0e0fe,0x09500580,
    0x200f21f1,0x91a02fd8,0x04855068,0x809100f6,0x570bb049,0x4d889d10,
    0x26c44e88,0x13622744,0xd815c2ec,0x02b82b85,0x4ccc01fb,0x1007bea2,
    0x7c41905f,0x0fe20c82,0x20188fe2,0x07bea04e,0x221bae88,0x55b90fba,
    0x30379100,0x54055245,0x00ecc121,0xdb98ddc4,0x65deec02,0x765f6403,
    0x765f6402,0x765f6402,0x65deec02,0x65deec03,0x4c1cfa83,0x11101dfe,
    0x26005443,0x5ecccefc,0x3333bf26,0x8bbf225e,0x4012efc8,0x15101aa9,
    0x33105500,0x0004cc43,0x00250802,0x80000504,0x44001aa9,0x0004c000,
    0x01300026,0x44000880,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x20026000,0x5544023b,0x01881403,0x20047710,0x98005138,0x02e35000,
    0x26000980,0x70013000,0x222e0047,0x20035003,0x4e205138,0x00000029,
    0x10040088,0xd7040000,0xdfea980d,0xa8074900,0x5003f101,0xa801bfd5,
    0x22007b8f,0xf19d001f,0x003aa005,0x6dc03f4c,0xfd5301dd,0x557c401b,
    0x05cdc00f,0x83dc7cc0,0x6546c8fb,0xf704880b,0x40dabc80,0x201203fa,
    0x446a00eb,0x13040574,0x12028740,0x4c100730,0x00041000,0x01040055,
    0x29000640,0x22ab203a,0x004c1058,0x71700104,0x20082001,0x216af100,
    0x4407200c,0x80fa1326,0x2006c01a,0x6dc41024,0x0e6dc40d,0x12e201d9,
    0x336a0020,0x66d401dd,0x801001dd,0x2e21deda,0x800201cd,0x153f0040,
    0x4c01700e,0x3dcccdec,0x2e0016c0,0x8f7b2600,0x02a8f36a,0x35cb7028,
    0x881201f4,0x3b264801,0xd05f983d,0x6c0ee981,0x3b263eba,0xc83dcccd,
    0x640baa0d,0xb50baa0d,0x676443bd,0x07407ee1,0x170002e0,0x010ade80,
    0x17cc04f8,0x009f0122,0x27c404f8,0x0913cda6,0x49901a88,0x0a8be83d,
    0x806a2048,0x8827c41a,0xa4c583fe,0x2f2971fc,0x12217cc5,0x81f501f7,
    0x40fa80fb,0xa85984fa,0x9f00b00f,0x4c04f800,0x7ea801ff,0x00c17c40,
    0x75400fd5,0xb443f807,0xbc80324a,0xbd4c84d8,0x0ffb73a0,0x9b179035,
    0x881fc120,0x322c2fcc,0x14575320,0x7c182f88,0x09f17e04,0x207e42fc,
    0xb00fa80c,0x2007ea80,0xfe8807ea,0x017cec02,0x6c0085f1,0xf3b002f9,
    0xb983f805,0x204c350b,0x2990d70f,0x2e4e85e9,0xb87c240f,0x40fe0906,
    0x22c3fb48,0x5d75623c,0x4085f100,0x99fa03f9,0x221fa03f,0x7d40ea5e,
    0xf9d80b00,0x05f3b002,0x2607fb50,0x17c40db3,0x6d9cc091,0x80db3980,
    0x3648803f,0x87da81d9,0x7d07e64c,0xa81217c4,0x7f01a87d,0x87745220,
    0xb3a9fcc5,0x8be20c9b,0xb017d448,0xfb017d4f,0x502cfea0,0x3981601f,
    0x367300db,0x07c8a806,0x4407ea19,0x205eccdf,0xc803f50c,0x1fc03f50,
    0x96ed5240,0x4c87a8c9,0x7d0fa1fc,0x5464c1a8,0x40fe0487,0x42d7e248,
    0x53ee3cf9,0x666fc429,0xb01fcc5e,0xfb01fccf,0x50067e40,0x0c81601f,
    0x50c803f5,0x42a3103f,0x4ccec41f,0x385f104f,0x9f333b10,0x7cccec40,
    0x3700fe04,0x4f16aadc,0x1744c87a,0x481f88fa,0x0487a9e2,0x2a2440fe,
    0x89f305cf,0x2f884ffe,0xe813e21c,0x5e813e25,0xf3013e20,0x4ec41603,
    0x36204f99,0x4884f999,0x5770d315,0xf101f955,0x55770085,0x2ee01f95,
    0xf00fcaaa,0x5aa1c407,0x5f21f55b,0x43ceb360,0x52416a3e,0x1a85f21f,
    0x42440fe0,0x8f3087fb,0x85f1008b,0x3f307c80,0x03f307c8,0x17c404f8,
    0x55577058,0x2aee01f9,0x7440fcaa,0x8581bbcd,0x02f883f8,0x03f88583,
    0x3e07f10b,0x23a21203,0x3eb7fa2d,0x2b673e62,0x0bbbea81,0x56ff4350,
    0x07f0122f,0x3c3ec122,0x3e200d49,0x22744302,0x44e884d8,0x04f804d8,
    0xb02b85d8,0x21607f10,0x037103f8,0x207ec0ae,0x2e0c82f8,0x2b81fb02,
    0x3f881fb0,0x02a20110,0x01000002,0x00401020,0x5d9107f1,0x8aa6e1a0,
    0xc82f8803,0x2ecbec80,0x1765f640,0xbb004f80,0x0ae07977,0x40ae07ec,
    0x2a0100fd,0x6ff4c1cf,0x999df931,0x20e7d4bd,0x9f51dfe9,0x11dfe983,
    0x00005df9,0x00000000,0x3f220000,0x1008002e,0x9df93000,0x0980bd99,
    0x88004c00,0x22002efc,0x3073ea00,0x33ea3bfd,0x00eff4c1,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x20000000,0x00000001,
    0x00000000,0x00000000,0x00000020,0x00000000,0x00080000,0x40d30000,
    0x009034c4,0x33b20530,0x00957001,0xf3005997,0x9807d401,0x204beccb,
    0x401ddcda,0x664c00fa,0x3f304acc,0x2607d880,0x2602bbbb,0x7999502f,
    0x41cba985,0xabbca82e,0x777302a8,0x64d5c057,0x2205c900,0x0641e02f,
    0x7f01a83c,0x20fb8b98,0x3a27d9bc,0x59807383,0xb01d401a,0xf503a603,
    0x7541b901,0xd5007202,0x05706b81,0x41541ea0,0x2a12a038,0x4cb0fa24,
    0x4c89f11f,0x82a82f44,0x40bd3038,0x024c1248,0x21e0730f,0x3b093048,
    0x07cc10f4,0x805710b1,0x02801a4c,0xb80fcc0a,0x7d407dc0,0x1fa80500,
    0xa800a0d0,0x95331a87,0x7414071b,0x41f11cc2,0x0fb8fe3f,0x26a07ec4,
    0x8712cada,0x8a605b29,0x48780a04,0x140321e0,0x0b300344,0x401a8813,
    0x3002c8fc,0x3f40cc03,0x7c09f020,0x04c42665,0x510302f4,0x2aaa2015,
    0x34857387,0x740aa883,0x5f0a0c0e,0x1909f17c,0x7cf338bf,0x3f730331,
    0x6dd5e54c,0x02621332,0x23c0171e,0x3ea1402a,0x8501b000,0x2604d8bc,
    0x83df50df,0x5cc6c8b9,0x013e26c8,0x9fa03f98,0xf11b24e8,0x546c4009,
    0x74cecc2e,0x1c069447,0x4c5d51b1,0x8b7003ff,0x1c87f31e,0x279944fd,
    0xb9c98e1f,0x2676626f,0x649d10ab,0x13997546,0x48975415,0xf88fb114,
    0x3bf620c2,0x70f8fb10,0x83bb220d,0x917c480f,0x107f52f8,0x0bea19d9,
    0xd526c7d8,0x3a003fa8,0x5c7b1ee1,0x20354547,0x4c7b87a3,0x07401efe,
    0x551fd436,0x3e6153ec,0x45b1c1db,0x819240fb,0x4901aa4d,0x41900ebc,
    0x7ec3d47a,0x7f300b8a,0x87da83d4,0x554fa8d9,0x35555d10,0x46aaaba2,
    0x45f304f8,0xb1f603f9,0x0fe23549,0x3f307cc0,0x4c7a83e2,0x4ce00f89,
    0x2e07e60f,0x903502ff,0x7439a7cc,0x747cc667,0x260f89c1,0xd848e22f,
    0x81b81aa4,0x2e22981c,0x7e443cc6,0xf32e402e,0xe87a8c98,0x5412bf63,
    0xdd01ea07,0x4f887e60,0x549b17a0,0xf5005e86,0x41f53f81,0x187b387a,
    0x7f03ea31,0x0a0fd102,0x091bf11c,0x26f338bf,0x03ea310e,0x33376a7f,
    0x6a9363ce,0x24120710,0x40f31a71,0x262b800c,0x4c7a9e27,0x407fe22f,
    0x2f88c2f8,0xf303f70c,0x3f307c83,0x321aa4d8,0x3e21100f,0x22f88fc2,
    0xcb88b87a,0x17c471aa,0x83d4247e,0x0dfc8100,0x2e2e0fcc,0x4471b71f,
    0x2170fc1f,0x1aa4d838,0x41903824,0x1e64fccb,0x234085c8,0xbe43ea79,
    0x3621bf10,0xbfd871ef,0x22ff61b8,0x303b621b,0x444e883f,0xfb15c84d,
    0x8330dd10,0x1bd1a65d,0x4105c1ee,0x4d32ec0b,0x1c425c1e,0x6c27c0a8,
    0x02e01703,0xa9234cbb,0x0fb15c81,0x3bbd8837,0x3d4680e6,0x77c42c88,
    0x3a3d40cc,0x7dc2fadf,0xffe98cef,0x2177e441,0xb702efc8,0x2019b759,
    0x302ecbec,0x107f79df,0x10577bdb,0xd981b7dd,0x7703fcdf,0xd1017755,
    0x66ec1b7d,0x1f980cca,0xb9571fc4,0xbb803757,0xc880bbaa,0x17240cbc,
    0x7f79df30,0x0aaa9818,0x7ec45006,0xb1018003,0x0300087f,0x00801002,
    0x09800260,0x44002100,0x84008800,0x20011000,0x00310808,0x01810201,
    0x11000880,0x08400820,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0xed800000,
    0x82ae605e,0x41eeeeea,0x3220bbba,0x0640902e,0x00004fa8,0x22044f62,
    0x2f260533,0x5c03fa01,0x06f88388,0x32e0b2ea,0x2e21c830,0xbb710bde,
    0x41cdb881,0x2044388b,0x20399701,0x4c40a898,0x44033109,0xb502a600,
    0x66dc43bd,0x02ccca81,0x3333a079,0x3b8ea0fc,0x80dc24c2,0x3b1b01f8,
    0xaa801700,0xbb7b84fe,0x5416cd10,0xa9f985aa,0x41dce40f,0xc998f159,
    0x741741df,0x3a0bf305,0x07cd7c40,0x2e07c4d7,0xb7f50ba3,0x22fcc9fd,
    0x89d5702d,0x24ef98d9,0x201d01fb,0x3104c804,0xd316c588,0x01c41d98,
    0x7c00c180,0x00026004,0x430d526c,0x06080008,0x06200932,0xfd105e80,
    0xd7000b07,0xa87a07c4,0x71f25e85,0x2279058d,0xa89d1e44,0x3ea0b00f,
    0x001f500b,0x643b215c,0x40247a83,0x2006a202,0x1a8807ea,0x17c06a20,
    0x0aa883f3,0x01980660,0x0aa8809b,0x220bd018,0x882c2fcc,0xf135c0aa,
    0x1f107cc1,0xf0be63d8,0x01740a65,0x3ea2649d,0x3b2a0b00,0x3dade83f,
    0x77440e80,0x01b9602b,0x9b179028,0x202f9d80,0xbc84d8bc,0x10fcc4d8,
    0x7546c45f,0x23645cc2,0x4d86c8b9,0x0baa3620,0xa4417a07,0x362161fd,
    0x89ae2ea8,0xf88fe20f,0x70be1ec2,0x2fe6212d,0x20f4d501,0x900b00fa,
    0xdd34f83f,0xff882c40,0x4884e541,0x0f80dc14,0x6d9cc0d7,0x7c35c3e0,
    0x40fa8d70,0x47b87a3f,0x2f8917c4,0xd09dffd1,0x20323dc3,0x3a29105e,
    0x5c3d0b0e,0x40f89ae7,0x7b03e65d,0x25fc40f8,0x80567d44,0x0fa80abc,
    0x993200b0,0x5c03e61f,0x2fe8d882,0xd31ea240,0x640fb500,0xda803f50,
    0xf31f6a07,0x0f997c43,0x557447e6,0x555d11aa,0xf305c835,0x03b0fcc1,
    0xf89220bd,0x260f98b5,0xf911f71f,0x6d764433,0x41664d86,0x80be00fc,
    0x03ea00bc,0x2259802c,0x740be21f,0x81b62c80,0x7d1ae21a,0x83d464c0,
    0x04f999d8,0x930f5193,0x4c5f0f51,0x3f81f51f,0x403d40f5,0xf81f504c,
    0x413a07a3,0x22e7d448,0xeb9fc0fa,0x201de8de,0xbabed84e,0x2f80b100,
    0x3bfffee0,0x02c07e60,0x3e17c4a8,0x43f05880,0x224880f8,0x3d0fccd3,
    0x7707a9e2,0x881f9555,0x54f11ea7,0x89ea3d87,0x2f88fc2f,0x20c2f88c,
    0x42f8842b,0x0fa0be1f,0x23fdc244,0x9b8fc2f8,0x01d50040,0x2a80117b,
    0x217017c0,0x0be24a99,0x0362282c,0x2b82ccb7,0xc82c4790,0x453f32e0,
    0x87d4b22f,0xf885817c,0x17c87d43,0x20be43ea,0x4bb0b25a,0x5c5fec69,
    0x46e2ff61,0x2a9bdeb9,0x3e269976,0x4407a953,0x4bb0fb04,0x9800b669,
    0x2007b00e,0xb502f805,0xb85d8310,0x0cdfe882,0x20195990,0x7577100d,
    0x23405501,0x7f4489dc,0x815c2fad,0x56ff40fd,0x7d6ff42f,0x884bdb82,
    0x6440dbee,0x77e442ef,0x3feaaaa2,0x06df7445,0x0efea7f1,0x86817644,
    0x3a0dbee8,0x00ba9803,0x1efa813a,0xdf102f80,0x37605979,0x00403cbb,
    0x10008010,0x220a00c0,0x7d40101a,0x0eff4c1c,0x00002002,0x20040088,
    0x22008100,0x00441500,0x80880200,0x98008009,0x015101aa,0x201dfb88,
    0x011001a9,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0xb5077b6a,0x6d40083b,0x1ced98be,
    0x3fa0336e,0x00e22e00,0x40203151,0x5f901000,0xccedda80,0xc98306cc,
    0x2e3502de,0x5c1865c0,0x4c9b31de,0x0bccdeec,0x99999988,0xb9bd9309,
    0x2dec9839,0x2617db71,0x9300adec,0x1ef4405d,0x6f5c42dc,0x54511441,
    0x7543b03f,0x261fb804,0x5570683f,0x3e6be209,0x7e9ab880,0x027547a8,
    0xb3931f62,0xb81f9900,0x17cc24c0,0x4c5f19d0,0x5e81dfc9,0xb117cc2c,
    0x30c0183d,0x262f4c5f,0xf986d82f,0x206f9803,0x85ea85fb,0x2e0fdabc,
    0x05e83ee7,0xf1009b0b,0x82445e87,0xc8000261,0x6c0c1ea2,0x10c7a804,
    0x40fad803,0x8277a608,0x00019cf9,0x987d4062,0xfd82f882,0x7c430060,
    0x5f10fdc2,0x05f10d90,0x3605fb30,0x188b904f,0xb810227c,0x26c1540f,
    0x23ec6d80,0x9884cc1b,0x09884cc0,0x9003d478,0x0a0f5009,0x883ea6e0,
    0x304eec40,0x505fb59f,0xe80a6310,0x20be2093,0x430064f8,0x117d42f8,
    0xf10d905f,0x0db73005,0x16e09f55,0xf1001320,0x2a990589,0xfe87ea02,
    0xc93a2162,0x8d927446,0x8283d47a,0xf302664c,0x54807d88,0x26c0dc1f,
    0x21fb17cc,0x6e7d47d8,0x71d703fc,0x3740be20,0x8be21803,0x417c46e8,
    0x802f886c,0xfac1fab9,0x5d00b704,0x1ccf9000,0x03fcbcc8,0x8af554fe,
    0x43549b03,0x3f31aa4d,0x21f623d4,0x1e60ba4c,0x2a3701ea,0xd81fdccf,
    0x3ee2f984,0x43761ea2,0x77dd546b,0x37f2a2ab,0x019f61cc,0xfb9bf10c,
    0xccdf881d,0x2f886ecc,0x54bd3980,0x016e09f3,0x3e6000b3,0xb9720192,
    0xfba5b206,0x549b00b8,0x21aa4d86,0xf50f90de,0x4c032990,0x3a207987,
    0x0660fdcc,0xc8be6136,0x9361e61f,0x6ecccc7a,0x817c4199,0x4430067e,
    0x887f622f,0xf886c82f,0x3f539802,0x0b704f96,0x5114c0c8,0x9902db60,
    0x93f30354,0x4d816be2,0x6a9361aa,0x87adfe98,0x01ddc879,0xc81e61e6,
    0x36003ea0,0xfb8af984,0x52643cc4,0xaedaaa8f,0xf817c42a,0x7c430065,
    0x5f12fc42,0x05f10d90,0x1ce7c730,0xb816e09f,0x0f71fd81,0x4c80b7ea,
    0x43df01ea,0xa93603ed,0x81aa4d86,0x90f30f50,0x43cc0bdb,0xfa891079,
    0x20ae4280,0x981bcdf9,0x31ea4c87,0x8333bb33,0x21fb82f8,0x85f10c01,
    0x20be26f8,0x502f886c,0x41bf71cc,0x2a0b704f,0x00455102,0x2a4c80dd,
    0x3ea3e407,0x3ec57200,0x807d8ae4,0xcc87987a,0x50f303f8,0x1f70360f,
    0x22fd4488,0x43d402f9,0x5c81ea4d,0x7f70be60,0x5f30c018,0x0be62fc8,
    0x20fe21b6,0x4f89260c,0xa86b827c,0x0e1b999b,0x26c03b80,0x444980f5,
    0x5e77cc06,0x5e77cc3f,0x543dc03f,0x05f55d87,0x23fd88f5,0xfd30bfc8,
    0x003fb99b,0x2203dfb3,0x27be63fd,0xfea83fd8,0xccefd982,0x999a80cc,
    0xfb319999,0x4c5bbb9d,0x3fea1dfd,0x9bffb10b,0x176ccddd,0x0bbf2219,
    0x7fd45fd5,0x00066fff,0xb13dd300,0x0080807f,0x02100210,0xd88aaa20,
    0x22bbaa3f,0x0ff623ff,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x3b260f88,0x819d932d,0xddcccdeb,
    0x443bdb50,0xddb31cec,0x42fb2619,0xeeeeeeea,0x99dd932e,0x7bd93017,
    0x5e6f764c,0xccec980a,0xbd931edc,0x64c7b999,0x5102cdee,0x2854c015,
    0x8cc40d44,0x81310998,0x213309a9,0x23530098,0x84cc41a8,0x00050198,
    0x40cc0140,0x1fb02898,0x81ec2f98,0x2a1fd40c,0xfb05984f,0xb15c3b85,
    0x25f31d4b,0x4f880ed9,0x3b622f98,0x15c2f981,0x4c4885f3,0xd88bf32f,
    0x4ec42ea8,0x22f20de9,0xe8a7cc4d,0x4641d10d,0x649d11e8,0xbde8ad86,
    0x91ba24d9,0x5d5c1203,0x0903abdd,0xf53645cc,0xfab85f99,0x05917c40,
    0x6417e214,0xe880640f,0xbb0a1266,0xfa8be218,0x5f107f03,0x2f983fb0,
    0x060be218,0xd0fdc5f1,0xc8ba3dc3,0xc86b87c7,0x22299aa5,0x2a4d8666,
    0x27c87c46,0x8123d47a,0x0698b604,0xb17c4812,0x03e2e60d,0x000b25f1,
    0x97a201fb,0x467cc03a,0x440bb005,0x7c0fe62f,0xf882f883,0x10117cc4,
    0x2f88085f,0x307ccbea,0x4dc3e23f,0x987da82f,0x2125f70f,0x2a4d82ee,
    0x2abb6a06,0x1a97c0aa,0x54244120,0x2ba20900,0x41361aaa,0xaf881f14,
    0x17d4002c,0x802cfea0,0xbb000dfb,0x1fb17c40,0x0be20fe0,0x48be6374,
    0x21222f88,0xfa9f62f8,0xa8fa9fc0,0x5464c7f2,0x572e7d07,0x20dfd883,
    0x3261aa4d,0x96c806b9,0xeefeeec8,0x2710355e,0xeeefeeec,0x84c80f54,
    0xf881f10b,0x3e2002fe,0x019f9004,0xbb003740,0x1feefc40,0x0be20fe0,
    0x3bbe63ec,0xccdf887e,0xdacf885e,0x3f0be21d,0x11f8b3e6,0xbeb83d4f,
    0x8441bf98,0x6a9364fa,0x20fa87c4,0x01d7c408,0x0dc1c412,0x185f1048,
    0x7c453132,0x17ed7c40,0x1000ed80,0x7e54009f,0x440bb004,0x7c03f8af,
    0xfd02f883,0x220e2f98,0x57c41c2f,0x34cbb008,0x3ea699b6,0x9f102f90,
    0x772442f4,0x547d8ae4,0x731bf50f,0x09003f60,0x240b106c,0x43717fb0,
    0x7fffec4d,0x6cbe24ff,0x00fdc02f,0xa44013e0,0x05d801fb,0x00fd4be2,
    0x205f107f,0x0117cc5f,0xf88085f1,0x6df74402,0x36f37220,0x17d6ff40,
    0x220ee1d8,0x3e60cacf,0x7743fbce,0x00effaac,0x2a090095,0x02cccddc,
    0x177e4409,0x4cc45fd5,0x3e209fa9,0x7cc0bf62,0x027c0304,0x003ba0d8,
    0xb17c40bb,0x220fe01d,0x4c1fb82f,0x817c402f,0x4400be21,0x08022180,
    0x08800100,0x10300420,0x20700100,0x6665c601,0x0083cccd,0xf303e200,
    0x6e83fd85,0x027c0370,0x017e60ec,0x117cc0dd,0x307f10dd,0x983fa85f,
    0x417c402f,0x000be60c,0x00000000,0x00000000,0x00000000,0xf1000000,
    0x88efecc1,0xbf92dffd,0x20fd9999,0xd502efc8,0x1dffb85f,0xd983ffb8,
    0x4fbe61ef,0x3662efc8,0x80ccccef,0x9301dfd9,0x4bd999df,0xb801dfd9,
    0x0b722001,0x164d4000,0x21a82eaa,0xcccccccb,0x388cc005,0x84054453,
    0x43333108,0x99999999,0x00000000,0x00000000,0x00000000,0x00000000,
    0x97100000,0x984ba7b0,0x333332e4,0x7286e4cc,0x3e3c954b,0x46c92007,
    0x5eabb0ea,0x59b7915c,0xff9aeca2,0x2aaaaa4f,0x02000aaa,0x20006040,
    0x30602980,0x88cccccc,0x18833099,0x55462053,0x02201510,0x00a05013,
    0x980f7220,0x3e855486,0x000ec47f,0x96ae66b8,0x05c4b53c,0x3b06c480,
    0x6dc41800,0x0000330b,0x402da800,0x4c006a48,0x3ee2e63c,0x22191cc0,
    0xb14f99ad,0xcfa8ba1f,0x6fcc3fcd,0xfdcadebb,0x06c44b80,0x4c0b1019,
    0x227863cc,0x24551e0e,0x9a6174b6,0xaaaaaaa9,0x54745912,0x711556a5,
    0x030c0400,0x00000000,0x2f6a0000,0x00747700,0x743b05b5,0x125c3a21,
    0x33a236c1,0xd70dd82a,0xf0fd4bb0,0x2d5d5e45,0x000191b1,0x26581a92,
    0x388b1e0f,0x1240646e,0x13333333,0x506ce5c0,0x00001837,0x00000000,
    0x4c000000,0xd52f80cc,0x880e6441,0x0f99ec06,0x9f301f70,0xc87a9360,
    0x23e83e64,0x441dddc9,0x66665c1f,0x44713ccc,0x78f105c3,0x30c2e06a,
    0x00004e54,0x00000000,0x00000000,0x40000000,0xf8b6c4e8,0xfa803d72,
    0x1b63f300,0x0dd017cc,0x4c87a932,0x263e83e6,0x4e41cdcc,0x2190000d,
    0x58622e1b,0x0000003c,0x00000000,0x00000000,0x00000000,0x3e216d40,
    0x0bd98990,0x2e185f10,0x4e883d15,0x3213a2e0,0x99321ea4,0xabc8fa0f,
    0x6c4325bb,0x66440700,0x183776e2,0x88888766,0x00000888,0x00000000,
    0x00000000,0x00000000,0x8e407322,0x07322058,0xb02e2bf6,0x28db1663,
    0x3617ccaa,0x99721ea4,0x12e0fa0f,0x48838815,0x22000000,0xbbbbbbbb,
    0x00000000,0x00000000,0x00000000,0x664c0000,0x00b8e600,0x3222db88,
    0x954902ef,0x55cccdfb,0x4cbfe63f,0x23fd89ef,0xbfc8aee9,0x0441dfa8,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x80000006,
    0x00000081,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
};

static signed short stb__times_18_latin1_x[224]={ 0,1,1,0,0,0,0,0,0,0,1,0,0,0,
1,0,0,1,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,-1,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,-1,0,0,-1,0,0,0,0,0,0,0,
-2,0,0,0,0,0,-1,0,0,0,0,0,0,0,0,0,0,2,1,1,0,2,2,2,2,2,2,2,2,2,
2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,1,1,0,0,0,
1,1,0,0,-1,0,0,0,0,-1,0,0,0,0,1,1,-1,1,1,1,0,0,1,1,0,0,0,0,0,0,
0,0,-1,0,0,0,0,0,0,0,0,0,0,-1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,0,
 };
static signed short stb__times_18_latin1_y[224]={ 14,2,2,2,2,2,2,2,2,2,2,4,12,9,
12,2,3,3,3,3,3,3,3,3,3,3,6,6,4,6,4,2,2,2,3,2,3,3,3,2,3,3,3,3,
3,3,3,2,3,2,3,2,3,3,3,3,3,3,3,2,2,2,3,16,2,6,2,6,2,6,2,6,2,2,
2,2,2,6,6,6,6,6,6,6,4,6,6,6,6,6,6,2,2,2,8,3,3,3,3,3,3,3,3,3,
3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,14,6,3,3,4,3,
2,3,3,2,3,6,7,9,2,1,2,4,3,3,2,6,3,7,13,3,3,6,3,3,3,6,-1,-1,-1,0,
0,0,3,2,-1,-1,-1,0,-1,-1,-1,0,3,0,-1,-1,-1,0,0,5,2,-1,-1,-1,0,-1,3,2,2,2,
3,3,3,2,6,6,2,2,3,3,2,2,3,3,2,3,2,2,3,3,3,5,6,2,2,3,3,2,2,3,
 };
static unsigned short stb__times_18_latin1_w[224]={ 0,3,5,8,8,13,13,3,6,5,6,9,4,5,
2,5,8,6,8,7,8,8,8,8,8,8,3,3,9,9,9,7,15,12,10,11,12,10,9,12,12,6,7,12,
10,15,13,12,9,12,11,8,10,12,12,16,12,12,10,4,5,5,8,10,4,8,9,7,9,7,8,8,9,5,
6,9,5,13,9,8,9,9,6,6,5,9,8,12,8,9,7,5,1,5,9,9,9,9,9,9,9,9,9,9,
9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,0,3,7,8,8,9,
1,6,5,12,6,8,9,5,12,10,6,9,5,5,4,8,9,2,3,3,5,8,11,11,12,7,12,12,12,12,
12,12,16,11,10,10,10,10,6,6,6,6,12,13,12,12,12,12,12,7,12,12,12,12,12,12,9,8,8,8,
8,8,8,8,11,7,7,7,7,7,5,5,5,5,8,9,8,8,8,8,8,9,8,9,9,9,9,9,9,9,
 };
static unsigned short stb__times_18_latin1_h[224]={ 0,13,6,13,14,13,13,6,16,16,8,9,5,2,
3,13,12,11,11,12,11,12,12,12,12,12,9,11,9,5,9,13,16,12,11,13,11,11,11,13,11,11,12,11,
11,11,12,13,11,16,11,13,11,12,12,12,11,11,11,16,13,16,6,2,4,9,13,9,13,9,12,12,12,12,
16,12,12,8,8,9,12,12,8,9,11,9,9,9,8,12,8,16,16,16,3,11,11,11,11,11,11,11,11,11,
11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,12,15,12,9,11,
16,15,3,13,5,9,4,2,13,2,6,9,6,6,4,12,15,3,5,6,5,9,12,12,12,12,15,15,15,14,
14,14,11,16,15,15,15,14,15,15,15,14,11,15,16,16,16,15,15,7,13,16,16,16,15,15,11,13,13,13,
12,12,12,13,9,12,13,13,12,12,12,12,11,11,13,11,13,13,12,12,12,7,9,13,13,12,12,16,16,15,
 };
static unsigned short stb__times_18_latin1_s[224]={ 187,146,143,185,126,192,10,126,72,1,88,
212,182,229,207,249,98,232,239,242,1,1,10,19,28,194,252,248,20,155,1,
138,93,67,181,76,90,113,103,40,192,83,154,10,205,216,162,53,124,45,71,
129,60,241,1,24,47,34,23,40,234,34,134,134,197,152,224,30,97,241,223,
232,14,71,27,77,87,74,64,134,203,61,249,174,116,181,203,161,55,213,47,
58,64,66,216,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,
171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,187,150,29,
132,222,148,79,22,210,107,169,38,187,229,163,235,113,231,120,149,202,185,200,
226,165,130,176,11,216,204,37,50,187,100,113,135,172,159,99,81,37,220,231,
148,242,249,1,185,158,8,148,135,122,48,61,95,150,109,161,174,87,74,122,
215,206,240,58,80,89,1,191,234,24,32,124,116,250,228,93,132,176,138,120,
88,107,141,176,103,143,194,66,41,51,17,7,210, };
static unsigned short stb__times_18_latin1_t[224]={ 17,34,84,34,18,18,34,86,1,1,86,
74,84,84,84,18,48,61,61,34,74,48,48,48,48,48,61,61,86,84,86,
34,1,48,61,34,74,74,74,34,61,74,48,74,61,61,48,34,74,1,74,
34,74,48,61,61,74,74,74,1,18,1,84,91,84,74,18,86,34,74,48,
48,61,61,1,61,61,86,86,74,48,61,74,74,61,74,74,74,86,48,86,
1,1,1,84,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,
61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,17,48,18,
48,74,61,1,18,84,34,84,86,84,84,34,84,86,74,86,84,84,48,1,
84,84,86,84,86,34,34,48,48,1,18,18,18,18,18,61,1,18,1,1,
18,1,1,18,18,61,18,1,1,1,18,18,86,34,1,1,1,18,18,61,
18,18,18,48,48,48,34,74,34,34,34,48,48,34,34,61,61,34,61,34,
34,48,48,48,86,74,34,34,61,61,1,1,1, };
static unsigned short stb__times_18_latin1_a[224]={ 65,87,106,130,130,217,202,47,
87,87,130,147,65,87,65,72,130,130,130,130,130,130,130,130,
130,130,72,72,147,147,147,115,239,188,173,173,188,159,145,188,
188,87,101,188,159,231,188,188,145,188,173,145,159,188,188,245,
188,188,159,87,72,87,122,130,87,115,130,115,130,115,87,130,
130,72,72,130,72,202,130,130,130,130,87,101,72,130,130,188,
130,130,115,125,52,125,141,202,202,202,202,202,202,202,202,202,
202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,
202,202,202,202,202,202,202,202,65,87,130,130,130,130,52,130,
87,198,72,130,147,87,198,130,104,143,78,78,87,150,118,65,
87,78,81,130,195,195,195,115,188,188,188,188,188,188,231,173,
159,159,159,159,87,87,87,87,188,188,188,188,188,188,188,147,
188,188,188,188,188,188,145,130,115,115,115,115,115,115,173,115,
115,115,115,115,72,72,72,72,130,130,130,130,130,130,130,143,
130,130,130,130,130,130,130,130, };

// Call this function with
//    font: NULL or array length
//    data: NULL or specified size
//    height: STB_FONT_times_18_latin1_BITMAP_HEIGHT or STB_FONT_times_18_latin1_BITMAP_HEIGHT_POW2
//    return value: spacing between lines
static void stb_font_times_18_latin1(stb_fontchar font[STB_FONT_times_18_latin1_NUM_CHARS],
                unsigned char data[STB_FONT_times_18_latin1_BITMAP_HEIGHT][STB_FONT_times_18_latin1_BITMAP_WIDTH],
                int height)
{
    int i,j;
    if (data != 0) {
        unsigned int *bits = stb__times_18_latin1_pixels;
        unsigned int bitpack = *bits++, numbits = 32;
        for (i=0; i < STB_FONT_times_18_latin1_BITMAP_WIDTH*height; ++i)
            data[0][i] = 0;  // zero entire bitmap
        for (j=1; j < STB_FONT_times_18_latin1_BITMAP_HEIGHT-1; ++j) {
            for (i=1; i < STB_FONT_times_18_latin1_BITMAP_WIDTH-1; ++i) {
                unsigned int value;
                if (numbits==0) bitpack = *bits++, numbits=32;
                value = bitpack & 1;
                bitpack >>= 1, --numbits;
                if (value) {
                    if (numbits < 3) bitpack = *bits++, numbits = 32;
                    data[j][i] = (bitpack & 7) * 0x20 + 0x1f;
                    bitpack >>= 3, numbits -= 3;
                } else {
                    data[j][i] = 0;
                }
            }
        }
    }

    // build font description
    if (font != 0) {
        float recip_width = 1.0f / STB_FONT_times_18_latin1_BITMAP_WIDTH;
        float recip_height = 1.0f / height;
        for (i=0; i < STB_FONT_times_18_latin1_NUM_CHARS; ++i) {
            // pad characters so they bilerp from empty space around each character
            font[i].s0 = (stb__times_18_latin1_s[i]) * recip_width;
            font[i].t0 = (stb__times_18_latin1_t[i]) * recip_height;
            font[i].s1 = (stb__times_18_latin1_s[i] + stb__times_18_latin1_w[i]) * recip_width;
            font[i].t1 = (stb__times_18_latin1_t[i] + stb__times_18_latin1_h[i]) * recip_height;
            font[i].x0 = stb__times_18_latin1_x[i];
            font[i].y0 = stb__times_18_latin1_y[i];
            font[i].x1 = stb__times_18_latin1_x[i] + stb__times_18_latin1_w[i];
            font[i].y1 = stb__times_18_latin1_y[i] + stb__times_18_latin1_h[i];
            font[i].advance_int = (stb__times_18_latin1_a[i]+8)>>4;
            font[i].s0f = (stb__times_18_latin1_s[i] - 0.5f) * recip_width;
            font[i].t0f = (stb__times_18_latin1_t[i] - 0.5f) * recip_height;
            font[i].s1f = (stb__times_18_latin1_s[i] + stb__times_18_latin1_w[i] + 0.5f) * recip_width;
            font[i].t1f = (stb__times_18_latin1_t[i] + stb__times_18_latin1_h[i] + 0.5f) * recip_height;
            font[i].x0f = stb__times_18_latin1_x[i] - 0.5f;
            font[i].y0f = stb__times_18_latin1_y[i] - 0.5f;
            font[i].x1f = stb__times_18_latin1_x[i] + stb__times_18_latin1_w[i] + 0.5f;
            font[i].y1f = stb__times_18_latin1_y[i] + stb__times_18_latin1_h[i] + 0.5f;
            font[i].advance = stb__times_18_latin1_a[i]/16.0f;
        }
    }
}

#ifndef STB_SOMEFONT_CREATE
#define STB_SOMEFONT_CREATE              stb_font_times_18_latin1
#define STB_SOMEFONT_BITMAP_WIDTH        STB_FONT_times_18_latin1_BITMAP_WIDTH
#define STB_SOMEFONT_BITMAP_HEIGHT       STB_FONT_times_18_latin1_BITMAP_HEIGHT
#define STB_SOMEFONT_BITMAP_HEIGHT_POW2  STB_FONT_times_18_latin1_BITMAP_HEIGHT_POW2
#define STB_SOMEFONT_FIRST_CHAR          STB_FONT_times_18_latin1_FIRST_CHAR
#define STB_SOMEFONT_NUM_CHARS           STB_FONT_times_18_latin1_NUM_CHARS
#define STB_SOMEFONT_LINE_SPACING        STB_FONT_times_18_latin1_LINE_SPACING
#endif

