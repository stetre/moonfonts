// Font generated by stb_font_inl_generator.c (4/1 bpp)
//
// Following instructions show how to use the only included font, whatever it is, in
// a generic way so you can replace it with any other font by changing the include.
// To use multiple fonts, replace STB_SOMEFONT_* below with STB_FONT_times_bold_6_latin_ext_*,
// and separately install each font. Note that the CREATE function call has a
// totally different name; it's just 'stb_font_times_bold_6_latin_ext'.
//
/* // Example usage:

static stb_fontchar fontdata[STB_SOMEFONT_NUM_CHARS];

static void init(void)
{
    // optionally replace both STB_SOMEFONT_BITMAP_HEIGHT with STB_SOMEFONT_BITMAP_HEIGHT_POW2
    static unsigned char fontpixels[STB_SOMEFONT_BITMAP_HEIGHT][STB_SOMEFONT_BITMAP_WIDTH];
    STB_SOMEFONT_CREATE(fontdata, fontpixels, STB_SOMEFONT_BITMAP_HEIGHT);
    ... create texture ...
    // for best results rendering 1:1 pixels texels, use nearest-neighbor sampling
    // if allowed to scale up, use bilerp
}

// This function positions characters on integer coordinates, and assumes 1:1 texels to pixels
// Appropriate if nearest-neighbor sampling is used
static void draw_string_integer(int x, int y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0, cd->t0); glVertex2i(x + cd->x0, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t0); glVertex2i(x + cd->x1, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t1); glVertex2i(x + cd->x1, y + cd->y1);
        glTexCoord2f(cd->s0, cd->t1); glVertex2i(x + cd->x0, y + cd->y1);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance_int;
    }
    glEnd();
}

// This function positions characters on float coordinates, and doesn't require 1:1 texels to pixels
// Appropriate if bilinear filtering is used
static void draw_string_float(float x, float y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0f, cd->t0f); glVertex2f(x + cd->x0f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t0f); glVertex2f(x + cd->x1f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t1f); glVertex2f(x + cd->x1f, y + cd->y1f);
        glTexCoord2f(cd->s0f, cd->t1f); glVertex2f(x + cd->x0f, y + cd->y1f);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance;
    }
    glEnd();
}
*/

#ifndef STB_FONTCHAR__TYPEDEF
#define STB_FONTCHAR__TYPEDEF
typedef struct
{
    // coordinates if using integer positioning
    float s0,t0,s1,t1;
    signed short x0,y0,x1,y1;
    int   advance_int;
    // coordinates if using floating positioning
    float s0f,t0f,s1f,t1f;
    float x0f,y0f,x1f,y1f;
    float advance;
} stb_fontchar;
#endif

#define STB_FONT_times_bold_6_latin_ext_BITMAP_WIDTH         256
#define STB_FONT_times_bold_6_latin_ext_BITMAP_HEIGHT         40
#define STB_FONT_times_bold_6_latin_ext_BITMAP_HEIGHT_POW2    64

#define STB_FONT_times_bold_6_latin_ext_FIRST_CHAR            32
#define STB_FONT_times_bold_6_latin_ext_NUM_CHARS            560

#define STB_FONT_times_bold_6_latin_ext_LINE_SPACING           4

static unsigned int stb__times_bold_6_latin_ext_pixels[]={
    0x5505066a,0x060c1428,0x3304c413,0x30204418,0x82a83983,0x104c14c2,
    0x30e22983,0x20530c20,0x0c30a618,0x0a218831,0x28298311,0x818110e2,
    0xaa854c1b,0x41981718,0x4530cc2a,0x28aa141a,0x5cc6a154,0x411b86e1,
    0x88cd419a,0x20983119,0x231550a8,0x231550b8,0x231550a8,0x431550b8,
    0x862aa299,0x3026a19a,0x3550cd41,0xaa9c46a6,0x14cc30a8,0x4c13506c,
    0x5514cc31,0x99898d4c,0x1a982661,0x531dc315,0x4226e6a3,0x6425508a,
    0x2a31550a,0x2315518a,0x4546553a,0x55146550,0x1cf8cc31,0x4dc1d86e,
    0xac846e59,0x2a198710,0x4d425519,0x8cd42551,0x5466a12a,0x55046e12,
    0x23708dc2,0x211b8d45,0x4c6b211b,0x37182550,0x4b1b9602,0x5046e118,
    0x5cc6b235,0xc96370ba,0x3541751a,0x32ae6359,0x09542ea0,0xa84aab19,
    0x3a84aa12,0xa85d4255,0x09543212,0x190e5c6a,0x8ad84dcc,0x27910766,
    0x9b8ee1ba,0x9cdc2553,0x54e6e12a,0x954e6e12,0x954713b0,0x8d1c83b0,
    0x41d83b1a,0x0954a23a,0x221c4ec6,0x23334723,0x64c713b1,0x55e4c750,
    0x43a9a390,0x0ba9e4a4,0x44907a7a,0x2a75909c,0x2a84aa12,0x20954ea1,
    0x50c84aa4,0x8661a825,0x3751440c,0x8b84dcc5,0x73543792,0x5c272297,
    0x2e13914b,0x2e13914b,0x2613914b,0x4272249b,0x535309b9,0x213731b8,
    0x257709b9,0x8c139138,0x30d449b9,0x31854535,0xb8554937,0x4c22112b,
    0x54aee29a,0x45750980,0x2605438b,0x09c88321,0x27221391,0x42722150,
    0x1427220a,0x30dc1391,0x000012e3,0x000f2500,0x00000000,0x00020000,
    0x04000004,0x04080000,0x20010004,0x41000020,0x02000008,0x01001000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0xba814cc0,0xb88a5319,0x51988550,0x40543221,
    0x85530429,0x410aaa18,0x14c15409,0x545150c4,0x542a8282,0x22aa14c2,
    0x26530261,0x50d4c511,0x21511445,0x015309a9,0x46665031,0x30a09819,
    0x44a20d41,0x2a21710a,0x18891530,0x4c6a0c31,0x095c5319,0x7506446e,
    0x8551a883,0x266190ac,0x09983371,0x5505d466,0x228dd546,0x026618aa,
    0x8c554135,0x4315518a,0x462aa099,0x826618aa,0x826609d9,0xb8e25919,
    0x2388223a,0x5d6951a9,0x8cc55701,0x472534ab,0x50a8550b,0x5466e357,
    0x2663351a,0x2ba9a751,0x4d46a655,0xc8a67371,0x0c82e389,0x2159176a,
    0x0c9e442a,0x3712e159,0x43953896,0x49b2a12a,0x4b1b84aa,0x84eccb1b,
    0x5c25539c,0x984eccb1,0x8963709d,0xc96371e8,0x646ea932,0x29c8ee4a,
    0xbacea737,0x321ab881,0x64b29592,0x410aa191,0x9b82e0c8,0x4e6e7373,
    0xa8ddcd3a,0x4e6e7373,0x5cc754bb,0x21c86e49,0x4f224bba,0x251719cb,
    0x2f27910c,0x25134724,0x42551aca,0x95473bbb,0xd1c9a390,0x39c8f444,
    0x268e4255,0x3d111e88,0x46653472,0x18a4cd1c,0x9aa0c379,0x2a9771ab,
    0x930312bb,0x27524c19,0x54323749,0x5c1904c2,0xa5dd2ee1,0x4b7954bb,
    0xa5dcea19,0x1d4664bb,0x40c11062,0x03145c08,0x0c5170c7,0x3818a6a6,
    0x20982722,0x26139108,0x8a6a629a,0xc89d4332,0x94535309,0x54c66519,
    0x35304c29,0x32500005,0xb9400003,0x3200202b,0x32033970,0x80000001,
    0x3a84003a,0x00000000,0x02000000,0x00000000,0x00000008,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x55154550,
    0x1a855154,0x98298322,0x98510c40,0x445310a9,0x26188aa2,0xa8310d42,
    0x2982a142,0x1a8530d4,0xa883114c,0x214186a3,0x4c388542,0x451142aa,
    0x8510d428,0x8550a21a,0x45042618,0x28512098,0x9984c426,0x8a1c4710,
    0x26153518,0xa9546552,0x5432a632,0x998a6a60,0x2619330c,0x84b1370a,
    0x89545139,0x5cc5109a,0x1dd42b22,0x31154c31,0x4c53154c,0x5552e22a,
    0x5d472a22,0x510a8862,0x4dc51144,0x388a21ab,0x220886ea,0x41730442,
    0x53304408,0x45466a08,0x46663331,0x86215919,0x14426218,0x5436ea51,
    0x89d41b13,0xab92a20d,0x54493751,0x29c92a24,0x4aac9a39,0x5ccea539,
    0x2ea1592b,0x1baa8ae0,0xc82ea159,0x5641750a,0x9c6c1750,0x491b1baa,
    0x56433aaa,0xc94e4193,0xc832a760,0x21bc8320,0x3b86ea3b,0x5c3b86ea,
    0x0cca2623,0x5ce6e737,0x46673739,0x325391d8,0x27253929,0xa8ee5392,
    0x323a8b23,0x29370742,0x20744aca,0x54c6ae0e,0x5c6aa629,0x36b2751a,
    0x10e54571,0x45736545,0xca8ae1ca,0x21ca8ae1,0x5cd954ab,0x192aaa4a,
    0xab8ee359,0x5e5cc771,0x543b8ee3,0x21bc9aa0,0x6a86f26a,0x5d26a354,
    0x2ee9771a,0x52ee9774,0x2ae35519,0x46ae3571,0x203571ab,0x23a8ee3a,
    0x64a7323b,0x6493754a,0x0539929c,0x00750000,0x5c10d654,0x359503bb,
    0x5406b2a0,0x777701ac,0x000665c0,0x08000000,0x3c940f25,0x3c94f250,
    0x80000208,0x0000021a,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x194c3043,0x4d4710c4,
    0x4c53089a,0x0c431143,0x530c4635,0x14388e21,0xc88d4431,0x26133141,
    0x83130cc2,0x2a14c19a,0x23950c32,0x4c3310aa,0x95422a09,0x5504ca2a,
    0x0a04c1a8,0x88666331,0x10aa1540,0x098502a5,0x704c2184,0x11862aa1,
    0x2e229415,0x9c831770,0x655cc2e2,0x22188620,0x260c8621,0x1447108c,
    0x28854c51,0x572ab8a2,0x23791954,0x237732ad,0x1666e39c,0x50954159,
    0x58c8cc45,0x52c6e71b,0xa954aa17,0x98aa6532,0xa98aa62b,0x0d642b22,
    0x04408833,0x886b2751,0x285442a0,0x6cc32045,0x82aa1109,0x453b2898,
    0x8e7629a8,0xc87a7a1c,0x2b21590a,0xb0ee1590,0x1ba8dd43,0x546ea375,
    0x22e3751b,0x83625934,0x265951da,0x6c9791bb,0x8b2aa68a,0x28ab612a,
    0xc9d5ceb2,0x54ea48d1,0x5d4ea753,0x0ba82ea0,0x53c882ea,0x21dc3b87,
    0x464e363b,0x570a8ee5,0x04ca6621,0x0c7a2219,0x2e935095,0xb8ee261a,
    0x45c1350a,0x5c5715c3,0x1a850ae2,0xc8de46f2,0x2f23791b,0x4eb23791,
    0xab8b209a,0x8d5c4511,0x2e29ba82,0x427224cb,0x40c8a1ab,0x54535348,
    0x3a9d4ea0,0xca872a75,0x1ca872a1,0x515dca2e,0x73546a8d,0x6a8e6e95,
    0x2261d42a,0x3292e373,0x101db863,0x00000000,0x00000000,0x0ee00000,
    0x00000000,0x00080400,0x2753a9d4,0x2a35953a,0x235951ac,0x28201aca,
    0x929e4a79,0xa9e4a007,0x00004011,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x06614cc0,
    0x402a2335,0xa8aaa099,0x7514c500,0x42e22875,0x2286a098,0x28062e29,
    0x04cc42a2,0x98aae011,0xa898a622,0x8d545550,0x2a133509,0x0aa31308,
    0x2a151433,0x442a8620,0x02a15099,0x0815146a,0x0aa188a2,0x4511a831,
    0x546e0aaa,0x0d46e19b,0x19a98237,0xb8dcc237,0xaaa96371,0x22855313,
    0x495750b9,0x323530a9,0x854c2e3a,0x2e1550b9,0x2e61532a,0x100573b1,
    0x39064357,0x55524dc7,0x75146727,0x4dc2ea1b,0x532c8553,0x39064323,
    0x57730ea5,0x2e0cdc32,0x430d5c50,0x5d42b22b,0x5d450323,0x05411551,
    0x3790a819,0x3398e276,0x90b82076,0x24abb9a3,0x1b8645c8,0x25892b2a,
    0x643593ab,0xb32c4b10,0x70dca2a1,0x0036ae75,0x20c83326,0xb92ee1ab,
    0x064194ab,0x52ee3877,0x55d261aa,0xab8b2193,0x1dac8571,0x43212e19,
    0x32a9370c,0x7515c352,0x64321dcb,0x2190551b,0xab8642d8,0x54493734,
    0x14137309,0xb8aae637,0x917221bc,0x49ba86e1,0x025642b2,0x5642b219,
    0x42a61d30,0x8812b21b,0x15dca088,0x79700019,0x000c8323,0x320672e0,
    0x8032194a,0x432019cb,0x0c8644bc,0x5caea959,0x32012e01,0x64339700,
    0x32190720,0x0000004a,0x00000391,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x998d4000,
    0x5546550c,0x26288218,0x98cdd452,0x98aaa29a,0xaa98aa64,0x994c5530,
    0x26130aa2,0x10aaa530,0x20015541,0x2a615309,0x30441330,0x54c6a628,
    0x22862629,0x0c261329,0x43330445,0x98a06661,0x1330e551,0x42660466,
    0xa98e5718,0x154caa62,0x2a215000,0x1e883624,0x41ba960c,0x926ea0c8,
    0x21911baa,0xa82ea5aa,0x8ee3a20b,0x9d41042a,0xa8ee3aaa,0x2a5510da,
    0x86e1910a,0x0ab96258,0x5c662575,0x5c99373a,0x9954320c,0x2a28a330,
    0x2ea1712a,0x20265150,0x84cc082a,0x0088852a,0x00aa6180,0x03a0c800,
    0x32a4a859,0xc85da962,0xca92b2a0,0x54375146,0xa8872a2c,0x350aa39c,
    0xaaa9d42a,0x0cca9aa4,0xdb9d4155,0x98564371,0x1043331d,0xdaca5642,
    0x0649790c,0x5402084c,0x00442109,0x00000000,0x00000000,0x229cc864,
    0x18b62a3b,0x44bba9a2,0xb926ea1c,0x2e3b73bb,0x2b2a1d43,0x5c957151,
    0x7501119c,0x3c94332e,0x83181997,0x000001c8,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
};

static signed short stb__times_bold_6_latin_ext_x[560]={ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,0,0,0,0,0,0,0,0,0,0,
-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,-1,0,-1,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,-1,0,-1,0,-1,0,0,0,0,0,0,0,-1,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0, };
static signed short stb__times_bold_6_latin_ext_y[560]={ 4,0,0,0,0,0,0,0,0,0,0,0,3,2,
3,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,1,0,1,0,1,0,1,0,0,
0,0,0,1,1,1,1,1,1,1,0,1,1,1,1,1,1,0,0,0,2,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,1,0,0,0,0,
0,0,0,0,0,1,1,2,0,-1,0,0,0,0,0,1,0,1,3,0,0,1,0,0,0,1,-1,-1,-1,-1,
-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,1,0,-1,-1,-1,-1,-1,0,0,0,0,
0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,
-1,0,-1,0,0,1,-1,0,-1,0,-1,0,-1,0,-1,0,0,0,-1,0,-1,0,-1,0,0,1,-1,0,-1,0,
-1,0,-1,0,0,0,-1,-1,0,0,-1,0,-1,0,-1,0,0,0,-1,1,0,0,-1,0,0,0,1,-1,-1,0,
0,0,0,0,0,0,0,-1,0,0,1,-1,0,0,0,1,-1,0,-1,0,-1,0,0,1,-1,0,0,1,-1,0,
-1,0,-1,0,0,1,-1,0,0,0,-1,0,0,0,-1,0,-1,0,-1,0,-1,0,-1,0,0,1,-1,0,-1,0,
-1,-1,0,-1,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,1,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,0,-1,0,-1,
0,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,-2,-1,-1,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0, };
static unsigned short stb__times_bold_6_latin_ext_w[560]={ 0,2,3,3,3,6,5,2,2,2,3,3,2,2,
2,2,3,3,3,3,3,3,3,3,3,3,2,2,3,3,3,3,5,4,4,4,4,4,4,5,5,2,3,5,
4,6,4,5,4,5,4,3,4,4,4,6,4,4,4,2,2,2,3,4,2,3,3,3,3,3,3,3,3,2,
3,4,2,5,3,3,3,3,3,2,2,3,3,4,3,3,3,2,1,2,3,4,4,4,4,4,4,4,4,4,
4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,0,2,3,3,3,3,
1,3,2,4,2,3,4,2,4,4,2,3,2,2,2,4,3,2,2,2,2,3,4,4,4,3,4,4,4,4,
4,4,7,4,4,4,4,4,2,2,2,2,4,4,5,5,5,5,5,3,5,4,4,4,4,4,4,3,3,3,
3,3,3,3,4,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,
4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,4,4,3,4,3,4,3,4,3,4,3,4,3,5,3,
5,3,5,3,5,3,5,3,5,3,2,3,2,3,2,3,2,2,2,2,5,3,3,3,5,4,4,4,2,4,
2,4,3,4,3,4,2,4,3,4,3,4,3,5,4,3,5,3,5,3,5,3,6,4,4,3,4,3,4,3,
3,2,3,2,3,2,3,2,4,2,4,3,4,2,4,3,4,3,4,3,4,3,4,3,4,3,6,4,4,3,
4,4,3,4,3,4,3,3,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,
4,4,4,4,4,4,4,4,4,4,5,4,4,4,4,4,4,4,4,4,4,4,4,4,4,5,4,4,4,4,
4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,3,2,3,5,
3,4,3,4,3,4,3,4,3,4,3,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,
4,4,4,4,4,4,4,4,4,4,4,3,7,4,5,3,4,4,4,4,4,4,4,4,4,4,4,4,4,4,
4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,
4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,
4,4,4,4,4,4, };
static unsigned short stb__times_bold_6_latin_ext_h[560]={ 0,5,3,5,5,5,5,3,6,6,3,4,2,2,
2,5,5,4,4,5,4,5,5,5,5,5,4,4,4,2,4,5,6,4,4,5,4,4,4,5,4,4,5,4,
4,4,5,5,4,5,4,5,4,5,5,5,4,4,4,5,5,5,3,2,2,4,5,4,5,4,4,5,4,4,
6,4,4,3,3,4,5,5,3,4,5,4,4,4,3,5,3,6,6,6,1,4,4,4,4,4,4,4,4,4,
4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,0,5,5,5,4,4,
6,6,2,5,2,3,2,2,5,2,3,4,3,3,2,5,6,2,3,3,2,3,5,5,5,5,5,5,5,5,
5,5,4,6,5,5,5,5,5,5,5,5,4,6,6,6,6,6,6,3,5,6,6,6,6,5,4,5,5,5,
5,5,5,5,4,5,5,5,5,5,4,4,4,4,5,4,5,5,5,5,5,3,4,5,5,5,5,6,6,6,
5,5,5,5,6,5,6,5,6,5,6,5,6,5,5,5,4,5,5,5,5,5,5,5,6,5,5,5,6,6,
6,6,6,6,6,6,5,5,4,4,5,4,5,4,5,4,6,6,5,3,5,6,6,6,6,6,3,5,5,6,
6,4,4,4,4,4,4,6,4,6,5,6,4,4,5,5,6,5,6,5,6,5,5,4,5,4,6,5,5,4,
6,5,6,5,6,5,6,5,6,6,5,5,4,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,5,6,
5,5,4,5,4,5,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,5,4,4,6,4,4,4,
4,4,4,4,4,4,4,4,4,4,5,4,4,4,4,4,4,4,4,4,4,4,4,4,4,6,4,4,4,4,
4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,5,5,5,4,6,
5,6,5,6,6,6,6,6,6,6,6,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,
4,4,4,4,4,4,4,4,4,4,6,6,5,5,6,5,4,4,4,4,4,4,4,4,4,4,4,4,4,4,
4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,
4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,
4,4,4,4,4,4, };
static unsigned short stb__times_bold_6_latin_ext_s[560]={ 254,202,186,232,232,10,118,171,70,52,182,
20,202,224,227,247,17,24,50,21,113,85,129,133,94,98,84,81,105,235,109,
17,153,95,100,12,90,64,59,1,39,87,238,28,76,69,242,145,54,24,45,
187,34,124,52,25,15,10,5,223,138,229,137,205,193,229,214,221,210,212,208,
191,200,197,88,188,185,145,141,171,137,141,117,157,21,148,144,139,125,151,121,
106,115,134,239,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,
100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,254,235,226,
250,83,79,137,145,199,7,196,129,230,224,102,216,159,204,162,165,221,107,246,
213,190,168,210,174,1,230,204,209,218,199,176,205,200,195,105,1,182,177,172,
167,164,161,158,155,30,110,131,104,84,120,78,178,112,73,60,99,207,89,216,
81,77,73,69,65,61,57,180,48,44,40,36,32,41,136,238,1,6,59,252,
248,244,240,236,133,63,225,221,217,213,225,198,189,194,190,185,181,173,172,77,
164,12,153,92,145,97,168,133,128,127,119,114,110,105,101,96,92,55,83,78,
74,66,102,117,149,139,165,1,178,31,27,49,251,14,247,6,67,251,225,217,
234,236,156,226,95,250,242,15,41,151,197,194,25,34,233,132,152,167,175,164,
90,160,126,147,115,91,35,164,184,46,47,159,62,128,149,157,95,123,87,65,
169,87,45,17,181,37,137,30,140,21,188,10,7,205,210,242,191,237,218,229,
214,220,222,212,239,202,243,193,247,182,1,17,169,9,42,55,37,71,22,75,
113,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,57,100,100,123,
100,100,100,100,100,100,100,100,100,100,100,100,100,51,117,100,100,100,100,100,
100,100,100,100,100,100,100,100,109,122,100,100,100,100,100,100,100,100,100,100,
100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,151,143,
66,193,82,156,72,160,61,57,52,48,43,39,34,30,100,100,100,100,100,100,
100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,
100,100,100,25,21,173,69,6,141,100,100,100,100,100,100,100,100,100,100,100,
100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,
100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,
100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,
100,100,100,100,100,100,100,100,100, };
static unsigned short stb__times_bold_6_latin_ext_t[560]={ 1,8,33,8,15,21,21,33,8,8,33,
33,33,33,33,21,21,33,33,21,33,21,21,21,21,21,33,33,33,33,33,
27,1,33,33,27,33,33,33,27,33,33,21,33,33,33,21,21,33,27,33,
21,33,21,21,21,33,33,33,21,15,15,33,33,33,27,21,27,21,27,27,
21,27,27,1,27,27,33,33,27,21,21,33,27,27,27,27,27,33,21,33,
1,1,1,33,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,
27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,1,21,21,
21,27,27,1,1,33,27,33,33,33,33,21,33,33,27,33,33,33,21,1,
33,33,33,33,33,21,21,15,15,21,15,15,21,21,21,27,1,21,21,21,
21,21,21,21,21,27,8,8,8,8,8,8,33,21,8,8,8,1,21,27,
21,21,21,21,21,21,21,27,21,21,21,21,21,27,27,27,33,21,27,15,
15,15,15,15,33,27,15,15,15,15,1,1,1,15,15,15,15,1,15,1,
15,1,15,1,15,1,15,15,15,27,15,15,15,15,15,15,15,8,15,15,
15,1,1,1,1,1,1,8,1,15,15,27,27,15,27,15,27,8,27,1,
1,8,33,8,8,1,1,8,8,33,8,8,8,8,27,27,27,27,27,27,
8,27,8,8,8,27,27,8,8,8,15,1,15,1,15,15,27,15,27,8,
8,15,27,1,8,8,8,8,8,8,8,8,8,8,8,27,8,1,8,1,
8,1,8,1,8,1,8,1,8,1,15,15,1,15,15,27,15,27,15,27,
27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,15,27,27,1,
27,27,27,27,27,27,27,27,27,27,27,27,27,15,27,27,27,27,27,27,
27,27,27,27,27,27,27,27,1,27,27,27,27,27,27,27,27,27,27,27,
27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,8,8,
15,27,1,8,1,8,1,1,1,1,1,1,1,1,27,27,27,27,27,27,
27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,
27,27,27,1,1,8,15,1,15,27,27,27,27,27,27,27,27,27,27,27,
27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,
27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,
27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,
27,27,27,27,27,27,27,27,27, };
static unsigned short stb__times_bold_6_latin_ext_a[560]={ 22,29,48,43,43,87,72,24,
29,29,43,49,22,29,22,24,43,43,43,43,43,43,43,43,
43,43,29,29,49,49,49,43,81,63,58,63,63,58,53,67,
67,34,43,67,58,82,63,67,53,67,63,48,58,63,63,87,
63,63,58,29,24,29,50,43,29,43,48,38,48,38,29,43,
48,24,29,48,24,72,48,43,48,48,38,34,29,48,43,63,
43,43,38,34,19,34,45,67,67,67,67,67,67,67,67,67,
67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,
67,67,67,67,67,67,67,67,22,29,43,43,43,43,19,43,
29,65,26,43,49,29,65,43,35,48,26,26,29,50,47,22,
29,26,29,43,65,65,65,43,63,63,63,63,63,63,87,63,
58,58,58,58,34,34,34,34,63,63,67,67,67,67,67,49,
67,63,63,63,63,63,53,48,43,43,43,43,43,43,63,38,
38,38,38,38,24,24,24,24,43,48,43,43,43,43,43,48,
43,48,48,48,48,43,48,43,63,43,63,43,63,43,63,38,
63,38,63,38,63,38,63,64,63,48,58,38,58,38,58,38,
58,38,58,38,67,43,67,43,67,43,67,43,67,48,67,48,
34,24,34,24,34,24,34,24,34,24,71,48,43,29,67,48,
48,58,24,58,24,58,41,58,34,58,24,63,48,63,48,63,
48,63,67,48,67,43,67,43,67,43,87,63,63,38,63,38,
63,38,48,34,48,34,48,34,48,34,58,29,58,45,58,29,
63,48,63,48,63,48,63,48,63,48,63,48,87,63,63,43,
63,58,38,58,38,58,38,24,67,67,67,67,67,67,67,67,
67,67,67,67,67,67,67,64,67,67,43,67,67,67,67,67,
67,67,67,67,67,67,67,67,67,48,67,67,67,67,67,67,
67,67,67,67,67,67,67,69,52,67,67,67,67,67,67,67,
67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,
67,67,67,67,67,63,43,34,24,67,43,63,48,63,48,63,
48,63,48,63,48,67,67,67,67,67,67,67,67,67,67,67,
67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,
67,67,63,43,87,63,67,43,67,67,67,67,67,67,67,67,
67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,
67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,
67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,
67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,
67,67,67,67,67,67,67,67, };

// Call this function with
//    font: NULL or array length
//    data: NULL or specified size
//    height: STB_FONT_times_bold_6_latin_ext_BITMAP_HEIGHT or STB_FONT_times_bold_6_latin_ext_BITMAP_HEIGHT_POW2
//    return value: spacing between lines
static void stb_font_times_bold_6_latin_ext(stb_fontchar font[STB_FONT_times_bold_6_latin_ext_NUM_CHARS],
                unsigned char data[STB_FONT_times_bold_6_latin_ext_BITMAP_HEIGHT][STB_FONT_times_bold_6_latin_ext_BITMAP_WIDTH],
                int height)
{
    int i,j;
    if (data != 0) {
        unsigned int *bits = stb__times_bold_6_latin_ext_pixels;
        unsigned int bitpack = *bits++, numbits = 32;
        for (i=0; i < STB_FONT_times_bold_6_latin_ext_BITMAP_WIDTH*height; ++i)
            data[0][i] = 0;  // zero entire bitmap
        for (j=1; j < STB_FONT_times_bold_6_latin_ext_BITMAP_HEIGHT-1; ++j) {
            for (i=1; i < STB_FONT_times_bold_6_latin_ext_BITMAP_WIDTH-1; ++i) {
                unsigned int value;
                if (numbits==0) bitpack = *bits++, numbits=32;
                value = bitpack & 1;
                bitpack >>= 1, --numbits;
                if (value) {
                    if (numbits < 3) bitpack = *bits++, numbits = 32;
                    data[j][i] = (bitpack & 7) * 0x20 + 0x1f;
                    bitpack >>= 3, numbits -= 3;
                } else {
                    data[j][i] = 0;
                }
            }
        }
    }

    // build font description
    if (font != 0) {
        float recip_width = 1.0f / STB_FONT_times_bold_6_latin_ext_BITMAP_WIDTH;
        float recip_height = 1.0f / height;
        for (i=0; i < STB_FONT_times_bold_6_latin_ext_NUM_CHARS; ++i) {
            // pad characters so they bilerp from empty space around each character
            font[i].s0 = (stb__times_bold_6_latin_ext_s[i]) * recip_width;
            font[i].t0 = (stb__times_bold_6_latin_ext_t[i]) * recip_height;
            font[i].s1 = (stb__times_bold_6_latin_ext_s[i] + stb__times_bold_6_latin_ext_w[i]) * recip_width;
            font[i].t1 = (stb__times_bold_6_latin_ext_t[i] + stb__times_bold_6_latin_ext_h[i]) * recip_height;
            font[i].x0 = stb__times_bold_6_latin_ext_x[i];
            font[i].y0 = stb__times_bold_6_latin_ext_y[i];
            font[i].x1 = stb__times_bold_6_latin_ext_x[i] + stb__times_bold_6_latin_ext_w[i];
            font[i].y1 = stb__times_bold_6_latin_ext_y[i] + stb__times_bold_6_latin_ext_h[i];
            font[i].advance_int = (stb__times_bold_6_latin_ext_a[i]+8)>>4;
            font[i].s0f = (stb__times_bold_6_latin_ext_s[i] - 0.5f) * recip_width;
            font[i].t0f = (stb__times_bold_6_latin_ext_t[i] - 0.5f) * recip_height;
            font[i].s1f = (stb__times_bold_6_latin_ext_s[i] + stb__times_bold_6_latin_ext_w[i] + 0.5f) * recip_width;
            font[i].t1f = (stb__times_bold_6_latin_ext_t[i] + stb__times_bold_6_latin_ext_h[i] + 0.5f) * recip_height;
            font[i].x0f = stb__times_bold_6_latin_ext_x[i] - 0.5f;
            font[i].y0f = stb__times_bold_6_latin_ext_y[i] - 0.5f;
            font[i].x1f = stb__times_bold_6_latin_ext_x[i] + stb__times_bold_6_latin_ext_w[i] + 0.5f;
            font[i].y1f = stb__times_bold_6_latin_ext_y[i] + stb__times_bold_6_latin_ext_h[i] + 0.5f;
            font[i].advance = stb__times_bold_6_latin_ext_a[i]/16.0f;
        }
    }
}

#ifndef STB_SOMEFONT_CREATE
#define STB_SOMEFONT_CREATE              stb_font_times_bold_6_latin_ext
#define STB_SOMEFONT_BITMAP_WIDTH        STB_FONT_times_bold_6_latin_ext_BITMAP_WIDTH
#define STB_SOMEFONT_BITMAP_HEIGHT       STB_FONT_times_bold_6_latin_ext_BITMAP_HEIGHT
#define STB_SOMEFONT_BITMAP_HEIGHT_POW2  STB_FONT_times_bold_6_latin_ext_BITMAP_HEIGHT_POW2
#define STB_SOMEFONT_FIRST_CHAR          STB_FONT_times_bold_6_latin_ext_FIRST_CHAR
#define STB_SOMEFONT_NUM_CHARS           STB_FONT_times_bold_6_latin_ext_NUM_CHARS
#define STB_SOMEFONT_LINE_SPACING        STB_FONT_times_bold_6_latin_ext_LINE_SPACING
#endif

