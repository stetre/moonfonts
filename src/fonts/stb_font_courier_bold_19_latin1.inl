// Font generated by stb_font_inl_generator.c (4/1 bpp)
//
// Following instructions show how to use the only included font, whatever it is, in
// a generic way so you can replace it with any other font by changing the include.
// To use multiple fonts, replace STB_SOMEFONT_* below with STB_FONT_courier_bold_19_latin1_*,
// and separately install each font. Note that the CREATE function call has a
// totally different name; it's just 'stb_font_courier_bold_19_latin1'.
//
/* // Example usage:

static stb_fontchar fontdata[STB_SOMEFONT_NUM_CHARS];

static void init(void)
{
    // optionally replace both STB_SOMEFONT_BITMAP_HEIGHT with STB_SOMEFONT_BITMAP_HEIGHT_POW2
    static unsigned char fontpixels[STB_SOMEFONT_BITMAP_HEIGHT][STB_SOMEFONT_BITMAP_WIDTH];
    STB_SOMEFONT_CREATE(fontdata, fontpixels, STB_SOMEFONT_BITMAP_HEIGHT);
    ... create texture ...
    // for best results rendering 1:1 pixels texels, use nearest-neighbor sampling
    // if allowed to scale up, use bilerp
}

// This function positions characters on integer coordinates, and assumes 1:1 texels to pixels
// Appropriate if nearest-neighbor sampling is used
static void draw_string_integer(int x, int y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0, cd->t0); glVertex2i(x + cd->x0, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t0); glVertex2i(x + cd->x1, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t1); glVertex2i(x + cd->x1, y + cd->y1);
        glTexCoord2f(cd->s0, cd->t1); glVertex2i(x + cd->x0, y + cd->y1);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance_int;
    }
    glEnd();
}

// This function positions characters on float coordinates, and doesn't require 1:1 texels to pixels
// Appropriate if bilinear filtering is used
static void draw_string_float(float x, float y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0f, cd->t0f); glVertex2f(x + cd->x0f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t0f); glVertex2f(x + cd->x1f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t1f); glVertex2f(x + cd->x1f, y + cd->y1f);
        glTexCoord2f(cd->s0f, cd->t1f); glVertex2f(x + cd->x0f, y + cd->y1f);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance;
    }
    glEnd();
}
*/

#ifndef STB_FONTCHAR__TYPEDEF
#define STB_FONTCHAR__TYPEDEF
typedef struct
{
    // coordinates if using integer positioning
    float s0,t0,s1,t1;
    signed short x0,y0,x1,y1;
    int   advance_int;
    // coordinates if using floating positioning
    float s0f,t0f,s1f,t1f;
    float x0f,y0f,x1f,y1f;
    float advance;
} stb_fontchar;
#endif

#define STB_FONT_courier_bold_19_latin1_BITMAP_WIDTH         256
#define STB_FONT_courier_bold_19_latin1_BITMAP_HEIGHT        100
#define STB_FONT_courier_bold_19_latin1_BITMAP_HEIGHT_POW2   128

#define STB_FONT_courier_bold_19_latin1_FIRST_CHAR            32
#define STB_FONT_courier_bold_19_latin1_NUM_CHARS            224

#define STB_FONT_courier_bold_19_latin1_LINE_SPACING           9

static unsigned int stb__courier_bold_19_latin1_pixels[]={
    0x14330040,0x44004cb8,0x5400402c,0x30055003,0x2b800003,0x4c01d400,
    0x75000001,0x73003300,0x9505714c,0x97016a79,0x1440a659,0x00000000,
    0x0b202633,0x35d81360,0x00ffd03f,0xfd985f98,0xbd106cff,0xfc80db00,
    0x3f9ee04f,0x5c00fe60,0x27fe401f,0x201fcf70,0x7fe401fb,0x6c3fea04,
    0xfd85ff16,0x7405f56f,0xf50db6ff,0x2f8801dd,0xffc880db,0x2fd7a00c,
    0x4e8807f4,0x6c010440,0x4c098007,0x1ffeccff,0x7ec40f60,0x46dc0def,
    0x5c7104d8,0x200f4401,0x46dc00e9,0x5c7103d8,0x70036601,0x3609b11b,
    0x5f89b60f,0xd037cdb0,0x8f4c6d8d,0x530b806b,0x7eeffcc0,0x13ebf02f,
    0x014413ea,0x554c3551,0x565c7ec0,0x1aaaaa80,0x03f903be,0xf9bfd004,
    0x1000405f,0x00000000,0x00400000,0x6d8db000,0x2e6d8374,0x6d8dd02f,
    0x44000000,0x03fa61ff,0x7413e33e,0x4c35510f,0x4fff70aa,0x7fec4fff,
    0x3ea1ffff,0x7f15ffff,0xff910910,0x223f883d,0x77fe440d,0x3dff9101,
    0xeaafffb8,0x5fff74ff,0x3ee9ffd5,0x4ffeaaff,0xfd55fff7,0xeffc889f,
    0x7ffffdc1,0x6c6d86ff,0x26d83746,0xd8dd05f8,0x07fffdc6,0x03fffee0,
    0x1fdc27d4,0x5df9df91,0x3fee5f70,0xfd93ffe7,0x3f617e61,0x20fea8ae,
    0xf55f9999,0x37fe6003,0x5ff42ffd,0xfbbff301,0xddff985f,0x37fea2ff,
    0xf53ffd99,0x7ffb33bf,0x36677fea,0x3bff53ff,0x7cc7ffb3,0x2a2ffddf,
    0x6feeeefe,0x3a36c6e8,0x1fc8db06,0x2a2ec6e8,0x5403fffd,0xf903fffd,
    0x7dc9f103,0xa86fffff,0xf987f63f,0x3f92fc45,0x2fa83fb0,0x00fdd7e0,
    0xfd30ffc4,0x1f7ff4c1,0x7f4c3ff1,0x74c3ff10,0x1ba1b60f,0x6d8dd0db,
    0x7436c6e8,0xe987fe26,0xdb07ea0f,0x236c4fe8,0x236c0efc,0x086e85f8,
    0x200ddfd0,0x1f706efe,0xbfa89f10,0x49f303fb,0x207f25f8,0xb05f89fc,
    0x203f981f,0x5007f35f,0x307f709f,0x13ea3fd7,0x427d4fee,0x3a1b63fb,
    0x237436c6,0x36c6e86d,0x709f5374,0x7c4fd47f,0x22fec3a9,0x6c2fe46d,
    0x3740fc86,0x2fbbf980,0x17ddfcc0,0x1fdc1fcc,0x407eabe6,0x44fe44f9,
    0xf9bf105f,0x4437f603,0xff2fc07d,0x3f90c881,0x116a9f10,0x2207f29f,
    0xf103f94f,0x237436c9,0x36c6e86d,0x3a1b6374,0x3e207f26,0x0ffbbea4,
    0x3a36c6e8,0x9f30db06,0x642ec6e8,0x6405f88f,0xdf05f88f,0xfd07f441,
    0x507fffff,0xfcdf887f,0x817ff201,0x3ffffffd,0xbff52fc0,0x3f25fd97,
    0x9f94f880,0x3f25f933,0x1f94f880,0x436c9f10,0x37436c6e,0xdb1ba1b6,
    0x407e4dd0,0x3bbea4f8,0xdb1b603f,0x20db06e8,0xdb1ba0fd,0xfeaaef88,
    0xd55df100,0x9bff501f,0xdfda87ff,0x2fc81cfe,0x4405ffc8,0x2bf601ff,
    0x5f800add,0x177ffecc,0x27f707f5,0x25fffffc,0x53fb83fa,0x6c7f707f,
    0x436c6e86,0x37436c6e,0xfa9ba1b6,0x3ea3fb83,0xd8489f89,0x41ba36c6,
    0x749f306d,0x3fee36c6,0xf703ffff,0x207fffff,0x700cffe9,0x3e01f91f,
    0x803ff107,0x03ec05f8,0x0d504f80,0xfe883be2,0x83fd5310,0x3fa20ef8,
    0x7441df10,0xf887f20f,0x7f10fe43,0x0fe21fc8,0x11fc43f9,0x07f441df,
    0x41fa83f5,0xf89b60fd,0x7f40db05,0x746d8dd0,0x06e9999e,0xdd3333dd,
    0x26fbfea0,0x3e47e42c,0xbf103fb8,0x017ecc40,0x262007f6,0xeb883fc9,
    0xf9bff503,0x541ba07f,0x43ffcdff,0x3ffcdffa,0x7f5e7fc4,0x75e7fc40,
    0x5e7fc40f,0x67fc40fe,0x7fd40feb,0x3663ffcd,0x1fdcccdf,0x16d87fd4,
    0x6ffd85ff,0x7ff4fea0,0x3bf22db6,0x4437fae3,0x3fae3efc,0x7ffffc0d,
    0x7dbe43ff,0xd9881fd0,0xffff702f,0x3fffe01f,0x3fffee07,0x403ff505,
    0x202fffc9,0x3ff2605c,0xfff9302f,0x33ffa605,0x39ffd301,0x073ffa60,
    0x80e7ff4c,0x5c2fffc9,0xffffffff,0xb8aa3a81,0x403cca81,0x2a59973d,
    0x74dfff32,0xfff31fff,0x20ffff4d,0x301530a9,0x20dc0a65,0x80fffffb,
    0x202cccb8,0x2202ccca,0x00001bcb,0x88000022,0x20011000,0x00110008,
    0x00440022,0x00000088,0x00000000,0x00000000,0x71000000,0x00005999,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x001ed400,0x000d8164,0x07500930,
    0x03a815c0,0x15c00ae0,0x9dd88000,0x98066038,0x1dc00004,0x01000000,
    0x37620000,0x004c0389,0x98000004,0x00195801,0x1fb81fcc,0x4017d400,
    0x0ec805e8,0xd900bd10,0x401d9001,0x5e40fe7b,0xff902ffb,0x7b83fa09,
    0x3ff220fe,0x0ea85fbd,0xf807d100,0x00fa2003,0x405ff779,0x1f400dbb,
    0xd805d100,0x005dc806,0x0d3007ec,0x2000f440,0x4016a03c,0x4016a03c,
    0x2e38805a,0x36e00801,0x27d43d88,0x7cc1b8e2,0x00fffcdf,0x3f9803f7,
    0x8804e880,0x4004003f,0x74401c9c,0x803f9805,0x8001006d,0x000004f9,
    0x00000000,0x00000000,0x1effc880,0x001fd000,0x3fa1ff88,0x3006600f,
    0x401c4005,0x8ffec029,0xc884ffe9,0x2a00e003,0x4dffa801,0x00ffffb8,
    0xff701fb0,0xffb801ff,0xfff700ff,0x7d4dffff,0xf53fffff,0x2a7fffff,
    0x4fff65ff,0xfffffffb,0x3ffffee6,0x6ffcc6ff,0x3fea2ffd,0xbf13ffff,
    0xffffffa8,0x6fe49f53,0x0de5cc3f,0x10379730,0x86aa2155,0x35510aa8,
    0xfb36ffc8,0x1bcb987f,0x2015dc40,0xffb02bb8,0xfda83ffd,0x5f8803ff,
    0x07fffb50,0x03fffda8,0xfddddfd5,0x77ff6ccd,0xdffdb32d,0xd97fa65b,
    0xddfd52ef,0x7f54dfdd,0x226feeee,0x43fa61ff,0x2deffed9,0xfed987f5,
    0x23f92def,0x7d49f5fb,0xfa84ffff,0x7e44ffff,0x649ffb2f,0x09ffb2ff,
    0x236c7ffb,0x84fffffa,0x0effffd9,0x77fffecc,0x1fa93e20,0x900ddfd0,
    0x6efe803f,0x40ddfd00,0xe836c1fa,0xf8837406,0x3f503fa6,0x20fd46d8,
    0x2e13ea6d,0xfb86e83f,0x3ee1ba02,0x89f16f98,0x80fd889a,0x40fd889a,
    0x713e62fb,0x6c27cc5f,0x50db0fef,0xe81fb113,0x44fc88bf,0x4fc88bfe,
    0x260307ee,0x2202fbbf,0x5dfcc05f,0x5dfcc02f,0xf13f502f,0x01ba0753,
    0x667d40dd,0xf89fa83f,0x44fd43a9,0x07f23a9f,0x21ba13e2,0x21ba02fb,
    0xf70ffbf8,0xfeedb987,0xfeedb981,0x9f117d41,0x13e22fa8,0x36d7e7f6,
    0x0ff76dcc,0xf9999df3,0x333be61f,0x5f50ffcc,0x3e23f200,0x9007ee05,
    0xc80bf11f,0xf505f88f,0x6e807fdd,0x3f603740,0xfddf505f,0x3fbbea07,
    0xf880fc83,0x3fa86e84,0x7ff41ba0,0x7dc1fd12,0x5c1ffeef,0x41ffeeff,
    0x513e22fa,0x6c27c45f,0xb8db5f97,0x21ffeeff,0xfffffffa,0xfffff51f,
    0x67fc3fff,0x77c41fdb,0xdf00feaa,0xeaaef880,0x55df100f,0xddf501fd,
    0x406e807f,0x07fc406e,0x03feefa8,0x507fddf5,0xd07f707f,0x740bf10d,
    0xf99ffb06,0x706fc47f,0x706fc43f,0x222fa83f,0xf117d44f,0x3fe2fb09,
    0xb837e26e,0x4ccf7c1f,0x4cf7c199,0x7f4c1999,0xfffb85ff,0x2fb83fff,
    0x7ffffdc0,0xffff703f,0x13f507ff,0x1ba0913f,0x0db00dd0,0x44fc4fd4,
    0x4fc4fd44,0x883be248,0xb06e80fe,0x2a1ba01f,0x81cffdef,0xdffdbbef,
    0x3f6efbe1,0x2fbe61df,0x3e61effc,0x41effcbe,0xf1bfea7d,0x3bffb77d,
    0x765df7dc,0x2efbee0f,0x0ee80fec,0xd3333dd0,0xdd00dd0d,0x20dd3333,
    0x6e9999ee,0x0fd41fa8,0x01ba0374,0x41fa81b6,0x507ea1fa,0x66ffd43f,
    0x20dd03ff,0xb0dd04fa,0xea80221d,0x22ffefff,0xffefffea,0x7efffe42,
    0x6fffe42f,0x33faa2ff,0xfea8dfb1,0x542ffeff,0xa84ffffd,0xb04ffffd,
    0x47df910d,0x5f50dfeb,0x71f7e440,0x3f221bfd,0x437fae3e,0xdcccdfd9,
    0x9ff9931f,0x3ff32639,0x7fe5c1cc,0x66fecc3c,0xfb31fdcc,0x83fb999b,
    0x4c2fffc9,0x41ccffcc,0xff9930fd,0x40004399,0x00310018,0x26200262,
    0x4fffee00,0x003106f8,0x4c4004c4,0x7cc0cc00,0x3fffa6ff,0xff980b51,
    0x47fffa6f,0x3fa6fff9,0xffff71ff,0x3ea3ffff,0xf53fffff,0xe87fffff,
    0x7dc6ffff,0x1fffffff,0xfffffff7,0x5402203f,0x43ffffff,0x3fffea38,
    0x000003ff,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x2ec80040,0xcccb9807,0x202dda83,0x882cccc9,0x008802a2,0x5401b910,
    0x003e9801,0x008801b9,0x41360110,0x02a99cb8,0x51440373,0x20f76e01,
    0xcc82dda8,0xb5103ccc,0x2202207b,0x435510aa,0x2ccccccb,0x3e00fa20,
    0x7f4e5402,0xddffd104,0xfbcfb87d,0xeccdf982,0x413e7b84,0x305bcffb,
    0xbd03f9bd,0x75fdc0bb,0x3f37a205,0xb79ff701,0x3e607fc0,0x3fff621f,
    0x7ec1ffff,0x7cf705ff,0x3ffffb84,0x1bffffe2,0x81ffffff,0x5c6effe8,
    0x3f21dffe,0x6c9ffb2f,0x03ffffff,0x3a6007f3,0xfd802004,0x2e85bdb9,
    0x791721ae,0x22600820,0x45500cc8,0x01d2cc2a,0x5300b82e,0xc889814c,
    0x260aa00c,0x233f21ff,0x7cc0ffd9,0x4101fc8c,0xfb11df00,0x1fb8b621,
    0x5fd1013e,0x3f33be60,0xf98bee0f,0x05f516e4,0x071000a6,0x807fffdc,
    0x88b7b76f,0x3fa63d47,0x1bb98021,0x200ddcc0,0x16881bb9,0x10aa881d,
    0x79730355,0x0de5cc03,0x10ff9800,0xf50ff09f,0x2e60fea3,0x23f981bc,
    0x8fe602fa,0x3f9008cf,0x7f30fc40,0x09f117d4,0x77300fd8,0x01bb9803,
    0x40ffff6a,0x45bdb8fe,0xf8ffd36a,0x3600cfcc,0xd80dffff,0xd80dffff,
    0x640dffff,0xf93b8bee,0x513ff65f,0x509fffff,0x409fffff,0x2a7f884c,
    0xfa87e83f,0x7d40ffda,0x7dc4ffff,0x32e13e20,0x3fffe0ff,0x1656f41d,
    0xf51fcc08,0xf1027c45,0x3ffff60b,0xffffd80d,0x1bbfa00d,0x2def7fcc,
    0x23cdf56e,0xb05fd33e,0x8bf9339f,0x5fc99cfd,0x7e4ce7ec,0x1cfec985,
    0x84f98bee,0x80fd889a,0x80fd889a,0x44ff06f9,0x0ff911ef,0x09ffb5f5,
    0x41fb1135,0x7c45f87c,0x66ffc4ff,0xffff10ff,0x3f2201df,0xf98bea0f,
    0x360bea04,0x45fc99cf,0x5fc99cfd,0x05f77f30,0x716f7ae2,0x98f31f1b,
    0xf89f70df,0x1be0fc86,0xc86f83f2,0x579dd50f,0x27c45f50,0x0ff76dcc,
    0x0ff76dcc,0x37413ff2,0x3fffffea,0xfb11fa87,0xfeedb987,0x09f03f21,
    0x2045fd51,0x1bff13f8,0x37f607f5,0x7e5f7d40,0x01fb01ef,0x7c1f90df,
    0xfc80fc86,0x6dc05f88,0xcdeadc5b,0xf33fd887,0x3ea0fe61,0x5f507f32,
    0x4bea0fe6,0xa8dbbb19,0xf713e22f,0xb83ffddf,0x21ffeeff,0x13200dfa,
    0x1f6b76a2,0x25f887ea,0x1ffeeffb,0x02f98bea,0xf9ba02fc,0x05c836c6,
    0xffdffff5,0xf30bf105,0x3e65f507,0x7c42fa83,0x200feaae,0x8bd45bdb,
    0xdd500eec,0x7437c1fd,0x3fa1be0f,0x03fa1be0,0x5f50ecd1,0x1bf127c4,
    0x1bf10fdc,0x41f70fdc,0xfb0000c8,0x3a373f50,0x7dc1bf15,0x0fc93e21,
    0x44057e20,0x6e83fa4f,0x09bfa800,0xdf02fa80,0x437c1fd0,0x7ffdc0fe,
    0x36e03fff,0x200fc45b,0x703ba218,0x89ff99ff,0x4ffccffb,0x7fe67fdc,
    0x43d0e884,0xeffcbef9,0x3f6efbe1,0x2efbe1df,0xbf11dffd,0x0cc5f933,
    0xb507f4c0,0x47f9df9f,0xdffdbbef,0x9bf37f61,0x3fecbbed,0x1fd959fb,
    0x1fedf7cc,0x05f502a8,0xfb807ec0,0x5c4ffccf,0x84ffccff,0x6e9999ee,
    0x3616f6e0,0x45b8530d,0xfffd504d,0x3fffaa07,0x7fffd503,0x642775c0,
    0x22ffdfff,0xffefffea,0x3bfffaa2,0x3fff22ff,0xb01ba1ef,0x3f23ffff,
    0x20dffbdf,0xffefffea,0x83bff622,0x23ffffea,0x83ffffd9,0xf00cffeb,
    0x003f301f,0x3faa026c,0xffd503ff,0x3efc887f,0xe9837fae,0x7c45fdfe,
    0x77dc3fef,0x04401fee,0x11000880,0x13100400,0x22003100,0x10355001,
    0x3ccc9801,0x03100440,0x01300220,0x80080088,0x0000a008,0x11000880,
    0xe9bffe60,0x2aa21fff,0x03302a9a,0x002aaaa2,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x4c000000,
    0x5bb502dc,0x28807700,0x5302202a,0x20039715,0x08006000,0x50050cc0,
    0x00103379,0x04006e44,0xbc980080,0x65c01aa9,0x530d5443,0x79700015,
    0x011bb800,0x00df6dcc,0x806fb6e6,0xffffc809,0x2ffffd45,0x4f701ba0,
    0x7fc6e84f,0x81efffff,0x86cfffd9,0x0edfffd9,0x80f7fe44,0x3203f35d,
    0x447fffff,0xcde9802f,0xeffc981f,0x4c0b902d,0x6ffffffe,0xf71bfe20,
    0x227ffcff,0x037fc02e,0x07fbff20,0x3ae677e6,0x733bf302,0x88ff505d,
    0xee87f24f,0x37405f90,0x06601040,0xf517ffb1,0xeccff98d,0x37fe61ff,
    0x3e61ffdc,0x882ffddf,0x4efcc020,0x74c0ffa8,0x05515403,0x0bff99ff,
    0x8afd80bd,0xd800cfea,0x3e61fd86,0x6d804f85,0x2fefec00,0x9aca87cc,
    0x6657cc1e,0x6c41e88a,0x7f317d43,0x05f893e2,0x2ee201ba,0x20fec002,
    0x903be1f9,0x2a07ec3f,0x4c3ff11f,0x215510fe,0x43e41aa8,0x1005105a,
    0x43f70577,0x201c44f8,0x827dc3f8,0x886d9bb8,0xb887f25f,0xd80aaadf,
    0x5401cb8e,0xd4c85f90,0xc8933f77,0x935baf9c,0x2abbe200,0xf993e1fe,
    0x3ffffa26,0x3f660eff,0x26c0efff,0x4fe607ec,0x224883f8,0x27d4303f,
    0x2ffc9fdc,0x05f89ffb,0x4c055550,0x20effffd,0x2a0d43fb,0x85f502aa,
    0x7fec44f9,0x3f906fff,0xfffc8bf1,0xffd85fff,0xc981efff,0x4f45fdff,
    0x8f46864a,0x801a6a8e,0x644ffffb,0x227fe9af,0xdeeffeed,0x3222ffa0,
    0x7ec37c4f,0x2a3fd30d,0x01fa801f,0x4f881fc8,0x44f98bee,0x3e2180fe,
    0x2ffa06ff,0x3a24fc88,0x7c40bdff,0x917e06ff,0xa8bfc89f,0x9bf106fe,
    0x33bf303f,0x22bbf603,0x67fd45fb,0x5c7c6ffd,0xdd0f8f02,0x02a63c5f,
    0x1ffbbff1,0x3fffff4c,0x3be60dd0,0x20ffcccc,0xffffd87f,0x007ee3ff,
    0xeeec87ee,0x9f101f93,0x89f117d4,0xfdbbdefa,0x4c1ba622,0xffccccef,
    0x17ffedc0,0xfc81ba62,0x224ffebe,0x9037cc4f,0x027c0bff,0x87ee17ec,
    0xb1fea0fe,0x262a1b17,0x2d369ec5,0x2e07f459,0x260fea2f,0x1ba05fab,
    0x7fffffd4,0x81ff11ff,0x40bddafd,0x3fa803f9,0x2abfffd1,0x2a3fb83f,
    0x2a13e22f,0xd03efffd,0x3fffea0d,0x8131ffff,0x40dd06f9,0x4fdffeb8,
    0x81ba07ea,0x13e01ff8,0x4fe21f60,0x547f85f8,0x7b19db56,0x975ebea8,
    0x5c17c47b,0x4413e21f,0x81b602fd,0x199999ef,0x0fb07fe6,0x19103fe0,
    0x47ea1be2,0x3fa20ef8,0x4f88bea0,0xdd003aa0,0x4cccf7c0,0x1f617a19,
    0x98880374,0xf313e23f,0x202fc40d,0x42fd804f,0xf11ba0fb,0x6c45d90b,
    0x6c45d904,0xef982dc4,0x2f22febc,0x15404ffd,0xd977df70,0xb07fea1f,
    0xbff5003f,0x7e45fd97,0x21fecbdf,0x3ffcdffa,0x7fe5f7cc,0x03eb981e,
    0x7df70374,0x3fe1fd97,0xd03febce,0xfb33100d,0xfdbdfc83,0x7ecc44ff,
    0x6ddfec02,0x37ffae5f,0x77d45fdb,0xd701febb,0xeb807ddf,0x00b83eef,
    0x88bfffea,0xc881cffe,0x0ccccccc,0x27fffed4,0x7ffc1ff1,0xffd9807f,
    0xffeb82ef,0xffc983ff,0xbfff902f,0x3dd305ff,0x99ff9950,0xffffb507,
    0x77ffeec9,0x67fe6543,0xffffc83c,0xeffeb884,0xfff70eff,0x7f4c01ff,
    0x3ffa1dff,0xa80beffe,0x8801dffd,0x00044000,0x80100440,0xfffffff8,
    0x2013101f,0x16665419,0x09800600,0x98800880,0xffd80000,0x2205ffff,
    0xd804c009,0x85ffffff,0x8800bcb8,0x3332e201,0x20031002,0x00110008,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0xb8000000,0x7ffd5fff,0xffa80cc0,0x02ffffff,0x201f6440,
    0x6e4005b9,0x00cc2a00,0x05b98026,0x99982000,0x50099999,0x812e6011,
    0x5c01cdb8,0xffff501c,0x332601df,0x8059910a,0xfeaafffb,0x98164c4f,
    0xccb800cc,0xfffff503,0x4fbfaa7f,0x1b602eff,0x77ff77d4,0x6ffe42fe,
    0x01ecd540,0x3a200d95,0x2f982fcd,0x5ff6c0db,0x003dd42d,0x3fa9bb98,
    0x7fcc1803,0x37ffd46f,0x5ffffe88,0x2607ff50,0x80defeed,0xf33fffff,
    0xdffa809f,0x543ffd99,0x03ff904f,0x306fff88,0x45bdffdb,0x01bf91fa,
    0x25f506e8,0x7d45f36e,0xfc984fcd,0x98035401,0x02040e62,0x2207b328,
    0x7ff44007,0x8030efff,0x216d76c1,0xf906ebd9,0x7f407e45,0x00fb803f,
    0x813315f7,0xe86d804f,0x2a009886,0x01ba001f,0x6d7d41ba,0x20dd004f,
    0x3e6dd1f9,0x88099ba1,0xa83aa3ea,0x5542d986,0x0aaaa02a,0x01cb8aa8,
    0x3a16e0f1,0x26ffa9cf,0x017e0c01,0x4c4a836c,0x1fe7dc3f,0x2a207dc0,
    0xf80aaafd,0x6d835554,0x155546e8,0x17975f50,0x37403740,0x407fffa8,
    0xbccffccb,0xb0a6e8a0,0xcc88980f,0x3ae24fd8,0xf8837f20,0xfff106ff,
    0x3fffe60d,0x0fcc46ff,0x4f885fd3,0x063f9ff3,0x801fd830,0x87f6006d,
    0x803f9ef8,0x7ffdc0fb,0x8cf84fff,0x436c5fff,0x1bffe26e,0xefffffa8,
    0xdd00dd00,0x37f7fea0,0xfffff880,0x0dd01fff,0x01bdffb3,0x7df79db7,
    0x2f7bb239,0x4c41cbfe,0x1ba6206e,0xfb89ffb8,0x32fbbae2,0x3ea1ccdf,
    0x2fa9ff9a,0x3fe61803,0x0db04d8e,0x3fb13f60,0x5c1c87f1,0x99fd980f,
    0x3df9bf01,0x46e86d81,0x3ea06e98,0xd02fb89e,0x2a0dd00d,0xd009f72f,
    0x261ba00d,0x200defee,0x2fd8cfd8,0x7ec6fe44,0xdd00dd03,0x9f117d40,
    0x372bfaa0,0x3ff7e2ea,0x30061fb1,0x37efe7f4,0x7ec406d8,0x3f8a7cc4,
    0x01f713e2,0x3ffe01f2,0x1ba1b605,0x45f50374,0x00dd03f8,0xd87ea0dd,
    0x8037400f,0x00fe606e,0x3bae3df1,0xeea97742,0xdd00dd03,0x9f117d40,
    0xd8219f50,0x3f33ff23,0x2230064f,0x203ff94f,0x13fa206d,0x3ffffff6,
    0x07c89f12,0x3ffe01f2,0x443f900e,0x540dd03f,0x7413e21f,0xd986e806,
    0x07df33df,0x3f2e0374,0x42fb83cf,0x3abe2182,0x7d7f10c2,0x1ba01ba0,
    0x13e22fa8,0x893a2062,0x43efffff,0x97fb0c01,0x41b607ff,0x99702ff9,
    0x3e21dfb9,0x204fdbdf,0xfadf807c,0xbcff881e,0x40dd00fe,0x413e21fa,
    0xff99306e,0x3ffee399,0x4c81bf65,0x37ffff40,0x37333ff2,0x3fbaa00f,
    0x9bfbaa05,0x3ccffcca,0x333ff32a,0x6437f663,0x3fa801ef,0x30088fdc,
    0x3ff66180,0x3f3266fe,0xdff11ccf,0xb503b999,0x7fed41df,0x9fd9504f,
    0xa7e44199,0x74c1cffb,0x66541cff,0x3663ccff,0x25df90df,0x3ccffcca,
    0x3fffffea,0x00000003,0x7fffff40,0x0bfb005f,0x7fecdf90,0x3f65ffff,
    0x2a5fffff,0x5ffd2fff,0x49ffff00,0x33335000,0x03103333,0x3fffffea,
    0xffffff13,0x5fffb07f,0xffb80310,0x3e62ffff,0x05fff54f,0x7ffec022,
    0x3fea5fff,0xb3fff8af,0x0bffffff,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x1ffff700,0x7d406600,0x00fff65f,0x3fff6144,0x8001504f,0xffffffe9,
    0xfffff50f,0xd97fea7f,0x4bff53ff,0x3ffa3ffd,0x0effe88e,0x7ecbffd3,
    0x3fffa1ef,0xff76ffff,0x3a017dff,0x30efe87f,0x103dfffd,0xdfd35ffd,
    0x3ffffee3,0xffffd81c,0x7ffdc0ad,0xffd80cef,0x2e9ffd31,0x80beffff,
    0x003fffda,0x9bfa60d9,0xfb802efd,0x37bfee1f,0x00cff982,0xddfdfb30,
    0x3bbea1ff,0xbfd33ffe,0xfe9977ec,0xfd8bbf66,0x4dfd90de,0x3f24ffd8,
    0x3bff20df,0xfd56feee,0xb01ffddd,0x6ffcc7ff,0x1bdfdb10,0xb33dfb10,
    0x3bfaa1df,0x7dc1ffee,0x546feeef,0x0effeeff,0xfd9b7fe4,0xfddff53f,
    0x3bfa01df,0xdf100006,0xd5003fa1,0xddf905df,0xffe9839b,0x3f7f5003,
    0x98fd43f2,0xfd37c46f,0xe88ff881,0x2a97d40f,0xd0dd05f3,0x9ba1b60f,
    0x213e21fa,0x3ff66ff9,0x5402fa82,0xf513e21f,0x47c85f83,0x2e3ec2fa,
    0x23ffd84f,0x3ee3ec6d,0x2fbbf984,0x79f50000,0x7ff4c07f,0x3733f202,
    0xefea81ff,0x57dee402,0x223e66ac,0xccfa80fe,0xfddf303f,0xff17f305,
    0x5f703f53,0x76d827cc,0x21fa8aad,0xfef985f8,0xa82fef8a,0x10fd402f,
    0x261fa89f,0x7c47c85f,0x07ec3ec4,0x36c3fbf6,0x903f61f6,0x910bf11f,
    0x19999999,0x220bffb0,0x7c803ffd,0xff7027cc,0x3eefe03b,0x0bf601ff,
    0x5405ffd8,0x79f103ff,0x101f79ff,0xd807ecbf,0x9f507fef,0xf305ff97,
    0x5f7f9bf7,0xfa805f50,0x544feeee,0x81ffeeef,0x25fb517c,0x71eeffd8,
    0x5f9fd83f,0xfb87d8db,0x3aabbe21,0x7fffcc0f,0x7641ffff,0xffc85eff,
    0x4c7c800d,0x3ff6203f,0xffcbf984,0x809f901f,0x7dc00ff8,0x3fb7e04f,
    0x3f207cee,0x3f605f88,0xfff507fe,0x2be605ff,0x82f9dffc,0xf504c2fa,
    0xa89fdddd,0x85ffeeef,0x24fffffc,0x51eeffd8,0x5f97d83f,0xfb87d8db,
    0x3ffffee1,0x3600003f,0x1ffec406,0x3b733f20,0x3bff701f,0x2bffff20,
    0x325fa815,0xfa80db04,0xffd02fde,0x4c0fff79,0x3602fbcf,0x2fea0d76,
    0x5f305fc9,0x05f35ff1,0x2a3f85f5,0xf513e21f,0x3217e443,0xfb01bccf,
    0x17d81f90,0x87d8ddff,0x267ba0fc,0x80006e99,0x404cffcb,0xf903ffe9,
    0xd5019bdd,0x74e805df,0x7c4be23f,0x36c1ba0f,0x3fa1ff10,0xf99ffd81,
    0x377f406f,0x3ea01b60,0x3e613ee1,0x20be6972,0xf527c2fa,0x3ea27c43,
    0x1f21fcc1,0x1be63ec0,0x46ffa9f6,0xc8b7cc7d,0x37fae3ef,0xc9807500,
    0xd5002cff,0x67f5c1df,0x3ffe882c,0xfdbdfc80,0xbfb3fdcd,0xcb8df999,
    0x7f543cff,0xc85ffb0d,0x5017fa7f,0x7fdc07ff,0xdfd981cc,0x6c433f63,
    0x37f6e3df,0x99bfb910,0x37f669f9,0xb32efc89,0x3ffb99bf,0x81667f5c,
    0xffeccfe9,0xd8e7f541,0x333faa6f,0xfff31ffe,0x80ffff4d,0x7ffdc04b,
    0x0f5c004f,0x109ffffb,0xff10019d,0xffffffbf,0x3fffff67,0x7ffff46f,
    0x4477fe46,0x27dc5ffe,0x1ff009f7,0x1fffff40,0xf12fffdc,0x9bffa23f,
    0xff31fffd,0x29ffffff,0xffabfffa,0xfffff73f,0xfffd85bf,0xffff704f,
    0xfff703bd,0xffb9be27,0x0000deff,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0xffb80000,0x986fffff,
    0x77102bcb,0x33795005,0x32639730,0x03797301,0x2aa21551,0xbb980cc1,
    0x2a355101,0x5e4d541c,0x554c1bb8,0x4b86aaa2,0xaa98f233,0x0006aa20,
    0x35555551,0xa8aaa000,0x2aa0002a,0x14c01cb8,0xdda80000,0x5416ed41,
    0x6feeeefe,0x1ffffff4,0x1dffffb3,0xffffff90,0xfeffff98,0x7ffd41ff,
    0x97fe44ff,0x3fe24ffd,0x6ffffec0,0x7f77fe40,0xffff12ff,0xfe8fffff,
    0x7fff9aff,0x3ffffff2,0xfc93ffe4,0xfa8fe27f,0xffffff51,0x3a23b109,
    0xf35fff30,0xe88f43ff,0xfffff981,0x5c1b606f,0x107704ff,0x99b8f33d,
    0x6c1fa80f,0x2a233e66,0x222ffa2f,0x4efcc4fc,0x4d40ffa8,0x86f9cff8,
    0x40fd889a,0x913e62fb,0xc99cfd89,0xbfff985f,0x23bea1b8,0x222faafe,
    0x033ee3fc,0x88ff99ff,0x3fb1bb5f,0x0efabfe8,0x1df935f5,0x87f34e88,
    0x1ffabff9,0x82fa9fcc,0x2fb89ffb,0x2e3ba2e2,0x83f55f11,0x1ae01ff9,
    0x4fd41b6e,0x3e23a9f8,0x3e60acdf,0x0ffcccce,0x2e16a1f2,0xfeccffed,
    0x7f76dcc0,0x9f117d41,0x1f90df00,0x7cc03df0,0x10fe6fb3,0x2207ecdf,
    0xdb03f24f,0x10dd3ff3,0x5281dffd,0x54f981df,0x3ffa207f,0x2a9f500e,
    0xf117d43f,0x7ffffdc9,0x11f4d73f,0xd901fdff,0x501f7301,0x2607fddf,
    0xf51effeb,0x3fffffff,0x7f4402fc,0xffffffef,0x3fbbfee1,0xf117d41f,
    0xa83f9809,0x4c04f82f,0x0fe6fb3f,0x213e6bee,0x707f24f8,0x09fbffbf,
    0x7d40ffee,0x4c7fc40e,0x2ffe406f,0x0ff4bf60,0x227c45f5,0x221dffd9,
    0x3fa0fbcf,0xdd10ef99,0x1e989833,0x83feefa8,0xf97e623a,0x4199999e,
    0x3e6180fe,0x8666bfa4,0x07ee0df8,0x027c45f5,0x407f437c,0xd9fcc04f,
    0xdf107f37,0x33fe01fb,0xeff987fb,0xefa83ffd,0x877d43fe,0x2a3ba61a,
    0xf9bfb05f,0x365f901b,0xf117d41e,0x0effe889,0x5f7176d4,0xeeeaa7d4,
    0x07bd910e,0x227e27ea,0x36ef7f64,0x2efbee4f,0x3bea0fec,0x3e2fdbbd,
    0xdbeffdbe,0x36efbe0e,0x3be61dff,0x361effcb,0x7e67fdc5,0x677e5c4f,
    0xd8dfc83c,0xc80df9bf,0xfff904ff,0xff889fff,0x7cc1ffab,0xf51fe88e,
    0x88bf99bf,0x74cbd16d,0x1eff88ff,0x206ec3b2,0xdf90dfd9,0x1fd57dc3,
    0x00981880,0x507ea000,0x3fffae3f,0x7fed40ce,0xffda84ff,0x7ffcc3ef,
    0x544fffee,0x2ffefffe,0x7fefffe4,0xea81ff12,0xffe83fff,0x3a20efff,
    0xf9dfd9ff,0x00ff881f,0x41e46697,0x2e0fd0fe,0xfffc85c0,0x41705fff,
    0x33fff50b,0x711c7fff,0x74bffea0,0x0a8a22ff,0x00000000,0x33337f66,
    0x004c41fd,0x018004c4,0x2200c098,0x40131001,0x00022008,0x00000000,
    0x00000000,0x00000000,0x00000000,0xb8000000,0xffffffff,0x00000001,
    0x00000000,0xca800000,0x99999883,0x66665c09,0x2621cccc,0x22088661,
    0x5bd90620,0x2005bb50,0x5dcc001a,0x8221bbbb,0x25d82a28,0xccccccc9,
    0xddb51ccc,0x5bdddddd,0x00000000,0x00000000,0x00000000,0x36e00000,
    0x7ffffdc4,0xfff14fff,0x45ffffff,0xfd9fe3fc,0x516e5f99,0x9aea8f53,
    0x7cc1d52e,0xe88b72ff,0xffffff53,0x3dc3fe27,0x5c3fe27f,0xffffffff,
    0xdddd54ff,0x07dddddd,0x00000000,0x00000000,0x00000000,0x225c0000,
    0xbbbbbbb8,0x4444440b,0xd1ba2fa8,0xa7c47e4d,0xddd13eb9,0xb96a2c8f,
    0xdfd5db1f,0x001f44bf,0x440822ec,0x88888880,0x00000008,0x00000000,
    0x00000000,0x00000000,0x22097000,0x40008888,0xc85f12f9,0xd33f9ee5,
    0x3ea3321d,0x0b667aa1,0x4ec82633,0x000000cc,0x00000000,0x00000000,
    0x00000000,0x00000000,0x32200000,0x3fffee0d,0x3003ffff,0x92e1aa5f,
    0xc880ba6a,0x6ed44dce,0x00000002,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x261bddb1,0xcccccccc,0x261d1001,0x030c1981,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
};

static signed short stb__courier_bold_19_latin1_x[224]={ 0,3,2,0,1,1,1,3,4,1,1,0,3,1,
3,1,1,1,0,1,1,1,1,1,1,1,3,3,-1,0,0,1,1,-1,0,0,0,0,0,0,0,1,0,0,
0,-1,-1,0,0,0,0,1,0,0,-1,-1,0,0,1,4,1,2,1,-1,3,0,-1,0,0,0,1,0,0,1,
1,0,1,-1,0,0,-1,0,0,1,1,0,0,-1,0,0,1,2,4,2,1,2,2,2,2,2,2,2,2,2,
2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,3,1,0,1,0,
4,0,2,-1,2,0,-1,1,-1,-1,2,0,2,2,3,0,1,3,3,2,2,0,0,-1,0,1,-1,-1,-1,-1,
-1,-1,-1,0,0,0,0,0,1,1,1,1,-1,-1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,-1,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,0,
 };
static signed short stb__courier_bold_19_latin1_y[224]={ 13,2,2,1,1,2,3,2,2,2,2,3,10,7,
11,1,2,2,2,2,2,2,2,2,2,2,5,5,3,5,3,2,2,3,3,2,3,3,3,2,3,3,3,3,
3,3,3,2,3,2,3,2,3,3,3,3,3,3,3,2,1,2,1,16,1,5,2,5,2,5,2,5,2,2,
2,2,2,5,5,5,5,5,5,5,2,5,5,5,5,5,5,2,2,2,6,2,2,2,2,2,2,2,2,2,
2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,13,5,1,2,4,3,
2,2,2,3,2,5,7,7,3,0,0,1,2,2,1,5,2,6,12,2,2,5,2,2,2,5,-1,-1,-1,0,
-1,-1,3,2,-1,-1,-1,-1,-1,-1,-1,-1,3,0,-1,-1,-1,0,-1,4,2,-1,-1,-1,-1,-1,3,2,1,1,
2,2,2,1,5,5,1,1,2,2,1,1,2,2,2,2,1,1,2,2,2,3,4,1,1,2,2,1,2,2,
 };
static unsigned short stb__courier_bold_19_latin1_w[224]={ 0,4,6,10,8,8,9,4,5,5,8,10,4,8,
4,8,8,8,9,8,8,8,9,8,8,9,4,5,11,10,11,8,8,12,10,10,10,10,10,10,10,8,11,11,
10,12,11,10,10,10,11,9,10,10,12,12,10,10,8,4,8,4,8,12,4,10,11,10,11,10,9,10,10,9,
7,10,9,12,10,10,11,11,10,8,9,10,11,12,10,10,8,6,2,6,9,9,9,9,9,9,9,9,9,9,
9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,0,4,8,10,8,10,
2,10,6,12,7,10,11,8,12,12,6,10,6,6,4,10,9,4,4,6,6,10,11,12,10,8,12,12,12,12,
12,12,12,10,10,10,10,10,8,8,8,8,11,11,10,10,10,10,10,8,10,10,10,10,10,10,10,9,10,10,
10,10,10,10,12,10,10,10,10,10,9,9,9,9,10,10,10,10,10,10,10,10,10,10,10,10,10,10,11,10,
 };
static unsigned short stb__courier_bold_19_latin1_h[224]={ 0,12,6,14,15,12,11,6,14,14,8,10,6,3,
3,14,12,11,11,12,11,12,12,12,12,12,9,10,10,6,10,12,13,10,10,12,10,10,10,12,10,10,11,10,
10,10,10,12,10,14,10,12,10,11,10,10,10,10,10,14,14,14,7,3,4,9,12,9,12,9,11,12,11,11,
15,11,11,8,8,9,12,12,8,9,12,9,8,8,8,12,8,14,14,14,4,11,11,11,11,11,11,11,11,11,
11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,12,13,11,8,10,
14,13,3,11,5,8,6,3,11,2,7,12,6,6,4,12,13,3,5,6,5,8,11,11,11,12,14,14,14,13,
14,14,10,15,14,14,14,14,14,14,14,14,10,13,15,15,15,14,15,8,13,15,15,15,15,14,10,12,13,13,
12,12,12,13,9,12,13,13,12,12,12,12,11,11,12,11,13,13,12,12,12,10,11,13,13,12,12,16,15,15,
 };
static unsigned short stb__courier_bold_19_latin1_s[224]={ 255,150,134,238,65,99,100,129,131,249,214,
234,124,181,202,14,188,110,119,197,129,206,215,245,1,10,78,248,36,101,59,
225,46,1,199,59,245,1,141,70,188,213,138,222,177,164,233,81,210,227,152,
135,245,171,128,115,104,93,84,193,184,179,230,207,161,56,199,32,166,21,150,
155,192,182,35,160,203,105,203,83,47,155,94,12,189,67,118,139,181,178,161,
162,169,172,166,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,
90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,255,42,246,
1,130,25,198,55,195,222,146,170,112,181,235,220,223,20,239,246,176,234,36,
190,141,94,154,192,23,66,12,141,23,36,201,23,214,1,71,43,49,89,151,
100,69,60,122,137,221,201,54,140,74,111,85,152,146,96,107,118,129,78,48,
167,157,168,119,130,177,213,43,103,224,235,124,31,114,145,35,45,211,55,12,
1,88,77,66,14,79,179,190,108,92,1,23,12, };
static unsigned short stb__courier_bold_19_latin1_t[224]={ 1,33,92,1,1,33,60,92,18,1,83,
59,92,92,92,18,33,60,60,33,60,33,33,33,47,47,83,47,72,92,72,
33,33,72,72,47,72,83,72,47,72,60,60,59,72,72,72,47,72,1,72,
47,59,60,72,72,72,72,72,1,1,1,83,92,92,83,47,83,47,83,60,
47,60,60,1,60,60,83,83,83,47,33,83,83,47,83,83,83,83,47,83,
1,1,1,92,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,
60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,1,47,18,
60,83,72,1,33,92,47,92,83,92,92,47,92,83,47,83,83,92,33,33,
92,92,92,92,83,60,60,60,33,18,18,1,33,1,18,72,1,18,18,1,
18,18,18,18,18,72,18,1,1,1,18,1,83,18,1,1,1,1,18,72,
33,18,18,33,33,33,18,83,47,18,18,47,47,47,47,60,60,47,60,33,
33,33,33,33,72,60,18,18,33,47,1,1,1, };
static unsigned short stb__courier_bold_19_latin1_a[224]={ 161,161,161,161,161,161,161,161,
161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,
161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,
161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,
161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,
161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,
161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,
161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,
161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,
161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,
161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,
161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,
161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,
161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,
161,161,161,161,161,161,161,161, };

// Call this function with
//    font: NULL or array length
//    data: NULL or specified size
//    height: STB_FONT_courier_bold_19_latin1_BITMAP_HEIGHT or STB_FONT_courier_bold_19_latin1_BITMAP_HEIGHT_POW2
//    return value: spacing between lines
static void stb_font_courier_bold_19_latin1(stb_fontchar font[STB_FONT_courier_bold_19_latin1_NUM_CHARS],
                unsigned char data[STB_FONT_courier_bold_19_latin1_BITMAP_HEIGHT][STB_FONT_courier_bold_19_latin1_BITMAP_WIDTH],
                int height)
{
    int i,j;
    if (data != 0) {
        unsigned int *bits = stb__courier_bold_19_latin1_pixels;
        unsigned int bitpack = *bits++, numbits = 32;
        for (i=0; i < STB_FONT_courier_bold_19_latin1_BITMAP_WIDTH*height; ++i)
            data[0][i] = 0;  // zero entire bitmap
        for (j=1; j < STB_FONT_courier_bold_19_latin1_BITMAP_HEIGHT-1; ++j) {
            for (i=1; i < STB_FONT_courier_bold_19_latin1_BITMAP_WIDTH-1; ++i) {
                unsigned int value;
                if (numbits==0) bitpack = *bits++, numbits=32;
                value = bitpack & 1;
                bitpack >>= 1, --numbits;
                if (value) {
                    if (numbits < 3) bitpack = *bits++, numbits = 32;
                    data[j][i] = (bitpack & 7) * 0x20 + 0x1f;
                    bitpack >>= 3, numbits -= 3;
                } else {
                    data[j][i] = 0;
                }
            }
        }
    }

    // build font description
    if (font != 0) {
        float recip_width = 1.0f / STB_FONT_courier_bold_19_latin1_BITMAP_WIDTH;
        float recip_height = 1.0f / height;
        for (i=0; i < STB_FONT_courier_bold_19_latin1_NUM_CHARS; ++i) {
            // pad characters so they bilerp from empty space around each character
            font[i].s0 = (stb__courier_bold_19_latin1_s[i]) * recip_width;
            font[i].t0 = (stb__courier_bold_19_latin1_t[i]) * recip_height;
            font[i].s1 = (stb__courier_bold_19_latin1_s[i] + stb__courier_bold_19_latin1_w[i]) * recip_width;
            font[i].t1 = (stb__courier_bold_19_latin1_t[i] + stb__courier_bold_19_latin1_h[i]) * recip_height;
            font[i].x0 = stb__courier_bold_19_latin1_x[i];
            font[i].y0 = stb__courier_bold_19_latin1_y[i];
            font[i].x1 = stb__courier_bold_19_latin1_x[i] + stb__courier_bold_19_latin1_w[i];
            font[i].y1 = stb__courier_bold_19_latin1_y[i] + stb__courier_bold_19_latin1_h[i];
            font[i].advance_int = (stb__courier_bold_19_latin1_a[i]+8)>>4;
            font[i].s0f = (stb__courier_bold_19_latin1_s[i] - 0.5f) * recip_width;
            font[i].t0f = (stb__courier_bold_19_latin1_t[i] - 0.5f) * recip_height;
            font[i].s1f = (stb__courier_bold_19_latin1_s[i] + stb__courier_bold_19_latin1_w[i] + 0.5f) * recip_width;
            font[i].t1f = (stb__courier_bold_19_latin1_t[i] + stb__courier_bold_19_latin1_h[i] + 0.5f) * recip_height;
            font[i].x0f = stb__courier_bold_19_latin1_x[i] - 0.5f;
            font[i].y0f = stb__courier_bold_19_latin1_y[i] - 0.5f;
            font[i].x1f = stb__courier_bold_19_latin1_x[i] + stb__courier_bold_19_latin1_w[i] + 0.5f;
            font[i].y1f = stb__courier_bold_19_latin1_y[i] + stb__courier_bold_19_latin1_h[i] + 0.5f;
            font[i].advance = stb__courier_bold_19_latin1_a[i]/16.0f;
        }
    }
}

#ifndef STB_SOMEFONT_CREATE
#define STB_SOMEFONT_CREATE              stb_font_courier_bold_19_latin1
#define STB_SOMEFONT_BITMAP_WIDTH        STB_FONT_courier_bold_19_latin1_BITMAP_WIDTH
#define STB_SOMEFONT_BITMAP_HEIGHT       STB_FONT_courier_bold_19_latin1_BITMAP_HEIGHT
#define STB_SOMEFONT_BITMAP_HEIGHT_POW2  STB_FONT_courier_bold_19_latin1_BITMAP_HEIGHT_POW2
#define STB_SOMEFONT_FIRST_CHAR          STB_FONT_courier_bold_19_latin1_FIRST_CHAR
#define STB_SOMEFONT_NUM_CHARS           STB_FONT_courier_bold_19_latin1_NUM_CHARS
#define STB_SOMEFONT_LINE_SPACING        STB_FONT_courier_bold_19_latin1_LINE_SPACING
#endif

