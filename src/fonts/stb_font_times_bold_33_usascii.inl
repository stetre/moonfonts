// Font generated by stb_font_inl_generator.c (4/1 bpp)
//
// Following instructions show how to use the only included font, whatever it is, in
// a generic way so you can replace it with any other font by changing the include.
// To use multiple fonts, replace STB_SOMEFONT_* below with STB_FONT_times_bold_33_usascii_*,
// and separately install each font. Note that the CREATE function call has a
// totally different name; it's just 'stb_font_times_bold_33_usascii'.
//
/* // Example usage:

static stb_fontchar fontdata[STB_SOMEFONT_NUM_CHARS];

static void init(void)
{
    // optionally replace both STB_SOMEFONT_BITMAP_HEIGHT with STB_SOMEFONT_BITMAP_HEIGHT_POW2
    static unsigned char fontpixels[STB_SOMEFONT_BITMAP_HEIGHT][STB_SOMEFONT_BITMAP_WIDTH];
    STB_SOMEFONT_CREATE(fontdata, fontpixels, STB_SOMEFONT_BITMAP_HEIGHT);
    ... create texture ...
    // for best results rendering 1:1 pixels texels, use nearest-neighbor sampling
    // if allowed to scale up, use bilerp
}

// This function positions characters on integer coordinates, and assumes 1:1 texels to pixels
// Appropriate if nearest-neighbor sampling is used
static void draw_string_integer(int x, int y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0, cd->t0); glVertex2i(x + cd->x0, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t0); glVertex2i(x + cd->x1, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t1); glVertex2i(x + cd->x1, y + cd->y1);
        glTexCoord2f(cd->s0, cd->t1); glVertex2i(x + cd->x0, y + cd->y1);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance_int;
    }
    glEnd();
}

// This function positions characters on float coordinates, and doesn't require 1:1 texels to pixels
// Appropriate if bilinear filtering is used
static void draw_string_float(float x, float y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0f, cd->t0f); glVertex2f(x + cd->x0f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t0f); glVertex2f(x + cd->x1f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t1f); glVertex2f(x + cd->x1f, y + cd->y1f);
        glTexCoord2f(cd->s0f, cd->t1f); glVertex2f(x + cd->x0f, y + cd->y1f);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance;
    }
    glEnd();
}
*/

#ifndef STB_FONTCHAR__TYPEDEF
#define STB_FONTCHAR__TYPEDEF
typedef struct
{
    // coordinates if using integer positioning
    float s0,t0,s1,t1;
    signed short x0,y0,x1,y1;
    int   advance_int;
    // coordinates if using floating positioning
    float s0f,t0f,s1f,t1f;
    float x0f,y0f,x1f,y1f;
    float advance;
} stb_fontchar;
#endif

#define STB_FONT_times_bold_33_usascii_BITMAP_WIDTH         256
#define STB_FONT_times_bold_33_usascii_BITMAP_HEIGHT        134
#define STB_FONT_times_bold_33_usascii_BITMAP_HEIGHT_POW2   256

#define STB_FONT_times_bold_33_usascii_FIRST_CHAR            32
#define STB_FONT_times_bold_33_usascii_NUM_CHARS             95

#define STB_FONT_times_bold_33_usascii_LINE_SPACING          21

static unsigned int stb__times_bold_33_usascii_pixels[]={
    0x18000040,0x22001000,0x00002001,0x00010000,0x6d3bbbb2,0x0c04eeee,
    0x00000000,0x00000000,0x31026200,0x80004401,0x00180009,0x20027f4c,
    0xfeeefed9,0xdfb800bd,0x4407f603,0x64401ffb,0x54000972,0xbdefffec,
    0x5bff6000,0x5cc05ffe,0x654001cf,0x02cdefed,0x5407ff90,0x3d10defc,
    0x4666664c,0x000beeb8,0x82fb83fb,0x002eeeea,0x7dc00bee,0xe803efff,
    0xeb800fff,0x7f7300be,0x20bfb100,0x3fe881fd,0x7dc2fb80,0x3ff62002,
    0x5ffd711c,0x75bfee00,0x9df503ff,0x4039dfbf,0x711cffd8,0x7c405dfd,
    0x7f440fff,0xffcfe89e,0x57fffd41,0x00ffffee,0x41fd87e8,0x3ff98ffc,
    0x8805f980,0xdfff70de,0x0ffff401,0x4005dd10,0x7c400dd8,0xe81fd85f,
    0x02fb806f,0xff7005f7,0x3ffe609f,0xb7fd400d,0x7fb82ffe,0x40ffe47e,
    0xf304fffb,0xff501bff,0x0ffd85ff,0x207fffe6,0xd31fffff,0x6f880dff,
    0x37fcc7e8,0xfe803fff,0x6c5fd800,0x3ea05fff,0x037ea04f,0x7c02dc00,
    0x4c1fd87f,0x37d405ff,0xfa807fe0,0x7fd405ff,0xb7fd404f,0x7fcc2ffe,
    0x41fc87e3,0x5c05fffa,0xffa84fff,0x1bff61ff,0x3a07fffe,0x7fdc3fff,
    0x113e603f,0x25ffc8df,0x3ee04fff,0x41fff003,0x0807fffb,0x00013e60,
    0x3fff00f6,0x7fdc1fd8,0x00bfe606,0xff101ff9,0xfff005ff,0xb7fd405f,
    0x7fe42ffe,0x21f887e3,0x802ffff8,0x7c42fffe,0xfff10fff,0x03fffd09,
    0xf983fffb,0x0fee06ff,0x5ffe89f3,0x7cc17ffa,0x5fff1005,0x007fffcc,
    0x0006f880,0x7fc40d10,0x2a0fec0f,0x1ffa07ff,0x3617fe20,0xf9007fff,
    0x3ea01fff,0xd85ffd6f,0xc83f1eff,0x01ffff61,0x207fffe4,0x3fea6fff,
    0x1fffe83f,0x441fffd8,0x3f607fff,0x3fa17dc1,0x417ffa5f,0x3f2000fe,
    0x1bffe60e,0x03333326,0x7ecc01fb,0x0c859954,0xfb0fff50,0x80fff883,
    0xfb005ff9,0x7fffc41f,0xffff5005,0x75bfea07,0x7ffdc2ff,0xf1041faf,
    0x2a00bfff,0x7ec3ffff,0x0ffff24f,0x3607fffa,0xfff81fff,0xffddd50f,
    0xddffdddd,0xfe97ff63,0x003fb84f,0x4fffa808,0x43ffff50,0x3bea03f9,
    0x42fffbb9,0x0dff702a,0x3fff03fb,0x2007ffb0,0x3fea4ffc,0xff3004ff,
    0x3fea09ff,0xf885ffd6,0x201fffff,0x004ffffa,0xb89ffff3,0x3fff62ff,
    0x81fffe82,0xff81fffd,0xffff51ff,0xffffffff,0xf9bfee3f,0x02fcc1ff,
    0x1dffb000,0x90ffff40,0x4bfee01f,0x4c0ffff8,0xb0bff704,0x83ffd03f,
    0x5002fff8,0x3fee1fff,0xff3003ff,0x3fea0dff,0xfb05ffd6,0x203dffff,
    0x003ffffb,0x98dffff3,0x3fff20ff,0x81fffe83,0xff81fffd,0x889f307f,
    0x22ffd06f,0x00fe85ff,0x1dff3000,0x21fffe80,0x4dff305f,0x0d06fff8,
    0x3f613fe6,0xfa87fe81,0xff3001ff,0x3ffff63f,0xffff1003,0x75bfea0f,
    0xfffb02ff,0xffb09fff,0x3e2007ff,0x47f87fff,0xfe83fffa,0xfffd81ff,
    0x837ffc41,0x827cc3fb,0x83fdcfd8,0x200003fb,0xffd004fc,0x220be63f,
    0x3fe61fff,0x3205883f,0x441fd86f,0xfffb82ff,0x5fff3001,0x00fffff6,
    0x83ffffc4,0x5ffd6ffa,0x7ffffdc0,0x3fff60ef,0xfff1003f,0xf88bd0ff,
    0xfffe85ff,0x41fffd81,0xfb05fff9,0x4402fb83,0x85f8809a,0x1002cdb8,
    0x7ff4007f,0xf701f51f,0x1fffb8df,0x1fe404a8,0x3fd887f6,0x001fff90,
    0x7e4fffe6,0xf3003fff,0x3ea0dfff,0x805ffd6f,0x5fffffe8,0x00fffff2,
    0x437fffcc,0x0fffe84d,0x207fffe6,0x7e44fffd,0x90fd01ff,0xfe80003f,
    0x7dcffd40,0x0025400e,0x7dc7fffa,0x6c4fff80,0x007707ff,0x47f63d93,
    0x3f600bea,0xff1000ff,0x3fffee9f,0xffff5004,0x75bfea0b,0xfff002ff,
    0x3fee1fff,0xff3004ff,0x50770bff,0xfd75dfff,0xffb03fff,0xfff539df,
    0xcffcc987,0xcccffccc,0x21fdc000,0xdff15ff8,0x74002b80,0x50f91fff,
    0x7fcc3fff,0x5001b04f,0x4c7f61db,0x3ff601de,0xfff3000f,0x17fffe69,
    0x27fffd40,0xffd6ffa8,0x3fefe005,0xffff33ff,0x3ffea00b,0xf301983f,
    0xffd1dfff,0x3fffb03f,0x507dfff9,0xffffffff,0x003fffff,0x7fec2fc4,
    0x980bffe4,0x7fff4000,0xfff90f71,0x882fffd8,0x6c2fd805,0xc827dc1f,
    0xf3000fff,0x7fff47ff,0xffff7006,0x75bfea01,0x7c04c2ff,0x3a6fff99,
    0xf9006fff,0x20001fff,0x3fffa0a9,0x11fffd81,0x7e4c4035,0x9dfb999b,
    0x07f40019,0xfff27ff4,0xfe800009,0xd81f51ff,0x3ffaa6ff,0x6c02d80f,
    0x441fd86f,0xfffb84ff,0x5fff3001,0x00ffffcc,0x501ffff4,0x0bffadff,
    0x3f23f057,0x3fffe66f,0x3fffe801,0xfd000110,0xfffb03ff,0x83fb0003,
    0xf70002fb,0xf93ffe07,0x002205ff,0x223fffd0,0x9bfff41f,0x4c86ffcd,
    0x6c27fc40,0xa87fe81f,0xf3001fff,0xfffd83ff,0x37ffd405,0x7f5bfea0,
    0x8fc2dc2f,0x7fec4ffb,0x7ffd404f,0x04ffc80e,0x40ffff40,0x8001fffd,
    0x001fd87e,0x3fa05f88,0x413ffe5f,0x3a003ffc,0xb0fe1fff,0xfb1fdfff,
    0x0a0da89f,0x3f617fee,0x441ffe81,0xf7002fff,0xfffb01ff,0x077ff401,
    0x7f5bfea0,0x3e17dc2f,0xf901ff91,0x3fe201ff,0xfff880df,0x3ffa000f,
    0x1fffe81f,0x7c37c400,0x01fd0007,0xfff2ffec,0x0ffff305,0xb0ffff40,
    0x1ffffa89,0x9d51dff5,0x6ffa83a8,0xfff81fd8,0x003ffc81,0x7e409ff9,
    0x7fec41ff,0x6ffa800e,0xffb85ffd,0x0bfea7e2,0x441fffa8,0x3e204ffd,
    0x3e000fff,0xfff82fff,0x27cc002f,0x2e001be2,0xb7fc403f,0xff306ff8,
    0x3fa001ff,0x703e61ff,0xcedb83bf,0xff30580a,0xf983fb0f,0x5ff880ff,
    0x801ffb00,0xfedeffb8,0x3ea002df,0x985ffd6f,0xfefdfffc,0xfec9800d,
    0x02defede,0x1004ffd8,0x25bffff7,0x9dffffb8,0xa85f7000,0x37c4004f,
    0xfb9ffa80,0x13ff600e,0x41fffe80,0x5c00005c,0x81fff102,0x3ffd41fd,
    0x8801ffb0,0x7ec004ff,0xa8003fff,0x05ffd6ff,0x0017d4cc,0x00026a60,
    0xaaa80026,0x5512aaaa,0x00155555,0x035102a6,0x2000ec80,0x3003ddc8,
    0xfffd8001,0x00003e80,0x1fff80b5,0x3fee0fec,0x013fe205,0x88001df9,
    0x001fffff,0xffeb7fdc,0x0003f002,0x00000000,0x00000000,0x00000000,
    0x8dc40000,0x3f307ffd,0x805a8000,0x41fd87fe,0x7cc05ff9,0x003fe00f,
    0x37fffd40,0x75bfee00,0x000002ff,0x00000000,0x00000000,0x00000000,
    0xbf900000,0xe881bff2,0x2644000c,0x6c1ffcc0,0x807fe81f,0x03f904f9,
    0xffffa800,0x3a6602ce,0x3dffd6ff,0x00000000,0x00000000,0x00000000,
    0x00000000,0x3f2df900,0x02eb801f,0x9802ec88,0x03fb04fd,0xd30033f6,
    0x0001ed89,0xfffff910,0xaaaa81ff,0x5555552a,0x00000000,0x00000000,
    0x00000000,0x00000000,0xefcfe880,0x3b722003,0x2dedcabd,0x403bd700,
    0x3b6a01fd,0x0572a802,0x54cc0000,0x00000001,0x00000000,0x00000000,
    0x00000000,0x80000000,0x880000a8,0x000009a9,0x00002a60,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x80000020,0x10002008,0x01000803,0x00000002,0x04000000,
    0x00980000,0x00026200,0x333332e0,0x0b33321c,0x3bbbbb20,0x00002000,
    0x75c00011,0x0000beff,0x77fff5c4,0x7301a1bc,0x7bffffdb,0xfd9812a1,
    0x40b0cfff,0x0beffeda,0x2f7bfae0,0xa880aaaa,0x71002dfd,0x0001bffb,
    0x3f67ddb5,0x01fb0000,0x02f7fb2a,0x0bffff62,0x4c009f91,0x5401ffff,
    0x001dfeee,0xe80037d4,0x06ffc8cf,0x3bfff200,0xfffda99c,0x2fffee06,
    0x3fbff260,0x215df904,0xe887ffd9,0x3ffd32ff,0xd8afff98,0x442fffff,
    0x01df72ff,0x7fffffd4,0xbfd7001f,0x0002fb83,0x237f20df,0xf880eff8,
    0x06a82fff,0x01fffe80,0x3fea3ff6,0x1bfe2006,0xfd1ff200,0xfe98005f,
    0x3fe602ff,0x0effe986,0x213ffa20,0xff700ffb,0xfb89ffb0,0x8fffe26f,
    0x4099fff8,0x13fe26fd,0x7fff7fc4,0x7f4406ff,0x00bf101f,0xff707f30,
    0xc837fdc5,0x03c85fff,0x01fffe80,0x3feafff7,0x1bffa006,0xc8dff100,
    0x3e2004ff,0xf9803fff,0x17fffc46,0x7c27f440,0x263ec05f,0x7fc42fff,
    0x85fff92f,0xffa84fff,0x6c17ff44,0x3ffffa61,0x03fff300,0xfc8007e8,
    0x10fffcc1,0xff10bfff,0x000e81ff,0xd01fffe8,0x005d4fff,0x006fffc8,
    0xf507ffd4,0x7ff4003f,0xb1ae005f,0x4400bfff,0x03ffcc4f,0xfffb83e2,
    0xfb3fff85,0x7ffe83ff,0x7ec4fff8,0x7cc0dc6f,0xff880fff,0x02fb802f,
    0x7fdc37c0,0x07fffc0f,0xb327ffec,0x3fffa000,0x00ffff01,0x1bfffe60,
    0x47fff700,0x3ee006fc,0x22001fff,0x07fffee6,0xffa89900,0xf706c05f,
    0xfff81fff,0xe83fffb0,0x7ffc46ff,0x003ffec3,0x3f60dffd,0x09f3006f,
    0x7ec27cc0,0x7fff40ff,0x27fff981,0x7764c02c,0x203fffd4,0x88007fff,
    0x006fffbf,0xfbb7ffd4,0x3ffa000d,0x3e28007f,0x88007fff,0x77fffcc3,
    0xfff98301,0x4dff30ef,0x7f41fffa,0x1fffd44f,0x4007fff6,0xffb81fff,
    0x01fa003f,0xfff81fb8,0x1fffec1f,0x68bfffe8,0x6df7fdc0,0x641fffee,
    0x04cffffc,0x3ffe3360,0x7ffc4006,0x54002eef,0x0006ffff,0x01bfffe6,
    0xfffff800,0xffe801df,0x0efc9fff,0xff11fff4,0x3fffb83f,0x4017ffec,
    0xffd01ff9,0x4037753f,0x0fd001fc,0xf907fffe,0x3fea0bff,0x3e604bef,
    0x3fff21ff,0x7fff741f,0x2d7005ef,0x8006fff8,0xdb06fffe,0x7fdcbddd,
    0x2a0004ff,0x0005ffff,0x3ffffea0,0x3e600dff,0x04ffffff,0x3f62bbf2,
    0x3fffc81e,0x201fffec,0xf983fff9,0xffffffff,0x1009f304,0x3fff609f,
    0x02fffe43,0x203fffff,0xfe85fff8,0xffff01ff,0xf887cc00,0x366006ff,
    0xb03fffff,0xfffd87ff,0x3f20003f,0x00004fff,0x7fffffdc,0x3fa603ff,
    0x5c05ffff,0xb00bdeef,0xffd87fff,0xfffd305f,0xfffb89ff,0x5fffd98d,
    0x5f700df0,0x91bfff20,0x7dc09fff,0x3fe606ff,0x1fffe84f,0x200ffff0,
    0x3ffe22e8,0xd3fd8806,0xf703ffff,0x7ffffb09,0x7ffec000,0xb800003f,
    0xffffffff,0x3fffe604,0x009905ff,0x6c3fffe8,0xd7105fff,0x647fffff,
    0x7ffc4fff,0x401fc82f,0x3ffe207e,0x0ffff63f,0x203fff88,0xfe83fffb,
    0xffff01ff,0xff117600,0x5fe880df,0x03bfffe6,0x3fff20db,0x3ee0004f,
    0x26204fff,0x09999999,0xfffff910,0x7df505ff,0xd8bfffff,0x7fec002f,
    0x27ffe43f,0x2ffffe40,0xfc87fffb,0x03fa84ff,0xff3017e2,0xfffffdff,
    0x00ffc803,0x3a0ffff2,0xfff01fff,0x881d700f,0x7f406fff,0x7fffec3f,
    0x7cc07e25,0x20005fff,0x205ffffa,0xfffffeb8,0x7fec402c,0x7fec5fff,
    0x3fffff71,0x3333ffe2,0xffc81abc,0x1fffec3f,0x27fffb80,0x7d43fffe,
    0x40df06ff,0xdc8802fa,0x06fffade,0x7f404f98,0xfffe83ff,0x80ffff01,
    0xbaaaacf8,0xa81affff,0x7fc44fff,0x807d4fff,0x0006ffff,0x01bfffe2,
    0x717fffe6,0x7fff4c03,0xa8fff30f,0xff33ffff,0xffffffff,0x1fffdc3f,
    0x800bfff6,0xff90fffe,0x6fffa89f,0x3f601fb0,0xfff70000,0xb007a007,
    0xffd09fff,0x1fffe03f,0xffffff30,0x0bffffff,0xf30dfff9,0x00bdffff,
    0x001ffffb,0x03ffff40,0x227fffc4,0x7ff4404b,0xb0dff91f,0x7ff4bfff,
    0xffffffff,0xb0fffea7,0x54001fff,0x3ffee6ff,0x82fffcc5,0x05f883fa,
    0x03bffa00,0x3f201a20,0xfffe84ff,0x80ffff01,0xfffffff9,0xd85fffff,
    0xfa81ffff,0xb804ffff,0x4004ffff,0x0bfffe60,0x89ffff10,0xfff9806b,
    0xf70bffd0,0xfffe8bff,0x1fffffff,0xfd89fff1,0x7fcc007f,0x317ffe65,
    0x3e207fff,0x0003fa85,0xb503fff3,0x7d4015c7,0xfffe86ff,0x80ffff01,
    0xccccccc8,0xc82cffff,0xc81fffff,0x20dfffff,0x7fffec1b,0xfb899001,
    0x3e200fff,0x27dc4fff,0xffb3ffc0,0x27fff10d,0xc980afe9,0x13ff20ff,
    0x02987ffb,0xffd07fe6,0x01fff98f,0x01fb03f6,0x07fff300,0x00343ffe,
    0x7dc3fffd,0xfff01fff,0x7fc4000f,0x3ffe606f,0xf710afff,0xbbffffff,
    0xdfffd109,0xd81ed880,0x3e205fff,0x7fdc4fff,0xa8bfea02,0x7fd40fff,
    0x880bfb0e,0x22ffcc6f,0x3fe60fff,0x983fc80e,0x3fea2fff,0x3e17dc05,
    0xfff98006,0x32fffe01,0x3ffe6003,0xfffeecbe,0x3fffc41d,0xdfff1000,
    0xfffffb80,0xfbaefeff,0x406fffff,0x12cffffc,0xea809d73,0xff981cff,
    0x7ffdc3ff,0xd83fe984,0x0ffec4ff,0x7f403ff7,0xf50ffa81,0xffff985f,
    0x5407f71c,0x017f65ff,0x03f997e2,0x037fea20,0x007fff70,0x2bfffd30,
    0x4c2cdffe,0x0000ffff,0x500dfff1,0x5dfffffd,0x0efffe98,0xffffc980,
    0x2002efff,0xeddfffec,0xeb80bdff,0xfecdfeba,0x3bfee01e,0xea80cffc,
    0xdeedccef,0x3f7faa00,0xffff901e,0xb5001bff,0x0019dddf,0x801fc9fa,
    0x000befc9,0x220000a2,0xec80260a,0x004fffff,0x006fff88,0x30026aa6,
    0x26600015,0x880000aa,0x88019aaa,0x00555440,0x20035530,0x8001aa98,
    0xa98800a8,0x06a0001a,0x1542a600,0x00001a80,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x20000000,0x77775c00,0x1003eeee,0xee980000,0x2e001eee,
    0x4eeeeeee,0xddddddb1,0xeeea81bd,0xddddd92e,0xdb105bdd,0x3621dddd,
    0xdeeeeeee,0x777775c3,0x3bbb6e04,0x2e2deeee,0xeeeeeeee,0x3bbaa6ee,
    0x3ae03eee,0x0004eeee,0xeeee9800,0x2a1deeee,0x03eeeeed,0x4fe980c4,
    0x3fffffa0,0x75401fff,0xdffea805,0x3fffe203,0x7ffdc001,0xfffb81ff,
    0x3fa202ff,0x7ffffd41,0x1eff8803,0x2fffff98,0x80077e40,0x82fffff9,
    0xfffffffe,0xffd85fff,0x32602fff,0x1c8000ef,0xfffe8800,0x3ff604ff,
    0x3605d004,0xff981fff,0x06ffffff,0xb017ffae,0x0bffffff,0x000ffff4,
    0x80fffff4,0x402ffffd,0xffff905c,0xd01b6007,0x8801ffff,0x7ff4002f,
    0xffff887f,0x3fffffff,0x3fffffd0,0x80017c40,0xff10005f,0x7dc09fff,
    0x205f7003,0xfc82fffd,0x3fffffff,0x7ffffdc4,0x3ffff205,0xfb05ffff,
    0xf50003ff,0x3ea09fff,0x0f405fff,0x06ffff88,0xffd805f0,0x003f007f,
    0x987fffe8,0xffffffff,0xff900fff,0x7c01dfff,0x0ffb8001,0xffff5000,
    0x4017a03f,0xff302ff9,0x7000be0b,0x0bffff55,0x3faef7e2,0xfd80ffff,
    0xff0001ff,0x7ff40fff,0x80d300ff,0x401ffffd,0xfffd806a,0x8003f007,
    0xfb87fffd,0xc9999abc,0x3ff3206f,0x07a05fff,0x013ffa00,0x6ffffc80,
    0xff5006c8,0xf300805f,0xfffc8000,0xff907905,0xfffb05ff,0x3ff20003,
    0xfff702ff,0x300f207f,0xd80bffff,0x7fffd802,0xd8003f00,0x02d87fff,
    0x55901ff4,0x209fffff,0x7fd4001e,0xf10000ff,0x7549ffff,0xffffb800,
    0x32002ccd,0x000acdef,0x1417ffee,0x82ffff88,0xec89fffd,0x7fc401be,
    0xfff505ff,0x2003e0df,0x300ffffe,0x3fff600f,0x8003f007,0x0187fffd,
    0x59007fc4,0x0bfffff2,0xffb0007a,0x540007ff,0xf99fffff,0xfffe9801,
    0xcc9beeef,0x7ffc1ccc,0x800cffff,0x8005fffb,0xffb07ffd,0xffffbf9f,
    0xffffd803,0xfffffd80,0xfa802d41,0x07903fff,0x01ffff60,0x3f6000fc,
    0xfb8007ff,0xffb16406,0x01e81fff,0x3ffffe60,0x7fe40006,0x4002eeff,
    0xf982fffc,0x3fea2fff,0x3fffffff,0x02fffdc0,0xd82fff40,0xfd10efff,
    0x7fd401ff,0x7d7c43ff,0x016c4fff,0x10fffff0,0x3ff6001f,0x003f007f,
    0x007fffd8,0x16403fd8,0x1dffffd1,0x979000f4,0x0005ffff,0x2fffff44,
    0x17ffe400,0x362fffe8,0xffffffff,0x3fee01ff,0x7fc4005f,0x3fffb03f,
    0x404fffb8,0xa5c7ffff,0x1e27ffff,0x5ffff700,0x3f6004b8,0x03f007ff,
    0x07fffd80,0x2007fc40,0x7fffcc2c,0x44007a5f,0x5ffff88f,0x7ffcc000,
    0x7e4001ff,0xfffb02ff,0x765d4c45,0x00ffffff,0x800bfff7,0x3f606ffa,
    0x7ffc41ff,0x7fffe406,0x7ffe47e2,0x8800972f,0x07c6ffff,0x0ffffb00,
    0xfb0007e0,0xfa800fff,0xfa82c806,0x03d3ffff,0xfffd9320,0x7e40001f,
    0x2000efff,0xfb02fffc,0xfb5005ff,0x3ee05fff,0x7e4005ff,0x3fff600f,
    0x03fffc41,0x557fffe2,0x57fffe25,0xffc8001e,0x800b51ff,0xf007fffd,
    0xfffd8003,0x01fec007,0xfffb8164,0xf001e9ff,0x27fffd41,0x3ffea000,
    0x3f2004ff,0xfffb02ff,0x7ffe4005,0x0bfff704,0x2017fc40,0xff81fffd,
    0x7fec01ff,0x7f42d8ff,0x0006afff,0x3a9ffff3,0x7ffec001,0x8001f007,
    0x2007fffd,0x2c800ff8,0x3fffff60,0xe85b801f,0x0000ffff,0xfffff7f3,
    0x3fff2005,0x05fffb02,0x704ffc80,0x6400bfff,0xfffd803f,0x00ffff81,
    0x3effffd4,0x1fffffd4,0xffffd000,0xffb000d5,0x01f100ff,0x07fffd80,
    0x6401bea0,0x3fffa202,0x81e801ff,0x003ffffb,0xfff72e88,0xff9001ff,
    0x3fff605f,0x17fcc002,0x005fffb8,0x3f6009f5,0x6fff81ff,0x7fffff00,
    0x1fffff10,0x7ffd4000,0xfb8002ff,0x0f8807ff,0xffe89f90,0x0ff6006f,
    0x3e201640,0x5401ffff,0xfccccccf,0xd8007fff,0x27ffff44,0x817ffe40,
    0x8002fffd,0xfff700ff,0x209f100b,0x0fffec19,0x4013ffe2,0x900ffffc,
    0x0000bfff,0x000dffff,0x003fffea,0x3ffea0d5,0x01bfffa2,0xc800ffc4,
    0xffff9802,0x55566c01,0xffffdaaa,0x26172002,0x402fffff,0xfb02fffc,
    0x015c45ff,0xfffb817e,0xd105e805,0x42fffd83,0x1002fff9,0x7cc0bfff,
    0xb80002ff,0x10003fff,0xd803ffff,0x47fff904,0x5004fffe,0x016c00df,
    0x201fffb8,0x7ffc4069,0x01d7006f,0x03ffffee,0x513fffc8,0xfb17ffec,
    0x01d503df,0x202fffe4,0xeeeeeefc,0x2fffd87f,0x2002ffdc,0x7f401ffd,
    0xff100007,0x7ec0001f,0x81b206ff,0x7ffc6ffa,0x07fb001f,0xfb002fc0,
    0x401ec03f,0x402ffffd,0x7ff402fa,0x3fe205ff,0x7ff45cff,0x3ffff22f,
    0x400dc89d,0x2e06fffc,0xffffffff,0x6fffd86f,0x2001bfe2,0x4fb806fa,
    0x13f20000,0x3fff6000,0x0fda88ae,0xff32fec0,0x3fe2005f,0x01ff3001,
    0xf980ff40,0xffff9801,0x00bfee06,0x07fffff9,0x206ffecc,0x3623ffff,
    0x03dfffff,0x01ffffd0,0xfffffff3,0x3db09fff,0x19dfbfd3,0x200fe000,
    0x200001f8,0x700000f9,0x9fffffff,0x3bfee001,0x2a002eff,0xffea806f,
    0xf8801dff,0x803fe881,0x43fffff8,0x3dfffffb,0x7ffffec4,0x20201eff,
    0x4fffffe9,0xb800d4c4,0xefffffec,0xfffff12c,0x07ffffff,0x00015303,
    0x00140030,0x00000c00,0x004d54c4,0x000d4c40,0x00001a98,0xffc81300,
    0xec983dff,0x0effffff,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x3bbbbbaa,
    0xeeeeeeee,0x777776c5,0xeeeeeeee,0xddb34eee,0x9bdddddd,0xdb300579,
    0x009ddddd,0x7777775c,0xddddb32d,0x2009bddd,0xeeeeeed8,0xb00abcde,
    0x4007dddd,0xeeeeeec9,0xdddb54de,0x265bdddd,0xeeeeeeec,0xeeeeeeee,
    0xdddddb31,0xdddddddd,0x776d41dd,0xccdeeeee,0xdddb000b,0x2e00005d,
    0xaaaacfff,0x42fffffb,0xfcacefff,0xfcbacfff,0x7fffcc5f,0xfffcbaaf,
    0xfff8801e,0xff000fff,0x2203ffff,0x003fffff,0x7ffffd10,0x019ffffb,
    0x0009fffd,0x09ffffd1,0x07ffffea,0x5fffff44,0xfffdbaaa,0x7ffffc42,
    0xffecaaab,0xffff980f,0xeffecaaf,0x7fff4402,0xbf900003,0x2ffffe40,
    0x3fee0ffc,0x42fd41ff,0xf986fffe,0xed803fff,0xa804ffff,0x406ffffe,
    0x000ffffd,0x89ffff20,0x640ffffc,0xb0004fff,0x7c03ffff,0x7e407fff,
    0xfd500fff,0x1ffff905,0x7c03fee0,0x7f446fff,0x3f200dff,0xb00003ff,
    0x7fffcc0b,0xfb84f81f,0x85b81fff,0xf706fffd,0xd7900fff,0xd801ffff,
    0x406ffffa,0x000ffffd,0x21fffee0,0x7dc5fffe,0xf90004ff,0x7f401fff,
    0x7fe406ff,0x0be200ff,0x803ffff2,0xfffd00fb,0xdfffd10d,0x01fffdc0,
    0x3a01d800,0x1f04ffff,0x03ffff70,0xdfffb0b1,0x07fffe60,0xffff7790,
    0xfffbc407,0x7ffe406f,0x7fdc0007,0x7fffd87f,0x0027ffdc,0x00ffffc8,
    0x901bfffa,0xd801ffff,0x0ffffc82,0x3a01f104,0xff106fff,0x3fee09ff,
    0x0b00003f,0x037fffdc,0x3fffee05,0xfffb0501,0x3fffe20d,0x7fc5e404,
    0x7d3206ff,0x7e406fff,0x5c0007ff,0xffc87fff,0x3ffee1ff,0xfff90004,
    0x7fff401f,0x7fffe406,0x320ae380,0x22c0ffff,0xdfffd00d,0x07fffec0,
    0x001fffdc,0x3ffe2000,0xfb8002ff,0x36001fff,0xff306fff,0x93c809ff,
    0x3e03ffff,0x80dffff0,0x0007fffc,0x643fffdc,0x7fdc7fff,0x05bfb54f,
    0x00ffffc8,0x901bfffa,0x4981ffff,0x0ffffc80,0x7f4011a6,0x3fea06ff,
    0xfffb84ff,0x33333263,0x3ff60002,0xf70005ff,0x6c003fff,0xff706fff,
    0x33c805ff,0xb50bffff,0x2037fffc,0x0007fffc,0x743fffdc,0x7fdc4fff,
    0xfffffccf,0x3ffff201,0x1bfffa00,0x81ffff90,0xfffc804c,0xe801ae0f,
    0x3e606fff,0xffb87fff,0x0f7fcc3f,0xffff5000,0x3ee0001f,0x36001fff,
    0xfe886fff,0x23c805ff,0x740ffffd,0x01bfffe2,0x000ffff9,0x4c7fffb8,
    0x7dc1ffff,0xff98cfff,0x3fff206f,0x3fffa00f,0x7fffe406,0x32013ee0,
    0xdd30ffff,0x37fff400,0x0fffff10,0xbf07fff7,0xfffd0000,0x7dc0007f,
    0x36001fff,0xd5316fff,0x90019fff,0x27fffd47,0x6ffff8d3,0x03fffe40,
    0x5fffee00,0x81dfffda,0x7fc5fffb,0x3fff207f,0xeeeeeeef,0x6406ffff,
    0xfecbffff,0xfffc804f,0x006ffdcf,0xf01bfffa,0xfb81ffff,0x0026c3ff,
    0x37fffe40,0x3ffee000,0x3ff6001f,0xffffffff,0xd0f2000d,0x21e4ffff,
    0x6406ffff,0x40007fff,0xfffffffb,0x3fee02de,0x07fff44f,0xccffffc8,
    0xfffccccc,0x7ffe406f,0x04fffedf,0xdcffffc8,0x3fa006ff,0x7ffc06ff,
    0x7ffdc1ff,0x20001323,0x01fffff9,0x7fffdc00,0x3fff6001,0x0dffff76,
    0x7fdc3c80,0x7c0f8aff,0x7e406fff,0x5c0007ff,0xb8007fff,0x7ff44fff,
    0xffff901f,0x37fff401,0x43ffff20,0xfc804fc8,0x0df30fff,0x037fff40,
    0x70fffff1,0x0bf27fff,0x3fffa000,0x5c00804f,0x2001ffff,0x3f66fffd,
    0x32004fff,0x77fffc43,0x6ffff84b,0x03fffe40,0x1fffee00,0x13ffee00,
    0x3203fffd,0x3a00ffff,0x7e406fff,0x026c0fff,0x507fffe4,0x7fff400d,
    0x3fffe606,0xccfffb86,0x20000fff,0x00effffb,0x3fee00dc,0x3f6001ff,
    0x3ffe26ff,0x079002ff,0x03fffff9,0xc80dffff,0x16007fff,0x001fffee,
    0xfd13ffee,0x3ff203ff,0x3ffa00ff,0x7ffe406f,0x6402540f,0x1a20ffff,
    0x37fff404,0x0bffff30,0xfffffff7,0x3e2000bf,0xf802ffff,0x7fffdc00,
    0x3fff6001,0x7ffffd46,0xf983c800,0xfff06fff,0xfffc80df,0xf7095007,
    0xf7000fff,0xfffe89ff,0x1ffff901,0x037fff40,0x103ffff2,0xffff9009,
    0xe82a8581,0x3ee06fff,0xffb82fff,0x3ffff8df,0xffffd800,0xb807a805,
    0x2001ffff,0xfc86fffd,0x3c805fff,0x205fffb0,0x6406ffff,0x9b007fff,
    0x00ffff70,0xe89fff70,0xff901fff,0x7ff401ff,0x7ffe406f,0xfc80080f,
    0x6c040fff,0x06fffe81,0x5c17fffa,0xfff53fff,0x7fcc001f,0x74400fff,
    0xffffb807,0x3fff6001,0x7ffffd07,0xff503c80,0x37fffc0f,0x03ffff60,
    0xff707f30,0xff7000ff,0x1fffe89f,0x01ffff90,0x2037fff4,0x001ffffc,
    0x01ffff90,0xffe80fa8,0xffff506f,0x8fffee01,0x2006fffd,0x403ffffe,
    0xfb806ffa,0x3a002fff,0xff307fff,0x1ec03fff,0x7fc07fd0,0x7fec06ff,
    0x3fe600ff,0x0ffffc82,0x27ffe400,0x6407fffa,0x3e01ffff,0x7e407fff,
    0xb0001fff,0x5403ffff,0xffffd07f,0x03dffd10,0xf127ffe4,0xf7007fff,
    0x3333ffff,0xbfffb533,0x7ffffb00,0x3fffe200,0xffff700f,0x01ff101d,
    0x7fcc03ee,0x3fa00fff,0x9999cfff,0xd81fffca,0x4002ffff,0x7fc5fffd,
    0xfffd03ff,0x3ffe205f,0x3ffa00ff,0xfd0003ff,0x26239fff,0xf886ffeb,
    0xb98affff,0x6c00cfff,0x7fdc5fff,0x3fe201ff,0xffffffff,0x4fffffff,
    0xffffd910,0x32609bff,0xdffffffe,0xfffffd82,0xbffff933,0xfca85883,
    0x2cefffff,0xfffffd93,0xffffffff,0x3fb221ff,0x03dfffff,0xdfffffd8,
    0x3fffffe8,0xfffffd93,0x3ff2a9bf,0x32cfffff,0xffffffd9,0xfd93009b,
    0xffffffff,0x54bfffff,0xffffffec,0x800adeff,0x15fffffd,0x09fffffb,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x80000000,0xeeeeeed9,0x01bccdee,0x43ddddd3,0xeeeeeec9,
    0x776c41ee,0x3ae2eeee,0x2deeeeee,0x1bdddd90,0x3bbbbb26,0x37aa3dee,
    0x005d5002,0x00000000,0x00000000,0x0002dea8,0x66666654,0xc8b332e1,
    0x9931cccc,0x06541999,0x7fc40000,0xffdcafff,0xfff104ff,0xfffd105f,
    0xfff9809f,0xfffff303,0x19fd100d,0x9fffff10,0x007fff88,0xb88007f5,
    0x2600adfd,0x400bdfec,0x01befeca,0x02dfec88,0x92af7fb2,0x32e7fff8,
    0x3bae2ccc,0x7ffffb11,0xff889f90,0x3ffea3ff,0x0b7fea0f,0xfffb0000,
    0x5ffff98f,0x205fffd0,0x401ffffc,0x7cc01ef9,0xe800ffff,0x7fffec05,
    0x0ffffd41,0x3001fd40,0x1fff35ff,0xf717ff50,0x35fb103f,0x5407fff5,
    0x84fe89ff,0x4feb8dfd,0xd87fffea,0xfffb4fff,0x17fffc49,0xfffd835c,
    0x107fffc3,0x017dffd7,0xffff9000,0x05ffff50,0x3205fffb,0x2601ffff,
    0xffb000df,0x0f9807ff,0x07fffe40,0xa8037ffc,0x7ff3003f,0x3ea27ff4,
    0x207ff46f,0x7ffe46fd,0x2a4ff981,0x87fe62ff,0x37ffc5f8,0x3f33ffee,
    0x7fe44fff,0xf903d85f,0xffff87ff,0xbfffb500,0x7fe40003,0xffff887f,
    0x02fffd85,0x201ffff9,0x7c4003fa,0x3a00ffff,0xffffc803,0x000cc980,
    0x3fa007f5,0xd1ffee1f,0x6ffc89ff,0xfb8bffe6,0x2ffe83ff,0xffc9bfe2,
    0x33262d45,0xaffffd41,0x7fc40ed9,0x403e20ff,0x7fc3fffc,0x7dc400ff,
    0x4000beff,0xff07fffc,0xfffb0bff,0x3ffff205,0x0002fb80,0x209ffff9,
    0xfff9006a,0x2a00001f,0xfffa803f,0xfb93fa20,0x7ffdc3ff,0x5c7fff11,
    0x7fd43fff,0x43ffe20f,0x0a1efffc,0x1ffffa80,0x47fffb00,0x3fff204b,
    0x007fffc3,0x39fffb50,0x1ffff200,0x20bfffe6,0xf902fffd,0x1ed81fff,
    0x3ffe2000,0x017440ff,0x00ffffc8,0x007f5000,0x8101fff9,0x7dc3fffc,
    0x42f6a3ff,0x5c4fffd8,0xf9999fff,0xffff52ff,0xff50007f,0x7fcc00ff,
    0xfc803a7f,0x7fffc3ff,0xffc98000,0x7fe401ef,0x7fffd87f,0x205fffb0,
    0xd10ffffc,0xf700001b,0x05c8bfff,0x03ffff20,0xeeeeea80,0xeeeeefee,
    0x3fffb2ee,0x85fffb00,0x9105fffb,0xd89fffbf,0xeeeeefff,0x3fffa2ee,
    0x7d4005ff,0x7f4006ff,0x64059aff,0x7ffc3fff,0xfb30000f,0xffc805ff,
    0xfffb317f,0x3fff601b,0x1ffff902,0x0001dff3,0x47ffffa0,0x3f2000f8,
    0x2a000fff,0xffffffff,0x3fffffff,0xd005fffd,0xffb85fff,0xb9ffb85f,
    0x7ff44fff,0xffd1001f,0x54009fff,0x5c005fff,0x402cefff,0x7fc3fffc,
    0x754000ff,0xc800cfff,0xffffffff,0x7fec01ef,0xffff902f,0x00bffff9,
    0x3fffea00,0xfc8007b5,0x01500fff,0x6c01fd40,0xfd804fff,0x7ffdc2ff,
    0x5c3ffa24,0x7fec4fff,0x3f62002f,0x0cc0ffff,0x0027ffd4,0x4037fffc,
    0x7fc3fffc,0xfc8800ff,0x64002eff,0xecbaffff,0xfb01dfff,0x3ff205ff,
    0xfffffeff,0xffd00003,0x9000d9ff,0xf881ffff,0x7f5004ff,0x1ffff700,
    0x42fffc80,0x3f63fffb,0x13ffee4f,0x500bfff9,0x22ffffb8,0x7fd45ffe,
    0xffc8004f,0xfffb803f,0x007fffc3,0x039fffb5,0x1ffff200,0x20fffff6,
    0xf902fffd,0xfff53fff,0x300005ff,0x005fffff,0x81ffff90,0x800ffffc,
    0xff9803fa,0xf30885ff,0xfffc87ff,0x5c7fff10,0x7fcc4fff,0x791b81ff,
    0xf32fff98,0x7fd43fff,0xff88004f,0xfffa800f,0x07ffff64,0x17dffd71,
    0xfffc8000,0x3ffffd07,0x902fffd8,0x3f21ffff,0x0000ffff,0x00ffffd8,
    0x0ffffc80,0x01ffffe4,0xfd801fd4,0x1b30cfff,0x3f627fe4,0x3bffee4f,
    0x84ffffca,0x50bffffe,0x3f607dc9,0x1ffff30f,0x0027ffdc,0xd1004fd8,
    0xff9d9fff,0x7ffd45ff,0x3200001d,0xff907fff,0xfffd89ff,0x1ffff902,
    0x077fffec,0x3fff2000,0xffc8000f,0x7ff440ff,0x03fa804f,0xfffffd10,
    0xffe881ff,0x4c1bff30,0xfadfffff,0x3e60dfff,0x46ffffff,0x13fa1efb,
    0xffc89ffb,0x3f30005f,0x7fff4c00,0x25fffff3,0x00000bfa,0x507fffc8,
    0xfd8bffff,0xfff902ff,0x7fff441f,0x7e40005f,0xc8000fff,0x1100ffff,
    0x07f5003f,0x7fffec40,0x37ff201d,0xdff904ff,0x4077fe45,0x0cffffe8,
    0x7ff7ef5c,0xffc81104,0x8001dfff,0x00330002,0x20000004,0xf707fffc,
    0xffd89fff,0xffff902f,0xfffff981,0x3ff20003,0xfc8000ff,0x1aa00fff,
    0x4001fd40,0x54c00198,0x00401000,0x41100cc4,0x00000019,0x00000000,
    0x32000000,0xffb07fff,0xfffd85ff,0x3ffff902,0x5fffff70,0x3fff2000,
    0xffc8000f,0x013600ff,0x00000000,0x00000000,0x00000000,0x00000000,
    0xb0000000,0xff50ffff,0xfffd09ff,0x3ffff205,0xfffffb01,0xfffb0005,
    0xffb0001f,0x0bb101ff,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x517ffffd,0x207ffff9,0xfd04ffff,0x3ea07fff,0x002fffff,
    0x017ffff4,0x17ffff40,0x00000b62,0x00000000,0x00000000,0x00000000,
    0x00000000,0xfec98000,0xefffffff,0xffd303ce,0x3b269fff,0x2dffffff,
    0x3fffffae,0x32e02eff,0xdffffffe,0x3fb2600c,0x03dfffff,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x80000000,
    0x54cccccb,0x23999999,0x0000cccb,0x000015c4,0x93000000,0x91999999,
    0xcca87999,0xcccccccc,0x88000403,0x80401000,0x33102028,0x33333333,
    0x22133333,0x01502aaa,0x21100098,0xaaaaaaa8,0x2eeeee22,0xbbbbbbbb,
    0xffd8803b,0x3fff20ff,0x000fec1f,0x327ffb30,0xfb52cccc,0x9999705b,
    0x30fbf6a5,0x26017dfb,0xd10fffff,0xadfd815f,0x2ffffb99,0x3000ff20,
    0x3df9009f,0x3ea1efc8,0x93fa62ff,0xfffffffa,0xffffffff,0x887fff23,
    0xfeb83fff,0x47600bef,0xfffffff9,0xfffff30f,0xffffffff,0xff1001ff,
    0x7ffc41ff,0x4002642f,0x0beffeb8,0xf99fffd1,0xe885ffff,0xfffbcfff,
    0xffff74ff,0x7ffcc0bf,0x3605f11f,0x05fffe84,0x3a0037fc,0x3fe601ff,
    0x97ffe65f,0x3f66fffe,0xdddd50ff,0xdddddddd,0xffc85ddd,0x91bffee3,
    0xbffffdff,0xff30f985,0x21ffffff,0xaaaaaaa8,0x2aaaaaaa,0x0ffff600,
    0x0e89fffd,0x3fff2600,0xffff902d,0x0dfff319,0x21bffff7,0xd0defffe,
    0x7e403fff,0x6c0796ff,0x07fffdc0,0xa8017f60,0x3ea05fff,0x3ffea5ff,
    0x47ffffa5,0x0001fffe,0xfb9bf200,0x88be26ff,0xedffffeb,0x3333224f,
    0x0000cccc,0x7ffcc000,0x9ffffa66,0xffb50069,0xffb8019f,0x07fffc5f,
    0xf91bffea,0xfffc8dff,0x3fffe202,0x3e20c06c,0x1ed83fff,0x813a63f5,
    0x302ffafe,0x7fc49fff,0x3fffa64f,0x000fffb2,0x221fb000,0x81662ffe,
    0x03efffc9,0x00000000,0x323fffd0,0x772fffea,0x77ffdc40,0x3ffee002,
    0x20ffff44,0x7dc4fffa,0x7ffdc4ff,0x7fffe403,0x7ffec001,0xd3fff986,
    0x2e03ffee,0x7c0df74f,0x17ffc2ff,0xdff73d44,0x55555544,0xaaaaaaaa,
    0x1307201a,0x05300188,0x00000000,0xd4fffb80,0x0757ffee,0x0efffec4,
    0x27ffdc00,0xf507fffa,0xfffb89ff,0x027ffdc4,0x00ffffe2,0x02ffffa8,
    0xfddbfff9,0x1ff109ff,0xffd81ff4,0xc807fec0,0xfa93fe64,0xffffffff,
    0x03ffffff,0x00000000,0x00000000,0x4affff88,0x0b5ffff1,0x0077ffea,
    0x227ffdc0,0x7d41fffe,0x7ffdc4ff,0x027ffdc4,0x007fffdc,0x005fffe8,
    0x3f200b6e,0x5c07fd43,0x106fa86f,0x222ff85f,0xaaaaaaaa,0x1aaaaaaa,
    0x00000000,0x00000000,0x3ffffd00,0x017fffec,0x05dfff93,0x44fffb80,
    0x7d41fffe,0x7ffdc4ff,0x027ffdc4,0x01ffffc4,0x007fffdc,0x204fb6c4,
    0x09fb06f9,0x09f109f1,0x01fb07d3,0x00000000,0x00000000,0xf7000000,
    0xfffa8dff,0xffd5000f,0xff70019f,0x1fffe89f,0x2e27ffd4,0x7fdc4fff,
    0xffdd804f,0x3fe200ff,0x7cc183ff,0xd01dfb4f,0x03fe205f,0x2a1740ba,
    0x000d501d,0x00000000,0x00000000,0x3fe20000,0x05fff84f,0xdfffc980,
    0x13ffee02,0xfa83fffd,0x7ffdc4ff,0x027ffdc4,0x27fff56a,0x50dfffb0,
    0xf51ffc87,0x406fa87f,0x500a85fc,0x00188001,0x00000000,0x00000000,
    0x3f600000,0x02ffc81f,0x3ffae200,0x7ffdc0bf,0x20ffff44,0x7dc4fffa,
    0x7ffdc4ff,0x7d43a204,0xffa81fff,0x217441ff,0x20ff45f9,0x154400aa,
    0x00000000,0x00000000,0x00000000,0x7d400000,0x000ff306,0x17ffecc0,
    0xfe89fff9,0x7ffdc1ff,0x227ffdc5,0xd104fffc,0x86ffff89,0x2e25fffe,
    0x000001fe,0x00000000,0x00000000,0x00000000,0x00000000,0x0027407f,
    0xb1f5c400,0xfff8bfff,0x37ffe42f,0xfb1bfff2,0xffd98bff,0xffffc8cf,
    0xffff71ef,0x3fffffff,0x00000000,0x00000000,0x00000000,0x00000000,
    0x02600000,0x00000098,0xfffffd84,0xfffffe8c,0xdfffff93,0xdfffff91,
    0xbfffffb1,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,
};

static signed short stb__times_bold_33_usascii_x[95]={ 0,2,2,0,1,2,1,2,1,0,1,0,0,0,
1,0,1,1,0,0,0,1,1,1,1,0,2,2,0,0,0,1,1,0,0,1,0,0,0,1,0,0,0,0,
0,0,0,1,0,1,0,1,1,0,0,0,0,0,0,3,0,0,2,-1,0,1,0,1,1,1,0,1,1,0,
-1,0,0,1,1,1,0,1,1,1,0,0,0,0,0,0,0,2,2,1,0, };
static signed short stb__times_bold_33_usascii_y[95]={ 26,5,5,5,5,5,5,5,5,5,5,8,21,17,
21,5,5,5,5,5,5,6,5,6,5,5,12,12,9,12,9,5,5,5,6,5,6,6,6,5,6,6,6,6,
6,6,6,5,6,5,6,5,6,6,6,6,6,6,6,6,5,6,5,30,5,11,6,11,6,11,5,11,6,5,
5,6,6,11,11,11,11,11,11,11,7,12,12,12,12,12,12,5,5,5,15, };
static unsigned short stb__times_bold_33_usascii_w[95]={ 0,6,12,15,13,26,23,5,9,9,13,17,7,10,
6,9,13,12,14,14,14,13,13,14,13,14,6,6,17,17,17,13,27,22,19,19,21,19,18,22,23,11,15,24,
19,28,21,22,18,22,22,15,18,22,22,30,22,22,20,6,9,7,14,17,7,14,16,12,15,12,13,14,15,8,
9,17,8,24,15,13,16,15,12,10,10,16,15,22,15,15,13,9,3,9,17, };
static unsigned short stb__times_bold_33_usascii_h[95]={ 0,22,11,22,24,22,22,11,27,27,13,17,11,4,
6,22,22,21,21,22,21,21,22,21,22,22,15,20,15,8,15,22,28,21,20,22,20,20,20,22,20,20,21,20,
20,20,21,22,20,27,20,22,20,21,21,21,20,20,20,26,22,26,12,3,6,16,21,16,21,16,21,22,20,21,
28,20,20,15,15,16,22,22,15,16,20,15,15,15,14,21,14,28,28,28,6, };
static unsigned short stb__times_bold_33_usascii_s[95]={ 255,158,142,198,121,214,1,163,63,73,113,
97,155,220,195,166,113,24,37,127,237,10,142,162,84,176,181,90,24,169,234,
241,11,199,1,25,211,191,172,45,148,78,146,30,93,64,177,135,113,83,41,
68,22,123,100,69,222,55,1,114,156,106,127,231,187,142,52,115,207,157,223,
98,132,1,1,233,21,58,42,128,181,165,188,170,245,217,201,1,83,191,99,
53,49,39,202, };
static unsigned short stb__times_bold_33_usascii_t[95]={ 1,1,117,1,1,1,30,117,1,1,117,
96,117,117,117,30,30,53,53,30,30,53,30,53,30,30,96,96,117,117,96,
1,1,53,96,30,75,75,75,30,75,96,53,96,75,75,53,1,75,1,75,
30,75,53,53,53,53,96,75,1,30,1,117,117,117,96,53,96,30,96,30,
30,75,53,1,75,96,117,117,96,1,1,96,96,53,96,96,117,117,30,117,
1,1,1,117, };
static unsigned short stb__times_bold_33_usascii_a[95]={ 119,159,265,238,238,477,397,132,
159,159,238,272,119,159,119,132,238,238,238,238,238,238,238,238,
238,238,159,159,272,272,272,238,443,344,318,344,344,318,291,371,
371,186,238,371,318,450,344,371,291,371,344,265,318,344,344,477,
344,344,318,159,132,159,277,238,159,238,265,212,265,212,159,238,
265,132,159,265,132,397,265,238,265,265,212,186,159,265,238,344,
238,238,212,188,105,188,248, };

// Call this function with
//    font: NULL or array length
//    data: NULL or specified size
//    height: STB_FONT_times_bold_33_usascii_BITMAP_HEIGHT or STB_FONT_times_bold_33_usascii_BITMAP_HEIGHT_POW2
//    return value: spacing between lines
static void stb_font_times_bold_33_usascii(stb_fontchar font[STB_FONT_times_bold_33_usascii_NUM_CHARS],
                unsigned char data[STB_FONT_times_bold_33_usascii_BITMAP_HEIGHT][STB_FONT_times_bold_33_usascii_BITMAP_WIDTH],
                int height)
{
    int i,j;
    if (data != 0) {
        unsigned int *bits = stb__times_bold_33_usascii_pixels;
        unsigned int bitpack = *bits++, numbits = 32;
        for (i=0; i < STB_FONT_times_bold_33_usascii_BITMAP_WIDTH*height; ++i)
            data[0][i] = 0;  // zero entire bitmap
        for (j=1; j < STB_FONT_times_bold_33_usascii_BITMAP_HEIGHT-1; ++j) {
            for (i=1; i < STB_FONT_times_bold_33_usascii_BITMAP_WIDTH-1; ++i) {
                unsigned int value;
                if (numbits==0) bitpack = *bits++, numbits=32;
                value = bitpack & 1;
                bitpack >>= 1, --numbits;
                if (value) {
                    if (numbits < 3) bitpack = *bits++, numbits = 32;
                    data[j][i] = (bitpack & 7) * 0x20 + 0x1f;
                    bitpack >>= 3, numbits -= 3;
                } else {
                    data[j][i] = 0;
                }
            }
        }
    }

    // build font description
    if (font != 0) {
        float recip_width = 1.0f / STB_FONT_times_bold_33_usascii_BITMAP_WIDTH;
        float recip_height = 1.0f / height;
        for (i=0; i < STB_FONT_times_bold_33_usascii_NUM_CHARS; ++i) {
            // pad characters so they bilerp from empty space around each character
            font[i].s0 = (stb__times_bold_33_usascii_s[i]) * recip_width;
            font[i].t0 = (stb__times_bold_33_usascii_t[i]) * recip_height;
            font[i].s1 = (stb__times_bold_33_usascii_s[i] + stb__times_bold_33_usascii_w[i]) * recip_width;
            font[i].t1 = (stb__times_bold_33_usascii_t[i] + stb__times_bold_33_usascii_h[i]) * recip_height;
            font[i].x0 = stb__times_bold_33_usascii_x[i];
            font[i].y0 = stb__times_bold_33_usascii_y[i];
            font[i].x1 = stb__times_bold_33_usascii_x[i] + stb__times_bold_33_usascii_w[i];
            font[i].y1 = stb__times_bold_33_usascii_y[i] + stb__times_bold_33_usascii_h[i];
            font[i].advance_int = (stb__times_bold_33_usascii_a[i]+8)>>4;
            font[i].s0f = (stb__times_bold_33_usascii_s[i] - 0.5f) * recip_width;
            font[i].t0f = (stb__times_bold_33_usascii_t[i] - 0.5f) * recip_height;
            font[i].s1f = (stb__times_bold_33_usascii_s[i] + stb__times_bold_33_usascii_w[i] + 0.5f) * recip_width;
            font[i].t1f = (stb__times_bold_33_usascii_t[i] + stb__times_bold_33_usascii_h[i] + 0.5f) * recip_height;
            font[i].x0f = stb__times_bold_33_usascii_x[i] - 0.5f;
            font[i].y0f = stb__times_bold_33_usascii_y[i] - 0.5f;
            font[i].x1f = stb__times_bold_33_usascii_x[i] + stb__times_bold_33_usascii_w[i] + 0.5f;
            font[i].y1f = stb__times_bold_33_usascii_y[i] + stb__times_bold_33_usascii_h[i] + 0.5f;
            font[i].advance = stb__times_bold_33_usascii_a[i]/16.0f;
        }
    }
}

#ifndef STB_SOMEFONT_CREATE
#define STB_SOMEFONT_CREATE              stb_font_times_bold_33_usascii
#define STB_SOMEFONT_BITMAP_WIDTH        STB_FONT_times_bold_33_usascii_BITMAP_WIDTH
#define STB_SOMEFONT_BITMAP_HEIGHT       STB_FONT_times_bold_33_usascii_BITMAP_HEIGHT
#define STB_SOMEFONT_BITMAP_HEIGHT_POW2  STB_FONT_times_bold_33_usascii_BITMAP_HEIGHT_POW2
#define STB_SOMEFONT_FIRST_CHAR          STB_FONT_times_bold_33_usascii_FIRST_CHAR
#define STB_SOMEFONT_NUM_CHARS           STB_FONT_times_bold_33_usascii_NUM_CHARS
#define STB_SOMEFONT_LINE_SPACING        STB_FONT_times_bold_33_usascii_LINE_SPACING
#endif

