// Font generated by stb_font_inl_generator.c (4/1 bpp)
//
// Following instructions show how to use the only included font, whatever it is, in
// a generic way so you can replace it with any other font by changing the include.
// To use multiple fonts, replace STB_SOMEFONT_* below with STB_FONT_times_bold_34_usascii_*,
// and separately install each font. Note that the CREATE function call has a
// totally different name; it's just 'stb_font_times_bold_34_usascii'.
//
/* // Example usage:

static stb_fontchar fontdata[STB_SOMEFONT_NUM_CHARS];

static void init(void)
{
    // optionally replace both STB_SOMEFONT_BITMAP_HEIGHT with STB_SOMEFONT_BITMAP_HEIGHT_POW2
    static unsigned char fontpixels[STB_SOMEFONT_BITMAP_HEIGHT][STB_SOMEFONT_BITMAP_WIDTH];
    STB_SOMEFONT_CREATE(fontdata, fontpixels, STB_SOMEFONT_BITMAP_HEIGHT);
    ... create texture ...
    // for best results rendering 1:1 pixels texels, use nearest-neighbor sampling
    // if allowed to scale up, use bilerp
}

// This function positions characters on integer coordinates, and assumes 1:1 texels to pixels
// Appropriate if nearest-neighbor sampling is used
static void draw_string_integer(int x, int y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0, cd->t0); glVertex2i(x + cd->x0, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t0); glVertex2i(x + cd->x1, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t1); glVertex2i(x + cd->x1, y + cd->y1);
        glTexCoord2f(cd->s0, cd->t1); glVertex2i(x + cd->x0, y + cd->y1);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance_int;
    }
    glEnd();
}

// This function positions characters on float coordinates, and doesn't require 1:1 texels to pixels
// Appropriate if bilinear filtering is used
static void draw_string_float(float x, float y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0f, cd->t0f); glVertex2f(x + cd->x0f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t0f); glVertex2f(x + cd->x1f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t1f); glVertex2f(x + cd->x1f, y + cd->y1f);
        glTexCoord2f(cd->s0f, cd->t1f); glVertex2f(x + cd->x0f, y + cd->y1f);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance;
    }
    glEnd();
}
*/

#ifndef STB_FONTCHAR__TYPEDEF
#define STB_FONTCHAR__TYPEDEF
typedef struct
{
    // coordinates if using integer positioning
    float s0,t0,s1,t1;
    signed short x0,y0,x1,y1;
    int   advance_int;
    // coordinates if using floating positioning
    float s0f,t0f,s1f,t1f;
    float x0f,y0f,x1f,y1f;
    float advance;
} stb_fontchar;
#endif

#define STB_FONT_times_bold_34_usascii_BITMAP_WIDTH         256
#define STB_FONT_times_bold_34_usascii_BITMAP_HEIGHT        138
#define STB_FONT_times_bold_34_usascii_BITMAP_HEIGHT_POW2   256

#define STB_FONT_times_bold_34_usascii_FIRST_CHAR            32
#define STB_FONT_times_bold_34_usascii_NUM_CHARS             95

#define STB_FONT_times_bold_34_usascii_LINE_SPACING          22

static unsigned int stb__times_bold_34_usascii_pixels[]={
    0x00a876e0,0x5c015970,0x0265c01e,0x2a2001c4,0x01bcddcb,0x45555550,
    0x00aaaaaa,0xabddba88,0x00f60001,0x31000000,0x00135795,0x062054c0,
    0x9100a200,0x42ea8039,0x001765e8,0xff702ea8,0x0033a23f,0x7e40ffae,
    0x017ff502,0xb5001eb8,0x953357bf,0xea9807db,0x3fff67ff,0x3fa600ab,
    0xeffdbbdf,0xfffb7001,0xfff9037d,0x7f547fff,0x7ff4c06f,0x1effebbd,
    0xf9ffb300,0xe989d31b,0xfe9bffff,0xffe80dff,0x30bf200f,0x0017e4bf,
    0xffd01fc8,0x007ec47f,0x7e41ffcc,0x402ffa82,0xf9800ee8,0xed8800be,
    0xb3ffd400,0xff900bff,0x9fff103f,0x745ff440,0x5c2ffd9b,0xf883ffff,
    0x0fffdc05,0x2027ffc4,0xff50dff9,0x3ffe09ff,0xfffdcedf,0x1ffffcc6,
    0x3fb81fd0,0x7c0013e6,0x07ffee06,0xfd001df1,0xf82fc81f,0x01fd807f,
    0x50005fb8,0x3ffd401f,0xfe809ffb,0x3fe602ff,0x74dfd06f,0x3fa13f63,
    0x00f885ff,0xa80bfffa,0xfd106fff,0x4fffd83f,0x43ffffd0,0x3e63fffb,
    0x1fe03fff,0x00ff07f2,0xdb809f30,0xd00dfb01,0x42fc85ff,0x7ec07ff9,
    0x003fd806,0xff303540,0x9027fecf,0xf900bfff,0x3ffb89ff,0xf509d0fa,
    0x05a81fff,0x2017fff2,0xfe84fffd,0x4fffc86f,0x889fffb0,0xff10ffff,
    0x17e605ff,0x03f903fa,0x0001fc80,0x3e027fcc,0x217e43ff,0xf700fff9,
    0x03fb805f,0x2607b000,0x13ff67ff,0x017fffcc,0x90ffffd4,0x2e1f4bff,
    0x87fffd04,0xffff302d,0xffff3005,0x42fffc43,0xfb04fffc,0xfffd07ff,
    0x807fffc3,0xa86f83fb,0x03f4004f,0x00ffe800,0xfc83fff1,0x80fffc42,
    0x2fcc07fe,0x2c400cc0,0x3f67ff98,0xffffd04f,0x3fffe001,0x753fff26,
    0xffb81c43,0xfe81e26f,0xff000fff,0x7ffd4dff,0x04fffc84,0xfb07fffb,
    0x3ffec7ff,0x37fb3331,0x813bf533,0x13e6006f,0x1fffff4c,0xf304ffc8,
    0x82fc81ff,0xffa82fff,0x3007f405,0xffd59bff,0xfff30581,0x7cc27fec,
    0x3a006fff,0xff31ffff,0x4007ddff,0x972ffff8,0x1bfffe20,0x0ffffe80,
    0xf909fff9,0x3ff609ff,0x4fffd83f,0xffa97fee,0xffffffff,0x0fec5fff,
    0x7c02fb80,0xff503fff,0x0fff501f,0x7ffd05f9,0x4c09ffd0,0x47fee03f,
    0x1c86ffdd,0x3f67ff98,0xffffa84f,0x3fff6006,0x3ffffa2f,0x7fe4004f,
    0x3ea03d5f,0x36006fff,0xffb2ffff,0x9fff909f,0x20ffff60,0x3ea4fffd,
    0x3f33263f,0xdfeccccf,0x801fd43c,0xfffd807e,0x05fff303,0x5f90dff3,
    0xf985ff90,0x03f203ff,0xff927fdc,0xf307509f,0x427fecff,0x005ffffb,
    0xa93ffff6,0x0effffff,0x5ffff100,0x7fffdc0d,0x3fff6005,0x09fffb3f,
    0x3609fff9,0xffd83fff,0x407fe23f,0x00fe85f9,0xbf100df1,0x07fffb00,
    0x7c13ffe2,0xd82fc86f,0x7ffd40ff,0x260bf102,0x3ff60fff,0xf984982f,
    0x213ff67f,0x004ffffd,0x317ffff2,0x7fffffff,0x3ffff600,0x3ffff603,
    0x3fff2004,0x0bfff95f,0x3609fff9,0xffe83fff,0xf703f41f,0xfd80df07,
    0x4017dc00,0xf103fffd,0x3fe60bff,0x3e217e41,0x2fffb82f,0x3fa05f30,
    0x83fff43f,0x27ff983a,0xffd84ffd,0x3f2004ff,0xfd885fff,0x804fffff,
    0x200ffffa,0x004ffffd,0x4d3ffff2,0xffc86fff,0x7fffb04f,0xd81ffff0,
    0xf30bf206,0x403fb80b,0xffd800fd,0xdfff103f,0xf91774c0,0xc817f4c5,
    0x3f502fff,0xf83fff50,0x305905ff,0x27fecfff,0x02ffffdc,0x07ffffb0,
    0x7fffffdc,0x05ffe802,0x02ffffdc,0x47ffffb0,0x3a21fffe,0xffb04fff,
    0x7ffcc1df,0x3fa05b83,0x2201fdc0,0x017e205f,0xf01fffec,0x9f500fff,
    0x017dcbf2,0x5c07fff6,0x46ffe80f,0x3d03fffa,0x7ecfff30,0xffffa84f,
    0x3fffa006,0x7fff402f,0xffb807ff,0x7fffd402,0x3fff6006,0x3fffe62f,
    0x4fffeebb,0x5ddfffb0,0x2a0bffd5,0x7ffffd44,0xffffffff,0x2a01fd05,
    0xfffb003f,0x037ffc07,0x97e477ae,0xf900cfc8,0x21f203ff,0x7f43fff9,
    0x306880ff,0x27fecfff,0x03ffffc4,0x01fffff0,0xffffdbe8,0x8806f801,
    0x2007ffff,0x4c0ffffe,0xfc9ffffe,0xfffb04ff,0x1bffff77,0xfff50620,
    0xffffffff,0x0bee0bff,0xfd8007ec,0xfff103ff,0x321fec0b,0x4077cc2f,
    0xf702fffb,0x545fff50,0x07706fff,0xffd9ffe6,0x1ffff904,0x9ffff100,
    0xfd9f404c,0x03c802ff,0x01ffff90,0x09ffff10,0xfff90544,0x8ffff609,
    0x7dc00029,0x88037c43,0x400df05f,0xf103fffd,0x3ff609ff,0x7f417e40,
    0x02fffa86,0xfffb83f3,0x09fffb11,0x3ffcc0d3,0x3e209ffb,0xfb803fff,
    0x20ee0fff,0x03fff53e,0x3e2001d0,0xfa803fff,0x64000fff,0xffb04fff,
    0x0530007f,0x0bf30bf2,0x1fd43f40,0x07fffb00,0x220fffe2,0x82fc85ff,
    0x7fcc1ffc,0xc85f102f,0xff5b2fff,0x201e885f,0x3ff67ff9,0x1fffee04,
    0x70ffffa0,0x3fe27d0d,0x0b31ecc7,0x07fffb80,0x01ffffc4,0x827ffe40,
    0x4003fffd,0x0fe86ffc,0xf9001fdc,0x2001fc85,0xf503fffd,0xdff503ff,
    0xffb05f90,0x409fff07,0x7fffdc3e,0x21fff9bf,0xf30623d8,0x027fecff,
    0xb80fffee,0x3fb83fff,0x43ffa9f4,0x003b0ffe,0x407fff70,0x0002fffc,
    0x3609fff9,0x22003fff,0x37c2ffff,0xf3000fec,0x6c006f89,0xff703fff,
    0x21ffe60b,0x3ffe82fc,0x3605ffb8,0x27fffc45,0x5d939ffd,0x3ffcc2c8,
    0xf5009ffb,0xfff707ff,0x433fee05,0xf85fe9be,0x0005abff,0x710fffa6,
    0x40003dff,0xfd05fffc,0x7c4007ff,0x17e62fff,0xff0003fa,0x360027cc,
    0xff903fff,0x07ffe205,0xfff885f9,0x206ff882,0x177541f8,0x206f7f26,
    0x27ff9858,0x71004ffd,0xdffbbffd,0x7f644017,0x02efefef,0x001bfff9,
    0xdffdc880,0x000cdffe,0x3ffffa60,0x77fffd42,0x1bff2000,0x06f887f7,
    0x3f91fc80,0x2fffd800,0xff80dff0,0x2617e42f,0xff900fff,0x00035c05,
    0x7fcc0ec0,0x0013ff67,0x01bfffee,0x033aa620,0x00006e60,0x00055440,
    0xccccca80,0x999931cc,0x44005999,0x5440a981,0x51a88001,0xfffb0005,
    0x803ff505,0x17e43ffe,0xe881ffea,0x0026c05f,0x3e607900,0x013ff67f,
    0x27ffff40,0x0007d000,0x00000000,0x00000000,0x00000000,0x23710000,
    0xfe81fffc,0x41ffd802,0x3ffc42fc,0x8807fe20,0x3c80002f,0xfd9ffea0,
    0xff30004f,0x00005fff,0x66666440,0x55511ccc,0x55555555,0x00035555,
    0x00000000,0x00000000,0x5dbf2000,0x1fdc0fff,0x642ffc40,0x01ffd82f,
    0x3a202fcc,0x3d88000d,0xfb3ffd40,0x7440009f,0x00acffff,0x7ffcc000,
    0xf33fffff,0xffffffff,0x09ffffff,0x00000000,0x00000000,0x3f200000,
    0xfb87ff76,0x0efc8802,0xbfb02fc8,0x00de9801,0xc880175c,0x7fec402e,
    0x003bff67,0xffffb880,0x00004eff,0xfffffff3,0x3333227f,0xcccccccc,
    0x00002ccc,0x00000000,0x00000000,0xfd7ff100,0xf5003b8b,0x017e407f,
    0xb5007fb7,0x59bdb100,0x03bb9753,0x49999990,0x00cccccb,0x4d5d4c00,
    0x2e200000,0x1bbbbbbb,0x00000000,0x00000000,0x00000000,0x01573000,
    0x95000800,0x00002003,0x55e54c40,0x00000009,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x20000000,0x4000bdcb,
    0x2ea001ec,0x20001bcc,0x0001bdca,0x33772a20,0xa9814c0a,0xaaaaaaaa,
    0x0155300a,0xaaaaaa98,0x2aaaa201,0xaa9800aa,0xca801aaa,0x2aaa200b,
    0xa80000aa,0xaa8802cc,0x02aaaaaa,0x30e5d4c0,0x55555555,0xfe883555,
    0x3002ff9b,0x3faa00bf,0x00dffcae,0x3fb3fa60,0x220000ef,0xdceffffc,
    0x103dadff,0xffffff93,0x9ffd5037,0x29ddddff,0xffffffb8,0x3bffae01,
    0xffb9800b,0x3bee04ff,0xb880dfca,0x0003ffff,0xdfffff91,0x7fffe403,
    0x5006ffff,0xfd817dfd,0xffffffff,0x87ff42ff,0x74401ffd,0x6ffa800f,
    0x40077fcc,0x3ff63ff8,0xfff50004,0xfff7017d,0xffffb007,0x43bfee07,
    0x44eefff8,0x0ffffff8,0x40007ec0,0xf304fffc,0xb027f43f,0x20007fff,
    0xfffffffd,0xfffff00e,0x9807ffff,0x3fa01efe,0xffffffff,0x93ffdc7f,
    0x2fc80dff,0x83fff880,0xfd804fff,0x03ffea1f,0x3ffff700,0x803ff980,
    0x982ffffc,0x7fec4fff,0x3ffff204,0x0035c06f,0x884fffc8,0x17fe46fe,
    0x003fffd8,0xffdabeb8,0xffa82fff,0x0fffffff,0x803bfee0,0xfffffff8,
    0x7e45ffff,0x81fff26f,0xff5005f9,0x0dffb09f,0xff83fff0,0x7ffd4007,
    0x07f3002f,0x03ffff90,0xfc87fff9,0xffd900ff,0x2d409fff,0x4fffb800,
    0x7dc5ffc8,0xfffd80ff,0x4c2cc003,0xec83ffff,0x3ccccccc,0x003bfee0,
    0x99bdfff5,0xfe85ff99,0x03fff26f,0xfb8007f4,0x5ffc87ff,0x21fffcc0,
    0x3e2003ff,0x6c004fff,0xffffc803,0x42fffd81,0x7902fffc,0x07fffffb,
    0x7dc0016a,0x5fff84ff,0x6c17ffd4,0x0c003fff,0xf05fffd0,0x3fe60005,
    0x01ec801f,0x3ff61fe6,0x203fff26,0x3ea002fc,0x7fec4fff,0x37ffcc03,
    0x64001ff5,0x4002ffff,0xfffc803a,0x2fffc81f,0xc80fffe4,0x3fffffd3,
    0x2a600b50,0x889fff70,0x7fd45fff,0x3fffd83f,0x640002a6,0x1afa87ff,
    0x37ffc400,0x7e400d80,0x327ffc85,0x05f986ff,0x7ffffc40,0x801dff14,
    0xfcaffff8,0x3fe2000d,0x08000fff,0x1ffffc80,0x643fff98,0x44f206ff,
    0x40ffffff,0x3ff2205a,0x4fffbbff,0x2a2fffd4,0xffd84fff,0xdffffabf,
    0x0fff4000,0x677fffec,0x1fffdc00,0x05ff0000,0x7fecfff1,0x8000fe82,
    0xcefffffc,0xffd000df,0x998839ff,0x3fea0999,0x000007ff,0x407ffff2,
    0x7ff45ffd,0xff98f202,0x02d46fff,0xfd51bffb,0xffb89fff,0x37ffd44f,
    0x5777ffec,0x000efffc,0xff103ff5,0x19ffffff,0x36ffffa0,0x98001cee,
    0x3ff700ff,0x0bf217fe,0xffffd800,0x7ec005ff,0xfe983fff,0x3fee2eff,
    0x000006ff,0x807ffff2,0xffd9cffa,0x3ee1e401,0x16a4ffff,0xf10fffdc,
    0xffc89fff,0x3fffd44f,0x2a2fffec,0x5c405fff,0x7d41ffff,0xffffffff,
    0x7fffd40f,0x03ffffef,0x2602fe40,0xf983eeed,0xffc80005,0xb803ffff,
    0x0fffffdf,0xffb0bff0,0x000009ff,0x00ffffe4,0x02b3b7ae,0x3ff20f20,
    0x10b52fff,0xff70dfff,0x4fffd89f,0x207fffd4,0xff83fffd,0xfff500ff,
    0x7ec5ffff,0xffffffff,0x3ffee0ef,0x07fffea6,0x0002ff80,0xdd901fd0,
    0x7fcc019d,0x103fffff,0x3ffee5fd,0xb01ff05f,0x000bffff,0x7fffe400,
    0x000bb101,0xfffe81e4,0xf985a9ff,0xfffb85ff,0x227fff44,0x6c0ffffa,
    0xffe83fff,0x3fee202f,0x93306fff,0x49ffffff,0x7e45fffc,0xff3006ff,
    0x5f900001,0xdf95fe88,0xfd3df901,0xf985ffff,0x7ffff46f,0xfc817cc4,
    0x00006fff,0x07ffff20,0x900027ec,0x3fffa207,0xffb85aef,0x4fffb85f,
    0x2a27ffec,0xffd87fff,0x4fffd83f,0xffffe980,0xffffa800,0x317fff66,
    0x9001ffff,0xf30000bf,0x2a5ffb0b,0x97ff45ff,0x45ffffe8,0x7fcc4ffe,
    0x81363fff,0x007ffffb,0x3fff2000,0xdfff881f,0x00abcccc,0xfff980f2,
    0xffc85fff,0x4fffb84f,0x2a27ffe4,0xffd86fff,0x5fffd83f,0x7ffff100,
    0x9fffe600,0x7c45fffd,0xfe801fff,0x0fe80002,0xf98fffc4,0x1fff51ff,
    0x53ffff44,0xff90dfff,0x80d75fff,0x00fffff9,0xffc80800,0xfff981ff,
    0xffffffff,0xfa807903,0xfd85ffff,0xfffb84ff,0x22fffdc4,0xfd85fffa,
    0xfffd83ff,0x3ffee003,0x9ffe2003,0xff86fffc,0x7fcc01ff,0x17e40000,
    0xf98fffd4,0x0fff92ff,0x323ffff7,0xfd80ffff,0x801fffff,0x002ffffd,
    0xc83bf620,0xfb01ffff,0xffffffff,0x007905ff,0x90bffff9,0xff709fff,
    0x5fff989f,0x6c1fffd4,0xffd83fff,0x3fe2001f,0x2ff4001f,0xff0dfff5,
    0x5fc801ff,0x82fcc000,0xff31fffb,0x21fffa7f,0xfb0ffff8,0xfd109fff,
    0x5005ffff,0x800dffff,0x49fff508,0x200ffffc,0xfffffffd,0x03c84fff,
    0x70bfffb0,0xff70bfff,0x8bfff09f,0xfd82fffa,0xfffd83ff,0x03ff4000,
    0xff11fe40,0x0dffd0ff,0x80005fd0,0xfff500fe,0x64bffe65,0xdffd07ff,
    0x1fffffdc,0x7fffffc4,0x7ffe42c4,0x21f3003f,0x3f23fffc,0x7fb107ff,
    0x4ffb9983,0xfd1004c8,0xffff30bf,0x70bfff90,0x6ffb8dff,0xf07fffb0,
    0x00ba8dff,0x0bb88ffe,0xffd03f60,0x04fff83f,0x00007fcc,0x7fc405f9,
    0x21fff52f,0x7c41fffa,0x3ffe22ff,0x3aa1cfff,0xdfffffff,0xffffb03e,
    0x263fa803,0x3ff60fff,0x00dfb03f,0x00dd03fb,0xfd82ffcc,0x3ffe63ff,
    0x47ff885f,0xffb02ffd,0x0fff989f,0x2a07ffe6,0x17ffec5f,0x7fc40fc4,
    0x03bfe24f,0x4000bf90,0xffc805f9,0xfc89ff53,0x41ffdc6f,0xfffffffa,
    0xffe9bfff,0x5c05ffff,0x261cffff,0xefc81edb,0x409fff10,0x3ea01ffb,
    0x001ff985,0x7f4417ea,0xffdecbff,0x7fcc0bff,0x6c09ff12,0x3f60ffff,
    0x7fffcc1f,0xc81bd52d,0xb9aeffff,0x9ffe601e,0xfe800ffb,0x03fa0003,
    0x7f477ec0,0xcefea80d,0x3a601efe,0x0cffffff,0x02ffffe4,0xffffeb88,
    0x2e00ceff,0x04effeff,0xbabdffc8,0x7f543fed,0x7002dfff,0x7fff440b,
    0xbceffb8e,0xffdfe980,0x6c4f6c02,0x901dfedf,0x5dffffff,0x7ffffec0,
    0xfd9800ce,0x9801dfdf,0xd50000ff,0xceca8005,0x09a98802,0x026aa600,
    0x00015510,0x0006aa62,0x00015531,0x01379755,0x80180000,0x000661a8,
    0x20600351,0x531001a8,0x54c40035,0x00cc0001,0x0000aa20,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x80000000,0xbcdecb98,0x2aa205c0,0xaaaaaaaa,0x2aaaaa20,0x9bb9501a,
    0x2e601443,0x971000ac,0x553039bd,0x05555555,0x4aaaaaaa,0xaaaaaaa9,
    0x2aaaaaa2,0xaaa82aaa,0x02da80aa,0x2aaaa020,0xaaaaaaaa,0x10aaaaaa,
    0x55555555,0xaaaaa835,0x555510aa,0x33555555,0x55554001,0x3200001a,
    0xecabcfff,0xa80fbbef,0xaefffffc,0x77fed441,0x5f7ec40a,0x03dbefca,
    0xbff79fd1,0x6d5fdc01,0x3660dfff,0x1befffff,0x5fffd530,0x3fffffa6,
    0x3fff262e,0xc981bfff,0x7fdc0cff,0xe84a801f,0xffeeffff,0xfffeefff,
    0xffff712f,0xca815fff,0x510adfff,0xddfffff9,0x01bffffd,0x05fffea8,
    0xdffea800,0x1fffd300,0x17ffff40,0x7c407ec0,0x3ffd884f,0x3ee4fe88,
    0xc8bf505f,0xffd85fff,0xdf3004ff,0xfffff881,0xbffff902,0x3fa0bd00,
    0x27c404ff,0xff3067f4,0x2ffa89ff,0x2fffffcc,0xfd00ffe0,0xffb81fff,
    0x7fe402ff,0x7e40005f,0xffb006ff,0x7fffec01,0xfb06c802,0x41fec01f,
    0x7ffc2ffe,0x2a0ffe85,0x7cc2ffff,0xf3006fff,0x3fffee03,0xfffff104,
    0xf702f801,0x4fd805ff,0xfff985e8,0xc82f984f,0x101fffff,0xfffb009f,
    0xffff501f,0x2fffdc05,0xffff5000,0x03fa2005,0x01ffffc8,0x7ff885b8,
    0x3ea1f440,0x7fff42ff,0xf117ffc2,0xffd07fff,0x0b9003ff,0x03ffffc4,
    0x405ffffb,0x016dc069,0x03a13ff2,0x413fffe6,0xffffd02e,0x6401760d,
    0xfd00ffff,0x7fdc09ff,0xff10005f,0xf9800bff,0x3ffff200,0xf985b801,
    0x21dc03ff,0x7ec1fffc,0x17ff44ff,0x2a0ffffe,0xf805ffff,0x7fffec01,
    0xdffff302,0x40001e40,0x0584fffd,0x209ffff3,0xffff302b,0x000eb89f,
    0x201ffff9,0x2e07fffd,0x90005fff,0x0003ffff,0x7ffe401b,0x985b801f,
    0x2203ffff,0x217ffec3,0x64c5fffc,0x07fffc43,0x00ffffe8,0x3fe6016e,
    0x3ffa05ff,0x001f00ff,0x7ffff440,0x26017fff,0x0204ffff,0x1fffffc8,
    0x7e4001f5,0xffb00fff,0x3fee03ff,0x1006a25f,0x001fffff,0x7fe40110,
    0x05b801ff,0x03dfffff,0x70bfffe0,0x2600ffff,0x3ee06fff,0x07a04fff,
    0x07ffff40,0x27ffffc4,0xffe982d4,0x7ed443ff,0x402aadff,0x004ffff9,
    0x3bffffa0,0x7e4001f9,0xfff00fff,0x7ffdc0ff,0x03dfff95,0x01ffffe6,
    0x7ffe4000,0xb05b801f,0x3bffffff,0x43fffe80,0x801ffffa,0x2200effd,
    0xd507ffff,0x7fffdc00,0xffffeb84,0x7fc02d87,0xfff903ff,0x7ffcc009,
    0x3e60004f,0x003fffff,0x80ffffc8,0x205ffff8,0xdedefffb,0xff706fff,
    0x00000dff,0x007ffff2,0x7ff4416e,0x00cfffff,0xfa8bfffb,0x7c400fff,
    0xffc800df,0x002d82ff,0x21ffffe2,0x2ffffdae,0x3ff601e2,0x9fff903f,
    0x7fffcc00,0x7fdc0004,0xc8001fff,0x7440ffff,0x2e00ffff,0x3f64ffff,
    0xfffc82ff,0x9000005f,0x7003ffff,0x7fffcc0b,0xa81fffff,0x3ea0ffff,
    0x3fc807ff,0x3fffe600,0x6c0034c6,0x5e62ffff,0x2e5ffffa,0x3fffd804,
    0x009fff90,0x027fffcc,0x7ffff400,0xfffc8006,0xffecbabf,0x7fdc00cf,
    0x27ffe46f,0x02ffffe4,0xfffc8000,0x405b801f,0xffffffd8,0xfffd82ff,
    0x6fffc89e,0xe8003f80,0x0f61ffff,0x3fffe600,0xffff8f25,0xfb003d0f,
    0x3ff207ff,0x3fe6004f,0x880004ff,0x004fffff,0x777fffe4,0x000fffff,
    0xfb8bfff7,0xfffb84ff,0x3332206f,0x82cccccc,0x801ffffc,0xffd3005b,
    0xb10dffff,0xffffffff,0x0059809f,0x2bffff50,0xfd0000f8,0x41f11fff,
    0x69bffffc,0x07fffb00,0x8013fff2,0x004ffff9,0xfffffa80,0x3ff2001f,
    0xfffe88ff,0xfff7003f,0x84fffb8b,0x407ffff9,0xefffffa8,0x3ffff901,
    0x4010b700,0x1fffffea,0xfd179730,0x039803ff,0x3ffffa00,0x2e0004c8,
    0x45bcffff,0x3ceffff9,0x07fffb00,0x8013fff2,0x004ffff9,0x7fecfc40,
    0x3f2006ff,0xfff30fff,0xff7003ff,0x4fffb8bf,0x01fffff0,0x03ffffb0,
    0x00ffffe4,0x201542e4,0x004ffffb,0x100dfff3,0x7fdc0001,0x0000fcff,
    0x3bffffe2,0xfffffe81,0x7fffb000,0x013fff20,0x04ffff98,0x7c4fa200,
    0x9004ffff,0x7e41ffff,0x5c00efff,0x7fdc5fff,0xffffb04f,0xffffb003,
    0x7fffd403,0x5a84c801,0x05fffa80,0x003fffb0,0xfff10000,0xb0000bff,
    0x2e0dffff,0x2005ffff,0xf903fffd,0x7cc009ff,0x20004fff,0x7fffd44d,
    0xfffc801f,0x7ffff40f,0x2fffdc04,0x4413ffee,0xd803ffff,0x2600ffff,
    0xe802ffff,0xe800fa82,0xff8804ff,0x0031003f,0x1ffffc80,0xfff98000,
    0xffff102f,0x7ffec005,0x09fff903,0x27fffcc0,0xfb06c800,0xc801dfff,
    0x7c40ffff,0x2e02ffff,0x7fdc5fff,0x3ffea04f,0xffffd807,0x27fffc00,
    0x3ea03ea0,0x02ffd805,0x8027ff44,0x20006ffc,0x0006fff9,0x901fffa0,
    0xfd800fff,0xfff703ff,0xff30122b,0xf70009ff,0x3fffe201,0x7ffe404f,
    0xffffb80f,0xbfff700f,0x404fffb8,0x6c05fffb,0x6400ffff,0xf301ffff,
    0x80ffea03,0x74405ff8,0xff1003ff,0x6c0005ff,0x200002ff,0x7cc04ffb,
    0x7fec004f,0xfffd104f,0xff9801d9,0x7d4005ff,0x7fffdc03,0x3fff602f,
    0xffffb01f,0x1bffee0d,0x300bfff9,0xb017bffd,0x7001ffff,0x5137ffff,
    0x7fd407f9,0x77ec40df,0x077faa00,0x2ffff880,0x01bea000,0x01ff1000,
    0xe8003fd0,0x36605fff,0xfb801dff,0x2e006fff,0x7fc403ff,0xfd01ffff,
    0x3e207fff,0xfc84ffff,0x7ffec7ff,0x3ffae006,0xcfffedef,0x7ff54001,
    0x402effff,0xcefdbaea,0xf9303ffe,0x3200019f,0xe80006ff,0x5d800003,
    0x4c00d700,0x0dfffffe,0xffdc8000,0x02ceffff,0x9bfffff7,0xfffffd90,
    0x3fb26bff,0x84dfffff,0x1efffffa,0x1dfffffb,0x1dfffffb,0xaaa98800,
    0x53000009,0x02200355,0xa8035551,0x06200001,0x0000c000,0x31000880,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x55440000,
    0x9aaaaaaa,0x9b950000,0x55555415,0xaaa88001,0x4002aaaa,0xaaaaaaaa,
    0x55555510,0x20015555,0xaaaaaaa8,0xaaa982aa,0x2a20aaaa,0x5101aaaa,
    0x55555555,0x43555555,0xaaaaaaa8,0xaaa88aaa,0x0aaaaaaa,0x55555553,
    0x2aaa2055,0x555512aa,0x55555555,0x2a255555,0xaaaaaaaa,0x1aaaaaaa,
    0xff750310,0xffffdfff,0x9fd3005d,0x7fd4dff3,0x988005ff,0x1ffffffb,
    0xfffff100,0x3262137f,0x9bffffff,0x3fee6000,0x881bffff,0x42dffffa,
    0x03ffffb8,0xdddffff5,0xffffffdd,0x7ffdcc43,0x2e61bfff,0x9bffffff,
    0xfffff930,0x36e2037f,0x3ee62dff,0xeeeeffff,0x316fffff,0xddfffff9,
    0x9fffffdd,0x320dff90,0xf911ffff,0x3e201fff,0x2fff88ff,0x0017fff2,
    0xbfffffb0,0x3ffff200,0x7ffec05f,0x7e40003f,0xfc804fff,0x7fff402f,
    0x017ff703,0x09fffff1,0x027fffe4,0x409ffff9,0x00fffffb,0x3f205f98,
    0xff703fff,0x5ffff90d,0x889ffb10,0xfb82ffff,0x7ff41fff,0xfffc80ef,
    0xffb8bfb0,0x6640005f,0x800fffff,0x04ffffbf,0x017fffe4,0x3fffee00,
    0x0077cc03,0xc81fffec,0x3fff202f,0x3fee00ef,0x3fee03ff,0x7ff403ff,
    0x0fb804ff,0x0ffffee0,0xffb86e88,0x13ea02ff,0x505ffff3,0xfa83ffff,
    0xffe83fff,0x7ffdc00f,0x665c0005,0x5403ffff,0x04ffffae,0x017fffe4,
    0x3fffee00,0x8017e603,0x7903fffc,0x7ffffcc0,0x7fffdc02,0x3fffea02,
    0x7fffcc03,0x00be200f,0x807ffff7,0xffffb86b,0x7ec26c02,0xffff506f,
    0x5ffff983,0x400ffff8,0x0005fffb,0x7fffc65c,0x7fd57407,0x7fe404ff,
    0x5c0002ff,0xf503ffff,0xfffc8007,0x7f401b03,0xfb805fff,0x3ea02fff,
    0xfd803fff,0x17204fff,0x0ffffee0,0xffb86882,0x9504c2ff,0xffa80a60,
    0x7ffcc1ff,0x0ffff85f,0x02fffdc0,0x7fed2e00,0x2af302ff,0x6404ffff,
    0x0002ffff,0x41ffffdc,0xfc8001fc,0x5c0503ff,0x800fffff,0x202ffffb,
    0x803ffffa,0x80fffff9,0xffb800f8,0x414583ff,0x6c2ffffb,0xfa800141,
    0x7fcc1fff,0x3fffe2ff,0xf701ffff,0x7fec4bff,0x29700dff,0x906ffff9,
    0x13fffea7,0x05ffff90,0xffffb800,0x0003b623,0x001fffe4,0x0fffffe2,
    0x17fffdc0,0x07ffff50,0x17ffff20,0x7fdc0136,0xb80783ff,0x0fc2ffff,
    0xfffa8000,0x3fffe41f,0x2ffffeaa,0xbfff700a,0xb801bf90,0x07ffffa4,
    0x3ffea1f1,0x7ffe404f,0x7dc0002f,0x1fd33fff,0x7ffe4000,0x7ffec003,
    0x3fee006f,0x3fea02ff,0xff1003ff,0x03543fff,0x87ffff70,0xfffb807b,
    0x0007e62f,0x0ffffd40,0x207ffff5,0x5c00ffff,0x05e85fff,0x7ffd4970,
    0xff52dc4f,0xffc809ff,0x5c0002ff,0xffabffff,0x3f20004f,0x3ea003ff,
    0x2001ffff,0x202ffffb,0x003ffffa,0xe97fffee,0x3ffee002,0x00ff713f,
    0x2a5ffff7,0x500001ff,0xfd79ffff,0x7fc01bff,0x7fdc00ff,0x70026c5f,
    0x0fffff89,0xffffa87a,0x7fffe404,0x7fdc0002,0xfffffeff,0xfff90002,
    0x7fff4007,0x7fdc004f,0xffffffff,0x03ffffff,0x3ffffe20,0x7dc005ca,
    0xfffeefff,0xffffb807,0x801ffffe,0x3fea01b8,0x1bceeeff,0x00ffff80,
    0xb92fffdc,0x7e44b800,0xa8d33fff,0x6404ffff,0x0002ffff,0x6f7fffdc,
    0x001fffff,0x003fffc8,0x01fffff9,0xbffffb80,0xfb999999,0x5c003fff,
    0x01feffff,0x67fffdc0,0xb807ffdb,0xfdbbffff,0x7ffc401f,0xffffa80e,
    0xffff0001,0x5fffb801,0x4b800df9,0xdb7fffc4,0x27fffd43,0x0bffff20,
    0xffff7000,0x3bffffa7,0x7ffe4000,0xffff9803,0xffb8002f,0x3fea02ff,
    0xfe8003ff,0xb8004fff,0x3a23ffff,0xffffb807,0xf7007f22,0xff505fff,
    0x3e0003ff,0x7dc00fff,0x4fffddff,0x3f612e00,0x540fbfff,0x6404ffff,
    0x2002ffff,0x3ffffb80,0x0bfffff1,0x03fffc80,0x05ffffe8,0xffffb818,
    0x3fffea02,0xfffb8003,0xffb8003f,0x403cc3ff,0x7c2ffffb,0x7fffdc01,
    0x1ffffa85,0x1ffff000,0xeffffb80,0x7001ffff,0xfffff309,0x9ffff509,
    0x2ffffc80,0xff705700,0x7ffd47ff,0x3f2004ff,0x7fd403ff,0x34400fff,
    0x017fffdc,0x007ffff5,0x07ffff50,0x7ffff700,0xfff700d0,0x2181d85f,
    0xa86fffd8,0x0001ffff,0xb801ffff,0xfffb6fff,0x7412e00d,0xfa81ffff,
    0x7e404fff,0x3d002fff,0x87ffff70,0x02fffffb,0x407fff90,0x03fffff8,
    0xfffb85b8,0x3ffea02f,0xffa8003f,0xfb8003ff,0x80483fff,0x5c2ffffb,
    0x07f08681,0x003ffff5,0x003fffe0,0x3e2bfff7,0x4b804fff,0x20bfff50,
    0x404ffffa,0x802ffffc,0xfffb80f9,0xffffd83f,0xfffc801f,0x3ffff203,
    0xf709d006,0x7d405fff,0xa8003fff,0x8003ffff,0x003ffffb,0x05ffff70,
    0x03e60d30,0x007fffea,0x007fffc0,0xfa97ffee,0x25c02fff,0x2a05fff0,
    0x6404ffff,0xd802ffff,0x7ffff707,0xdffffd10,0x3fffc801,0x3fffff30,
    0xf707f700,0x7d405fff,0xa8003fff,0x8003ffff,0x003ffffb,0x05ffff70,
    0x0d905e88,0x00bfffee,0x00ffffc0,0xfb1bffee,0x2e401fff,0x7d40df90,
    0x7e404fff,0x7ec03fff,0x7ffff706,0x3ffffe60,0x3fff600e,0xbffffd04,
    0x82ffd880,0x203ffffc,0x003ffffb,0x04ffffb8,0x3ffffb80,0xffff9000,
    0x41ff4407,0xfffb00ec,0xff10009f,0xffc805ff,0x7fffc47f,0x203ff105,
    0x3ff203f8,0x7ff406ff,0x99999eff,0xfb06ffeb,0x7f40bfff,0xd00effff,
    0xff70bfff,0x33335fff,0x3ffff753,0x09ffffb0,0x02ffffec,0x2ffffec0,
    0x7fffec00,0xfffd0005,0x953333df,0x66c45fff,0x7fff6440,0x9004efff,
    0x1bfffffd,0xdfffffb0,0x3fffff21,0xffff931e,0xc881b05d,0xeffffffd,
    0xfffd931c,0xffffffff,0x644bffff,0xeffffffe,0x3ffff664,0xd30dffff,
    0x21bfffff,0xfffffff8,0xffffffff,0xfd931fff,0x19dfffff,0xfffffd91,
    0x654039df,0xeffffffe,0x3fb2203c,0x1cefffff,0x7fff64c0,0xffffffff,
    0x0221ffff,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x55555553,0x20013355,0xaaaaaaa8,
    0x55510aaa,0x35555555,0x22000013,0x0b300002,0x400f6400,0x8001bdca,
    0x000002a8,0x00001118,0x000000c4,0x2a200000,0x0353000a,0x4461a988,
    0xefffffca,0x01cefffe,0x3fffee62,0x2ea21bff,0xffefffff,0x0003efff,
    0x2a00035c,0xf70007fe,0x7ff4c03f,0x44005fff,0x2000005f,0x039f57ea,
    0x26ffc800,0x3ffffffb,0xfb1bffa6,0x3fa29fff,0x3ea04fff,0x500dffdf,
    0x303df9ff,0x0fbffdfd,0x4c1ffffd,0xd804fffe,0x6c03ffff,0xf511ffff,
    0x0001bfff,0x2e000bfa,0x8007fffe,0xf101fff9,0xbfffffff,0x002fc400,
    0x3fff2200,0x17dfff36,0xffff8800,0x0ffffea2,0x7fec17e2,0x27fff44f,
    0xffb0ffb8,0x2e1ff909,0x51ff41ff,0xffffb0ff,0xefffe881,0x3ffff200,
    0x7fffe402,0x2ffffcc1,0x02ffd400,0xffffdd70,0xffe8800f,0xfdffd01f,
    0x005fffff,0x400017e2,0x41cfffda,0x1cfffeb8,0x5ffff100,0x985fffe8,
    0x9fff900f,0xb84fffd8,0x3ffee4ff,0xff17fea1,0x321ffccd,0x0ffffd87,
    0x05fffe88,0x00bfffee,0xd03ffff7,0x8001ffff,0x1001fffe,0x003fffe4,
    0x207ffff6,0x3ffaa1fa,0xbf1004ff,0x7f5c4000,0xc9800bef,0xd802efff,
    0xfffa87ff,0x3ee05b87,0x7ffe44ff,0x222ffe84,0xfff12fff,0xf92ffe87,
    0xfd8685ff,0xff700fff,0x3fee07ff,0x7fdc02ff,0xfffc81ff,0x3fe6002f,
    0xfa8004ff,0x3ae007ff,0x1d81ffff,0x06ffff88,0x3000bf10,0x005bfffb,
    0x3fffae20,0xf80a600c,0x00f43fff,0xfc89fff7,0x7ffd44ff,0xff5275c1,
    0x74ffe83f,0x40c9ffff,0x100ffffd,0x2e0dffff,0x5c02ffff,0xfd81ffff,
    0x36000fff,0x000fffff,0x803fffd4,0x1fffe9f9,0x27ffec00,0x1005f880,
    0x019fffd7,0x7fed4000,0xfb8002df,0x701a66ff,0xffc89fff,0x0fffe44f,
    0x667ffdc0,0xf15fffcc,0x201dffff,0x200ffffd,0xb82ffffe,0x5c02ffff,
    0xff81ffff,0x3e2005ff,0x003ffffc,0x803fffd4,0x03fffd3e,0x21fffb80,
    0xa9999998,0x999999ef,0x07dfff31,0xfc880000,0x7c4006ff,0x80591fff,
    0x7e44fffb,0x7ffec4ff,0xbfffd803,0x22aaaaaa,0x1ffffffd,0x00ffffd8,
    0x213ffff6,0x402ffffb,0x641ffffb,0x2001ffff,0x7ffff8cc,0x3fffd400,
    0xfffd2e40,0x7ffc8003,0x7fffffd4,0xffffffff,0x9fffd37f,0x54000001,
    0x8004fffe,0x068dfffc,0x644fffb8,0x7fec4fff,0xfffd804f,0x3fff6002,
    0x7fec0fff,0x3ff200ff,0xfffb85ff,0x7ffdc02f,0xfffebaaf,0x43e2000c,
    0x002ffffd,0x501fffea,0x0ffff41f,0x513ffe00,0xfddddddd,0xbddddddf,
    0x2dfffda8,0xff910000,0x200017df,0x04cffff9,0x644fffb8,0x7fe44fff,
    0xfffc806f,0x7ffdc004,0x7ffec3ff,0x3fff200f,0xffffb86f,0x7fffdc02,
    0x1bffffff,0xff32dc00,0x7d400dff,0x0be207ff,0x4003fffd,0x2000eff9,
    0xb88005f8,0x000bffff,0x2dfffd98,0x3a005d40,0xb800ffff,0x7fe44fff,
    0x7fffdc4f,0x37ffdc02,0xffd30540,0xffffd8bf,0x3ffff200,0x2ffffb85,
    0x4ffffdc0,0xeffffb98,0xfe83d001,0xf5001fff,0x42740fff,0x2001fffe,
    0x44001ffb,0x6d40005f,0x4401dfff,0x00cfffeb,0x200fffe8,0x7005fffa,
    0xffd8bfff,0x7fffc44f,0xfff3280f,0x12e9307f,0xfd89ffd1,0x3f200fff,
    0xffb84fff,0x7fdc02ff,0x7ff4c1ff,0x435401ff,0x005ffffb,0x320ffff5,
    0x03fffd06,0x4001ff40,0x100005f8,0x417dfff9,0x02efffc9,0x0ffffe60,
    0x2003ffd0,0x3ee6fffa,0xffc84fff,0x43b31dff,0x31dffffd,0x3ee0fdcb,
    0x7fffec2f,0x3ffff600,0x2ffffb83,0x0ffffdc0,0x037fffd4,0x7fffc0ba,
    0xfffa800f,0xcccdf987,0x4dffffcc,0x0004fc80,0x00000bf1,0x3eafffd5,
    0x88001cff,0x5c02ffff,0x7ff4006f,0xfffdeddf,0xffffe885,0x7f442fff,
    0x20ffffff,0x3bf62efb,0x07fffec0,0x03ffffd0,0x805ffff7,0x881ffffb,
    0x301fffff,0xfddddddf,0x5009ffff,0xff30ffff,0xffffffff,0x7d401fff,
    0x17e20004,0x7c980000,0x800017d5,0xf8806ffc,0x7ff44003,0xbffff95f,
    0x3bffff20,0xffffb102,0xefdea83b,0xffd80dfe,0xfff100ff,0x3ffee0df,
    0x7ffdc02f,0xfffff01f,0x2666f605,0xffff9999,0x7ffd400f,0xfffff987,
    0xffffffff,0x1c0bf100,0x0002fc40,0x00008400,0x15000c40,0x002a6000,
    0x40015300,0xa9822029,0x3ffff600,0x3ffff700,0x0bfffee0,0x03ffff70,
    0x01fffff1,0xffd801f3,0x7fd403ff,0xaaaa887f,0xbffffaaa,0x4c817a02,
    0x0005f880,0x00000000,0x00000000,0x00000000,0xfffb0000,0x3fffe01f,
    0x3fffee04,0x7fffdc02,0x6ffffa81,0xff3009b0,0xffa80dff,0xffe8007f,
    0x3fff201f,0x02ffffff,0x00000000,0x00000000,0x00000000,0x00000000,
    0x81ffffe8,0x6403fffd,0x6403ffff,0x7c41ffff,0xf980ffff,0xffffd002,
    0x7fffd407,0x7fff4000,0xfffff701,0x003fffff,0x00000000,0x00000000,
    0x00000000,0x80000000,0x9cfffff8,0x01effea9,0x04ffffe8,0x4efffff4,
    0x1dffffb9,0xb005fe98,0x201fffff,0x002ffffd,0x4c0ffff4,0xffffffff,
    0x000007ff,0x00000000,0x00000000,0x00000000,0x3b2a0000,0xffffffff,
    0x64c00bde,0xeffffffe,0xfffd930c,0xbdffffff,0x3fff2039,0xffb904ef,
    0x2a9fffff,0xffffffec,0xfffd004d,0xfffff883,0x06ffffff,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x30003530,
    0x00000155,0x054c0000,0x20000a98,0x0d440028,0x00000000,0x00059100,
    0x17930099,0xb881cb88,0x3261db80,0xcccccccc,0x04cccccc,0x93015c40,
    0x400e0037,0x0cfedffb,0x3fbbf220,0xfffc81df,0xffe99dff,0xffb13fff,
    0x5bffff29,0x2a4ffffb,0xfc85ffff,0xffb16fff,0xaffffecb,0x901efffc,
    0xffddffff,0x7ff44fff,0xffb9dfff,0x3ff600ef,0x07fea000,0xfd8bfff0,
    0x27ffd47f,0x3ea1fff7,0xffffffff,0x27ffffff,0x221fffe8,0x7ec45fff,
    0x500befff,0x45ffb00b,0xff980efe,0x203fff20,0x220ffffb,0x3f84ffff,
    0x76f7ffe4,0xfbaffffc,0xb84fffec,0xffe8efff,0x3fff20ff,0xefffdede,
    0x7d42fc80,0xffc83fff,0x007f21ff,0xe8003ff6,0x3fe606ff,0x3fffe27f,
    0x43ffffa1,0x5513fffe,0x55555555,0x88555555,0x3fee3ffe,0x337f60ff,
    0x22dffffe,0x7fdc03ea,0x742ffd47,0x3ffea1ff,0x87fffd05,0x3c46fffb,
    0x52ffffd4,0x221dffff,0xffa87fff,0x6ffddcef,0xb1ffffdc,0x07907fff,
    0x740dfffd,0x40ba5fff,0x2897ea28,0x0bff7ee0,0x3e37ffcc,0x3ff60fff,
    0x5fffb3ff,0x74400000,0x3fffea6f,0xeb883f10,0x06ffffff,0x262fffc4,
    0x3fe63fff,0x1bffe65f,0x3637ffdc,0x12a1ffff,0xf11bffea,0xfff81fff,
    0x7fffd40f,0xff703266,0x4fffc8df,0x7ffdc0c8,0x3ffea01f,0xff104c9f,
    0x7fe4ba3d,0xfb9ff882,0xb17ffe07,0xffe98dff,0x01fff93f,0xfe880000,
    0x598fffa1,0x5f7fed40,0x27ffdc00,0xfd17ffe6,0x3fffcc7f,0x11ffff88,
    0x6c9fffbd,0x46fffa81,0xff87fff8,0x7ffd40ff,0xfffb802f,0x027ffdc5,
    0x027fffc4,0x0377fff4,0x3b5ffff1,0xf905fffb,0xfd81ff49,0x827fdc3f,
    0xdff51f98,0x6666664c,0xcccccccc,0x30fe204c,0x02000881,0x44fffc80,
    0x5447fff8,0x1ffff662,0x954fffd8,0x1a2dfff5,0x2237ffd4,0xfff87fff,
    0x7fffd41f,0x5fffb800,0x4027ffdc,0x800ffffd,0x403ffff9,0xcdfcccc9,
    0x0ff982cc,0x3ee03fea,0x017fcc1f,0x2a4ff8d7,0xffffffff,0x7fffffff,
    0x00000440,0x3fff6000,0x07fffc44,0xfffcfd98,0x5fffea07,0x73ffff1d,
    0x1bffea09,0xff0ffff1,0xfffa83ff,0xbfff7007,0x404fffb8,0x003ffffa,
    0x801bfff6,0x6c00ebd8,0x984fd83f,0x401ff07f,0x3117ec3e,0x33333333,
    0x03333333,0x00000000,0x887fffd0,0xfc80ffff,0x07fff99f,0x935ffffc,
    0x203d9fff,0x7c46fffa,0xffff87ff,0x037ffd41,0x5c5fffb8,0x7f404fff,
    0x7cc006ff,0xfa802fff,0x3ea07f97,0xf03ff306,0x6c41b60b,0x0000fb85,
    0x00000000,0x7ffe4000,0x23fffcc3,0xff30ffe9,0xfffc80ff,0x3fffe63f,
    0x1bffea06,0xff0ffff1,0xfffa83ff,0xbfff7006,0x204fffb8,0x001ffffb,
    0x037fffc4,0x7fd57fe6,0x3202fe84,0x9702d85f,0x1a607d30,0x00000000,
    0x2e000000,0x7fcc4fff,0x97ffa26f,0x4c07fff9,0x7f40ffff,0x3fea03ff,
    0x3fffc46f,0x2a0ffffc,0xf7006fff,0xfffb8bff,0x9ffff104,0xffcc8070,
    0x3fee03ff,0xdf71bfe2,0x042ff880,0x10010110,0x00000000,0x10000000,
    0xffa89fff,0x93ffea3f,0xe807fff9,0xfffb85ff,0x1bffea00,0xff0ffff1,
    0xfffa83ff,0xbfff7006,0xb04fffb8,0x5881ffff,0x7ffe56a0,0xa879100f,
    0x0000001d,0x00000000,0x00000000,0x6ffc8000,0x3ee3ffdc,0xfffcbfff,
    0x7fdc017f,0x406ff882,0x7c47fffa,0x7ffc0fff,0x37ffd42f,0x46fffb80,
    0xfa85fffc,0x05d83fff,0x3ffe21f1,0x0000004f,0x00000000,0x00000000,
    0x40000000,0x3bfa1ffd,0x7ffffcc1,0x3efffe9e,0x7403fe20,0x7ffdc03f,
    0x3fffea0f,0x0ffffe21,0x200ffff7,0x7ec7fffc,0xfffe86ff,0x213f6a26,
    0x7ffec6e8,0x0000001f,0x00000000,0x00000000,0x40000000,0x0dfedffb,
    0x547dff70,0x5d803efe,0xfc803ea0,0xfa9effff,0xf9afffff,0xf93fffff,
    0x405dffff,0x8efffffd,0x0efffffd,0xfffffff7,0x6c49ffff,0xffc8cfff,
    0x0004ffff,0x00000000,0x00000000,0x00000000,0x001a9800,0x26000802,
    0x0000a200,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,
};

static signed short stb__times_bold_34_usascii_x[95]={ 0,2,2,0,1,2,1,2,1,0,1,0,0,0,
1,0,1,2,0,0,0,1,1,1,1,0,2,2,0,0,0,1,1,0,0,1,0,0,0,1,0,0,0,0,
0,0,0,1,0,1,0,1,1,0,0,0,0,0,0,3,0,1,2,-1,0,1,0,1,1,1,0,1,1,0,
-1,1,0,1,1,1,0,1,1,1,0,0,0,0,0,0,0,2,2,1,0, };
static signed short stb__times_bold_34_usascii_y[95]={ 27,6,6,6,6,6,6,6,6,6,6,8,22,18,
22,6,6,6,6,6,6,6,6,6,6,6,12,12,9,13,9,6,6,6,6,6,6,6,6,6,6,6,6,6,
6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,31,5,12,6,12,6,12,6,12,6,6,
6,6,6,12,12,12,12,12,12,12,7,12,12,12,12,12,12,6,6,6,16, };
static unsigned short stb__times_bold_34_usascii_w[95]={ 0,6,13,15,14,27,24,5,9,10,13,17,7,10,
6,9,14,11,14,14,15,14,14,14,14,15,6,6,17,18,17,13,27,22,20,20,21,20,18,23,24,12,16,25,
20,29,22,22,18,22,23,15,19,22,22,31,22,22,20,7,9,7,14,17,7,14,16,12,16,12,13,14,16,9,
9,17,9,24,16,14,16,16,13,10,10,17,16,22,15,16,14,9,3,9,17, };
static unsigned short stb__times_bold_34_usascii_h[95]={ 0,22,11,22,24,22,22,11,28,28,12,17,11,4,
6,22,22,21,21,22,21,22,22,22,22,22,16,21,16,8,16,22,28,21,21,22,21,21,21,22,21,21,22,21,
21,21,22,22,21,27,21,22,21,22,22,22,21,21,21,27,22,27,12,3,7,16,22,16,22,16,21,22,21,21,
28,21,21,15,15,16,22,22,15,16,21,16,16,16,15,22,15,28,28,28,6, };
static unsigned short stb__times_bold_34_usascii_s[95]={ 255,212,170,219,123,1,44,192,46,11,141,
123,184,138,225,245,162,80,108,194,92,209,224,239,29,64,177,248,141,198,159,
80,56,57,36,69,1,227,208,1,160,23,90,103,82,52,122,155,1,100,213,
48,170,25,94,117,190,185,139,92,235,84,155,149,217,16,177,219,145,232,20,
107,237,149,1,34,129,54,93,1,195,178,79,245,159,201,184,31,125,138,110,
36,32,22,232, };
static unsigned short stb__times_bold_34_usascii_t[95]={ 1,1,120,1,1,30,30,120,1,1,120,
98,120,24,120,1,30,98,98,30,98,30,30,30,30,53,98,76,98,120,98,
53,1,98,98,30,98,76,76,53,76,98,30,76,76,76,30,1,76,1,53,
53,53,53,53,53,53,76,76,1,1,1,120,24,120,120,30,98,30,98,76,
30,53,53,1,76,76,120,120,120,1,1,120,98,53,98,98,120,120,1,120,
1,1,1,120, };
static unsigned short stb__times_bold_34_usascii_a[95]={ 123,164,273,246,246,491,409,136,
164,164,246,280,123,164,123,136,246,246,246,246,246,246,246,246,
246,246,164,164,280,280,280,246,457,355,328,355,355,328,300,382,
382,191,246,382,328,464,355,382,300,382,355,273,328,355,355,491,
355,355,328,164,136,164,285,246,164,246,273,218,273,218,164,246,
273,136,164,273,136,409,273,246,273,273,218,191,164,273,246,355,
246,246,218,194,108,194,255, };

// Call this function with
//    font: NULL or array length
//    data: NULL or specified size
//    height: STB_FONT_times_bold_34_usascii_BITMAP_HEIGHT or STB_FONT_times_bold_34_usascii_BITMAP_HEIGHT_POW2
//    return value: spacing between lines
static void stb_font_times_bold_34_usascii(stb_fontchar font[STB_FONT_times_bold_34_usascii_NUM_CHARS],
                unsigned char data[STB_FONT_times_bold_34_usascii_BITMAP_HEIGHT][STB_FONT_times_bold_34_usascii_BITMAP_WIDTH],
                int height)
{
    int i,j;
    if (data != 0) {
        unsigned int *bits = stb__times_bold_34_usascii_pixels;
        unsigned int bitpack = *bits++, numbits = 32;
        for (i=0; i < STB_FONT_times_bold_34_usascii_BITMAP_WIDTH*height; ++i)
            data[0][i] = 0;  // zero entire bitmap
        for (j=1; j < STB_FONT_times_bold_34_usascii_BITMAP_HEIGHT-1; ++j) {
            for (i=1; i < STB_FONT_times_bold_34_usascii_BITMAP_WIDTH-1; ++i) {
                unsigned int value;
                if (numbits==0) bitpack = *bits++, numbits=32;
                value = bitpack & 1;
                bitpack >>= 1, --numbits;
                if (value) {
                    if (numbits < 3) bitpack = *bits++, numbits = 32;
                    data[j][i] = (bitpack & 7) * 0x20 + 0x1f;
                    bitpack >>= 3, numbits -= 3;
                } else {
                    data[j][i] = 0;
                }
            }
        }
    }

    // build font description
    if (font != 0) {
        float recip_width = 1.0f / STB_FONT_times_bold_34_usascii_BITMAP_WIDTH;
        float recip_height = 1.0f / height;
        for (i=0; i < STB_FONT_times_bold_34_usascii_NUM_CHARS; ++i) {
            // pad characters so they bilerp from empty space around each character
            font[i].s0 = (stb__times_bold_34_usascii_s[i]) * recip_width;
            font[i].t0 = (stb__times_bold_34_usascii_t[i]) * recip_height;
            font[i].s1 = (stb__times_bold_34_usascii_s[i] + stb__times_bold_34_usascii_w[i]) * recip_width;
            font[i].t1 = (stb__times_bold_34_usascii_t[i] + stb__times_bold_34_usascii_h[i]) * recip_height;
            font[i].x0 = stb__times_bold_34_usascii_x[i];
            font[i].y0 = stb__times_bold_34_usascii_y[i];
            font[i].x1 = stb__times_bold_34_usascii_x[i] + stb__times_bold_34_usascii_w[i];
            font[i].y1 = stb__times_bold_34_usascii_y[i] + stb__times_bold_34_usascii_h[i];
            font[i].advance_int = (stb__times_bold_34_usascii_a[i]+8)>>4;
            font[i].s0f = (stb__times_bold_34_usascii_s[i] - 0.5f) * recip_width;
            font[i].t0f = (stb__times_bold_34_usascii_t[i] - 0.5f) * recip_height;
            font[i].s1f = (stb__times_bold_34_usascii_s[i] + stb__times_bold_34_usascii_w[i] + 0.5f) * recip_width;
            font[i].t1f = (stb__times_bold_34_usascii_t[i] + stb__times_bold_34_usascii_h[i] + 0.5f) * recip_height;
            font[i].x0f = stb__times_bold_34_usascii_x[i] - 0.5f;
            font[i].y0f = stb__times_bold_34_usascii_y[i] - 0.5f;
            font[i].x1f = stb__times_bold_34_usascii_x[i] + stb__times_bold_34_usascii_w[i] + 0.5f;
            font[i].y1f = stb__times_bold_34_usascii_y[i] + stb__times_bold_34_usascii_h[i] + 0.5f;
            font[i].advance = stb__times_bold_34_usascii_a[i]/16.0f;
        }
    }
}

#ifndef STB_SOMEFONT_CREATE
#define STB_SOMEFONT_CREATE              stb_font_times_bold_34_usascii
#define STB_SOMEFONT_BITMAP_WIDTH        STB_FONT_times_bold_34_usascii_BITMAP_WIDTH
#define STB_SOMEFONT_BITMAP_HEIGHT       STB_FONT_times_bold_34_usascii_BITMAP_HEIGHT
#define STB_SOMEFONT_BITMAP_HEIGHT_POW2  STB_FONT_times_bold_34_usascii_BITMAP_HEIGHT_POW2
#define STB_SOMEFONT_FIRST_CHAR          STB_FONT_times_bold_34_usascii_FIRST_CHAR
#define STB_SOMEFONT_NUM_CHARS           STB_FONT_times_bold_34_usascii_NUM_CHARS
#define STB_SOMEFONT_LINE_SPACING        STB_FONT_times_bold_34_usascii_LINE_SPACING
#endif

