// Font generated by stb_font_inl_generator.c (4/1 bpp)
//
// Following instructions show how to use the only included font, whatever it is, in
// a generic way so you can replace it with any other font by changing the include.
// To use multiple fonts, replace STB_SOMEFONT_* below with STB_FONT_times_bold_8_latin_ext_*,
// and separately install each font. Note that the CREATE function call has a
// totally different name; it's just 'stb_font_times_bold_8_latin_ext'.
//
/* // Example usage:

static stb_fontchar fontdata[STB_SOMEFONT_NUM_CHARS];

static void init(void)
{
    // optionally replace both STB_SOMEFONT_BITMAP_HEIGHT with STB_SOMEFONT_BITMAP_HEIGHT_POW2
    static unsigned char fontpixels[STB_SOMEFONT_BITMAP_HEIGHT][STB_SOMEFONT_BITMAP_WIDTH];
    STB_SOMEFONT_CREATE(fontdata, fontpixels, STB_SOMEFONT_BITMAP_HEIGHT);
    ... create texture ...
    // for best results rendering 1:1 pixels texels, use nearest-neighbor sampling
    // if allowed to scale up, use bilerp
}

// This function positions characters on integer coordinates, and assumes 1:1 texels to pixels
// Appropriate if nearest-neighbor sampling is used
static void draw_string_integer(int x, int y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0, cd->t0); glVertex2i(x + cd->x0, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t0); glVertex2i(x + cd->x1, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t1); glVertex2i(x + cd->x1, y + cd->y1);
        glTexCoord2f(cd->s0, cd->t1); glVertex2i(x + cd->x0, y + cd->y1);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance_int;
    }
    glEnd();
}

// This function positions characters on float coordinates, and doesn't require 1:1 texels to pixels
// Appropriate if bilinear filtering is used
static void draw_string_float(float x, float y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0f, cd->t0f); glVertex2f(x + cd->x0f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t0f); glVertex2f(x + cd->x1f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t1f); glVertex2f(x + cd->x1f, y + cd->y1f);
        glTexCoord2f(cd->s0f, cd->t1f); glVertex2f(x + cd->x0f, y + cd->y1f);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance;
    }
    glEnd();
}
*/

#ifndef STB_FONTCHAR__TYPEDEF
#define STB_FONTCHAR__TYPEDEF
typedef struct
{
    // coordinates if using integer positioning
    float s0,t0,s1,t1;
    signed short x0,y0,x1,y1;
    int   advance_int;
    // coordinates if using floating positioning
    float s0f,t0f,s1f,t1f;
    float x0f,y0f,x1f,y1f;
    float advance;
} stb_fontchar;
#endif

#define STB_FONT_times_bold_8_latin_ext_BITMAP_WIDTH         256
#define STB_FONT_times_bold_8_latin_ext_BITMAP_HEIGHT         60
#define STB_FONT_times_bold_8_latin_ext_BITMAP_HEIGHT_POW2    64

#define STB_FONT_times_bold_8_latin_ext_FIRST_CHAR            32
#define STB_FONT_times_bold_8_latin_ext_NUM_CHARS            560

#define STB_FONT_times_bold_8_latin_ext_LINE_SPACING           5

static unsigned int stb__times_bold_8_latin_ext_pixels[]={
    0x080c4044,0x06206200,0x400180cc,0x06010809,0x06a20170,0x20010808,
    0x14050088,0x220e20c4,0x44026001,0x10040100,0x98003101,0x00a80880,
    0x04202101,0x20350098,0xc980a83c,0x40543d82,0x2620aa02,0x04c44c80,
    0x009881e8,0x02220533,0x40e40e6a,0x1502c85b,0xa8130330,0x05405409,
    0x81dc0ee2,0x883c880a,0x0f60703a,0x2e22640a,0x1c881702,0xa80a0590,
    0x2e3aba82,0x2236a3aa,0x1a826263,0x19aa81a8,0x770e236a,0xb51c46d4,
    0x446d4711,0x1cf632e3,0x6d4711b5,0x2236a388,0x26aa0c43,0x510cd541,
    0x51d5d435,0x20cd541b,0x066aa09a,0xaaa89555,0x2a0cd544,0x2236a19a,
    0x6d42a623,0x46aa2388,0x5d4388da,0x8711b53a,0x236a19aa,0x52555438,
    0x4d36a8cb,0x4e5435d8,0x261206e0,0x433ccd15,0x0cf30a98,0x27986bb1,
    0x21adde21,0x86798679,0x4cb30679,0x68accd15,0x865a8cee,0x73456669,
    0x345661d5,0x14b314b3,0x1599a2b3,0x56433ccd,0x770cf30e,0x2d433cc6,
    0x56619e63,0x30d76268,0x9909914b,0x36223f13,0xf371741c,0x3e4c83f0,
    0x9950cf31,0x22219e65,0x419e61cd,0x2609faad,0x98679867,0x264b3067,
    0x11f9323f,0x4c1321dd,0x931f9326,0x323f2649,0x93209904,0x98fc991f,
    0x264ba867,0x30ee8867,0xf30990cf,0x88fc990c,0x41321cd8,0x1f1db85b,
    0x86e17442,0x22dcc7a8,0x33c43e5a,0x27896654,0xf1174421,0x1363aa0c,
    0x0cf10cf1,0xa9660cf1,0x1f2d43e5,0xa85ba5c6,0x50f96a69,0x21f2d457,
    0x56e1f35b,0x87cb50f9,0x33c43e5a,0x0cf115d4,0x433c52e3,0xa867885b,
    0x2e8843e5,0x7b07cd6e,0x8ae76233,0x20cc531a,0x3e6a0ebb,0x36154dc0,
    0x8f7660aa,0x4c6a0aad,0xa40556c2,0x40aad81a,0x556c0aad,0x2a6e2d40,
    0x57154dc2,0xc8cdec35,0x5154dc4b,0x154dc5b7,0x55b1aab6,0x5c2a9b8d,
    0x0556c2a9,0x556c5977,0xad86aae0,0xb0cdec0a,0x2a9b8155,0x2b614c6a,
    0x0000806a,0x36370015,0x00000005,0x00000000,0x00015000,0x98000000,
    0x00000019,0x1a980000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00400000,
    0x2606e013,0x00102a81,0x0840404c,0x81c015cc,0x40c8202a,0x70408448,
    0x184055b5,0x001aa880,0x17710042,0x446cc084,0x8032b663,0x00013028,
    0x20239817,0x88108e62,0x104c003b,0x1a81e4c9,0x14c42988,0x20ea2154,
    0x30902819,0x1c46cc1b,0x501711b3,0x22ab9a8b,0x36615c3a,0xbc4432a0,
    0x41d83750,0x98cee3b8,0x6cc7710d,0xb0770ee0,0x68867883,0x2804c059,
    0x53103b10,0x5466e398,0x0644911a,0x557066aa,0xda8c4285,0x2236a388,
    0xda9d5d43,0x46aa2388,0x0a988e5a,0x2a61d553,0x1d5530ea,0x19a219a2,
    0x69acc990,0x55442aa2,0x2e55b570,0x02e23c44,0xee886a05,0x30dc3310,
    0x442a621b,0x195b30aa,0x574433c4,0x557b300d,0x99832b66,0x2396a099,
    0x6cc36639,0x2e766910,0x2b534b30,0x59836669,0x0cf30cf3,0x86798cb5,
    0x0457433b,0x26425775,0x49909321,0x06688668,0x8fc990ec,0x57752bba,
    0x43a85e22,0x3a0d6478,0x7186d541,0x34dc6b29,0xa95dd4f1,0x8b2d12bb,
    0xe9e88678,0x21179300,0x5e545968,0x3045741b,0x44f13c47,0x32111f14,
    0x446647e4,0x3598f11e,0x90cf30cf,0xd10cf309,0x2a0f541d,0x303a62bb,
    0x220e981d,0x40678867,0x5d4f2d46,0x4457752b,0x83e624c7,0x916e61e9,
    0x466ae3b3,0x44d511e9,0x5d4aeea7,0x81b5d12b,0x23ea0aad,0x3cda985c,
    0x3d036ba2,0x4c1ea83d,0x22789e23,0x2d419f14,0x10f8edcf,0x0cf1598f,
    0x10b70cf1,0xf12e30cf,0x3a3dd981,0x3a097412,0x204d6c12,0x85880aad,
    0x37662b9b,0x3c47bb33,0x8aea1c14,0x12a60faa,0xbb95d451,0x6eccf10e,
    0x3a27bb33,0x0a0380e9,0x22117918,0x04a40e9e,0x9e23981f,0x47c52278,
    0x88a66e08,0x51e22b9d,0x360556cb,0x0cdec0aa,0x555c155b,0x2e00be21,
    0x73d73b9e,0x00ee7ae7,0x00005400,0x4040f980,0x04d85c00,0x7cc00088,
    0x647d4000,0x20102985,0x54acd88b,0x4400b91f,0x1f30c42f,0xf98c43e6,
    0x4c0002b9,0x00002a0f,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x2a044000,
    0x541881aa,0x1054388d,0x50414c50,0x26621d44,0x06ccae09,0x40402214,
    0xc88e982a,0x0d554000,0x2a820420,0x4ab661b3,0x204c0210,0x88062040,
    0x81a82980,0x44aaa808,0x71d5d40b,0x91000505,0x14102100,0x02a1a2b3,
    0xa8b06b91,0x288b0a29,0x4a21ca8a,0x3c4ea199,0x64c0a04c,0xf1045d42,
    0x4790ee0a,0x106a0999,0x4426481d,0x64467fa7,0x28850710,0x14050726,
    0x814c42a8,0x9a8334c2,0x1350cb30,0x41a8154c,0x87710899,0x6cc65c59,
    0x5a8fc990,0x41cd888e,0x142e7664,0x9865b992,0x0ace4a3b,0x8ae1e275,
    0x750500d9,0xa82df885,0xbbb86621,0x3ada86e2,0x789dc366,0x06cc67f6,
    0xb85ceccb,0x40503661,0x46cc3a82,0x173b30da,0x874dc132,0x40e9b84c,
    0x272a1202,0xb9d982a0,0x5a9e2970,0x208ae8f1,0x11445d10,0x150a111f,
    0x0a9b816e,0x54177b15,0x23a84f13,0xb507a078,0x20f9f88d,0xa9a6e49a,
    0x44d372bb,0x3a9e2996,0x88cdc4f1,0x111f1347,0x1e878872,0x22ca83d0,
    0x47c4b378,0x43e6b508,0x2a16e4ba,0x3d01e84b,0x124d45d0,0x452e111f,
    0x2a15d647,0x4298d41e,0x22833e25,0x2287a248,0x2f6664d8,0x3e69708a,
    0x3c4752a9,0x665c5b98,0x43b23e64,0x9735442c,0x689aa257,0x34b9e2d5,
    0x8f11981f,0x2a833e25,0x30b731e2,0x12cda8b7,0x67c4b75f,0x752cd5c0,
    0x7519ac85,0xb985b985,0x86f21b85,0x45260cf8,0x0f80da87,0x8f896050,
    0x02248508,0x3062ccc5,0x4750a04c,0x0faa8278,0xd982804c,0xb883aee2,
    0x5a21d772,0x511cf15b,0x189e2330,0x228223e2,0x207d5478,0x2f2a0faa,
    0xf8966f12,0x2a054088,0x750542cb,0x207d5459,0x30660faa,0x0447c43b,
    0x20c407cc,0x220102f8,0x86573f30,0x33060208,0x08081310,0x553f325c,
    0x80226c2e,0x01440000,0x7cc32bea,0x8441c530,0x9f9810f9,0x2e1f302b,
    0x4d85c9b0,0x47ccf32e,0x573f30eb,0x18199808,0x36170ccc,0x1526c2e4,
    0x0573f300,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x90000000,0xb9d98571,0x40200800,0x80420002,
    0xb8971002,0x2ae0a222,0x09906225,0x20aa8550,0x0ae04419,0x5cc2a889,
    0x26a15c42,0x88d98ee0,0x8190e22d,0x215712b8,0x88f224a8,0xa890a609,
    0x2a886a1b,0x80770031,0x511544a9,0x47c45751,0x20e0b208,0x21aa8399,
    0x107622d8,0x3207a039,0x09822664,0xab98b36a,0x9888f6a2,0x44130ee0,
    0x54d37099,0x0260d449,0x82605055,0x13110cc9,0x3311e9e2,0x65426221,
    0x09829928,0x4c3590cc,0x21b30cc0,0x1d6aa4a8,0x21331264,0x3304c2b8,
    0x32a6b215,0x9819f13b,0x502e7661,0x22173b30,0x0a062218,0x26622dcc,
    0x2aa13950,0x2e57950d,0x512a0aca,0xa8ea2577,0x44aeea49,0x9b86f26a,
    0x69b926a6,0x324d41e8,0x895dd475,0x95dd47a7,0x41972bba,0x436aa4e8,
    0x23d30daa,0x1b550daa,0x10daa9e2,0x19831535,0x1544aeea,0x95dd4935,
    0x14aba9e9,0x36aa111f,0xe8111f10,0xa8447c41,0x3a126a49,0x2a0faa81,
    0x9c8ba2bb,0x3279971d,0x2a2dc2ba,0x259b52bb,0xb95dd42c,0x443b30eb,
    0xa886f26a,0x2f22dcc6,0x5d476f21,0x3d11f12b,0x5dd4aeea,0x23b30752,
    0x3b391d9c,0x8ece4aea,0x64f11d9c,0x55cc41d9,0x2bba8ee3,0x50de47b5,
    0x2aaea577,0x573f32cc,0x67c47672,0x3e22dcc0,0x3790b20c,0xd85c5b98,
    0x1b8aeea4,0x4c1312a6,0x6cc283cc,0x2657953d,0x70f7662d,0x9875dc38,
    0xa83aee1d,0x287660fa,0xf99eecc5,0x4f7666ba,0xa8933dd9,0x4c9530bb,
    0x49531c4a,0xb99e24a9,0x54775384,0x254f7663,0x3dd98766,0x4c5103a8,
    0x8223e24a,0x23e20faa,0x6cc5b308,0xa807d541,0x0ccf7660,0x00400080,
    0x8001e65c,0x00006a0a,0x0004d85c,0x08000000,0x20002000,0x204000f9,
    0x002dc04b,0x01701540,0x0b95cfcc,0x15cfcc9b,0x826c2e00,0x00054028,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x906e0000,0x22298770,0x498f224a,0xbb8890a6,0x22a882e0,
    0x53b30988,0x2600c443,0xaa84a81a,0x75712acc,0x2ea2c881,0x11037001,
    0x239ec65c,0x5414715b,0x2b95c3ab,0x355124cc,0x44c2898c,0x81066aa0,
    0x236a0a99,0x88222638,0x53144e20,0x85129862,0x098130da,0x982660cc,
    0x54930cc1,0x39750d41,0xba86a04c,0x4d11f12b,0x45712cda,0x21e540a8,
    0x2211795a,0x33ca8950,0x21dc173b,0x926a0999,0xf886b778,0x4b30a088,
    0x0dd4b261,0x8cee1d13,0x2a779738,0x534b32cb,0x8aeea619,0x4e5435c8,
    0x874886a0,0x07298729,0x9a926ad3,0x55436aa4,0x4dcd370d,0x2e69b946,
    0x546eea69,0x5436aa49,0x87cf12bb,0x45712bca,0x5c7d449a,0xa8f32990,
    0x32ae7bab,0x54111f12,0xc923a6a2,0x09faad82,0xc8260de4,0x952cab84,
    0xdd10c477,0x32957501,0x8fc992ba,0x22f2664b,0xe839b110,0x22666042,
    0x9862aa60,0xcb4c089a,0x9c86f21b,0x223b791d,0x211aa26a,0xa9aa26a8,
    0x9c8594ab,0x2279b31d,0x12bcb9e7,0x570de497,0xbcadc5d5,0xc9669509,
    0x819f12ba,0x86baa23b,0x6c7542d9,0x2281e984,0x52bac85b,0x5c604957,
    0x4b32ab54,0x3cb52cca,0x165d5475,0x4370ba21,0x88b15048,0x258a848a,
    0x4c3b3699,0xba92a61d,0x5dc3aee4,0x3aee930e,0x32e1d770,0x54c5b32c,
    0x327e6384,0x0e895c42,0xdbea8766,0x2b76b21e,0x4c373914,0x111f13dc,
    0x5b9971d4,0x033480b8,0x26b21416,0x32a7b931,0x9ab8361b,0x2b81d461,
    0x4498a66e,0x4c6a1a9a,0x87770662,0xb89c1b53,0xbc86d4e0,0x00000003,
    0x00000000,0xc8a20035,0x0000003c,0x8ae7e600,0x0006004b,0x00000000,
    0x1540aa00,0x15000000,0x81041a88,0x00208110,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x20000000,
    0x751143a8,0x892a1ec4,0x3076c088,0x530f7543,0x261d4c95,0x998620a9,
    0x4c711b30,0x022643ad,0x6cc770aa,0x206cc03a,0x8882ee2b,0x1b73d508,
    0x44570366,0xadab85c3,0x4c4c2622,0x44222608,0x98932098,0x12abd980,
    0x44099989,0x91b30dc0,0x4c154ae3,0x6ce45504,0x10dab8a1,0x2ea1d896,
    0x4982aa2c,0x0cb3244c,0x26661979,0x74dca22a,0x2f10cd10,0x8130664b,
    0x2f10cc1a,0x2239774b,0xca8ea2af,0x3547cc02,0x313a81f1,0x2f111985,
    0x32a1b550,0xa872a1bb,0x645312bb,0x08bc981a,0x2474d413,0x86621b55,
    0x54ea3178,0x144d408b,0x88eddc33,0x5b876761,0x2cba8bee,0x0dcb9baa,
    0x3e20991c,0x46089665,0x219a24ba,0x8ee6a9fa,0x70ee2ccb,0x3b54fd47,
    0x753da231,0x880b36a9,0x21e25baf,0x5c59b54b,0x5e43f513,0xd07a7a1d,
    0xda95dd43,0xa983d32c,0xa88ee3cd,0x476721ae,0x505e23da,0x65c0aea7,
    0x2698771c,0x360ed642,0x099b7160,0x8876b239,0xc87cd2e2,0x315551f9,
    0x222ba9c4,0x4b778867,0x0ea04c3a,0x75bbc475,0x92be2195,0x80af2a3a,
    0x13d4b378,0x515e54ee,0x12ea3c47,0xd982e129,0x2a57953d,0x08bc8c2b,
    0x16e65c75,0x22254953,0x6da9d427,0x8ea59770,0x9730a0a8,0x1db714e4,
    0x930ddc0e,0x4d641c19,0x53512aa6,0x2cbaacc3,0xafa826b6,0xbbb92e0c,
    0x549712e2,0x42110caf,0x9725c0f9,0x4c222279,0x3f30eb8f,0x665d2e57,
    0x00f992e3,0xccb80000,0x33622e03,0x4000974a,0x954fcc5b,0x9099974b,
    0x0012e5b7,0x00028000,0x44000000,0x00003332,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x5a800000,
    0x4298ea8e,0x98eb6a3c,0xb570da8d,0xcad98c55,0x0ab66080,0x26173b30,
    0x3661d31d,0x864474c0,0x1b30b9d9,0xd986e248,0x0a0f624a,0x5110c440,
    0x81330cc4,0x88226210,0x542628a8,0x125c0b83,0x10441a81,0x10cc1331,
    0x57144c77,0x304c4c1b,0x318ac81b,0x45741d55,0x04c166c0,0x9bc532d1,
    0x3885e225,0x4310b2d1,0x9d441f78,0x53221178,0x5e21e27a,0x88447c42,
    0x88723547,0x21e223d6,0xb505d41e,0xb8966d47,0xba887a24,0xbda85950,
    0x32a772cc,0x25a86622,0xa866249a,0x472eea49,0xaa8ee69b,0x5c2aea2d,
    0x21e24ada,0x226421d9,0x81f881ea,0x8b55a23b,0x03c45baf,0x5d41b5d1,
    0x5c75f13c,0x110dfc44,0x43c4f33f,0x67c42df8,0x46899e20,0x116fe21c,
    0x9705b987,0x2579512a,0x391e40e8,0x32a36d4b,0x2a753bba,0x4c9712cd,
    0x4b886f25,0x457750b2,0x9c8ee6a8,0x9c82ea1d,0x8e3e21bc,0x03a60af9,
    0x21ae603e,0x8adda23a,0x4c788b37,0x881d3d14,0x95d41e21,0x8cd84178,
    0x3f109e27,0x8447c41f,0xc87f7278,0x2516da21,0xb983eaa0,0x799716e2,
    0x0fa98f32,0x2665c26a,0x2e7997b7,0x3a257954,0x21d99260,0x98b660e8,
    0x43aee3dd,0x7512e63b,0x221eca98,0xd0ded427,0x542f8825,0x2a4b89d2,
    0x71f30caf,0xa807cc1d,0x30445c8f,0x0f98401f,0x87ccccd4,0x1f32a9f9,
    0x2e7e61d9,0x6c681f32,0x5c32be63,0x936170ff,0x00000000,0x79970000,
    0x405a8f32,0x200003cc,0x004b804c,0x6c4aa7e6,0x00ee7ae3,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x22000000,0x06662020,0x531c46ea,0x3398ccc4,0x2620a607,0x5dccaa19,
    0x2e0a8551,0x50ac8122,0xbb822a63,0x006eee1b,0x00000000,0x00000000,
    0x00000000,0x00000000,0x52bbb800,0x4b24b871,0x0bb92253,0x5ca25553,
    0x257289c5,0x44a64999,0x261770bb,0x0dc800bb,0x00dc4420,0x00000000,
    0x00000000,0x00000000,0x00000000,0x22000000,0x54473220,0x42a2311a,
    0x55461119,0x8822772a,0x04080530,0x0ea20811,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x15000000,0x00000005,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
};

static signed short stb__times_bold_8_latin_ext_x[560]={ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,0,0,0,0,0,0,0,0,0,0,
-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,-1,0,-1,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,-1,0,-1,0,-1,0,0,0,0,0,0,0,-1,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,-1,1,1,1,
1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,-1,0,
0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,0,0,-1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1, };
static signed short stb__times_bold_8_latin_ext_y[560]={ 6,1,1,1,1,1,1,1,1,1,1,1,4,3,
4,1,1,1,1,1,1,1,1,1,1,1,2,2,1,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,7,1,2,1,2,1,2,1,2,1,1,
1,1,1,2,2,2,2,2,2,2,1,2,2,2,2,2,2,1,1,1,3,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,6,2,1,1,1,1,
1,1,1,1,1,2,2,3,1,0,1,1,1,1,1,2,1,3,5,1,1,2,1,1,1,2,-1,-1,-1,-1,
-1,-1,1,1,-1,-1,-1,-1,-1,-1,-1,-1,1,-1,-1,-1,-1,-1,-1,2,0,-1,-1,-1,-1,-1,1,1,1,1,
0,1,1,0,2,2,1,1,0,1,1,1,0,1,1,1,1,1,0,1,1,2,2,1,1,0,1,1,1,1,
0,1,-1,1,1,2,-1,1,-1,0,-1,1,-1,0,-1,1,1,1,0,1,-1,1,-1,1,1,2,-1,0,-1,0,
-1,1,-1,1,1,0,-1,-1,1,1,-1,1,0,1,-1,1,1,1,-1,2,1,1,-1,0,1,1,2,-1,-1,1,
1,1,1,1,1,1,1,-1,1,1,2,-1,0,1,1,2,0,1,-1,1,-1,1,1,2,-1,1,1,2,-1,0,
-1,1,-1,0,1,2,-1,0,1,1,-1,1,1,1,-1,1,0,1,-1,1,-1,0,-1,1,1,2,-1,0,-1,0,
-1,-1,1,-1,1,-1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,0,2,1,1,1,1,1,1,1,1,1,1,1,1,1,0,2,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1,0,-1,0,-1,
0,-1,0,-1,0,-1,0,-1,-1,-1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,-2,-1,-1,1,-1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1, };
static unsigned short stb__times_bold_8_latin_ext_w[560]={ 0,2,4,4,4,7,6,2,3,3,4,4,2,3,
2,3,4,4,4,4,4,4,4,4,4,4,2,2,4,4,4,4,7,6,5,5,5,5,5,6,6,3,4,6,
5,7,6,6,5,6,6,4,5,6,6,8,6,6,5,3,3,2,4,5,2,4,4,4,4,4,3,4,4,2,
3,5,2,6,4,4,4,4,4,3,3,4,4,6,4,4,4,3,2,3,4,4,4,4,4,4,4,4,4,4,
4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,0,2,4,4,4,4,
2,4,3,6,3,4,5,3,6,5,3,4,2,2,3,5,4,2,2,2,3,4,6,6,6,4,6,6,6,6,
6,6,8,5,5,5,5,5,3,3,3,3,5,6,6,6,6,6,6,4,6,6,6,6,6,6,5,4,4,4,
4,4,4,4,6,4,4,4,4,4,3,3,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,
6,4,6,4,6,4,5,4,5,4,5,4,5,4,5,6,5,4,5,4,5,4,5,4,5,4,5,4,6,4,
6,4,6,4,6,4,6,4,6,4,3,4,3,4,3,4,3,2,3,2,6,4,4,4,6,5,5,5,3,5,
2,5,4,5,3,5,2,6,4,6,4,6,4,6,6,4,6,4,6,4,6,4,7,6,6,4,6,4,6,4,
4,3,4,3,4,3,4,3,5,3,5,4,5,3,6,4,6,4,6,4,6,4,6,4,6,4,8,6,6,4,
6,5,4,5,4,5,4,3,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,6,4,4,5,4,4,4,
4,4,4,4,4,4,4,4,4,4,6,5,4,4,4,4,4,4,4,4,4,4,4,4,4,7,5,4,4,4,
4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,6,4,3,4,6,
4,6,4,6,4,6,4,6,4,6,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,
4,4,4,4,4,4,4,4,4,4,6,4,8,6,6,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,
4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,
4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,
4,4,4,4,4,4, };
static unsigned short stb__times_bold_8_latin_ext_h[560]={ 0,6,3,6,6,6,6,3,7,7,3,5,4,2,
3,6,6,5,5,6,5,6,6,6,6,6,5,6,5,3,5,6,7,5,5,6,5,5,5,6,5,5,6,5,
5,5,6,6,5,7,5,6,5,6,6,6,5,5,5,7,6,7,3,1,2,5,6,5,6,5,5,6,5,5,
7,5,5,4,4,5,6,6,4,5,6,5,5,5,4,6,4,7,7,7,2,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,6,7,6,5,5,
7,7,2,6,3,4,3,2,6,1,3,5,3,3,2,6,7,2,3,3,3,4,6,6,6,6,7,7,7,7,
7,7,5,7,7,7,7,7,7,7,7,7,5,8,8,8,8,8,8,4,7,8,8,8,8,7,5,6,6,6,
7,6,6,7,5,6,6,6,7,6,5,5,6,5,6,5,6,6,7,6,6,4,5,6,6,7,6,7,7,7,
6,6,7,6,7,6,8,6,8,7,8,6,8,7,7,6,5,6,6,6,7,6,7,6,7,6,7,7,8,8,
8,7,8,7,7,8,7,7,5,5,7,5,6,5,7,5,7,7,7,4,6,7,8,8,7,7,4,7,7,7,
7,5,5,5,5,5,5,8,5,7,6,8,6,5,6,6,7,6,8,6,8,6,6,5,7,5,7,6,7,6,
8,6,8,7,7,6,8,7,7,7,7,6,5,6,8,6,7,6,8,6,8,7,8,6,7,6,8,7,7,8,
7,7,5,7,5,7,6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,6,5,5,7,5,5,5,
5,5,5,5,5,5,5,5,5,5,7,5,5,5,5,5,5,5,5,5,5,5,5,5,5,7,5,5,5,5,
5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,7,7,7,6,8,
7,8,7,8,7,8,7,8,8,8,7,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5,5,5,5,5,8,8,7,6,8,6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5, };
static unsigned short stb__times_bold_8_latin_ext_s[560]={ 255,31,140,149,181,219,86,137,159,149,149,
128,95,161,128,6,10,186,197,15,181,31,36,41,53,1,118,182,139,110,209,
172,56,202,191,156,99,171,144,46,105,177,251,164,158,150,213,195,133,5,121,
177,112,73,145,136,87,80,74,212,152,224,105,177,169,36,167,25,162,15,11,
68,1,251,251,238,235,245,219,219,185,190,214,195,202,185,180,173,229,220,224,
26,36,39,172,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,
132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,255,65,43,
20,112,69,48,51,165,58,118,234,131,161,206,183,98,91,115,102,157,25,140,
154,122,125,145,85,244,237,230,225,167,174,222,83,23,229,199,211,193,153,30,
30,1,247,220,216,106,14,120,143,155,176,183,90,240,190,202,214,94,12,117,
44,39,34,108,26,21,118,212,131,6,1,41,242,158,208,227,94,214,190,205,
200,12,191,186,80,168,171,166,60,154,236,1,65,137,132,46,122,53,112,132,
102,15,36,221,49,1,103,123,80,80,108,113,81,227,144,17,127,6,117,246,
241,248,197,162,217,169,206,199,150,186,181,137,127,163,86,210,96,145,101,136,
133,129,252,159,113,138,108,96,90,239,77,73,67,64,229,51,63,123,144,150,
241,153,19,75,64,97,244,64,71,233,54,234,70,38,11,93,56,191,224,175,
87,161,237,127,252,28,138,133,196,209,117,111,107,101,176,162,252,1,92,63,
247,227,232,8,40,21,107,168,59,78,198,205,21,33,45,20,51,6,57,76,
41,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,101,132,132,78,
132,132,132,132,132,132,132,132,132,132,132,132,132,84,45,132,132,132,132,132,
132,132,132,132,132,132,132,132,70,30,132,132,132,132,132,132,132,132,132,132,
132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,121,142,
147,119,113,128,101,151,87,156,71,96,57,52,45,91,132,132,132,132,132,132,
132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,
132,132,132,31,26,182,124,7,16,132,132,132,132,132,132,132,132,132,132,132,
132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,
132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,
132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,
132,132,132,132,132,132,132,132,132, };
static unsigned short stb__times_bold_8_latin_ext_t[560]={ 1,35,54,27,27,27,35,54,19,19,54,
48,54,54,54,42,42,48,48,42,48,42,42,42,42,42,48,35,48,54,48,
35,19,48,48,35,48,48,48,42,48,48,35,48,48,48,35,35,48,19,48,
35,48,42,35,35,48,48,49,10,35,10,54,54,54,49,35,49,35,49,49,
42,49,42,10,42,42,48,48,42,35,35,48,42,35,42,42,42,48,35,48,
19,19,19,54,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,
42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,1,42,19,
42,42,49,19,19,54,42,54,48,54,54,35,54,54,42,54,54,54,42,19,
54,54,54,54,54,35,35,35,35,19,19,19,19,27,19,42,19,19,19,27,
19,19,10,10,10,42,1,1,1,1,1,1,54,10,1,1,1,1,19,42,
35,35,35,19,35,35,19,42,35,35,35,27,27,42,42,27,48,27,42,27,
27,27,27,27,54,42,27,27,27,27,19,27,27,27,27,27,27,27,27,1,
27,10,27,1,35,1,19,19,27,42,35,35,35,10,27,27,27,27,27,19,
19,1,1,1,19,1,19,19,1,19,19,42,42,19,42,27,42,19,42,19,
19,19,48,27,19,1,1,19,19,48,19,19,19,19,42,49,49,42,42,42,
1,42,19,27,1,27,42,35,35,10,35,1,27,1,35,35,49,10,42,10,
27,10,27,1,26,10,10,10,27,1,10,10,10,10,27,42,19,10,27,10,
27,1,27,10,10,10,27,10,35,1,10,10,1,10,10,49,10,49,10,35,
49,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,35,42,42,10,
42,42,42,42,42,42,42,42,42,42,42,42,42,10,49,42,42,42,42,42,
42,42,42,42,42,42,42,42,10,49,42,42,42,42,42,42,42,42,42,42,
42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,10,10,
10,35,1,10,1,10,1,10,1,10,1,1,1,10,42,42,42,42,42,42,
42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,
42,42,42,1,1,10,35,1,35,42,42,42,42,42,42,42,42,42,42,42,
42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,
42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,
42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,
42,42,42,42,42,42,42,42,42, };
static unsigned short stb__times_bold_8_latin_ext_a[560]={ 29,38,64,58,58,116,96,32,
38,38,58,66,29,38,29,32,58,58,58,58,58,58,58,58,
58,58,38,38,66,66,66,58,108,83,77,83,83,77,71,90,
90,45,58,90,77,109,83,90,71,90,83,64,77,83,83,116,
83,83,77,38,32,38,67,58,38,58,64,51,64,51,38,58,
64,32,38,64,32,96,64,58,64,64,51,45,38,64,58,83,
58,58,51,46,25,46,60,90,90,90,90,90,90,90,90,90,
90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,
90,90,90,90,90,90,90,90,29,38,58,58,58,58,25,58,
38,86,35,58,66,38,86,58,46,63,35,35,38,67,62,29,
38,35,38,58,87,87,87,58,83,83,83,83,83,83,116,83,
77,77,77,77,45,45,45,45,83,83,90,90,90,90,90,66,
90,83,83,83,83,83,71,64,58,58,58,58,58,58,83,51,
51,51,51,51,32,32,32,32,58,64,58,58,58,58,58,63,
58,64,64,64,64,58,64,58,83,58,83,58,83,58,83,51,
83,51,83,51,83,51,83,85,83,64,77,51,77,51,77,51,
77,51,77,51,90,58,90,58,90,58,90,58,90,64,90,64,
45,32,45,32,45,32,45,32,45,32,95,64,58,38,90,64,
64,77,32,77,32,77,54,77,46,77,32,83,64,83,64,83,
64,84,89,64,90,58,90,58,90,58,116,83,83,51,83,51,
83,51,64,45,64,45,64,45,64,45,77,38,77,60,77,38,
83,64,83,64,83,64,83,64,83,64,83,64,116,83,83,58,
83,77,51,77,51,77,51,32,90,90,90,90,90,90,90,90,
90,90,90,90,90,90,90,85,90,90,58,90,90,90,90,90,
90,90,90,90,90,90,90,90,90,64,90,90,90,90,90,90,
90,90,90,90,90,90,90,92,69,90,90,90,90,90,90,90,
90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,
90,90,90,90,90,83,58,45,32,90,58,83,64,83,64,83,
64,83,64,83,64,90,90,90,90,90,90,90,90,90,90,90,
90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,
90,90,83,58,116,83,90,58,90,90,90,90,90,90,90,90,
90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,
90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,
90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,
90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,
90,90,90,90,90,90,90,90, };

// Call this function with
//    font: NULL or array length
//    data: NULL or specified size
//    height: STB_FONT_times_bold_8_latin_ext_BITMAP_HEIGHT or STB_FONT_times_bold_8_latin_ext_BITMAP_HEIGHT_POW2
//    return value: spacing between lines
static void stb_font_times_bold_8_latin_ext(stb_fontchar font[STB_FONT_times_bold_8_latin_ext_NUM_CHARS],
                unsigned char data[STB_FONT_times_bold_8_latin_ext_BITMAP_HEIGHT][STB_FONT_times_bold_8_latin_ext_BITMAP_WIDTH],
                int height)
{
    int i,j;
    if (data != 0) {
        unsigned int *bits = stb__times_bold_8_latin_ext_pixels;
        unsigned int bitpack = *bits++, numbits = 32;
        for (i=0; i < STB_FONT_times_bold_8_latin_ext_BITMAP_WIDTH*height; ++i)
            data[0][i] = 0;  // zero entire bitmap
        for (j=1; j < STB_FONT_times_bold_8_latin_ext_BITMAP_HEIGHT-1; ++j) {
            for (i=1; i < STB_FONT_times_bold_8_latin_ext_BITMAP_WIDTH-1; ++i) {
                unsigned int value;
                if (numbits==0) bitpack = *bits++, numbits=32;
                value = bitpack & 1;
                bitpack >>= 1, --numbits;
                if (value) {
                    if (numbits < 3) bitpack = *bits++, numbits = 32;
                    data[j][i] = (bitpack & 7) * 0x20 + 0x1f;
                    bitpack >>= 3, numbits -= 3;
                } else {
                    data[j][i] = 0;
                }
            }
        }
    }

    // build font description
    if (font != 0) {
        float recip_width = 1.0f / STB_FONT_times_bold_8_latin_ext_BITMAP_WIDTH;
        float recip_height = 1.0f / height;
        for (i=0; i < STB_FONT_times_bold_8_latin_ext_NUM_CHARS; ++i) {
            // pad characters so they bilerp from empty space around each character
            font[i].s0 = (stb__times_bold_8_latin_ext_s[i]) * recip_width;
            font[i].t0 = (stb__times_bold_8_latin_ext_t[i]) * recip_height;
            font[i].s1 = (stb__times_bold_8_latin_ext_s[i] + stb__times_bold_8_latin_ext_w[i]) * recip_width;
            font[i].t1 = (stb__times_bold_8_latin_ext_t[i] + stb__times_bold_8_latin_ext_h[i]) * recip_height;
            font[i].x0 = stb__times_bold_8_latin_ext_x[i];
            font[i].y0 = stb__times_bold_8_latin_ext_y[i];
            font[i].x1 = stb__times_bold_8_latin_ext_x[i] + stb__times_bold_8_latin_ext_w[i];
            font[i].y1 = stb__times_bold_8_latin_ext_y[i] + stb__times_bold_8_latin_ext_h[i];
            font[i].advance_int = (stb__times_bold_8_latin_ext_a[i]+8)>>4;
            font[i].s0f = (stb__times_bold_8_latin_ext_s[i] - 0.5f) * recip_width;
            font[i].t0f = (stb__times_bold_8_latin_ext_t[i] - 0.5f) * recip_height;
            font[i].s1f = (stb__times_bold_8_latin_ext_s[i] + stb__times_bold_8_latin_ext_w[i] + 0.5f) * recip_width;
            font[i].t1f = (stb__times_bold_8_latin_ext_t[i] + stb__times_bold_8_latin_ext_h[i] + 0.5f) * recip_height;
            font[i].x0f = stb__times_bold_8_latin_ext_x[i] - 0.5f;
            font[i].y0f = stb__times_bold_8_latin_ext_y[i] - 0.5f;
            font[i].x1f = stb__times_bold_8_latin_ext_x[i] + stb__times_bold_8_latin_ext_w[i] + 0.5f;
            font[i].y1f = stb__times_bold_8_latin_ext_y[i] + stb__times_bold_8_latin_ext_h[i] + 0.5f;
            font[i].advance = stb__times_bold_8_latin_ext_a[i]/16.0f;
        }
    }
}

#ifndef STB_SOMEFONT_CREATE
#define STB_SOMEFONT_CREATE              stb_font_times_bold_8_latin_ext
#define STB_SOMEFONT_BITMAP_WIDTH        STB_FONT_times_bold_8_latin_ext_BITMAP_WIDTH
#define STB_SOMEFONT_BITMAP_HEIGHT       STB_FONT_times_bold_8_latin_ext_BITMAP_HEIGHT
#define STB_SOMEFONT_BITMAP_HEIGHT_POW2  STB_FONT_times_bold_8_latin_ext_BITMAP_HEIGHT_POW2
#define STB_SOMEFONT_FIRST_CHAR          STB_FONT_times_bold_8_latin_ext_FIRST_CHAR
#define STB_SOMEFONT_NUM_CHARS           STB_FONT_times_bold_8_latin_ext_NUM_CHARS
#define STB_SOMEFONT_LINE_SPACING        STB_FONT_times_bold_8_latin_ext_LINE_SPACING
#endif

