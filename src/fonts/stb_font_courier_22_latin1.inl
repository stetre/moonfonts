// Font generated by stb_font_inl_generator.c (4/1 bpp)
//
// Following instructions show how to use the only included font, whatever it is, in
// a generic way so you can replace it with any other font by changing the include.
// To use multiple fonts, replace STB_SOMEFONT_* below with STB_FONT_courier_22_latin1_*,
// and separately install each font. Note that the CREATE function call has a
// totally different name; it's just 'stb_font_courier_22_latin1'.
//
/* // Example usage:

static stb_fontchar fontdata[STB_SOMEFONT_NUM_CHARS];

static void init(void)
{
    // optionally replace both STB_SOMEFONT_BITMAP_HEIGHT with STB_SOMEFONT_BITMAP_HEIGHT_POW2
    static unsigned char fontpixels[STB_SOMEFONT_BITMAP_HEIGHT][STB_SOMEFONT_BITMAP_WIDTH];
    STB_SOMEFONT_CREATE(fontdata, fontpixels, STB_SOMEFONT_BITMAP_HEIGHT);
    ... create texture ...
    // for best results rendering 1:1 pixels texels, use nearest-neighbor sampling
    // if allowed to scale up, use bilerp
}

// This function positions characters on integer coordinates, and assumes 1:1 texels to pixels
// Appropriate if nearest-neighbor sampling is used
static void draw_string_integer(int x, int y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0, cd->t0); glVertex2i(x + cd->x0, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t0); glVertex2i(x + cd->x1, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t1); glVertex2i(x + cd->x1, y + cd->y1);
        glTexCoord2f(cd->s0, cd->t1); glVertex2i(x + cd->x0, y + cd->y1);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance_int;
    }
    glEnd();
}

// This function positions characters on float coordinates, and doesn't require 1:1 texels to pixels
// Appropriate if bilinear filtering is used
static void draw_string_float(float x, float y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0f, cd->t0f); glVertex2f(x + cd->x0f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t0f); glVertex2f(x + cd->x1f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t1f); glVertex2f(x + cd->x1f, y + cd->y1f);
        glTexCoord2f(cd->s0f, cd->t1f); glVertex2f(x + cd->x0f, y + cd->y1f);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance;
    }
    glEnd();
}
*/

#ifndef STB_FONTCHAR__TYPEDEF
#define STB_FONTCHAR__TYPEDEF
typedef struct
{
    // coordinates if using integer positioning
    float s0,t0,s1,t1;
    signed short x0,y0,x1,y1;
    int   advance_int;
    // coordinates if using floating positioning
    float s0f,t0f,s1f,t1f;
    float x0f,y0f,x1f,y1f;
    float advance;
} stb_fontchar;
#endif

#define STB_FONT_courier_22_latin1_BITMAP_WIDTH         256
#define STB_FONT_courier_22_latin1_BITMAP_HEIGHT        114
#define STB_FONT_courier_22_latin1_BITMAP_HEIGHT_POW2   128

#define STB_FONT_courier_22_latin1_FIRST_CHAR            32
#define STB_FONT_courier_22_latin1_NUM_CHARS            224

#define STB_FONT_courier_22_latin1_LINE_SPACING          10

static unsigned int stb__courier_22_latin1_pixels[]={
    0x20000000,0x00030028,0x00000000,0x00001000,0x00000000,0x01bea000,
    0x40244710,0x00b70019,0x20000000,0x002e0040,0x04a801e4,0xf3003d10,
    0x74003660,0x000b3001,0x3bc8025c,0x0f200160,0xd8007600,0x580ec401,
    0x1b12cc00,0x2ff2f720,0x1e9bd80d,0x802649b0,0x7401e42b,0x0ad80f63,
    0x4b801ec0,0x2001d300,0x003a6058,0x6d400b62,0x80264000,0x015c0919,
    0xe88025c0,0x805b1001,0x001601e8,0xfb82b800,0x20910d40,0x34002208,
    0x304c04b8,0xdd97d501,0x1cc00aa0,0x00001100,0x01200388,0x0a600398,
    0x68077900,0x70035000,0x400dc003,0xaa8ac00b,0x4c099880,0x0d816619,
    0x02600130,0x06a03a80,0x0d0b1000,0x44026000,0x20ccc099,0x30099999,
    0x00000001,0x00100000,0x00000057,0x20000000,0x0eebcfad,0xbd90b3a6,
    0xd70100dc,0x3ae05b97,0x0e802dcb,0x1f7ec400,0x80ea9fdb,0x3b63efd8,
    0x6e5f5c4f,0x321674c2,0x3333225e,0x6e5f5c6c,0xb1f7ec42,0xfeed89fd,
    0x5feed805,0x05feed80,0x3bb602c4,0x6c5eeeee,0x5eeeeeee,0xdd306fec,
    0x3bbbbae5,0x2606fc1e,0x2c581d46,0x0760f200,0x5403b079,0x777775c4,
    0x44882c1e,0x4882c01e,0x2a0ec1e4,0xc9600b03,0x10581d83,0x006d5c09,
    0x7000dab8,0x01c801b5,0x1c8580e4,0x3b0570b0,0x02f80720,0x43a8583b,
    0x44166005,0x03441666,0xb00e401b,0x9b711220,0x99220b05,0x50b0d105,
    0x82cd6007,0x09105868,0x2b003aac,0x0eab003a,0x01c80b10,0x4160390b,
    0x1c80ea0d,0x543a81a0,0x8006c2c3,0x1ec7603d,0x809303b0,0x2441601c,
    0x1058b710,0x83b01ec9,0x2b002c3a,0x0b07603d,0x0b24c122,0x4c02c930,
    0x80760164,0x1c808a1c,0x22b3008a,0x1f00e405,0x3a960320,0x01d004c8,
    0x2a00e9d4,0x0e400d83,0x201220b0,0xd244162b,0x52c1d401,0x00eac007,
    0x1220b0ea,0xc80390e4,0x43900721,0x9024c01c,0xac80d335,0xb5700699,
    0x3e01c803,0x27505884,0x8440d105,0x406a4406,0x6402c448,0x92441601,
    0x910586e0,0x2a122034,0x0d5800b3,0x4882c488,0x340498d0,0x498d0126,
    0x9b900d80,0xccdc80d9,0x2013a006,0x2b73a01c,0x2b601db8,0xd3076a03,
    0x16750161,0x801c8750,0x2441601c,0xb1aa21bd,0x54059220,0x80075b03,
    0x2c3a80b5,0xcce98488,0x33a607cc,0x3a607ccc,0x9807cccc,0x202c3904,
    0x1c80161c,0x55601c80,0x07a802dc,0x0ddcefa8,0x191d8032,0x00b10ec0,
    0x91068072,0x417764dc,0x00649106,0x001ea03b,0x83b00656,0x33909106,
    0x32057333,0x02b99999,0x57333339,0x03901b00,0x0140720a,0x80720072,
    0x00750005,0x1059815c,0x46882ccd,0x4039001c,0x3901b81d,0x986e0760,
    0x1d40d105,0x1059ac00,0x03703b0d,0x82c1620b,0x1620b058,0x40720ea0,
    0x0c80e40c,0x07200720,0x01b00058,0x3c8064c0,0x6c1e41d8,0x1c801a21,
    0x058836a0,0x106d4072,0x03b0790b,0x92a0006c,0xda81d83c,0x80aa1620,
    0x1b01540d,0x003602a8,0x0640721a,0x90064072,0x26039003,0xb998009e,
    0x1977000c,0x0ee675c0,0x41dcceb8,0x0072002b,0x401999f5,0x333ea00a,
    0xb99d700c,0x01973303,0x40eb9998,0x201dcceb,0x640cccfa,0x3baa0eef,
    0x41ddf92e,0xdf92eeea,0x1777541d,0xeeee8260,0x3a0feeee,0xfeeeeeee,
    0x4eeeed80,0x77777764,0x01999931,0x0266664c,0x004c0010,0x90050098,
    0x03dddddd,0x3000004c,0x4c026001,0x2204cccc,0x2600bccc,0x00026000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x36000000,0x40719803,0x1c46f544,0x110170b2,0x8001b500,
    0x0925c03d,0x3d883ffb,0x01020000,0x3bfe0204,0x05c06600,0x00100330,
    0x7000a800,0x0405119d,0x26000540,0x74c00401,0x58dc05b9,0xd9138770,
    0x10e41905,0x6640bb97,0x9e9801e9,0x1d89105b,0x5cf4c370,0x02649b05,
    0x3e81f47d,0xdb80b0f6,0x80e41ecb,0x76d400da,0x01997100,0x32800e98,
    0xd97103db,0x80074c09,0xdb9300da,0x07306407,0x01f058e4,0x322a8026,
    0xa83a83a1,0x83201222,0x34c2a839,0x3a8321b8,0x98022088,0x304c0260,
    0x20f20581,0x12e0722d,0x416c5320,0x3a200e0b,0x43d00001,0x007a204b,
    0x2a0d8097,0x21900004,0xbeb85a85,0x322a82dc,0x000b0571,0xd0550000,
    0x00003703,0xb0000000,0x93441660,0x20200103,0x88024480,0x6c2fea80,
    0x0d0954fe,0x20040088,0x3f62583a,0x213fb63e,0x42d8588d,0x1541d83c,
    0x6c341639,0x76c05fee,0x45eeeeee,0x1b84b82a,0x3dddddd7,0x205feed8,
    0x1eeeeeeb,0x3bbbbbb6,0x01ec165e,0x2a20725b,0x0554400a,0x440711a8,
    0x077401a9,0x0390592c,0x4c401551,0x1b05701a,0xec891058,0x3e4efeef,
    0x23441661,0x9334722a,0x06d5c0db,0x2e2c0720,0x81b86a82,0x0dab801c,
    0x07201c80,0x803a0b2c,0x6e4c173a,0xdc983eca,0x79503eca,0xacdb8a21,
    0x095b01db,0x315406cb,0x707d95b9,0x883b759b,0x4161660e,0x10e6d048,
    0x87603d8f,0xd96390d8,0x03aac0b0,0x362580e4,0x81b87980,0x0755801c,
    0x80e40390,0x2202c165,0x85b01b04,0x2202d80d,0x24400bcb,0x1a583b58,
    0x5b01b1d4,0xbf309100,0x220b01dd,0xf30e6b04,0xb0ea00e8,0x249ac72b,
    0x202c9305,0x17608a1c,0x640dc3c4,0x00b24c01,0x450e4039,0x2e024160,
    0x4d103983,0xb88d1039,0x834000bc,0x41658b15,0x1a20733a,0x5d6e4340,
    0x4910581e,0xcddcfcc8,0x20341f10,0xb1c92648,0xc8720b2c,0x1a66b201,
    0xb86a81c8,0x0e401c81,0x201c8039,0x0b0699ac,0x412d802a,0xeeeeeeec,
    0x3bbbbb27,0x442e27ee,0x76dc40bb,0x15cb06de,0xd92b82cb,0x8fdddddd,
    0x46deedb8,0x82c0e84a,0x64eccc48,0x0587e09b,0x8e4551d4,0x203f76a6,
    0x9b9024c6,0x5c1540d9,0x01c81b85,0x39012634,0x83666e40,0x9a209105,
    0x3200391c,0x91190001,0x8b0681d8,0x1d81c966,0x40ec0039,0x215c06c6,
    0x29109105,0x0323c81b,0x1c8aa1d8,0x9d30103b,0x0e40f999,0x1641540b,
    0x300e40dc,0x80f9999d,0x0587201c,0x16c1dc0b,0x54016a39,0x26298005,
    0x2c1a0572,0xd0752cea,0x15c016a1,0x0640dc68,0xa442441a,0x1666981c,
    0x1c8aa344,0x26720077,0x3902b999,0xf88550a0,0x01c81b80,0x2e666672,
    0x1c807202,0x36602c50,0xb0e41ecc,0x82d87105,0x85471038,0x5836c43a,
    0x507459d8,0x23882d89,0x2236c43a,0x0761620d,0x064e606e,0x360f21e8,
    0x223915c1,0x4160622e,0x32039058,0x20970ea0,0x1601c81b,0x403902c4,
    0x0161901c,0x20e40332,0x81edccfc,0x01edccfc,0x9b90eeee,0x585dd3bb,
    0x674c5d98,0xb99f903c,0xddcdc83d,0x336a2ee9,0x20da80cd,0x81673058,
    0x6e675c59,0x98723541,0x1542edee,0x203901b0,0x81d16c0c,0x01c81daa,
    0xc806c055,0x86407201,0xddfd02ae,0x40725d9d,0x00330019,0xb0026008,
    0x305c89df,0x26006600,0xf5001000,0x08401999,0x500980c0,0x90110181,
    0x77541ddf,0x3bbbba2e,0x1440feee,0x32155503,0x91eeeeee,0x77541ddf,
    0xddddd92e,0x7777743d,0x5550feee,0x0c130301,0x00000000,0x00000000,
    0x00000000,0x00000130,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x19800150,
    0x99900080,0x80040799,0x401004b9,0x1bd50000,0x40080071,0x0002a000,
    0xddca8066,0x01a883dc,0x80002000,0x1a86e028,0x09800220,0x13000122,
    0xa80074c0,0x076d400d,0x50388370,0x514801db,0x066ee5c0,0x09db70fa,
    0x4017644e,0xb504cdd9,0x01d3001d,0xcd806d40,0xf90389a8,0x2004cb8f,
    0x4000caca,0xc8b200e9,0x803dd302,0x1d9cdbdb,0x7cc00997,0x200f4406,
    0xb14c804b,0x640c1205,0x4dc05b14,0x4987501b,0x254591f4,0x00db8000,
    0x802d8a64,0x04b801e8,0x1c4d43e6,0x00902c88,0xd9800e20,0x1b500000,
    0x221e40f6,0x5c00484e,0x04008802,0xd9808080,0x80101002,0x20d80009,
    0xb076163e,0x5980bfdd,0x20010100,0x54008008,0x000e26a5,0xb9102024,
    0x80020201,0x020201a9,0x2176a166,0x26000804,0x01a9801a,0x2a80d4c4,
    0x35300195,0x001a9880,0x1ccf60d8,0x0dab81cc,0x83300360,0x20cc0998,
    0x20cc0998,0x43e60998,0x9000389a,0x2e206dc0,0x4cc0ea83,0x32fb6201,
    0x4033302d,0x40dac43d,0x2007a604,0x82dcbed8,0x82dcbed8,0x41dbacdb,
    0x440f221a,0xb82dcbed,0x801dbacd,0x5996c4c8,0x0eab04a8,0x0f640248,
    0x1ec85b93,0x3d90b726,0x3ae16e4c,0x160389a9,0x403d9848,0x32213625,
    0x905b01ec,0x01ecc887,0x8550d81d,0x5c0cc884,0x43c82d81,0x8803c82d,
    0x064c2b84,0x200f20b6,0x42ff4048,0x5d883a2d,0x5cc16498,0x1b82dde9,
    0xb81b82b8,0x82b81b82,0x50389da8,0x235b750d,0x4ddc18db,0x0113d71c,
    0x882d40dc,0x23406e07,0x6dd5221d,0x8113d51a,0x7882d41c,0x803c416a,
    0x24819506,0x200f105a,0x644b8806,0x23aefa61,0x20721c85,0x83b10dca,
    0x1b82b81b,0xb81b82b8,0x10e26a02,0x3331019d,0x393935d5,0x363d88c4,
    0x0ae06e05,0x203701d8,0x13b8770d,0x6c9b3333,0x80ae16c5,0x0ec0571d,
    0x0dbddb71,0x15c2a3c8,0x76dc43b0,0x8ae006de,0x0b0d440b,0x0f88498d,
    0x2e06e24c,0x82b81b82,0x2a02b81b,0x8006c389,0xb84830dc,0xb8166e0d,
    0x03602a81,0x59aa80dc,0x21ea82d8,0x2a16c59b,0x01543602,0x0340ec1b,
    0x0551e6d4,0x0d03b06c,0x2a002440,0x666674c3,0x37160b07,0x70370570,
    0x05703705,0x0161c4d4,0x21c80ba6,0x05a4c3e8,0x7982c06e,0x6ec406e0,
    0x21ec3440,0x583d8b48,0xf3058f30,0x8086815c,0x4f305829,0x5c00d02b,
    0x32074002,0x82b99999,0x06e2440d,0x2e06e0ae,0x02b81b82,0x0370e26a,
    0x03900449,0x01b33b01,0x105dc06e,0xd00dc05b,0x0416c419,0x7d06ccec,
    0x16c41770,0x22d882ee,0x2436c43a,0x105dc14c,0x3621d45b,0x22cc1c86,
    0xb05b102c,0x91261620,0x17dc4983,0x20bee24c,0x5017dc49,0x8be88713,
    0x0c8806b9,0x03aaaa00,0xb9f900dc,0x901b8039,0x03d99b55,0xd0755540,
    0x3373f209,0x39b9f901,0xd3bb9b90,0x5d55645d,0x3373f204,0x9ddcdc81,
    0x33b662ee,0x4dbe60cd,0x2a80ddcc,0x33aa0360,0x7d9bb02d,0xd9bb05d7,
    0x9bb05d77,0xa985d77d,0xca82d9ac,0x999f002c,0x88f64009,0x4eeeeeee,
    0x3ba20130,0x714eeeee,0x32000088,0x13006e1e,0x26002600,0x04ccc400,
    0x09800980,0x20880600,0x3bbf2018,0x40bbbaa0,0x20018801,0x00620018,
    0x06622662,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x40000000,
    0x404cc419,0xbd806a1a,0x8aa205a9,0x005c3880,0x0a805b93,0x10066200,
    0x01301c47,0x988002a0,0x26666201,0x26019999,0x03300000,0x20000020,
    0xffff100a,0x7ffffc9f,0x00a621ff,0xd9020066,0x6416e4c3,0xeea80f22,
    0x977f900e,0x221b10d9,0x2e1b100e,0x999b7d03,0x32eb3660,0x06c4b304,
    0x5f401e88,0x9b304ccd,0x33509975,0x15333333,0x3cccbdb8,0xdb807ae6,
    0x540dbcbc,0x3a603dde,0xc80defee,0x05809101,0x3aef7239,0xbfcbdc84,
    0x707fd40d,0x80005703,0x790570ac,0x70000f50,0x02980585,0x00362095,
    0x400b6200,0x22095029,0x8220060d,0x5993e849,0x2612e039,0x07512a0f,
    0x203901a0,0x2cd00048,0xf70570e4,0x2e0ffb81,0x55102b81,0x87211001,
    0x8330e078,0x41c80998,0x20353104,0x21757548,0x01a98848,0x03530060,
    0x8baba922,0x82200648,0x1c82a80d,0x582e0598,0xa81a00b0,0x02441ade,
    0xb1032440,0x980d8166,0x215c0dc0,0x83ecadc9,0x4aeecdb8,0x1ec80126,
    0x4720b726,0xacdb81db,0x288641db,0x336e1b8e,0x33301dba,0x6e5f6c40,
    0x2e0a8642,0x22006370,0x1c8006e0,0xc80002b8,0x17b06801,0xdbd88f71,
    0x402b801c,0x00403758,0xd8570370,0x216c2d80,0x001225d9,0x39057037,
    0x2200372e,0x31c51244,0xc8848805,0x905b01ec,0x94c07247,0x36208801,
    0xd81c801b,0x03440000,0x44839868,0x05c88bd8,0x2c7a602c,0x70370000,
    0x26881cc5,0x058f5048,0x415c0dc0,0x4006c41c,0x1b791246,0x203401c4,
    0xf105a81b,0x19c40724,0xdb880880,0x0b03902d,0x2003b000,0x20000c86,
    0x6c0b100c,0x3600161d,0x3ee1dc2e,0x3bbbbb22,0xf80727ee,0x1b1032a0,
    0xc82b81b8,0x36e23a81,0x51246dee,0x2e2298aa,0x5c06deed,0x47602b81,
    0x03298124,0x05900110,0xdd90b039,0x2616c09f,0x00390d02,0x02a81cc0,
    0x4001b091,0xcdeb86f8,0x0392ebbe,0xb86802e0,0xb81cccdf,0x81c82b81,
    0x91a07658,0x170b8a21,0x2e0340ec,0x43602a81,0x42e2530c,0x4110030b,
    0x20721600,0x6c03201c,0x30d02a82,0x0e600109,0x9903006c,0x5c17dc00,
    0x016a0189,0x205881c4,0x5c0dc01b,0xa4c31c82,0x5488d02b,0x57245c37,
    0x203701a0,0x3244f305,0x01922177,0x220b3088,0x04981c84,0x203b1032,
    0xb704882a,0x3200b955,0xd1000b00,0x20bb0440,0x105b001b,0x0f442d87,
    0x44980930,0x1b1c82fb,0x3621d46e,0x5980c986,0x01b621d4,0x882ee037,
    0x4c064c2d,0x984400c5,0x1c81c82f,0x88360790,0x9036601d,0x405ec401,
    0x541660be,0x2a032e03,0x1d074c1d,0xfc8006e0,0x6c41edcc,0x2e01ecbd,
    0x66ec00cb,0x3b62ebbe,0xdc89bb36,0x42ee9ddc,0x03cbbcc8,0xdd3bb9b9,
    0xfc806e05,0x99101cdc,0x00307977,0x33b32611,0x403902dd,0x24ecbceb,
    0x260981d8,0xc802ccde,0x9b9fb101,0xff803201,0xbb9df503,0x0004c001,
    0x04c400cc,0x06200080,0x01300400,0x13000980,0x77777440,0x001304ee,
    0x5555004c,0x01755555,0xfdd90131,0x26203ddd,0xeeeeea81,0x000882ee,
    0x0006002e,0x06200620,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0xaa884c40,0x4c099880,
    0x05fb8019,0xa800004c,0x4000006f,0x180661a8,0x1310a980,0x00260000,
    0x0a800000,0x40fffcc0,0xa8001fe8,0x4298aa00,0x00001fe8,0x01deec98,
    0x9f5d9301,0x674c1dd7,0xb002f642,0x0b72fae0,0x76c7dfb1,0x32002c4f,
    0xdadd9800,0x3f00ce9e,0x33af3660,0x837f63db,0x5ec42fe9,0xfeeec85d,
    0xdd51eeee,0x3a0776c7,0x6404ccdb,0x20007201,0x4b8ee01c,0xdd900390,
    0x3b03fddd,0x076edc04,0x51a606fc,0x0b001607,0x0b03b079,0x90016122,
    0xe881b001,0x0d806c05,0x415c0fdc,0x02a1c81d,0x4370e419,0x4c02b81c,
    0x3201c802,0x001c8001,0x19003900,0x402a8588,0xb02f8058,0x203a8583,
    0x0b3161a9,0x244161a2,0x2620532c,0x4c0999ad,0x2000b903,0x3603f03a,
    0x402c0ea0,0x21b8720c,0x4622b81c,0x1c801aa8,0x01998720,0x066600e4,
    0x03551390,0x2621d819,0x4c0999bc,0x0ea06804,0xbd105875,0x3d8b1db5,
    0x220b0760,0xdbcf9d84,0x337b2a0c,0x980644cc,0x36033305,0x56603900,
    0x32016058,0x321b8720,0x2faa2b81,0x6403dbbd,0x77447201,0x3266620c,
    0x6644199a,0x2f6f201e,0x0ee143db,0x3999bd95,0x201f00d0,0x20ea580c,
    0x22f4c0e8,0x0b0ea00e,0x503ba122,0x2a801909,0xd9930b70,0x07a05703,
    0x9881dac8,0x390009ac,0x4cccd640,0x3a075c2c,0x1c807200,0x3332a0b7,
    0x700cccde,0x3a076403,0x0dc0b100,0x13e01ec0,0x059d4162,0x0d172097,
    0x4882c488,0x190b02f8,0x017a0b00,0xf30b1037,0x5df75303,0x3cedcb85,
    0x6e403900,0x5c2dcccc,0x07202b81,0x2003c9c8,0x4037001c,0x1b01b81c,
    0x2b600dc0,0xdce85b0d,0x3601db8a,0x2601b03a,0xb0ea02c5,0xb81e1220,
    0x6dc00642,0x405bea8a,0x715b701b,0x9331039b,0x01220335,0x40e40390,
    0x15c0dc2b,0x77640390,0x40072000,0x2e07201b,0x0dc02c82,0x16362750,
    0x4016e556,0x4c07207a,0x83b00645,0x01f09106,0x4001906e,0x40589cda,
    0x2f6e201b,0xdaa881b8,0x007302ab,0x207201c8,0x15c0dc2b,0x45640390,
    0x0039000d,0xb81c806e,0x712224c2,0x5b715c03,0x0ea000b0,0x98bb04a8,
    0x03b0d105,0x1607f037,0x58800032,0x2e000dc0,0x9ac99881,0x40105701,
    0x2e07201c,0x015c0dc2,0xd88e4039,0x7001b800,0x15c0e403,0x5c5881d1,
    0x0fa96201,0x01b00058,0x42ed42d8,0xda81d83c,0x0ef41620,0x060ea0ee,
    0x06e02c40,0x1c801b00,0x902c1a20,0x15c0e403,0xc80ae06e,0x0d987201,
    0x806e0000,0x0762b81c,0xb8037162,0x263eacdd,0xb998009e,0x676c400c,
    0x5c0ef8ce,0x2a01dcce,0x7540cccf,0x02dcee8e,0x013b3376,0x1b803666,
    0x0f666620,0x41eefeb8,0xeeeeeff9,0x4eefee83,0xddb2776c,0xeb8fbb67,
    0xddddd12e,0x50ff49dd,0x77754bdd,0xd10eeeee,0x49dddddd,0x3bb22efd,
    0xddddddf3,0x3bbbbb6b,0x3260100e,0x32600ccc,0x31004ccc,0x20009800,
    0x00220009,0x99300098,0x3bba2199,0x6544eeee,0x000001cc,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x20000000,0x000000fd,0x00000000,0x00000000,0x00000000,
    0x13000000,0x0ef7d404,0x3ee1ddd7,0x3bba60de,0x3bbbbb61,0x3bbae5ee,
    0xdfb11eee,0x3bb601bd,0x887fd50d,0x04deeefd,0x3bbfbfae,0x0dba80fe,
    0x3bbbbfa6,0x837f66ee,0x37f62ee9,0x74cbfa60,0x5c2deeee,0x6c04eeee,
    0x36205fee,0x20bdeeef,0xefa80fea,0xed85fd50,0x3bbbb64f,0xefd881ce,
    0x1001ddee,0x207fd49b,0x0aa15c05,0xb01c80d8,0x00d80720,0x00d98390,
    0xc8816a1a,0xdac06c48,0x571a0580,0xb05903b0,0x83c83983,0x6d5c003a,
    0x16606c00,0x057b0979,0x390b01dd,0x10720598,0x0ee4401b,0x41903fee,
    0x41606e1b,0x16039048,0xdddb00e4,0xd9872039,0x03a83400,0x40d89157,
    0x40b01b2b,0x80ea0d85,0x0e60ee0d,0x000ea06c,0x01b00eab,0x262ce437,
    0x84ad82bc,0x03a81c85,0x2e093039,0x2e02602e,0x4064bb11,0x3901b81c,
    0x80720114,0x3213260d,0x81a00b51,0x42911b06,0xb01b2c41,0x2b3010c4,
    0x59ac4058,0x51260730,0x0b24c007,0x323a80d8,0x0ae323a9,0x32160ed6,
    0x03903981,0x002ea875,0xb2d54aa0,0xc81a1260,0x1c80699a,0x90320360,
    0xd3100d73,0x580d8133,0x8720d3b1,0x4a99e80d,0x801dab80,0x07300dda,
    0xc800ea2c,0x40d80721,0x8ac721d8,0x162b0575,0x0e98390b,0xb7333590,
    0x00007dc1,0x58dc6ce6,0x64073160,0x1c806ccd,0x90ea0360,0x6401b97b,
    0x0644ccfc,0x436744e6,0x67406c49,0x09d004dc,0x07301f40,0x6800ea2c,
    0x557b024c,0x571c85d7,0xb960ae37,0x3bbb2162,0x666e403f,0x1f540ced,
    0x6a440440,0x22b81693,0x0587200c,0x203601c8,0x0b31e41c,0x6dc2c0d0,
    0x35b074dc,0x4cb03b33,0x20039003,0x07301dac,0x0620ea2c,0x0f9999d3,
    0xc81555ec,0x415cbb11,0x4390b345,0x4c0e404c,0x2a05d506,0x249d80ff,
    0x4562058e,0x0280e405,0x9306c039,0x03b83909,0x33b0b034,0x66664095,
    0x002c0cec,0x14a801c8,0x2607301d,0x21cc1d43,0x2b99999c,0x439001b0,
    0x5160ae2b,0x95072167,0x02a80e40,0x1ff5076e,0x256457b0,0x900ae360,
    0x07203203,0x01cdeed8,0x0680d039,0x12258877,0x2c06c073,0x4401c800,
    0x81cc2cc5,0x1cc1d40d,0x0d82c416,0x0ae01c80,0x32167616,0x03902c81,
    0x1b9100aa,0x545d8044,0x02dcc03d,0xc80c80e4,0x64003601,0x11a02b81,
    0x24455097,0x580d80e6,0xd8039000,0x21cc3b80,0x983a81d8,0x80d80aa3,
    0x201c800d,0x5d98582b,0x320d01c8,0x3000e881,0xf1176001,0xe809d005,
    0xfeeeeeee,0xdddddd90,0x3bbbfa23,0x41dddb01,0xeefe85e8,0x8eec83de,
    0x3eeeefeb,0xd30efeb8,0xdb00dddf,0xfe889ddd,0x553fae1e,0x41ddeeee,
    0xeeeeeeeb,0x41ddf93e,0xfd12eeea,0xdd703ddd,0x17774c1d,0x45c89dfb,
    0x7540eeee,0x3bbbbfa2,0x000000de,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00100000,0x4000a018,
    0x2a2011a8,0x06a62022,0x04cc4198,0x9880aa88,0x30199809,0x43530035,
    0x510d443a,0x13310000,0x22310cc4,0x2310530a,0x99881aa8,0x20201999,
    0x009440e0,0x15104c40,0x26209998,0x10372619,0x3200577b,0x4005d501,
    0x41edbacd,0x46ccbbfc,0x81dbacdb,0x0b7261ec,0x87d95b93,0x4ec82de9,
    0x16e5f6c4,0x6eddf6c4,0x566565c5,0x0f600dbd,0x3ae2dea8,0xb79bd50d,
    0xbea8b799,0x6e43dbbd,0xa81fcccc,0xccb87626,0x4991ebde,0x2d9700e8,
    0xf931dbdb,0x4276dc39,0xc802c00b,0x00772201,0x1e43b057,0x824403d4,
    0x06c2b81b,0x408ea16c,0x43c82d85,0x201f541e,0x0981266d,0x09506c40,
    0x83926499,0x390740eb,0x10ea82c8,0x3225d07d,0x03d526c3,0x1b021ef4,
    0x402e0570,0x039002da,0x2a019b10,0x40f1040d,0x06e0d003,0xd10398ae,
    0x458fa488,0x2d4f105a,0x13202d6a,0x3b10000b,0x1b872097,0x570370ae,
    0x3ee0ee04,0x09109d10,0x0fd4bd0b,0x849802e8,0x59802e06,0x4c003900,
    0x7bbb503d,0x710024c1,0x2e0dbddb,0x3bb22b81,0x587eeeee,0x57126b93,
    0x2a1c8ec0,0xeedb86e5,0x00feeeef,0x204e8800,0x42b86e1c,0x9502b81b,
    0x13e63f90,0x744341d4,0x01607ee5,0xb80ea0d8,0x75406400,0x0deeefee,
    0x54406d80,0x6c00911e,0x70370681,0x36000e45,0x42a9c9b8,0x8dc3602a,
    0x0bc96459,0xeeea80b2,0x700eeeee,0xb87203b9,0x70370ae1,0x3ea0b305,
    0x2340dd12,0x364f9849,0x2a00580e,0x36a20363,0x0ee7262b,0xb3000e40,
    0x59260707,0x41a05700,0x16a2b81b,0x2e6b5700,0x4f30580c,0x3e20d9d8,
    0x000b90b0,0x07627900,0x0ae1b872,0x59857037,0x6c5f3044,0xecbee885,
    0x1d91fc44,0x26d00160,0x10266604,0x00e40013,0x1f8066cc,0x1032a1c8,
    0xdb10ea1b,0x85f71260,0xd983882d,0x05dc1764,0x20ed85b1,0xf98ae3c8,
    0x0001710f,0x320ec1e4,0x5c2b86e1,0x03622b81,0x321e9873,0xb8d44f44,
    0x06dc5d13,0xcab800b0,0x20000000,0x0372201c,0x7b9999b0,0x3999bf70,
    0xe9ddcdc8,0xbecdd82e,0x667e42eb,0x643f01ed,0x3373f205,0x6e6decc1,
    0xcdccd82f,0x2a03ecea,0xc8bbfa00,0x23df73fe,0x365d71eb,0x4bbae3ee,
    0x3eeeeeed,0x00164588,0xd30598b2,0x809dddfd,0x000005e8,0x1db80e40,
    0x98008800,0x20009800,0x00660018,0x90098000,0x06200c41,0x000b6006,
    0x00000000,0x00000000,0x00000000,0x40100000,0x00000001,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x02400000,0x0120a602,0x80001a88,0xd9aecc09,0xff53ed85,
    0x7777775c,0x2aaa1eee,0x21aaaaaa,0x40440540,0xbb102619,0x22222083,
    0x2eee2088,0xbbbbbbbb,0x77777710,0x2e577777,0x000006a1,0x00000000,
    0x2c000000,0x642bbc88,0x5dd90b62,0x902dd644,0x972b6603,0x88ff36f9,
    0x00df30ff,0x2aaaa1b8,0x2a1aaaaa,0xffa83660,0x0ffa96a0,0x33c9ec36,
    0xdfffffff,0x55555554,0x2660aaaa,0x99999999,0x01645919,0x00000000,
    0x00000000,0x85c56370,0x36f21609,0x40e8ad42,0xdbb80da9,0xf8954580,
    0x4fa8df15,0x370017e2,0x2224c000,0x2e1ff50d,0x8107fd44,0x444442db,
    0x00000088,0x00000000,0x00000000,0x26000000,0x302ddeec,0x87613e07,
    0x1b57b52c,0x488b1598,0x44f93e48,0x0027c0fc,0xbbbbb86e,0x9771bbbb,
    0x01044110,0x00000022,0x00000000,0x00000000,0x00000000,0x813a6000,
    0x8595b03a,0x996688da,0x4a83620e,0x1f437064,0x3e83f87d,0x3330dc00,
    0x41333333,0x00000000,0x00000000,0x00000000,0x00000000,0x88000000,
    0x02b81d8e,0x3f21645b,0x37376a2e,0x4570390d,0x0543ddc8,0x03704813,
    0x00000080,0x00000000,0x00000000,0x00000000,0x00000000,0x11c80000,
    0x24aacc8b,0x00003829,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x80000000,0x00019998,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,
};

static signed short stb__courier_22_latin1_x[224]={ 0,4,2,1,2,1,2,4,5,2,0,1,2,1,
4,2,2,2,1,1,2,1,2,2,2,2,4,2,0,0,0,0,2,0,0,1,1,0,1,1,1,2,1,0,
1,0,0,0,1,0,0,1,1,0,0,0,0,0,2,0,0,0,2,0,4,1,0,1,1,1,2,1,0,1,
1,1,1,0,1,1,0,1,1,1,1,0,0,0,0,1,2,0,5,0,1,2,2,2,2,2,2,2,2,2,
2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,4,2,1,1,0,
5,1,3,0,0,0,0,1,0,-1,3,1,3,3,4,0,1,4,4,3,2,1,0,0,0,0,0,0,0,0,
0,0,0,1,0,0,0,0,2,2,2,2,-1,0,0,0,0,0,0,2,0,0,0,0,0,0,1,0,1,1,
1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,1,0,1,
 };
static signed short stb__courier_22_latin1_y[224]={ 16,3,4,3,3,3,5,4,4,4,4,5,13,9,
13,2,3,3,3,3,4,4,3,4,3,3,7,7,5,8,5,4,3,4,4,4,4,4,4,4,4,4,4,4,
4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,2,4,3,20,3,7,4,7,4,7,4,7,4,3,
3,4,4,7,7,7,7,7,7,7,4,7,7,7,7,7,7,4,4,4,9,3,3,3,3,3,3,3,3,3,
3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,16,7,3,4,6,4,
4,4,4,4,3,7,10,9,4,2,1,4,3,3,3,7,4,8,15,3,3,7,3,3,3,7,0,0,1,2,
1,0,4,4,0,0,1,1,0,0,1,1,4,2,0,0,1,2,1,7,4,0,0,1,1,0,4,4,3,3,
3,4,4,3,7,7,3,3,3,4,3,3,3,4,4,4,3,3,3,4,4,5,7,3,3,3,4,3,4,4,
 };
static unsigned short stb__courier_22_latin1_w[224]={ 0,3,8,9,8,9,8,4,4,5,8,10,5,9,
4,8,8,8,9,9,8,9,8,8,8,8,4,6,10,11,10,7,8,12,11,10,10,11,10,10,10,8,11,12,
10,12,11,10,10,11,12,9,10,11,12,12,11,11,8,4,8,4,8,13,4,10,11,10,11,10,9,10,11,9,
7,11,9,12,10,10,11,11,10,9,10,11,12,12,11,11,8,4,2,4,9,11,11,11,11,11,11,11,11,11,
11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,3,8,10,9,11,
2,10,6,12,7,10,11,9,12,13,6,10,6,6,4,11,10,4,4,6,7,10,12,12,12,7,12,12,12,12,
12,12,12,10,11,11,11,11,8,8,8,8,12,11,10,10,10,10,10,8,11,11,11,11,11,11,10,10,10,10,
10,10,10,10,12,10,10,10,10,10,9,9,9,9,10,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,
 };
static unsigned short stb__courier_22_latin1_h[224]={ 0,14,6,15,15,14,12,6,15,15,8,11,6,3,
4,16,14,13,13,14,12,13,14,13,14,14,10,12,11,5,11,13,15,12,12,13,12,12,12,13,12,12,13,12,
12,12,12,13,12,15,12,13,12,13,12,12,12,12,12,15,16,15,7,2,4,10,13,10,13,10,12,13,12,13,
17,12,12,9,9,10,13,13,9,10,13,10,9,10,9,13,9,15,15,15,3,13,13,13,13,13,13,13,13,13,
13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,0,13,13,12,9,12,
15,14,2,13,7,9,6,3,13,2,7,12,8,8,4,13,14,4,5,8,7,9,13,13,13,13,16,16,15,14,
15,16,12,16,16,16,15,15,16,16,15,15,12,14,17,17,16,15,16,7,13,17,17,16,16,16,12,13,14,14,
14,13,13,14,10,13,14,14,14,13,13,13,13,12,13,12,14,14,14,13,13,10,10,14,14,14,13,17,16,16,
 };
static unsigned short stb__courier_22_latin1_s[224]={ 247,77,58,13,247,182,246,73,23,86,1,
1,67,137,112,217,215,160,180,67,98,211,103,221,246,81,249,249,238,90,12,
230,47,164,226,238,142,27,107,169,150,39,190,59,153,188,201,37,177,145,213,
150,139,48,14,1,130,118,227,140,106,92,41,147,107,44,60,33,25,67,236,
105,215,95,36,182,172,149,162,91,1,83,214,23,72,55,225,78,137,13,173,
81,44,39,127,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,
138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,247,249,202,
128,193,116,157,34,175,125,33,182,78,137,80,161,26,194,10,245,117,1,148,
122,102,238,50,203,236,167,180,159,67,80,56,90,106,93,85,184,115,127,69,
128,226,151,97,119,72,203,44,13,195,28,206,17,224,55,1,1,235,139,48,
58,192,235,23,69,93,56,113,35,224,160,171,13,104,193,214,205,24,161,1,
12,45,114,203,126,102,124,136,112,46,24,160,172, };
static unsigned short stb__courier_22_latin1_t[224]={ 17,36,104,19,1,19,65,104,19,19,104,
92,104,104,104,1,19,51,51,36,79,51,36,51,19,36,79,51,79,104,92,
51,19,79,79,51,79,79,79,51,65,79,51,79,79,79,79,65,79,19,79,
51,65,65,79,79,79,79,65,19,1,19,104,104,104,92,65,92,65,92,65,
65,65,65,1,65,65,92,92,92,65,65,92,92,65,92,92,92,92,65,92,
19,19,19,104,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,
51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,17,36,51,
65,92,65,19,36,104,51,104,92,104,104,51,104,104,65,104,91,104,51,36,
104,104,91,104,92,36,36,36,36,1,1,19,36,19,1,79,1,1,1,19,
19,1,1,19,19,79,19,1,1,1,19,1,104,36,1,1,19,1,1,79,
51,19,19,36,51,51,36,92,51,19,19,19,51,51,36,36,65,51,65,36,
36,36,51,36,92,92,36,36,36,51,1,1,1, };
static unsigned short stb__courier_22_latin1_a[224]={ 186,186,186,186,186,186,186,186,
186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,
186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,
186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,
186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,
186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,
186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,
186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,
186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,
186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,
186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,
186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,
186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,
186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,
186,186,186,186,186,186,186,186, };

// Call this function with
//    font: NULL or array length
//    data: NULL or specified size
//    height: STB_FONT_courier_22_latin1_BITMAP_HEIGHT or STB_FONT_courier_22_latin1_BITMAP_HEIGHT_POW2
//    return value: spacing between lines
static void stb_font_courier_22_latin1(stb_fontchar font[STB_FONT_courier_22_latin1_NUM_CHARS],
                unsigned char data[STB_FONT_courier_22_latin1_BITMAP_HEIGHT][STB_FONT_courier_22_latin1_BITMAP_WIDTH],
                int height)
{
    int i,j;
    if (data != 0) {
        unsigned int *bits = stb__courier_22_latin1_pixels;
        unsigned int bitpack = *bits++, numbits = 32;
        for (i=0; i < STB_FONT_courier_22_latin1_BITMAP_WIDTH*height; ++i)
            data[0][i] = 0;  // zero entire bitmap
        for (j=1; j < STB_FONT_courier_22_latin1_BITMAP_HEIGHT-1; ++j) {
            for (i=1; i < STB_FONT_courier_22_latin1_BITMAP_WIDTH-1; ++i) {
                unsigned int value;
                if (numbits==0) bitpack = *bits++, numbits=32;
                value = bitpack & 1;
                bitpack >>= 1, --numbits;
                if (value) {
                    if (numbits < 3) bitpack = *bits++, numbits = 32;
                    data[j][i] = (bitpack & 7) * 0x20 + 0x1f;
                    bitpack >>= 3, numbits -= 3;
                } else {
                    data[j][i] = 0;
                }
            }
        }
    }

    // build font description
    if (font != 0) {
        float recip_width = 1.0f / STB_FONT_courier_22_latin1_BITMAP_WIDTH;
        float recip_height = 1.0f / height;
        for (i=0; i < STB_FONT_courier_22_latin1_NUM_CHARS; ++i) {
            // pad characters so they bilerp from empty space around each character
            font[i].s0 = (stb__courier_22_latin1_s[i]) * recip_width;
            font[i].t0 = (stb__courier_22_latin1_t[i]) * recip_height;
            font[i].s1 = (stb__courier_22_latin1_s[i] + stb__courier_22_latin1_w[i]) * recip_width;
            font[i].t1 = (stb__courier_22_latin1_t[i] + stb__courier_22_latin1_h[i]) * recip_height;
            font[i].x0 = stb__courier_22_latin1_x[i];
            font[i].y0 = stb__courier_22_latin1_y[i];
            font[i].x1 = stb__courier_22_latin1_x[i] + stb__courier_22_latin1_w[i];
            font[i].y1 = stb__courier_22_latin1_y[i] + stb__courier_22_latin1_h[i];
            font[i].advance_int = (stb__courier_22_latin1_a[i]+8)>>4;
            font[i].s0f = (stb__courier_22_latin1_s[i] - 0.5f) * recip_width;
            font[i].t0f = (stb__courier_22_latin1_t[i] - 0.5f) * recip_height;
            font[i].s1f = (stb__courier_22_latin1_s[i] + stb__courier_22_latin1_w[i] + 0.5f) * recip_width;
            font[i].t1f = (stb__courier_22_latin1_t[i] + stb__courier_22_latin1_h[i] + 0.5f) * recip_height;
            font[i].x0f = stb__courier_22_latin1_x[i] - 0.5f;
            font[i].y0f = stb__courier_22_latin1_y[i] - 0.5f;
            font[i].x1f = stb__courier_22_latin1_x[i] + stb__courier_22_latin1_w[i] + 0.5f;
            font[i].y1f = stb__courier_22_latin1_y[i] + stb__courier_22_latin1_h[i] + 0.5f;
            font[i].advance = stb__courier_22_latin1_a[i]/16.0f;
        }
    }
}

#ifndef STB_SOMEFONT_CREATE
#define STB_SOMEFONT_CREATE              stb_font_courier_22_latin1
#define STB_SOMEFONT_BITMAP_WIDTH        STB_FONT_courier_22_latin1_BITMAP_WIDTH
#define STB_SOMEFONT_BITMAP_HEIGHT       STB_FONT_courier_22_latin1_BITMAP_HEIGHT
#define STB_SOMEFONT_BITMAP_HEIGHT_POW2  STB_FONT_courier_22_latin1_BITMAP_HEIGHT_POW2
#define STB_SOMEFONT_FIRST_CHAR          STB_FONT_courier_22_latin1_FIRST_CHAR
#define STB_SOMEFONT_NUM_CHARS           STB_FONT_courier_22_latin1_NUM_CHARS
#define STB_SOMEFONT_LINE_SPACING        STB_FONT_courier_22_latin1_LINE_SPACING
#endif

