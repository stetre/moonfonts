// Font generated by stb_font_inl_generator.c (4/1 bpp)
//
// Following instructions show how to use the only included font, whatever it is, in
// a generic way so you can replace it with any other font by changing the include.
// To use multiple fonts, replace STB_SOMEFONT_* below with STB_FONT_courier_28_latin1_*,
// and separately install each font. Note that the CREATE function call has a
// totally different name; it's just 'stb_font_courier_28_latin1'.
//
/* // Example usage:

static stb_fontchar fontdata[STB_SOMEFONT_NUM_CHARS];

static void init(void)
{
    // optionally replace both STB_SOMEFONT_BITMAP_HEIGHT with STB_SOMEFONT_BITMAP_HEIGHT_POW2
    static unsigned char fontpixels[STB_SOMEFONT_BITMAP_HEIGHT][STB_SOMEFONT_BITMAP_WIDTH];
    STB_SOMEFONT_CREATE(fontdata, fontpixels, STB_SOMEFONT_BITMAP_HEIGHT);
    ... create texture ...
    // for best results rendering 1:1 pixels texels, use nearest-neighbor sampling
    // if allowed to scale up, use bilerp
}

// This function positions characters on integer coordinates, and assumes 1:1 texels to pixels
// Appropriate if nearest-neighbor sampling is used
static void draw_string_integer(int x, int y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0, cd->t0); glVertex2i(x + cd->x0, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t0); glVertex2i(x + cd->x1, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t1); glVertex2i(x + cd->x1, y + cd->y1);
        glTexCoord2f(cd->s0, cd->t1); glVertex2i(x + cd->x0, y + cd->y1);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance_int;
    }
    glEnd();
}

// This function positions characters on float coordinates, and doesn't require 1:1 texels to pixels
// Appropriate if bilinear filtering is used
static void draw_string_float(float x, float y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0f, cd->t0f); glVertex2f(x + cd->x0f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t0f); glVertex2f(x + cd->x1f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t1f); glVertex2f(x + cd->x1f, y + cd->y1f);
        glTexCoord2f(cd->s0f, cd->t1f); glVertex2f(x + cd->x0f, y + cd->y1f);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance;
    }
    glEnd();
}
*/

#ifndef STB_FONTCHAR__TYPEDEF
#define STB_FONTCHAR__TYPEDEF
typedef struct
{
    // coordinates if using integer positioning
    float s0,t0,s1,t1;
    signed short x0,y0,x1,y1;
    int   advance_int;
    // coordinates if using floating positioning
    float s0f,t0f,s1f,t1f;
    float x0f,y0f,x1f,y1f;
    float advance;
} stb_fontchar;
#endif

#define STB_FONT_courier_28_latin1_BITMAP_WIDTH         256
#define STB_FONT_courier_28_latin1_BITMAP_HEIGHT        166
#define STB_FONT_courier_28_latin1_BITMAP_HEIGHT_POW2   256

#define STB_FONT_courier_28_latin1_FIRST_CHAR            32
#define STB_FONT_courier_28_latin1_NUM_CHARS            224

#define STB_FONT_courier_28_latin1_LINE_SPACING          13

static unsigned int stb__courier_28_latin1_pixels[]={
    0x01330000,0x10001000,0x80000000,0x00010000,0x00075000,0x00019988,
    0x26003806,0x00020099,0x00000200,0x00098000,0x203a6000,0x40004ee9,
    0x26c001e9,0x001ea800,0x44004d88,0x0ba6004d,0x5a68d900,0xfeed80ed,
    0xd1036c40,0xef8016c0,0x003aa06e,0x2002e400,0x0f4003e9,0x980597b0,
    0x00fd4006,0x2600012a,0x1762002f,0x07d5d900,0x20027440,0x3ae004e8,
    0x9b2004ea,0x0254f178,0xa807903a,0x006980af,0x00fd400f,0x50017600,
    0x2e00bb5f,0x8058e606,0x03d7003e,0x20000950,0x2e4002e9,0x13625d80,
    0x1000ba20,0x06e4005d,0x5e2000bb,0x03a03c78,0x33baa01f,0x01743dfe,
    0x0be6003c,0x20027400,0x003b20ec,0x48a4407f,0x17007b80,0x00012a00,
    0x02800188,0x2200a050,0x00188001,0x10002814,0xe80f1e2f,0x41f883c0,
    0x402d43e8,0x00188007,0x20300050,0x2007d401,0xf8800cda,0xa5400002,
    0x800bddb9,0x4cc40298,0x10ccc409,0x99881333,0x10266621,0x14c40333,
    0x300a6200,0x25555555,0x4078f178,0x04b83c0e,0x7803d033,0x01999980,
    0x00ccccc0,0x00666660,0x3333026c,0x2a2e4003,0x2aaa82aa,0xaaefaca8,
    0x37f202fe,0xeed81dec,0x3bfba25e,0x44bdddb4,0xddb4efee,0x77f744bd,
    0xdecdfc84,0x766fe401,0xcccca81d,0x1e2f17cc,0x83c0e80f,0x02d4003b,
    0xfddd501e,0x3baa007f,0xd5003ffe,0x8807ffdd,0xfddd502f,0x83ea007f,
    0xfcb83cfc,0x981eea84,0x4c27442e,0x6c03b80e,0x0b601dc2,0x442d8077,
    0x880e984e,0x000e984e,0x3c68bc5e,0x220f03a0,0x0074001f,0x34fc400f,
    0x034fc400,0x2034fc40,0x9f8800fa,0xd85f1006,0x7d416a02,0x0991ae02,
    0x00ee074c,0x6c03b85b,0x0b601dc2,0x2074c099,0x003a604c,0x3d0278bc,
    0x40d30740,0x400acfea,0xb801e04b,0x4b8003d4,0xd4b8003d,0xb803dc03,
    0x0fe003d4,0xa80f40d3,0x6987c407,0x01dc4c80,0xd80770b6,0x8b601dc2,
    0x264c8069,0xf004c806,0x03fa81e2,0x200bee1d,0x7c04eca8,0x8f400f00,
    0xb8f4004b,0x4b8f4004,0x8f401b20,0xb09d004b,0x2d40b505,0x803c96c0,
    0x3601dc68,0x0b601dc2,0x322d8077,0x0f268803,0x8bc01a20,0x740fea07,
    0x90005f70,0x07825c09,0x003c4d10,0x1003c4d1,0x0d903c4d,0x803c4d10,
    0x1e86984e,0xf8803ea0,0x71a003b1,0x1dc2d807,0x80770b60,0x3400762d,
    0x401a003b,0x07a04f17,0x001a60e8,0x80f881a2,0x2d877007,0x02d87700,
    0x702d8770,0x2d87700f,0x45b03f80,0x01fd4059,0xd8007cf7,0x85b00ee1,
    0x2e16c03b,0x01f16c03,0x8007c760,0x2f17801d,0x03a03c68,0x34c0b10f,
    0x401e0f20,0xe802d40e,0x0e802d40,0x00fa82d4,0x1016a074,0x1d9a605f,
    0x4c0f7540,0x6c003a2e,0x85b00ee1,0x2e16c03b,0x01d16c03,0x80074760,
    0x2f17801d,0x03a03c78,0x3605f30f,0x03c34402,0x400e82cc,0x9801d059,
    0x5f101d05,0x00e82cc0,0x99d803ea,0xefaca806,0x0ec2febb,0x201dc680,
    0x3601dc2d,0x8b601dc2,0x0ecd001d,0x22f00680,0x74078f17,0x76f4c3c0,
    0xb004edac,0xeec80785,0x403feeee,0xfeeeeeec,0x77776403,0x09b03fee,
    0x77777764,0x3017203f,0x295005bb,0xc80bcca8,0x25468803,0x80950760,
    0x3602541d,0x9a200f21,0x0068803c,0x1e3c5e2f,0x230781d0,0x4c002fb8,
    0x4cfc03c6,0x40699999,0x9999999f,0x4cccfc06,0x1f506999,0x266667e0,
    0x05f10699,0x12a00db0,0x9900d300,0x207c0788,0x2207c078,0x0d307c07,
    0x4034c990,0xf178804c,0x0e80f1e2,0x01a2007c,0xa80f16c0,0x4a80ec04,
    0x04a80ec0,0xa83e80ec,0x3dc0ec04,0x95002d80,0x4c099000,0x1aa05d06,
    0xd06a8174,0x1321aa05,0x204c8698,0x22b50069,0x2025cf17,0x2201e40e,
    0x3cd30006,0x09500760,0x20950076,0xa825401d,0x25401d86,0x034c01f4,
    0xb1000950,0x2601d50b,0x980fd43e,0x980fd43e,0x440fd43e,0x880ea85d,
    0x000ea85d,0x37ad347b,0x40feed80,0x01a206d8,0xdddf1d80,0x87880688,
    0x88788068,0x3a078806,0x1e201a21,0x00b600d3,0x02ab72a2,0xbdbbf900,
    0xedfe9803,0x6ff4c01e,0x7f4c01ee,0x7e401eed,0x6401dedd,0x981deddf,
    0x004fbaaa,0x000ccc40,0x26000010,0x3fff2099,0x7fffd41f,0x83ffff93,
    0xf93ffffa,0xffa83fff,0x7fe403ff,0x7ffd41ff,0xbaaa803f,0x664c01af,
    0x30002ccc,0x03510003,0x4001a880,0x0cc001a8,0x2e00cc00,0x0002cccc,
    0x00000000,0x00000000,0x00000000,0x64000000,0x004ccccc,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x01351000,0x00000080,0x00100001,
    0xd83b1000,0x00090002,0x00000080,0x00000000,0x33660041,0x00000020,
    0x05d10000,0x405d89d0,0x8cfeceeb,0x400f4c06,0x1d5001ea,0x005d1000,
    0x3e6007aa,0x2000fe22,0x743f885a,0x80075404,0xf882ec4e,0x27402743,
    0x3a588176,0x9d95d300,0x362001db,0x016c4002,0x6c00fa60,0x1b702643,
    0x2a06fc98,0xeaec801f,0x003d7003,0xec8017cc,0x000003ea,0x42d81740,
    0x01eb803d,0xb02643d8,0x3d803d85,0x3cb30264,0x00177100,0xd10013a2,
    0x01f98009,0x01aa0000,0x007aa0db,0x004e8976,0x3d5003f5,0x4d897600,
    0xd3000000,0x7d400000,0x00000001,0x25a80000,0x00298807,0x2600174c,
    0x0098002e,0x44099988,0x200f4199,0x20013068,0x04400502,0x050004c0,
    0x20aaaa0a,0x5b002aaa,0x00029880,0x33331011,0x01333333,0x20033333,
    0x99999998,0x01a29500,0x03bd9bf9,0x35000350,0x8804cc00,0x97bbb619,
    0xd14efee8,0x26662000,0x4c409999,0x20999999,0x99999998,0x33310999,
    0x13333333,0x26666662,0x3f209999,0x04fcb83c,0x6fe40698,0x33101dec,
    0x6c133333,0xeeeeeefe,0x777542fe,0x774403ff,0x05eeefee,0x7441a277,
    0x0000e984,0xfec80000,0x177f541e,0x2a2d8077,0xeee88004,0x225eeefe,
    0xeeefeeee,0x3bbbfb65,0xdb2feeee,0xdddddddf,0x3bbfb65f,0x42feeeee,
    0x4016a02d,0x309d103c,0xeeee881d,0x0e85eeef,0x9f880b20,0x803c4006,
    0x1320b33b,0x97500e98,0x32e0017b,0x074402ce,0x403b8698,0x0000ee2d,
    0x078801e2,0xd0b200e8,0x03a16401,0xd034c2c8,0x640f1003,0x8803a604,
    0x3200e807,0x00f52e02,0x7fc40f10,0x2fffffff,0xd09900d3,0x07d7359b,
    0x6d4d6f4c,0x7416e00d,0x16c03b81,0xf1000077,0x7403c400,0x01d0b200,
    0xc803a164,0x05a82d82,0x01a60790,0x80788132,0xe80b200e,0x3c400971,
    0x90952d80,0x400d1007,0x203d1068,0x2e16c06b,0x2d807704,0x2200016a,
    0x201e2007,0x1d0b200e,0x803a1640,0x1e86982c,0x7900f880,0x3c40d100,
    0x00510740,0x200789a2,0x2e3b0078,0x0d001d84,0x03d82d80,0x21d101e4,
    0x807700e9,0x0001a62d,0x078801e2,0xd00a20e8,0x83a01441,0x4c5b0028,
    0x6c097005,0x3c40d001,0x00b30740,0x2005b0ee,0x2e3d0078,0x3b000f83,
    0xb3555310,0x0d300f05,0x5c05d5b8,0x0b616c03,0x400f1000,0x260e8078,
    0x0b307405,0x401660e8,0x7c007669,0x6c003e00,0xdd00f101,0x3a00bddd,
    0x78802d40,0x3bbfbae0,0x003a5eee,0x37ff20ec,0x3442fdcc,0x5de80780,
    0x0b601dc0,0x074c01f3,0x1e200788,0x17bbbba0,0x0bddddd0,0x05eeeee8,
    0x401a6760,0x8007405b,0xd00f101d,0x300b5333,0x22003a0b,0x27e66207,
    0x07609bd9,0x40772340,0x4403442c,0x400f9807,0x5416c03b,0x202fa82f,
    0x01e20078,0x016a667a,0x80b5333d,0x005a999e,0x7400b766,0x6800ec01,
    0x83a01e20,0xeeec8058,0x8803feee,0x40ecf007,0x2268803c,0x3e0b200f,
    0x7802d400,0x0ec04a80,0xdfddfe98,0x1003c400,0x2c41d00f,0x405883a0,
    0xb001620e,0x2016a00d,0x2068803c,0x400e8078,0x99999f83,0x07880699,
    0x2607a688,0x1a24c806,0x05b82e98,0x807800f4,0x2007c078,0xf10009e8,
    0x7403c400,0x003a1c00,0x01c00e87,0x00f400b6,0x0264034c,0x401d00f1,
    0x36025478,0x4403c401,0x026403a6,0xf705b0d3,0x1037605d,0x803c009d,
    0x200d502e,0x01e2003e,0x00e80788,0x4401d1e2,0x0f100747,0x0698034c,
    0x06981320,0x007403c4,0x5401d8f1,0x4c03c404,0x2ec403e5,0x76c40754,
    0xffc8cfec,0xfecefb81,0x9803c002,0x200fd43e,0x3c400320,0x1d00f100,
    0x803a3c40,0xf1007478,0x2d8016c0,0x2a176200,0x403c400e,0x689e200e,
    0x3c407880,0x900f2cc0,0x803bdbbf,0x530001a8,0x801e0003,0x01eedfe9,
    0x2004dd98,0x01e20078,0x7478803a,0x01d1e200,0xf75553c4,0x00688035,
    0x3bdbbf90,0x7ec0f100,0xffffffff,0x3ffff97f,0x13ffffa8,0xffffffff,
    0x0014310d,0x00000033,0x7ffcc000,0x8800ffff,0x8800001a,0xffffffff,
    0x3ffffe26,0x3ff66fff,0xffffffff,0xffffffb7,0x3f6fffff,0xffffffff,
    0x3333327f,0x8000004c,0x7ffc4019,0x006fffff,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x20000000,
    0x664c0028,0x0d4c0020,0x00acb880,0x80999988,0x00020cd9,0x00066666,
    0x15300000,0x88064400,0x99999999,0x80012e00,0xb82d41a9,0x0b620004,
    0x880025c0,0x004b802d,0x800dad98,0xeccebae9,0x3b37ee00,0x2f3a602f,
    0xeeeb80ed,0x7543cecc,0x006dbeca,0x1b333372,0x002efd98,0xcdec80d1,
    0x67d401de,0xeeeeb81e,0x6c06eeee,0x37ee000d,0x00f8afdc,0xd1000376,
    0x00dd8009,0xd8013a20,0x4c32000d,0x01770003,0x0fa20764,0x44d503e2,
    0x802cb1de,0x0ae003b8,0xb31e882c,0x640d1007,0x3b206984,0x03b87d30,
    0x03b201a6,0xfd303b20,0x001d9005,0x64000ba6,0x02e9800e,0x5000ec80,
    0x098806e5,0x5a833310,0x07907a20,0x4b07e43e,0x06666605,0xc8240b00,
    0x34403442,0x44164010,0x00443883,0x006a0077,0x00fec0b5,0x035001a8,
    0xa801a800,0x006a0001,0x3a602db8,0x7f7441fe,0xa803f14e,0x3a5903c6,
    0x3aa0b2c4,0x2003ffee,0x4074000d,0x00fcc01d,0x00002d40,0x400007a0,
    0xd7b701f8,0x00000000,0x00000000,0x75400000,0x05a8b206,0x441a23d0,
    0x16589d2d,0x201a7e20,0x2000ddc9,0x9807c40e,0x03dedcfd,0x36e207b0,
    0x344002cd,0x017b9750,0x88e982d4,0x5305551f,0x982aa855,0x36e202aa,
    0x6dc402cd,0xecb802cd,0xdcba802c,0x1ee5400b,0x400ee2c8,0xeeb8b52c,
    0x1658db2e,0x200f52e0,0x2007b10d,0x205f930e,0x027442e9,0x3ea03ae2,
    0x00dfc9be,0x337a0970,0x7703eb9a,0xb9743d10,0x3664c0fc,0x99303f2e,
    0x26fbea0d,0xefa80dfc,0x980dfc9b,0x0dda9ade,0xd7359bd0,0x07c65407,
    0x20059164,0x874c953b,0x961bd12c,0x0971e805,0x00edc244,0x067ed43a,
    0x902a81f4,0x1f501dfd,0x0ec01720,0x1641a200,0x1d0f2174,0x80741a20,
    0x900fa868,0xb900fa8b,0x0d701e88,0x52a06880,0x0b22c84b,0x364a9dc0,
    0xdbd70b21,0x789a202c,0x26441dc0,0x41d701d0,0x730000f8,0x4407f05d,
    0x003c402f,0x642c82d8,0x80743b84,0x2201d068,0x3e203f86,0x2f880fe2,
    0x007900f6,0x749502d8,0x00771641,0x41d254b2,0x4059602c,0x2e016c3b,
    0xe80da80d,0x0344b700,0xd31ec400,0x4a809500,0x4d554c40,0x1aa5b82d,
    0x4403a164,0x1a201d06,0x269500d3,0x01e4a806,0x554c41a6,0x49502d9a,
    0x0b51645a,0x972547a0,0x02cb0164,0x100b503a,0x1d0b107b,0x003b0740,
    0x7fd4f100,0xffffffff,0xf9016c06,0x05fb99bf,0x7403a6f5,0x06880741,
    0xf51a201d,0xffffffff,0x3fffeadf,0x16ffffff,0x3f21e00d,0x02fdccdf,
    0x0b22d895,0x2a6a803d,0x13f7f225,0x05981658,0x076a001d,0x16c01d0b,
    0x800620b5,0x0000d31d,0x901dc81e,0x407aba05,0xd100e86a,0x234403a0,
    0x034c0069,0x1e201a20,0x40b203b9,0x8593444a,0x987a206a,0x2c035307,
    0x7777640b,0x64003fee,0x00e83dbc,0x337d9076,0x8fc003f9,0x4c0002f8,
    0x6401f105,0x2207f502,0xd100e81e,0x234403a0,0x3e2002f8,0x2007c002,
    0xc803e25a,0x29909502,0x440ec82c,0x000fc43e,0x99f81658,0x00699999,
    0x543a04b8,0xcfc88343,0x71ae0042,0x02c8000d,0x8174c0d1,0x1f4c0efc,
    0x20d901d8,0xd70d901d,0x4006b800,0xd10f405b,0x4a8174c0,0x702c8e88,
    0x203fd9df,0x2cb0003c,0x40ec04a8,0x0e816018,0xd1025cd1,0xf710bae0,
    0xb305bb03,0x5b00740b,0xd505df70,0x07fb3bea,0x376c4598,0x376c4598,
    0x5d982dd8,0x2ecc16ec,0x09d10376,0x05df705b,0x166d412a,0x88017f50,
    0x9601441f,0x4a803b05,0xb0930398,0x3bb21fff,0x981a200d,0x01efddfd,
    0x3bb77fee,0xb1016202,0xf919fd9d,0x2a60743f,0xfdbfb000,0xfb03ff15,
    0x3ff15fdb,0xddbbff70,0x377fee05,0x9df702ee,0x3b6205fd,0xffc8cfec,
    0x5dd02541,0x2f777ee0,0x6fd42c99,0x99885fdb,0x06882765,0x99c98788,
    0x4000db99,0x200b0018,0x2a6000a9,0x44000009,0x0000001a,0x22000544,
    0x9a98000a,0x01353000,0x44006a60,0xfffb001a,0xb305f30f,0x7bb75359,
    0x402aea20,0xcc99cccb,0x83ffff93,0x223ffffa,0x00accccc,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000191,0x980002a6,0x00099809,
    0x0000c880,0x400c8800,0x09999998,0x10135300,0x2a200355,0x88009800,
    0x20000982,0x0026004a,0x00055440,0xc8809b50,0x3b3ea000,0x405b1001,
    0x01eecfe8,0x2617f5c0,0x540004ee,0xdb001ecf,0x5407b737,0x3ea01ecf,
    0x01eeeeee,0x30b737f2,0x201dd9bd,0x81ceced9,0x200ccbd9,0x05db92fb,
    0x6405d800,0xda8002ed,0xf0001d9a,0x33ea05ff,0x30ec801e,0x03e8807d,
    0x00d5066c,0x02540b20,0x3a61d900,0xefeb8803,0x74c3b200,0x98009503,
    0x5c2e804e,0x86a83d06,0x5f701cc4,0xc80002c8,0x0016400e,0xb8002c40,
    0x30ec80de,0x441c407f,0x200ba603,0x90009707,0x40012a05,0x6c038838,
    0x202e89be,0x09503883,0x5c017440,0x04b85d05,0x02c2443b,0x002c83f7,
    0x2c805700,0x01e4c000,0x441c4000,0x1a800003,0x0d104a80,0x12a05900,
    0x02000000,0x400003a2,0x0132004a,0x745b81f4,0x4458b500,0x5907ea04,
    0x0000ee00,0x81910059,0x0e400eda,0x75000000,0x000017b9,0x880d80b2,
    0x0590acdb,0x5eedc52a,0x2cecb800,0x26375300,0x2a60aaa6,0x2004a82a,
    0x203f000e,0x3c81ec69,0x201c89dc,0x201640fa,0x2aa60de9,0x402c802a,
    0x41a203fa,0x980204e9,0xde802aaa,0x303eb9ac,0x2d405555,0x5fd41f88,
    0x02c9eba9,0x7557d395,0x2b7a605f,0xd300dda9,0x3d5db99d,0x99303f2e,
    0xddb7b50d,0x10049819,0x3aa3c40f,0x6cc0fc40,0x1f30cc0c,0x0bee02c8,
    0x201f332a,0x01bb102c,0x0f6441d0,0x665403a0,0x1a20007c,0x103e6654,
    0x4c5db01f,0x02ee880e,0x3d101dd5,0x0d701e88,0x5bd105f1,0x50d100e8,
    0x1dd537bf,0x1cfeb9dc,0x2e1e02cc,0x001fdbdf,0x7cc17b93,0x41379310,
    0x0f000de9,0x704de4c4,0x222b207f,0x2013aa4b,0x00f000f9,0x07802d80,
    0xacd88edc,0x2f9807a4,0x34c03f50,0xe87900f6,0x1d13e202,0xb7001a20,
    0xea96e564,0x10f01663,0x401dfbfd,0xf100bdca,0xc966665c,0x0f01362e,
    0x4d66665c,0x0cccb8de,0x36239971,0xd889b11e,0x401e002e,0x2d9aaa98,
    0xefb80780,0x0162773e,0x403540ba,0x9a601e0e,0x746b8068,0x8800d100,
    0xf10dd70f,0x98f01663,0x983ae22e,0x78800bdd,0x2f2274c0,0x2e003c05,
    0x024c572f,0x25bd87f5,0x078002f9,0xdccdffc8,0x2007802f,0x804a8e40,
    0x9009502d,0x53c01a25,0x0e8d3009,0x3d000d10,0x89ec03ea,0x07b1e206,
    0x6d409932,0x3220902d,0x02c6cc1e,0x06f4c01e,0x1bb10d01,0x0b258ca8,
    0x37203c00,0x0f005901,0x04987400,0x00b502d8,0x2201a23b,0x16a016a7,
    0x001a201d,0x9702c476,0x3c4d503c,0x71d40d10,0x40fe6005,0x03c0588e,
    0x16c01764,0x23a20fea,0x40003a58,0xc803e207,0x70007802,0x02f8068b,
    0x7c1f00f5,0x0f12d400,0x100e8790,0x7c1d000d,0x80f45900,0x4c03e24c,
    0x40161607,0x16259019,0x100500f0,0x3601505b,0x881e4b11,0x06881e02,
    0x01e00ba6,0x07b03ea0,0x3fa817e4,0x80b712e0,0xd102641e,0x8d901d81,
    0x9916a019,0x3a0b71e0,0x05c81f41,0x00021616,0x405f999b,0x1d880007,
    0x6666c400,0xb301d12e,0x20b603c0,0x07802efb,0x2207b220,0x02ddb83d,
    0x1d707b95,0x4e881bb0,0x3f984e88,0x376c4598,0x1f910fe6,0x426445d0,
    0x74c2ec2e,0xc803ee22,0x09fb0e60,0x0f016200,0x020da800,0x3f22c400,
    0x203fcaad,0x7676c407,0x01ffc8cf,0xeedeb81e,0x6ef6c404,0x263ff94e,
    0xfbbf94ff,0x677dc01b,0x6fe402fe,0x3f601eec,0x1ff8afed,0x3bf7bf22,
    0xbfbfb100,0x17f7ba20,0x1efdfe98,0x06666440,0x2a0017fa,0xffff92fc,
    0x007fffff,0x1f3333e2,0x30bb2a00,0x7e4179b9,0xffffffff,0xc801a883,
    0xffffffff,0x0002623f,0x33000066,0x00d4c001,0x44002a60,0x0544000a,
    0x88009880,0x0153000a,0x05100880,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x06aa6006,
    0x3100a620,0x19988133,0x35100000,0x54c40001,0x970f2001,0x64002a80,
    0x98801dc2,0x4155401a,0x15402aa9,0x2f772a00,0x20d98188,0x316a01d8,
    0x5555501b,0x15555555,0x26035510,0x03764c0c,0x3df99dd7,0x37b37f20,
    0x25eeed81,0xc84efee8,0xceeb8001,0x30068cfe,0x1bd959bb,0x836c5e80,
    0xeaaedcf8,0x0dd13e00,0xecacdd98,0x40fcb80d,0x9f106cc9,0x101d55db,
    0xbfb735bb,0x7cc3f509,0xfa83ee02,0x21400281,0x40efcdfc,0x37df15ff,
    0x3540fc0d,0x03a613a2,0x205b00ee,0x06dc002d,0x2e01bf26,0x003d300d,
    0xbb30c400,0xb7000003,0x7407a601,0x8620d100,0x07b01dd9,0x000013e2,
    0x14002800,0x20eb81b9,0x068822ec,0x1321d81a,0x01dc0e98,0x0016c0b6,
    0x406d80d5,0x001b004a,0x00000000,0x1b030950,0x01a201d0,0x2e035400,
    0x00000004,0x3e25000a,0x44009b00,0x26950006,0x1dc4c806,0x9d550b60,
    0xd0155555,0x22068803,0x87333b26,0x9bb71058,0x59d97005,0x0b3b2e00,
    0x2e6ee344,0x01d0b12c,0xdcba81a2,0x1009b00b,0x554c1554,0x2f72ea02,
    0x32800500,0x1002d403,0x64ee000d,0x1dc68803,0xecc88b60,0x41cccccd,
    0x2b800068,0xa8391224,0x0dfc9bef,0xda9ade98,0x35bd300d,0x22b81bb5,
    0x8391541b,0x3a0d100e,0x83eb9acd,0x7e5c001e,0xe83664c0,0x83eb9acd,
    0xa8014002,0x00d10045,0x00761f50,0x5b00ee34,0x25400b60,0x1206c000,
    0x1f51d417,0x03d11720,0x407a21ae,0x00906c6b,0xd100e875,0x0e868800,
    0x2201d000,0x14344006,0x17400a00,0x003440d1,0x007c3db3,0xb00ee1d8,
    0x5c00b605,0xc8680003,0xf2443b99,0x7b17c407,0x01ec3c80,0x401c68f2,
    0x68807448,0x1642d800,0xd100e800,0x0285b000,0x22e40140,0x401a2078,
    0x000e82ea,0x3601dc3b,0x2e005b02,0xd8680003,0xd34884ba,0x403c9500,
    0x34c03c69,0x4488048d,0x440d901e,0x42d9aaa9,0x740b8069,0x4c40d100,
    0x142d9aaa,0x0b900a00,0x803440f3,0x2003b04a,0x0b601dc6,0x05a8016c,
    0x3240d800,0xfff53a87,0xdfffffff,0xd13c01a2,0x160d9e00,0x88bd0ea0,
    0xbff906ed,0xd905fb99,0x1d09d301,0x7fe41a20,0x142fdccd,0x05c80a00,
    0x01a201f3,0x803c80c4,0x36025468,0x26005b01,0x42b80006,0x263905c4,
    0x40344006,0x2201a278,0x22398ae7,0xfbd0721b,0x3ff15fdb,0x02c80ee4,
    0x37db9df5,0x434403a0,0x285901dc,0x05c81400,0x034403e6,0x64034c00,
    0x03e03c44,0x05b0016c,0xd90e8800,0x22599d89,0x007c002f,0xa801f16a,
    0xcc983a25,0x23a1662c,0x07c400a8,0x0e980590,0x8d100e80,0x50b200f8,
    0x05d82800,0x06880fd4,0x02640110,0x540ba0d3,0x9800f206,0x803a600f,
    0x40e88059,0x02dc006b,0xe80b707a,0x74402cc1,0x22000e80,0x200ba606,
    0x901d802e,0x3a60688d,0xb0a00142,0x203f500b,0x4ffa8068,0x1d50bb10,
    0x3f50fa60,0x25407440,0x17d417d4,0xea80f540,0xb305bb01,0x7440dd8b,
    0xe881bb04,0x2a03d504,0x8001d01e,0x02efb82d,0x2cc00d82,0x0b61bb62,
    0x0050bbee,0x2009b128,0x00d102fb,0xfc80bff7,0x4c01dedd,0x801eedfe,
    0x1dfecdeb,0xbfbbfd30,0x676c4001,0xfb804edc,0x702eeddf,0x805fd9df,
    0x02fecefb,0x76e676c4,0x20007404,0x8cfeced8,0xdda81ffc,0xfdbfb004,
    0x6c43ff15,0xfc8cfece,0xb280051f,0x5f734407,0x3fffffe2,0x005506ff,
    0x544000cc,0x01a98001,0x00026620,0x30001310,0x2a600135,0x00d4c001,
    0x38004c40,0x006a2000,0x05440000,0x90035100,0x55555555,0x3ffe5555,
    0x26ffffff,0x000000c8,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x20000000,
    0xaaa82aaa,0x00d54402,0x99999988,0x4400ea00,0x266009aa,0x004cc019,
    0x00003310,0x6e4c0262,0x215530bd,0xbb731aa8,0x80080017,0x5512cdc9,
    0x00ee1643,0x04cc00aa,0x05801988,0x0cccccc4,0x33f20000,0x504fcb83,
    0xd5dfb9dd,0x3fbbba20,0x0d901eee,0x5fd9df90,0x07eeeb8d,0xd800bfae,
    0x440000fe,0xaefb82ff,0x0cdcafeb,0x5df59b91,0xd7005fd5,0xfc83dfff,
    0xcf9dfcad,0x40dd13e2,0xeaaedcf8,0x2077f640,0x2202efea,0x777f6c07,
    0x4400beee,0x2d81cefb,0x075416a0,0x59003fcc,0xda80d900,0xf103f4c1,
    0xf0005900,0xdad80001,0x74c0f542,0x03dd502e,0x0e6405d3,0xd701b706,
    0x8620000d,0x1f101dd9,0x1e201a60,0x3ee20740,0x0e633601,0x503d034c,
    0x003d401f,0x3a000059,0x3c40f501,0x7c001640,0x6da60000,0xfb80be22,
    0x5c05f502,0xf100d106,0x00037c05,0x416e0000,0x0078801e,0x4416a01d,
    0x2a0b6006,0x05003d05,0x40001640,0xf1024068,0xf0005900,0xd8f40001,
    0x5f101e62,0x1f101ea0,0x0d300b30,0xaaa986c8,0x5c4aa202,0x17400bdd,
    0x03c4012e,0x203a00e8,0x21a60059,0x0000f01e,0x2aa60590,0x0006c02a,
    0x22c80788,0x1f02aaa8,0x7007bb71,0x009516cb,0x2016a05b,0x2bb2aa2d,
    0x025c2aaa,0x3332a1a6,0x3abf2207,0x200edaac,0x201d30e9,0x99f99998,
    0x200e8099,0x4001d00e,0x2cc1662d,0x81640000,0x5407ccca,0x0788001e,
    0x33fa62c8,0x539d5f03,0x83a201db,0xf101e62d,0x8803ea05,0x33b72e1f,
    0x03cc4ccc,0x201e01b2,0x403d82fe,0x3a203d4b,0xeeefeeee,0xd880e85e,
    0x98016a05,0x025c0766,0x80164000,0xbdfd9807,0xc8078801,0xff007ae2,
    0x0f207b03,0x2e02f85b,0x407f502f,0x100b307b,0x4037c05f,0xd302e807,
    0x8009bd00,0x557d0078,0x74c07d97,0x9d80622f,0x4c12e069,0x80109999,
    0x800f002c,0x2201edb9,0x1d92c807,0x16603f00,0xd50b61a6,0x205dd503,
    0x2e981eea,0x3ae00b30,0x40376441,0xd100e807,0x33f732e0,0x078802cc,
    0x3fd999d0,0x934cf4c0,0x0b76601d,0xeed884a8,0x2c80d5fe,0x4c000f00,
    0x900f100e,0x07c00bb5,0xd82d8688,0xebbefb82,0x59502c9f,0x05fd77df,
    0xbf7002cc,0x00d3bf95,0x2201d00f,0x80078806,0xc81d0078,0xa645900e,
    0x2036c00f,0x3e788068,0x3c00b200,0x440b2000,0x0edfc807,0x1a201f00,
    0xb33333d3,0x59971017,0x8a540b21,0x4c00bcca,0x5edcc005,0x00f00d11,
    0x441a201d,0x0999f999,0x1d007880,0x81d01d50,0x02d805be,0xf3c401f8,
    0x7800f401,0x07900760,0x5cf201e2,0x2201f005,0x77777546,0x64004efe,
    0x40009502,0xd1000059,0x01d00f00,0x5d5541a2,0x8801aaaf,0x2e01d007,
    0x17d43b85,0x35401a60,0x100f9e20,0xdb03c00f,0x7880fc40,0x016e2c80,
    0x0034403e,0x0590005b,0x5980012a,0x00950000,0x2201d00f,0x00078806,
    0xe803a005,0x7f907441,0x32002d80,0x75cf501e,0xf0017442,0x260e7ec0,
    0x201e205d,0x3e02e42c,0x6c00d100,0x502c8002,0x02cc0009,0x40174400,
    0xd100e807,0x0000f100,0x1a600e80,0x3e37b7aa,0x5f75550f,0x6f74c003,
    0x74c1dfdc,0x4002fede,0x3bf27207,0x3c404ffd,0x02e41640,0x801a201f,
    0xb553002d,0x56e54459,0x02cc000a,0x3b2aaa60,0xfffffc83,0xff73ffff,
    0x1fffb8df,0x4fffffd8,0xffffff88,0x3f67ffff,0x7f903fff,0x66640330,
    0x88004ccc,0x544009a9,0xffffc801,0x303fffff,0xfff90135,0x27ffffff,
    0x7fd42ffb,0x17fff27f,0x2207fffd,0xa805ffff,0x931ccccc,0x30059999,
    0xffffffff,0x5e665c0b,0x00000001,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x44000000,0x4ccc400a,0x26660019,0x99988019,0x99880199,0x4cc40199,
    0x99999999,0x02666660,0x4ccccc40,0x4cc19999,0x40999999,0x99999998,
    0x26620999,0x2204cc40,0x09999999,0x998804c4,0x98804cc1,0x33009981,
    0x30199983,0x09998133,0x99833330,0xd8800999,0x3b605fce,0x03efeeef,
    0x0fffbbaa,0xddddfdb0,0x3bb6039d,0xd83dfeee,0xeeeeeefe,0xddfd92fe,
    0xfdb003dd,0xfdddddfd,0x777777c1,0x77f6c5ee,0x5eeeeeee,0x744ddfd1,
    0xddd10efe,0x4cbdddfd,0x77441fee,0x3dfd94ef,0x322efea8,0x7f540eef,
    0x5dddd52e,0x91efeeb8,0xea83ddfd,0xdfd93efe,0x203bfddd,0xa80f624b,
    0x400ec984,0x1d0069f8,0x0f205d50,0x00741766,0x0001d859,0xf074165e,
    0x40782640,0x68807459,0x75403c40,0x1d10b206,0x074c1a60,0x025c0e98,
    0x403441d8,0xb883b078,0x4000e81e,0x7012e04a,0x03a007a9,0x203c8344,
    0x3200e83c,0x04ccd6c2,0xd0595980,0x206983c1,0x03a2cc07,0x01e20344,
    0x1640f72a,0x201e82dc,0xa81e885b,0x5b01d005,0x03b04b80,0x000d1166,
    0x201e8095,0x1d00971e,0x01e40ec0,0x200e81f1,0x77776c2c,0xc9e402ef,
    0x221e0e82,0xb301e01e,0x80d100e8,0xf8ca8078,0x85b02c80,0x6c3d804b,
    0x1fb8b303,0x7405a83c,0x0ec03b01,0x0950003a,0x44d104a8,0x3e00e807,
    0x1dc03c80,0x6c02883a,0xd0175c41,0x28304b21,0x223c03d8,0x68807402,
    0xa5403c40,0xd102c84b,0x22003a61,0x3440b71e,0x2068937a,0x6c0d300e,
    0x0590b601,0x2cc04a80,0x2016c3b8,0x903e980e,0x0744a807,0x301d80b3,
    0x92c9a20d,0x2016a005,0x03a02547,0x01e20344,0x1641e92a,0x800bab70,
    0x3c00eae9,0x02ccd1f1,0xd80f2079,0xdd51f101,0x6c07dddd,0x44eeefee,
    0x5a81d078,0x7f777740,0x300f205f,0x5eeeee8b,0x03b00ec0,0x17f76495,
    0x7c007c40,0x7404eeee,0x6eeeeeee,0x25403c40,0x7402c8b5,0x1fb8005d,
    0x3ab50e80,0x83440950,0x2a07600f,0x27aa662f,0x4edcc401,0x4c344099,
    0x4f401d05,0x0dda9999,0x22cc03c8,0x405a999e,0x3207601d,0x00b66f22,
    0x4cfc00b6,0x4cf404b9,0x406a9999,0x6c4a8078,0x1f300b22,0x009db000,
    0xa964b23b,0x12a0ec04,0xbfddddb0,0x5001a203,0xec859809,0x03feeeee,
    0xc86a803a,0x83a25403,0x980ec058,0xfeeef80f,0x85b80132,0x40398f00,
    0x880d100e,0x3444a807,0x000f0059,0x5900bab7,0x03bad43e,0xb0076254,
    0xb3003335,0x5c04a800,0x99999f83,0x003a0699,0x6403c83d,0xb0e00742,
    0x982fb883,0x002d999e,0xf03901d3,0x2201d000,0x5403c406,0x00594c84,
    0x10e9800f,0x34ddc01d,0x13c0165e,0x8003b00d,0x0254004a,0x404a83d1,
    0xd801d01d,0x1d101e42,0xb1e200e8,0x019fdddd,0x950590ee,0xf05901e8,
    0x2201d000,0x5403c406,0x02c8e884,0x07a20078,0x25e540d5,0x32007676,
    0x03b00772,0x21201e80,0x360f604a,0x0e825401,0x07903e20,0x803a0ba2,
    0x04cd6c78,0x20b20ec0,0x2c81324a,0x00e80078,0x807880d1,0x059b504a,
    0x817400f0,0x83b9304c,0x59800ecb,0x003b001d,0x509702dc,0x884eb889,
    0x1d078806,0x7905d510,0x1d03eb88,0x00763c40,0x950590f0,0xf05901a6,
    0x2201d000,0x5403c406,0x200bba04,0xd8099007,0xe887e983,0x016fa007,
    0xffd800ec,0x0dffffff,0x77fffff4,0xffffc82c,0x9ffffd41,0xfffffffd,
    0xffff81df,0xfd81ceff,0xffffffff,0xfffffb7f,0x3fff203f,0xffffffa8,
    0xffff54ff,0x745fffff,0x207fffff,0x3e27fffb,0xfff13fff,0xd8dfffff,
    0x2f987fff,0xffffff98,0x2fffe80f,0x222fffdc,0x400dd05f,0x7fec02fb,
    0x0001ffff,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x4c400000,0x3104c400,0x03330333,0x33333333,
    0x99988333,0x00100019,0x44000400,0x0020a880,0x2a60aaa0,0x7b95102a,
    0x1aaa8861,0x2a055550,0xa800bdcb,0x0188bddc,0x2a2006cc,0x0b3b2e00,
    0x5439b710,0x36e200bd,0xdfd502cd,0xd91eff80,0x7f5c7ddf,0x3bbbe63f,
    0x0feeeefe,0x7ddfddd3,0x0000d000,0x372e09d5,0xf883d10b,0x8007b67f,
    0x664c0fcb,0xb9bde886,0x33f225ed,0xd07f9702,0x07d7359b,0x36e6b762,
    0x0fd404df,0xd30fff10,0x01bb535b,0x91d737d1,0xf501db5d,0x01bf937d,
    0x32a05bd1,0xd700e80e,0x43445981,0x0004a80f,0xd98001e2,0x9ace981e,
    0xf982eeeb,0x037aa0ff,0x0d100e80,0x1e172059,0xd1001660,0x27c40f60,
    0x3fe60040,0x5c07a20f,0xc8fd7006,0x5c807d44,0x3d069e88,0xb901d01d,
    0xf0d11660,0x40009501,0xec880078,0xd103f102,0x40b6e01f,0x0e800cfb,
    0x205d0d10,0x3a61d828,0x360012e0,0x12e03542,0x216dc000,0x401e403d,
    0x3e3cc4f8,0xd10be203,0x03ab307a,0x4c09b03a,0x407c3445,0x1e20004a,
    0xe807f700,0x05cae882,0x00ff2200,0x2a1a201d,0x3b800acf,0x202c8fb2,
    0x2d9aaa98,0x0004026c,0x2601e000,0x1f355106,0x201a61d0,0x44ab444a,
    0x21d01d2d,0x22cc03e8,0x09506868,0xa803c400,0x434400cf,0x000f32e8,
    0x3a05db10,0x2e20d100,0xb302efec,0x201d2d7c,0xfdccdffc,0x22000f42,
    0xcccccccc,0x068804cc,0xcdfeb8f0,0xfffffffe,0xffffff51,0x688dffff,
    0x01d3443a,0x0007d11d,0x04a801a2,0xf9999910,0x74c79999,0x88b5000d,
    0x0000f43e,0x0741ee98,0xd5100688,0x7566f109,0x03b90688,0x0001d0b2,
    0x55555555,0x0d100555,0x40f5cf10,0x0034c00f,0x1e4ee688,0xddd5d01d,
    0x00d10003,0x55500254,0x55555f75,0x9800f74c,0x03a0fa26,0x54003995,
    0x880740de,0x1f100446,0x2ee591d0,0x200f8859,0x0001642c,0x007c0000,
    0x7f01d96a,0x8002f880,0x83a3a268,0xf71fe80e,0x00688005,0x7880012a,
    0x801bd500,0x883e89f8,0x3006fe87,0x407603db,0x3a025c6c,0xd30fac80,
    0x4c0d1077,0x5c034c2e,0x3ec80000,0xb87a02dc,0x4085fa83,0x4688006b,
    0x740744dc,0x10007441,0x5025400d,0x2003c403,0x36e00cfb,0xf987b03e,
    0x1764402f,0xddb11660,0x4c883fb8,0x1ee8bd50,0x5df705b0,0x9d301d90,
    0xff980100,0x2206ec0f,0xf507444e,0x20f545df,0x45d982dd,0x3a0f4468,
    0x05b80e80,0x4a801a20,0x07880b20,0x103fc880,0x85d883df,0x1fdc05fb,
    0x5fdbfb00,0x372a3ff1,0x00dfecdf,0x207b85f3,0x8cfeced8,0x77d41ffc,
    0xb801bedc,0x1bfe201f,0x17f677dc,0xe9eddf98,0x701eedf9,0x05ddbbff,
    0x203a00d1,0x2003d00e,0x812a0068,0x001e202c,0x66c2ed88,0x03feceda,
    0x33ea01fd,0x00a88000,0x0026a620,0x03510000,0x80015300,0x014400c8,
    0x19800d4c,0x2a600150,0x401a2009,0x9700e80e,0xa801a200,0x0d00b204,
    0x2e9d3000,0xf100d444,0x00077607,0x00000000,0x00000000,0x00000000,
    0x00000000,0x07401a20,0x00f88074,0x12a00688,0x000402c8,0x70000100,
    0x00000040,0x00000000,0x00000000,0x00000000,0xc8000000,0x7cc1ffff,
    0xfffb3fff,0x81ff907f,0xfffffff9,0x7ffffcc0,0x02ffffff,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x2aa1404c,0x2155542a,0xaaaaaaaa,0x80260622,0x3260aaa8,
    0x5c4aa20b,0x2a980bdd,0x416dc7b5,0x541aaaa8,0x20022aaa,0x80000020,
    0x402a6018,0x019980aa,0x16dc4004,0x32a39950,0xcccccccc,0x676544cc,
    0xeb8f7641,0x02fb263e,0x903ea002,0x216fe44d,0x66744fdb,0x265ecccc,
    0x88075c2f,0xbed89fcc,0xd5f910fb,0xa81db559,0xdbeaceed,0x6e443dac,
    0x6f65c2ce,0x85443aa3,0xb10991e9,0x6cc03a05,0xc9ad886c,0x9326f623,
    0x3ea07ff8,0x2e6faa01,0x30ffe81e,0x55555555,0x2e21f555,0x3f21e99a,
    0x225ff51f,0x0587dadf,0x03b617d4,0x03d103aa,0xa81d501d,0x2007642f,
    0x20443eae,0x983d82fe,0x6893e63f,0x83c40d10,0xedfceeeb,0x813626c2,
    0x1a86800e,0xff8d0074,0x01d7f106,0xf88b303a,0x03e0003f,0xffb8ea62,
    0x1723ff30,0xf702e85d,0x5007ec45,0x1c07a61d,0x3fb8074c,0x5fd00fec,
    0x34c0ba00,0x0743c34c,0x409702d8,0xcd835c2f,0x007404d8,0x98344034,
    0xe827f45a,0x20950b72,0x003fee0e,0xdd910f80,0x13fd49dd,0x990f61ff,
    0x1fe40c82,0xd5003fd1,0x74c003d5,0x3a27e401,0x4005d01f,0xb30d100e,
    0x2601d0f0,0x16a01d05,0x84fd8074,0xdb9e9bee,0x6c40680f,0x6c1fd981,
    0x1ec4d83f,0xfb1a21a2,0x90f80007,0x1be24a87,0x3f135cff,0x9f913766,
    0x70017f44,0x0f44005f,0x3e24fd80,0x2001e81f,0xb30d100e,0x7401d0f0,
    0x05902d41,0x17b620f2,0x167ff5cc,0x006cc0d0,0xb85f9074,0x5e42e885,
    0x06f85b10,0x21d0f800,0x22fc4eb8,0x3f7fa26e,0x41df3005,0x7d3005fb,
    0x05d1003d,0xfa87fe20,0x74003d05,0x0b30d100,0x25401d0f,0xd04b8076,
    0x81769b03,0x506806ec,0xb8ae001b,0x4c03a21f,0x17775c46,0x20000be6,
    0x333bba66,0x0550725f,0xe9800395,0x5013ee0e,0xb007a61d,0x83ba2007,
    0x007a05fa,0x30d100e8,0x801d0f0b,0xf880d30e,0x226c34c0,0x4d8e985d,
    0x6413d330,0x750b999d,0x01f316a1,0x38804000,0x01010000,0x20000000,
    0x81fd45e8,0x80f4c0ea,0xee81d04d,0x3d013e60,0x68807400,0x0e878598,
    0x402c9dc0,0xefcacff9,0x11ec1320,0x9307a23d,0x32e19999,0x32a0cccc,
    0x0000002d,0x00000000,0x00000000,0x85f317a2,0x83d300ea,0xed83a05c,
    0x3a013e20,0x4403a001,0xe8785986,0x0347c400,0x2f6e2ba2,0x98000eb8,
    0x000014c2,0x00000000,0x00000000,0x00000000,0x64d30762,0x7ff45fff,
    0xfffff13f,0x16a1ffff,0xfffd80f2,0x5c1fffff,0x7fdc6fff,0x41fff91f,
    0x00ffa2ff,0x019807f9,0x00000054,0x55555553,0x00015555,0x18016e44,
    0x21643ec8,0x2666623b,0x99999999,0x37776e09,0x262ddddd,0x99999999,
    0x00099999,0x00000000,0x00000000,0x00000000,0x00000000,0x99995000,
    0x39999999,0x10972d88,0x2c89d37d,0x7fccdff1,0x2db13e0f,0xeeeeeed8,
    0x5eeeeeee,0x3777776e,0x3bb62ddd,0xeeeeeeee,0x00003eee,0x00000000,
    0x00000000,0x00000000,0x00000000,0x3e880000,0xb90b22ec,0x7ffccbd5,
    0x000dff10,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x05d30000,0x5b5003b2,0x02887d90,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x77775c00,0x2eeeeeee,
    0x001a8035,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x10000000,0x33333333,0x00001333,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,
};

static signed short stb__courier_28_latin1_x[224]={ 0,5,3,2,2,2,3,5,7,3,0,1,3,2,
5,2,2,2,2,2,2,2,3,2,2,3,5,3,0,1,0,0,2,0,1,1,1,1,1,1,1,2,2,1,
1,0,0,0,2,1,1,2,1,1,0,0,0,1,2,0,0,0,2,0,5,1,0,2,1,1,2,1,1,2,
2,2,2,0,1,1,0,1,2,2,1,1,0,0,1,1,2,0,6,0,2,3,3,3,3,3,3,3,3,3,
3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,5,2,1,2,1,
6,1,3,0,0,0,0,2,0,-1,4,1,4,4,5,1,2,5,5,4,3,1,0,0,0,0,0,0,0,0,
0,0,0,1,1,1,1,1,2,2,2,2,-1,0,0,0,0,0,0,3,0,1,1,1,1,1,2,1,1,1,
1,1,1,1,0,2,1,1,1,1,2,2,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,
 };
static signed short stb__courier_28_latin1_y[224]={ 20,4,5,3,3,4,6,4,4,4,4,6,16,12,
17,3,4,4,4,4,4,4,4,4,4,4,9,9,6,10,6,5,4,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,4,3,4,4,25,3,9,4,9,4,9,4,9,4,4,
4,4,4,9,9,9,9,9,9,9,5,9,9,9,9,9,9,4,4,4,11,4,4,4,4,4,4,4,4,4,
4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,20,9,3,5,7,5,
4,4,5,5,4,9,12,12,5,2,2,5,4,4,3,9,4,10,19,4,4,9,4,4,4,9,0,0,0,2,
1,0,5,5,0,0,0,1,0,0,0,1,5,2,0,0,0,2,1,8,4,0,0,0,1,0,5,4,3,3,
4,5,5,3,9,9,3,3,4,5,4,3,4,5,4,5,3,3,4,5,5,7,8,3,3,4,5,3,4,5,
 };
static unsigned short stb__courier_28_latin1_w[224]={ 0,4,9,11,11,11,10,5,5,5,10,13,6,11,
5,11,11,11,10,11,10,11,10,10,11,10,5,7,12,13,12,9,10,15,13,13,13,12,13,13,13,11,13,14,
13,15,14,13,12,13,14,11,13,13,15,15,14,13,11,5,10,5,11,16,5,13,14,12,14,12,12,13,13,11,
8,13,11,15,13,13,14,14,12,11,13,13,15,15,13,14,11,6,2,6,11,13,13,13,13,13,13,13,13,13,
13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,0,4,10,12,11,13,
2,13,8,15,8,13,14,11,15,17,7,13,7,7,5,13,11,5,5,7,9,13,15,15,15,9,15,15,15,15,
15,15,15,13,12,12,12,12,11,11,11,11,14,14,13,13,13,13,13,9,14,13,13,13,13,13,12,12,13,13,
13,13,13,13,15,12,12,12,12,12,11,11,11,11,12,13,13,13,13,13,13,13,13,13,13,13,13,14,14,14,
 };
static unsigned short stb__courier_28_latin1_h[224]={ 0,17,7,19,20,17,15,9,20,20,10,14,8,2,
4,20,17,16,16,17,16,17,17,17,17,17,12,14,14,6,14,16,18,15,15,16,15,15,15,16,15,15,16,15,
15,15,15,16,15,18,15,16,15,16,15,15,15,15,15,20,20,20,8,2,5,12,17,12,17,12,16,16,16,16,
21,16,16,11,11,12,16,16,11,12,16,12,11,12,11,16,11,20,20,20,4,16,16,16,16,16,16,16,16,16,
16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,0,16,17,15,11,15,
20,18,3,16,8,11,8,2,16,2,7,15,9,9,5,16,18,4,6,9,8,11,16,16,16,16,20,20,20,18,
19,20,15,20,20,20,20,19,20,20,20,19,15,18,21,21,21,19,20,10,18,21,21,21,20,20,15,17,18,18,
17,16,16,18,12,16,18,18,17,16,16,17,16,15,17,15,18,18,17,16,16,12,14,18,18,17,16,22,21,20,
 };
static unsigned short stb__courier_28_latin1_s[224]={ 255,168,230,200,150,156,245,171,227,249,136,
60,199,224,191,121,132,173,157,218,108,109,121,243,144,27,205,101,74,147,109,
185,141,29,45,237,59,73,127,16,141,155,30,17,46,1,167,195,243,127,230,
56,32,209,227,211,196,182,115,173,162,137,177,236,167,164,53,178,38,241,149,
162,94,44,115,80,68,82,68,211,134,119,55,136,223,122,98,148,15,1,29,
143,124,130,173,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,
143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,255,168,207,
1,114,202,127,180,197,58,221,1,206,224,1,206,240,216,155,163,161,74,152,
185,248,147,189,41,173,201,217,233,179,195,211,164,172,233,99,29,67,80,93,
159,147,43,55,188,14,112,31,87,101,212,133,126,15,45,73,59,15,1,86,
194,1,226,1,88,129,98,225,102,58,71,230,17,189,15,243,176,82,188,84,
240,68,30,44,191,87,30,44,95,115,1,16,106, };
static unsigned short stb__courier_28_latin1_t[224]={ 1,64,148,24,1,64,99,148,1,1,148,
132,148,158,158,24,64,81,82,45,99,64,64,45,64,64,132,132,132,158,132,
81,45,116,116,81,116,116,116,99,116,116,99,132,132,132,116,81,116,45,99,
99,132,81,116,116,116,116,116,1,1,1,148,158,158,132,64,132,64,132,99,
99,99,99,1,99,99,148,148,132,99,99,148,132,81,132,148,132,148,99,148,
1,1,1,158,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,
82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,1,82,45,
116,148,99,1,45,158,82,148,148,148,158,82,158,148,99,148,148,158,82,45,
158,148,148,148,148,64,64,64,64,1,1,1,45,24,1,116,24,24,24,24,
24,24,24,24,24,116,45,1,1,1,24,24,148,45,1,1,1,24,24,116,
45,45,24,64,82,82,45,132,82,45,45,45,82,64,64,64,99,64,99,45,
24,64,82,82,132,132,45,45,64,82,1,1,24, };
static unsigned short stb__courier_28_latin1_a[224]={ 237,237,237,237,237,237,237,237,
237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,
237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,
237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,
237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,
237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,
237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,
237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,
237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,
237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,
237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,
237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,
237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,
237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,
237,237,237,237,237,237,237,237, };

// Call this function with
//    font: NULL or array length
//    data: NULL or specified size
//    height: STB_FONT_courier_28_latin1_BITMAP_HEIGHT or STB_FONT_courier_28_latin1_BITMAP_HEIGHT_POW2
//    return value: spacing between lines
static void stb_font_courier_28_latin1(stb_fontchar font[STB_FONT_courier_28_latin1_NUM_CHARS],
                unsigned char data[STB_FONT_courier_28_latin1_BITMAP_HEIGHT][STB_FONT_courier_28_latin1_BITMAP_WIDTH],
                int height)
{
    int i,j;
    if (data != 0) {
        unsigned int *bits = stb__courier_28_latin1_pixels;
        unsigned int bitpack = *bits++, numbits = 32;
        for (i=0; i < STB_FONT_courier_28_latin1_BITMAP_WIDTH*height; ++i)
            data[0][i] = 0;  // zero entire bitmap
        for (j=1; j < STB_FONT_courier_28_latin1_BITMAP_HEIGHT-1; ++j) {
            for (i=1; i < STB_FONT_courier_28_latin1_BITMAP_WIDTH-1; ++i) {
                unsigned int value;
                if (numbits==0) bitpack = *bits++, numbits=32;
                value = bitpack & 1;
                bitpack >>= 1, --numbits;
                if (value) {
                    if (numbits < 3) bitpack = *bits++, numbits = 32;
                    data[j][i] = (bitpack & 7) * 0x20 + 0x1f;
                    bitpack >>= 3, numbits -= 3;
                } else {
                    data[j][i] = 0;
                }
            }
        }
    }

    // build font description
    if (font != 0) {
        float recip_width = 1.0f / STB_FONT_courier_28_latin1_BITMAP_WIDTH;
        float recip_height = 1.0f / height;
        for (i=0; i < STB_FONT_courier_28_latin1_NUM_CHARS; ++i) {
            // pad characters so they bilerp from empty space around each character
            font[i].s0 = (stb__courier_28_latin1_s[i]) * recip_width;
            font[i].t0 = (stb__courier_28_latin1_t[i]) * recip_height;
            font[i].s1 = (stb__courier_28_latin1_s[i] + stb__courier_28_latin1_w[i]) * recip_width;
            font[i].t1 = (stb__courier_28_latin1_t[i] + stb__courier_28_latin1_h[i]) * recip_height;
            font[i].x0 = stb__courier_28_latin1_x[i];
            font[i].y0 = stb__courier_28_latin1_y[i];
            font[i].x1 = stb__courier_28_latin1_x[i] + stb__courier_28_latin1_w[i];
            font[i].y1 = stb__courier_28_latin1_y[i] + stb__courier_28_latin1_h[i];
            font[i].advance_int = (stb__courier_28_latin1_a[i]+8)>>4;
            font[i].s0f = (stb__courier_28_latin1_s[i] - 0.5f) * recip_width;
            font[i].t0f = (stb__courier_28_latin1_t[i] - 0.5f) * recip_height;
            font[i].s1f = (stb__courier_28_latin1_s[i] + stb__courier_28_latin1_w[i] + 0.5f) * recip_width;
            font[i].t1f = (stb__courier_28_latin1_t[i] + stb__courier_28_latin1_h[i] + 0.5f) * recip_height;
            font[i].x0f = stb__courier_28_latin1_x[i] - 0.5f;
            font[i].y0f = stb__courier_28_latin1_y[i] - 0.5f;
            font[i].x1f = stb__courier_28_latin1_x[i] + stb__courier_28_latin1_w[i] + 0.5f;
            font[i].y1f = stb__courier_28_latin1_y[i] + stb__courier_28_latin1_h[i] + 0.5f;
            font[i].advance = stb__courier_28_latin1_a[i]/16.0f;
        }
    }
}

#ifndef STB_SOMEFONT_CREATE
#define STB_SOMEFONT_CREATE              stb_font_courier_28_latin1
#define STB_SOMEFONT_BITMAP_WIDTH        STB_FONT_courier_28_latin1_BITMAP_WIDTH
#define STB_SOMEFONT_BITMAP_HEIGHT       STB_FONT_courier_28_latin1_BITMAP_HEIGHT
#define STB_SOMEFONT_BITMAP_HEIGHT_POW2  STB_FONT_courier_28_latin1_BITMAP_HEIGHT_POW2
#define STB_SOMEFONT_FIRST_CHAR          STB_FONT_courier_28_latin1_FIRST_CHAR
#define STB_SOMEFONT_NUM_CHARS           STB_FONT_courier_28_latin1_NUM_CHARS
#define STB_SOMEFONT_LINE_SPACING        STB_FONT_courier_28_latin1_LINE_SPACING
#endif

