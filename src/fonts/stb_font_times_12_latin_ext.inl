// Font generated by stb_font_inl_generator.c (4/1 bpp)
//
// Following instructions show how to use the only included font, whatever it is, in
// a generic way so you can replace it with any other font by changing the include.
// To use multiple fonts, replace STB_SOMEFONT_* below with STB_FONT_times_12_latin_ext_*,
// and separately install each font. Note that the CREATE function call has a
// totally different name; it's just 'stb_font_times_12_latin_ext'.
//
/* // Example usage:

static stb_fontchar fontdata[STB_SOMEFONT_NUM_CHARS];

static void init(void)
{
    // optionally replace both STB_SOMEFONT_BITMAP_HEIGHT with STB_SOMEFONT_BITMAP_HEIGHT_POW2
    static unsigned char fontpixels[STB_SOMEFONT_BITMAP_HEIGHT][STB_SOMEFONT_BITMAP_WIDTH];
    STB_SOMEFONT_CREATE(fontdata, fontpixels, STB_SOMEFONT_BITMAP_HEIGHT);
    ... create texture ...
    // for best results rendering 1:1 pixels texels, use nearest-neighbor sampling
    // if allowed to scale up, use bilerp
}

// This function positions characters on integer coordinates, and assumes 1:1 texels to pixels
// Appropriate if nearest-neighbor sampling is used
static void draw_string_integer(int x, int y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0, cd->t0); glVertex2i(x + cd->x0, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t0); glVertex2i(x + cd->x1, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t1); glVertex2i(x + cd->x1, y + cd->y1);
        glTexCoord2f(cd->s0, cd->t1); glVertex2i(x + cd->x0, y + cd->y1);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance_int;
    }
    glEnd();
}

// This function positions characters on float coordinates, and doesn't require 1:1 texels to pixels
// Appropriate if bilinear filtering is used
static void draw_string_float(float x, float y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0f, cd->t0f); glVertex2f(x + cd->x0f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t0f); glVertex2f(x + cd->x1f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t1f); glVertex2f(x + cd->x1f, y + cd->y1f);
        glTexCoord2f(cd->s0f, cd->t1f); glVertex2f(x + cd->x0f, y + cd->y1f);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance;
    }
    glEnd();
}
*/

#ifndef STB_FONTCHAR__TYPEDEF
#define STB_FONTCHAR__TYPEDEF
typedef struct
{
    // coordinates if using integer positioning
    float s0,t0,s1,t1;
    signed short x0,y0,x1,y1;
    int   advance_int;
    // coordinates if using floating positioning
    float s0f,t0f,s1f,t1f;
    float x0f,y0f,x1f,y1f;
    float advance;
} stb_fontchar;
#endif

#define STB_FONT_times_12_latin_ext_BITMAP_WIDTH         256
#define STB_FONT_times_12_latin_ext_BITMAP_HEIGHT        102
#define STB_FONT_times_12_latin_ext_BITMAP_HEIGHT_POW2   128

#define STB_FONT_times_12_latin_ext_FIRST_CHAR            32
#define STB_FONT_times_12_latin_ext_NUM_CHARS            560

#define STB_FONT_times_12_latin_ext_LINE_SPACING           8

static unsigned int stb__times_12_latin_ext_pixels[]={
    0x024403a8,0x19999880,0x40b302b8,0x01100502,0x022601a8,0x201500c4,
    0x0a600cc9,0x03880208,0xa8110082,0x33002e02,0x10001883,0x0c038805,
    0x44020880,0x54c04004,0xa802aa21,0x70eb2600,0x38373d55,0x310500a0,
    0x2e66e605,0x3902a880,0x205310d3,0x053104b9,0x9b101bb8,0x26c01a80,
    0x05d44288,0x5df70298,0x33200b85,0x0d404a82,0x65dc1370,0x70288621,
    0x05118801,0x20115116,0x10ccc109,0x41344213,0x400ae028,0x09988999,
    0x2664983a,0x93099889,0x31133314,0x4cc08413,0x33099889,0x99984cc3,
    0x33309888,0x06602621,0x3044c15c,0xf8262233,0x200418ef,0x024c08a8,
    0x002c022a,0x03106831,0x8ac0d428,0x54c5b8ae,0x87e23ca8,0x25068858,
    0x9a605702,0x699621f8,0x443f10f8,0xf1037a25,0x326e2c43,0x2c43f10b,
    0xf12c43f1,0x43f12c43,0x5d4dcc58,0x26721540,0x45887e26,0x19518efe,
    0xb8ae8832,0x20f5ecc5,0x6e44699c,0x886432a1,0x2a6e62c1,0x20f54c0b,
    0x140e8d85,0x40e8d716,0x05106883,0x0e8d0164,0x45d0971c,0x3f621c0e,
    0x588e0742,0x21c0e857,0x703a1c0e,0x83a1c0e8,0x4930544a,0x930e0742,
    0x4453431b,0x5566140e,0x2b829265,0x1c188a68,0x4e44a83a,0x356c342a,
    0x1e8b9660,0x0d10703a,0x17609771,0xa8e07468,0x81d07c46,0x0743f303,
    0xe837688e,0x8703a1c0,0x703a1c0e,0x4c3e234c,0x7406f441,0x218a81c0,
    0x01aa0abb,0x37a27926,0x57701b00,0x69940c41,0x02c987c4,0x644bd81d,
    0x742a971f,0xd10703a2,0x22a1a330,0x40e8d00e,0x45a83a23,0x64331c0e,
    0xab8703a1,0x3a1c0e80,0x8703a1c0,0xd0971c0e,0x3f620d43,0x540e0742,
    0x12e1f418,0x48acc3f9,0x03417ec4,0x7241887d,0x4ba23d09,0x234ec340,
    0xf867a268,0xf70703a0,0x270d3503,0x40e8d04b,0x41dd64c3,0x55b31c0e,
    0xd11c0e89,0x1c0e879d,0x40e8703a,0x698e0743,0x4c0ea3c4,0x20703a1f,
    0x260dc18a,0x27a63446,0x443f301a,0x83106e04,0xc8f11a66,0x561220ce,
    0x45b1a21e,0x0710ec59,0x31a57051,0xb160f757,0x0fb81c43,0x2a0e21d8,
    0x98e21d82,0x221d8711,0xd8710ec3,0x443b0e21,0xb8950743,0x361c8662,
    0x0c540e21,0x8d10f40e,0x321980c9,0x883802a1,0x4a83a2c1,0x1581a814,
    0xcb897379,0x56c40a9a,0xd507103a,0x8b21c3d7,0x556c429b,0x22164c03,
    0x05503aad,0xdb8755b1,0x556c42aa,0x83aad883,0xd883aad8,0xaaa883aa,
    0x5b31440a,0x3aad8895,0x0e5c62a0,0x44b9bc88,0x955b3059,0x81cb81d4,
    0x5510a218,0x440c4155,0x0042cc40,0x02002002,0x3b20da80,0x00040111,
    0x04000080,0x80080310,0x00800800,0x00881000,0x44222002,0x2aa01000,
    0x40102200,0x00082008,0x004c4000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x30000000,0x09988133,
    0x064404c0,0x800ea000,0x806e0504,0x2600038b,0x20808202,0x11988440,
    0x00c00033,0x50155022,0x15100003,0x41000001,0x04c0e600,0x04660262,
    0x4c040104,0xae88260a,0x84b881ea,0x1cab839a,0x2006aa20,0x4c2ba82a,
    0x8066e039,0xb00aa01c,0x10376609,0x80d89743,0xb9301cda,0x24491505,
    0x1dc04a88,0x05b8ae88,0x995039b5,0x01701360,0x4c588ba2,0x9b04b89c,
    0x280cc0c0,0x2085b8ec,0x0880ccc0,0x09988988,0x10466033,0x99846602,
    0x98098889,0x26266611,0x21298098,0x44262199,0x100e2761,0x4c433303,
    0x04882720,0x11510022,0x130a0744,0x80204c44,0x1084c09a,0x8e1fc813,
    0x2131c0e8,0x41209888,0x822766e3,0x0ca87b1d,0x260fc419,0x3e20ba9b,
    0x2614cb91,0x1a64b89c,0x22971393,0x3931621f,0x887e2971,0xa5c4e4c5,
    0x189621f8,0x9b9812b6,0x887e20ba,0x0910f4c5,0x88175373,0x1aa5b8ae,
    0x4588ba20,0x2720bc9b,0xb1174469,0xa8e1d570,0xb1174405,0x23728848,
    0x175ec316,0xd03a0a68,0x4cb22541,0x381d10a6,0x2381d134,0x81d11c0e,
    0x744703a3,0x4381d1c0,0x0e817760,0x4381d12a,0xd0911d8b,0x81d12541,
    0x83f912e2,0x7588e1fc,0xf90524c5,0x75b9c1c3,0x0fe4025c,0x44541cc7,
    0x53b06b15,0x202aee0b,0x1f11a60e,0x871f9acc,0x16a6805a,0x16a381d0,
    0x16a381d0,0x360381d0,0x446985c9,0x44703a0f,0xd3122714,0x80d50f88,
    0x55c34469,0x1bb4470e,0x55c037a2,0x66c7070e,0x2ae01663,0x4c1dc70e,
    0xb0a79398,0x81f40f63,0x07a12e0e,0x8317771f,0x12e6804b,0x12e381d0,
    0x12e381d0,0x822381d0,0x84b8b91d,0xc8703a1e,0x4b89119b,0xfc8971e8,
    0x386887a1,0x01570eb7,0x2e705fb1,0x44e87075,0xadce0c1e,0x6c5412a3,
    0xf318ab9a,0x3702fa27,0x446983a0,0x3e8abc87,0x26680598,0x98e07405,
    0x98e07405,0x88e07405,0x3be27f31,0x74788d31,0x912641c0,0xd33c4698,
    0x4de44688,0x8f36384b,0xf303cee8,0x30f36383,0x3662443b,0x336382ab,
    0x80541623,0x41c01702,0x2541d0d0,0xd04d87cc,0x07a2c183,0xe8710ec3,
    0x1c43b0c1,0x10ec307a,0x814c0c47,0x43b12a0e,0x12249438,0x0f44a83a,
    0x380e60d1,0x8e233274,0xe8707219,0x1900a604,0x0389d0e0,0x02a6226a,
    0x40e5c0dc,0xaaa883bc,0x80dc900a,0x26e2abd9,0x2155ecc3,0xd983aad8,
    0x556c42ab,0x42abd983,0x0c43aad8,0xaaa881cc,0x1d56c40a,0x83b114d4,
    0x440aaaa8,0x7304b9bc,0x24887660,0x3662aadb,0x10ecc4aa,0x2e01cc09,
    0x1221d981,0x0003100a,0x00010044,0x11010000,0x20020040,0x00400400,
    0x00000802,0x06600020,0x00001000,0x04403100,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x4c145000,0x80208000,0x04cc428b,0x80a20e20,0x20108002,
    0x0710003a,0x3301665c,0x00000000,0x00b10313,0x40350126,0x06e03cca,
    0x38800190,0x02054388,0x812a8084,0x6c0360a2,0x201bb300,0x03e80ab8,
    0x105981a8,0x1cb81a0f,0x07332050,0x802200d4,0xa89804a8,0xb80e6d42,
    0x02e881ca,0x80150013,0x22199838,0x14c04809,0x0b859e88,0x4495305c,
    0x49039704,0x0000002d,0x80c44011,0x8809801d,0x33331a05,0x419a9983,
    0x5c5c0b8b,0x4dcc0300,0x440100ba,0x1104d9ab,0x2e2e0080,0x3005c5c0,
    0x4c413333,0x87e20999,0x26666258,0x4c426620,0x41333310,0x13310998,
    0x175c2666,0x38335331,0x469b4c76,0x26e0bc9b,0x2a6e60bc,0x5d4dcc0b,
    0x37300ec0,0x2bac4175,0xb9339134,0x22e4ce44,0xc8063031,0x82541d02,
    0x0e87702c,0x816402c8,0x70063031,0xae87337d,0x0e074499,0x7449335d,
    0x335d1663,0x21f43e89,0x5571623e,0xc9e2373d,0x5d6269a1,0x3a15d622,
    0x541d12a0,0x41d00ec4,0x206b624a,0x820e8826,0x1dd2a0e8,0x2ec0ee95,
    0x203e234c,0x2c83d05d,0x42ec05d8,0xba54774a,0x408f2e03,0x381d021d,
    0x269810ec,0x3b021d83,0xb10ec1d8,0x4d04d108,0x5a269a0b,0x30dda21b,
    0x8d30f88d,0x4c0760f8,0xee887c46,0x405d0680,0x249ac42e,0xd1509358,
    0x41e84b81,0x43c40e8a,0x8074544b,0x9ac40e8a,0x9824d624,0x1d8133c9,
    0x21c0e813,0x3790131d,0xb0263b03,0x10ec1d83,0x5341a20b,0x01571a68,
    0xe84b8157,0x6c3d0971,0x7425c621,0x0d0b3b11,0x4425c097,0x49ac4935,
    0x46989738,0xd0973878,0x4b9c2d83,0x2b112e70,0x824d6249,0x40cacc9c,
    0x0740cacd,0x01959b0e,0x2b3607d1,0x0760ec0c,0x6882e83b,0x347e20d0,
    0x74479dd1,0xf11a63ce,0xe99e234c,0x11a65bac,0x866c754f,0x403a61f8,
    0x935880e9,0x5cc49ac4,0x2a0e87ba,0x43dd5cc4,0x2ae6343b,0x7bab987b,
    0x56249ac4,0x3c999849,0xb021d811,0x08761c43,0x08760590,0x3b0760ec,
    0x9a0d1028,0x88ccb01c,0x3a1c4663,0x541d12a0,0x41d03884,0x0b81a84a,
    0x87a1887a,0x836f3a18,0x90e0dbce,0x0aaaa885,0x2aa0b21c,0x0b21c1aa,
    0x5e742c87,0x036f3a0d,0x6c111e47,0xaad88221,0x20221d83,0x0443b02c,
    0x0ec1d83b,0x341a202e,0xadb8e6e0,0x0aab6e2a,0x88155551,0x4880aaaa,
    0x01555510,0x3b219037,0x5d90ebaa,0x80001d75,0x007b20da,0x07b20da8,
    0x3b20da80,0x0f641b51,0xe89e4000,0x33a25aad,0x220105aa,0xe885aace,
    0x5567440c,0x74c33a65,0x0419d30c,0x0fc41fb8,0x20310110,0x00000018,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x07100000,0x219982b8,0x000c8098,0x09101b80,
    0x80084600,0x1004cc42,0x21008204,0x0040a200,0x0e402080,0x40840570,
    0x08099998,0x00401001,0x41501331,0x02204c18,0x404cccc4,0x806e0821,
    0x0fc40b98,0xa80530b1,0x501202bb,0x4c433303,0x1c899149,0xb591f414,
    0x36213663,0xb8033204,0x20eed42a,0x03766058,0x5cc40e66,0x5d039900,
    0x07950933,0x059016e4,0x91220e66,0x3832e619,0x99eb9c98,0x445e4283,
    0x21988099,0x4703a099,0x33100998,0x333304c4,0x3e202203,0x13511621,
    0x3b002662,0x99884cc4,0x99880980,0x13333101,0x99884cc4,0x22010099,
    0x26233102,0x13533109,0x998821d8,0x13333102,0x80841760,0x2e721040,
    0x221d0152,0x19851026,0x31f440fa,0xd11c0e8b,0x3e883d55,0xc99c8966,
    0x03a05905,0x23e87d07,0x1f41d869,0x441640fa,0xae81eaae,0x3a1f4499,
    0x0590499a,0xb91740b5,0x6c499ae8,0x4df44131,0x4cd740dd,0xb80e8a84,
    0x4aea20ba,0x19552ba8,0xb44b5051,0x2ea21409,0x734c03b2,0x8ec381d0,
    0x10e6985b,0x05d80744,0x41d8381d,0x20ec341d,0x5d80ec1d,0x3616e3b0,
    0x1d83b021,0x2c42ec02,0x3625c3b0,0x1959b021,0x3b1ae1d8,0x544b9c04,
    0x519d4b53,0x2671a867,0xdae892e2,0xd8cea140,0x40cde401,0x6c761c0e,
    0x40337903,0x01d1502e,0x41d8381d,0x20ec341d,0x4540ec1d,0x07b1d80e,
    0x83b0263b,0xd150131d,0x41dad881,0x23b12e1d,0xd810ec09,0x31d83e21,
    0x47bab981,0xd8db1e2c,0x55911506,0x4116896a,0x0766d828,0x87607d10,
    0x0175ec38,0x025c07d1,0x703a12e7,0x341d83b0,0x3b0760ec,0x2f612e70,
    0x1959b02e,0x6566c1d8,0x68897380,0xcaabd893,0x206566c4,0x41d8221d,
    0x032b362e,0x452a2c87,0x951a5465,0x29375288,0x844d30e8,0x07695182,
    0x56c40b20,0x05a9d83a,0x00e98164,0x5b0f7573,0x360ec1c4,0xce987e21,
    0x983b0760,0xa9d87bab,0x36043b05,0xb9810ec1,0x49ac47ba,0x1d8970ec,
    0x5aace882,0x1d8f10ec,0x3b20da82,0xbb82ef21,0x38537729,0xac886f22,
    0x20a5aafc,0x443b29bb,0x0cc02c81,0x6407b1d8,0x70c43d02,0x55ec42c8,
    0x41d83b03,0x6c1d8383,0x3b0b21c1,0x088760f6,0x0443b076,0x4d622c87,
    0xd8970ec4,0x6c1c0221,0x443b1321,0x10002e00,0x00110010,0x9d308020,
    0x19d10b75,0x3e616c40,0xe8817d13,0x5d57640c,0x7641b50e,0x33a60081,
    0x5e419d30,0x674c2ee0,0x36a19d30,0x9fcc7b20,0x59d10be8,0x88674cb5,
    0x36a5aace,0x47547b20,0x227f30db,0x559d10dd,0x9f31e40b,0xace88797,
    0x00e4c05a,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x44000000,0x04c40602,0x80540100,0x44000018,
    0x1500c400,0x3302664c,0x19a88010,0x01080c31,0x1402a000,0x0330732e,
    0x33103015,0x00013311,0x665c0330,0x20098882,0x00a80010,0x91032033,
    0x22ee98d9,0x66dc0e9d,0x0b825cc0,0x06884cb8,0x0dc03555,0x33312c84,
    0xb70f2013,0x92b2e019,0x541daaae,0x4426543b,0x57705186,0x83204cc4,
    0x2323abc8,0x8b71f40b,0x41e5c3cc,0x900404c8,0x2501b519,0x26074ec3,
    0x0401904b,0x0001c582,0x00402101,0x351b0001,0x09a44040,0x2a1266ba,
    0x260080dc,0x4a8f618c,0x800080a8,0x3e81080a,0x3195d408,0x543b0e69,
    0x82030084,0x21c0b200,0x0028cc69,0x4a808042,0xed851077,0x2e05d5c2,
    0x05d5c0ba,0x75702eae,0xdc84aa81,0x65541c89,0x8760bae3,0x951ed540,
    0x099550ee,0x2aa3c43b,0x2a1dd2a4,0x21dd2a4a,0x2a0ec4aa,0x7713a24a,
    0x2543b162,0x4aa89771,0x154f232e,0x21f002ec,0x950bbaca,0x4774a8ee,
    0x9ac4774a,0x22076444,0xa96a751d,0x5a9d4b53,0x2752d4ea,0x8bab265a,
    0x4c488fb9,0xd82c4b73,0x3b954131,0x29324d62,0x33c1d849,0x49ac42a5,
    0x358854a6,0x360a94c9,0xb1054a61,0x1d8f1dc9,0x4cd1992a,0xa4da2eac,
    0x640e8a82,0x22faaaac,0x49358853,0x9ac49358,0xb824d624,0x3c593983,
    0x3c593c59,0x3c593c59,0x37293037,0x278aab83,0x1959b058,0x5623a8ec,
    0x424cae49,0x82b9e21d,0x415c9358,0x815c9358,0xca80ae1d,0x3b1a2954,
    0xb9a6a254,0x51d53901,0x8b512e70,0x2b2b2a78,0x58926b10,0x249ac493,
    0x06a09358,0x258a546a,0x8a54b14a,0x952c52a5,0x5c659962,0x1b5053a4,
    0x43b0589a,0xb11d4ee0,0x0934a926,0x5491113b,0x249ac424,0x49ac424a,
    0xa876092a,0x22b28c24,0x511d8935,0x966695c7,0x036e7661,0x1d0f7573,
    0x221ca254,0x49ac4935,0x33a24d62,0x433950db,0x5de42bda,0x3205de40,
    0x05de40bb,0x9db02ef2,0x6f55e744,0xd06eb663,0x88443b05,0x5e745ccd,
    0x83b3360d,0x40be9be8,0x6de743ed,0x79d0fb60,0x361f6c1b,0x7951f6c1,
    0x261d4c35,0x2a0be9ce,0x13b61ebe,0x321c2456,0x05dd64c2,0x2f3a0a13,
    0x836f3a0d,0x0000dbce,0x00000000,0x02040000,0xce880021,0x000885aa,
    0x00000008,0x3a600000,0x0005000c,0x80000004,0x007b20da,0x00000008,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x20510000,0x44011810,0x88008021,
    0x4c054001,0x4cc40c41,0x510cccc0,0x20500400,0x1a80cc19,0x41818108,
    0x8040c181,0x44014428,0x80013010,0x33106201,0x40c404c4,0x30998898,
    0x21402203,0xd8855704,0x3b985702,0x03203b98,0x07731a36,0x91709019,
    0x4a5cce88,0xd9134742,0x0482bb87,0x750aeb09,0x160cc587,0x33154c31,
    0x409512e0,0x643ca8a9,0x344391b8,0x1245c40a,0x2a20d85f,0x47e21a88,
    0x3730a65c,0x043c4175,0x42c4c144,0x2a01502b,0x21000200,0x21010080,
    0x144710c0,0x40420400,0x0eab0100,0x4828902a,0x4051641c,0x8b024c49,
    0x01cd226b,0x12a80981,0x988a23b8,0x32189bab,0x07414d32,0x2eae6895,
    0x5512ee20,0x214f447d,0x5d2a0bab,0x32b2ee23,0x95512aa1,0x25544aa8,
    0x85c0ee95,0x2ee24bb8,0xb892ee24,0x892ee24b,0x363624bb,0x39225540,
    0x53805490,0xb3132aa0,0x172cc3d5,0x051dec3d,0x20570503,0x37282a78,
    0xf3598a73,0xf88d30e3,0x2d4eaba0,0xb3399a33,0x2754ba54,0x324d625a,
    0x64d6ebe3,0x5d5932ea,0x64cbab26,0x126b12ea,0x199a3324,0x46668ccd,
    0x23334666,0x9325d626,0x4cc545d5,0x4a22a0b9,0x23313519,0x31269319,
    0x154b966b,0x2e4e98ba,0xb30a02a0,0x21cb607b,0x3e149972,0x5c18bbb8,
    0x32f11e84,0x5cd351e2,0x689d4f12,0x26b13c59,0x0dc3d544,0x5c0dc0dc,
    0x10935881,0x4d469a87,0x26a34d46,0x26a34d46,0x06e79626,0x4e0e2270,
    0x591382c8,0x92624cae,0x0f867a26,0x8864f691,0x02a81305,0x2e3067a6,
    0xabc851c9,0x446983e8,0x58a55a67,0x229534ae,0x452ab245,0x5724d625,
    0x46598c3a,0x232cc659,0x49ac4659,0x734ae0b8,0x5cd2b9a5,0x2e695cd2,
    0x2586c4d2,0x0a850659,0x543ab854,0x4d2a7570,0x6c48a4c4,0x52399662,
    0x506e771d,0xbd008e44,0x04dc6aa0,0xe826c3e6,0x5e4d12a0,0x87afaa0b,
    0x4d5c0bac,0x9d02ef20,0x2eb6a1b7,0xb13b61cf,0x6c4ed89d,0x06de744e,
    0x23d7d512,0x7d51ebea,0x47afaa3d,0x7d51ebea,0x0aaf6a3d,0x2e1989db,
    0x3a98a22b,0x363a98a2,0x2b620ecc,0x54d65c0a,0x2d8d4dc0,0x228171b1,
    0x5504ecaa,0x06a66a20,0x2a203724,0x07e20aaa,0x00000000,0x00000040,
    0x00020000,0x00000000,0x82660400,0x40804100,0x00200400,0x00203010,
    0x00008000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x2204c000,0x88044c09,0x0233008a,
    0x203100ae,0x33101018,0x81310ccc,0x4cccc019,0x076b6a09,0x10099885,
    0x44999102,0x13310061,0xa8075b50,0xb0411dad,0x44515122,0x66408899,
    0x44aea21c,0x40133102,0x4cc45100,0x33333100,0xb1174408,0x744699c8,
    0x4e4c5b8a,0x102b84b8,0x54435115,0x8322e0e8,0x887e21f8,0x75c00c85,
    0x55a2399b,0x80ba1e24,0xd92003aa,0x6881f403,0x55a23cb8,0xb1687913,
    0x7d0ec7c4,0x19d4016e,0x26fa20b5,0x05f5c0dd,0x6cdf4455,0x27aaae0d,
    0x3f90b31c,0xd114931c,0x703a2281,0x33310590,0x64aa3193,0x1d0e6751,
    0x0041c0e8,0xac411e5c,0x00ec3449,0x8977102a,0x03b00620,0x5620c162,
    0x22d06649,0x50ec2b45,0x36c0bab8,0x43b015d7,0xd808106b,0x4d309ae1,
    0xeab85d70,0x206f4470,0x802d406a,0x2849285d,0x23452e58,0xa8e0740e,
    0x93301dad,0x93588267,0x40e6c168,0x4661dada,0x9e989a66,0x4408ec2d,
    0x9ac46985,0x8b475b54,0x811d8345,0x4a8cb53a,0x1d83d7b1,0x546983e2,
    0xf88763ad,0x42c434c0,0xfb10eb73,0x47f225c5,0x0e8a804b,0x2a1424d4,
    0xd16a7a21,0xd11c0e81,0x664e412a,0x2e3aa0ca,0x1e8e3a0d,0x3512ad10,
    0x588f868d,0x3aa244ec,0x4c754680,0xd79f0d14,0x901d8345,0x253773c5,
    0x5f549568,0x44683d0a,0xe855f546,0xb86baea1,0x079b1c2e,0x2234c7e6,
    0x5ce01666,0x214258c4,0x743b9881,0x588e0740,0x79333093,0x1a06a022,
    0x4d6203d5,0x21a34ae4,0x201d8b16,0x4e60680b,0x0d00b858,0x58a54076,
    0x126b11cc,0x2343c43b,0x1e21d858,0x0e1621a6,0x4390cc9d,0x83d1a21e,
    0x21eeae61,0x40989a8a,0x86849100,0x3588e21d,0x111e4709,0x1d8681b8,
    0x249ac422,0x21a1ebea,0x221d8b16,0x221a06e1,0x498b10ab,0x310ec1a0,
    0x92605de4,0x21d89358,0x42c4684c,0x1a61321d,0x443b3174,0x112ab664,
    0xd9897379,0x0b21c2ab,0x88353351,0x1de43985,0x2a1d56c4,0x4f20db8e,
    0x005aade8,0x567cc3f1,0x36e3aa5b,0xf30fc400,0x33a61d51,0x1f8805ba,
    0x02075418,0x33a60fc4,0x2a0005ba,0x9f30eb8e,0x43f107b7,0x2f3e60ea,
    0x003f703d,0x04008800,0xc836a020,0x0400101e,0x00008010,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x4cc46620,0xcc899910,0x2622661c,0x000404c0,0x0cc4660a,0x84530108,
    0x19525540,0x09988032,0x83311988,0x26620408,0x33331099,0x544caa81,
    0x46621ebc,0x220c0998,0x11413101,0x80266205,0xc9b80a22,0x98854c0b,
    0x4c418009,0xd0998819,0x20002e45,0x2e12126a,0x5d4680cd,0x5c0ba243,
    0x571b9c2a,0x9a0a94c5,0x07d1a3a2,0x260d8974,0x2ba1220e,0x266ba3a9,
    0x2624ce24,0x322e8b55,0xe8876645,0x99e24e83,0x3d55d105,0x5882d450,
    0x139a9857,0x101bb37d,0x64d7441f,0xabea9f44,0x92aa1dca,0x98e8774a,
    0x40020081,0x5dec0810,0x85058281,0x0157702b,0x44ec03b0,0x175c1b03,
    0x08760876,0x92624cae,0x0c970ec7,0x36a36459,0x6c0b1342,0x05880b71,
    0x03906ed1,0x6dc35c3b,0x6c1d0ec0,0x264b8761,0x26b12eac,0x2aa1dd44,
    0x3b5b52da,0x6996d554,0x3a27634c,0x345b5551,0x4092a34c,0x0ec34c3e,
    0x064095b0,0xb0a3b0b1,0x934a8263,0x1d891598,0x970dc12e,0x89a165c7,
    0x7b1d8575,0x36b62698,0x366055c1,0x1f10ec1b,0x47606c54,0xbd8760e8,
    0x206e4caa,0x75d49358,0x896610ac,0x45984956,0x3c8ec686,0x1a0d1661,
    0x206e0fb6,0x37601d86,0x85883205,0x566c3bbd,0x12f7a20c,0xbd8353d3,
    0xb8904caa,0x68593368,0x2f606b62,0x9b44d02e,0x90f3ba24,0x32e83b03,
    0xd79b0363,0xb8761d87,0x2b119664,0x26ba6649,0x35883a20,0x4340e889,
    0x10f4cec6,0x20d0681d,0x361a0704,0x41727601,0x4761620c,0x26010ec0,
    0x1d8064c4,0x2702e12e,0x268593ad,0xa9d80ee8,0x49ac4d05,0x0721c466,
    0x33678876,0x5d0ec4fc,0x25c3b0ec,0xb79d13b6,0x826ba661,0x24d6211d,
    0x8d0d0476,0x08ec0abd,0x2244341a,0x3b0d01cb,0x1723b0c4,0x1e85d036,
    0x4c0443b0,0x43b02cc4,0x4e08544b,0x268592e9,0xb1d859d8,0x49ac4d07,
    0x390aab6e,0x312643b0,0x361d83d3,0x89f4c763,0x440000dc,0x95575c2e,
    0xd70db8ea,0x887e2555,0xd707f31f,0x107e6555,0x2011003f,0x2b3a61f8,
    0x7c4fe65b,0x9805d11e,0xaace883f,0x55415505,0xbb13f980,0x4d3bbae1,
    0x433a290d,0x9b1d51f8,0x5f44fe61,0x23aa3f10,0x220620db,0x2f3e60be,
    0xf983603c,0x33a64cac,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x310ccccc,0x4cc43333,
    0x4cc40200,0x86621330,0x19991098,0x33333100,0xba540010,0x07571343,
    0x1104a980,0x28c40000,0x57105d54,0x36a4aa87,0x1254c190,0x1dd2a555,
    0x2a995b80,0x559551a2,0x5d65dc49,0x1d50a131,0x060c0837,0xb9339111,
    0x8dcf555c,0xc80ebbe8,0x8ea7c882,0x111663e8,0x149bab81,0xa5c18810,
    0x0e6b14bb,0x22068cc1,0x03b5732b,0x47955013,0x8aa900ba,0x68cc9339,
    0x21d054a6,0x5476ae62,0x51cd6233,0x93687777,0xdb94c10a,0x2be331da,
    0x2e0dd25b,0x4aa6582c,0x882ae499,0x4134420e,0x0bb0791d,0x34c1c574,
    0x33a8d107,0x0620404d,0xac4326b1,0x434d4039,0x200dc1b9,0x85b9cc09,
    0x1a2ea1b9,0x9a6a3c57,0xb857702b,0x9ac4b901,0x4e428263,0x4ae028da,
    0x20d55049,0x80e868bb,0x545115c4,0x06881741,0xd150b63b,0xc80fa201,
    0x2b8d019b,0x7550809e,0x1cd62557,0x2b8126b1,0x49303b8d,0x4aaeeaa0,
    0x2e0789ab,0x4950dd63,0x49534ae5,0x4930ba20,0x9ac52a30,0x9c9850a4,
    0x4d2a00ca,0x10e95c26,0x2cd41aac,0x20989c24,0x68812e08,0x270777b0,
    0x8817204b,0x4951a03e,0x83102025,0xbbe89368,0x36a1f10d,0x055441eb,
    0x204c13b6,0x1550b0da,0xbbb87288,0xd87af6a0,0xed80c83e,0xbe8a6ea4,
    0x41c330db,0xac8d0915,0x2b6a4ecc,0x0a130ceb,0x21513675,0x20575099,
    0x41a200e9,0xf757301d,0xc80b6660,0x2eee1a02,0x03102020,0x1501b79b,
    0x54038098,0x2a620cc2,0x175b309a,0x00000154,0x00000000,0x00155d54,
    0x00202080,0x20000000,0x0d10621e,0x0b21c076,0x6403e251,0x2003f102,
    0x08199999,0x0c393000,0x22000bb8,0x2666662c,0x00000211,0x00000000,
    0x00000000,0x00000000,0x2abb2000,0x20fdc0eb,0x20da83f9,0x221d31ec,
    0x067441ee,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x87595066,0x20ed6540,0x2daba8a2,
    0x2b6b6a0c,0x323aa1da,0x82101a22,0x00c40408,0x5dd42188,0x555553bb,
    0x86e200c5,0x82666660,0xd5088888,0x0000001d,0x00000000,0x00000000,
    0x1a200000,0x93588322,0x4c21aa98,0x44672a25,0xd8926b36,0x98d46819,
    0x253514ad,0xd339a8b3,0x0b11aac4,0x27248014,0x86ee630d,0x2a099999,
    0x0000aaaa,0x00000000,0x00000000,0x40000000,0x162aaaaa,0x126b11ce,
    0x503a20ee,0x158ac17b,0x4680ee89,0x2a71712a,0x3505d650,0x20008147,
    0x85555551,0x00000000,0x00000000,0x00000000,0x00000000,0x58811000,
    0x2b1198cc,0x214cd449,0x2ef6211d,0x448ac562,0x8c06859d,0x0d4c2ee1,
    0x00044eb2,0x00000000,0x00000000,0x00000000,0x00000000,0x98000000,
    0x18307540,0x0c1b71d5,0x21556dc3,0x475474c3,0xbb1d50db,0x00007e21,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
};

static signed short stb__times_12_latin_ext_x[560]={ 0,1,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,0,0,-1,0,0,0,0,0,0,0,
-1,0,0,0,0,0,-1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,0,0,0,
0,0,0,0,-1,0,0,0,0,-1,0,0,0,0,1,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,-1,0,0,0,0,0,0,0,0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,-1,0,-1,0,-1,0,0,0,0,0,0,0,-1,0,0,0,0,0,0,
0,0,0,0,0,0,0,-1,0,-1,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,1,1,1,
1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,0,0,-1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1, };
static signed short stb__times_12_latin_ext_y[560]={ 9,1,1,1,1,1,1,1,1,1,1,2,7,6,
7,1,1,1,1,1,1,1,1,1,1,1,4,4,2,4,2,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,10,1,4,1,4,1,4,1,4,1,1,
1,1,1,4,4,4,4,4,4,4,2,4,4,4,4,4,4,1,1,1,5,2,2,2,2,2,2,2,2,2,
2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,9,3,1,1,2,1,
1,1,1,1,1,4,4,6,1,0,1,2,1,1,1,4,1,4,8,1,1,4,1,1,1,3,-1,-1,-1,-1,
-1,0,1,1,-1,-1,-1,-1,-1,-1,-1,-1,1,-1,-1,-1,-1,-1,-1,3,1,-1,-1,-1,-1,-1,1,1,1,1,
1,1,1,1,4,4,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,3,3,1,1,1,1,1,1,1,
0,2,-1,1,1,4,-1,1,-1,1,-1,1,-1,1,-1,1,1,1,0,2,-1,1,-1,1,1,4,-1,1,-1,1,
-1,1,-1,1,1,1,-1,-1,1,1,-1,1,0,2,-1,1,1,1,-1,4,1,1,-1,1,1,1,4,-1,-1,1,
1,1,1,1,1,1,1,-1,1,1,4,-1,1,1,1,4,0,2,-1,1,-1,1,1,4,-1,1,1,4,-1,1,
-1,1,-1,1,1,4,-1,1,1,2,-1,1,1,2,-1,1,0,2,-1,1,-1,1,-1,1,1,4,-1,1,-1,1,
-1,-1,1,-1,1,-1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,2,2,1,2,2,2,
2,2,2,2,2,2,2,2,2,2,0,3,2,2,2,2,2,2,2,2,2,2,2,2,2,0,3,2,2,2,
2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,-1,1,-1,1,-1,
1,-1,1,-1,0,-1,0,-1,0,-1,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,
2,2,2,2,2,2,2,2,2,2,-2,-1,-1,1,-1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,
2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,
2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,
2,2,2,2,2,2, };
static unsigned short stb__times_12_latin_ext_w[560]={ 0,2,4,6,5,9,9,2,4,4,5,6,3,4,
2,4,6,4,5,5,6,5,5,5,5,5,3,3,6,6,6,5,10,8,7,7,8,7,6,8,8,4,5,8,
7,10,9,8,6,8,8,6,7,8,8,11,8,8,7,4,4,3,5,7,3,5,7,5,6,5,5,6,6,3,
4,6,3,9,6,6,7,6,4,4,4,6,6,8,6,6,5,4,2,4,6,6,6,6,6,6,6,6,6,6,
6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,0,2,5,6,6,6,
2,5,4,8,4,6,6,4,8,7,4,6,4,3,2,6,6,2,3,3,4,6,8,8,8,5,8,8,8,8,
8,8,11,7,7,7,7,7,4,4,4,4,8,9,8,8,8,8,8,6,8,8,8,8,8,8,6,6,5,5,
5,5,5,5,7,5,5,5,5,5,3,3,4,4,6,6,6,6,6,6,6,6,6,6,6,6,6,6,7,6,
8,5,8,5,8,6,7,5,7,5,7,5,7,5,8,7,8,6,7,5,7,5,7,5,7,6,7,5,8,6,
8,6,8,6,8,6,8,6,8,6,4,5,4,5,4,5,4,4,4,3,8,6,5,4,8,6,6,7,3,7,
3,7,5,7,4,7,3,9,6,9,6,9,6,7,8,5,8,6,8,6,8,6,10,8,8,4,8,4,8,4,
6,4,6,4,6,4,6,4,7,4,7,5,7,4,8,6,8,6,8,6,8,6,8,6,8,6,11,8,8,6,
8,7,5,7,5,7,5,5,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,8,6,6,6,6,6,6,
6,6,6,6,6,6,6,6,6,6,8,6,6,6,6,6,6,6,6,6,6,6,6,6,6,9,6,6,6,6,
6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,8,5,4,4,8,
6,8,6,8,6,8,6,8,6,8,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,
6,6,6,6,6,6,6,6,6,6,8,5,11,7,8,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,
6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,
6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,
6,6,6,6,6,6, };
static unsigned short stb__times_12_latin_ext_h[560]={ 0,9,4,9,9,9,9,4,11,11,5,7,4,1,
3,9,9,8,8,9,8,9,9,9,9,9,6,7,7,3,7,9,11,8,8,9,8,8,8,9,8,8,9,8,
8,8,9,9,8,11,8,9,8,9,9,9,8,8,8,11,9,11,5,2,3,6,9,6,9,6,8,8,8,8,
11,8,8,5,5,6,8,8,5,6,8,6,6,6,5,8,5,11,11,11,2,7,7,7,7,7,7,7,7,7,
7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,0,9,11,9,6,8,
11,11,3,9,4,6,3,1,9,2,4,7,5,5,3,8,11,3,4,5,4,6,9,9,9,9,10,10,10,10,
10,9,8,11,10,10,10,10,10,10,10,10,8,11,11,11,11,11,11,5,9,11,11,11,11,10,8,9,9,9,
9,9,9,9,6,8,9,9,9,9,8,8,8,8,9,8,9,9,9,9,9,5,7,9,9,9,9,11,11,11,
9,8,10,9,10,7,11,9,11,9,11,9,11,9,10,9,8,9,9,8,10,9,10,9,10,7,10,9,11,11,
11,11,11,11,11,11,10,10,8,8,10,8,9,7,10,8,10,10,10,5,9,11,11,11,11,11,5,10,10,11,
11,8,8,8,8,8,8,11,8,11,8,11,8,8,9,8,10,8,11,9,11,9,9,6,10,8,11,8,10,8,
11,9,11,9,11,8,11,9,11,10,10,9,8,8,11,9,10,8,11,9,11,9,11,9,10,7,11,9,10,11,
10,10,8,10,8,10,8,8,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,9,7,7,11,7,7,7,
7,7,7,7,7,7,7,7,7,7,10,7,7,7,7,7,7,7,7,7,7,7,7,7,7,10,7,7,7,7,
7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,10,9,10,8,11,
9,11,9,11,10,11,10,11,10,11,10,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,
7,7,7,7,7,7,7,7,7,7,11,11,10,9,11,9,7,7,7,7,7,7,7,7,7,7,7,7,7,7,
7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,
7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,
7,7,7,7,7,7, };
static unsigned short stb__times_12_latin_ext_s[560]={ 254,252,120,180,119,225,14,253,249,247,89,
71,140,199,144,246,125,117,166,215,236,221,21,80,186,59,205,92,103,160,131,
53,1,24,243,27,227,134,127,18,157,251,65,108,100,172,1,243,17,65,194,
11,9,71,213,231,33,42,1,155,201,252,63,191,167,152,169,158,162,171,221,
214,207,203,51,187,183,95,69,145,149,142,58,177,122,182,164,196,233,88,83,
151,224,227,176,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,
64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,254,192,241,
206,189,23,119,149,171,44,135,138,153,199,222,183,125,117,248,244,147,174,172,
150,116,240,130,226,144,135,153,195,53,98,116,134,143,35,87,231,178,195,120,
212,220,225,230,92,214,187,232,48,160,131,34,76,177,163,133,115,19,203,58,
122,116,110,104,98,92,86,218,82,67,61,55,49,132,54,49,95,14,36,1,
248,241,234,227,51,124,208,201,194,187,179,195,217,162,126,141,141,199,96,55,
113,68,102,85,89,102,76,182,59,234,45,37,10,191,147,133,8,174,110,166,
129,1,99,186,197,169,15,178,8,157,150,1,207,128,223,108,51,97,157,87,
82,77,112,132,1,28,63,122,57,105,1,248,40,64,187,181,144,106,111,252,
211,80,221,99,239,119,136,67,163,107,195,22,1,31,208,235,209,27,229,12,
152,111,169,203,215,156,220,83,202,204,251,28,235,240,31,243,251,140,52,186,
16,110,82,93,95,76,73,18,85,43,153,9,21,36,45,30,68,43,76,65,
71,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,171,64,64,210,
64,64,64,64,64,64,64,64,64,64,64,64,64,125,57,64,64,64,64,64,
64,64,64,64,64,64,64,64,62,78,64,64,64,64,64,64,64,64,64,64,
64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,102,8,
72,77,142,27,124,34,106,91,90,84,74,152,56,159,64,64,64,64,64,64,
64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,
64,64,64,42,36,166,41,10,24,64,64,64,64,64,64,64,64,64,64,64,
64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,
64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,
64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,
64,64,64,64,64,64,64,64,64, };
static unsigned short stb__times_12_latin_ext_t[560]={ 13,25,95,48,48,37,48,87,13,1,95,
87,95,95,95,37,48,78,78,47,78,47,58,58,58,68,87,87,87,95,87,
68,13,87,78,68,78,78,78,68,78,78,68,78,78,78,68,58,87,1,78,
68,87,68,58,58,87,87,87,13,58,1,95,95,95,87,58,87,58,87,78,
78,78,78,1,78,78,95,95,87,78,78,95,87,78,87,87,87,87,78,95,
1,1,1,95,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,
87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,13,58,1,
58,87,78,13,13,95,68,95,87,95,95,58,95,95,87,87,87,95,68,1,
95,95,87,95,87,58,58,58,58,37,25,25,25,25,68,68,13,25,25,37,
25,25,25,25,37,68,13,1,25,13,13,13,95,58,1,1,1,1,25,78,
58,58,58,58,58,58,58,87,78,58,58,58,58,68,78,78,78,58,78,58,
47,47,47,47,95,87,47,48,48,48,1,1,1,48,68,37,48,37,87,13,
48,13,48,13,48,13,48,37,48,68,48,48,78,37,48,37,48,37,87,37,
58,1,1,1,13,13,25,13,25,37,37,78,68,37,68,48,87,37,68,37,
37,37,95,48,25,13,13,13,25,95,37,25,25,25,68,68,68,68,68,58,
13,68,13,68,13,68,68,48,68,25,68,25,48,25,37,37,87,37,68,13,
68,37,68,1,37,1,37,1,68,13,37,1,25,25,48,68,68,13,48,25,
78,13,48,13,48,13,58,37,87,13,48,37,13,37,37,78,25,78,25,78,
78,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,48,87,87,1,
87,87,87,87,87,87,87,87,87,87,87,87,87,25,87,87,87,87,87,87,
87,87,87,87,87,87,87,87,37,87,87,87,87,87,87,87,87,87,87,87,
87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,37,58,
37,78,1,58,1,58,1,25,1,25,1,25,1,25,87,87,87,87,87,87,
87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,
87,87,87,1,1,25,58,1,48,87,87,87,87,87,87,87,87,87,87,87,
87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,
87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,
87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,
87,87,87,87,87,87,87,87,87, };
static unsigned short stb__times_12_latin_ext_a[560]={ 43,58,71,87,87,144,135,31,
58,58,87,98,43,58,43,48,87,87,87,87,87,87,87,87,
87,87,48,48,98,98,98,77,160,125,116,116,125,106,96,125,
125,58,67,125,106,154,125,125,96,125,116,96,106,125,125,164,
125,125,106,58,48,58,81,87,58,77,87,77,87,77,58,87,
87,48,48,87,48,135,87,87,87,87,58,67,48,87,87,125,
87,87,77,83,35,83,94,135,135,135,135,135,135,135,135,135,
135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,
135,135,135,135,135,135,135,135,43,58,87,87,87,87,35,87,
58,132,48,87,98,58,132,87,69,95,52,52,58,100,79,43,
58,52,54,87,130,130,130,77,125,125,125,125,125,125,154,116,
106,106,106,106,58,58,58,58,125,125,125,125,125,125,125,98,
125,125,125,125,125,125,96,87,77,77,77,77,77,77,116,77,
77,77,77,77,48,48,48,48,87,87,87,87,87,87,87,95,
87,87,87,87,87,87,87,87,125,77,125,77,125,77,116,77,
116,77,116,77,116,77,125,112,125,87,106,77,106,77,106,77,
106,77,106,77,125,87,125,87,125,87,125,87,125,87,125,87,
58,48,58,48,58,48,58,48,58,48,123,96,67,48,125,87,
87,106,48,106,48,106,70,106,60,106,48,125,87,125,87,125,
87,105,122,86,125,87,125,87,125,87,154,125,116,58,116,58,
116,58,96,67,96,67,96,67,96,67,106,48,106,74,106,48,
125,87,125,87,125,87,125,87,125,87,125,87,164,125,125,87,
125,106,77,106,77,106,77,48,135,135,135,135,135,135,135,135,
135,135,135,135,135,135,135,125,135,135,87,135,135,135,135,135,
135,135,135,135,135,135,135,135,125,92,135,135,135,135,135,135,
135,135,135,135,135,135,135,135,94,135,135,135,135,135,135,135,
135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,
135,135,135,135,135,125,77,58,48,125,87,125,87,125,87,125,
87,125,87,125,87,135,135,135,135,135,135,135,135,135,135,135,
135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,
135,135,125,77,154,116,125,87,135,135,135,135,135,135,135,135,
135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,
135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,
135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,
135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,
135,135,135,135,135,135,135,135, };

// Call this function with
//    font: NULL or array length
//    data: NULL or specified size
//    height: STB_FONT_times_12_latin_ext_BITMAP_HEIGHT or STB_FONT_times_12_latin_ext_BITMAP_HEIGHT_POW2
//    return value: spacing between lines
static void stb_font_times_12_latin_ext(stb_fontchar font[STB_FONT_times_12_latin_ext_NUM_CHARS],
                unsigned char data[STB_FONT_times_12_latin_ext_BITMAP_HEIGHT][STB_FONT_times_12_latin_ext_BITMAP_WIDTH],
                int height)
{
    int i,j;
    if (data != 0) {
        unsigned int *bits = stb__times_12_latin_ext_pixels;
        unsigned int bitpack = *bits++, numbits = 32;
        for (i=0; i < STB_FONT_times_12_latin_ext_BITMAP_WIDTH*height; ++i)
            data[0][i] = 0;  // zero entire bitmap
        for (j=1; j < STB_FONT_times_12_latin_ext_BITMAP_HEIGHT-1; ++j) {
            for (i=1; i < STB_FONT_times_12_latin_ext_BITMAP_WIDTH-1; ++i) {
                unsigned int value;
                if (numbits==0) bitpack = *bits++, numbits=32;
                value = bitpack & 1;
                bitpack >>= 1, --numbits;
                if (value) {
                    if (numbits < 3) bitpack = *bits++, numbits = 32;
                    data[j][i] = (bitpack & 7) * 0x20 + 0x1f;
                    bitpack >>= 3, numbits -= 3;
                } else {
                    data[j][i] = 0;
                }
            }
        }
    }

    // build font description
    if (font != 0) {
        float recip_width = 1.0f / STB_FONT_times_12_latin_ext_BITMAP_WIDTH;
        float recip_height = 1.0f / height;
        for (i=0; i < STB_FONT_times_12_latin_ext_NUM_CHARS; ++i) {
            // pad characters so they bilerp from empty space around each character
            font[i].s0 = (stb__times_12_latin_ext_s[i]) * recip_width;
            font[i].t0 = (stb__times_12_latin_ext_t[i]) * recip_height;
            font[i].s1 = (stb__times_12_latin_ext_s[i] + stb__times_12_latin_ext_w[i]) * recip_width;
            font[i].t1 = (stb__times_12_latin_ext_t[i] + stb__times_12_latin_ext_h[i]) * recip_height;
            font[i].x0 = stb__times_12_latin_ext_x[i];
            font[i].y0 = stb__times_12_latin_ext_y[i];
            font[i].x1 = stb__times_12_latin_ext_x[i] + stb__times_12_latin_ext_w[i];
            font[i].y1 = stb__times_12_latin_ext_y[i] + stb__times_12_latin_ext_h[i];
            font[i].advance_int = (stb__times_12_latin_ext_a[i]+8)>>4;
            font[i].s0f = (stb__times_12_latin_ext_s[i] - 0.5f) * recip_width;
            font[i].t0f = (stb__times_12_latin_ext_t[i] - 0.5f) * recip_height;
            font[i].s1f = (stb__times_12_latin_ext_s[i] + stb__times_12_latin_ext_w[i] + 0.5f) * recip_width;
            font[i].t1f = (stb__times_12_latin_ext_t[i] + stb__times_12_latin_ext_h[i] + 0.5f) * recip_height;
            font[i].x0f = stb__times_12_latin_ext_x[i] - 0.5f;
            font[i].y0f = stb__times_12_latin_ext_y[i] - 0.5f;
            font[i].x1f = stb__times_12_latin_ext_x[i] + stb__times_12_latin_ext_w[i] + 0.5f;
            font[i].y1f = stb__times_12_latin_ext_y[i] + stb__times_12_latin_ext_h[i] + 0.5f;
            font[i].advance = stb__times_12_latin_ext_a[i]/16.0f;
        }
    }
}

#ifndef STB_SOMEFONT_CREATE
#define STB_SOMEFONT_CREATE              stb_font_times_12_latin_ext
#define STB_SOMEFONT_BITMAP_WIDTH        STB_FONT_times_12_latin_ext_BITMAP_WIDTH
#define STB_SOMEFONT_BITMAP_HEIGHT       STB_FONT_times_12_latin_ext_BITMAP_HEIGHT
#define STB_SOMEFONT_BITMAP_HEIGHT_POW2  STB_FONT_times_12_latin_ext_BITMAP_HEIGHT_POW2
#define STB_SOMEFONT_FIRST_CHAR          STB_FONT_times_12_latin_ext_FIRST_CHAR
#define STB_SOMEFONT_NUM_CHARS           STB_FONT_times_12_latin_ext_NUM_CHARS
#define STB_SOMEFONT_LINE_SPACING        STB_FONT_times_12_latin_ext_LINE_SPACING
#endif

