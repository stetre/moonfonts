// Font generated by stb_font_inl_generator.c (4/1 bpp)
//
// Following instructions show how to use the only included font, whatever it is, in
// a generic way so you can replace it with any other font by changing the include.
// To use multiple fonts, replace STB_SOMEFONT_* below with STB_FONT_courier_15_latin_ext_*,
// and separately install each font. Note that the CREATE function call has a
// totally different name; it's just 'stb_font_courier_15_latin_ext'.
//
/* // Example usage:

static stb_fontchar fontdata[STB_SOMEFONT_NUM_CHARS];

static void init(void)
{
    // optionally replace both STB_SOMEFONT_BITMAP_HEIGHT with STB_SOMEFONT_BITMAP_HEIGHT_POW2
    static unsigned char fontpixels[STB_SOMEFONT_BITMAP_HEIGHT][STB_SOMEFONT_BITMAP_WIDTH];
    STB_SOMEFONT_CREATE(fontdata, fontpixels, STB_SOMEFONT_BITMAP_HEIGHT);
    ... create texture ...
    // for best results rendering 1:1 pixels texels, use nearest-neighbor sampling
    // if allowed to scale up, use bilerp
}

// This function positions characters on integer coordinates, and assumes 1:1 texels to pixels
// Appropriate if nearest-neighbor sampling is used
static void draw_string_integer(int x, int y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0, cd->t0); glVertex2i(x + cd->x0, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t0); glVertex2i(x + cd->x1, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t1); glVertex2i(x + cd->x1, y + cd->y1);
        glTexCoord2f(cd->s0, cd->t1); glVertex2i(x + cd->x0, y + cd->y1);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance_int;
    }
    glEnd();
}

// This function positions characters on float coordinates, and doesn't require 1:1 texels to pixels
// Appropriate if bilinear filtering is used
static void draw_string_float(float x, float y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0f, cd->t0f); glVertex2f(x + cd->x0f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t0f); glVertex2f(x + cd->x1f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t1f); glVertex2f(x + cd->x1f, y + cd->y1f);
        glTexCoord2f(cd->s0f, cd->t1f); glVertex2f(x + cd->x0f, y + cd->y1f);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance;
    }
    glEnd();
}
*/

#ifndef STB_FONTCHAR__TYPEDEF
#define STB_FONTCHAR__TYPEDEF
typedef struct
{
    // coordinates if using integer positioning
    float s0,t0,s1,t1;
    signed short x0,y0,x1,y1;
    int   advance_int;
    // coordinates if using floating positioning
    float s0f,t0f,s1f,t1f;
    float x0f,y0f,x1f,y1f;
    float advance;
} stb_fontchar;
#endif

#define STB_FONT_courier_15_latin_ext_BITMAP_WIDTH         256
#define STB_FONT_courier_15_latin_ext_BITMAP_HEIGHT        120
#define STB_FONT_courier_15_latin_ext_BITMAP_HEIGHT_POW2   128

#define STB_FONT_courier_15_latin_ext_FIRST_CHAR            32
#define STB_FONT_courier_15_latin_ext_NUM_CHARS            560

#define STB_FONT_courier_15_latin_ext_LINE_SPACING           7

static unsigned int stb__courier_15_latin_ext_pixels[]={
    0x04026000,0x00080080,0x00220020,0x08008200,0x50000440,0x00000555,
    0x01000004,0x30000304,0x00310a00,0x00000010,0x01b80180,0x404880aa,
    0x4032201b,0x039048ba,0x19008b88,0x02ee2055,0x2e220370,0x4c033200,
    0x07950199,0x0c80e66e,0x20191750,0x0e672049,0xc8806644,0x260e403a,
    0x70064005,0xc81e4039,0x0ccb0399,0x1007006e,0x15002605,0x01c03980,
    0x5c02e271,0x80545301,0x2e17100a,0x8e070a80,0x20331883,0x2602802a,
    0x0cc01404,0x22181450,0x00e01100,0x142a00a8,0x015c0110,0x50154198,
    0x81654051,0x177102ca,0x18bb9835,0xcc987358,0x9ac1cc88,0x644664c3,
    0x4c39ac1c,0x41cc88cc,0x32619bb9,0x541cc88c,0x44664c2c,0x119931cc,
    0x42ca8399,0x1cc88cc9,0x98e44dd4,0x21cc88cc,0x4c8b2a4c,0xcc8b8b2a,
    0x03177303,0x75031773,0x5dcc3913,0x23999519,0x880a6219,0x751c881a,
    0x4c3a8e44,0x14c4c88b,0x707000d5,0x00707000,0x23987070,0x911c1c68,
    0x87070ea3,0x54722383,0x46e1c1c3,0x21c1c2d8,0x90a62429,0x98930cc8,
    0x54531aa2,0x22d88dc6,0x4a60ee38,0xca80cc09,0x8dc0a82c,0x4470dc0a,
    0x9314243c,0x70707261,0x41c9864c,0x4c326383,0x121c1c1c,0x05470702,
    0x1c38386e,0x21b8151c,0x0aa1c383,0x14c90707,0x40c85324,0x21214244,
    0x0a8aa1c2,0x5c414c0c,0x212e01bc,0x71073883,0x221748e2,0x0a21a802,
    0x221a8707,0x86a1c1c2,0x711c1c28,0x41c70700,0x070e0e38,0x071c41c7,
    0x0e154387,0x9824a60e,0x23819092,0x40144028,0x006e1543,0x30381053,
    0x27038353,0x85c66703,0x3500510a,0x50e0e144,0x0e0e1443,0x20e14435,
    0x0aaa8a23,0x47038e0e,0x71c1c383,0x5c3838e0,0x38385b10,0x4e405390,
    0x88e24c82,0x5c014402,0x97105b10,0x88665301,0x0e380caa,0x2a0e5507,
    0x2c38aae2,0x38510d40,0x8510d438,0x510d4383,0x31243838,0x071c1c19,
    0x0e1c1c55,0x0e2a838e,0x0a6aea0e,0x01660707,0x1654e0b3,0xa802c02c,
    0x0e0229ab,0x8bb8cca6,0x30e380c8,0xc8530c85,0x64388ee0,0x2b866140,
    0x198330d4,0x0cc350ae,0x0d42b866,0x21c0c833,0x4298661a,0x41986a0c,
    0x4298661a,0x01986a0c,0x1986a0cc,0x02980530,0x42819007,0x8660140c,
    0x98cc1c45,0x5d40c871,0x5e542baa,0x06de540d,0x20777791,0xbc81cacc,
    0x3abc85bc,0x90b79790,0x32f20757,0x83abc85b,0xc84badc8,0xdbca83ab,
    0x903abc80,0xb7950757,0x80757901,0x07579048,0x07024024,0x2072b320,
    0x2201cacc,0x065dde44,0x57708922,0x04838995,0x00980801,0x20020040,
    0x00800800,0x30008008,0x40080080,0x00800800,0x02aa6004,0x0aaaa008,
    0x54c15554,0x1001001a,0x100554c0,0x0200aaa8,0x0fae3eb8,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x10080000,0x01100001,0x42000514,0x40840000,
    0x30008818,0x200c0003,0x55501009,0x40001003,0xa8000998,0x0000018b,
    0x200c0000,0x004ccccc,0x40332200,0x01cba80c,0x06402e17,0x546a2cb0,
    0x4829b980,0x21b9b812,0x024c1ca8,0x32e014c4,0x640e5dc1,0x9981c81a,
    0x881d4009,0x555500cc,0x21073370,0x0753902b,0x26e03322,0x0399b839,
    0x0e333809,0x46624492,0x0c02a0e2,0x100ddc03,0x0dd40001,0x2ee20528,
    0x20313100,0x55003819,0x860a84c0,0x00a81441,0x02880e6b,0x4664c28a,
    0x21541cc8,0x1cc88cc9,0x028a02b8,0xc8154055,0x33384cce,0x702ee20e,
    0x9bb98cc3,0x5066ee61,0xb9839137,0x89ba819b,0x9917951c,0x9502ca85,
    0xc88cc985,0x9119931c,0x33819839,0x44664c79,0x6665c1cc,0x98399952,
    0x066664c1,0x33332600,0x6647952c,0xcc98e0e2,0x50e0e1cc,0x47910599,
    0x999930cb,0x26666641,0x08cc2024,0x8b333326,0xb8e26648,0x371dc713,
    0x44730b62,0x82d88dc6,0x751c89c3,0x1c3a8e44,0x260e0e1c,0x07057381,
    0x29805c07,0x20a8f76e,0x3261930b,0x45238a81,0x41c1c382,0x70383819,
    0x21a86a09,0x33382e0a,0x0cc0120e,0x99a1c1a8,0x40a8c0a9,0x848550e1,
    0x0e0aa1c0,0x2a3702a7,0x87070dc0,0xc8198383,0x4070701c,0x1985300b,
    0x0d429854,0x228e7051,0x7070e573,0x07070330,0x45203533,0x9c298543,
    0x20090719,0x0c235019,0x01b8cc36,0x4550e037,0x15438038,0x9c41ce1c,
    0x0e0e3883,0x90330707,0x80e0e093,0x1985300b,0x44350910,0x38179382,
    0x07070e99,0x70707033,0x00bb881c,0x04661091,0x5019801c,0x19960935,
    0x971032e2,0x22d885c1,0xb82aaa28,0x38705b10,0x2381ce07,0x41c1c383,
    0x70713819,0x402e0470,0x0c80cc29,0x530a21a8,0x77170336,0x3307070e,
    0x1c707070,0x00640550,0x5d5cc033,0xa83ddc83,0x4ccd04ab,0xa8701380,
    0x312429ab,0x29aba819,0x39cf3b2e,0x455072a8,0x51c1c383,0x96a59bb9,
    0x38e0e1dc,0x5c29805c,0x198a1a80,0x075570ae,0x50ea62ae,0x40cc0cc3,
    0x5750661a,0x40660575,0x00660a1a,0x2a008031,0x26398611,0x4459c459,
    0x81906603,0x9c00cc03,0x42986429,0x41986a0c,0x8020661a,0x21986a00,
    0x2a3301c4,0x21c3883a,0x71c5bcbc,0x41e4971c,0x03303abc,0x20e0eaf2,
    0x87103304,0x1d401983,0x20d40ea0,0xbc998323,0x77790cbb,0x22122019,
    0x2204badc,0x950dc404,0xdbca81b7,0x903abc80,0x40ea0757,0x0eaf2039,
    0x22037593,0x66640224,0xd70084cc,0x5cb99d91,0x98040b24,0x0081cddc,
    0x21f5c7d7,0x66644ddc,0x1eee44cc,0x80980130,0x25cccdd9,0x08020442,
    0x18015530,0xa802aa60,0x0080101a,0x02004004,0x04008008,0x00002a98,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00800000,
    0x800cddcc,0x00004009,0xcc980c00,0x177300bc,0x00260003,0x40080100,
    0x80008049,0x80101998,0x085c4000,0x41519800,0x839910ca,0x020000e3,
    0x07298062,0x2e38824c,0x5b24d5c3,0x2a019101,0x0aa3203c,0x11a81454,
    0x1aa29819,0x664c0644,0x80e6ae0b,0x100e4049,0x91039805,0x0aaa8819,
    0x107301c8,0xcb898199,0x88399b80,0x83899030,0x00c88061,0x4072a126,
    0x818802e4,0x21cc0c0a,0x31880a03,0x5100dc03,0x48706a03,0x72405028,
    0x01402a81,0x33773028,0x20a280a0,0x140a02ca,0x0b2a0a28,0x0b2a02a8,
    0x326386ae,0x281cc88c,0x206a0380,0x66541c38,0x99303702,0x2a0e5999,
    0x599502cc,0x01799930,0x46a05995,0x300a21b8,0x38817999,0x90379970,
    0x99930599,0xd11cc599,0x9666664c,0x12ccccc9,0xcc98ea39,0x999931cc,
    0x47333263,0x654751c8,0x32239910,0x1c938751,0x10ca8e0e,0xb8f22399,
    0x20e06a0c,0x4409700b,0x2706a0cb,0x97012e03,0x806446a0,0x1d9b504b,
    0x11a80288,0x20bba819,0x00e0aa28,0x02123835,0x706a3835,0x1983702a,
    0x50660330,0x71321b81,0x1386e054,0xc87070e7,0x1a86a1c4,0x220e20d4,
    0x041a9983,0x38c2351c,0x26035330,0x1c1a81a9,0x8d40d4cc,0x1a805848,
    0x0a23701c,0x8d403817,0x2a00e230,0x211a8611,0x19871071,0x70660330,
    0x70d5c710,0x5c71c41c,0x2e1c1c38,0x1c520e1a,0x1c02e0d4,0x1c45871c,
    0x70389355,0x2a0e381c,0x1c703711,0x0c8730d4,0x0dc46a14,0x98512983,
    0x26aa01c2,0x15551444,0x55424d54,0x4c381c49,0x06603301,0x1c938e07,
    0x1e438e07,0x39270e0e,0x1a80bb88,0x2385101c,0x065dde43,0x70389575,
    0x2a0e381c,0x1c700ecd,0x43b87766,0x6d41cacc,0x5d65c0ec,0x38510a24,
    0x24255d40,0x55d41931,0x1c4aba84,0x4c066154,0xa8383301,0x0e39c4e2,
    0xa8674caa,0x44e1c1c4,0x540aa073,0x549002e1,0x1982baab,0x41c611a8,
    0x542baaba,0x8d42baab,0xbaaba848,0x05300102,0x1a82446a,0x8702a144,
    0x21846a0a,0x846a1c0c,0x531846a1,0x980cc0c8,0x42983301,0x238b8e0c,
    0x00406429,0xb8e0cc35,0x2a033038,0x1ca60121,0x0d41d424,0x2241c1ce,
    0x730d4483,0x07504838,0x4c3503a8,0x11441983,0x2a0a8709,0x75b911c1,
    0x351c1a89,0x036f2a38,0x980cc066,0x40dbca81,0x2f2a1e43,0x6407300d,
    0x1e4383ab,0x2a350198,0x47d79001,0xdd9803eb,0x21575ccc,0x5cfae3eb,
    0x6ccfae3e,0x1f5cee1d,0x000107d7,0x0770eecc,0x90999b90,0x261b999d,
    0x305cccdd,0xb999bb30,0x17333766,0x33772602,0x239bb931,0x081cddc9,
    0x0950ce98,0x01001002,0x425433a6,0x05d44ddc,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x19bb9800,0x90325500,0x00280599,0x2604c000,0x001991cc,0x00126000,
    0x03322991,0x333260aa,0x0189880c,0x02662044,0x404a60c4,0x01dc4060,
    0x0880aa00,0x1c703180,0x50040062,0x43447305,0x70070004,0x40332205,
    0x03902cc9,0x0370dc35,0x4415c249,0x20e24902,0x26029883,0x00919101,
    0x82aaa895,0x83b9a849,0x8b98399c,0x162181b8,0x0ddd4066,0x43019190,
    0x2a202cc1,0x09033019,0x52643981,0x14c03859,0x30cc1450,0x0191a800,
    0x70177107,0x88317730,0x81c1c0bb,0x84066019,0xcc98e000,0x64c0c1cc,
    0x01981ccc,0x14490707,0x18399993,0x20444406,0x3832e3c8,0xcc985140,
    0x900710cc,0x1c242981,0x99039510,0x06449911,0x26a03320,0xcca8700d,
    0x2a298902,0x87333266,0x4c326383,0x64c1981c,0x59703930,0x32a0660e,
    0x980cc0ab,0x1c1c40bb,0x4c1333ae,0x3950e541,0x1a80bb98,0x06ea706a,
    0x20a83571,0x5554510b,0x053241a0,0x35033007,0x2002a144,0x0d9da819,
    0x12097038,0x70330509,0x0a21a870,0x2886a066,0x984b88dc,0x983514c1,
    0x986e2a81,0x40240a82,0x0e113819,0x8a40dc55,0x0730bc83,0x4c2a3551,
    0x41931242,0x1c125305,0x3503302a,0x32a6a144,0x43503301,0x54cc2b84,
    0x00511641,0x50e0e066,0x40cc1443,0x9890a21a,0x56441984,0x70703301,
    0x80483848,0x0e773819,0x17710707,0x2a638390,0x19091009,0x53903438,
    0x198150e0,0x42a99aa8,0x06602e4a,0x0640a86a,0x511c438e,0x86606600,
    0x0510d41a,0x14435033,0x03309071,0x033072a2,0x220c8707,0x81980483,
    0x1c28cb8b,0x1902a81c,0x05cd40b8,0x2b722032,0x0b30344b,0x037333b2,
    0x75575033,0x20a20a85,0xb0eecc19,0x9071c1c3,0x20330058,0x21983bbb,
    0x3377262b,0x2c2b8660,0x8706612a,0x21c0cc38,0x03bcb838,0x73033007,
    0x44381753,0x0f203303,0x43514507,0x03701882,0x980100a6,0x50a21a81,
    0xbb951441,0x21c01059,0x242baaba,0x03305032,0x7979005c,0x65e4070b,
    0x4ddec45b,0x2f20cc2d,0x40cc0cba,0x980bbbb8,0x5cc098ad,0xd01983ba,
    0x5dddc434,0x3b503300,0x75301777,0x73070e21,0x40241220,0x2a066039,
    0x44150a21,0x81cc0382,0x20e241c3,0x1981cacc,0x00806a60,0x800805d4,
    0x39bb9300,0x6ee4c088,0x99b8001c,0x3260602b,0x00001cdd,0x0809bb90,
    0x66666400,0x2a140084,0xa80402aa,0xbb12cddc,0x3621bb11,0x17503724,
    0xd705c020,0x0531f5c7,0x33772602,0x00000001,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x11000000,0x0c301820,0x81100886,
    0x02ccccc9,0x18205500,0x880440a0,0x00440099,0x40440133,0x260220e3,
    0x23800099,0x09801883,0x20630188,0x02cca818,0x2a33030c,0x4c40c400,
    0x08850019,0x33905793,0x10ef2607,0x2eea0759,0x5c0e0d41,0x4e406604,
    0x57057039,0x05555077,0x99aa84a8,0x19632a02,0x43aac886,0x06982aad,
    0x1de4c186,0x24c1adb8,0xa9b85170,0x9b809703,0x80308849,0x15551049,
    0x4ee06440,0x200cc061,0x21806018,0x20308d41,0x66664c08,0x0201982c,
    0x9930a8a2,0x99105999,0x200c285d,0x9999328b,0x80386a03,0xccccc980,
    0x02b81862,0x44337006,0x06a660e1,0x332a0330,0x99500c02,0x27700805,
    0x1930abca,0x2ee60726,0x40d5dc40,0x4d540bb9,0x502ee604,0x05dcc383,
    0x45105dcc,0xb8706a0b,0x02ba872c,0x1981c5d4,0x01370640,0x1a835771,
    0x8357711c,0x86aee205,0x451bcdb8,0x2071c0d9,0x2e01bcb8,0x326ee604,
    0x59704b80,0x14d54391,0x8510d435,0x31cc6e1b,0xa86e1b8b,0x5c3704ab,
    0x2e1846a1,0x2e1b86e1,0x350f72e1,0x2e2370c2,0xb80b8944,0x40660970,
    0x2556c2ea,0x46a2cc73,0x2598e630,0x8e63cbb8,0x2aeea259,0x702eaa70,
    0x981c081c,0x362a81a9,0x081a9983,0x45542ab7,0x221a81ac,0x9cccce42,
    0x4cce4083,0x41846a39,0x2a39999c,0x999c849a,0x26667239,0xa8933913,
    0x24c4849a,0x11c298a2,0x1700660b,0x2041ca60,0x041c49aa,0x41ca63d1,
    0x2705d4c0,0x555d4173,0x1955102b,0x191c1c70,0x54c1c707,0x435299bb,
    0x886a1ca8,0x955556c2,0xaaaad803,0xad8706a2,0x2aea2aaa,0x2aaaad84,
    0x54aaaab6,0x4aba8a61,0x1a8241c4,0x4c121c45,0x1ce03801,0x0e255d40,
    0x300e7120,0x4ce15b79,0x2120e0dc,0x380c88bb,0x83864e0e,0x951570e3,
    0x1c438355,0x80e15c33,0x980e0c0a,0x1c5cccdd,0x0e1846a0,0x1514c070,
    0x22c308d4,0x7072604a,0x041982cc,0x542a0c66,0x1846a0c0,0x71241815,
    0x38a8302a,0x23eb80dc,0x0321c3eb,0xb8575575,0x55750e1c,0x04951c57,
    0x9032eaf2,0xbb88b797,0x2eaee3ca,0x1e55dc42,0xabb88330,0x44706a3c,
    0x2e23cabb,0x2eee3cab,0xd88e0d43,0x5062d9bb,0x05b57930,0x3bbda833,
    0x770eef66,0x1c1a8575,0xc8857577,0x2eaee0bb,0x3221c542,0x77050010,
    0x48389955,0x205dde64,0x36ee6483,0x449b2cbc,0x00400200,0x51001001,
    0x9bb30203,0x10020b99,0x666ecc00,0x2aa0085c,0x4c0201ba,0x0041cddc,
    0xdd980801,0x40085ccc,0x82940200,0xa9802cd9,0x47d70040,0x402313eb,
    0x10fae3eb,0x00002204,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x20c00000,0x00440129,0x1100a014,
    0x40618140,0x4004402a,0x02201402,0x00099800,0x030c0618,0x33102171,
    0x0a000133,0x00880608,0x0e691014,0x0f32e997,0x32e05197,0x6446202c,
    0x9a879914,0x0377503b,0x40ea015c,0x07503aba,0x53103775,0x700ddd40,
    0x7703a805,0x19991075,0x102eaf26,0xbb835177,0x0377501c,0xac819713,
    0x25dc2baa,0x65dc0570,0x40377501,0x20e0003a,0x00035083,0xa8e0e244,
    0x1839910c,0x03000806,0x20301a8e,0x18066008,0x03000806,0x45540b8e,
    0x30a62364,0x26099117,0xca804400,0x305c082c,0x400c0a23,0x18030c01,
    0x83930c98,0x5e5c4383,0x01bcb881,0x4c870703,0x3261931c,0x0e4c3261,
    0x88726193,0x02ee61c2,0x5c415795,0x177301bc,0x4c02ee60,0x530cc0bb,
    0x2b29bb88,0x7911c298,0x301bcb88,0x025c0177,0x20546a24,0x64c1bcb8,
    0xcb883930,0x1bcb881b,0x070a21a8,0x2041c087,0x8e6664c3,0x70d5c383,
    0x350a21a8,0x2886a144,0x70dc9724,0x021a8a63,0x20dc5507,0x45506e2a,
    0x54710e1b,0x3954c88b,0x2e91c453,0x45507020,0x01a9981b,0x595350e2,
    0x10d41c08,0x2041c085,0x70a21a83,0x19551070,0x54195510,0x21c1c911,
    0x886a1c93,0xa8510d42,0x37930a21,0x9cccce49,0x55101ac8,0x1c383819,
    0x438e0e1c,0xa89a0e38,0xa85c6629,0x20655440,0x80e38383,0x8350d40a,
    0x0d40caa8,0x19551051,0xa8195510,0x38670a21,0x206445dc,0x900c88bb,
    0x44e1c1c1,0x0a21a873,0x86a14435,0xad8e6028,0x65442aaa,0x03222ee1,
    0x43838707,0x1982a383,0x85310e0a,0x1770e2ab,0x83838191,0x1a8380e3,
    0x1911771c,0x770a21a8,0x8bb81911,0x570cc0c8,0x90e1c738,0x64064381,
    0x38330d40,0x5c330e2e,0x98570cc2,0x06440ae1,0x38e21c07,0x8710e064,
    0x710e1c43,0x443871c4,0x8ee14c41,0x70321c38,0x555d4388,0x3350702b,
    0x4c0c871c,0x0c870ae1,0x2f20321c,0x273ae5bc,0x555dc0ca,0x6555dc4c,
    0x5e430dc4,0x41e4383c,0xbc85bcbc,0xbcbc85bc,0x10372e25,0x2f279577,
    0x2aee0cba,0x5ddc44ca,0x5dddc40b,0x05dddc40,0x5710b2ee,0x44531075,
    0xbb83bbbc,0x5dc44caa,0x4241c0bb,0x5cdecc19,0x32aaee0c,0x45bcbc84,
    0x5c4caabb,0x0104caab,0x01001000,0x21e66754,0x2a19d300,0x00100104,
    0x00800401,0x00002011,0x80100000,0x25737300,0x00010009,0x0fae3eb8,
    0x80040200,0x00400400,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x28e5c400,
    0x20062006,0x87997009,0x5c031061,0x4e40028c,0x40c302cb,0x30005548,
    0x4000810c,0x2a320001,0x65ce40bc,0x99700c41,0x40f32e07,0x026028cb,
    0x227260c4,0x59600c2c,0xa806030c,0x5e445cc2,0x54401912,0x000ea01c,
    0x9510e5dc,0x83508393,0x25a81dc9,0x02bc980b,0x512eea00,0x64e44377,
    0x56444b80,0x6d4006c4,0x85c95122,0x00001ca8,0x7501a840,0x9e4c1260,
    0x40006440,0x40903bc9,0xb32c1c2a,0x00cc039b,0x80bb9803,0x30533009,
    0x20660177,0x0c40a21a,0x701bcb88,0x0a880880,0x82208110,0x43835003,
    0x0330a21a,0x19302ee6,0x30c98726,0x00c03039,0x26030073,0x701880bb,
    0x3880999d,0x32a6a0b8,0x9c813301,0x2e1b82cb,0x26019911,0x206e2a81,
    0x0a21a819,0x81059739,0xc9826443,0x19911ccc,0x11cccc98,0x97390199,
    0x20a83505,0x0330a21a,0x86a0dc55,0x4510d428,0x222c89c9,0x102980cc,
    0x5c370199,0x05913931,0x05304c09,0x01725435,0x2e5a85b5,0x1cccce40,
    0x1c0cc066,0x0d40cc1c,0x02e5a851,0x0e032aa2,0x198488d4,0x198488d4,
    0x3502e5a8,0x2886a0a8,0x0e0e24cc,0x86a14435,0x809e4c28,0x4c029819,
    0x39999c81,0x3b204f26,0x41c1a84c,0xb8510544,0x0a21a81d,0x9855555b,
    0x70703301,0x25d88330,0x8510d45c,0x380c88bb,0x01980c80,0x2a066032,
    0xa8350a21,0x21449b10,0x21c1c399,0x4350a21a,0x2601cc28,0x8266edc1,
    0xaaaad819,0x40900e62,0x89105c2a,0x3310a20a,0x0e144350,0x40cc0660,
    0x00cc1c43,0x8510d401,0x201c0643,0x3203300c,0x43503300,0x00e0d428,
    0x43819833,0x8570cc38,0x0530ae19,0x98010198,0x014c0381,0x5c42b80e,
    0x220a84cb,0x21a81982,0x655dc428,0x81980cc3,0x980bbbb8,0x0d40e601,
    0xcaabb851,0x186e0384,0x830dc0cc,0x0a21a819,0x880aea9b,0xbb881984,
    0xbcbc80bb,0x45bcbc85,0x440cc029,0x2206602a,0x0a63cabb,0x5c775730,
    0x93620203,0x9bb950dc,0x05c97625,0x59bb9502,0x00b3772a,0x81cddc98,
    0x2e4bb100,0x09d93004,0x2a7999d5,0x9d52cddc,0x3772a799,0x2e4bb12c,
    0x542a8020,0x0002cddc,0x36e01001,0x6ee544cd,0xdca8042c,0xdb8102cd,
    0x4c0c04cd,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x4c157950,0x02004c1d,0x80980040,
    0x1101abb8,0xb00bb898,0x33331162,0xc9864c33,0x77300221,0x2ea00c33,
    0xc89ba82c,0x98055c41,0xbb9818bb,0x2cccb819,0xca8055c4,0xcc981302,
    0x64c1cc88,0x32a00592,0x00303cc8,0x29831011,0x260c886a,0x200ea038,
    0x5d64403a,0x90598e63,0x00aa3d87,0x4350c030,0x38812628,0x900644ee,
    0x362370d4,0x98750dc2,0x44731aa2,0x43702e06,0x1d47223a,0x21c1c0e4,
    0x7509911b,0x98664197,0x41980484,0x2b221ca8,0x8212a001,0x21038103,
    0x041c2a0a,0x0e0a1c5c,0x40302ee6,0x1c2886a1,0x02a18150,0x4550e380,
    0x098aab89,0x01090a12,0x3331305c,0x3702a135,0x870e0e00,0x03203848,
    0x84ccec89,0x81982cc8,0xa8141ca8,0x221c3910,0x07221c1c,0x388038d4,
    0x4ccccc47,0x21b8aa1a,0x221a8601,0x5c3c99c2,0x05973501,0x22a870dc,
    0x289c6232,0x2e001c40,0x839c14a0,0x70199138,0x32443870,0x0c8399d9,
    0x4320241c,0x8870cc0c,0x27550ee3,0x25b508bb,0xa96d41bb,0x2a48808c,
    0x2e3920c0,0x22baaaaa,0x21806383,0x2e70ae1a,0x54197102,0x703602e4,
    0x3338b621,0x440289c9,0x2042aaa2,0x39c14e0b,0x83819870,0x709705c3,
    0x90712640,0x86600540,0x190cbabc,0x42c8e440,0x8838a8c9,0x8488591c,
    0x8a62babb,0x070e0663,0x6d4300c7,0x0e645bcb,0x44151c04,0x35750182,
    0x51311945,0x9312402c,0xa94170e1,0x50728988,0x38381985,0x07092ca8,
    0x0902ca9c,0x206600cc,0x3a821c29,0x383b8a2e,0x445171d4,0x32e0a604,
    0x710e0ecc,0x4031c438,0x9c8026a1,0x151c4584,0x4c004144,0x1cc6aa21,
    0x40c85032,0x32887123,0x064298e3,0x1986a066,0x0e038480,0x26ee01c0,
    0x1d40cc0b,0xc8824cae,0x100e203b,0x500e6779,0xbb887007,0xbbbb883b,
    0x06a18060,0x7790e270,0x51054197,0x424407c8,0xc80baab8,0x6e441cac,
    0x2eb264ba,0x0baab881,0x4c06de54,0x00757901,0x00380e12,0x55077573,
    0xb9800660,0xb103a802,0x3a950075,0x4002cccc,0x00080ec8,0x26666660,
    0x5a802219,0xb1020772,0x40206e49,0x80000aa9,0x00201800,0x6e540400,
    0x300082cd,0x33b26355,0x006aa60c,0xca83300c,0x00002cdd,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x95264000,0x2e203305,0x6664c1bc,0x260bb880,0x666409ac,0x1666408a,
    0x50166644,0x32259999,0xccc832e3,0xc865c4cc,0x0e4c3223,0x32605dcc,
    0x332e0acc,0x465c0004,0x0accc982,0x9666664c,0x665c372a,0x5e664c1b,
    0x71e5c000,0x33332e79,0x1799931c,0x21cccc98,0x214caa2a,0x70203304,
    0x08627000,0x8398e053,0x32203803,0x54351c71,0xa87199c1,0x44350a21,
    0x38370dc2,0x98038322,0xa840c9bb,0x20644701,0x2201238a,0x22350aa2,
    0x3832600c,0xa8a21c48,0x206606e1,0x2649ba6e,0x54403302,0x033220ca,
    0x00cc881c,0x401c04c7,0x51c17013,0x26707148,0xdccdd871,0xc8510d45,
    0x21c39999,0x06f33238,0x2721ec55,0x388702cb,0x6644a39c,0xa82e1440,
    0x416441c1,0x310e1c43,0x0660e0d4,0x6424a600,0x5dc3cddc,0x81980c88,
    0x033009c9,0x82cce00e,0x5e4483bb,0x4c04b880,0x55335501,0x5b0a21a8,
    0x4e4c5555,0x8e1c38e1,0x172d438c,0x70e19c98,0x106602f2,0x446a2985,
    0x880ee21b,0x173902e2,0x20733550,0x53900019,0x64380cc0,0xbca81980,
    0x00e03301,0x00ea808e,0xb980cd87,0xcddc881b,0x15d55d41,0x01c2b866,
    0x0e38ab6a,0x870c9c17,0x5b50a21a,0x336531c5,0x21441980,0x03b36a28,
    0x42490097,0xaba80cac,0x4c1982ba,0x0b30aa2f,0x55770198,0x2a033099,
    0x21c06600,0x4c2a1c0a,0x20b85439,0x806ae603,0x14435019,0x222de5e4,
    0x41c3cabb,0x2e2544e3,0x44350e1c,0x2ae38382,0x5106603a,0x2446a0a8,
    0x31501e44,0x0d402705,0x5b83302e,0x100a6374,0x260a0401,0x0cc18901,
    0x50e05438,0x38854381,0x0d5cc38e,0x886a0330,0x5402a102,0x321a8700,
    0xbbcc81aa,0x0510d40b,0x238e1a87,0x88a20cc3,0x20730d44,0x207702c9,
    0x20e0d403,0x20207419,0x33333204,0xb951a804,0x6675c59b,0x59bb953c,
    0x06e66764,0x41b999d9,0x20dcccec,0x45ccecb8,0xbb702ddb,0xb90dd887,
    0x4c0d4401,0x2ccce982,0x462133ae,0x2e4bb100,0xb8b333a6,0x55ccec8e,
    0x37259bb9,0x0eecc4cc,0x5c04c077,0x983ceb83,0x262cccdd,0x8031cddc,
    0x00002aaa,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x46640000,0x166644c8,0xc9964254,0x6541991c,
    0xcccc982c,0x865c7910,0x5432e3c8,0xcc8b323c,0x33264ccc,0x21952ccc,
    0x99971cc8,0x00597103,0x81b88ca8,0x35050bb8,0x8e4c3930,0x443730c8,
    0x4453710c,0x77301bcb,0x419bb881,0x5c40abba,0xb8abb80b,0x44311881,
    0x221a8000,0x51640382,0x406e1a89,0x82e0a84b,0x43506a1a,0x70e0a22a,
    0x706a1c66,0x4c70e264,0x01dc0543,0x50553235,0x20006dc5,0x88261c13,
    0x019104c2,0x2370dc1c,0x22996638,0x41b8aa1a,0x4982a970,0x40d4ccb1,
    0x14435019,0x3c92e01c,0x3300c8d4,0x0530a835,0x44640e29,0x70e57383,
    0x846a1c66,0x1c386ae1,0x9102982e,0x4cddc705,0x222160e2,0x0e773808,
    0x82614413,0x84aa8828,0x0739999c,0x1c0d6441,0x26eea61c,0x0366b329,
    0x5406602a,0x0382a99a,0x21ccccdc,0x38e00d9a,0x2ee20910,0xc9c13200,
    0x02330874,0x92709355,0x2b5121c3,0x8e1c9818,0x20e1aaba,0x1dddddc3,
    0x26145dca,0x44130a20,0x42445dc2,0x071aaaac,0x83832a20,0x2b2a2ae3,
    0x2132991a,0x2a03301a,0x0382baab,0xda874c9c,0x81c700d9,0x900aa00c,
    0x1cee2e07,0x95750198,0x321ce270,0x22a20cba,0x21b500bb,0x221c0f22,
    0xa9b98003,0x8550cc1b,0x4870aa19,0x4302a038,0x38871c43,0x25904a8e,
    0xa86aee3b,0x0d42abca,0x20a87051,0x4350e553,0x2baaba84,0x033050d4,
    0x55c154d4,0x03303a98,0xb8e1846a,0x25301c38,0x441c983b,0x22cbaabc,
    0x2a03bbb8,0x79069a01,0x79790b79,0x4caabb8b,0x71655dc4,0x55dc5757,
    0x2eee20cb,0x5e65dcc3,0x01b8dc2c,0x886a0330,0x07054382,0x702a1a87,
    0x20e1c490,0x05c73019,0x3303c92e,0x21c706a0,0x2ee01c3c,0x805911cc,
    0x11000020,0x10010000,0x80200080,0x80002200,0x30000020,0xb11bb103,
    0x6667641b,0x75c7d70d,0x8ec3bb33,0x64fae3eb,0x6e44cccc,0xd91f4c4d,
    0x905925c3,0xcdd987bb,0x219d35cc,0x8133ae4a,0x00000280,0x00000000,
    0x00000000,0x00000000,0x00004400,0x00000000,0x00000000,0x00000000,
    0x54400000,0xaaf98442,0x2222220f,0x0be615c0,0x10a2a850,0x45258457,
    0x97608888,0x19999999,0x2eeeeee6,0x0000000b,0x2165cdc0,0x2e0cbbb8,
    0x88b98ee3,0xcb8f262b,0x2eaa3031,0x050c2c9b,0x01301971,0x0e4ce5c0,
    0x0cc00001,0x10444444,0x3f2ec531,0x5dddc4f3,0x475370bb,0x8370c46b,
    0x9328ea6e,0x6665c037,0xaaa8ee3c,0x0002aaaa,0x20000000,0x20982e59,
    0x88191c44,0x220a813c,0x836ef622,0x2570e955,0x9883302b,0x9c247119,
    0x0e02e20c,0x1cc5c1dc,0x4b777775,0xf9323bba,0x44444688,0x5b245208,
    0x202023a8,0x00000201,0x00000000,0x104c0000,0x65c41205,0x71c03880,
    0x8cce1c70,0x30793c83,0x5cc19103,0x980dc80c,0xa8a2e2a0,0x0071c299,
    0x77264e47,0x5ddc4514,0x19910bbb,0x0000002c,0x00000000,0x00000000,
    0xc8288260,0x0c413200,0x71c438e0,0x260e3338,0x01981d36,0x3b04c851,
    0x7dc41309,0x505c730b,0x18700555,0x00000cc3,0x00000000,0x00000000,
    0x00000000,0x5c288260,0x488c8860,0x55440188,0x9c5bbd80,0x88d98719,
    0x54c1980d,0x20e6321a,0x05dc4713,0x20404737,0x00030008,0x00000000,
    0x00000000,0x00000000,0x9b100000,0x777b32e4,0x0ec93a27,0x5c077b95,
    0x18888a84,0x8ae931b5,0x332ea124,0x4082202b,0x180591db,0x00000003,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
};

static signed short stb__courier_15_latin_ext_x[560]={ 0,3,1,1,1,1,1,3,3,1,0,0,1,1,
2,1,1,1,1,1,1,1,1,1,1,1,2,2,0,0,0,0,1,0,0,0,1,0,1,0,0,1,1,0,
0,0,0,0,1,0,0,1,0,0,0,0,0,0,1,0,0,0,1,0,2,0,0,1,0,0,1,0,0,1,
1,1,1,0,0,0,0,0,1,1,0,0,0,0,0,0,1,0,3,0,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,3,1,0,1,0,
3,0,2,0,0,0,0,1,0,-1,2,0,2,2,2,0,1,2,2,2,1,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,1,1,1,1,-1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,
0,0,0,0,0,1,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,1,0,1,0,1,0,1,1,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,1,1,0,1,0,0,1,0,
1,0,1,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,
1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,0,
0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1, };
static signed short stb__courier_15_latin_ext_y[560]={ 11,2,3,2,2,2,4,2,2,2,2,3,9,6,
9,2,2,2,2,2,2,2,2,2,2,2,5,5,3,5,3,3,2,3,3,3,3,3,3,3,3,3,3,3,
3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,2,2,14,2,5,2,5,2,5,2,5,2,2,
2,2,2,5,5,5,5,5,5,5,3,5,5,5,5,5,5,2,2,2,6,2,2,2,2,2,2,2,2,2,
2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,11,5,2,3,4,3,
2,2,3,3,2,5,6,6,3,1,1,3,2,2,2,5,2,6,10,2,2,5,2,2,2,5,0,0,0,1,
1,0,3,3,0,0,0,1,0,0,0,1,3,1,0,0,0,1,1,4,2,0,0,0,1,0,3,2,2,2,
2,3,3,2,5,5,2,2,2,3,2,2,2,3,2,3,2,2,2,3,3,4,4,2,2,2,3,2,2,3,
1,3,0,2,3,5,0,2,0,2,1,2,0,2,0,2,3,2,1,3,0,2,1,2,3,5,0,2,0,2,
0,2,1,2,3,2,0,0,3,2,1,3,1,3,0,2,3,2,1,5,3,2,0,2,3,2,5,0,0,3,
2,3,2,3,2,3,2,0,2,3,5,0,2,2,3,5,1,3,0,2,0,2,3,5,0,2,3,5,0,2,
0,2,0,2,3,5,0,2,3,3,0,2,3,3,1,3,1,3,0,2,0,2,0,2,3,5,0,2,0,2,
1,0,2,1,2,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,3,2,2,2,2,2,2,
2,2,2,2,2,2,2,2,2,2,3,5,2,2,2,2,2,2,2,2,2,2,2,2,2,2,5,2,2,2,
2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,2,0,2,0,
2,0,2,0,1,0,0,0,0,0,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,
2,2,2,2,2,2,2,2,2,2,-2,-1,0,2,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,
2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,
2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,
2,2,2,2,2,2, };
static unsigned short stb__courier_15_latin_ext_w[560]={ 0,2,6,6,6,6,6,2,4,4,5,8,4,6,
3,6,6,6,6,6,6,6,6,6,6,6,3,3,7,8,7,5,6,8,8,8,7,7,7,8,8,6,7,8,
8,8,8,7,7,8,8,6,8,8,8,8,8,8,6,3,5,3,6,9,4,8,8,7,8,7,7,8,8,6,
5,7,6,8,8,8,8,8,7,6,8,8,8,8,8,8,6,3,2,3,6,8,8,8,8,8,8,8,8,8,
8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,0,2,6,7,6,8,
2,8,4,8,5,7,8,6,8,10,4,8,4,4,4,8,6,3,3,4,6,8,8,9,8,5,8,8,8,8,
8,8,8,8,7,7,7,7,6,6,6,6,8,8,7,7,7,7,7,6,8,8,8,8,8,8,7,7,8,8,
8,8,8,8,8,7,7,7,7,7,6,6,6,6,7,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,
8,8,8,8,9,8,8,7,8,7,8,7,8,7,7,8,8,8,7,7,7,7,7,7,8,7,7,7,8,8,
8,8,8,8,8,8,8,8,8,8,6,6,6,6,6,6,6,6,6,6,8,7,7,5,8,7,7,8,6,8,
6,8,6,8,6,8,6,8,8,8,8,8,8,8,8,7,7,8,7,8,7,8,8,8,8,7,8,7,8,7,
6,6,6,6,6,6,6,6,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,
8,6,6,6,6,6,6,7,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,6,8,8,8,
8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,
8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,6,6,7,
8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,
8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,
8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,
8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,
8,8,8,8,8,8, };
static unsigned short stb__courier_15_latin_ext_h[560]={ 0,10,4,10,11,10,8,5,11,11,6,8,4,2,
3,11,10,9,9,10,9,10,10,10,10,10,7,8,8,4,8,9,10,8,8,9,8,8,8,9,8,8,9,8,
8,8,8,9,8,10,8,9,8,9,8,8,8,8,8,11,11,11,5,1,3,7,10,7,10,7,9,9,9,9,
12,9,9,6,6,7,9,9,6,7,9,7,6,7,6,9,6,11,11,11,3,9,9,9,9,9,9,9,9,9,
9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,0,9,9,8,6,8,
11,10,2,9,5,6,5,2,9,2,4,8,6,6,3,9,10,2,4,6,5,6,9,9,9,9,11,11,11,10,
10,11,8,11,11,11,11,10,11,11,11,10,8,10,12,12,12,11,11,6,10,12,12,12,11,11,8,10,10,10,
10,9,9,10,7,9,10,10,10,9,9,9,9,8,10,8,10,10,10,9,9,7,8,10,10,10,9,12,12,11,
10,9,11,10,10,8,12,10,12,10,11,10,12,10,11,10,8,10,10,9,11,10,10,10,10,8,11,10,12,12,
12,12,11,12,11,12,11,11,8,9,10,8,10,8,11,9,10,11,10,6,9,12,12,12,11,12,6,11,11,11,
12,8,9,8,9,8,9,11,9,11,9,11,9,9,9,9,11,9,12,10,12,10,8,7,11,9,11,9,11,9,
12,10,12,10,11,9,12,10,11,11,11,10,8,9,11,9,11,9,12,10,12,10,12,10,10,8,11,10,11,12,
10,11,9,10,9,11,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,11,9,9,9,
9,9,9,9,9,9,9,9,9,9,9,7,9,9,9,9,9,9,9,9,9,9,9,9,9,10,7,9,9,9,
9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,11,10,11,9,12,
10,12,10,12,11,12,12,12,12,12,12,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,
9,9,9,9,9,9,9,9,9,9,13,13,11,10,12,10,9,9,9,9,9,9,9,9,9,9,9,9,9,9,
9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,
9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,
9,9,9,9,9,9, };
static unsigned short stb__courier_15_latin_ext_s[560]={ 253,253,147,184,92,241,123,144,10,248,109,
1,168,203,182,243,104,66,42,131,57,138,169,162,82,46,252,248,207,154,130,
124,191,46,232,148,190,98,224,157,10,241,166,37,19,28,106,183,115,180,198,
108,89,198,215,80,71,62,55,25,250,239,115,225,186,192,232,209,141,201,216,
130,115,191,247,100,249,59,10,224,224,207,35,217,233,174,43,165,26,1,19,
87,253,74,191,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,
82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,253,251,242,
35,52,86,253,106,198,174,138,242,129,203,139,214,163,10,250,84,177,91,119,
210,173,104,122,68,33,23,14,8,1,29,38,153,217,56,174,74,116,133,141,
153,157,164,171,124,165,10,19,27,125,178,195,89,126,142,159,177,212,230,139,
169,204,177,195,231,91,68,233,49,53,74,33,226,219,204,129,183,111,156,95,
86,77,57,73,156,147,37,28,19,213,195,204,15,235,240,78,208,198,19,213,
176,222,161,91,145,44,25,99,115,130,97,89,35,240,66,58,50,41,122,17,
17,107,15,24,168,124,231,1,33,40,49,104,10,164,43,150,28,100,115,125,
58,198,77,222,42,108,116,65,91,96,107,33,24,84,50,50,59,162,68,19,
221,26,203,73,186,82,136,145,154,149,169,50,171,58,214,77,138,83,196,65,
211,47,234,8,157,1,1,10,1,240,61,231,222,213,189,95,242,179,187,163,
178,66,8,99,116,75,132,107,113,154,205,197,186,223,129,249,248,122,206,108,
100,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,64,82,82,122,
82,82,82,82,82,82,82,82,82,82,82,82,82,1,147,82,82,82,82,82,
82,82,82,82,82,82,82,82,1,183,82,82,82,82,82,82,82,82,82,82,
82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,188,135,
172,43,151,144,133,186,116,136,98,89,80,71,62,53,82,82,82,82,82,82,
82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,
82,82,82,10,1,145,244,35,226,82,82,82,82,82,82,82,82,82,82,82,
82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,
82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,
82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,
82,82,82,82,82,82,82,82,82, };
static unsigned short stb__courier_15_latin_ext_t[560]={ 13,52,111,52,28,40,103,111,40,15,112,
104,111,111,111,28,63,74,84,52,84,52,52,63,52,63,94,94,94,111,103,
84,52,103,94,84,94,103,94,84,103,94,84,103,103,103,103,84,103,40,94,
84,103,84,94,103,103,103,103,28,28,28,112,111,111,103,40,103,40,103,84,
84,84,84,1,84,84,112,112,103,84,84,112,103,84,103,112,103,112,94,112,
40,15,40,111,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,
84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,13,74,84,
94,112,94,1,52,111,84,111,103,112,111,84,111,111,94,103,112,111,84,63,
111,111,112,112,112,84,84,84,84,28,28,28,63,52,28,94,28,28,28,28,
52,28,28,28,52,94,63,1,1,1,28,28,112,63,1,1,1,28,28,94,
63,63,63,63,63,74,63,103,84,63,52,52,74,74,74,74,94,63,94,63,
63,63,74,84,103,94,63,63,63,63,1,1,40,52,63,40,52,52,94,1,
52,1,52,40,52,1,52,28,52,94,52,52,74,15,52,52,52,52,94,28,
52,1,15,15,1,28,1,40,15,40,40,94,74,40,94,40,94,40,74,40,
40,40,112,63,15,15,15,40,15,112,28,40,40,15,94,74,94,74,94,74,
28,74,28,74,28,74,74,74,74,28,74,15,40,15,40,94,103,28,74,28,
74,28,74,15,40,15,52,28,84,1,63,15,15,15,40,94,74,15,74,15,
74,15,52,15,40,15,40,40,94,15,40,15,1,40,15,63,40,74,15,74,
74,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,15,
84,84,84,84,84,84,84,84,84,84,84,84,84,74,103,84,84,84,84,84,
84,84,84,84,84,84,84,84,63,103,84,84,84,84,84,84,84,84,84,84,
84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,15,63,
15,74,1,63,1,63,1,15,1,1,1,1,1,1,84,84,84,84,84,84,
84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,
84,84,84,1,1,15,52,1,52,84,84,84,84,84,84,84,84,84,84,84,
84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,
84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,
84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,
84,84,84,84,84,84,84,84,84, };
static unsigned short stb__courier_15_latin_ext_a[560]={ 127,127,127,127,127,127,127,127,
127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,
127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,
127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,
127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,
127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,
127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,
127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,
127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,
127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,
127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,
127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,
127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,
127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,
127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,
127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,
127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,
127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,
127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,
127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,
127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,
127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,
127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,
127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,
127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,
127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,
127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,
127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,
127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,
127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,
127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,
127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,
127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,
127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,
127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,
127,127,127,127,127,127,127,127, };

// Call this function with
//    font: NULL or array length
//    data: NULL or specified size
//    height: STB_FONT_courier_15_latin_ext_BITMAP_HEIGHT or STB_FONT_courier_15_latin_ext_BITMAP_HEIGHT_POW2
//    return value: spacing between lines
static void stb_font_courier_15_latin_ext(stb_fontchar font[STB_FONT_courier_15_latin_ext_NUM_CHARS],
                unsigned char data[STB_FONT_courier_15_latin_ext_BITMAP_HEIGHT][STB_FONT_courier_15_latin_ext_BITMAP_WIDTH],
                int height)
{
    int i,j;
    if (data != 0) {
        unsigned int *bits = stb__courier_15_latin_ext_pixels;
        unsigned int bitpack = *bits++, numbits = 32;
        for (i=0; i < STB_FONT_courier_15_latin_ext_BITMAP_WIDTH*height; ++i)
            data[0][i] = 0;  // zero entire bitmap
        for (j=1; j < STB_FONT_courier_15_latin_ext_BITMAP_HEIGHT-1; ++j) {
            for (i=1; i < STB_FONT_courier_15_latin_ext_BITMAP_WIDTH-1; ++i) {
                unsigned int value;
                if (numbits==0) bitpack = *bits++, numbits=32;
                value = bitpack & 1;
                bitpack >>= 1, --numbits;
                if (value) {
                    if (numbits < 3) bitpack = *bits++, numbits = 32;
                    data[j][i] = (bitpack & 7) * 0x20 + 0x1f;
                    bitpack >>= 3, numbits -= 3;
                } else {
                    data[j][i] = 0;
                }
            }
        }
    }

    // build font description
    if (font != 0) {
        float recip_width = 1.0f / STB_FONT_courier_15_latin_ext_BITMAP_WIDTH;
        float recip_height = 1.0f / height;
        for (i=0; i < STB_FONT_courier_15_latin_ext_NUM_CHARS; ++i) {
            // pad characters so they bilerp from empty space around each character
            font[i].s0 = (stb__courier_15_latin_ext_s[i]) * recip_width;
            font[i].t0 = (stb__courier_15_latin_ext_t[i]) * recip_height;
            font[i].s1 = (stb__courier_15_latin_ext_s[i] + stb__courier_15_latin_ext_w[i]) * recip_width;
            font[i].t1 = (stb__courier_15_latin_ext_t[i] + stb__courier_15_latin_ext_h[i]) * recip_height;
            font[i].x0 = stb__courier_15_latin_ext_x[i];
            font[i].y0 = stb__courier_15_latin_ext_y[i];
            font[i].x1 = stb__courier_15_latin_ext_x[i] + stb__courier_15_latin_ext_w[i];
            font[i].y1 = stb__courier_15_latin_ext_y[i] + stb__courier_15_latin_ext_h[i];
            font[i].advance_int = (stb__courier_15_latin_ext_a[i]+8)>>4;
            font[i].s0f = (stb__courier_15_latin_ext_s[i] - 0.5f) * recip_width;
            font[i].t0f = (stb__courier_15_latin_ext_t[i] - 0.5f) * recip_height;
            font[i].s1f = (stb__courier_15_latin_ext_s[i] + stb__courier_15_latin_ext_w[i] + 0.5f) * recip_width;
            font[i].t1f = (stb__courier_15_latin_ext_t[i] + stb__courier_15_latin_ext_h[i] + 0.5f) * recip_height;
            font[i].x0f = stb__courier_15_latin_ext_x[i] - 0.5f;
            font[i].y0f = stb__courier_15_latin_ext_y[i] - 0.5f;
            font[i].x1f = stb__courier_15_latin_ext_x[i] + stb__courier_15_latin_ext_w[i] + 0.5f;
            font[i].y1f = stb__courier_15_latin_ext_y[i] + stb__courier_15_latin_ext_h[i] + 0.5f;
            font[i].advance = stb__courier_15_latin_ext_a[i]/16.0f;
        }
    }
}

#ifndef STB_SOMEFONT_CREATE
#define STB_SOMEFONT_CREATE              stb_font_courier_15_latin_ext
#define STB_SOMEFONT_BITMAP_WIDTH        STB_FONT_courier_15_latin_ext_BITMAP_WIDTH
#define STB_SOMEFONT_BITMAP_HEIGHT       STB_FONT_courier_15_latin_ext_BITMAP_HEIGHT
#define STB_SOMEFONT_BITMAP_HEIGHT_POW2  STB_FONT_courier_15_latin_ext_BITMAP_HEIGHT_POW2
#define STB_SOMEFONT_FIRST_CHAR          STB_FONT_courier_15_latin_ext_FIRST_CHAR
#define STB_SOMEFONT_NUM_CHARS           STB_FONT_courier_15_latin_ext_NUM_CHARS
#define STB_SOMEFONT_LINE_SPACING        STB_FONT_courier_15_latin_ext_LINE_SPACING
#endif

