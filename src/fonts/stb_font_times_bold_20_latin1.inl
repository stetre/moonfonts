// Font generated by stb_font_inl_generator.c (4/1 bpp)
//
// Following instructions show how to use the only included font, whatever it is, in
// a generic way so you can replace it with any other font by changing the include.
// To use multiple fonts, replace STB_SOMEFONT_* below with STB_FONT_times_bold_20_latin1_*,
// and separately install each font. Note that the CREATE function call has a
// totally different name; it's just 'stb_font_times_bold_20_latin1'.
//
/* // Example usage:

static stb_fontchar fontdata[STB_SOMEFONT_NUM_CHARS];

static void init(void)
{
    // optionally replace both STB_SOMEFONT_BITMAP_HEIGHT with STB_SOMEFONT_BITMAP_HEIGHT_POW2
    static unsigned char fontpixels[STB_SOMEFONT_BITMAP_HEIGHT][STB_SOMEFONT_BITMAP_WIDTH];
    STB_SOMEFONT_CREATE(fontdata, fontpixels, STB_SOMEFONT_BITMAP_HEIGHT);
    ... create texture ...
    // for best results rendering 1:1 pixels texels, use nearest-neighbor sampling
    // if allowed to scale up, use bilerp
}

// This function positions characters on integer coordinates, and assumes 1:1 texels to pixels
// Appropriate if nearest-neighbor sampling is used
static void draw_string_integer(int x, int y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0, cd->t0); glVertex2i(x + cd->x0, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t0); glVertex2i(x + cd->x1, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t1); glVertex2i(x + cd->x1, y + cd->y1);
        glTexCoord2f(cd->s0, cd->t1); glVertex2i(x + cd->x0, y + cd->y1);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance_int;
    }
    glEnd();
}

// This function positions characters on float coordinates, and doesn't require 1:1 texels to pixels
// Appropriate if bilinear filtering is used
static void draw_string_float(float x, float y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0f, cd->t0f); glVertex2f(x + cd->x0f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t0f); glVertex2f(x + cd->x1f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t1f); glVertex2f(x + cd->x1f, y + cd->y1f);
        glTexCoord2f(cd->s0f, cd->t1f); glVertex2f(x + cd->x0f, y + cd->y1f);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance;
    }
    glEnd();
}
*/

#ifndef STB_FONTCHAR__TYPEDEF
#define STB_FONTCHAR__TYPEDEF
typedef struct
{
    // coordinates if using integer positioning
    float s0,t0,s1,t1;
    signed short x0,y0,x1,y1;
    int   advance_int;
    // coordinates if using floating positioning
    float s0f,t0f,s1f,t1f;
    float x0f,y0f,x1f,y1f;
    float advance;
} stb_fontchar;
#endif

#define STB_FONT_times_bold_20_latin1_BITMAP_WIDTH         256
#define STB_FONT_times_bold_20_latin1_BITMAP_HEIGHT        120
#define STB_FONT_times_bold_20_latin1_BITMAP_HEIGHT_POW2   128

#define STB_FONT_times_bold_20_latin1_FIRST_CHAR            32
#define STB_FONT_times_bold_20_latin1_NUM_CHARS            224

#define STB_FONT_times_bold_20_latin1_LINE_SPACING          13

static unsigned int stb__times_bold_20_latin1_pixels[]={
    0x00000000,0x00000000,0x00000000,0x3310d540,0x20000001,0x98002a28,
    0x1000030a,0x00000000,0x00110010,0x00011088,0x3fe20088,0x01ff4001,
    0x98006fb8,0x3e2002ff,0xffb8001f,0x1fbb6c00,0xe883be60,0x9f90005f,
    0x3eaff200,0xbfff5005,0x950ae009,0x7fcc09b7,0x013f2000,0xed881fe8,
    0x2201debc,0x6c0790ce,0xb80f205f,0x1fcc001f,0x0007ee00,0x9800dddb,
    0x6fc4003f,0x647f404f,0x203b202f,0xbf0005fd,0x6c4ecc00,0xbd739002,
    0xf885b001,0x7cc05f50,0x803ec003,0x7fd42ff8,0x740ffa20,0xdfa81e45,
    0x6c07902f,0x003b8002,0x6d400770,0x698005b0,0x0e8a6400,0x5c008220,
    0x000bf900,0x000000b5,0xb86c8000,0x9803d32f,0x001d8006,0x83ff8853,
    0x2fcc1ff9,0x6a9740f2,0x00000790,0x08000000,0x80000018,0x4cc40c40,
    0x26213109,0x64131099,0x0000555f,0x3b33b620,0x676c400d,0x7f300dec,
    0x0005ff50,0x4cc00000,0x40bff609,0x237c46ff,0x8098103c,0x6676c43c,
    0xffc980de,0x3bf911bf,0x46ffff26,0xd881dfc8,0x400decce,0x0decced8,
    0x1bfffc98,0x3ea3bf91,0x2a3f30ef,0x43f30eff,0x0ffddefc,0xff500580,
    0xf503fe81,0xc83fe81f,0x09ff902f,0xdddfff93,0x00b005ff,0xfff8bfea,
    0xf81ffd00,0x01601e47,0x207fd479,0x6ff883fe,0x6ff881b0,0x1ff501b0,
    0xff503fe8,0xf883fe81,0xfc81b06f,0x4ff91627,0xd8ffe458,0x017cc05f,
    0x3ea0ffe2,0x41ffc41f,0x0ffc1ffa,0x06ffdec4,0x0ba637fc,0xf1005f30,
    0x81ffe65f,0x23742ffe,0x80be603c,0x507ff13c,0x0dff03ff,0x5837fc16,
    0xfa83ff88,0x41ffc41f,0x6ff81ffa,0x27ff10b0,0xa9ffc41a,0xff72fe41,
    0x6c06fd80,0x6ff882ff,0x7c417fec,0x207fe26f,0xf09fd33d,0x402a84df,
    0xff8806fd,0x6c0fff32,0x907e62ff,0x1037ec07,0x220bff61,0x06ff86ff,
    0x2c1bfe0b,0x7c417fec,0x417fec6f,0x6ff86ff8,0x25bf60b0,0xf9096fd8,
    0x8807fd4b,0x3fe01fff,0x41fff00f,0xfff00fff,0xf103fe61,0x7fc3f449,
    0x3e201926,0x7fc401ff,0xfe81ffe2,0x7901b50f,0x007ffe20,0x7fc03ffe,
    0x5837fc0f,0x2160dff0,0xfff00fff,0xf807ffc1,0x837fc0ff,0x077ff305,
    0x320effe6,0x403fea5f,0xf305ffac,0x8fff40ff,0x3fa07ff9,0xd01ff11f,
    0x3e07d45f,0x3200b16f,0x7c405ffa,0x403ff62f,0x206dc6ff,0xbff5903c,
    0x207ff980,0x37fc1ffe,0x20dff058,0xd03ffcc5,0x1ffe63ff,0x7fc1ffe8,
    0x7ff40b06,0x203ffa00,0x41fee5fc,0x301ffd48,0x7ff40fff,0x740fff32,
    0x207fe2ff,0xf0974ffb,0x100bf9ff,0x8803ffa9,0x0ffe62ff,0x17e0bfea,
    0x3fa91079,0xff9aa80f,0xf0bffa07,0x7fc160df,0x7ff98b06,0x7ccbffa0,
    0x0bffa07f,0xa8160dff,0x82fd405f,0x09fb1ffc,0x827fd46e,0x3ffe07ff,
    0xff81ffe0,0x540bfa0f,0xfff04eff,0x23700bb5,0x3e204ffa,0x1077d42f,
    0x91fa07fd,0x3fea3707,0x0fff3c84,0x3fe07ffc,0x1bfe0b06,0xf03ffc2c,
    0x03ffc1ff,0x6ff81fff,0x802f80b0,0xdbdf902f,0x3fe2c0bf,0x80ffd80f,
    0x7fec6ff8,0x546ff880,0x1bfe603f,0xb00b37fc,0xf100fff8,0x99fb305f,
    0x23fc05bf,0x7ffc583c,0x0ffd9e40,0xff86ff88,0x1bfe0b06,0x407fec2c,
    0x7fec6ff8,0xf86ff880,0x0480b06f,0x8afe4090,0x33336a00,0xff983ffd,
    0x4c2ffa83,0x2ffa83ff,0x3a2106e8,0x8e6ff83f,0x6666d409,0x3fe03ffd,
    0x01bfe202,0x543c8bf3,0x3ffdcccd,0x83ff99e4,0x7fd82ffa,0x41ff60b0,
    0xa83ff985,0x1ffcc2ff,0x7ec17fd4,0x88c88b07,0x07119103,0x85802fe4,
    0xdf506ff8,0xa81ff441,0x0ffa20ef,0x4fea0fc4,0x06ff84f8,0xdff10b0d,
    0x803ff388,0x3e204ffa,0x22161e45,0xf51e46ff,0x81ff441d,0x80e42ffa,
    0x80e42ffa,0x3fa20efa,0x441df503,0x5ff503fe,0x667d41c8,0x0199f500,
    0x254037ec,0xb303ffd8,0x803bd79f,0x1debcfd9,0x5f106cc0,0x1ffe07e2,
    0xb04a8d91,0x7c7d47ff,0xbffb5006,0x1e41f707,0x8fff6095,0x5e7ecc3c,
    0x7fd401de,0x7d402cce,0x4c02ccef,0x01debcfd,0x6f5e7ecc,0x677fd401,
    0x01dd882c,0xd9807762,0x3fee02de,0x17fff543,0x44000620,0x64c18001,
    0x7fe4c1dc,0x25ffecef,0x7f543ffb,0x073322ff,0xb9802600,0x0ffee570,
    0x2e5fffd5,0x20006202,0x01880018,0x20003100,0x01880018,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00204000,0x00000400,0x00000000,0x80004000,0x8000111a,0x3e20531a,
    0x3bb220bf,0x46a2dfef,0x088d4029,0x400ffb88,0x0a8a2000,0x00531a80,
    0xa8010144,0xfb71001a,0x300b7bbb,0x07ae01df,0x2007fe20,0x3f202ff9,
    0x6c27ec04,0xccb9805f,0xfd003aba,0x07501ddf,0x07fadf30,0xfff11be2,
    0x6f98369f,0x3ffa03fd,0x03fa00ee,0xf9005cc8,0xf980bf57,0x2e003fd6,
    0x0aceb880,0xe8805fa8,0x403ec44f,0x07e400fc,0x74007ee0,0x03ec06ee,
    0x3f7ea13e,0x4402f202,0x76d5cc03,0x36016e03,0x1be20b73,0x369ffffb,
    0x305b9ec0,0xe807fb57,0x0aa9100f,0x0b6236a0,0x002dcf60,0x3e56d709,
    0x3a200fa8,0xd00f105f,0x805f9003,0x21b5001d,0xa80ec02d,0x41aa5d05,
    0x0048803d,0x00027c00,0x7ff46f88,0x0001b4ff,0x007f4000,0x0000193b,
    0x5d440000,0x034b5f82,0x17fdc035,0x6c000070,0x0200001f,0x04000006,
    0x3507b026,0xea82a131,0x6fe446ff,0xf930fdc1,0x3f2237ff,0xfe8df11d,
    0x4c1b4fff,0x401cfffc,0x401fd005,0x3f2601e8,0x2ffeeeff,0x9fa80580,
    0x2ffe21fe,0x00d4c065,0x2a001ffd,0x7542efff,0x9307f43f,0xffdddfff,
    0x77ffe4c5,0x3262ffee,0xf931cfff,0x3f2639ff,0x31661cff,0x225fd77d,
    0x427ffc42,0x444fa80d,0x441b06ff,0x7fffe46f,0x0fff01b4,0xfd005f30,
    0x4017cc01,0x0174c6ff,0x2bf00be6,0x7fff45ff,0xdf55d300,0x007ff881,
    0x2d83ffd4,0x8dff07d8,0x46ff82e9,0x07ff82e9,0x1ffe0fff,0xf56f88ee,
    0xfffe838f,0x87f98243,0xf88b06ff,0xa7fffcc6,0x806ff80d,0x0fe806fd,
    0x3e01bf60,0x2015426f,0x2fea06fd,0x7fcc1c9a,0xd1fe82ff,0x07ff987f,
    0x443ffd80,0xff05f105,0xff82a84d,0x7fc15426,0x3e0dff06,0x3f61d86f,
    0xc838bf72,0x4121fffa,0x37fc0ff8,0x4437c458,0xf01b4ffd,0xfff880df,
    0x8807f401,0x7fc01fff,0x3e201926,0x99fb01ff,0x3fffd880,0x84fe8fe4,
    0x44000fff,0x100647ff,0x926ff879,0x1926ff81,0xdff06ff8,0x89e1bfe0,
    0x447fb0ff,0x1fff9481,0x20ffc412,0xf88b06ff,0x80da5406,0x7d6406ff,
    0x807f405f,0x7c05ffac,0x3200b16f,0xdfb05ffa,0x1fffa007,0x6c27f6d4,
    0xfc8001ff,0xcc80733f,0x058b7fc0,0x4058b7fc,0x0dff06ff,0x5cb11bfe,
    0x141ff36f,0x257ff648,0x7fc1ff88,0x06f88b06,0xff80da4c,0x7ff52206,
    0x2203fa00,0x7c01ffd4,0x8805fcff,0xf901ffd4,0xf3b0403f,0x746ec45f,
    0x05ff984f,0x47ffc40a,0x7c07dc05,0x7c05fcff,0x7c05fcff,0x20dff06f,
    0x3f2686ff,0x81c4dfb4,0x133ffa24,0x37fc3fcc,0x2037c458,0xdff01b49,
    0x4ffa8dc0,0x46e03fa0,0x3fe04ffa,0x1b805daf,0xff109ff5,0xb1c4975d,
    0xd2fd83f2,0x0ffe609f,0xeffb80f2,0xff83f401,0x7fc05daf,0x7fc05daf,
    0x3e0dff06,0xff90d86f,0x44e2bf5b,0x3ffe2240,0xff0df506,0x0df1160d,
    0xff01b498,0x3ffe2c0d,0x8b01fd00,0xdff00fff,0x3fe2c02c,0x4fffb80f,
    0x4bb587c4,0xcffbdff8,0xb9fd9300,0x0fff003b,0xdff03fb0,0x59bfe02c,
    0xff837fc0,0x570dff06,0x5f6c37a6,0x3ea120e2,0xf05f707f,0xdf1160df,
    0xf01b4980,0x3336a0df,0xfd03ffdc,0xdcccda81,0x4dff03ff,0x99b50263,
    0x2907ffb9,0x33b3f600,0x5c67e40c,0x04b801ef,0x6403ffc0,0x8e6ff82f,
    0x4737fc09,0xf837fc09,0x20dff06f,0x2066000d,0x360ff704,0x160ffb06,
    0xb4980df1,0x160dff01,0x7f41bfe2,0x37fc42c0,0xb0d06ff8,0x388dff10,
    0x000d3100,0x0007e400,0x3f700fff,0x21a0dff0,0xff0d06ff,0x7c1bfe0d,
    0x001b106f,0x6c0d1055,0xf500f887,0x7c41c85f,0x06d2600f,0x82543ffc,
    0x7fc43ffd,0x7fec12a0,0x6447ff83,0xffd82546,0x010002e3,0x3ee20000,
    0x01ffe000,0x1ffe09d1,0x8fff0d91,0x07ff86c8,0x1ffe0fff,0x57102c88,
    0x2039fb50,0x2a00ec46,0x302cceff,0x64e60133,0x2ffff260,0xea87ff71,
    0x33312fff,0x3aa1ffdc,0xff932fff,0x4bffd9df,0x7f543ffb,0x000032ff,
    0x04cc0000,0xbfffba80,0xc981c882,0xffecefff,0x3bfff265,0x3265ffec,
    0xf931bfff,0x3f2637ff,0x2e601bff,0x0002bbab,0x22000c08,0x00000001,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x0080c0c4,
    0x0b2a0044,0x9100d540,0x00000019,0x00088000,0x02aa0553,0x66406aa0,
    0x98182200,0x0004402a,0x00405950,0x00401aa8,0x22008022,0x10300000,
    0x73bf9bd9,0x00dbdb85,0x7ffc405b,0x202fcc00,0x3ee04ffc,0xaf441cbe,
    0x99fb80fc,0xd99f503f,0x702fd807,0x0ef9809f,0x3a04ffb8,0xfe881f12,
    0x4c1ff101,0xff10bd3f,0x2e32a01f,0x6c0bf503,0x885d01ff,0x01f104eb,
    0x403f6bd1,0x10ffc469,0x8bf98bfd,0x6405b84f,0x76404d8d,0x3eabe200,
    0x6ffdd880,0x01fd6f88,0x309f55f9,0x880ffcdf,0x203dc02f,0xabf880eb,
    0x1a61f00f,0xffa82744,0x1be33ea2,0xc8136372,0x407d403f,0x5b81f989,
    0x0f609f10,0x00feb7c4,0x41ffc479,0x2fee1ffb,0x007c47f8,0x2e00c891,
    0x0730dc00,0x40806211,0xf7008200,0x2981ff4d,0x05c01700,0x260e61b8,
    0x038812e6,0x22083ff3,0x10322440,0xa801f739,0xd30d9101,0x2a13e201,
    0xe8020405,0xb103ff21,0xf9fe4dff,0xa98016c7,0x31099881,0x884cc413,
    0x03530099,0x99881a98,0xfc813310,0x54c07fa6,0x22014401,0x54c14402,
    0x11ddaaec,0x82662133,0x02880ff8,0x22200d4c,0x035300ee,0x05d0fee2,
    0x03e227c4,0x69806a60,0x23623ff4,0x17f30ffe,0x4402dc9f,0x6c46d9ee,
    0x449ff36f,0x89ff36fd,0x40efaae9,0x20efaae9,0x9ff36fd8,0x03f96fc8,
    0x81df55d3,0x442e9cc8,0x6442e9cc,0x3fae2e9c,0xb13efeee,0xd13fe6df,
    0x2e9cc88d,0x077d574c,0x13fafb62,0x40db3dd1,0xf1016e4d,0x74403d89,
    0x49706d9e,0xe86c7ff8,0x32f6e1ff,0xf7001d10,0xdf917ea7,0x9bf227f4,
    0xe8ff44fe,0xfe8ff43f,0x9fd37e43,0x1fb16fc8,0x87fd1fe8,0xfb8db1fb,
    0xb1fb8db1,0x03e25d0d,0x227f4df9,0x6d8fdc4c,0x43fe8ff4,0xb8df52fc,
    0x6ecbf53f,0x801d10ba,0x00d50dfa,0x217ea7f7,0xc9ffe21e,0x0207ffa1,
    0x20ddd45b,0x41ff31fe,0x913fa6fc,0x3227f4df,0xfc89fd1f,0x6fc89fd1,
    0x4df913fa,0xe8fe45fb,0xfc87ec4f,0x0fe43f61,0xf07f21fb,0x9bf21a61,
    0x361dc4fe,0x7e43f90f,0x1ff89fd1,0x8ff41ff5,0xd0260ff9,0x4ccc3c85,
    0x1bd70e88,0x1ff31fe8,0xcbffc3c4,0x5c03ffc2,0x43ee7ee5,0x3ff31ff9,
    0x89fd37e4,0x413fa6fc,0xb504feda,0x26fc89fd,0x737e44fe,0x3fb6a0ff,
    0x3333fe24,0x999ff11c,0x333fe239,0x99fb51cc,0x37e459db,0x221989fd,
    0x81ccccff,0x3e64feda,0x265ff31f,0x03ff31ff,0x00fee2dc,0x93eee67b,
    0x3ff31ff9,0x67fec25c,0x4405ff83,0x3ee3fa0e,0x3e63ff13,0xfe9bee1f,
    0x9fd37dc4,0x4fe8dd88,0x27f46ec4,0x44fe9bee,0x83fee6fc,0x24fe8dd8,
    0xff102ff8,0x40bfe205,0xcdecceea,0x4fe9bee2,0x1017fc40,0x4c9fd1bb,
    0x21ff31ff,0x3ff31ff8,0xfaa83a20,0x1fc1aa03,0x3fe63ff1,0x3fe20b61,
    0x401ffa85,0x7d47fc2d,0x37cc7fa5,0x44fe9fee,0xb13fa7fb,0xfb13fa5f,
    0xff713fa5,0x5bf227f4,0x97ec6fa8,0x22ff44fe,0x74117fa0,0x7479045f,
    0x3fa7fb81,0x17fa1544,0x4fe97ec1,0x47f98ffc,0x40df31fe,0x81fce62e,
    0xe86a80e8,0x3c4df31f,0xfe81ff70,0x7e42dc01,0x4fee2fb8,0x47fd44fa,
    0x7fd44ffa,0x3e24ffa8,0x10cffbdf,0x19ff7bff,0x7fd47fd4,0x4fd77e44,
    0x2f7fe24f,0x3ff20cff,0x3ff20b9c,0x3ff20b9c,0x447a0b9c,0xa8ffa80f,
    0x87fe64ff,0x10b9cffc,0x19ff7bff,0x43fa97dc,0x209f53fb,0x7fffe45b,
    0x8d883d80,0x4fa9fdc1,0x6cec416a,0x401debbe,0xdae980e8,0x04ebec85,
    0x1dfd5ffd,0xefeaffe8,0x3ee33f20,0x2e33f21e,0x57ff41ef,0xdfd30efe,
    0x9f90b9d1,0xfd83df71,0xeffd81ef,0x41effd81,0x7f40d30f,0xf10efeaf,
    0x1effd81f,0x77dc67e4,0x8275f641,0xd104ebec,0x3541fc01,0x64377744,
    0x816c4ebe,0x50004c0a,0x0c01a805,0x00100040,0x00400000,0x22000000,
    0x22004400,0x20044300,0x02201000,0x30018000,0x0d401a80,0x5554c05c,
    0x00040601,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x05530001,0x00400e4c,0x04401000,
    0x08008100,0x22000800,0x00000419,0x00040080,0x40020044,0x22001000,
    0xfa801820,0x3f20ffff,0x403fffff,0x3b2e0081,0x0bf6002e,0xa8064644,
    0xdf902dbd,0x275c4397,0x6dc405d0,0x305bdddf,0x807bb9b9,0x3202efeb,
    0x3bcedcee,0xbd99db10,0x15771001,0x7bb9b930,0x81db9900,0xb80cedac,
    0xdc80cdbc,0xb7b502ec,0x2016c77d,0x745ffffd,0x00ffffff,0x84fb87ea,
    0x4401fe7a,0x0dce602f,0x40fc9fc4,0x886ffdd8,0x440b704f,0x43ec44fe,
    0x505a80d9,0x981fffbd,0x1fe442fe,0x3fa07fd4,0x980fe603,0x2e05a80d,
    0x9ae5fa9f,0x897dc3ff,0xfe97e44f,0x7d107d41,0x55b1025c,0x5e7c4355,
    0x3e205daa,0x3a17f61f,0x2600db0f,0xb04dc802,0x1117ea5f,0x427c4062,
    0xbfd100e9,0x4cb31e20,0x385abaac,0xfe88bfea,0xff10fa05,0x303ff507,
    0x64ecc09f,0x20b51bbc,0x364f8afd,0xff8dfb1f,0x7fc43fe2,0x87d8df90,
    0xcb81e23b,0x7d033009,0xf70fff40,0x5d17ff07,0x3006a600,0x54bfe035,
    0x2035307f,0x202e84f8,0xb0e02ffb,0x575986f4,0x3f20ff80,0xfb0e601f,
    0x8dff105f,0xe9600ff9,0x10ae3f77,0xd8e607ff,0xf877fc5f,0x7dc3fe66,
    0x5037fe0f,0xfffd01e8,0x01f3003b,0xf987fef2,0x10cffe81,0x9ee88333,
    0xfaae986d,0x54bfe20e,0x27ba20ff,0x5c4f886d,0x007ff405,0x185f5588,
    0x20fd4091,0x7c000fff,0x1fff00ff,0x205defe4,0xa7cdf658,0x804ff848,
    0x7fe41ef8,0x3fe61ebf,0x7ec3ff51,0x212e04ff,0x2ffffff8,0x9ba83640,
    0x74c3c1ff,0x0bfe64ff,0xd17ea7f7,0xf98ffa3f,0x5c3ff52f,0xfa8bf53f,
    0x4401d10d,0x4ea007ff,0x6442c07d,0xfff10dff,0x07ff9800,0xdfe87ffa,
    0xd8ea3ffb,0xc961ed9f,0x204fffff,0xfffb00eb,0x3ea7fd07,0x3fffa20f,
    0x5106881e,0xe80fffd9,0x3ff35883,0xffeae428,0x47fa0ba2,0x47f20ff9,
    0x4bfe64fe,0x47fa1ffa,0x26660ff9,0x263c85d0,0x4aa007ff,0x5c1600fe,
    0xfff14fff,0x07ff9800,0x7fc4bffa,0xb154ff72,0x26585f9f,0x201aefda,
    0x3ffaa00d,0x65ffdc2f,0xfffc887f,0x9801e83f,0x01f301ff,0x807fe61b,
    0x1fff12fc,0x23ff3095,0xeda81ff9,0x54bfe24f,0x23ff30ff,0x16e01ff9,
    0x0fff87f7,0x0beeb100,0xdfd10244,0x3aa07ffc,0x1ffe2eff,0xff30fff8,
    0x2c47fe65,0x8489bafb,0x202805fa,0x87ffa9fc,0x045fdbb8,0x790fffb3,
    0x5c03ee00,0xfdcceb86,0x47ff00df,0xf105effa,0x887fe63f,0x7c4fe8dd,
    0x7c4ff52f,0x203ff31f,0x0feaa0e8,0xac003ffb,0x2e370de8,0xfb37dc02,
    0x87ff703f,0xff880ffd,0x7c4ffe26,0xf57e962f,0x13e20ae7,0x2e7f8800,
    0x07fe01ff,0x983ff709,0x740d3006,0xfffffc83,0xeff881ff,0x043bff60,
    0x237cc7fa,0xd89fd2fd,0xfe8bf52f,0x1740df31,0xff30fe73,0x9966140b,
    0x2201661c,0x213fe64f,0x7fcc3ffa,0x742ffa83,0x4c1ff13f,0x5993ccad,
    0x9cfdc88b,0x981cc3a8,0x403fe27f,0xe80f82fb,0x77c41f06,0x07cc0721,
    0x7fdd554c,0x5dffb00b,0x99ffff73,0x49f53fb8,0xcffbdff8,0x0fe4fe60,
    0x827d4fee,0x7fffe45b,0x641ffcc0,0x5a80da83,0x21a63fb8,0x7fd41ffa,
    0x220efa83,0x36f983fe,0x501b509f,0xfff5570b,0x1ffc41ff,0x09f10fd8,
    0x42fc0bee,0xfd87903f,0x1ae01cdf,0x100ffcc0,0x325dfff9,0xbec80eff,
    0xb8cfc84e,0x75f541ef,0x09d7d902,0x03f803a2,0x3bb9fd93,0x6ee6ecc0,
    0x99ffd503,0x2f7f6201,0xb300ceeb,0x403bd79f,0x2605dcea,0x503ddcdd,
    0x07ffb7d9,0x372603fd,0x5dd40bca,0x2f3b3a00,0x0c16a03c,0xf3000880,
    0x2026003f,0x00018008,0x401800c0,0x400d401a,0x00880018,0x98800310,
    0x00c40009,0x01100020,0x02004110,0x20008040,0x00c00260,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x40000000,0x5500401b,0x40000198,0x01aa81a9,0x20988553,
    0x22040099,0x81310999,0x52dfffb8,0xfc88dffd,0x1bfff71d,0x217fffb3,
    0x50083fc8,0x05fe9859,0x2218aa20,0x93055099,0x32237fff,0xbfff71df,
    0x003feb85,0xff700100,0x2666a609,0x2e03fea0,0x7fcc1efe,0x5803ff31,
    0x8bf5bb00,0x85fb06fa,0x40ffe5fc,0x77fd46d9,0x3f603f30,0x27ffc41f,
    0x0fff606c,0x05881ffd,0x81fff10b,0x5f9005fc,0x7f449dd7,0x440ffdde,
    0xb81b06ff,0x307904ff,0x220959fd,0x7400eebc,0x74ef4c4f,0x21fe63ef,
    0x20fffffa,0x3ff30ff8,0x2e017cc0,0xfa83fd2f,0x7e41fc40,0xfb30ffe5,
    0x44ff90df,0x207ff205,0x4243fffe,0x7fdc5ff9,0x43641543,0x7e44d8ec,
    0x3e4fb805,0xd8ffec4f,0xb06ff85f,0x160fff10,0x817ffe64,0x400fc9fd,
    0xc97f44fe,0x1388084f,0x40887ff9,0x037ec019,0xa824c3fa,0x5fc814c1,
    0x37ec0ffe,0x01a9ffc4,0x2b207ff2,0x74121fff,0x1bfe20ff,0x213dfb09,
    0xbf906448,0x8bfe02a6,0x72fe44fe,0x20dff0ff,0x985ff905,0x8804c302,
    0x454c01ff,0x47fe64fe,0x408086fb,0x00442ff8,0x407ffe20,0x26201ff8,
    0x20266209,0x40ffe5fc,0x2dfb06fd,0x40ffe404,0x121fff94,0xff527fd4,
    0xfd51223f,0x04cc479f,0x7fee77e4,0xfe87fe20,0xff52fe44,0x0b06ff81,
    0x1091bfe2,0x102a6333,0xd1015ff5,0xf89ffd7f,0x0709f91f,0x2a81ff10,
    0x2ffd6400,0x2202ff88,0x1bfa26fe,0x03ff97f2,0x3fe60df9,0x0ffe403b,
    0x12bffb24,0x3eb67ff8,0xdf90374f,0xf90dfd10,0xff32fecd,0x3f227f45,
    0xff03fea5,0xffd8160d,0xffb10711,0x6cc1ffd9,0x3fd81dff,0xce989ff1,
    0x02cc0ee8,0x11dc27d4,0x7f522057,0x80dfd00f,0x437e46fc,0x02ffe5fc,
    0xffe81bf2,0x40ffe400,0x133ffa24,0xf39affc8,0x37e416ff,0x5fc86fc8,
    0x47ff1fee,0x72fe44fe,0x20dff0ff,0x653fea05,0x3e5ff700,0x80ffcc3f,
    0x213fa2ff,0x2fa81bbb,0x5c80ec80,0x46e0bfee,0xff704ffa,0x6fc83739,
    0x77ec37e4,0xc82cffc8,0x017ea06f,0x11207ff2,0x7cc0dfff,0x9ff90cdf,
    0x641bf207,0x2a5fc86f,0x457f61ff,0x8ffe44ff,0x06ff84fd,0x49ffe80b,
    0x4fe9fee0,0x7cc0ffcc,0xb913fa1f,0x4c037d40,0x7d4fd01f,0x7ffc584f,
    0x05dff900,0x86fc8df9,0xffbafffd,0x7c06fc82,0xff90c882,0xfff50901,
    0x224ffe80,0xdf900fff,0x3f21bf20,0xfd11fea5,0xfc89fd9d,0xff05fede,
    0xff70160d,0xd3fdc01d,0x81ff989f,0x13fa2ff8,0x27bdfffd,0xd07d15fe,
    0x81ff1043,0x6666d42b,0x16603ffd,0x37e46fc8,0xc8020cf4,0xfd82406f,
    0x4120ff95,0x7fd407fb,0xf902fec1,0x321bf20d,0x441bee6f,0x5fc89fd0,
    0x83fec011,0x02ffc405,0x44fe9fee,0x7fd01ff9,0x3fe627f4,0x6fe9ffff,
    0xaacd8bf1,0xb0bfe65a,0x0dff10b0,0x6fc817d4,0x01fc37e4,0x1911bf60,
    0x6cbea071,0x3606885f,0xfa86f807,0x0a3fee02,0x4df90df9,0x4fe801fc,
    0xfa802fe4,0x6400e42f,0xd3fdc01f,0x01ff989f,0x17feedf9,0x9f53339b,
    0xb8ba1ff5,0x2a5fffff,0xa81712ff,0x207ffb04,0x8dfb01fa,0x027cc6fd,
    0x9f51ff60,0x7de64019,0x0e7ed40d,0xd02c8068,0xd81dfb00,0xbccdc86f,
    0x89fd002e,0x3ea006fd,0x1002ccef,0x74ff700d,0x80ffcc4f,0xdfebffe8,
    0x1e885f11,0x7cc35b93,0x6c4fffff,0x0ffee00d,0x985fffd5,0x5fff3009,
    0xd88bffe6,0xfff73002,0x00776239,0x0040000c,0x40001004,0x1042fff9,
    0x6f754001,0x005bdb31,0x01000188,0xfabffe88,0xbff911ef,0x30084401,
    0x001999bb,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x21dffb02,0x1ffa25e9,0xbdfff930,
    0xff930179,0xb880017f,0xfeeeffff,0x01ffa22f,0x9989bfe6,0x30999999,
    0x9dddfff9,0xcfffc983,0x3fff2601,0x877fea0c,0xeeefffc9,0xfff933ff,
    0x5c05bdd9,0xffecdeff,0x0bbffea5,0x3fa67fd5,0x9fd50cff,0x37fff663,
    0xfc980bcd,0x2ffeeeff,0xfcaf40cc,0xff893ee0,0x1fee0744,0xdf737fc0,
    0x001bfe03,0x21ffce88,0x03fe42e8,0x20066fd8,0xffb37fc1,0x400fff03,
    0x03e887ff,0x87b11ffe,0x13fe65ff,0xfff106e4,0xb07ffa81,0x42fff885,
    0x25ff884d,0xdff00efc,0x3fe62e98,0x0ff5be21,0x27fc8bf9,0x007fb848,
    0x1ffc8dff,0x0099eff8,0x8ffe4e40,0x07fb8550,0x400cdf90,0xff337fc1,
    0x400dff0b,0x00ec47fe,0xf0e61ffa,0x80ffe8bf,0xb03ffd84,0x705887ff,
    0xf02ccdff,0x81ffd8bf,0x315426ff,0x020883ff,0x2ff98151,0x26ff7037,
    0xa8dff00a,0xbeff85ff,0x49800dfd,0x418e3ff9,0x026667fb,0x0c00cdf9,
    0x4ff99bfe,0x3a006ff8,0x2003667f,0x204667fe,0x0ffe45ff,0x81bfea0c,
    0x00647ff8,0x80b19ffb,0x27fd45ff,0x20c937fc,0x40998819,0x5fe80998,
    0x3b3fee0b,0x46ff80ff,0x5ff87ff8,0x43601bfa,0x5c0d1ffc,0x902fee7f,
    0x20c00cdf,0x07ff26ff,0xfe801bfe,0x7f400b57,0x2ffc0727,0x3e201bfa,
    0x7fe401ff,0xff880733,0x2ffc00df,0x3fe1bfe6,0xd1000b16,0x86fe88df,
    0xf7049ffb,0xca8ffa3f,0xff2ccfff,0x325ff83f,0xc8ae01ff,0x2e07ecff,
    0x7e40727f,0xff060066,0x7c09fdbf,0x3ffa006f,0xfd001ffc,0x3e03f95f,
    0x1ffc98df,0x804ffc80,0x0058fff8,0xf801dff5,0x40fff85f,0x005fcfff,
    0xdf90df90,0x677fdd54,0xfd3fdc2a,0xfd0dff09,0x325ff83f,0x99d101ff,
    0x0f95ffd9,0x202cbfdc,0x060066fc,0xbfd53dff,0x400dff03,0x0effcffe,
    0xfdaffe80,0xffbfff01,0x3ffe600d,0x3dff7000,0x027ff400,0x3ffe17fe,
    0x2ed7ffc1,0x1bf20770,0xe9999bf2,0x7dc199ef,0x3fe13fa7,0x7c0fff86,
    0xc81ffa5f,0x058ffe40,0x817f3fee,0x060066fc,0x37fc4dff,0xe81037fc,
    0x00bff97f,0xf80ecffd,0x007ffb5f,0x40105ffd,0x326007ff,0x3fe02fff,
    0xff87ff85,0x17fd4166,0x37e437e4,0x33dfd333,0x3fa7fb83,0x7c46ff84,
    0xdbeff86f,0x907500ef,0x2098e3ff,0x02ffbffb,0x0c00cdf9,0x3ffb1bfe,
    0x85306ff8,0x13ffa7fe,0x80d4ffd0,0x3fff15ff,0x482ffdc0,0x4401ffe0,
    0x201dff54,0x2ffc45ff,0x84c737fc,0x6fc80ff8,0x2aaa6fc8,0x5c2aaefe,
    0x3e13fa7f,0x40ffdc6f,0x58009eff,0x8903ff90,0x01ff97fb,0x0c00cdf9,
    0x1ffd1bfe,0x83906ff8,0x3ffe27fe,0x401ffa02,0x1bfea5ff,0x5c07ffc4,
    0x201ffe03,0x827fec58,0x0ffe45ff,0x006837fc,0x1bf21bf2,0xff7037f4,
    0x37fc27f4,0x3fe07ff5,0x32059006,0x2e3dc1ff,0x3217fa7f,0xf060066f,
    0x41ffd4df,0x40fa87ff,0x7ffd47ff,0x200fff02,0x27fe46ff,0x7dc1ffec,
    0x101ffe02,0x2fff885d,0xff537fc4,0x911ffe05,0x437ec00d,0x7fdcc6fd,
    0x7ff441bf,0x931effab,0x17dfbfff,0x17fff930,0xa877f220,0xfdcefffb,
    0x4fffa25f,0xfd30dffd,0x26666a5f,0xf9329999,0x85bddbff,0xdcefffc9,
    0x3fee67fe,0xffff70cf,0x3ffee619,0xfff9301c,0x867ff417,0xedccfffa,
    0xfba82ffe,0xfea82bff,0x3fffea1c,0xfbfff933,0xff93017d,0x0bffd9df,
    0x98bffe60,0x00002fff,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x40000000,0x51cfffc9,
    0xddffddff,0x3ff265fd,0xfffb99cf,0xdfff931c,0xffc987bd,0x9fff503f,
    0xa9805103,0x31099881,0x84ccc413,0x0c544098,0x26663331,0x35301311,
    0x5400d4c0,0x132a9804,0x00008400,0x9802b800,0x2620aa1a,0x40815319,
    0x26666600,0xd51ffe09,0x2d8ffea1,0x7ff43ffc,0xff16ff80,0x20dffd09,
    0x6440ffed,0x77442e9c,0xb7ec46d9,0x3fe64ff9,0x6e43f10e,0x57fe66d9,
    0x83d14ffa,0x74c5fadd,0x2a00efaa,0x367b6205,0x2f93004e,0x8dc802dc,
    0x904c9bdb,0x7d574407,0x222fabee,0x0ffecffd,0xe984a92a,0x3e2ffc9a,
    0xff51546f,0x1ffe14c7,0x37f41ffa,0xfdc81ff9,0x3ff6441f,0x5c6d8fdc,
    0xfc8bf53f,0xff913fa6,0x2cbf1244,0x26fe9bf6,0x1fe97dc4,0x01ff47fa,
    0xa9fdc0b5,0x67f5406f,0x019fd710,0x3f6b7fa2,0x6c07900e,0x374ff90f,
    0x1ffcbfee,0x94c3e8fa,0x37fc6ff8,0x087ff502,0x3ff43ffc,0x3fee6fe8,
    0x22ffce42,0xfd87fe8c,0x8ff43f90,0x9bf20ff9,0x97fc44fe,0x23bfe20b,
    0x6c4ffcc0,0x7f4198ff,0xd1fc8930,0xb02d409f,0x107ff65f,0xd9805df9,
    0x217c42df,0xc80f206a,0x7e4df91f,0x4fe9fee0,0x02fa97d4,0x6ff83ff9,
    0x201ffd40,0x07fe87ff,0x43fecdfd,0xea41ffd4,0x667fc47f,0x23ff31cc,
    0x9bf21ff9,0x96fd84fe,0xd03fff90,0x97ff179f,0xa801ff88,0x332a4fed,
    0x14cccedc,0x5ff575ff,0x00073f66,0x1e67fd71,0xecccb8fc,0xc983ccce,
    0x1ccccffd,0x84fe9fee,0x985fd2fe,0x06ff84ff,0x3e01ffd4,0xffccccff,
    0xf71dfd07,0x3fea905d,0x11ffa354,0x3fe205ff,0x7dc3ff31,0x3e613fa6,
    0xfff902bf,0xf94ffb81,0x02ff889d,0x93fa3762,0xccedccca,0x13bff14c,
    0x2ffaa3ff,0x4fea8000,0x65c7a0d3,0x3ccceecc,0x07fdc764,0x27f4ff70,
    0x41fe8ff4,0x6ff80ffe,0x201ffd40,0xe9999fff,0x59ffd07f,0x2fff2405,
    0x3fa1ffa4,0x263fd045,0xfd3fdc6f,0x221bfa09,0xf883ff51,0xd03ff32f,
    0xe97ec0df,0xf816a04f,0xa81ff33f,0x64401dfd,0x542e82ef,0xfd80f206,
    0x2085ff52,0x513fa7fb,0xf507ea3f,0x0dff145f,0x7c03ffa8,0xd07fe87f,
    0xfc9200df,0x21ffa3cf,0x20b9cffc,0xa89f53fb,0x04ffa8ff,0x64d107f7,
    0x3747d80f,0x1b9cffb8,0x9ff7bff1,0xfc816a01,0x5c409f54,0x3f6a0bef,
    0x273fa01c,0x40f206fc,0xffb9cff8,0x3ee0b8ae,0x43d13fa7,0x737fc42e,
    0x2a037fc7,0x3ffc03ff,0x6fe83ff4,0x7ffc4900,0x7ec1ffa0,0xebec81ef,
    0xfd5ffd04,0x2203e01d,0x9503ebef,0x3ff203b8,0x5c67e42e,0x20b501ef,
    0x04ebfbc8,0x5f65f6a0,0x76d6dc00,0x55553dad,0x6c5555bb,0xffe99eff,
    0x2fffa20e,0x4551effa,0xddffc82b,0x01bfe2fe,0xff807ff5,0xfd07fe87,
    0x9fb1600d,0x02207fe8,0x00020060,0x08018401,0x00044008,0x06009500,
    0x00010800,0xdddddb00,0x80889ddd,0x00000008,0x203ffc00,0x7fc03ffb,
    0xf80ffe87,0xf98b007f,0x0007ff41,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0xf9300000,0xfd5037ff,0xff7305df,0xfff7337f,
    0x3ffee639,0x19f9301b,0x9fff7324,0x00000003,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x80000000,0x43531998,
    0x420400a9,0x21511998,0x99899998,0x20e60100,0x00800839,0x020100ee,
    0x0bb80008,0x90220202,0xffffffff,0x7ffffe4f,0x88087fff,0x2a144100,
    0x2195000a,0x088882a8,0x44444444,0x4ccccc08,0x00001999,0xffdbffd8,
    0x901ffdca,0x1ff915c5,0x3ff629fd,0xfb80bf8a,0x3e63f980,0x5c417cc3,
    0xd813204e,0x1dfd11ff,0x2e17ff4c,0x53fe63bb,0x443fa6f8,0x26623e9c,
    0x27988889,0x99999998,0x3f61d419,0x7ff1c2df,0x99fb97e6,0x6c9ff13f,
    0x3fffee1f,0xffffff13,0x3ba21fff,0x0eeeeeee,0x7fdc0000,0x3fa1ffb1,
    0x51ae6b83,0x445b59ff,0xf1039cff,0x26fe609d,0x08fc423f,0x980027c4,
    0xf5331f98,0x8fd4be27,0xd10f99f8,0x7c5feadf,0x017ad31f,0x44444788,
    0x7e408888,0xff951730,0xb9ffc5db,0x3eabf20e,0x49d0bfa4,0x222dddda,
    0x08888888,0x80000000,0xd9bf27fb,0xfa97d44f,0x700ffd42,0x4ee409ff,
    0x87ff300f,0x86e9c9fe,0x33332e4f,0x3223cccc,0x8d51f986,0x5f11f53c,
    0x74df1498,0x01baea0f,0x3fff2788,0x227fffff,0x2ea2067b,0x10171440,
    0x01c40404,0x00000000,0xc9fee000,0xfa93f66f,0xff50df56,0x305fe801,
    0x7cc1761f,0x67664c3f,0x32e4f81c,0x3ccccccc,0x47913ee2,0x9f896c68,
    0x9d0e40f9,0xdd1f5364,0x44440800,0x26088888,0x00000009,0x00000000,
    0x00000000,0x26fc9fee,0x45fe24fd,0x807fa86f,0x24d81ffb,0x4dfcc1f8,
    0x06cf443f,0x400027c4,0xd8e72a4c,0x5dd46cad,0xa8b20542,0x0372fa64,
    0x00000000,0x00000000,0x00000000,0x7fb80000,0x44fd9bf2,0xa87f33f9,
    0x7f64407f,0x9b207d46,0xe8fe63f8,0x1bf50dd6,0x56ec1360,0x4bfff50b,
    0x0000bdb8,0x0003104c,0x00000000,0x00000000,0x00000000,0x7fdc0000,
    0x2ff4df90,0xfb8d33cc,0x7fd46c07,0x710c0223,0x298d4730,0x77009998,
    0x266204c0,0x00000009,0x00000000,0x00000000,0x00000000,0x00000000,
    0xfd37ffd1,0x03fff55f,0xfe89d475,0xa9fd983f,0x00002fff,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,
};

static signed short stb__times_bold_20_latin1_x[224]={ 0,1,1,0,0,1,0,1,0,0,1,0,0,0,
0,0,0,1,0,0,0,0,0,0,0,0,1,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,-1,0,0,0,0,0,0,0,0,0,0,
-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,2,2,2,2,2,2,2,2,2,
2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,1,1,0,0,0,
1,0,0,0,0,0,0,0,0,-1,0,0,0,0,2,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,
0,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,-1,0,-1,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
 };
static signed short stb__times_bold_20_latin1_y[224]={ 16,3,3,3,3,3,3,3,3,3,3,5,13,10,
13,3,3,3,3,3,3,4,3,4,3,3,7,7,5,8,5,3,3,3,4,3,4,4,4,3,4,4,4,4,
4,4,4,3,4,3,4,3,4,4,4,4,4,4,4,4,3,4,3,18,3,7,4,7,4,7,3,7,4,3,
3,4,4,7,7,7,7,7,7,7,4,7,7,7,7,7,7,3,3,3,9,4,4,4,4,4,4,4,4,4,
4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,16,7,4,3,5,4,
3,3,3,3,3,7,8,10,3,1,3,5,3,3,3,7,4,8,15,3,3,7,3,3,3,7,-1,-1,-1,0,
0,0,4,3,-1,-1,-1,0,-1,-1,-1,0,4,0,-1,-1,-1,0,0,6,3,-1,-1,-1,0,-1,4,3,3,3,
3,3,3,3,7,7,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,6,7,3,3,3,3,3,3,3,
 };
static unsigned short stb__times_bold_20_latin1_w[224]={ 0,4,8,9,9,16,15,3,6,6,8,10,4,6,
4,6,9,7,9,8,9,9,9,9,9,9,4,4,10,11,10,8,17,13,12,13,13,12,11,14,14,7,9,15,
12,17,13,14,11,14,14,10,12,13,13,18,13,13,12,5,6,5,9,11,5,9,10,8,10,8,8,9,10,5,
6,11,5,15,10,9,10,10,8,7,6,10,9,13,9,9,8,6,2,6,10,10,10,10,10,10,10,10,10,10,
10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,0,4,8,9,9,10,
2,9,6,14,6,9,11,6,14,11,7,10,5,5,4,11,10,4,4,5,6,9,14,14,14,7,13,13,13,13,
13,13,19,13,12,12,12,12,7,7,7,7,13,13,14,14,14,14,14,8,14,13,13,13,13,13,11,10,9,9,
9,9,9,9,13,8,8,8,8,8,6,6,7,7,9,10,9,9,9,9,9,10,9,10,10,10,10,9,10,9,
 };
static unsigned short stb__times_bold_20_latin1_h[224]={ 0,14,7,14,15,14,14,7,17,17,8,10,7,3,
4,14,14,13,13,14,13,13,14,13,14,14,10,13,10,5,10,14,17,13,12,14,12,12,12,14,12,12,13,12,
12,12,13,14,12,17,12,14,12,13,13,13,12,12,12,16,14,16,8,2,4,10,13,10,13,10,13,13,12,13,
17,12,12,9,9,10,13,13,9,10,13,10,10,10,9,13,9,17,17,17,4,12,12,12,12,12,12,12,12,12,
12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,0,13,16,14,10,12,
17,17,4,14,6,9,5,3,14,3,7,10,8,8,4,13,16,4,5,8,7,9,14,14,14,13,17,17,17,16,
16,16,12,17,17,17,17,16,17,17,17,16,12,17,18,18,18,17,17,8,14,18,18,18,17,17,12,14,14,14,
14,14,14,14,10,13,14,14,14,14,13,13,13,13,14,13,14,14,14,14,14,8,10,14,14,14,14,17,17,17,
 };
static unsigned short stb__times_bold_20_latin1_s[224]={ 88,165,123,144,234,16,1,252,163,118,65,
148,118,207,196,249,37,78,9,101,242,222,140,232,184,194,249,24,169,151,180,
175,86,29,112,72,222,236,154,110,22,1,96,138,125,49,106,125,37,214,166,
204,9,187,201,120,208,194,181,139,215,178,46,226,201,138,154,129,235,67,226,
246,26,9,207,83,95,1,226,76,176,165,27,107,139,86,97,115,36,86,247,
229,236,29,168,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,
101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,88,19,225,
165,191,15,253,170,189,86,132,17,139,207,150,214,103,201,97,91,184,66,145,
179,163,74,111,237,57,224,209,1,193,119,239,164,211,184,63,1,180,36,49,
198,62,70,78,156,37,104,59,1,44,148,133,56,1,30,16,74,125,15,51,
96,244,107,179,65,75,27,212,43,117,126,135,170,52,59,146,1,189,215,199,
17,33,47,239,80,159,154,43,54,85,98,108,88, };
static unsigned short stb__times_bold_20_latin1_t[224]={ 19,38,109,38,20,38,53,53,1,20,109,
96,109,109,109,38,53,68,68,53,53,53,53,53,53,53,82,68,96,109,96,
53,20,68,82,53,82,82,82,53,96,96,68,82,82,96,68,53,96,1,82,
53,96,68,68,68,82,82,82,20,53,20,109,109,109,96,68,96,68,96,68,
68,82,82,1,82,82,109,96,96,68,68,109,96,68,96,96,96,109,68,96,
1,1,20,109,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,
82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,19,68,20,
53,96,82,1,1,109,53,109,109,109,109,53,109,109,96,109,109,109,68,20,
109,109,109,109,96,53,38,38,68,1,1,1,20,20,20,82,20,1,20,20,
20,20,20,20,20,82,20,1,1,1,1,1,109,38,1,1,1,20,20,82,
38,20,38,38,38,38,53,96,68,38,38,38,38,68,68,68,82,38,68,38,
53,38,53,38,109,96,38,38,38,38,1,1,1, };
static unsigned short stb__times_bold_20_latin1_a[224]={ 72,96,160,144,144,289,241,80,
96,96,144,165,72,96,72,80,144,144,144,144,144,144,144,144,
144,144,96,96,165,165,165,144,269,209,193,209,209,193,177,225,
225,112,144,225,193,273,209,225,177,225,209,161,193,209,209,289,
209,209,193,96,80,96,168,144,96,144,161,128,161,128,96,144,
161,80,96,161,80,241,161,144,161,161,128,112,96,161,144,209,
144,144,128,114,64,114,150,225,225,225,225,225,225,225,225,225,
225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,
225,225,225,225,225,225,225,225,72,96,144,144,144,144,64,144,
96,216,87,144,165,96,216,144,116,159,87,87,96,166,156,72,
96,87,95,144,217,217,217,144,209,209,209,209,209,209,289,209,
193,193,193,193,112,112,112,112,209,209,225,225,225,225,225,165,
225,209,209,209,209,209,177,161,144,144,144,144,144,144,209,128,
128,128,128,128,80,80,80,80,144,161,144,144,144,144,144,159,
144,161,161,161,161,144,161,144, };

// Call this function with
//    font: NULL or array length
//    data: NULL or specified size
//    height: STB_FONT_times_bold_20_latin1_BITMAP_HEIGHT or STB_FONT_times_bold_20_latin1_BITMAP_HEIGHT_POW2
//    return value: spacing between lines
static void stb_font_times_bold_20_latin1(stb_fontchar font[STB_FONT_times_bold_20_latin1_NUM_CHARS],
                unsigned char data[STB_FONT_times_bold_20_latin1_BITMAP_HEIGHT][STB_FONT_times_bold_20_latin1_BITMAP_WIDTH],
                int height)
{
    int i,j;
    if (data != 0) {
        unsigned int *bits = stb__times_bold_20_latin1_pixels;
        unsigned int bitpack = *bits++, numbits = 32;
        for (i=0; i < STB_FONT_times_bold_20_latin1_BITMAP_WIDTH*height; ++i)
            data[0][i] = 0;  // zero entire bitmap
        for (j=1; j < STB_FONT_times_bold_20_latin1_BITMAP_HEIGHT-1; ++j) {
            for (i=1; i < STB_FONT_times_bold_20_latin1_BITMAP_WIDTH-1; ++i) {
                unsigned int value;
                if (numbits==0) bitpack = *bits++, numbits=32;
                value = bitpack & 1;
                bitpack >>= 1, --numbits;
                if (value) {
                    if (numbits < 3) bitpack = *bits++, numbits = 32;
                    data[j][i] = (bitpack & 7) * 0x20 + 0x1f;
                    bitpack >>= 3, numbits -= 3;
                } else {
                    data[j][i] = 0;
                }
            }
        }
    }

    // build font description
    if (font != 0) {
        float recip_width = 1.0f / STB_FONT_times_bold_20_latin1_BITMAP_WIDTH;
        float recip_height = 1.0f / height;
        for (i=0; i < STB_FONT_times_bold_20_latin1_NUM_CHARS; ++i) {
            // pad characters so they bilerp from empty space around each character
            font[i].s0 = (stb__times_bold_20_latin1_s[i]) * recip_width;
            font[i].t0 = (stb__times_bold_20_latin1_t[i]) * recip_height;
            font[i].s1 = (stb__times_bold_20_latin1_s[i] + stb__times_bold_20_latin1_w[i]) * recip_width;
            font[i].t1 = (stb__times_bold_20_latin1_t[i] + stb__times_bold_20_latin1_h[i]) * recip_height;
            font[i].x0 = stb__times_bold_20_latin1_x[i];
            font[i].y0 = stb__times_bold_20_latin1_y[i];
            font[i].x1 = stb__times_bold_20_latin1_x[i] + stb__times_bold_20_latin1_w[i];
            font[i].y1 = stb__times_bold_20_latin1_y[i] + stb__times_bold_20_latin1_h[i];
            font[i].advance_int = (stb__times_bold_20_latin1_a[i]+8)>>4;
            font[i].s0f = (stb__times_bold_20_latin1_s[i] - 0.5f) * recip_width;
            font[i].t0f = (stb__times_bold_20_latin1_t[i] - 0.5f) * recip_height;
            font[i].s1f = (stb__times_bold_20_latin1_s[i] + stb__times_bold_20_latin1_w[i] + 0.5f) * recip_width;
            font[i].t1f = (stb__times_bold_20_latin1_t[i] + stb__times_bold_20_latin1_h[i] + 0.5f) * recip_height;
            font[i].x0f = stb__times_bold_20_latin1_x[i] - 0.5f;
            font[i].y0f = stb__times_bold_20_latin1_y[i] - 0.5f;
            font[i].x1f = stb__times_bold_20_latin1_x[i] + stb__times_bold_20_latin1_w[i] + 0.5f;
            font[i].y1f = stb__times_bold_20_latin1_y[i] + stb__times_bold_20_latin1_h[i] + 0.5f;
            font[i].advance = stb__times_bold_20_latin1_a[i]/16.0f;
        }
    }
}

#ifndef STB_SOMEFONT_CREATE
#define STB_SOMEFONT_CREATE              stb_font_times_bold_20_latin1
#define STB_SOMEFONT_BITMAP_WIDTH        STB_FONT_times_bold_20_latin1_BITMAP_WIDTH
#define STB_SOMEFONT_BITMAP_HEIGHT       STB_FONT_times_bold_20_latin1_BITMAP_HEIGHT
#define STB_SOMEFONT_BITMAP_HEIGHT_POW2  STB_FONT_times_bold_20_latin1_BITMAP_HEIGHT_POW2
#define STB_SOMEFONT_FIRST_CHAR          STB_FONT_times_bold_20_latin1_FIRST_CHAR
#define STB_SOMEFONT_NUM_CHARS           STB_FONT_times_bold_20_latin1_NUM_CHARS
#define STB_SOMEFONT_LINE_SPACING        STB_FONT_times_bold_20_latin1_LINE_SPACING
#endif

