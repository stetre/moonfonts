// Font generated by stb_font_inl_generator.c (4/1 bpp)
//
// Following instructions show how to use the only included font, whatever it is, in
// a generic way so you can replace it with any other font by changing the include.
// To use multiple fonts, replace STB_SOMEFONT_* below with STB_FONT_times_20_latin1_*,
// and separately install each font. Note that the CREATE function call has a
// totally different name; it's just 'stb_font_times_20_latin1'.
//
/* // Example usage:

static stb_fontchar fontdata[STB_SOMEFONT_NUM_CHARS];

static void init(void)
{
    // optionally replace both STB_SOMEFONT_BITMAP_HEIGHT with STB_SOMEFONT_BITMAP_HEIGHT_POW2
    static unsigned char fontpixels[STB_SOMEFONT_BITMAP_HEIGHT][STB_SOMEFONT_BITMAP_WIDTH];
    STB_SOMEFONT_CREATE(fontdata, fontpixels, STB_SOMEFONT_BITMAP_HEIGHT);
    ... create texture ...
    // for best results rendering 1:1 pixels texels, use nearest-neighbor sampling
    // if allowed to scale up, use bilerp
}

// This function positions characters on integer coordinates, and assumes 1:1 texels to pixels
// Appropriate if nearest-neighbor sampling is used
static void draw_string_integer(int x, int y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0, cd->t0); glVertex2i(x + cd->x0, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t0); glVertex2i(x + cd->x1, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t1); glVertex2i(x + cd->x1, y + cd->y1);
        glTexCoord2f(cd->s0, cd->t1); glVertex2i(x + cd->x0, y + cd->y1);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance_int;
    }
    glEnd();
}

// This function positions characters on float coordinates, and doesn't require 1:1 texels to pixels
// Appropriate if bilinear filtering is used
static void draw_string_float(float x, float y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0f, cd->t0f); glVertex2f(x + cd->x0f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t0f); glVertex2f(x + cd->x1f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t1f); glVertex2f(x + cd->x1f, y + cd->y1f);
        glTexCoord2f(cd->s0f, cd->t1f); glVertex2f(x + cd->x0f, y + cd->y1f);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance;
    }
    glEnd();
}
*/

#ifndef STB_FONTCHAR__TYPEDEF
#define STB_FONTCHAR__TYPEDEF
typedef struct
{
    // coordinates if using integer positioning
    float s0,t0,s1,t1;
    signed short x0,y0,x1,y1;
    int   advance_int;
    // coordinates if using floating positioning
    float s0f,t0f,s1f,t1f;
    float x0f,y0f,x1f,y1f;
    float advance;
} stb_fontchar;
#endif

#define STB_FONT_times_20_latin1_BITMAP_WIDTH         256
#define STB_FONT_times_20_latin1_BITMAP_HEIGHT        116
#define STB_FONT_times_20_latin1_BITMAP_HEIGHT_POW2   128

#define STB_FONT_times_20_latin1_FIRST_CHAR            32
#define STB_FONT_times_20_latin1_NUM_CHARS            224

#define STB_FONT_times_20_latin1_LINE_SPACING          13

static unsigned int stb__times_20_latin1_pixels[]={
    0x80051001,0x4ccc4098,0x01801700,0x110a8440,0x03751000,0x000080a8,
    0x99988c00,0x20020400,0x03d88000,0x4001b700,0x744002eb,0x00004005,
    0x101ae000,0x017ea017,0x55d70bb0,0xb305f101,0xb803db7d,0x80398321,
    0x7730abb8,0x37370320,0x0fcc7d40,0x55443220,0xcbdc983e,0x77ec05bd,
    0x0d500099,0x88007e00,0x32000ebe,0xbfb003eb,0x29d00133,0x0174005d,
    0x800bb02c,0x0805b80e,0x1fcc2eb8,0x320643a8,0x88036201,0x546e0c83,
    0x36636606,0x3d816200,0x03e417cc,0x00bf9111,0x14c000b8,0x01cc2e00,
    0x10032298,0x200bf911,0x8800973c,0xb904a803,0x5b804c00,0x702f9800,
    0x0c87b03f,0x001b02dc,0x89ec190e,0x0b600002,0x813e63d8,0x4c000006,
    0x000c4000,0x00000018,0x00c0004c,0x07e00100,0x20001972,0x3a08805b,
    0x3a1be207,0x41760644,0x2152981d,0x05f50643,0x4417ffb5,0x01e62efb,
    0x5007ec7b,0x20bfae21,0xe982dfb8,0x4c01dcbe,0x401dcbee,0x81dcbee9,
    0x220bffda,0xee982efb,0x74c01dcb,0xda81dcbe,0x3ee20bff,0xdc84d82e,
    0x3ea1dff9,0x2dcbe61f,0x3e25f910,0x3207fc06,0x21360645,0x1f92d849,
    0x7f40c866,0x3604f982,0x8f602ec1,0xff88007f,0x5d701b01,0x5d703f88,
    0x5d703f88,0x4f983f88,0x0bae0760,0x0bae07f1,0x09f307f1,0xc86c80ec,
    0xfb8bf53e,0x405b9620,0x80bf32f9,0x321e41fe,0x215c1dc0,0x2389b22c,
    0x0bf2720c,0x206407f1,0xf89ec04f,0x1dfd0005,0x02f981b0,0x02f983f7,
    0x02f983f7,0x03f883f7,0x205f3032,0x817cc1fb,0x01fc41fb,0x321ee019,
    0x8fe23ec6,0xf1016e1b,0xfb017e65,0x20640c83,0x1ae0d848,0x3980cc9d,
    0x03f887ee,0x403f8832,0x000bf33d,0x03217eb6,0x746f80fd,0x1fa37c07,
    0x03f88df0,0xf80fd032,0x1be03f46,0x806407f1,0x2e2e41fb,0xb8b3dc2f,
    0xf897c405,0x07337406,0x8d0dc032,0x0387e21f,0x7c4990ee,0x3f983203,
    0x00df1ec0,0x3227dd60,0xfd01be20,0xfd01be21,0xfd01be21,0x1901fc41,
    0x3fa037c4,0xfe80df10,0x0c80fe20,0x45c81f70,0x4dfc41f9,0x3e202dc3,
    0x89f01fa2,0x1a80c839,0x47c8f32c,0x3a87ea04,0x20c80fe2,0x91ec03f8,
    0x6cb0001f,0x5f98322f,0x5f98fec0,0x5f98fec0,0x7f10fec0,0x0bf30640,
    0x0bf31fd8,0x0fe21fd8,0x90f900c8,0xec80fb8d,0x2202dc0d,0x540bea2f,
    0x0642c81f,0x26b9612a,0x1502e5da,0x220d8fec,0x9d03203f,0x13ea3d80,
    0x7f458098,0x02fcc191,0x02fcc7f6,0x02fcc7f6,0x03f887f6,0x405f9832,
    0x80bf31fd,0x80fe21fd,0xf90db00c,0x0bf104d8,0x42f880b7,0x8174c1eb,
    0x1360645c,0x4ddfd46e,0x0c86574c,0x3e206fec,0x0bb03603,0x41fe43d8,
    0xff88b019,0x01be20c8,0x01be21fd,0x01be21fd,0x01fc41fd,0x2037c41b,
    0x80df10fe,0x80fe20fe,0xf905d00d,0x1d807759,0x17c405b8,0x06edef54,
    0x6c0c8bb0,0x42ee3985,0x0c920bc9,0x27c41fc8,0xd80d50b0,0xccdfeb83,
    0x3be61602,0x3e03f40d,0x1be03f46,0x446f80fd,0x1fa1604f,0x407e8df0,
    0xb027c46f,0x1ae41a60,0x016e0b00,0x7fe401f1,0x03227401,0x800320d9,
    0x3208320b,0x41606e84,0xa80f601d,0x3ee0b004,0xa81fd40f,0xa81fd41f,
    0xa81fd41f,0x1606e81f,0x0fd40fea,0x0fd40fea,0x320b0374,0x5400b901,
    0x6880b703,0x200ffa80,0x0ee0643b,0x41b800c8,0x424cba0c,0x101d82fa,
    0xf501ec0b,0x7e40f003,0x7441ec80,0xe883d903,0xe883d903,0x3b05f503,
    0x7d107b20,0x7d107b20,0x0760bea0,0x406d80ae,0x3ae05de9,0x93191099,
    0x40bae200,0x03606458,0xcb981590,0x5cae0c81,0xbb9bd500,0x2622a805,
    0x03e203e9,0xb01cfc98,0x32bbaa01,0x5775401d,0x775401dc,0x75401dca,
    0x5402ddcd,0x401dcaee,0x01dcaeea,0x16ee6f54,0x7db5004c,0x50066c40,
    0x37623999,0x01530001,0x02885c26,0x336f2a20,0x13302e01,0x31000600,
    0x440b3326,0x0100000a,0x88001310,0x04c40009,0x44000c00,0x04c40009,
    0x00000c00,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x2e000000,0xd9acc00d,0x000db800,0x9ddb5026,
    0x06dc019d,0x7000f620,0x00eb805d,0x5d3007d1,0x36200000,0x00008003,
    0x00000000,0x37601f54,0x05101200,0x0140dc40,0x3ee00ba0,0x2e800fa8,
    0x3fee2400,0x05d0095f,0xe8801e60,0x816c00fb,0x0099005a,0xa8036576,
    0x4f7ec006,0xbb4e8019,0x07e67e60,0xd1003cb8,0x36ee01f7,0x1dedcb84,
    0xcc802fdc,0x800646b8,0x20000039,0x21c40039,0x8095fffe,0x00d40038,
    0x880730b8,0x12001904,0x00973c80,0x888800dc,0x279005fc,0xb11b304b,
    0x8024e203,0x4510710b,0x3ba52e0b,0x1f9805d8,0x100298be,0x08800000,
    0xff072200,0x01012bff,0x01000200,0x00008040,0x08800000,0x10000800,
    0x4ac80000,0x3a000000,0x1760e293,0x589d1ea0,0x20bffda8,0xff52efb8,
    0x1a017cc3,0x83bab2a0,0x9895fffe,0xfdcccefc,0x333bf264,0x06804fdc,
    0x98e7fe4c,0xfd51cffc,0x77e4417f,0x999df932,0x00d009fb,0x034001a0,
    0x8073ff26,0x77e4c078,0x264fdccc,0x3ba1cffc,0x45720248,0x17c4f700,
    0x813e6032,0xb107dc1d,0x2202fa80,0x264fb88f,0x3e095fff,0x85f84885,
    0x017d4048,0x887e83f4,0xf06a80ff,0xfa80910b,0x017d4002,0x3a00bea0,
    0x802fa807,0x7e84885f,0x6404efa8,0x5c0dffad,0x05307b37,0x206407f1,
    0xb006e3f8,0x8bae40bf,0x4ae54409,0x3a060bd0,0x5fd80305,0x0dd06e80,
    0x403613ea,0xfd80305e,0x02fec005,0x3a017f60,0x805fd806,0x0dd0305e,
    0xec80ffe6,0x37b8bf52,0xf10b03dd,0x3dc06407,0x0fcc980b,0xa40129b0,
    0x2010bd04,0x64c0085e,0x837400fc,0xa87f606e,0x00217a03,0x2001f993,
    0x3000fcc9,0x6e801f99,0x007e64c0,0x3740217a,0x3209ff10,0xb1ee3e45,
    0x3f88190f,0x2fe20320,0x7c46c039,0x0053bb04,0x485e8252,0xd8090bd0,
    0x37404f88,0x5be206e8,0x242f4058,0x013e2360,0x8027c46c,0x7404f88d,
    0x27c46c06,0x741217a0,0x427e6406,0xf717d45c,0x21cc1fb8,0x403203f8,
    0x96200dec,0x28bf907d,0xcee82520,0x9dd04ecc,0x2c409d99,0xd06e80fb,
    0x1cbfb80d,0x76667740,0x07d96204,0x201f6588,0xdd01f658,0x80fb2c40,
    0x04ecccee,0x0f9480dd,0x2e1f98b9,0x22c17cc7,0x403203f8,0x50dc05f8,
    0x33df305f,0xd04a4019,0x5e82544b,0x21b812a2,0x41ba02fa,0x04fd806e,
    0x812a25e8,0x700bea1b,0x2e017d43,0x6e80bea1,0x02fa86e0,0xd04a897a,
    0x86aa470d,0x1ee3dc5c,0x441901f1,0xd803603f,0x66667401,0x5dff706f,
    0x17a09480,0x0142f40a,0x0df9999d,0x806e8374,0x85e801fa,0x33333a02,
    0x6667406f,0x667406fc,0x1ba06fcc,0x6fcccce8,0x740a17a0,0x41e52686,
    0x3f216c6c,0x7305a8f8,0x80b027c4,0x7dc15405,0x52001481,0x7400bd04,
    0x2e0aa005,0x3a0dd01f,0x801fa806,0x20aa005e,0x705501fb,0x2e0aa03f,
    0x2a0dd01f,0xbd01fb82,0x76c37400,0xbd303bdb,0xb7e98597,0x3a2c0177,
    0x03a81606,0x444f882c,0xd04a4003,0x0bd0a20b,0x3e20b0a2,0x1ba0dd04,
    0x3a007ea0,0x10585105,0x7c41609f,0x13e20b04,0xf1058374,0x14417a09,
    0x004981ba,0x08000011,0x20ec17d4,0x25405de9,0x00543fb0,0x06f82520,
    0x1b06f81b,0x03fb0254,0x201be0df,0x06f802fb,0xfb02541b,0x3f604a83,
    0x3fb02541,0x40950df0,0xb06f81fd,0x00c06f81,0x20000000,0x82ddcdea,
    0x3ea00cd8,0x2effa82e,0x30e70003,0xdb99bff9,0x66ffe4cb,0x3bea5edc,
    0x32effa82,0x32637ff9,0xfd701bff,0x3ff2605d,0x2a5edccd,0xeffa82ef,
    0xf505df52,0x0bbea5df,0x64cbbfea,0x5df51bff,0x265dff50,0xedccdffc,
    0x06fff265,0x00000000,0x00000600,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x53000000,0x13101880,
    0x06200880,0x801004c0,0x8300c400,0x10026201,0x02200080,0x18801800,
    0x81000100,0x00018000,0x01100008,0x80800020,0x102fdc00,0x102f407f,
    0x0fe203ff,0x7b505f10,0xfd016207,0x0b2b6209,0xbb105fc8,0x2e202c0d,
    0x1003bbab,0x33220379,0x5c0ddebb,0x301dddcd,0x4b7b97b9,0x97dd306e,
    0x203d303b,0x201e9848,0x2dbe9805,0x7759b300,0x0bb00551,0x81a20254,
    0x16605a9c,0x7c7e0770,0x2ea00c81,0x1fc880e8,0x20b63260,0x803203a0,
    0x40191039,0x0ba200eb,0x4c6987e6,0xc82f981f,0x0bae1fe7,0x203b07f1,
    0x2e03b00c,0x0d11e801,0x5f981d70,0x0140bb00,0x22088198,0x20500a01,
    0x2a89b0f9,0x1710a0c0,0x050a01d5,0x80e612e2,0x1cbcd9b9,0x01f50191,
    0x43702744,0x7cc1b84d,0x4c6e9a04,0xd83f702f,0x07602a81,0x43e60122,
    0x41fcc069,0x23101fe8,0x0c00c05d,0x03300660,0xb0f98198,0x03002449,
    0x8000bb30,0x202c2ea8,0x887ccf63,0x3201fc43,0x3fb0c01f,0x007ec188,
    0x0fd17615,0x220ec6f8,0x06c0ec05,0x02d9fcc0,0x6f8d83f4,0x05fcacc8,
    0x5505d755,0xcada85d7,0x7e56d40f,0x07e56d40,0x0c87e1f1,0x82ebaa80,
    0x2a3ffbba,0xb813ea6e,0x6c7006e2,0x321c3f13,0x0ff0298f,0x403ffa80,
    0x8932007f,0xb07f406f,0x0ec00c83,0xdef800ae,0x7c459951,0x41fd1c86,
    0x1642fc6a,0x1ee2c8f7,0x8ba1fc5d,0x87f1743f,0x00aa4aca,0x2d47b8b2,
    0x746c8bf1,0x93255d44,0x27361980,0x2fba1c4d,0x17e22fea,0xf5166654,
    0x0bf105df,0x0bf325c0,0x47d11fd8,0x11f44039,0x17f44009,0xb8bf30be,
    0x43d87f62,0x6667c45d,0x999f12fd,0xf88545fb,0x44f88544,0x8209f10a,
    0x88332a48,0x22fdcccf,0x1b23ec3d,0xd0b0309d,0xb99b0cc3,0x3744f870,
    0x27dc0df3,0x262ffec4,0x98ea005f,0x88fec05f,0x0dec9619,0x740d8662,
    0x0ff9d981,0x4cbf30b3,0x1f88fec4,0x803e62ec,0xbb9800f9,0x4ebb984e,
    0x804ebb98,0x99a6f30d,0x707e200f,0x13a3643f,0x83d906e0,0x8e1f4f63,
    0x887e43f8,0x80fe607f,0x037c4fe9,0x037c4530,0x98e403fa,0x21540990,
    0xf735c1ec,0x5fe2032b,0x3e67e858,0x0be22ec3,0x2dc02f88,0x13a5b89d,
    0x2e0274b7,0x88fc5ae1,0x50be602f,0x13a3643f,0x1d9b8910,0x43e67d1c,
    0x3ea1fc38,0x7cc07fa0,0x91fa20a3,0xd062001f,0x7306f80f,0x22c40ae0,
    0x22741d9b,0x3fa02cfe,0x7c6f80d8,0x22f42ec5,0x23317a19,0xf993a1f9,
    0x21f993a1,0xd912204e,0x198bd17c,0x6c8f713a,0x98360274,0xd9b983b2,
    0x8193b71c,0x3ea3545d,0x82c7f305,0x3027d46c,0xa81fd401,0x1220b01f,
    0x0eca60c8,0x1ff88bf3,0x503df304,0xd12fc83f,0x955df70d,0x24aaefb8,
    0x239f53f9,0x239f53f9,0x039f53f9,0x23cdea16,0x5c4aaefb,0x3f70f60f,
    0x42b817aa,0x4c1efeec,0x3e603203,0x13ee0f61,0xe84d8fe6,0x1983fc82,
    0x107b20aa,0x2206e07d,0xdd90ea03,0x717f43df,0x81715ffb,0x41f440ed,
    0x3edcefc8,0xb80cffb8,0x77ec0cff,0x3bf61ec9,0x3bf61ec9,0x01b81ec9,
    0xff70973d,0x797b5019,0xdd3dfd10,0x1d809107,0x79757930,0x1e565401,
    0xd757db30,0x5e6ee419,0x37fae03d,0xa83742cc,0x301dcaee,0x8b99d109,
    0x2a0ec058,0xff32eefe,0xcdaba87f,0x84401dca,0x00800800,0x02002002,
    0x035100c0,0x18008008,0x4c009802,0x40008800,0x804c4000,0x18800260,
    0x13100220,0x55530180,0x04c00883,0x02010088,0x00000131,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x03100098,0x04004050,0x80022002,0x0400402a,
    0x00440040,0x009800c4,0x8020004c,0x9fff9018,0x2e060550,0x080188ce,
    0x44000040,0x0aa1d88d,0x0801dcee,0x7401b600,0xbd984805,0x0583201d,
    0x07775771,0xbb839aa8,0xcffc83ca,0x81cbdb80,0x201ecaa9,0x06fc803f,
    0xac880364,0xd885e82d,0x86e80ccc,0x3aaa22fa,0x885c805f,0x7cc1dffc,
    0x27e61ee0,0x3a1ba2f9,0x01a00db5,0x068801d0,0xf11e82a8,0x730b1601,
    0x45c03220,0x87a2cc38,0x544fa8ab,0xd8b07e65,0x91009506,0x01d80591,
    0x688d51e8,0x01100190,0x02604171,0x3770bf50,0x20f98df7,0x0088007b,
    0x005f5000,0x002600c4,0x09b1b212,0x31cc3996,0x0191b973,0x44c81971,
    0xd8db024c,0x45f12ec3,0x500281fa,0x20144028,0x20260479,0x04402cf8,
    0x22004c00,0x7d4385cd,0x07b83e62,0x02600066,0x3002fec0,0x48013001,
    0x887e44e8,0x0bc99ca9,0x45a0744e,0x1f703303,0x447900f4,0x86e3dc2f,
    0x980000fb,0x0f700000,0xffeb8110,0x4001300d,0x3605eabc,0x2f8805c8,
    0xa87b83e6,0x0660fcad,0x3017aaf2,0xbc801f99,0xd57905ea,0x0fe0aa0b,
    0x336a63f7,0x5ce1aeaa,0x5b50e083,0x4ff441f9,0xf112202c,0x3a01fb89,
    0x4fa9baa4,0xa8bd5790,0x5c13ea6e,0x40bf2207,0x00905fc8,0x2e13e25c,
    0x1f300b92,0xd0f707cc,0xb8551fc5,0x11b027c4,0x3e25c09f,0x213e25c4,
    0x7d43f984,0x198b0642,0x1743805d,0x04fe887f,0x8db07bae,0x321a607b,
    0x225c2746,0x13a3644f,0x0399fb91,0x0fa805f3,0x85f001d4,0x0b92447d,
    0x21f98990,0x9f10a87b,0xfb0be1dc,0x207d9620,0x0be3ec2f,0x5f3090fb,
    0x912c1fb8,0x3807f198,0x444f8854,0xf7103fec,0x54efd41f,0x3203205e,
    0x217c2746,0x13a3647d,0x20267ee6,0x23e802f8,0x219300f8,0xb0fdc1f9,
    0x986805c8,0x306fd73f,0x32649d77,0xb81fb83f,0x3e60bea1,0x1f98fdc1,
    0x20550fdc,0xa987dc3f,0x21adbaae,0x98380b93,0x43a64ebb,0x0be602fd,
    0x207f1571,0x4e8d9028,0x87ee0fcc,0x7a82746c,0x64017c40,0x5fc81763,
    0x71f987f3,0x15db5559,0x3fa60720,0x2e0ef9bf,0x264c93a5,0x740fcc3f,
    0x986fcccc,0xf98fcc3f,0x4090fcc3,0x9513e45d,0x9c135933,0x438941f8,
    0x44c93a5b,0x7017405d,0x6402603f,0x0fe62746,0x3a3643f3,0xf880f304,
    0x7f10e802,0x5e92234c,0xdddd93dc,0x05705dff,0xf98102ea,0x745d93a1,
    0x41543dc5,0x5c5e81fb,0x91ee2f47,0x517635c0,0x71398245,0x98321779,
    0x43d93a1f,0xd103406a,0x8d900403,0x3dc5e84e,0x5109d1b2,0x217c430b,
    0x4f88ee1b,0x322a83e2,0xb900f61f,0x26420aa0,0xcfa9fcc0,0x21fc8dd1,
    0x9f10583d,0x21ec3f90,0x2a8f61fc,0x07443e20,0x0e605832,0xa9fcc0c8,
    0x2b8d51cf,0x3a20950a,0xfb815c02,0x3f90bd51,0x547ee1ec,0x6fe5cc5e,
    0x0be20dab,0xd905bdfd,0xc8199621,0x5c803ccf,0x5aaaada8,0x77ec0176,
    0x90ff1ec9,0x0950799f,0x67e40fec,0x799f903c,0xcbd98048,0x30122581,
    0x01797579,0x87b27bf6,0x3e23aaca,0xba983dcf,0xd105f801,0x907dd3df,
    0xfd10799f,0x5d47dd3d,0x223ffc8c,0x00441dfc,0x8002af2a,0xf5172001,
    0x5c9fffff,0x4b802003,0x177d4060,0x18177fd4,0x80020300,0x40010200,
    0x20010008,0x01802200,0x010c0040,0x80430030,0x00000440,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x22000000,0x259052ed,0x04c0602c,
    0x22026000,0xd712efeb,0x5bf7105f,0x7fffffd4,0xb81a8080,0x21100773,
    0xda818201,0x3ee20bff,0x07ffd52e,0x3faa5ff7,0x43bff71e,0x00e22fd9,
    0x01806e60,0x705c00e2,0x427dc7ff,0x2233ae02,0x35254ee1,0x29f07df9,
    0x3eaba85e,0x87fea364,0x81bf22f9,0x1ff882fb,0xabcd81b0,0x117dc6ba,
    0x36bd05fb,0x3b6aea06,0xff9deb85,0xb027cc1d,0x3606f883,0x3ee27cc2,
    0x1faa3b82,0x89f53900,0x53eed9bc,0x85f100ff,0x34424c7c,0xe8bfd550,
    0x03104db5,0x0fc92e00,0x883ee06c,0x40b63265,0x1dfd01fb,0x5c1441b0,
    0xf10bee63,0x22dc0005,0x2a7db05e,0x901fc45f,0x1a01fb01,0x213e2374,
    0x5003e40d,0x54f5154b,0x0803e41f,0x20323f88,0x0098106d,0x01801980,
    0x4288183d,0x4286e3f8,0x3603f702,0x800c85fa,0x2217c40e,0x5f10002f,
    0xd8d905d8,0x1901fc47,0x07507f30,0xb0fd07ee,0x2e400f70,0x21fc4db0,
    0xb6c0007b,0x3cfeb858,0x04402618,0x203f2b6a,0x3e62ebaa,0x7b808800,
    0xf7004416,0x227dd603,0x4434400c,0xd517c42f,0x3e627d4d,0x45c82ec0,
    0x80fe22fb,0x1b0fd00c,0xff893e20,0x01ee0aa2,0x43f205d8,0x033dc0f8,
    0x5cfd4044,0xdd50d701,0x6441ffd3,0x87f1742f,0x2f99ee2c,0x220bf220,
    0x7e4439bf,0x2c07ee02,0x200645fb,0x442f883b,0x13a3642f,0x905d85f5,
    0x3e21f98b,0x7d403203,0x4dd01222,0x20364fab,0x882fea7b,0xe883ceec,
    0x8fb84c8c,0x3f220fed,0x5c0b9d02,0xf117f906,0x8542f989,0x333e24f8,
    0x317a2fdc,0xec817cc1,0x202f980d,0xfe8b01fb,0x81e80191,0x217c42f8,
    0x27c2746c,0x2e364176,0xc80fe20f,0x01c9be00,0x2fb58fdc,0x362f7058,
    0x37017600,0x7f17dc05,0x33322f98,0x5c4ccdfd,0x45e8d906,0xebb982f8,
    0xf9003e64,0x2f88773d,0x3e20bf10,0x2c07ee02,0x80323fe2,0x885f1068,
    0x13a3642f,0x17aa2ff6,0xf11363e4,0xf9006c07,0x33e20163,0x0555f548,
    0xb00363ee,0x4ccedc0b,0x22747b80,0x03f302f8,0x6c6b835c,0x96e17c45,
    0x100be24e,0xf8819ff7,0x7c407602,0x2c03ee02,0x7006f7cc,0xf10be207,
    0x42746c85,0x05daffd8,0x107759f9,0x2202c09f,0xfb003adf,0x702efc37,
    0x0bb00bdf,0x6fffffd4,0x88bb1ee0,0x3f73322f,0x835c4ccd,0x3e22ec6b,
    0x44e87e62,0x1cc0cc5e,0x81602f88,0x81ee02f8,0x401ff705,0x885f101e,
    0x13a3642f,0xae417608,0x0b037401,0x5400dfb0,0x702fe46f,0x5d807f3f,
    0x654c46a0,0x88bb1ee3,0x403f302f,0x235c18fb,0xf317c45d,0xfb873ea7,
    0x3f504aae,0x0ea05f10,0xbb542f88,0x0fc81e05,0x17c40d10,0x23f70be2,
    0x0bb005ea,0x17d40172,0x27cc00ec,0xf989f100,0x17ddee02,0x41a20bb0,
    0x8bb1ee19,0x03f302f8,0x1f20ffc4,0x6c2f88bb,0x5c1ec9ef,0x1f100cff,
    0x6f4c5f10,0x2a17c405,0xfc980cdf,0x2e01b01c,0xf10be203,0xe9efe885,
    0xb05d803e,0x66f5400d,0x07a002dd,0x80d03b00,0x6c07f67b,0x537bf306,
    0x2ec7c877,0x3f6a0be2,0x7f54002d,0x912ffa8b,0x200083bf,0x2202a200,
    0x19b11dfc,0x20efe440,0x00800008,0x6fe4c022,0x303bf912,0x2dda8004,
    0x40016ed4,0x00010001,0xfea80201,0x223ffb8b,0xb981bffb,0x7f4c2ced,
    0x912ffa8b,0x000003bf,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x3ff66000,0x980bddde,
    0x2000bffc,0xcccfffb8,0x266623fd,0xb3099999,0x17bbddff,0x217ff930,
    0x64c1dfea,0x1fedccef,0x2639ff93,0x0cedeffd,0x3bbbbee0,0xffd50ffe,
    0x977e4417,0x262fffd9,0xffb31dfd,0x9305bbbb,0x9fb999df,0x885ffe4c,
    0xdf51cffb,0x7fdddfdd,0x80b3ff26,0x2ddeffd9,0x74037ecc,0xf10301df,
    0xf01fd88b,0x3e74000b,0x430031c4,0x0fec45f8,0x017445f8,0xfd07217e,
    0x77ccbf10,0x5f903900,0x6a80ff88,0x0790df70,0x05fa8bf1,0xbf0910bf,
    0x54551f60,0x0df0ea2f,0x4fb97e20,0xf5017fc4,0x5d75501f,0x03fb05f8,
    0x400133bf,0x0c307caa,0x6c17e0c0,0x0ec5f81f,0x20442fc0,0xfc8bf06e,
    0x09f50502,0x803613ea,0xf81262fc,0x5e81fc85,0x360bf030,0x50bea147,
    0x17e005e8,0x06fe81fd,0xb8b21f76,0x5f982fc7,0x0dfcaef8,0x810f9580,
    0x82fc1801,0x365f85f9,0x008bf001,0xf717e0dd,0x03be2007,0x00ea1fd8,
    0xf01623fa,0xbd05f70b,0x6c17e010,0x2017d407,0x917e005e,0x81fbd83f,
    0x67c47dc9,0x17e2fdcc,0x265f87e8,0x7c95406f,0x060061c4,0x7c3f40bf,
    0x3e001d8d,0xf06e8245,0xb000fe8b,0x16f8803f,0x377e600b,0x7f42fc00,
    0xf0485e80,0xf501f60b,0x2005e805,0x46c37c5f,0x47d8d85f,0xdf9500f9,
    0x0fec1999,0x403fd17e,0x3b333f25,0x3e0c00c4,0xbf07f605,0xcef8009d,
    0x20dd05dc,0x01deb9df,0x2e009f50,0x2e001cbf,0xbbef804f,0x9dd00dec,
    0x3be09d99,0x07eaaaaa,0x17a017d4,0x7f915f80,0x4887f2b0,0x402f88fb,
    0xf07f605f,0x7701fe8b,0x43a8fb33,0x02fc1801,0xfddf83fb,0x2677e003,
    0x3e0dd049,0x22006eae,0x27ec006f,0x003fea00,0x9f9533bf,0x2544bd01,
    0x99999df8,0x017d407d,0xbef8017a,0x3e2b00ac,0x743ec724,0x40bf0cc5,
    0xf32fc0fe,0x6d556c0d,0x0c00c287,0x40fe817e,0x2007fb5f,0x06e8145f,
    0x4013e6bf,0x7d4001fd,0x3e726001,0x7dc2fc05,0xf0285e83,0xf501f60b,
    0x2005e805,0x7e4b005f,0x2e1f6588,0x2fc4aaef,0xaef85f88,0x83700efb,
    0x1801807c,0x86f882fc,0x200ff65f,0x20dd005f,0x700bee5f,0xfa80207f,
    0x7dcb1001,0x3e217e03,0x3e005e87,0xfa80fb05,0x8102f402,0x7ccb005f,
    0x5c1f61bc,0x82fc0cff,0x9aef81fd,0x1f216200,0x41801944,0xf03fb05f,
    0x7c04fd8b,0x3e0dd005,0xf9807ec5,0x7d405105,0xfe81b001,0xdf30bf01,
    0xf0a20bd0,0xf501f60b,0x5105e805,0xd8b005f8,0x0203ec5f,0x0bf622fc,
    0x16401be2,0x436207ec,0x22fc1801,0x5f882fd8,0xbf105fe8,0x37c1be00,
    0x3fa03be2,0x7dc03b00,0xf982d802,0x6c45f80e,0x1b06f82f,0x07e82fc4,
    0x1be01fd4,0x00df0362,0x6c2f98d1,0x3f66000f,0x80bdccef,0x100bffd9,
    0x3ee23bf9,0x25fdccef,0x9999999a,0x9dffb329,0xf93017b9,0x3ff6617f,
    0x7ffb30be,0x2fff2601,0x417ffb31,0xff90befa,0x0ffddddd,0xa8177f5c,
    0x3f220cfe,0xdffb32ef,0xc983bdd9,0x5edccdff,0x442fff26,0xeb81cffb,
    0xffc983ef,0x265feeee,0xb300bffd,0xf712c17f,0x0000039f,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x09800000,0x98000000,0x00033008,0x20400c00,0x000c1300,0x3005300c,
    0x08000c43,0x03500081,0x8c000002,0x40261808,0x00130261,0x0cc00200,
    0xbc897020,0x537545ea,0x22ffa89f,0x366ea2f9,0x07e56d45,0xbf911df5,
    0x57513e61,0x0c83207d,0x866ed65c,0xb9ddd9bb,0x0a605f53,0xcbec9da8,
    0x7b5003eb,0xa8048922,0x2005b501,0x53fdcccf,0x754ff5fd,0x2a0ffe9e,
    0x99ffd9fe,0x3fa60ffe,0x1a605f54,0x2e982640,0x7c4b97f4,0x213a3644,
    0x8d1220fa,0xc87f1745,0x97121fc6,0xb92e07e4,0x89f12dc4,0x449911dc,
    0x7c05300b,0x03dcbf12,0x47707b71,0x200d403c,0x45100bda,0x457e45e8,
    0x7c45fe42,0x5dd17e44,0x2bd113e2,0x00af601c,0x5310b600,0x6c8fb0be,
    0x2e4f8274,0x54086fc0,0x1f989f10,0x0f41a9b6,0x3ea1f306,0x8fb71fc0,
    0x14c00905,0x33be2150,0x6e442fdc,0x7c4be202,0x4c006a01,0x07ec01cd,
    0x746c81ee,0xb1b23dc5,0x4079f30b,0xaaa81b2b,0x21aaaaaa,0x1f98b82d,
    0xe8d90fdc,0x5424f904,0xd77303ff,0x3f229d09,0x200f9892,0x987f33f8,
    0x23f5572f,0x26035039,0xaaaccaaa,0x01fde442,0x2e0039b3,0x2aa1f71f,
    0x1aaaccaa,0x5c0ee440,0x2e07b81f,0x91ee2ec6,0x1f905d8d,0x54499620,
    0xaaaaaaaa,0x26150b61,0xd90fcc3f,0x35f104e8,0x71bf6205,0xcbdc274b,
    0x7cc38dd8,0x7453a202,0x9955fcc4,0x06e0731f,0x5665554c,0x7c36a2aa,
    0x00736604,0x50ec87e4,0x55599555,0x42db8803,0x40f703f9,0x1ee2ec6b,
    0xd905d8d9,0x0190320b,0x3a016c00,0xd1b23dc5,0x44276c09,0x0fcc7ee2,
    0x277f109d,0x45e80cfa,0x7cc3e209,0x7a8fbe20,0x2600582c,0x3f43f102,
    0x05b91062,0x01f88fc4,0x664c006a,0x7045e881,0x17635c0f,0x2ec6c8f7,
    0x261fccdc,0x0f205883,0x3f201f44,0x23f70f61,0x0fe605ea,0x3e61f1a2,
    0xfb039f53,0xefc82fc1,0x2a4a83b9,0x87907e44,0x449931cc,0x2605300c,
    0x539fb12f,0x05edc409,0x5402c8b2,0x0066d401,0x1ee381fb,0x2e2ec7c8,
    0x51763647,0x4010fe47,0x4c406600,0x3ccfc801,0xee9efe88,0x3e203a03,
    0x77ec3bad,0x44981ec9,0x9ff7102c,0x10b82e01,0xb8997d99,0x3b8cdd9b,
    0x80a605f5,0xffc8cefd,0x27b5000d,0x2a00e238,0x7005b501,0x27d999df,
    0x7540cfea,0x32ffa8bf,0x7fd517fd,0x3ea5ff51,0x000bbf23,0x03000000,
    0x00400430,0x0400100c,0x00004002,0x40080c43,0x40298020,0x80004408,
    0x77764000,0x014eeeee,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x0a000000,0x01062026,0x00400802,0x40410201,0xdddb8cc0,0xb74ddddd,
    0x9bbbbbbb,0x05bd7066,0x88d89265,0x1bbbb10d,0x33333322,0x44d50ccc,
    0xdddddddd,0x0000000d,0x00000000,0x00000000,0x103e2000,0xd886c41b,
    0x03b7626d,0xaaa85937,0x10ee6cc6,0x23ddb65f,0x800be639,0x31fa8004,
    0x32b7ae23,0x27ea1f91,0x999912f9,0x44444441,0x001ae088,0x00000000,
    0x00000000,0x00000000,0x6c746e40,0x83623624,0x4790c3a0,0xf328f34a,
    0x2f896241,0xf983eedb,0x04800771,0x4c027700,0x0000040a,0x00000000,
    0x00000000,0x00000000,0x20000000,0x40cdddc8,0x4b880dd8,0x3f2643b0,
    0x8907cdc4,0xaa647e0b,0x00287447,0xbbbbb748,0x00289bbb,0x00000000,
    0x00000000,0x00000000,0x00000000,0x32a00000,0x0dd882cd,0x14c2e988,
    0xf8f469aa,0x2a68b120,0x00544b13,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x7e400000,0x3624f9d9,0x45700d88,0x1acb8129,
    0xb327576c,0x866383b9,0x00000003,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x111f1110,0x50d88362,0x777d4757,0x00400005,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x04c0c800,0x331030c4,0x00000013,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,
};

static signed short stb__times_20_latin1_x[224]={ 0,2,1,0,0,0,0,0,0,0,1,0,0,0,
1,0,0,2,0,0,0,0,0,0,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,-1,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,-1,1,0,-1,0,0,0,0,0,0,0,
-2,0,0,0,0,0,-1,0,0,0,0,0,0,0,0,0,0,2,1,1,0,2,2,2,2,2,2,2,2,2,
2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,2,1,0,0,0,
1,1,0,0,-1,0,0,0,0,-1,0,0,0,0,2,1,-1,1,1,1,0,0,1,1,0,0,0,0,0,0,
0,0,-1,0,0,0,0,0,0,0,0,0,0,-1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,0,
 };
static signed short stb__times_20_latin1_y[224]={ 16,3,3,3,3,3,3,3,3,3,3,5,14,11,
14,3,3,3,3,3,3,4,3,4,3,3,7,7,5,8,5,3,3,3,4,3,4,4,4,3,4,4,4,4,
4,4,4,3,4,3,4,3,4,4,4,4,4,4,4,3,3,3,3,19,3,7,3,7,3,7,3,7,3,3,
3,3,3,7,7,7,7,7,7,7,5,7,7,7,7,7,7,3,3,3,10,4,4,4,4,4,4,4,4,4,
4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,16,7,4,3,5,4,
3,3,4,3,3,7,8,11,3,2,3,5,3,3,3,7,4,9,15,3,3,7,3,3,3,7,0,0,0,0,
0,0,4,3,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,6,3,0,0,0,0,0,4,3,3,3,
3,4,4,3,7,7,3,3,3,4,3,3,3,4,3,4,3,3,3,4,4,6,7,3,3,3,4,3,3,4,
 };
static unsigned short stb__times_20_latin1_w[224]={ 0,3,6,9,9,15,14,3,6,6,7,10,4,6,
3,6,9,5,9,8,9,8,9,9,7,9,3,3,10,10,10,8,17,13,12,12,13,11,10,13,13,6,7,14,
11,16,14,13,10,13,13,9,11,13,13,17,13,13,11,5,6,5,9,11,3,8,10,8,10,8,8,9,9,5,
6,10,5,14,9,9,10,10,7,7,6,10,9,13,9,9,8,6,2,6,10,10,10,10,10,10,10,10,10,10,
10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,0,3,7,9,9,10,
2,7,6,14,6,9,10,6,14,11,7,10,6,5,3,9,10,3,4,4,6,9,13,13,14,8,13,13,13,13,
13,13,17,12,11,11,11,11,6,6,6,6,13,14,13,13,13,13,13,8,13,13,13,13,13,13,10,9,8,8,
8,8,8,8,12,8,8,8,8,8,5,5,6,6,9,9,9,9,9,9,9,10,9,10,10,10,10,9,10,9,
 };
static unsigned short stb__times_20_latin1_h[224]={ 0,14,6,14,15,14,14,6,17,17,8,10,6,2,
3,14,14,13,13,14,13,13,14,13,14,14,10,13,10,4,10,14,17,13,12,14,12,12,12,14,12,12,13,12,
12,12,13,14,12,17,12,14,12,13,13,13,12,12,12,17,14,17,8,1,4,10,14,10,14,10,13,13,13,13,
17,13,13,9,9,10,13,13,9,10,12,10,10,10,9,13,9,17,17,17,3,12,12,12,12,12,12,12,12,12,
12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,0,13,16,14,10,12,
17,17,3,14,7,10,4,2,14,2,7,10,8,8,4,13,16,2,5,8,7,10,14,14,14,13,16,16,16,16,
16,16,12,17,16,16,16,16,16,16,16,16,12,17,17,17,17,17,17,8,14,17,17,17,17,16,12,14,14,14,
14,13,13,14,10,13,14,14,14,13,13,13,13,12,14,12,14,14,14,13,13,8,10,14,14,14,13,17,17,16,
 };
static unsigned short stb__times_20_latin1_s[224]={ 255,194,57,38,218,71,240,53,116,1,1,
106,251,121,110,21,28,84,198,80,188,156,147,74,72,89,102,174,130,84,162,
99,73,241,156,181,55,169,84,157,181,95,51,69,207,230,59,198,219,42,102,
171,195,129,143,157,142,128,116,29,249,123,225,144,95,40,228,63,15,247,186,
195,205,215,35,175,90,200,190,1,118,107,182,32,232,11,22,49,215,34,173,
56,63,66,99,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,
44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,255,227,39,
140,92,221,91,94,114,48,38,72,73,121,132,128,45,151,24,18,69,208,47,
140,64,246,31,141,226,212,117,165,136,25,82,150,164,185,26,129,70,58,199,
124,96,103,211,178,1,142,157,171,185,213,227,9,1,241,1,199,102,110,15,
239,53,62,44,1,218,63,117,19,35,26,87,10,28,150,44,249,96,239,1,
11,119,178,231,235,82,129,108,106,96,19,8,15, };
static unsigned short stb__times_20_latin1_t[224]={ 1,36,105,52,19,36,36,105,1,1,105,
94,94,105,105,52,52,67,52,52,52,52,36,67,52,52,94,52,94,105,94,
52,1,52,81,36,81,81,81,36,81,81,67,81,81,81,67,36,81,1,81,
36,81,67,67,67,81,81,81,1,19,1,94,105,105,94,19,94,36,81,67,
67,67,67,1,67,67,94,94,94,67,67,94,94,67,94,94,94,94,67,94,
1,1,1,105,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,
81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,1,52,19,
52,94,67,1,1,105,52,105,94,105,105,36,105,105,94,105,105,105,52,19,
105,105,94,105,94,36,36,36,52,19,19,19,19,19,19,81,1,19,19,19,
19,19,19,19,19,81,1,1,1,1,1,1,105,37,1,19,1,1,19,81,
19,36,36,36,67,52,52,94,67,36,36,36,67,67,52,67,67,36,67,52,
52,52,52,52,94,94,52,52,36,67,1,1,19, };
static unsigned short stb__times_20_latin1_a[224]={ 72,96,118,144,144,241,225,52,
96,96,144,163,72,96,72,80,144,144,144,144,144,144,144,144,
144,144,80,80,163,163,163,128,266,209,193,193,209,177,161,209,
209,96,112,209,177,257,209,209,161,209,193,161,177,209,209,273,
209,209,177,96,80,96,136,144,96,128,144,128,144,128,96,144,
144,80,80,144,80,225,144,144,144,144,96,112,80,144,144,209,
144,144,128,139,58,139,156,225,225,225,225,225,225,225,225,225,
225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,
225,225,225,225,225,225,225,225,72,96,144,144,144,144,58,144,
96,220,80,144,163,96,220,144,116,159,87,87,96,166,131,72,
96,87,90,144,217,217,217,128,209,209,209,209,209,209,257,193,
177,177,177,177,96,96,96,96,209,209,209,209,209,209,209,163,
209,209,209,209,209,209,161,144,128,128,128,128,128,128,193,128,
128,128,128,128,80,80,80,80,144,144,144,144,144,144,144,159,
144,144,144,144,144,144,144,144, };

// Call this function with
//    font: NULL or array length
//    data: NULL or specified size
//    height: STB_FONT_times_20_latin1_BITMAP_HEIGHT or STB_FONT_times_20_latin1_BITMAP_HEIGHT_POW2
//    return value: spacing between lines
static void stb_font_times_20_latin1(stb_fontchar font[STB_FONT_times_20_latin1_NUM_CHARS],
                unsigned char data[STB_FONT_times_20_latin1_BITMAP_HEIGHT][STB_FONT_times_20_latin1_BITMAP_WIDTH],
                int height)
{
    int i,j;
    if (data != 0) {
        unsigned int *bits = stb__times_20_latin1_pixels;
        unsigned int bitpack = *bits++, numbits = 32;
        for (i=0; i < STB_FONT_times_20_latin1_BITMAP_WIDTH*height; ++i)
            data[0][i] = 0;  // zero entire bitmap
        for (j=1; j < STB_FONT_times_20_latin1_BITMAP_HEIGHT-1; ++j) {
            for (i=1; i < STB_FONT_times_20_latin1_BITMAP_WIDTH-1; ++i) {
                unsigned int value;
                if (numbits==0) bitpack = *bits++, numbits=32;
                value = bitpack & 1;
                bitpack >>= 1, --numbits;
                if (value) {
                    if (numbits < 3) bitpack = *bits++, numbits = 32;
                    data[j][i] = (bitpack & 7) * 0x20 + 0x1f;
                    bitpack >>= 3, numbits -= 3;
                } else {
                    data[j][i] = 0;
                }
            }
        }
    }

    // build font description
    if (font != 0) {
        float recip_width = 1.0f / STB_FONT_times_20_latin1_BITMAP_WIDTH;
        float recip_height = 1.0f / height;
        for (i=0; i < STB_FONT_times_20_latin1_NUM_CHARS; ++i) {
            // pad characters so they bilerp from empty space around each character
            font[i].s0 = (stb__times_20_latin1_s[i]) * recip_width;
            font[i].t0 = (stb__times_20_latin1_t[i]) * recip_height;
            font[i].s1 = (stb__times_20_latin1_s[i] + stb__times_20_latin1_w[i]) * recip_width;
            font[i].t1 = (stb__times_20_latin1_t[i] + stb__times_20_latin1_h[i]) * recip_height;
            font[i].x0 = stb__times_20_latin1_x[i];
            font[i].y0 = stb__times_20_latin1_y[i];
            font[i].x1 = stb__times_20_latin1_x[i] + stb__times_20_latin1_w[i];
            font[i].y1 = stb__times_20_latin1_y[i] + stb__times_20_latin1_h[i];
            font[i].advance_int = (stb__times_20_latin1_a[i]+8)>>4;
            font[i].s0f = (stb__times_20_latin1_s[i] - 0.5f) * recip_width;
            font[i].t0f = (stb__times_20_latin1_t[i] - 0.5f) * recip_height;
            font[i].s1f = (stb__times_20_latin1_s[i] + stb__times_20_latin1_w[i] + 0.5f) * recip_width;
            font[i].t1f = (stb__times_20_latin1_t[i] + stb__times_20_latin1_h[i] + 0.5f) * recip_height;
            font[i].x0f = stb__times_20_latin1_x[i] - 0.5f;
            font[i].y0f = stb__times_20_latin1_y[i] - 0.5f;
            font[i].x1f = stb__times_20_latin1_x[i] + stb__times_20_latin1_w[i] + 0.5f;
            font[i].y1f = stb__times_20_latin1_y[i] + stb__times_20_latin1_h[i] + 0.5f;
            font[i].advance = stb__times_20_latin1_a[i]/16.0f;
        }
    }
}

#ifndef STB_SOMEFONT_CREATE
#define STB_SOMEFONT_CREATE              stb_font_times_20_latin1
#define STB_SOMEFONT_BITMAP_WIDTH        STB_FONT_times_20_latin1_BITMAP_WIDTH
#define STB_SOMEFONT_BITMAP_HEIGHT       STB_FONT_times_20_latin1_BITMAP_HEIGHT
#define STB_SOMEFONT_BITMAP_HEIGHT_POW2  STB_FONT_times_20_latin1_BITMAP_HEIGHT_POW2
#define STB_SOMEFONT_FIRST_CHAR          STB_FONT_times_20_latin1_FIRST_CHAR
#define STB_SOMEFONT_NUM_CHARS           STB_FONT_times_20_latin1_NUM_CHARS
#define STB_SOMEFONT_LINE_SPACING        STB_FONT_times_20_latin1_LINE_SPACING
#endif

