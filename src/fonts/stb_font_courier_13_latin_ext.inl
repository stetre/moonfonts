// Font generated by stb_font_inl_generator.c (4/1 bpp)
//
// Following instructions show how to use the only included font, whatever it is, in
// a generic way so you can replace it with any other font by changing the include.
// To use multiple fonts, replace STB_SOMEFONT_* below with STB_FONT_courier_13_latin_ext_*,
// and separately install each font. Note that the CREATE function call has a
// totally different name; it's just 'stb_font_courier_13_latin_ext'.
//
/* // Example usage:

static stb_fontchar fontdata[STB_SOMEFONT_NUM_CHARS];

static void init(void)
{
    // optionally replace both STB_SOMEFONT_BITMAP_HEIGHT with STB_SOMEFONT_BITMAP_HEIGHT_POW2
    static unsigned char fontpixels[STB_SOMEFONT_BITMAP_HEIGHT][STB_SOMEFONT_BITMAP_WIDTH];
    STB_SOMEFONT_CREATE(fontdata, fontpixels, STB_SOMEFONT_BITMAP_HEIGHT);
    ... create texture ...
    // for best results rendering 1:1 pixels texels, use nearest-neighbor sampling
    // if allowed to scale up, use bilerp
}

// This function positions characters on integer coordinates, and assumes 1:1 texels to pixels
// Appropriate if nearest-neighbor sampling is used
static void draw_string_integer(int x, int y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0, cd->t0); glVertex2i(x + cd->x0, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t0); glVertex2i(x + cd->x1, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t1); glVertex2i(x + cd->x1, y + cd->y1);
        glTexCoord2f(cd->s0, cd->t1); glVertex2i(x + cd->x0, y + cd->y1);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance_int;
    }
    glEnd();
}

// This function positions characters on float coordinates, and doesn't require 1:1 texels to pixels
// Appropriate if bilinear filtering is used
static void draw_string_float(float x, float y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0f, cd->t0f); glVertex2f(x + cd->x0f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t0f); glVertex2f(x + cd->x1f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t1f); glVertex2f(x + cd->x1f, y + cd->y1f);
        glTexCoord2f(cd->s0f, cd->t1f); glVertex2f(x + cd->x0f, y + cd->y1f);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance;
    }
    glEnd();
}
*/

#ifndef STB_FONTCHAR__TYPEDEF
#define STB_FONTCHAR__TYPEDEF
typedef struct
{
    // coordinates if using integer positioning
    float s0,t0,s1,t1;
    signed short x0,y0,x1,y1;
    int   advance_int;
    // coordinates if using floating positioning
    float s0f,t0f,s1f,t1f;
    float x0f,y0f,x1f,y1f;
    float advance;
} stb_fontchar;
#endif

#define STB_FONT_courier_13_latin_ext_BITMAP_WIDTH         256
#define STB_FONT_courier_13_latin_ext_BITMAP_HEIGHT         98
#define STB_FONT_courier_13_latin_ext_BITMAP_HEIGHT_POW2   128

#define STB_FONT_courier_13_latin_ext_FIRST_CHAR            32
#define STB_FONT_courier_13_latin_ext_NUM_CHARS            560

#define STB_FONT_courier_13_latin_ext_LINE_SPACING           6

static unsigned int stb__courier_13_latin_ext_pixels[]={
    0x04030084,0x0cc03000,0x01001000,0x20080200,0xaa806600,0x44051882,
    0x00198a82,0x0aaa0144,0x03300288,0x44000400,0x40430072,0x4406300b,
    0x4e60000c,0xbb884884,0x80640682,0x406a6028,0x893903ab,0x980c8049,
    0x98177503,0x44541989,0x200b9828,0x2a20ae03,0x2203302a,0x360e0152,
    0x70662662,0x5caa60e1,0x644144e0,0x0c460a80,0x220a3038,0x4a82e073,
    0x02080800,0x2a015100,0x1002a602,0x000380c0,0xc9820802,0x4b261972,
    0x824a60cb,0x2a21a9b9,0x98494c0b,0x972c9892,0x31c494c1,0x22832e59,
    0x48e28383,0x9065cb26,0x5440ba88,0x65cb260b,0x832e5930,0x2aa63809,
    0x26ae63a9,0x4c75550c,0x4540c9ab,0x59305501,0x9ab9832e,0x326ae60c,
    0xa872f2e0,0x644723aa,0x70e44721,0x000e1c38,0x13992a37,0x1c000019,
    0x21c3800e,0x6d447143,0x70d47142,0x1398a638,0x0644e619,0x88e1c387,
    0x8e28384a,0x471c0ea3,0x32e0303a,0x51c38704,0x1b0ea387,0x38663824,
    0x1c3870cc,0x5524470e,0x4438ee28,0x91154913,0x4470e154,0x21c38aa4,
    0x64c38a63,0x71cc11c0,0x44386e38,0x70e38873,0x1c1c1c38,0x38866714,
    0x43886670,0x35503bb9,0x88663870,0x24388663,0x2670e02a,0x43833381,
    0x3870e1c3,0x38cc5c26,0x43870e38,0x3870e1c3,0x8323870e,0x880c8383,
    0x706470e3,0x438e0e70,0x20e0e1c3,0x2a38e283,0x0751c703,0x3839c0cc,
    0x1c3a8e1c,0x40e0d875,0x9981ccc3,0x70e1c383,0x15311c38,0x871c1c2a,
    0x3870e1c3,0x21c38e1c,0x83838a23,0x70e298e2,0x0e7070d4,0x70e1c38e,
    0x65d47070,0x22ae238a,0x455c4703,0x20e5dd43,0x43870728,0x5c438ab8,
    0x5d4dc38a,0x40390700,0x0e14381c,0x590e2385,0x70d4151c,0x4388e1c4,
    0x2388e143,0x1c50a1c3,0x0647141c,0x0a8e2287,0x4350546a,0x7050e143,
    0x0e038070,0x3144701c,0x42babb83,0x700e0143,0x07070038,0x17591038,
    0x4c0bac88,0x7910dbbb,0x3cab8175,0x306dddcc,0x6441b777,0x5ddcc0ba,
    0xbac8870d,0x05d471c0,0x91123866,0x55c48175,0x21e55c3c,0x6440bac8,
    0x838380ba,0x65541ba8,0x5502eaa0,0xcbaab819,0xac8870e0,0x80caa80b,
    0x0b660caa,0x9750dd54,0x01012ea0,0x02180008,0x08000000,0x0082a800,
    0x10a00213,0x08804022,0x10020000,0x2a55b550,0x03301882,0x08066031,
    0x0b261950,0x26019802,0x31019881,0x26603330,0x00000001,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x40028800,
    0x31280a03,0x3220a2e0,0x3102a700,0x3701d40a,0x400a8020,0x00806a02,
    0x44060669,0x5144cccc,0x03502944,0x01910144,0x80c88715,0x35750101,
    0x28851010,0x1040cc07,0x221c03a8,0x0b80504a,0x22a07730,0x2202a703,
    0x5057501b,0x02a70513,0xa9885755,0x0a802e03,0x40e00090,0x7710a719,
    0x1980c981,0x054e01c0,0x87381551,0x8eee1bca,0x1d5c910a,0x100c881c,
    0x20aae205,0x706aea03,0x55017510,0x45555055,0xa81972c9,0x1aaa82aa,
    0x1065cb26,0x35550175,0x3260ba88,0xaaa81972,0x065cb261,0x21c88e40,
    0x4620aada,0x40ba8853,0x25931aba,0x0d5540cb,0x51166644,0x31aba817,
    0x14108623,0xccca8102,0x49999911,0x0201ccc9,0x442a2c9c,0x644e61c4,
    0x05c582e0,0x82e1c38b,0x1c6885c5,0x4191398e,0x89ccd10b,0x0b870e0c,
    0x511c38d1,0x1c1c3307,0xc89cc1c0,0x43922150,0x206885c3,0x8644e618,
    0x20a6910a,0x7512bbb8,0x395ddc45,0x8538cc6a,0x77730a63,0x04283770,
    0x5138870e,0x70e01440,0x08510144,0x9c438e1c,0x38870428,0x0214470e,
    0x27038387,0x83803819,0x70429c43,0x4010a238,0x0a710e18,0x0b85dc41,
    0x305ce206,0x4e311446,0x1980e1c2,0x15d441ec,0x0cce0e1c,0x1c380330,
    0x200cc033,0x267071c3,0x438e0e01,0x38700663,0x20733038,0x38383803,
    0x1c385751,0x70c40033,0x08aea270,0x0e17751c,0x0e05dd47,0x17757038,
    0x5c1cbba8,0x870e2038,0x32253383,0x3722531d,0x894c70e1,0x380531dc,
    0x0a67071c,0x470e3838,0x20e1c029,0x55c07203,0x056d443a,0x1c710707,
    0x1140298e,0x9c41c1c3,0x3831b9ac,0x7063755b,0x7038085c,0x0cc510e2,
    0x21c72a75,0x2a55b553,0x21c486a0,0x4850e1c4,0x4381121c,0x121a82a2,
    0x1c350541,0x21c0890a,0x206b6aa2,0x03005403,0x1c38d415,0x70224287,
    0x8d41504c,0x20c889c3,0x21c1baac,0x4531baac,0x14470383,0x1032eaae,
    0x083755b0,0x64c3cab8,0x5564c4aa,0x205d6444,0x6c44aac9,0x5d6442ba,
    0x221e55c0,0x655c2bad,0x205d6443,0x6442bad8,0x540c40ba,0x1202404b,
    0x55b1e55c,0x05d64437,0x770aeb62,0x47957055,0x81c1baad,0x4080a880,
    0x2a24aaac,0xa8b620ad,0x01510042,0x4000a202,0x08022008,0x80100440,
    0x00020000,0x02004008,0x00ccc1a8,0x20001002,0x80100200,0x00010000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x20728800,0x00728831,0x05551000,
    0x88003553,0x0200600c,0x541440e5,0x046072e4,0xb964c198,0x9100840c,
    0x01004101,0x220c6070,0x052884cc,0x2510206a,0x0caa64c3,0x8300a030,
    0x3441ccc9,0x2ea60322,0x3900c981,0x93127209,0xba8832e5,0x105dde40,
    0x9305c0e7,0x1910f2e5,0x8b2062a0,0x880b9a83,0xab838702,0x71073883,
    0x80eee055,0x1c0a300a,0x03301930,0x8e02e61a,0x0e05501a,0x0a6380b8,
    0x20e66541,0x80997010,0x1c380c01,0x0b832273,0x0c98e4ca,0x4a8e1c04,
    0x5c06072e,0x5021070b,0x3870e5c9,0x2a395010,0x0420082c,0x99666654,
    0x0381931c,0x32239995,0x664cb04c,0x4017381c,0x81ccca80,0x40438700,
    0x80bbb883,0xbbb881aa,0x1c2a9220,0x871c438e,0x7114c2a3,0x90e1c577,
    0x154911c5,0xa92239ce,0x43871642,0x305ddc43,0x24885423,0x6442e62a,
    0x85471dc1,0x54703829,0x238901c1,0x4425dc29,0xa8e3cabb,0x712eee21,
    0x38381775,0x839c1c38,0x3870e1c3,0x21c7071c,0x305c39c3,0x21770e1c,
    0x2a70e1c3,0x770e1c39,0x1c3870e1,0x8768a88e,0x839ce1c3,0x40e7063a,
    0x8288c223,0x43871203,0x4560388b,0x6470a232,0x848389c3,0x510e1443,
    0x1c38510e,0x20e3870e,0x221c3b13,0x20bba80d,0x439ce1c3,0x43b8e1c3,
    0x439ce1c3,0x43851143,0x21c39aab,0x21c64dc3,0xd881bb8a,0x0e0cc700,
    0xbab8301c,0x54331c0b,0x1c1aadbb,0x8e1464a2,0x1c1c2c28,0x8575770e,
    0x4388e1c3,0x0d415143,0x38307050,0x7353850e,0x2d88e238,0x70e238b1,
    0x75710e6a,0x4ee1c381,0xb8711c3b,0xa55c2b8b,0x5b510700,0x4085c375,
    0x71380223,0x1c722d88,0x77042e0b,0x2a2d88e1,0x2e60e1a2,0x30e1c0ba,
    0xbb981757,0x2eb220db,0x441e55c0,0xac8380ba,0x32aa21ba,0xb98771c0,
    0x30080dbb,0x71c1b777,0x55cc0e07,0x43b9dc0b,0x260dbbb9,0x14738193,
    0x8a60201c,0x1e2331c3,0xa8081447,0x532bbdba,0x0375791c,0x5b530402,
    0x21950103,0x000082c9,0x10100004,0x401015b5,0x0b12d880,0x80015100,
    0x2a0b12d8,0xa8e40201,0x32a00003,0x2a24aad8,0x40a880ad,0xb514aaac,
    0xb1043755,0x02a21545,0x4aaac802,0x02880211,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00140c44,0x4007332a,0x26000518,0x2e008002,0x07260000,0x40100644,
    0x100a2aaa,0x00008000,0x0a9c0080,0x3cccc980,0x20005000,0x50020518,
    0x0dcc0005,0x0c0e0e2a,0x4a44070b,0x80498aea,0x22498028,0x30380bba,
    0x31819357,0x5dc0e701,0x03960b83,0x32e60644,0x0eae21cb,0xa8375773,
    0x81d5c0bc,0x414cc1c8,0x240681c3,0x2ea09390,0x502baa82,0x1b893005,
    0x32a39455,0x7031c1cc,0x332a3380,0x99700e1c,0xccca8e00,0x51c132e1,
    0x4f202447,0x2881084b,0x20200a20,0x8a22920d,0x2a2a1623,0xccc98080,
    0x09c0ca3c,0x6664c001,0x9930303c,0x04cb8799,0xda980997,0x2b6650a1,
    0x56d41c2d,0xab98380a,0x77370703,0x93035503,0x2a070737,0x8710cc1a,
    0x710e1c03,0x200cc177,0x81777103,0x35298544,0xbb889062,0x02aea63b,
    0x0c6a2387,0x2ea60957,0x530e1c0a,0x41c38157,0x035501aa,0x04c73793,
    0x03839c66,0x1a383807,0x70706c1c,0x3858920e,0x3a8e0e70,0x0e05d4dc,
    0x2531c387,0x20a21dc8,0x438361c3,0x8b31c4cd,0x21439623,0x1aa88213,
    0x1438119c,0x0a1c084e,0x039c0427,0x258920e7,0x5ed45418,0x40381c1c,
    0x0e090cc3,0x39441512,0x20e120cc,0x15710728,0xb8510b87,0x70a23aaa,
    0x221c1c48,0x2ea6e1c2,0x711442e0,0x4e0c4735,0x5c2aaac8,0x4153184a,
    0x555911c3,0xc884ab85,0x255c2aaa,0x25107288,0x87120cc3,0x40e062e3,
    0x435b5303,0x06c1c162,0x42babb87,0x2e0e1623,0x21c02bab,0x3870e1c3,
    0x12ab261c,0x1c387066,0x87014470,0x33807142,0x6c4a1102,0x201c5aaa,
    0x38070233,0x57577023,0x1c2babb8,0x0bac88b1,0x5c0e066e,0x540c43aa,
    0x4c381caa,0x21c1baac,0x0e4d6543,0x55070e0e,0x0e1c3819,0x00bab987,
    0x2e61c013,0x40b660ba,0x36a03ab8,0x982aaa61,0x0e1c3bab,0x4c28066a,
    0x0e1c3bab,0x43877573,0x3870e1c3,0x20e4d654,0x135099cc,0x040d6d4c,
    0x54c00350,0xca8081ad,0x30105930,0x432a35b5,0x440cc2c9,0x3621b31d,
    0x40101b52,0x202600a8,0x04019880,0x80202660,0x5aaad880,0x01013000,
    0x20b555b1,0x5aaad880,0xa964c32a,0x0105930c,0x0000cc62,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x70a00000,0x0201040a,0x04011000,0x4c060010,0x706aaa02,0x8c400099,
    0x10006a02,0x40002015,0x0880100a,0x75008010,0x40080a60,0x04022008,
    0x0000818c,0x6440a804,0x70177500,0x8806c077,0x440eaa03,0x9806e00c,
    0x50d10b81,0x824e4035,0x903302ba,0x18a87555,0xaab849b8,0x3bb80cc3,
    0x06440710,0x22661d5c,0x77703302,0x03880e20,0x428c4959,0xb980bba8,
    0x075731a9,0x202ccc87,0x80004200,0x00800400,0x33332602,0x27010a23,
    0x4cb80c03,0x23cccc98,0x86060660,0x65411419,0x100841cc,0x22330200,
    0x32a132e3,0x100841cc,0x22130080,0x2a399952,0x51b872e4,0x4198a209,
    0x57710e22,0x40aba987,0x54c3abb8,0x55dc40ab,0x2055d4c3,0x21c3abb8,
    0x25100663,0x20777303,0x81c381aa,0x4a1ddcc3,0x80aaa1ba,0x44552443,
    0x2a488aa4,0x554482a2,0x77730701,0x71077730,0x70e1c177,0xb8a1c590,
    0x20e0b883,0x43850cc2,0x3870a143,0x43870a14,0x4270e142,0x57700a60,
    0x38198057,0x38042707,0x8a8b8660,0x1c0544a1,0x43870e1c,0x773911c3,
    0x300e0738,0x70e0cc03,0x77070e1c,0x317098e1,0x0330cb83,0x880e2885,
    0x01c2aaac,0x38555591,0x0aaab220,0x904ab807,0x2a0e1c08,0x39441cbb,
    0x0a204ab8,0xc9c39775,0x3828d41a,0x870e1c38,0x2248c1c3,0x2ea0e072,
    0x65dd41cb,0x21c70a21,0x4739c1c3,0x20150a98,0x4310a073,0x8700e043,
    0x810e01c0,0x27021c03,0x2bad8811,0x1164c32a,0x2aee0cc5,0x50119c2b,
    0x24866288,0x382b8809,0x4470e238,0x2a0711c3,0x20aeaee2,0x44331443,
    0x23870662,0x3838130b,0x0e2c8735,0x385028b8,0x261d55cc,0x55cc3bab,
    0x1dd5cc3a,0x730eaae6,0xaab98775,0x01c0e1c3,0xcbaab828,0x1c3870e0,
    0x65d55c1c,0x14302550,0xdbbb9838,0x836eee60,0x510dbbb9,0x1c1c3879,
    0x7065d55c,0x5cc19755,0x0ef220ba,0x223b8e0e,0x32e0babc,0x2f2028ba,
    0x080100bb,0x10020040,0x44040080,0xa885aaad,0x00828800,0x44b26195,
    0x2005aaad,0x550eee00,0x1ada9835,0x02000000,0x9964c32a,0x20041ada,
    0x30200800,0x4b6235b5,0x02008658,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x40000000,0x200a8021,
    0x40000008,0x20322031,0x000080c8,0x2aa88000,0x84cc80c0,0x00800929,
    0x409ab880,0x2020891a,0x20aae201,0x18004cc8,0x4b32272e,0x44002aa8,
    0x664409ab,0x984cc883,0x4c06230d,0x2a57b101,0x32ea0aab,0x206ee22c,
    0x10e71051,0x103220e5,0xa9819779,0x312a20ab,0x2e079999,0x54400000,
    0xb8875704,0x001882bb,0x01c15554,0x2a2000c4,0x0e0dc2ac,0x88e66547,
    0x00031004,0x32e19100,0x1931c984,0x55805424,0xcc98e385,0x333263cc,
    0x07332a3c,0x38705c04,0x0e1c1c14,0x41575300,0x80e0aa48,0xb9860b80,
    0x83bb983b,0x0aada808,0x9222a922,0x0409b82a,0xb30e0e1c,0x2eee2055,
    0x441ddcc0,0xaa800bbb,0x4c530a81,0x20ddd40a,0x83738555,0x7070e1c3,
    0x87077730,0x0aaab223,0x22084e0e,0x21c0cbbc,0x0ae0e1c2,0x54177173,
    0x403300bb,0x1c0ea219,0x0e1c3870,0x4575550e,0x4dc1c1c3,0x80e1c0ba,
    0x750e1c19,0x21ce0738,0x2111aaba,0x70aee229,0x021382e2,0x201c0427,
    0x070e1c19,0x255c3970,0xac88e0b8,0x30e1c2aa,0x8305701b,0x5072eea3,
    0x88703977,0x1c380ada,0x1187070e,0x41c1c387,0x1c288a0b,0x28872eea,
    0x72887a1c,0x45303620,0x38550703,0x2e09571c,0x2ea0e04a,0x4c7621cb,
    0x0eeae60d,0x1c08ce0e,0x2238070e,0x81c0e623,0x4511baac,0x8198a219,
    0x711c0703,0x40e0e238,0x70719b83,0x8e1c3870,0x38706628,0x57577122,
    0x138e20e0,0x4e154144,0x38119c70,0x4510e023,0x14401019,0x1c387070,
    0x8775730e,0x1c0dbbb9,0x55c1c038,0x2aae0cba,0xab81c0cb,0x6dddcc3a,
    0x036eee60,0x9da84707,0x438382aa,0x205d5cc3,0x260cbaab,0x21c00bab,
    0x2eea0703,0x50177971,0x0ddc6c45,0x20e1c387,0x0cbaab83,0x81500544,
    0x5b12adaa,0x98ec4b55,0xa800080d,0x2b6a2ada,0x0405440a,0x56d54020,
    0x80000082,0x5772adaa,0x36a60075,0x3663b11a,0x20020080,0x930ca800,
    0x4056d445,0x2aea0100,0x556c4102,0x2aab625a,0x106b6a65,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x4c000000,0x9c4001aa,0x001080b9,0x4e203000,0x30060084,0x1ae12710,
    0x00000002,0x2aa00084,0x2440001a,0x26602055,0x95cc001a,0xa9804001,
    0x4cc41041,0x4c018199,0x205dd41a,0x777304cb,0x55c1c770,0x5dc402c3,
    0x2001543a,0x80dc1bb9,0x810000b8,0x40730299,0xab868039,0x42e15d43,
    0x5c12ea68,0x9870e0cb,0x388743ab,0xca8dc4b8,0x88900932,0x2e23889b,
    0x0e04022a,0x51c445c4,0x200d541c,0x202a1c19,0x1c280280,0x055d4c04,
    0x00802041,0x0202eee2,0x0c1430aa,0x20200305,0x1c042883,0x21c3804c,
    0x04c08a22,0x21c28751,0x33528003,0x08040831,0x5282ab6a,0x70703151,
    0x072eea0e,0x77910987,0x65de4419,0x075101c0,0x10ea2287,0x77173075,
    0x0350e1c1,0x4c505cce,0x2a173143,0x75552baa,0x006605c5,0x8357930e,
    0x51980e23,0x9c575555,0x5c330263,0x0ea20cbb,0xa8946ae5,0x81c08043,
    0x3711408a,0x22887288,0xb8261c19,0x21c170e0,0x3221c043,0x70382aaa,
    0x70a20ae0,0x5cd5405c,0x7757519a,0x2ae6ea33,0x118e2319,0x9945d4c7,
    0x00a83802,0x101b7777,0x198cc1c7,0xb82a0c47,0x32870710,0x00870a31,
    0x84650381,0x2aee0262,0x65d55c2b,0x21c150e0,0x5730e1c3,0x00707075,
    0x701c0e07,0x9cc08e38,0x384ea2a8,0x70aa22e6,0x916670e0,0x00a83808,
    0x28873007,0x41b5591c,0x7070e243,0x81511898,0x81c08043,0x00999889,
    0x45041c38,0x1c3a89d8,0x0703870e,0x1dd5cc1c,0x4070381c,0x2ea0bab9,
    0x47590c4a,0x56430541,0x108e08e3,0x56c43977,0x00a8382b,0x75029807,
    0x730e0175,0x41c381b5,0x81aaaa83,0x55c08043,0x0d55543a,0x26195136,
    0x0406602c,0x886cc762,0xa881b31d,0x4156d540,0x52adaa80,0x56d455b5,
    0x0040100a,0x03bc81cc,0x9d55dce6,0x2003aabb,0x31ada980,0xd8003579,
    0x20083aaa,0xd88080da,0x36aa1b51,0x5b55002a,0x26666665,0x08000880,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x0065cb26,0x44599910,0x100000ba,0x50722390,
    0x1aba8555,0x5dc40dcc,0x261711bb,0x026ae20b,0x03777300,0x00ae4880,
    0x220dddcc,0x3bb883bb,0xbb880000,0x5dd40013,0x03b8ca80,0x77777105,
    0xb98752b8,0x0e001bbb,0x44077707,0x88644e61,0x0e01d44a,0xb05c3866,
    0x19448854,0x0a8e394c,0x22062053,0x2a383bbb,0x21d4ee21,0x577711c3,
    0x00e06a38,0x05ddc407,0x8e15dc91,0x21dd5dc3,0x700ae01b,0x2e14e310,
    0x23a83888,0x702aea63,0x44004c38,0x838710e1,0x706b2a03,0x0a028866,
    0x8e381441,0x5e4439c1,0x0771c0cb,0x8b44a387,0x305c70e1,0x04dc1c38,
    0x43850338,0x2011c243,0x154e4315,0x3393301c,0x64433844,0x23a84aaa,
    0x1c3850e1,0x43100193,0xc9c1c383,0x260c42a2,0x5100cc39,0x41edc457,
    0xb5106ee3,0x88a0b813,0x37b70a72,0x8aef628e,0x17750e23,0x4438dedc,
    0x1424e02d,0x0383870e,0x4577b775,0x4c0702a2,0x6dcc19c9,0x1ddddc1b,
    0xc886ee26,0x0e1c3bbb,0x2188a015,0x5dc1c383,0x20e401c1,0x103b9129,
    0x09c50287,0x1c380b88,0x21c1c2ee,0x773068a2,0x870e0cb7,0x4088ee62,
    0x21c38223,0x088e0e23,0x70e282c7,0x00e0177b,0xbb870e07,0x21c03814,
    0x26380542,0x1c1a82a0,0x0894c1ec,0x0e389038,0x70982387,0x81595114,
    0x2eaf21c3,0xb88a2381,0x3102bb8b,0x8e0dd564,0x70263828,0x1757304c,
    0x385bbb88,0x5e5d5426,0x402ef62b,0x40e01400,0x451ca1c3,0x6443baa9,
    0xb80540ba,0x3cab82ab,0x8838b838,0x9825d41d,0x2ab64aac,0x0eef321b,
    0xb8977b75,0x5996c42d,0xbd980422,0x1a80003b,0x1ddecc04,0x432ef6e2,
    0x80cbbdb8,0xbdb88000,0xda8020cb,0x2e05300b,0x6dc43bbb,0x0da96c43,
    0x0977b195,0xbc980801,0x55000200,0x654ea55b,0x00ccc1c1,0x00004022,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00cdd400,0x00037750,0x2a1445c0,0x8dc2a83b,0xbba83bb8,
    0x88dddd42,0x2e21730b,0x46ea1730,0x261751b9,0x7777712b,0x5cc2bbb8,
    0x2e6001bb,0x2e002bbb,0x751cc752,0x206eee61,0x731bbbbb,0x4c002e67,
    0x91001bbb,0x1930015c,0x1b300722,0x75771030,0x20eee600,0x0028bbb8,
    0x30c88355,0x38940709,0x4c2a0a8e,0x26298542,0x1c282a11,0x88a14e31,
    0x154531c3,0x17303870,0x1c590e1c,0x20c4288e,0x0701a8e2,0x32ef221c,
    0xbca8e1c0,0x073943bb,0x2e20c885,0x7711c283,0x96141980,0x10e703b8,
    0x80e0ae73,0x8288c262,0x10e2e073,0x3870ab15,0x21419c62,0xb8870e19,
    0x71021382,0x5dc38705,0x22143870,0x01738211,0x4170701c,0x9288e1c2,
    0x4719150a,0x3800bb9b,0xba838038,0x20e141cb,0x98872883,0x20382a8a,
    0x1038398b,0x54162019,0xa8cc299a,0x510a0700,0x8805dd5c,0x2e16ee0c,
    0x0eeeee03,0x2eee1ce7,0x41dec40d,0x7b7704bb,0x43870707,0x27188e23,
    0x5c2a9542,0x87070185,0x06628380,0xba838387,0x2ac621cb,0x1ac82238,
    0x407010a8,0x573b82aa,0x50380e70,0x0e62e188,0x40ce0dc4,0x438702b8,
    0x1c387153,0x445c0c62,0x38380e03,0x36eee21c,0x2614e310,0x0cd44393,
    0x730701f3,0x57070755,0xbab98975,0x11438380,0x82638283,0x1c1c5102,
    0x3b815198,0x40515057,0x11c38503,0x43815c45,0x21c1b882,0x438771c3,
    0x2380620a,0x21c07019,0x400b32d8,0x0055194a,0xbdba8100,0xbdba8082,
    0x54040042,0x21952bdb,0x261952d9,0x977b712c,0x7902f6a1,0x1edc4977,
    0x906cc766,0x41620ea3,0xbbc83db8,0x2a8f660b,0x5ddecc05,0x96c46605,
    0x225b30da,0x0aeef664,0x47b30797,0xdb98181c,0x0000001b,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x70900000,0xa96c5977,0x3930ee24,0xb8ca872a,0x88144ca3,
    0x144e0152,0x22ee0082,0x2ea0081d,0x22183bbb,0xd5001809,0x2a23a87e,
    0x0220aaaa,0x20430060,0x5513cccc,0x4e215555,0x5dddddc3,0x00000003,
    0x00000000,0x0e2e21c3,0x7051141c,0x21b39305,0x41c9d439,0x94d4498c,
    0x5ccc1738,0x1f329980,0x452b2140,0x221c5c39,0xd075660c,0x20888885,
    0x994eee38,0x20f98a0f,0x8811110b,0x00008888,0x00000000,0x2e000000,
    0x10383bbb,0x4a20e01d,0x442a0703,0x874b20a1,0x4310689d,0x01e4c0d8,
    0x8501e255,0x1992ae94,0x52239c15,0x77711a25,0x5c402177,0x020a8820,
    0x00000002,0x00000000,0x00000000,0x81ce208e,0x81c0e703,0x26141938,
    0x546c4594,0x0e6e0cc3,0xb1407133,0xa8e4c180,0x28aaa1cb,0x0c4108a2,
    0x00000000,0x00000000,0x00000000,0x05000000,0x3a277797,0x36ea1b51,
    0x5c06c42b,0x2a6a0bbd,0x4e235329,0x4534881a,0x822131ab,0x0aa8754c,
    0x00000002,0x00000000,0x00000000,0x00000000,0x00000000,0x00000180,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,
};

static signed short stb__courier_13_latin_ext_x[560]={ 0,2,1,1,1,1,1,2,3,1,0,0,1,1,
2,1,1,1,0,1,1,1,1,1,1,1,2,1,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,
0,0,0,0,1,0,0,1,0,0,0,0,0,0,1,0,0,0,1,0,2,0,0,0,0,0,1,0,0,1,
1,1,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,3,0,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,2,1,0,1,0,
3,0,1,0,0,0,0,1,0,-1,1,0,1,1,2,0,0,2,2,2,1,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,1,1,1,1,-1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,
0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,1,0,1,0,0,1,0,
1,0,1,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,1,1,1,
1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,0,
0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1, };
static signed short stb__courier_13_latin_ext_y[560]={ 9,1,2,1,1,1,2,1,1,1,1,2,7,5,
7,1,1,1,1,1,1,1,1,1,1,1,4,4,2,4,2,2,1,2,2,2,2,2,2,2,2,2,2,2,
2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,1,1,1,11,1,3,1,3,1,3,1,3,1,1,
1,1,1,3,3,3,3,3,4,3,2,4,4,4,4,4,4,1,1,1,4,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,9,4,1,2,3,2,
1,1,2,2,1,4,5,5,2,1,0,2,1,1,1,4,1,4,8,1,1,4,1,1,1,4,0,0,0,0,
0,0,2,2,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,3,1,0,0,0,0,0,2,1,1,1,
1,2,2,1,3,3,1,1,1,2,1,1,1,2,1,2,1,1,1,2,2,3,3,1,1,1,2,1,1,2,
1,2,0,1,2,3,0,1,0,1,0,1,0,1,0,1,2,1,1,2,0,1,0,1,2,3,0,1,0,1,
0,1,0,1,2,1,0,0,2,1,0,2,1,2,0,1,2,1,0,4,2,1,0,1,2,1,4,0,-1,2,
1,2,1,2,1,2,1,0,1,2,3,0,1,1,2,3,1,2,0,1,0,1,2,3,0,1,2,4,0,1,
0,1,0,1,2,3,0,1,2,2,0,1,2,2,0,2,1,2,0,1,-1,1,0,1,2,4,0,1,0,1,
0,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,2,3,1,1,1,1,1,1,1,1,1,1,1,1,1,1,3,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,0,
1,0,1,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,-2,-1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1, };
static unsigned short stb__courier_13_latin_ext_w[560]={ 0,3,5,5,5,5,5,3,3,3,5,7,4,5,
3,5,5,5,6,5,5,5,5,5,5,5,3,4,6,7,6,5,5,7,7,7,7,7,7,7,7,5,7,7,
7,7,7,6,6,7,7,5,7,7,7,7,7,7,5,2,5,2,5,8,3,7,7,7,7,7,6,7,7,5,
4,6,5,7,7,7,7,7,7,5,7,7,7,7,7,7,5,3,1,3,5,7,7,7,7,7,7,7,7,7,
7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,0,3,5,7,5,7,
1,7,5,7,4,6,7,5,7,9,4,7,4,4,3,7,6,3,3,3,5,7,7,7,7,5,7,7,7,7,
7,7,7,7,7,7,7,7,5,5,5,5,8,7,6,6,6,6,6,5,7,7,7,7,7,7,6,6,7,7,
7,7,7,7,7,7,7,7,7,7,5,5,5,5,6,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,
7,7,7,7,8,7,7,7,7,7,7,7,7,7,7,7,8,7,7,7,7,7,7,7,7,7,7,7,7,7,
7,7,7,7,7,7,7,7,7,7,5,5,5,5,5,5,5,5,5,5,7,6,7,4,7,6,7,7,5,7,
5,7,5,7,5,7,5,7,7,7,7,7,7,7,7,6,6,7,6,7,6,7,7,7,7,7,7,7,7,7,
5,5,5,5,5,5,5,5,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,
7,5,5,5,5,5,5,6,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,6,7,7,7,
7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,
7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,5,5,6,
7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,
7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,
7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,
7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,
7,7,7,7,7,7, };
static unsigned short stb__courier_13_latin_ext_h[560]={ 0,9,4,9,10,9,8,5,10,10,6,7,4,2,
3,9,9,8,8,9,8,9,9,9,9,9,6,7,7,3,7,8,9,7,7,8,7,7,7,8,7,7,8,7,
7,7,7,8,7,9,7,8,7,8,7,7,7,7,7,10,9,10,4,2,3,7,9,7,9,7,8,9,8,8,
11,8,8,6,6,7,9,9,5,7,8,6,5,6,5,8,5,10,10,10,3,8,8,8,8,8,8,8,8,8,
8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,0,8,8,7,5,7,
10,9,2,8,4,5,4,2,8,1,4,7,5,5,3,8,9,3,3,5,4,5,8,8,8,8,9,9,9,9,
9,9,7,9,9,9,9,9,9,9,9,9,7,9,10,10,10,10,10,5,9,10,10,10,10,9,7,9,9,9,
9,8,8,9,7,8,9,9,9,8,8,8,8,7,9,7,9,9,9,8,8,6,7,9,9,9,8,11,11,10,
8,8,9,9,9,8,10,9,10,9,10,9,10,9,9,9,7,9,8,8,9,9,9,9,9,8,9,9,10,11,
10,11,10,11,9,11,9,9,7,8,9,7,8,7,9,8,9,10,9,5,8,11,10,11,9,10,5,9,10,9,
10,7,8,7,8,7,8,9,8,9,8,9,8,8,8,9,9,8,10,9,10,9,7,7,9,8,9,7,9,8,
10,9,10,9,9,8,10,9,10,10,9,9,7,8,10,8,9,8,10,9,11,9,10,9,9,7,9,9,9,11,
9,9,8,9,8,9,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,10,8,8,8,
8,8,8,8,8,8,8,8,8,8,8,7,8,8,8,8,8,8,8,8,8,8,8,8,8,9,7,8,8,8,
8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,9,9,9,8,10,
9,10,9,10,10,10,10,10,10,10,10,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,
8,8,8,8,8,8,8,8,8,8,11,11,9,9,10,9,8,8,8,8,8,8,8,8,8,8,8,8,8,8,
8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,
8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,
8,8,8,8,8,8, };
static unsigned short stb__courier_13_latin_ext_s[560]={ 254,201,128,1,201,178,133,94,211,199,244,
198,134,173,165,1,222,147,168,250,183,23,17,120,141,178,250,251,151,139,136,
249,134,43,174,139,120,143,182,58,158,206,16,190,59,51,166,24,67,248,128,
66,112,1,104,96,88,80,74,169,119,251,122,179,169,21,41,7,57,247,153,
79,197,205,77,37,31,228,212,168,133,147,37,137,233,220,29,236,15,50,9,
180,184,193,151,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,
225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,254,251,44,
72,45,88,197,140,188,241,111,63,98,173,211,194,106,215,70,89,147,160,29,
157,161,51,116,55,113,105,97,91,71,49,184,224,1,232,239,79,71,112,51,
43,192,148,59,228,143,234,222,20,75,90,215,75,242,113,164,237,229,9,200,
36,65,206,198,147,155,126,192,41,55,39,23,55,49,69,63,37,155,96,125,
214,103,227,83,1,104,170,162,154,119,82,69,127,1,235,104,96,87,9,172,
63,82,47,105,31,59,15,7,27,112,240,95,111,216,208,200,192,184,81,170,
162,51,53,35,61,27,21,111,8,95,87,231,219,65,1,213,15,35,163,21,
121,7,23,205,1,180,16,213,1,81,193,245,179,14,184,193,160,89,152,127,
115,103,99,73,83,25,33,17,54,47,243,151,23,188,7,80,121,239,75,243,
207,205,133,8,69,195,207,213,141,158,219,143,135,231,13,223,169,97,177,39,
185,67,31,45,91,43,107,123,129,139,155,61,90,171,225,199,229,121,187,127,
9,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,175,225,225,186,
225,225,225,225,225,225,225,225,225,225,225,225,225,189,29,225,225,225,225,225,
225,225,225,225,225,225,225,225,75,176,225,225,225,225,225,225,225,225,225,225,
225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,15,247,
1,219,130,131,203,147,153,137,172,161,106,114,98,145,225,225,225,225,225,225,
225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,
225,225,225,37,29,163,221,122,235,225,225,225,225,225,225,225,225,225,225,225,
225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,
225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,
225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,
225,225,225,225,225,225,225,225,225, };
static unsigned short stb__courier_13_latin_ext_t[560]={ 1,24,90,34,13,34,64,90,1,1,82,
82,90,90,90,44,44,64,64,44,64,54,54,44,34,44,82,54,82,90,82,
64,44,82,82,64,82,82,82,73,82,82,73,82,82,82,82,73,82,34,82,
73,82,73,82,82,82,82,82,1,34,1,90,90,90,82,34,82,34,73,64,
34,64,64,1,73,73,82,82,73,34,34,90,73,64,82,90,82,90,73,90,
1,1,1,90,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,
64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,1,24,73,
73,90,73,1,44,90,64,90,90,90,90,64,90,90,73,90,90,90,64,54,
90,90,90,90,90,64,64,64,64,34,34,44,34,54,34,73,44,44,44,54,
54,44,44,54,44,73,44,1,13,13,13,1,90,44,13,13,1,1,54,73,
54,54,44,44,54,54,44,73,64,44,44,44,64,64,64,64,82,34,73,34,
44,34,54,64,90,73,44,44,44,54,1,1,13,64,54,44,44,44,64,13,
44,13,44,13,44,13,44,44,34,73,34,54,54,34,34,34,34,34,54,34,
34,13,1,13,1,13,1,34,1,34,34,73,54,34,82,54,82,34,54,34,
13,34,90,54,1,13,1,24,13,90,24,1,24,13,73,54,73,54,73,54,
24,54,24,54,24,64,64,64,24,24,54,13,24,13,24,73,73,13,64,24,
73,24,54,13,24,13,13,13,54,13,13,13,13,13,34,73,54,13,54,24,
54,13,24,1,24,13,24,24,73,24,24,24,1,24,13,54,24,64,24,64,
73,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,1,
64,64,64,64,64,64,64,64,64,64,64,64,64,64,82,64,64,64,64,64,
64,64,64,64,64,64,64,64,24,73,64,64,64,64,64,64,64,64,64,64,
64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,24,13,
24,64,1,24,1,24,1,1,1,1,1,1,1,1,64,64,64,64,64,64,
64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,
64,64,64,1,1,24,24,1,24,64,64,64,64,64,64,64,64,64,64,64,
64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,
64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,
64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,
64,64,64,64,64,64,64,64,64, };
static unsigned short stb__courier_13_latin_ext_a[560]={ 110,110,110,110,110,110,110,110,
110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,
110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,
110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,
110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,
110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,
110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,
110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,
110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,
110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,
110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,
110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,
110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,
110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,
110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,
110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,
110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,
110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,
110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,
110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,
110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,
110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,
110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,
110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,
110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,
110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,
110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,
110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,
110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,
110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,
110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,
110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,
110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,
110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,
110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,
110,110,110,110,110,110,110,110, };

// Call this function with
//    font: NULL or array length
//    data: NULL or specified size
//    height: STB_FONT_courier_13_latin_ext_BITMAP_HEIGHT or STB_FONT_courier_13_latin_ext_BITMAP_HEIGHT_POW2
//    return value: spacing between lines
static void stb_font_courier_13_latin_ext(stb_fontchar font[STB_FONT_courier_13_latin_ext_NUM_CHARS],
                unsigned char data[STB_FONT_courier_13_latin_ext_BITMAP_HEIGHT][STB_FONT_courier_13_latin_ext_BITMAP_WIDTH],
                int height)
{
    int i,j;
    if (data != 0) {
        unsigned int *bits = stb__courier_13_latin_ext_pixels;
        unsigned int bitpack = *bits++, numbits = 32;
        for (i=0; i < STB_FONT_courier_13_latin_ext_BITMAP_WIDTH*height; ++i)
            data[0][i] = 0;  // zero entire bitmap
        for (j=1; j < STB_FONT_courier_13_latin_ext_BITMAP_HEIGHT-1; ++j) {
            for (i=1; i < STB_FONT_courier_13_latin_ext_BITMAP_WIDTH-1; ++i) {
                unsigned int value;
                if (numbits==0) bitpack = *bits++, numbits=32;
                value = bitpack & 1;
                bitpack >>= 1, --numbits;
                if (value) {
                    if (numbits < 3) bitpack = *bits++, numbits = 32;
                    data[j][i] = (bitpack & 7) * 0x20 + 0x1f;
                    bitpack >>= 3, numbits -= 3;
                } else {
                    data[j][i] = 0;
                }
            }
        }
    }

    // build font description
    if (font != 0) {
        float recip_width = 1.0f / STB_FONT_courier_13_latin_ext_BITMAP_WIDTH;
        float recip_height = 1.0f / height;
        for (i=0; i < STB_FONT_courier_13_latin_ext_NUM_CHARS; ++i) {
            // pad characters so they bilerp from empty space around each character
            font[i].s0 = (stb__courier_13_latin_ext_s[i]) * recip_width;
            font[i].t0 = (stb__courier_13_latin_ext_t[i]) * recip_height;
            font[i].s1 = (stb__courier_13_latin_ext_s[i] + stb__courier_13_latin_ext_w[i]) * recip_width;
            font[i].t1 = (stb__courier_13_latin_ext_t[i] + stb__courier_13_latin_ext_h[i]) * recip_height;
            font[i].x0 = stb__courier_13_latin_ext_x[i];
            font[i].y0 = stb__courier_13_latin_ext_y[i];
            font[i].x1 = stb__courier_13_latin_ext_x[i] + stb__courier_13_latin_ext_w[i];
            font[i].y1 = stb__courier_13_latin_ext_y[i] + stb__courier_13_latin_ext_h[i];
            font[i].advance_int = (stb__courier_13_latin_ext_a[i]+8)>>4;
            font[i].s0f = (stb__courier_13_latin_ext_s[i] - 0.5f) * recip_width;
            font[i].t0f = (stb__courier_13_latin_ext_t[i] - 0.5f) * recip_height;
            font[i].s1f = (stb__courier_13_latin_ext_s[i] + stb__courier_13_latin_ext_w[i] + 0.5f) * recip_width;
            font[i].t1f = (stb__courier_13_latin_ext_t[i] + stb__courier_13_latin_ext_h[i] + 0.5f) * recip_height;
            font[i].x0f = stb__courier_13_latin_ext_x[i] - 0.5f;
            font[i].y0f = stb__courier_13_latin_ext_y[i] - 0.5f;
            font[i].x1f = stb__courier_13_latin_ext_x[i] + stb__courier_13_latin_ext_w[i] + 0.5f;
            font[i].y1f = stb__courier_13_latin_ext_y[i] + stb__courier_13_latin_ext_h[i] + 0.5f;
            font[i].advance = stb__courier_13_latin_ext_a[i]/16.0f;
        }
    }
}

#ifndef STB_SOMEFONT_CREATE
#define STB_SOMEFONT_CREATE              stb_font_courier_13_latin_ext
#define STB_SOMEFONT_BITMAP_WIDTH        STB_FONT_courier_13_latin_ext_BITMAP_WIDTH
#define STB_SOMEFONT_BITMAP_HEIGHT       STB_FONT_courier_13_latin_ext_BITMAP_HEIGHT
#define STB_SOMEFONT_BITMAP_HEIGHT_POW2  STB_FONT_courier_13_latin_ext_BITMAP_HEIGHT_POW2
#define STB_SOMEFONT_FIRST_CHAR          STB_FONT_courier_13_latin_ext_FIRST_CHAR
#define STB_SOMEFONT_NUM_CHARS           STB_FONT_courier_13_latin_ext_NUM_CHARS
#define STB_SOMEFONT_LINE_SPACING        STB_FONT_courier_13_latin_ext_LINE_SPACING
#endif

