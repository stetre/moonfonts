// Font generated by stb_font_inl_generator.c (4/1 bpp)
//
// Following instructions show how to use the only included font, whatever it is, in
// a generic way so you can replace it with any other font by changing the include.
// To use multiple fonts, replace STB_SOMEFONT_* below with STB_FONT_times_9_latin_ext_*,
// and separately install each font. Note that the CREATE function call has a
// totally different name; it's just 'stb_font_times_9_latin_ext'.
//
/* // Example usage:

static stb_fontchar fontdata[STB_SOMEFONT_NUM_CHARS];

static void init(void)
{
    // optionally replace both STB_SOMEFONT_BITMAP_HEIGHT with STB_SOMEFONT_BITMAP_HEIGHT_POW2
    static unsigned char fontpixels[STB_SOMEFONT_BITMAP_HEIGHT][STB_SOMEFONT_BITMAP_WIDTH];
    STB_SOMEFONT_CREATE(fontdata, fontpixels, STB_SOMEFONT_BITMAP_HEIGHT);
    ... create texture ...
    // for best results rendering 1:1 pixels texels, use nearest-neighbor sampling
    // if allowed to scale up, use bilerp
}

// This function positions characters on integer coordinates, and assumes 1:1 texels to pixels
// Appropriate if nearest-neighbor sampling is used
static void draw_string_integer(int x, int y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0, cd->t0); glVertex2i(x + cd->x0, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t0); glVertex2i(x + cd->x1, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t1); glVertex2i(x + cd->x1, y + cd->y1);
        glTexCoord2f(cd->s0, cd->t1); glVertex2i(x + cd->x0, y + cd->y1);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance_int;
    }
    glEnd();
}

// This function positions characters on float coordinates, and doesn't require 1:1 texels to pixels
// Appropriate if bilinear filtering is used
static void draw_string_float(float x, float y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0f, cd->t0f); glVertex2f(x + cd->x0f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t0f); glVertex2f(x + cd->x1f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t1f); glVertex2f(x + cd->x1f, y + cd->y1f);
        glTexCoord2f(cd->s0f, cd->t1f); glVertex2f(x + cd->x0f, y + cd->y1f);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance;
    }
    glEnd();
}
*/

#ifndef STB_FONTCHAR__TYPEDEF
#define STB_FONTCHAR__TYPEDEF
typedef struct
{
    // coordinates if using integer positioning
    float s0,t0,s1,t1;
    signed short x0,y0,x1,y1;
    int   advance_int;
    // coordinates if using floating positioning
    float s0f,t0f,s1f,t1f;
    float x0f,y0f,x1f,y1f;
    float advance;
} stb_fontchar;
#endif

#define STB_FONT_times_9_latin_ext_BITMAP_WIDTH         256
#define STB_FONT_times_9_latin_ext_BITMAP_HEIGHT         66
#define STB_FONT_times_9_latin_ext_BITMAP_HEIGHT_POW2   128

#define STB_FONT_times_9_latin_ext_FIRST_CHAR            32
#define STB_FONT_times_9_latin_ext_NUM_CHARS            560

#define STB_FONT_times_9_latin_ext_LINE_SPACING           6

static unsigned int stb__times_9_latin_ext_pixels[]={
    0x00802004,0x10080402,0x40000040,0x80010088,0x20001009,0x04020000,
    0x02011010,0x00088044,0x00004010,0x01100200,0x01102000,0x300a8188,
    0x14c06603,0xa80cc04c,0x0ee03502,0x80ab815c,0xa80ba81a,0x0ae07702,
    0x302b80cc,0x75017503,0x20530750,0x5c05703a,0x0aa03882,0x407702b8,
    0x2e01401a,0x29a854c2,0x1982ea1c,0x11310198,0x19a88198,0x440d404c,
    0x222a6199,0x46a1531a,0x531a88a9,0x4454c6a1,0xa986e61a,0x20cc1a88,
    0x531a88a9,0x42a83511,0x54c350a9,0x50d42a61,0x0d4454c5,0x03303351,
    0x4c351135,0x46a2a61a,0x206aa209,0x06a1a819,0x2606aaa6,0xa88524c0,
    0x2a1931ab,0xa448a451,0x2248a468,0x35033124,0x24992488,0x92629262,
    0x92629262,0x4931c662,0x92648a42,0x8a429262,0x46629264,0x15429263,
    0x1c321493,0x43a22452,0x2b11c662,0x8924451b,0x50e88914,0x2b8196a0,
    0x36185244,0x518c8960,0x751a8e45,0x571c8aa5,0x57055104,0x248822b8,
    0x92229222,0x92229222,0x48823662,0x44722a8a,0xa8a488a4,0x45244722,
    0x292208d9,0x71491154,0x41c8aa05,0x046cc55b,0x8ae2a556,0x5c1c8aa0,
    0x0456a055,0x029222d4,0x91645857,0x899c9d43,0xc9d4392a,0xb50b1301,
    0x149101c8,0x14911491,0x14911491,0x8a488fa6,0x5244ea1c,0x50e45244,
    0x74c29227,0x15429223,0x22391491,0x21d4392d,0x1f4c2c99,0xc8236aaa,
    0x21d43901,0xeba82c99,0x21c940bb,0x21260a58,0x64731c45,0x4c2e1930,
    0xa81d4323,0x2a1c9449,0x91149103,0x91149114,0x43149114,0x8e629225,
    0x9114910c,0x88647314,0x489618a4,0x5244350a,0x8e6191d4,0x865b8c0c,
    0x225cec45,0x0647303a,0x25942dc6,0x2e24cd40,0x410d829b,0x266a04c5,
    0x50a67222,0x19aa8533,0x99a836ee,0x2e0cd544,0x14d5c29a,0x3570a6ae,
    0x2a29ab85,0x14d5c39a,0x3570a66a,0x5429ab85,0x14d5c299,0x9ab87355,
    0x35702f22,0x20c99a85,0x91cc299a,0x8a41cd54,0x5419aa83,0x891cc299,
    0x23aae88c,0x2003d12b,0x1d33aacc,0x000000ae,0x744ae000,0x00000001,
    0x00010000,0x00000000,0x00000008,0x00200000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x50000088,0x4c350a98,0x88000a80,0x83981001,
    0x402a60aa,0x083040bb,0x2a606a00,0x531531aa,0x2a604188,0x44173041,
    0x46000000,0x80880aa9,0x03301500,0x26050175,0x26203301,0x00aa8809,
    0x44373075,0x24c040aa,0x20102a85,0x305c29a9,0x24838817,0x162350a9,
    0x470d42a6,0x0dcc15c2,0x88d63055,0x14198175,0x0d470e33,0x0571026a,
    0x12817306,0x70350369,0x10a606a0,0x88088355,0x9892419a,0x20660620,
    0x2a2350a9,0x2e0ee1ac,0x3b852443,0x190c83b8,0xaca986cc,0x4c901530,
    0x4930b0a4,0x45a85242,0x3551aca9,0x0ac88b03,0xd985c298,0x21a86608,
    0x0dd4c51a,0x0ba9864c,0xc81b4894,0x2a02aa61,0xc86a60cb,0x6428d470,
    0x23715470,0x48353518,0x18e68891,0x50cc5436,0x45244331,0x262a198a,
    0x22399221,0x0b119623,0x0b0a4892,0x14311491,0x46b18725,0xd88b01ba,
    0x04c3880d,0x351c47d3,0x2910c644,0x442a665a,0xdd8841b4,0x488dc4c1,
    0x549aa81b,0x440ae353,0x640ae18c,0xa8b94ea1,0x41c8aa19,0x22b809ca,
    0x266a399a,0x26a29223,0xa8e66a39,0xac1a9623,0x922482c1,0x292212c2,
    0x266a2826,0x81e54584,0x206ce445,0x9618c438,0x85906a38,0x21d4b248,
    0xc8841b48,0x88c5cc58,0x291a81b4,0x6c4722b8,0x22390b22,0x2864752d,
    0x54390d69,0x44982c83,0x266a399a,0x3514d5c3,0x21ccd473,0xae848aa5,
    0x922482c3,0x44aaba62,0x2b9490a4,0x5dc583d1,0xb307443c,0x21c43d51,
    0x4473550b,0x887106a3,0x85f44ee4,0xd9941dd8,0x892a0d98,0x1aba81dd,
    0xc8ea3993,0x64750e20,0x918aaae0,0x91cc1373,0x21b03701,0x64c95930,
    0x64c1984a,0x512b264a,0x25828533,0x57120960,0x35707053,0x41c0a385,
    0x20702885,0x05428819,0x20d4710e,0x21b24409,0x22c64418,0x11cc0542,
    0x28350b19,0x064cd451,0x19335013,0x0c140d98,0x1e40a66a,0x000eab32,
    0x000002a0,0x2a7a6054,0x22555d32,0x2000c002,0xd10cc060,0x20300881,
    0x20415408,0x13324c18,0x2aba60ae,0x26366021,0x9809830d,0x83663660,
    0x0055cc2b,0x2600015c,0x000cccc0,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x08081351,
    0x02144040,0x4c4350d4,0x08804419,0x10204408,0x0cc15710,0xaa980054,
    0x102ee20a,0xa8833510,0x01462103,0x0c408813,0x00802153,0x002ae011,
    0x70e540cc,0xa8544544,0x22661c1b,0x54c0a982,0x04ff41aa,0x26015031,
    0x883b8101,0x0924450e,0x83220e07,0x41731c38,0x0e23511a,0x1c983331,
    0x414c1962,0x9838643a,0x32610281,0x00750620,0x5028828b,0x4350a987,
    0x4c154c2b,0xb2c1510a,0xaaa88544,0x54b11b11,0x4aa71189,0x5304ffc0,
    0x20100883,0x5b804429,0x54c115c5,0x157530ab,0x5cc2eae6,0x82a61730,
    0x11c450e8,0x15553249,0x448a41ac,0xa40571a9,0x8a986648,0x8d4c1533,
    0x22c2981a,0x98d42a63,0x4930a88a,0x393054c2,0x962c5835,0x906c32c5,
    0x2a0d9864,0x39301551,0x5706a6a1,0x70e20ae0,0xc8b26605,0x588cb101,
    0x22c32c46,0x22adc2c5,0x2208ae38,0x2a3ae865,0x8d4d4722,0x8aa5b11c,
    0x49c4171c,0x551a9a96,0x8dc58710,0x96588e68,0x47338a48,0x2c5838da,
    0x15c2c596,0x436a1b92,0x2207751c,0xb5057109,0x50e216a0,0x752dc60b,
    0x41ac1ac0,0x162c5835,0x2388b266,0x960d601c,0xb89d4390,0x390c8ea2,
    0x4e20c9d4,0x2a2b8964,0x8b0e20bb,0x88272a1a,0xc8a48964,0x07626e90,
    0xb1658b16,0x42e48498,0x2a553988,0x26131012,0x20e4a1cc,0x4a388392,
    0xa891cc1c,0x21d7419a,0x21d743ae,0x5c6162c5,0x203a9265,0x2a7a63ae,
    0xc9864732,0x43266a1c,0x30d43239,0x33265929,0x24c73551,0x1641c1d3,
    0x48966762,0x951ab98a,0x2c585b75,0x458591d3,0x2e76610d,0x9b86aaa2,
    0x09883acc,0x499a8a25,0x8a224cd4,0x0330499a,0x9609602a,0x8b160960,
    0x14491cc5,0x04b066aa,0x28a66a14,0x9a828851,0x96381429,0x8e2aa512,
    0x2e0a1418,0xab8b2441,0x74c00029,0xd3001d30,0x00eab321,0x13100004,
    0x895c2ae6,0x47a2571e,0x0f44ae1a,0xe9818044,0x553d32a9,0x74caa7a6,
    0x03a61d30,0xe9800c40,0x801982a9,0x00440ab9,0x30a88220,0x5c2ae61d,
    0x350544ab,0x3661e402,0x00000e88,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x41dc0000,0x0660a099,0x83066022,0x2070081a,0x2a0304c0,0x0261982b,
    0x10541ccc,0x4082a981,0x04205410,0x0106230a,0x44002077,0x280bb880,
    0x206604c4,0x18819808,0x3314c098,0x81811044,0x304c2819,0x21986a15,
    0x5c14c188,0x30ee3882,0x554c1303,0x9830ae0a,0x105554c3,0xb880cc77,
    0x8570c4c2,0x64098914,0x98630660,0x0528cac0,0x0ea15c02,0x088040aa,
    0x1a80c19c,0x06018198,0xa83054b1,0x8330e621,0x39a21808,0x7298854c,
    0x14c51553,0x2a198ea6,0x9114c198,0x94c45304,0x0922198a,0x0cc54ae6,
    0x0bb82ea6,0x4c37014c,0x2298a622,0x90a62ab9,0x5c022a2e,0x31514c42,
    0x5c0cc543,0x1121aa82,0x4c545573,0x8a8662a1,0x90662a19,0x0a9830a1,
    0x20a982a6,0xa82a60a9,0xb9cce09b,0x1173710a,0x4c542e6a,0x289a8663,
    0x43482e6a,0x21570b9a,0x21a4289a,0x8a26a553,0x20cc398a,0x2aab2132,
    0x55c2653c,0x21982650,0x2a314132,0x44c5a829,0x9a8a26a5,0x45c5a828,
    0x44c5b349,0x8a26a49d,0x226a289a,0x930a26a2,0x2670c411,0x399ce673,
    0x4399ce67,0x2e48642c,0x0c872723,0x498e2321,0x10c8a26a,0x82191cec,
    0xd851353b,0x9a94d639,0x30e23228,0x91540c83,0x64ee0321,0x0c8dd540,
    0x228c9408,0x926a0c8a,0x226a289a,0x59064542,0x166a1c91,0x89a8a26a,
    0x9a8a26a2,0x20c2d828,0xca43290c,0x0ca43290,0x55cc1b89,0x54545371,
    0xbc98f661,0x4ac98a24,0x98490f66,0x64ca6e3d,0x32a1244a,0x4c95933b,
    0x2624c4bc,0x31555c3d,0xd994dc7b,0x87b30c63,0x50cdc223,0x86ddc933,
    0x2b264ac9,0x7524cd44,0x5cb32a35,0x2b262dba,0xc992b264,0x212b264a,
    0x2ae60c2a,0x2e635731,0x2635731a,0x001e41ab,0x00200000,0x0154f4c0,
    0x154f4c00,0x00000000,0x40000000,0x0f435040,0x74350000,0x00000001,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0xa8a98000,0x260cc131,0x09980540,
    0x4c088198,0x260a0c41,0x4c1a8261,0x2a060440,0x260a0c40,0x28a866e2,
    0x330220c4,0x08988088,0x0d5442a6,0x83314c26,0x10d4c099,0x83303043,
    0x40ccc42a,0x408621aa,0x08620ab8,0x81981d44,0x28dd2208,0x433531d4,
    0x44cd441a,0x0a624520,0x80881833,0x22c4c50e,0x988a6219,0x22060cc3,
    0x54ca6a20,0x2a155530,0x9986e198,0x2270aa28,0x99984d46,0x8a4882e3,
    0x330a9898,0x3830c70e,0x49115417,0x31c38643,0x06388110,0x2b81a802,
    0xd9834aac,0xbaa8e171,0x5462ee30,0x4c298722,0x20a614c2,0x4c45035b,
    0x2988a622,0x22988a62,0x82e66298,0x21909225,0x56445314,0xa8d42a60,
    0x1305b12b,0x863886e6,0x366310a9,0x84185380,0x02b86a0b,0x7019c057,
    0x15c06705,0x0dd4c2b8,0x5411b355,0xa9619488,0x8cf23489,0x5cd4aa1c,
    0x26a17350,0x9817350b,0x986cc1c9,0x89962658,0x58996265,0x39999626,
    0xac986916,0x0db8b133,0x44ce4e67,0xb8e05c2a,0x314713a9,0x30ba6189,
    0x0c0c3513,0x3901c86a,0x511130ec,0x4444c5a8,0x5a82d428,0x27622444,
    0x26a9244b,0x899c6a38,0x647319ab,0x08642190,0x40864219,0x2a330b71,
    0x9a926a49,0x49a926a4,0x4919926a,0x85c1cec5,0x4e62a49a,0x1c32690c,
    0x90a8e144,0x2a662922,0x142c1188,0x86a020c5,0x0647502a,0x191514c6,
    0xc8a8a630,0x32064540,0xb9871480,0x4c15511a,0x0666609b,0x1ecc5335,
    0x31ecc7b3,0xa923987b,0x5c36ee19,0x21b770db,0x1b770dbb,0x55dc36ee,
    0x33049161,0x9a886ddc,0x32235731,0x30aaa299,0x2ae19b81,0x50cccc29,
    0x86e28735,0x81790541,0x4cd419aa,0x524c460c,0x93118933,0x26a24cd4,
    0x0066ee49,0x00000000,0x00000000,0x00000000,0x4f4c3a60,0x0000002a,
    0x00000000,0x00022080,0x50004000,0x0d400f43,0x01e86a3d,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x530d554c,0x2a041511,0x0a0440ba,0x040c40a8,0x04c08866,
    0x98153033,0x885d540a,0x985dc451,0x283314c0,0x86203062,0x0d54c0a9,
    0x287731c4,0x228d4a6a,0x262a63b9,0x22238210,0x988662a0,0x22355532,
    0x3706aa60,0x220bb88a,0x261ccc29,0x432cc0c2,0x260e99d9,0x570e6aa0,
    0x130100a8,0x751c4750,0x81770b98,0x542440d8,0x30e5129a,0x42650c15,
    0x41982238,0x42c41839,0x40a8b548,0x4c550c29,0xb114c433,0x88824466,
    0x45135088,0xc9d630ab,0x712d5223,0x30cc5431,0x50ab88b1,0x2a0ee173,
    0x532c9014,0xa8e26637,0x0e6e20ba,0x4c0baa83,0x4c299222,0x3b02ee62,
    0x44cc1d8b,0x7338e513,0x5c40c8a6,0x5514c530,0x90dd4c17,0x28964902,
    0x29a85cd4,0x44c1d833,0x8a6a0a45,0x51350811,0x0ee2c3b8,0xa8591649,
    0x1126a289,0x33086417,0xd83adaa8,0xb9222599,0x0e6aa49a,0x50a63517,
    0x2a388735,0x4c710e23,0x30da429a,0x2671770b,0x52190dad,0xb88f6638,
    0x551c4712,0x52244473,0x4aa2b6a2,0x55086428,0x437931dc,0x1542449a,
    0x564c204e,0x7544a6e4,0x56d4350a,0x350e22a8,0x106ddc51,0x0663d987,
    0x8b240923,0x2661440c,0xb8cc5c38,0x871330a8,0x4388e238,0xb0e26638,
    0x88124c75,0x35730131,0x1c4330e2,0x1331c471,0x41240c87,0x26144364,
    0x4c50663d,0x836ee1bb,0x0560cc24,0x58381302,0x20d9224c,0x42564c09,
    0x26281c42,0x2ab62324,0x43a23663,0x702219bb,0x3b9c8935,0x24d5c351,
    0x12649926,0x324ddc93,0x2aae981b,0x3000986a,0x99260989,0x49ab9264,
    0x574c66ee,0x4355b32a,0x223b804a,0x74c01dc1,0x338772aa,0x41501111,
    0xb3007441,0x000dc355,0x26093144,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x20a88220,
    0x065542a9,0x21a81106,0x80806619,0x54c06618,0x554c2a22,0x11a854c1,
    0x02a63555,0x20cc1553,0x454ca219,0x986aa629,0x2aa6150a,0x2155531a,
    0x454c0aa9,0x455530a8,0x0662a298,0x3318c153,0x22aa6e33,0x452a8a62,
    0x18ca6229,0x17703018,0x288aae62,0x52c13531,0x489a8731,0x4cc55162,
    0x00d4711c,0xa81a8057,0x4884e1a9,0x0c7344b5,0x5221621b,0x01d83a25,
    0x54882a91,0xac628e47,0xb4884911,0xa44b2441,0x4d4b1308,0xa99cce28,
    0x5c4a150a,0x426508b9,0x173518b8,0x0cdc42ae,0x314c0c06,0x4dc093b1,
    0x50e292c2,0x14c49923,0x266388d4,0x14c5a81a,0x15c41753,0x8b2483b3,
    0x42b809ba,0x3b836904,0x05640373,0x816c39a4,0x1b483485,0xa8691648,
    0xc8a26a49,0x21926a90,0x0c872721,0x704321c8,0xba99c647,0x4157530a,
    0x20166a38,0x5932c38b,0x2319ba87,0x711414c4,0x64540dcc,0x29a98e20,
    0x48486f26,0x930590ea,0x306b6090,0x22986aab,0x2cad80dd,0x9d858254,
    0x4ec0eec3,0x77156c59,0x992b261b,0xaa94a1ab,0x986a2a2a,0x7b314c3d,
    0x305194dc,0xab8e2060,0x898a22db,0x2a1c42c3,0x531f65c1,0x7731c428,
    0x1c493350,0x28947133,0x5c0d9212,0x12410d81,0xa8ca9824,0x81b390c1,
    0x81c899a4,0x58c82485,0x00091648,0x00000000,0x4c080000,0x01260aaa,
    0x03a64980,0x8902a873,0x4cb36e3a,0x1a8b2ee4,0x35724c7a,0xd884dcc9,
    0x206a7660,0x9d56643c,0x1b32aae9,0x08f29298,0x4c7aa366,0x22732bad,
    0xe983a21f,0x931b32a9,0x43a23661,0x000000d9,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x550dcc54,0x02613015,0x55054dcc,0x0c46ea63,
    0x50c43555,0xa810a653,0x044040aa,0x21041755,0x221b9baa,0x55530c41,
    0x41555301,0x8886550a,0x110c4211,0x2280cc11,0x502211a9,0x00000555,
    0x00000000,0x4d400000,0x2624ce38,0x27054c0a,0x93172aca,0x26389222,
    0x4551c41b,0x0b615438,0x2a377306,0x98c5439a,0x0cdc948a,0x2270c093,
    0x18630999,0x18aa4d49,0x30199986,0x98a210c3,0x0000000b,0x00000000,
    0x9a800000,0x55243228,0x98c85c40,0x19245643,0x70773044,0x44c710cc,
    0xaa992a09,0x2637730a,0x331cc389,0x5c13524e,0x22223003,0x43046a20,
    0x00000030,0x00000000,0x00000000,0x44000000,0x06ae64ad,0x20d4c2aa,
    0x750cdbb9,0x4c66ee35,0x098b2ee2,0x082498ee,0x88185915,0x18926ae0,
    0x16326ea5,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000840,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,
};

static signed short stb__times_9_latin_ext_x[560]={ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,0,0,-1,0,0,0,0,0,0,0,
-1,0,0,0,0,0,-1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,
0,0,0,0,-1,0,0,0,0,-1,0,0,0,0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,-1,0,0,0,0,0,0,0,0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,-1,0,-1,0,-1,0,0,0,0,0,0,0,-1,0,0,0,0,0,0,
0,0,0,0,0,0,0,-1,0,-1,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,1,1,1,
1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,0,0,-1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1, };
static signed short stb__times_9_latin_ext_y[560]={ 7,1,1,1,1,1,1,1,1,1,1,2,6,4,
6,1,1,1,1,1,1,1,1,1,1,1,3,3,2,3,2,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,8,1,3,1,3,1,3,1,3,1,1,
1,1,1,3,3,3,3,3,3,3,2,3,3,3,3,3,3,1,1,1,4,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,7,3,1,1,2,1,
1,1,1,1,1,3,3,4,1,0,1,2,1,1,1,3,1,3,6,1,1,3,1,1,1,3,-1,-1,-1,0,
0,0,1,1,-1,-1,-1,0,-1,-1,-1,0,1,0,-1,-1,-1,0,0,2,1,-1,-1,-1,0,-1,1,1,1,1,
1,1,1,1,3,3,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,3,1,1,1,1,1,1,1,
0,2,0,1,1,3,-1,1,-1,1,0,1,-1,1,-1,1,1,1,0,2,-1,1,0,1,1,3,-1,1,-1,1,
0,1,0,1,1,1,-1,-1,1,1,0,1,0,2,-1,1,1,1,0,3,1,1,-1,1,1,1,3,-1,-1,1,
1,1,1,1,1,1,1,-1,1,1,3,-1,1,1,1,3,0,2,-1,1,-1,1,1,3,-1,1,1,3,-1,1,
-1,1,-1,1,1,3,-1,1,1,2,-1,1,1,2,0,1,0,2,-1,1,-1,1,-1,1,1,3,-1,1,-1,1,
0,-1,1,0,1,-1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,0,3,1,1,1,1,1,1,1,1,1,1,1,1,1,0,3,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1,1,-1,1,-1,
1,-1,1,-1,0,-1,0,-1,0,-1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,-2,-1,-1,1,-1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1, };
static unsigned short stb__times_9_latin_ext_w[560]={ 0,2,3,4,4,7,7,2,3,3,4,5,2,3,
2,3,4,4,4,4,4,4,4,4,4,4,2,2,5,5,5,4,8,6,5,6,6,5,5,6,6,3,4,6,
5,8,7,6,5,6,6,5,5,6,6,8,6,6,5,3,3,3,4,6,2,4,5,4,5,4,4,4,5,3,
3,5,3,7,5,4,5,5,3,3,3,5,4,6,4,5,4,3,1,3,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,2,4,4,4,5,
1,4,3,6,4,4,5,3,6,6,3,5,3,3,3,5,5,2,2,2,3,4,6,6,6,4,6,6,6,6,
6,6,9,6,5,5,5,5,3,3,3,3,6,7,6,6,6,6,6,4,6,6,6,6,6,6,5,4,4,4,
4,4,4,4,6,4,4,4,4,4,3,3,3,3,4,5,4,4,4,4,4,5,4,5,5,5,5,5,5,5,
6,4,6,4,6,5,6,4,6,4,6,4,6,4,6,6,6,4,5,4,5,4,5,4,5,4,5,4,6,4,
6,4,6,4,6,4,6,5,6,5,3,4,3,4,3,4,3,3,3,3,6,4,4,4,6,5,5,5,3,5,
3,5,4,5,3,5,3,7,5,7,5,7,5,5,6,4,6,4,6,4,6,4,7,6,6,3,6,3,6,3,
5,3,5,3,5,3,5,3,5,3,5,4,5,3,6,5,6,5,6,5,6,5,6,5,6,5,8,6,6,5,
6,5,4,5,4,5,4,4,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,6,5,5,4,5,5,5,
5,5,5,5,5,5,5,5,5,5,6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,7,5,5,5,5,
5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,6,4,3,3,6,
4,6,5,6,5,6,5,6,5,6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5,5,5,5,5,6,4,9,6,6,4,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5, };
static unsigned short stb__times_9_latin_ext_h[560]={ 0,7,3,7,7,7,7,3,8,8,4,5,3,2,
2,7,7,6,6,7,6,7,7,7,7,7,5,6,5,3,5,7,8,6,6,7,6,6,6,7,6,6,7,6,
6,6,7,7,6,8,6,7,6,7,7,7,6,6,6,8,7,8,4,1,2,5,7,5,7,5,6,6,6,6,
8,6,6,4,4,5,6,6,4,5,6,5,5,5,4,6,4,8,8,8,2,6,6,6,6,6,6,6,6,6,
6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,0,6,8,7,5,6,
8,8,2,7,3,5,3,2,7,2,3,5,4,4,2,6,8,2,3,4,3,5,7,7,7,6,8,8,8,7,
7,7,6,8,8,8,8,7,8,8,8,7,6,8,9,9,9,8,8,4,7,9,9,9,8,8,6,7,7,7,
7,7,7,7,5,6,7,7,7,7,6,6,6,6,7,6,7,7,7,7,7,4,5,7,7,7,7,8,8,8,
7,6,7,7,8,6,9,7,9,7,8,7,9,7,8,7,6,7,7,6,8,7,7,7,8,6,8,7,9,8,
8,8,8,8,8,8,8,8,6,6,7,6,7,5,8,6,8,8,7,4,7,8,9,8,8,8,4,8,8,8,
8,6,6,6,6,6,6,9,6,8,6,9,6,6,7,6,8,6,9,7,9,7,7,5,8,6,8,6,8,6,
9,7,9,7,8,6,9,7,8,7,8,7,6,6,8,7,8,6,9,7,9,7,9,7,8,6,9,7,8,8,
7,8,6,7,6,8,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,7,6,6,8,6,6,6,
6,6,6,6,6,6,6,6,6,6,8,5,6,6,6,6,6,6,6,6,6,6,6,6,6,8,5,6,6,6,
6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,8,7,8,6,9,
7,9,7,9,8,9,8,9,8,9,8,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,
6,6,6,6,6,6,6,6,6,6,9,9,8,7,9,7,6,6,6,6,6,6,6,6,6,6,6,6,6,6,
6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,
6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,
6,6,6,6,6,6, };
static unsigned short stb__times_9_latin_ext_s[560]={ 215,136,138,126,241,139,201,135,139,171,80,
226,132,172,156,226,15,26,31,68,21,145,155,150,128,118,250,114,13,122,19,
191,238,46,124,201,73,143,163,208,156,5,196,117,93,105,60,33,99,231,149,
174,137,160,219,1,130,80,87,150,187,69,64,176,146,169,20,202,29,212,68,
63,57,53,26,40,36,96,85,180,15,9,56,217,252,174,207,195,69,224,37,
93,97,136,166,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,215,188,167,
183,190,167,179,188,142,167,108,185,113,172,26,149,128,232,42,52,162,93,1,
159,119,253,104,221,215,180,229,41,12,19,30,222,236,243,1,45,52,58,64,
112,70,74,78,108,217,82,1,15,96,113,132,91,138,110,124,137,189,175,76,
103,98,93,88,83,78,73,243,108,55,50,45,40,104,117,121,1,10,125,250,
245,240,235,230,74,32,213,207,201,195,218,200,154,171,173,147,154,99,236,22,
131,41,121,94,112,193,100,160,88,142,77,71,154,101,56,50,45,107,247,57,
24,156,206,211,120,224,7,125,152,182,157,11,70,209,65,224,238,148,52,167,
163,213,60,217,143,144,131,124,112,46,63,146,80,90,178,242,136,113,82,57,
207,46,37,23,170,29,35,234,88,247,99,200,196,163,8,246,25,193,159,181,
163,172,184,178,61,131,13,140,203,83,117,118,35,106,95,207,213,86,65,73,
230,55,159,149,82,69,39,26,197,184,17,1,250,1,240,131,228,18,8,250,
149,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,105,191,191,52,
191,191,191,191,191,191,191,191,191,191,191,191,191,45,7,191,191,191,191,191,
191,191,191,191,191,191,191,191,232,1,191,191,191,191,191,191,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,225,123,
246,61,117,133,103,165,89,14,76,20,62,33,48,39,191,191,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,
191,191,191,34,29,215,188,8,178,191,191,191,191,191,191,191,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,
191,191,191,191,191,191,191,191,191, };
static unsigned short stb__times_9_latin_ext_t[560]={ 10,29,59,29,20,29,20,59,20,20,59,
52,59,59,59,29,37,52,52,37,52,37,37,37,37,37,52,52,59,59,59,
37,11,52,52,37,52,52,52,37,52,52,37,52,52,52,37,37,52,11,52,
37,52,37,29,37,52,52,52,11,37,11,59,59,59,52,37,52,29,52,52,
52,52,52,20,52,52,59,59,52,52,52,59,52,45,52,52,52,59,45,59,
11,11,11,59,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,
45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,10,45,11,
29,52,45,11,11,59,37,59,52,59,59,37,59,59,52,59,59,59,45,20,
59,59,52,59,52,37,37,37,45,20,20,20,37,37,37,45,20,20,20,20,
37,20,20,20,37,45,20,1,1,1,20,20,59,37,1,1,1,20,20,45,
37,37,37,37,37,37,37,52,45,37,37,37,37,45,45,45,52,37,45,29,
29,29,29,29,59,59,29,29,29,29,11,11,11,29,45,29,29,11,45,1,
29,1,29,20,29,1,29,11,29,45,29,29,45,20,29,29,29,20,45,11,
29,1,11,11,20,11,20,20,20,20,20,45,45,20,45,20,52,20,45,20,
20,20,59,20,20,1,11,11,11,59,11,11,11,20,45,45,45,45,45,45,
1,45,20,45,1,45,45,20,45,11,45,1,20,1,29,20,59,11,45,11,
45,11,45,1,29,1,29,11,45,1,29,11,29,11,29,45,45,11,29,11,
45,1,29,1,29,1,29,11,45,1,29,11,1,29,1,45,20,45,11,37,
45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,29,45,45,11,
45,45,45,45,45,45,45,45,45,45,45,45,45,11,59,45,45,45,45,45,
45,45,45,45,45,45,45,45,1,59,45,45,45,45,45,45,45,45,45,45,
45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,1,37,
1,45,1,37,1,29,1,11,1,11,1,11,1,11,45,45,45,45,45,45,
45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,
45,45,45,1,1,1,29,1,29,45,45,45,45,45,45,45,45,45,45,45,
45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,
45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,
45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,
45,45,45,45,45,45,45,45,45, };
static unsigned short stb__times_9_latin_ext_a[560]={ 33,43,53,65,65,108,101,23,
43,43,65,73,33,43,33,36,65,65,65,65,65,65,65,65,
65,65,36,36,73,73,73,58,120,94,87,87,94,79,72,94,
94,43,51,94,79,116,94,94,72,94,87,72,79,94,94,123,
94,94,79,43,36,43,61,65,43,58,65,58,65,58,43,65,
65,36,36,65,36,101,65,65,65,65,43,51,36,65,65,94,
65,65,58,62,26,62,70,101,101,101,101,101,101,101,101,101,
101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,
101,101,101,101,101,101,101,101,33,43,65,65,65,65,26,65,
43,99,36,65,73,43,99,65,52,71,39,39,43,75,59,33,
43,39,40,65,98,98,98,58,94,94,94,94,94,94,116,87,
79,79,79,79,43,43,43,43,94,94,94,94,94,94,94,73,
94,94,94,94,94,94,72,65,58,58,58,58,58,58,87,58,
58,58,58,58,36,36,36,36,65,65,65,65,65,65,65,71,
65,65,65,65,65,65,65,65,94,58,94,58,94,58,87,58,
87,58,87,58,87,58,94,84,94,65,79,58,79,58,79,58,
79,58,79,58,94,65,94,65,94,65,94,65,94,65,94,65,
43,36,43,36,43,36,43,36,43,36,92,72,51,36,94,65,
65,79,36,79,36,79,53,79,45,79,36,94,65,94,65,94,
65,79,91,64,94,65,94,65,94,65,116,94,87,43,87,43,
87,43,72,51,72,51,72,51,72,51,79,36,79,56,79,36,
94,65,94,65,94,65,94,65,94,65,94,65,123,94,94,65,
94,79,58,79,58,79,58,36,101,101,101,101,101,101,101,101,
101,101,101,101,101,101,101,94,101,101,65,101,101,101,101,101,
101,101,101,101,101,101,101,101,94,69,101,101,101,101,101,101,
101,101,101,101,101,101,101,101,70,101,101,101,101,101,101,101,
101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,
101,101,101,101,101,94,58,43,36,94,65,94,65,94,65,94,
65,94,65,94,65,101,101,101,101,101,101,101,101,101,101,101,
101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,
101,101,94,58,116,87,94,65,101,101,101,101,101,101,101,101,
101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,
101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,
101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,
101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,
101,101,101,101,101,101,101,101, };

// Call this function with
//    font: NULL or array length
//    data: NULL or specified size
//    height: STB_FONT_times_9_latin_ext_BITMAP_HEIGHT or STB_FONT_times_9_latin_ext_BITMAP_HEIGHT_POW2
//    return value: spacing between lines
static void stb_font_times_9_latin_ext(stb_fontchar font[STB_FONT_times_9_latin_ext_NUM_CHARS],
                unsigned char data[STB_FONT_times_9_latin_ext_BITMAP_HEIGHT][STB_FONT_times_9_latin_ext_BITMAP_WIDTH],
                int height)
{
    int i,j;
    if (data != 0) {
        unsigned int *bits = stb__times_9_latin_ext_pixels;
        unsigned int bitpack = *bits++, numbits = 32;
        for (i=0; i < STB_FONT_times_9_latin_ext_BITMAP_WIDTH*height; ++i)
            data[0][i] = 0;  // zero entire bitmap
        for (j=1; j < STB_FONT_times_9_latin_ext_BITMAP_HEIGHT-1; ++j) {
            for (i=1; i < STB_FONT_times_9_latin_ext_BITMAP_WIDTH-1; ++i) {
                unsigned int value;
                if (numbits==0) bitpack = *bits++, numbits=32;
                value = bitpack & 1;
                bitpack >>= 1, --numbits;
                if (value) {
                    if (numbits < 3) bitpack = *bits++, numbits = 32;
                    data[j][i] = (bitpack & 7) * 0x20 + 0x1f;
                    bitpack >>= 3, numbits -= 3;
                } else {
                    data[j][i] = 0;
                }
            }
        }
    }

    // build font description
    if (font != 0) {
        float recip_width = 1.0f / STB_FONT_times_9_latin_ext_BITMAP_WIDTH;
        float recip_height = 1.0f / height;
        for (i=0; i < STB_FONT_times_9_latin_ext_NUM_CHARS; ++i) {
            // pad characters so they bilerp from empty space around each character
            font[i].s0 = (stb__times_9_latin_ext_s[i]) * recip_width;
            font[i].t0 = (stb__times_9_latin_ext_t[i]) * recip_height;
            font[i].s1 = (stb__times_9_latin_ext_s[i] + stb__times_9_latin_ext_w[i]) * recip_width;
            font[i].t1 = (stb__times_9_latin_ext_t[i] + stb__times_9_latin_ext_h[i]) * recip_height;
            font[i].x0 = stb__times_9_latin_ext_x[i];
            font[i].y0 = stb__times_9_latin_ext_y[i];
            font[i].x1 = stb__times_9_latin_ext_x[i] + stb__times_9_latin_ext_w[i];
            font[i].y1 = stb__times_9_latin_ext_y[i] + stb__times_9_latin_ext_h[i];
            font[i].advance_int = (stb__times_9_latin_ext_a[i]+8)>>4;
            font[i].s0f = (stb__times_9_latin_ext_s[i] - 0.5f) * recip_width;
            font[i].t0f = (stb__times_9_latin_ext_t[i] - 0.5f) * recip_height;
            font[i].s1f = (stb__times_9_latin_ext_s[i] + stb__times_9_latin_ext_w[i] + 0.5f) * recip_width;
            font[i].t1f = (stb__times_9_latin_ext_t[i] + stb__times_9_latin_ext_h[i] + 0.5f) * recip_height;
            font[i].x0f = stb__times_9_latin_ext_x[i] - 0.5f;
            font[i].y0f = stb__times_9_latin_ext_y[i] - 0.5f;
            font[i].x1f = stb__times_9_latin_ext_x[i] + stb__times_9_latin_ext_w[i] + 0.5f;
            font[i].y1f = stb__times_9_latin_ext_y[i] + stb__times_9_latin_ext_h[i] + 0.5f;
            font[i].advance = stb__times_9_latin_ext_a[i]/16.0f;
        }
    }
}

#ifndef STB_SOMEFONT_CREATE
#define STB_SOMEFONT_CREATE              stb_font_times_9_latin_ext
#define STB_SOMEFONT_BITMAP_WIDTH        STB_FONT_times_9_latin_ext_BITMAP_WIDTH
#define STB_SOMEFONT_BITMAP_HEIGHT       STB_FONT_times_9_latin_ext_BITMAP_HEIGHT
#define STB_SOMEFONT_BITMAP_HEIGHT_POW2  STB_FONT_times_9_latin_ext_BITMAP_HEIGHT_POW2
#define STB_SOMEFONT_FIRST_CHAR          STB_FONT_times_9_latin_ext_FIRST_CHAR
#define STB_SOMEFONT_NUM_CHARS           STB_FONT_times_9_latin_ext_NUM_CHARS
#define STB_SOMEFONT_LINE_SPACING        STB_FONT_times_9_latin_ext_LINE_SPACING
#endif

