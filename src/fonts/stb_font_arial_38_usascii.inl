// Font generated by stb_font_inl_generator.c (4/1 bpp)
//
// Following instructions show how to use the only included font, whatever it is, in
// a generic way so you can replace it with any other font by changing the include.
// To use multiple fonts, replace STB_SOMEFONT_* below with STB_FONT_arial_38_usascii_*,
// and separately install each font. Note that the CREATE function call has a
// totally different name; it's just 'stb_font_arial_38_usascii'.
//
/* // Example usage:

static stb_fontchar fontdata[STB_SOMEFONT_NUM_CHARS];

static void init(void)
{
    // optionally replace both STB_SOMEFONT_BITMAP_HEIGHT with STB_SOMEFONT_BITMAP_HEIGHT_POW2
    static unsigned char fontpixels[STB_SOMEFONT_BITMAP_HEIGHT][STB_SOMEFONT_BITMAP_WIDTH];
    STB_SOMEFONT_CREATE(fontdata, fontpixels, STB_SOMEFONT_BITMAP_HEIGHT);
    ... create texture ...
    // for best results rendering 1:1 pixels texels, use nearest-neighbor sampling
    // if allowed to scale up, use bilerp
}

// This function positions characters on integer coordinates, and assumes 1:1 texels to pixels
// Appropriate if nearest-neighbor sampling is used
static void draw_string_integer(int x, int y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0, cd->t0); glVertex2i(x + cd->x0, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t0); glVertex2i(x + cd->x1, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t1); glVertex2i(x + cd->x1, y + cd->y1);
        glTexCoord2f(cd->s0, cd->t1); glVertex2i(x + cd->x0, y + cd->y1);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance_int;
    }
    glEnd();
}

// This function positions characters on float coordinates, and doesn't require 1:1 texels to pixels
// Appropriate if bilinear filtering is used
static void draw_string_float(float x, float y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0f, cd->t0f); glVertex2f(x + cd->x0f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t0f); glVertex2f(x + cd->x1f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t1f); glVertex2f(x + cd->x1f, y + cd->y1f);
        glTexCoord2f(cd->s0f, cd->t1f); glVertex2f(x + cd->x0f, y + cd->y1f);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance;
    }
    glEnd();
}
*/

#ifndef STB_FONTCHAR__TYPEDEF
#define STB_FONTCHAR__TYPEDEF
typedef struct
{
    // coordinates if using integer positioning
    float s0,t0,s1,t1;
    signed short x0,y0,x1,y1;
    int   advance_int;
    // coordinates if using floating positioning
    float s0f,t0f,s1f,t1f;
    float x0f,y0f,x1f,y1f;
    float advance;
} stb_fontchar;
#endif

#define STB_FONT_arial_38_usascii_BITMAP_WIDTH         256
#define STB_FONT_arial_38_usascii_BITMAP_HEIGHT        164
#define STB_FONT_arial_38_usascii_BITMAP_HEIGHT_POW2   256

#define STB_FONT_arial_38_usascii_FIRST_CHAR            32
#define STB_FONT_arial_38_usascii_NUM_CHARS             95

#define STB_FONT_arial_38_usascii_LINE_SPACING          25

static unsigned int stb__arial_38_usascii_pixels[]={
    0xce8805d9,0x0276c01c,0x980fb2e2,0x02aaa05e,0x6e554400,0x8001acce,
    0x0aaaaaa8,0x05555553,0x00001950,0x32e60000,0x2001bcdd,0x93003cc9,
    0x00000059,0xb9880000,0x3002bcdc,0x1ff30155,0x1ffffcc0,0x7cc0bfd0,
    0x3fa04fff,0x007ff602,0xfffffd50,0x17dfffff,0x3fffea00,0xffffb1ff,
    0x03f900df,0x9dfb5100,0x2a016645,0xfffffffe,0xfff003ef,0x03ffb001,
    0x473bf6e2,0x49971cc8,0x002ceedb,0xfffffe88,0x200bffff,0x9f901ffd,
    0x7ffff440,0x740bfd00,0xf703ffff,0x01ffd80d,0xffffff70,0xfffdd9bd,
    0xff5007ff,0x3f63ffff,0xb506ffff,0x019dffff,0xffffff90,0x209ff19f,
    0xffffffd8,0x0effffff,0x201ffe40,0xff906ff8,0xf37fffff,0x7edff67f,
    0x02ffffff,0xffffff70,0x3fffffff,0x4407ff60,0x7e4402ff,0x20bfd03f,
    0x2201eff9,0x7fec01ff,0xefffd801,0x7fed400b,0x266200df,0xffb1ffe9,
    0xfe881337,0xffffffff,0x37ffee02,0xffeffdcb,0xefffe884,0xffda889b,
    0x3e601fff,0x1ffd406f,0x5de7ffd4,0xb3ffdffd,0x759ffbff,0x4401fffb,
    0x0abffffd,0x5ffffd95,0x6403ffb0,0x5ff8806f,0x3ee0bfd0,0x02fec02f,
    0x3a200cc4,0x88001eff,0xb000fffe,0x07ff63ff,0xfdefffd8,0x981ffffc,
    0xffa82fff,0xfffe84ff,0xffffa803,0x807ffa00,0x7fcc0ffd,0xffffa81f,
    0x03dfffb3,0x3201dff7,0x4c00cfff,0x0001ffff,0xfd005ff1,0x5c17fa0d,
    0x3fe601ff,0xfd100002,0xf700009f,0x3ff600bf,0x2e03ffb1,0x13f72eff,
    0xfff0fffb,0x27ffd405,0x8007fff2,0x2e05fffa,0xdff104ff,0x5c05ffd0,
    0xfffb3fff,0x427fe403,0x2002fff9,0x0006fff9,0x3fa01bfa,0x320bfd06,
    0x1ff600ff,0x3ffc8000,0x3ff20000,0xb1ffd804,0x3ffa03ff,0x7fc47ee2,
    0x01bfe61f,0xff893ffa,0xffc8004f,0x0fff102f,0xff10bfee,0x27fff00d,
    0x7c405ffd,0x05ffd86f,0x03fffa80,0x803ff700,0x0bfd07fe,0x7c403ff2,
    0x1997004f,0x4c09ff30,0x32a1beec,0x003ff60c,0x3ff63ffb,0x5c1fff01,
    0xa8fff61f,0xffb803ff,0x003ffee4,0xb02ffec0,0x1ffd05ff,0xc804ffa8,
    0x03ffb3ff,0xffa8ffd0,0xff90000f,0x200665cd,0x7f405ff9,0x320bfd07,
    0x5ff900ff,0x207ff600,0xffd506fe,0x3fa3ffff,0x00ffe20f,0x3ff63ffb,
    0x5c6ff981,0x3f20621f,0x4ffa802f,0x8000fffa,0xf500fffa,0x85ff989f,
    0xfb803ffb,0x001ffb3f,0x7fe43ffb,0x3fe60004,0x003ffb1f,0x7fd80ffd,
    0x3f20bfd0,0x00ffd00f,0x3ee0ffec,0xefffa81f,0xffafffdc,0x6c06fd86,
    0x03ffb1ff,0x7dc1fff1,0x01ffd801,0xff14ff98,0x7cc0003f,0x1ffe02ff,
    0xffb05ff9,0x27ff5005,0xff9007fd,0x001ffec5,0x7ecfffe0,0x0ffc801f,
    0x7f41ff60,0x201ffb05,0x3f6005ff,0x4c2ff41f,0x7e443fff,0xffa85fff,
    0x6c7ff600,0x5ffd01ff,0x7f400fdc,0x4ff9801f,0x0001fff3,0x3203fff8,
    0x41ffe2ff,0xf9802ffd,0x200ffb3f,0x3ffe3ffb,0x7ff40002,0x7003ffb5,
    0x7fe403ff,0xfb05fe80,0x013fe20f,0x3e21ffd8,0x03ffe82f,0x220ffffa,
    0x3ff601ff,0x3203ffb1,0x03f73fff,0x5005ffb0,0x1ffea9ff,0x13ffa000,
    0xff35ff98,0x00bff209,0x7fecffea,0x11ffc800,0x80003fff,0x3ffb5ffc,
    0x407ff500,0x5fe82ffb,0xf305ff88,0x7fec009f,0x3ee1fee1,0x7ffd406f,
    0x6c05ff01,0x03ffb1ff,0x7ef7ffec,0x03ffc801,0xff74ffb8,0xff90000d,
    0xf97fe80b,0x0ffee03f,0x7ecffee0,0x0ffd801f,0x0000fff3,0x3ff6dff7,
    0x04ff9801,0x3fa1bfe2,0x702ffc85,0x7ec007ff,0x3617f61f,0x7fcc02ff,
    0x02ff880f,0x7fec7ff6,0x7fffec01,0x3ea02dff,0x4ffe806f,0x0000dff7,
    0xfb809ffb,0x2606feaf,0xffd806ff,0x8805ffb3,0x1ffe66ff,0x5bfee000,
    0xf8801ffd,0x77fcc05f,0x6d4bfd0b,0x3ff206ff,0x87ff6002,0x06ff84fe,
    0xf306ff98,0x8ffec03f,0xda801ffd,0x1effffff,0x4c05ffd0,0xfff54fff,
    0x7ffd0000,0xffeff880,0x017ff403,0x3f67fff1,0x27fdc06f,0x0001fff3,
    0xffb5ffc8,0x01ffe003,0x7f4bffe6,0xd013ffe5,0x7ec003ff,0xf30ffe1f,
    0x9ff5009f,0xfb01fee0,0x007ff63f,0xfffffd88,0x2fffa83f,0x34ffffa8,
    0x80001fff,0xfd801fff,0x7d400fff,0xffd880ef,0x09fffb3f,0xf883ffe6,
    0x6c0001ff,0x03ffb4ff,0x6c01ffe0,0x7cbfd2ff,0x7ff400ff,0x87ff6000,
    0x1ffdc2ff,0xd81ffdc0,0x8ffec06f,0x5c001ffd,0x1fffea9f,0xccefffd8,
    0x14fffffe,0x40003fff,0xa800fff8,0xfb005fff,0xfd5137ff,0x3ff67fff,
    0xfb98adff,0x3ffe81ff,0x9fff4000,0xf8801ffd,0x7ff4c07f,0x7ecbfd1e,
    0x3ffa01ff,0x47ff6002,0x7fec2ff8,0x01ffd801,0xffd809ff,0x8003ffb1,
    0x1bff61fb,0x7fffffdc,0x364ffacf,0x2a0004ff,0x3fe007ff,0x3ff6002f,
    0xfcefffff,0xff9ffb3f,0x05ffffff,0x80017ff2,0xffb0fff9,0x0dff5003,
    0x7f41ffe8,0x80fff445,0x36003ffd,0x90ffe1ff,0xff9805ff,0x801ffb07,
    0x3ffb1ffd,0x261fb800,0x36e607ff,0x7ff51cef,0x100fffd4,0x09fff107,
    0x40037f40,0x8dffffeb,0x3ffb3ffb,0x39dfffd3,0x017ffcc0,0x365ffe80,
    0xffb801ff,0x213fe605,0x4ff985fe,0x4009ff90,0x13fe1ffd,0xfd807ff5,
    0x03ffc85f,0xffb1ffd8,0x3ee04c03,0x000fffc1,0x7f43ffb8,0x8ffea05f,
    0x5000effd,0x440007ff,0xd9ffdc1a,0x006a21ff,0x8006ffd8,0x3f62fffa,
    0x4ffc801f,0x3a03ff20,0x20ffd05f,0x36005ffb,0x317fa1ff,0x7fdc0dff,
    0x037fd44f,0xffb1ffd8,0xb87ff903,0x88fff41f,0xffc8009a,0x827ffcc2,
    0xffcffffc,0x3ff6002f,0xfb800000,0x003ffb3f,0x0dfff880,0x8bfff500,
    0xfd801ffd,0x41ff602f,0x0ffb05fe,0xd801ffe6,0x03ff21ff,0xfc819ffd,
    0xff714fff,0x3ff6003f,0xf503ffb1,0x221fb8df,0xdff10fff,0x80fff980,
    0x881efffc,0x04fffffc,0x0017fee0,0xd9ffdc00,0xa80001ff,0x6402ffff,
    0x7ec0ffff,0x0fff801f,0x7f41ff60,0x201ff905,0xfb000fff,0x21ffcc3f,
    0xeccffff8,0xfefffdef,0x36001eff,0x03ffb1ff,0x7dc3fff1,0xff1bfee1,
    0x3ffa207f,0x3ffff205,0xffecabce,0x3a203fff,0x000ffffe,0x27ff7000,
    0x00001ffd,0x7bdffff5,0xdffffb95,0x803ffb01,0x7f405ff8,0x320bfd07,
    0x3ff900ff,0xd07ff600,0xffff30df,0xfff51bff,0x8001bfff,0x3ffb1ffd,
    0xfb97ffa0,0xb87ffd31,0xdbacefff,0xfa805fff,0xffffffff,0x1effffff,
    0x05fffff0,0x7fdc0000,0x0003ffb3,0x7ffff4c0,0x5fffffff,0x5007ff60,
    0x7fe807ff,0x3f20bfd0,0x07ff501f,0xf507ff60,0xbfd7307f,0x2cefec85,
    0xfb00aaa8,0x407ff63f,0xfcaefff9,0x906fffca,0xffffffff,0xfea800bf,
    0x8befffff,0xe85fffd8,0x00002dff,0xfd9ffdc0,0xa800001f,0xfffffffd,
    0x0ffec01c,0xd003ffa0,0x417fa0ff,0x3fa01ffc,0x03ffb007,0x00005ff9,
    0xd813fee0,0x03ffb1ff,0x7fffffcc,0x200effff,0xbdfffec9,0x2a620001,
    0xdfd5009a,0x00000000,0x3bb25dd5,0x4c000000,0x000009aa,0xe802ff98,
    0x20bfd06f,0x3e601ffc,0x0ffe803f,0x0005ffd0,0x405ffb80,0x3ffb1ffd,
    0xffffd980,0x08003fff,0x40000000,0x0000002b,0x00000000,0x00000000,
    0x3fe00dfb,0x2e0bfd06,0x37ec01ff,0x8807ff40,0x0000dfff,0x0077fec4,
    0x7fec7ff6,0x2ff66001,0x00000001,0xa8800000,0x18801bcb,0xaa837771,
    0x5555531a,0x2aa61555,0xaaaaaaaa,0xaaaaaaaa,0x2000000a,0xf9801ff9,
    0x20bfd04f,0x7c404ffa,0x1ffe202f,0x39fffd30,0xfffc9800,0x1ffd800d,
    0xb8003ffb,0x0000001f,0xa8000000,0xbeffffff,0x3f62e980,0xe9fff46f,
    0xffffffff,0xffffff71,0xffffffff,0x003fffff,0x02fec000,0x05fffb71,
    0xfff817fa,0x0df901cd,0x00bfff79,0x37ffffaa,0xccbaaabc,0x202effff,
    0x1fffeee9,0x0bdddffb,0x00003f70,0x00000000,0xffffffb8,0xebbdffff,
    0x17ff42ff,0x3ffa7ffd,0x51ffffff,0xbbbbbbbb,0xbbbbbbbb,0x00003bbb,
    0x9803fe20,0x3a06ffff,0x3ffee05f,0x43ff104f,0x01fffff9,0x7ffffdc0,
    0xffffffff,0xffa803ff,0xffb1ffff,0x9500dfff,0x00000001,0xfb800000,
    0xffffdcdf,0x2fffffff,0xffd37fc4,0x33333327,0x00000ccc,0x64000000,
    0x7ffcc04f,0x017fa00c,0x5409fff5,0x3bffea5f,0x95310001,0xdfffffdb,
    0x3a600159,0xd91eeeee,0x000bdddd,0x00000000,0x075c0000,0x7ffff5cc,
    0x5ff303ff,0x00000000,0x88000000,0x20013001,0x02200098,0x00010330,
    0x00008800,0x00000000,0x00000000,0x20030000,0x400accca,0x00000098,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x372ea000,0x20000abc,0x0abdcb98,
    0x00551000,0x000aa980,0x2a07ba60,0x372e205e,0x13ae000b,0x2cdca800,
    0x9aa88000,0x07b60000,0x0006aa20,0x00155300,0x00aaa800,0xff930000,
    0xffffffff,0x7ff44005,0x2fffffff,0xfffff700,0x3aa0017b,0x00dfffff,
    0x6c07fd40,0xfffd106f,0xff1005ff,0xffd30003,0x0003dfff,0xdffffff5,
    0x0ff98003,0x3fffff20,0xf700003f,0xffffb07f,0x5fffffff,0x0000ffec,
    0x7ffffdc0,0xffffffff,0x7ffcc00d,0xffffffff,0x3ffa203f,0x1fffffff,
    0x7ffffdc0,0x2000efff,0x09fd06fc,0x3fef3ffa,0x02fe401f,0x77fffcc0,
    0x2000ffff,0xfffffffd,0x3f2003ff,0xffffd106,0x001dffff,0xf83ffb80,
    0xffffffff,0x3ff62fff,0x7e400001,0x889bcfff,0x0efffdb9,0x37dfff50,
    0xfffd5313,0x2ffffa0b,0x1fffc989,0x137fff50,0x001dffb5,0x3fe213fa,
    0x741ffa82,0x07fe205f,0x42fffa00,0x7005ffd8,0xd715bfff,0x3a003fff,
    0xdfff883f,0x5fffd98b,0x1ffdc000,0x3bbbffe2,0x22eeeeee,0x00001ffd,
    0x003bffee,0x6c13ffee,0xffb804ff,0x0fffdc1f,0xff05ffa8,0x13ff605f,
    0x7cc1ffc0,0xb86fd81f,0x0bfb00ff,0x30fff300,0xff100fff,0x1bff205f,
    0x3207fe20,0xfff105ff,0x7fdc0003,0x0027fd43,0x0000ffec,0x004fff88,
    0x2207ffcc,0x3f2006ff,0x01fffc3f,0xff70bff6,0x807ff80b,0x7fb81ff9,
    0xff50bfd0,0x003ff303,0x3a09ff50,0x7fd400ff,0x03ffe606,0xff10ff50,
    0x27fe401f,0x87ff7000,0xd8002ffb,0xb00001ff,0x36000dff,0x27fd43ff,
    0x4cdff300,0xff9806ff,0x2017ff44,0x7d402ffc,0xf05fd80f,0x05ff309f,
    0x26000bfb,0x6ff886ff,0x403ffc80,0x7ec02ffe,0x402ffc85,0x20003de9,
    0x7fec3ffb,0x1ffd8000,0xfff88000,0x7df30001,0x4006ffa8,0x17fea4cd,
    0xff1bfe20,0x5ffa801f,0x3fb3332a,0xffcccccf,0x13fa1cce,0xff307fe6,
    0x7ffc0003,0x401ffdc3,0x7f405ffb,0x417fc01f,0x200006ff,0x71cefda8,
    0x07fe87ff,0x2e3ffb00,0x800bdffd,0x40007ffb,0x05fff100,0x03ffb800,
    0x3e61fff0,0x7ff8806f,0x3ffffff2,0xffffffff,0x17f63fff,0xbfb03fea,
    0xfffb8000,0x001fff71,0x2601fff1,0x7fcc07ff,0x0027fc40,0xfffffc80,
    0x23ffbbff,0xb0005ff8,0xffffb3ff,0xfd803fff,0x2000005f,0x000cfffe,
    0x2009ff70,0xbff51fff,0x5c3ffe00,0xeeffeeee,0xeeffeeee,0xb03ff22e,
    0x00ff98df,0xefffe800,0x3a000eff,0x7ec40cff,0x437dc04f,0x32a23ff9,
    0xffa802bd,0xeffecbdf,0x33fe63ff,0x1ceffed9,0xbfffffb0,0x07fffd97,
    0x00027ffc,0xffffd300,0x2600159d,0xff8805ff,0x00bff71f,0x7cc03ffe,
    0x207fb81f,0xfc89eff8,0x0027f42f,0xfffff880,0xffd88005,0x4fffdbdf,
    0xfa84fd80,0xfffff92f,0x3fe601df,0xffffb81f,0x3ffbfee3,0x83ffffff,
    0xc81ffffd,0xfff00fff,0x88000005,0xfffffffe,0x3fe201ce,0x7ffe400f,
    0x2009ff72,0xff701ffe,0xf7017f60,0xa8bfffff,0x700000ff,0x000dffff,
    0xffffffb8,0x2ff8802f,0xffdaffb8,0x1fffffef,0x2e02ffe8,0x3ff23fff,
    0xffdcdfff,0x7ffec4ff,0x20fff601,0xa801fff8,0xaaaaaaaa,0x3ffae00a,
    0x1effffff,0x4c0bffb0,0xff72ffff,0x07ffa007,0x4ff837e4,0x3effd980,
    0x80004fe8,0xffffffe9,0xfff90003,0x05dfffff,0xff907fa8,0xfea85ffd,
    0x037fc46f,0xffd1fffc,0xfffb103f,0x202ffec3,0xff887ff9,0xffff801f,
    0x02ffffff,0xffffdb88,0xff883fff,0x3fee21ef,0x7ff72ffe,0x407ffa00,
    0x2ff884fe,0x1ff50000,0x00ceeda8,0x367bffea,0x80541fff,0x89bfffe8,
    0x204fffc9,0xfff905fc,0x3ffa201f,0x200ffea3,0x37723ffc,0xb37fec01,
    0xffd003ff,0x003fff01,0xffffffff,0x730005ff,0x709ffffd,0xffffffff,
    0x2e3ff95f,0xffd004ff,0x2a0ffe03,0xd00000ff,0xffffb89f,0xfff982ff,
    0x43fffa24,0x7e40fff8,0xfff300ef,0x640ffa05,0x7d402fff,0x00bfee7f,
    0x4000ffee,0xffb0fff8,0x03ffb001,0x55005ffd,0xffd55555,0xfea80005,
    0xffe980ff,0xffb2ffff,0x4013fea3,0x53310fff,0x933335ff,0x013333ff,
    0x4c1ff500,0xffeaaeff,0x4c2fff40,0xbff76fff,0x400fff88,0xff884ffa,
    0x00fff701,0x7fec3ffe,0x03ffa802,0x6cbffa00,0x7ff9007f,0x0009ffb0,
    0x0002ffe8,0x203ffe88,0x7f41bdba,0x00bff30f,0x7fe43ffe,0xffffffff,
    0x3fffffff,0x6c4fe800,0x264ff86f,0xff501fff,0xa85ffd9f,0xfff005ff,
    0x7d40df70,0x3ffd006f,0x26007ff6,0x360003ff,0x00ffb3ff,0x3ea0fff2,
    0x7f40007f,0x00bff32f,0x000bff70,0xbff13ffc,0x64fff100,0xffffffff,
    0xffffffff,0x7fd4003f,0x7e41ffc0,0x701bfea6,0x90dfffff,0x3f6007ff,
    0x3027ec1f,0x3f600dff,0x005ff91f,0x40007ff5,0x1ffb3ffd,0x103ffb00,
    0x40007fff,0xfff12ffe,0x5ff98001,0x8bff3000,0xffa807ff,0x37feaa65,
    0xcffbaaaa,0x4001aaaa,0x17fc44fe,0xdff73fdc,0x7ffffb00,0x2009ff70,
    0x17fc2ffd,0x200fff30,0x0ffea7fe,0x5ccffee0,0x3ffd002c,0x3a003ff6,
    0xfff900ff,0x3ffa0003,0x000bff62,0x2f6c7ff9,0x361ffe40,0x7fe402ff,
    0xa82ff883,0x5c0000ff,0x17fcc0ff,0xffa87fdc,0x7ff4401f,0x06ffa81f,
    0x7cc1ffd0,0x0fff400f,0xff137fc0,0x27ffb00b,0xf8806ffa,0x05ffb0ff,
    0x7407ff88,0x22001eff,0x3ee2fffc,0xfd1002ff,0x017ff41f,0xf981fff1,
    0x07ffc05f,0x7e40ffcc,0x3ff80007,0xfb82ff88,0x013ffe27,0x83fffff7,
    0x4c00fff8,0x037e47ff,0x2e02ffd4,0x0fffc4ff,0x227fff30,0x7e401fff,
    0x01bff65f,0xf9809ff9,0x100acfff,0x43fffff7,0x00cffff8,0xf71bffea,
    0x3ffa20df,0x205ffd03,0xff704ffd,0x00017f60,0x3fe01ff7,0x7e46fc83,
    0xfff701ff,0xfc83ffff,0xffd100ef,0xd003fe87,0x3fe609ff,0x077fdc1f,
    0xb1fffec4,0x3ea01dff,0x3fff60ff,0x01fff504,0xfffffd30,0xffffb99d,
    0xfd101bff,0xb97bdfff,0x881dffff,0xb98beffe,0x3ea05ffe,0xfda89cff,
    0x0df900ff,0x88000ffe,0x1bf603ff,0xff889ff1,0xfecaacff,0xffffbcff,
    0x4df7ff41,0x45fffb98,0xf5001ff8,0xf7315bff,0x3ff205ff,0xffea88bf,
    0x3ffa23ff,0xffc98adf,0x7fffec3f,0xfffb98ad,0x3ff62003,0xffffffff,
    0xfd801eff,0xffffffff,0x3fe605ff,0x5fffffff,0xfffffa80,0x3a01ffff,
    0x02ff884f,0x301fee00,0xfff75dff,0xffffb101,0x545fffff,0x7f4c4fff,
    0xffffffff,0x003fd40d,0x3fffffea,0x7ec03fff,0xaeffffff,0x7ff4c3ff,
    0x2fffffff,0xfff9ffd8,0x003fffff,0xffffd710,0x80059dff,0xffffffdb,
    0xfd8803de,0x002effff,0x3fffffa6,0x0bfe200c,0x40003fea,0xfb803ff8,
    0x401fffff,0xdeffffeb,0x2e05f981,0x2effffff,0x1000bfb0,0x5bfffffb,
    0x3fff6e00,0x03ffa8df,0xbffffff7,0x74dff603,0x001effff,0x03553100,
    0x2aa62000,0x53100009,0xa9800013,0x0aa88009,0x20002a98,0x326005ea,
    0x22000cde,0x009800a9,0x4009a988,0x440001aa,0x0d40001a,0x01531000,
    0x000cc400,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x66e65440,0x5400001a,0x554c00aa,
    0x02aa8800,0xdb2aa880,0x01553005,0x376e6000,0x0015531c,0x002aaa60,
    0xa986aaa0,0x2aaa001a,0x46aa6002,0x40001aaa,0x07100aaa,0x2aaaaaa2,
    0xaaaaaaaa,0x5542aaaa,0x7fed401a,0x2effffff,0x5ffd0000,0x3ffffee0,
    0x1bfea04e,0x65bfea00,0x1ffd805f,0xfffc8000,0x03ffb3ff,0x17ffe200,
    0x43fff500,0x3e006ffa,0xfb001fff,0x01ffee7f,0x80fff880,0xfff305fa,
    0xffffffff,0xffffffff,0xb027ffc1,0xffffffff,0x000bffff,0xe885ffd0,
    0xffffffff,0x06ffa80e,0xf56ffa80,0x03ffb00f,0xffffb800,0x03ffb1ff,
    0x17ffd400,0x43fff880,0xa800fff8,0xf004ffff,0x3ffe23ff,0xbff70001,
    0x260bff30,0xffffffff,0xffffffff,0x3ffe0fff,0xefffe884,0x3ffaa61a,
    0x7f40004f,0x67ffec2f,0x0effeb89,0x40037fd4,0x5ff16ffa,0x001ffd80,
    0x40efff40,0x40001ffd,0xe800fffd,0x5ffd05ff,0xdffff900,0xd8fff300,
    0xfd0004ff,0x0bff303f,0x33333322,0xcccfffdc,0x7fc4cccc,0x2fffd84f,
    0x03fffc80,0xb8bffa00,0xffd00fff,0x006ffa87,0x3fa6ffa8,0x00ffec04,
    0x407ffe00,0x40001ffd,0x6405fff8,0xff900eff,0xfbdfd009,0x4ffb801f,
    0x4003ffd4,0xff306ff9,0x3fe2000b,0x27ffc007,0x8007ffee,0x20007ffc,
    0x3ffa2ffe,0x517fee04,0xf5000dff,0x2037dcdf,0x40001ffd,0x3ff607ff,
    0xff980001,0x3fff503f,0x2037fcc0,0x2ffbcff8,0x7c17fec0,0x7e4002ff,
    0x0bff303f,0x01ffe200,0xff89fff0,0x7fc4003f,0xffd0002f,0x003ffe25,
    0x7fd41fff,0x6ffa8006,0xfd803fe6,0x7fc0001f,0x007ff607,0x0fffe400,
    0x200fffe2,0x7fdc07ff,0x7c05ff8a,0x5ffc80ff,0x207ffc00,0xcceffdc9,
    0x1ffe2003,0x549fff00,0xc8000fff,0xfd0001ce,0xf801985f,0x037fd47f,
    0x3e37fd40,0x47ff602f,0x82cefec9,0xccfffcca,0x807ff61c,0xfe803ccc,
    0x02fff46f,0x3601ffd8,0x881ffa7f,0xfff306ff,0x17fea001,0x3fffffea,
    0x3fe2005f,0x1fffc007,0x0000bffb,0x17ff4000,0x22ffcc00,0xa8006ffa,
    0x02fec6ff,0xfff93ffb,0xfc89ffff,0x2fffffff,0x7ec07ff6,0xff9800ef,
    0x01dff94f,0xf80ffee0,0x407ff25f,0x3fa04ffb,0x5ffb002f,0x9dffb930,
    0x7fc40079,0x1fff4007,0x00007fff,0x17ff4000,0x0bffe200,0x5000dff5,
    0x07fa8dff,0x3fffbff6,0x24ffffdc,0xccfffcca,0x207ff61c,0x2000effd,
    0xfffbfffb,0x17fe6001,0xff51ffcc,0x807ff607,0xf8805ffb,0x2ffcc07f,
    0x07ff8800,0xf897ff40,0x000002ff,0x00bffa00,0x7fffd731,0x000dff50,
    0xff88dff5,0x3ffffb01,0x80fffc88,0x3ff607ff,0x0077fec1,0x7ffffec0,
    0x07ff8003,0x7fc43ff9,0x880ffd06,0x7dc00fff,0x2ffcc04f,0x07ff8800,
    0xf897fec0,0x000001ff,0x00bffa00,0x03fffff5,0x2001bfea,0x3fe86ffa,
    0x403fffb0,0x7ff81ffe,0xfd87ff60,0xf10000ef,0x2000bfff,0x6fe81ffd,
    0x7c40ffe8,0x3ffc805f,0x2007ff40,0x10005ff9,0xfd800fff,0x00fff31f,
    0xfe800000,0x7ffdc02f,0xffa83eff,0x6ffa8006,0xffb06fc8,0x82ffb809,
    0x3ff607ff,0x001dffb1,0x03fffc80,0x887ff700,0x2ffb84ff,0x4c01ffd4,
    0x3fe606ff,0x05ff9805,0x00fff100,0xff11ffc8,0x0000001f,0x2017ff40,
    0xfffca999,0x0037fd45,0x7cc37fd4,0x03ffd80f,0x7fc1ffd4,0x367ff607,
    0x40000eff,0x01fffff9,0x544ff980,0x4ff982ff,0xe800ffe4,0x5ff901ff,
    0x00bff300,0x001ffe20,0x7ffc1ff9,0x00000002,0x2000bffa,0x3ea3fff9,
    0xffa8006f,0xfb05ff06,0x4ffa805f,0x3f607ff8,0x006fffef,0x7ffffc40,
    0xdff0006f,0xff00ffc8,0x2007fe8d,0xfff04ffb,0x017fe600,0x003ffc40,
    0xffd83fee,0x00000003,0x4000bffa,0x3fe67ffb,0x5ffb8007,0xffb09fb0,
    0x84ffa803,0x3ff607ff,0x003fffff,0x3e77ff60,0xfc8004ff,0xd81bfe0f,
    0x09ff10ff,0x5437fc40,0xff3004ff,0x3fe2000b,0x23fd4007,0x20004ffc,
    0x3fa0000a,0x3fe0002f,0x00fff30f,0x2e0bff90,0x01ffd87f,0x7fc27fd4,
    0x37fff607,0x8001fffa,0xff70fffb,0xffa8005f,0x5c07ff32,0x05ff52ff,
    0x6c1ffd80,0xff3001ff,0x3fe2000b,0x23fd4007,0x50006ffa,0x01881dff,
    0x00017ff4,0x3fe25ffd,0x4ffc8007,0xfd83ff30,0x27fd401f,0xffb03ffc,
    0x0037fe4b,0xfb0bffe6,0x7c4001ff,0x403ff74f,0x1ff93ff8,0x24ffa800,
    0x26006ff8,0xf10005ff,0x6f9800ff,0x0007ffc4,0x3fe2ffec,0x98fffc07,
    0xffd003dc,0x000fffc3,0xfe80fffa,0x200ffec3,0x7ff84ffa,0xf887ff60,
    0xfd1003ff,0xbfff10bf,0xfb6fe800,0x3abfd00f,0xfff0006f,0x3001ffdc,
    0x22000bff,0x7cc007ff,0x005ffe86,0x3a17ffcc,0xfff100ff,0x201bfea3,
    0x7fec7ff8,0x3ffe6004,0xfb17f201,0x4ffa803f,0x3f607ff8,0x0fffd41f,
    0x8077fec0,0x2003fffa,0x05ff8ffc,0x4ff8ffc8,0x25ff9000,0x22000ffe,
    0xf10006ff,0x4c0000ff,0xf1004fff,0x5ffb0dff,0xff1ffe60,0x6ffc803f,
    0x801fffdc,0x7d407ffd,0x200ffec7,0x7ff84ffa,0x3607ff60,0x7fdc06ff,
    0x7ffec01f,0xf7ff5001,0x7ff5005f,0x220003ff,0x04ff8cff,0x0037fc40,
    0x0007ff88,0x0efffe40,0x03fffd50,0xe883dff7,0x77fe45ff,0x83fff500,
    0x00afffe8,0x805fffb1,0x3ff62ff8,0x427fd401,0x3ff607ff,0x03fff881,
    0x1007fff3,0x2200dffd,0x800ffeff,0x007feff8,0x7fdfff40,0xefff8001,
    0x3fe2003c,0x0d554007,0xdfffffd8,0xffffecab,0x3bfffe02,0x41ffffdb,
    0x89cfffe8,0x504fffc9,0x99dfffff,0x0bffffdb,0xffd93fa0,0x427fd401,
    0x3ff607ff,0x83fff701,0x2006ffe8,0xd004fff9,0x7400dfff,0x40005fff,
    0x006ffffa,0x0fffffb0,0x003ffc40,0xfc80fffe,0xffffffff,0x7d402eff,
    0xffffffff,0xffffd301,0x809fffff,0xfffffff9,0x004fffff,0x1ffd9bee,
    0x7c27fd40,0x07ff607f,0x7ec6ffd8,0x7e4000ff,0xffc802ff,0x3fee004f,
    0xff80003f,0x320003ff,0x1000ffff,0xff800fff,0x7fe4403f,0x03ffffff,
    0x3ffffa20,0xffb801df,0x001effff,0xfffffd71,0x980039ff,0x03ffb0ff,
    0xff84ffa8,0x807ff607,0xff53fff8,0x3fa0005f,0x7fcc00ff,0x3fe6001f,
    0xfc80001f,0x880000ff,0x3ffc4001,0x00fffe00,0x001aa988,0x00054c40,
    0x0001aa88,0x00cd54c4,0x0002aa00,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x55000000,0x23510015,0xaaaaaaa8,
    0x00099aaa,0x0026a620,0x10005551,0x2aaa6555,0x5530000a,0x006aa635,
    0x000d54c0,0x2a0aaaa2,0xaaaaaaaa,0xaaaaaaaa,0x2a215551,0xaa88002a,
    0x00055552,0xa8855544,0xaaaaaaaa,0x0aaaaaaa,0x55555551,0x55555555,
    0x1ffd0155,0xf54fe880,0xffffffff,0x005bffff,0x7fffffdc,0x7fff503f,
    0x75ffa800,0x0009ffff,0x7dd7fffa,0xff70005f,0x7ff4400b,0xffffe82f,
    0xffffffff,0xffd3ffff,0x001ffe65,0x7fd5bfea,0xffd0004f,0x7ffffccd,
    0xffffffff,0xfff31fff,0xffffffff,0x03ffffff,0xfe801ffd,0xfffff54f,
    0xffffffff,0xfe880dff,0xffffffff,0x7fffd40e,0x57fea000,0x007ffffb,
    0x75ffff98,0x2e000bff,0xfd1005ff,0x3ffa03ff,0xffffffff,0xd3ffffff,
    0x1ffe65ff,0xc9bfea00,0x5c001fff,0x3fe60fff,0xffffffff,0x31ffffff,
    0xffffffff,0xffffffff,0x01ffd03f,0xfaa7ffe4,0xccccccff,0x5ffffdcc,
    0x46bfffa0,0x545fffb9,0x2005ffff,0xfff75ffa,0xfb8005ff,0xbff75fff,
    0x17fee000,0x07fffa20,0xccccccb8,0xfecccccc,0x25ffd3ff,0xa8007ff9,
    0x3ffe26ff,0x3ffe6006,0x667ffcc3,0xcccccccc,0xfff30ccc,0x99999999,
    0x01999999,0xfd101ffd,0x3fea9fff,0xfffb1006,0x01dff707,0xfa8bffe6,
    0x5003ffff,0x3bfeebff,0x7f4004ff,0xbff75fff,0x17fee000,0x03fffd10,
    0xfff98000,0x7ccbffa5,0xffa8007f,0x01fffd46,0xf985ffe8,0x7cc0007f,
    0x7400006f,0x7ffdc0ff,0xdff54fff,0x85ffe800,0x7ec01ffe,0x3fffea5f,
    0xffa800ff,0xfff9ff75,0x7effcc00,0x00bff75f,0x8817fee0,0x0001fffe,
    0x077ff440,0x3fe65ffd,0x6ffa8007,0x400fffd8,0xf980fffb,0x7cc0007f,
    0x7400006f,0xfffd10ff,0x3ea9ff7b,0x7fdc006f,0x4037fc47,0x3fea7ff9,
    0xa805ffed,0x99ff75ff,0x3f2005ff,0xff75ffaf,0x3fee000b,0x3fffd105,
    0xffd00000,0x32ffe81f,0xf5000fff,0xdfff10df,0x817ffc40,0x40007ff9,
    0x00006ff9,0xff987ff4,0x2a9ff53f,0x7cc006ff,0x13b660ff,0xff53ffc0,
    0x807fff39,0x9ff75ffa,0x3a009ff3,0xf75ffacf,0x3ee000bf,0xeffe885f,
    0xfd800000,0x2ffe82ff,0x5000fff3,0x3fea0dff,0x0bffd03f,0x0003ffcc,
    0x0001bfe6,0x3e61ffd0,0x553fea0c,0x7cc006ff,0x260000ff,0x53fea6ff,
    0x2a00fffc,0x29ff75ff,0xff9807ff,0xff75ffa9,0x3fee000b,0x077ff445,
    0x7fdc0000,0x25ffd03f,0xa8007ff9,0x3ff606ff,0x07ffdc0f,0x000fff30,
    0x0006ff98,0x0887ff40,0xff54ffa8,0x6ffa800d,0x27fe4000,0x7ff49ff5,
    0x5d7fea05,0x03ff94ff,0xbff57fc8,0x40017fee,0x3fa25ffb,0x800000ef,
    0x3a05fff9,0x0fff32ff,0x40dff500,0x3e25fff8,0x7fcc02ff,0x7fcc0007,
    0x7f400006,0xa7fd400f,0x22006ffa,0x20005fff,0x3ea1fff9,0x0fffe64f,
    0xffbaffd4,0xf809ff34,0x2ebff54f,0xf70005ff,0x3fffa2bf,0xf8800000,
    0x7ff406ff,0x555fff32,0x55555555,0xa80dff95,0x9ffb2fff,0x00fff300,
    0x006ff980,0x007ff400,0x7fd53fea,0xfffd5006,0x3fa20001,0x227fd44f,
    0xfa80fffc,0x7c9ff75f,0x47fe607f,0xbff75ffa,0x37fee000,0x05ffffe8,
    0xfffe8000,0x997ff400,0xffffffff,0xffffffff,0xffd806ff,0x3006ffae,
    0xffffffff,0x87ffffff,0xfffffff9,0xffffffff,0x01ffd02f,0xff54ffa8,
    0xdddddddf,0x07ffffff,0x437ff400,0xffe84ffa,0xf75ffa86,0x80ffe49f,
    0x57fea6fc,0x70005ffb,0xfdffddff,0x400005ff,0xe801fffd,0xffff32ff,
    0xffffffff,0x0dffffff,0xffffff10,0x3ffe6003,0xffffffff,0x7fcc3fff,
    0xffffffff,0x02ffffff,0xfa801ffd,0xfffff54f,0xffffffff,0x220005df,
    0xfa81fffe,0x3fff984f,0xffbaffd4,0x7c13fe64,0x5d7fea4f,0xf70005ff,
    0xfb1bffff,0x700001ff,0x3a007fff,0x9fff32ff,0x99999999,0x0dffb999,
    0x13fffea0,0xfffff980,0xffffffff,0x77ffcc3f,0xeeeeeeee,0xfd01eeee,
    0x4ffa801f,0xfffffff5,0x07bdffff,0x7fff4400,0x209ff501,0x3ea0fffc,
    0xe89ff75f,0x21ff987f,0xbff75ffa,0x3ffee000,0x1bffe25f,0xbfff3000,
    0x997ff400,0xfa8007ff,0x3ff6006f,0x3ffcc006,0x1bfe6000,0x1ffd0000,
    0xf54ffa80,0x333333df,0x7fcc0000,0x3fea01ef,0xa9bffa04,0x89ff75ff,
    0x37e41ffc,0x7fdd7fea,0xfff70005,0x09fff50b,0x1bffe200,0x265ffd00,
    0xfa8007ff,0x3fee006f,0x3ffcc005,0x1bfe6000,0x1ffd0000,0xf54ffa80,
    0x800000df,0x400efff9,0x3e604ffa,0x2bff53ff,0x7fcc4ffb,0x3ea1ffc4,
    0x00bff75f,0xc81bfee0,0xe8002fff,0x74000fff,0x0fff32ff,0x00dff500,
    0x2002ffdc,0x40007ff9,0x00006ff9,0x2a007ff4,0x0dff54ff,0x7fd40000,
    0xffa800df,0x47ffe404,0x9ff75ffa,0x7fd4ffd0,0xfbaffd40,0xff70005f,
    0x0fffe80b,0x07fff200,0x4cbffa00,0xfa8007ff,0x3fee006f,0x3ffcc005,
    0x1bfe6000,0x1ffd0000,0xf54ffa80,0x200000df,0x2004fffa,0xfe804ffa,
    0xf75ffaef,0x25ff909f,0x5ffa86fd,0x2000bff7,0x7cc05ffb,0xff7005ff,
    0x3fa0007f,0x00fff32f,0x400dff50,0x4c005ffb,0x4c0007ff,0x400006ff,
    0x7d400ffe,0x00dff54f,0x7fff7000,0x04ffa800,0xffefff98,0xf309ff75,
    0x2a0ffe9f,0x0bff75ff,0x017fee00,0x300fffee,0x40009fff,0xfff32ffe,
    0x0dff5000,0x002ffdc0,0x0001ffe6,0x0000dff3,0x5400ffe8,0x0dff54ff,
    0xfff88000,0x4ffa8003,0xfffff900,0x7413feeb,0xa80ffaff,0x0bff75ff,
    0x017fee00,0x880fffec,0x40005fff,0xfff32ffe,0x0dff5000,0x002ffdc0,
    0x0001ffe6,0x0000dff3,0x5400ffe8,0x0dff54ff,0x4ffd8000,0x09ff5000,
    0xafffff40,0xff904ffb,0x3fea0bfd,0x000bff75,0x44017fee,0xfe80efff,
    0x740000ef,0x0fff32ff,0x00dff500,0x2002ffdc,0x40007ff9,0x00006ff9,
    0x2a007ff4,0x0dff54ff,0x7ffd4000,0xeeeeeeee,0xff50eeee,0x7ffcc009,
    0x209ff75f,0x503ffff9,0x3ffeebff,0xeeeeeeee,0xbff74eee,0x2fffd400,
    0x3bbbffea,0xeeeeeeee,0xffd5eeee,0x001ffe65,0xb801bfea,0x7cc005ff,
    0x7cc0007f,0xeeeeeeff,0xeeeeeeee,0x400ffe85,0xdff54ffa,0x7fec0000,
    0xffffffff,0xf50fffff,0xffc8009f,0x409ff75f,0xf500fffe,0x3fffeebf,
    0xffffffff,0x0bff75ff,0x23fffd80,0xfffffffa,0xffffffff,0x5ffd7fff,
    0x2001ffe6,0x2e006ffa,0x7cc005ff,0x7cc0007f,0xffffffff,0xffffffff,
    0x400ffe86,0xdff54ffa,0x7ff40000,0xffffffff,0xf50fffff,0xffd0009f,
    0xb813feeb,0x3fea05ff,0xffffff75,0xffffffff,0x0017feeb,0x2a3fffd1,
    0xffffffff,0xffffffff,0x25ffd7ff,0xa8007ff9,0x3ee006ff,0x7fcc005f,
    0x7fcc0007,0xffffffff,0x6fffffff,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x2aaaaaa2,
    0x20019aaa,0xaaaaaaa8,0x0099aaaa,0x54c00000,0xaaaaaaaa,0x54c00001,
    0x2000002a,0x2ea002a9,0x6401acdc,0x000001cc,0x00000000,0x00000000,
    0x5400ccb8,0xffffa9cc,0xffffffff,0x7ffd402e,0xffffffff,0x5404efff,
    0xffffffff,0x2fffffff,0xfffffff7,0x03bdffff,0x0ffff800,0xff880000,
    0xfffe9807,0xf00dffff,0x765c05ff,0x26003cef,0x2ceffedb,0xeffec980,
    0x3ae6003c,0x71002def,0x4079dfdb,0x7dc00ffe,0xfffffabf,0xffffffff,
    0xfff503ff,0xffffffff,0x40bfffff,0xfffffffa,0xffffffff,0xffffff72,
    0xffffffff,0x3fea0005,0x800003ff,0x7d407ffd,0xffedffff,0x2fff82ff,
    0xfffffe98,0x7e400eff,0xffffffff,0xffffb00d,0x401dffff,0xfffffffb,
    0x3fee00ef,0x1effffff,0x5c00ffe8,0xcfffabff,0xeccccccc,0xfa83ffff,
    0xaaaaaaff,0xfffecaaa,0xeeee980e,0xeeeeeeee,0xdff71fff,0xb9999999,
    0x0007ffff,0x00dffdfb,0x7fffb800,0x2bbffe20,0x03fffa60,0xffa85ddb,
    0xffecbcef,0xdfffd01f,0xbfffd979,0x79dfff90,0x901ffffb,0xfb79dfff,
    0xff701dff,0xffd979df,0x00ffe85f,0x7fd5ffdc,0xfffd3006,0x006ffa81,
    0x0017ffdc,0xf717ff40,0xffb100bf,0xcff8800f,0x00002ffc,0x40fffff1,
    0x7f406ffd,0xfff1005f,0x21bff207,0xf700effa,0x7ffc43ff,0x43ffe880,
    0xe883fff9,0x7ffcc4ff,0x41fffb03,0x7dc00ffe,0x006ffabf,0x3ea2fff4,
    0xffd8006f,0x7fe40004,0x002ffdc4,0x5c003fff,0x05ff9aff,0xffdfd000,
    0x00fffc0f,0x6401bfe6,0x7fe404ff,0x2017ff43,0x3fea2fff,0xb1bfea04,
    0x7fd409ff,0x201fff47,0x3ffa4ffd,0x55ffdc00,0x7c4006ff,0x1bfea3ff,
    0x01bfea00,0xb86ff980,0x3f6005ff,0x9ffa004f,0x40000ffe,0x07ff9ffc,
    0x3e00dff3,0x7fc400ff,0x47ffa807,0xffc805cb,0x3017fea3,0x801fff01,
    0xdff30ded,0x21fff100,0x7dc00ffe,0x006ffabf,0x3ea6ffc8,0xff98006f,
    0xffd0000f,0x00bff703,0x9801ffe4,0x0fff25ff,0xf4ff9800,0x0aea20ff,
    0x5403ffc0,0xfff005ff,0x3ff20001,0x077ffe23,0x005ff880,0x2007ff70,
    0x1ffd1ffd,0xfabffb80,0xff88006f,0x001bfea7,0x4001ffee,0xff704ffc,
    0x0fff400b,0x262ffd80,0xd10007ff,0x003ffcdf,0x805ff980,0xcccceffb,
    0xffeccccc,0xfdba9801,0x7fe43fff,0x200bdfff,0x90004ffa,0x3f2005ff,
    0x801ffd2f,0x6ffabffb,0x23ffd000,0x44006ffa,0x98005ffe,0xff700fff,
    0x1ffea00b,0x207ffc40,0xc8002ffe,0x01ffe1ff,0x0fffa200,0x3fffff20,
    0xffffffff,0xfed982ff,0xffffffff,0xfffffc83,0xffb83eff,0x3ffb0003,
    0x753fee00,0x7fdc00ff,0x0006ffab,0x3fea5ffb,0x3ffa6006,0xffe8001f,
    0x277fee03,0xda999999,0xf7000eff,0x0bff709f,0x7c3ffa80,0xfe80007f,
    0xffd800ef,0xffffffff,0x6c3fffff,0xdfffffff,0x9303ffcb,0xdfffffff,
    0x001ffe41,0x7001ffe8,0x03ffa9ff,0xff57ff90,0x3ff2000d,0x999fff53,
    0xffdb9999,0x30007fff,0x7dc01fff,0xffffffff,0x000effff,0x3e207ffa,
    0xff1000ff,0x000fff0b,0x001fffd8,0x80007ff9,0x09bdfffd,0x4c01ffdc,
    0x27ffffdb,0xb0003ffb,0x3f2005ff,0x801ffd3f,0x6ffabffd,0x2bff9000,
    0xfffffffa,0xffffffff,0xff90002f,0xffffb809,0xffffffff,0xff3000ef,
    0x027fec0d,0xff80ffd8,0xffb10007,0x7fdc003f,0x3fea0004,0x1ffec01f,
    0x97ffdc00,0xa8804ffa,0x007ff709,0x7fecfff6,0x55fff401,0xfb0006ff,
    0x3fffea9f,0xffffffff,0x10000ace,0xfb803fff,0xeeeeeeff,0x03fffffe,
    0x2a03ffc8,0xffb807ff,0x000fff02,0x0007fff6,0x2e00dff3,0x09ff70ac,
    0x5d47ffd0,0xa7fec00c,0xfb806ff9,0x00bff53f,0x7fec7ffe,0x2fffe603,
    0xd0006ffa,0x3bfea7ff,0xfda99999,0x5c0002ef,0xffb806ff,0xfffc8805,
    0x007ffc05,0xf980bffe,0x01ffe05f,0x007ffea0,0x7ffc1555,0x87ffdc02,
    0x7cc03ffd,0x13ff64ff,0x7f47ff90,0x8fff402f,0x5c01fff8,0x3ffee6ff,
    0xbffff880,0xf0006ffa,0x1bfea5ff,0x007fff90,0x4017ff40,0x2a005ffb,
    0xff500fff,0xffffffff,0x740bffff,0x1ffe00ff,0x00bff600,0xffa8bffe,
    0x9fff101f,0xf303ffe4,0x7fd49fff,0x1fff100f,0xb8077fd4,0x77fdc6ff,
    0x45fff300,0xa9befff8,0xabffeffc,0xf88006ff,0x0dff51ff,0x005fff90,
    0x200fff30,0x74005ffb,0xfffb02ff,0xffffffff,0xf703ffff,0x999999df,
    0x1999fff9,0x200ffd00,0x7ff42fff,0xffca89cf,0x3ffe60ef,0xffba88ad,
    0x7ff44fff,0xfeca8adf,0xbfffd86f,0x0fffeb89,0x89bfffe8,0xb83fffc9,
    0xffffffff,0xffabff9c,0xfffa8006,0x200dff50,0x4001fffe,0xf7004ffc,
    0xffc800bf,0xccfff885,0xcccccccc,0xffc84ffe,0xffffffff,0x01ffffff,
    0xff006ff8,0xfffd885f,0x0fffffff,0xffffffc8,0x6ff8cfff,0x7fffffc4,
    0xb105ffff,0xffffffff,0x3ff6205f,0x3fffffff,0x3ffffa60,0xf57ff33e,
    0xffd000df,0x8037fd4b,0x000efff8,0x5c007ffe,0x7e4005ff,0x05ffb85f,
    0x321ffee0,0xffffffff,0xffffffff,0x02ffc401,0x3aa05f50,0x03ffffff,
    0x7fffff54,0x107ff61d,0xdffffff7,0xfffd5007,0xd7001bff,0x059dffff,
    0x2a0054c0,0x7dc006ff,0x1bfea1ff,0x04fffb80,0x400fff10,0x74005ffb,
    0x2ffe83ff,0x0bffe200,0x33333331,0x33fff333,0x64000003,0x09a9800f,
    0x00d4c400,0x006a6600,0x0001a980,0x000002a6,0x400dff50,0x7d45fff9,
    0x7fec006f,0x6ffa801f,0x017fee00,0x4c1fffa8,0xfc8007ff,0x3fe0006f,
    0x88000007,0x0000006e,0x00000000,0x00000000,0x6ffa8000,0x7ffeccc0,
    0x037fd40f,0x01bffe20,0xb8017ff2,0xfb8805ff,0x4ffc86ff,0x1fff9800,
    0x00fff000,0xd002aa88,0x0000003f,0x00000000,0x00000000,0xfff50000,
    0xfffddddd,0x501fffff,0xf7000dff,0xffd807ff,0x3ffee003,0xffeeeeee,
    0xf80fffff,0xfd0001ff,0x3fe0009f,0x3ffd4007,0x00000b80,0x00000000,
    0x00000000,0xf5000000,0xffffffff,0x019fffff,0x4001bfea,0x3a00fffe,
    0x3ee002ff,0xffffffff,0x81dfffff,0x20006ffa,0xf0007ffb,0xffa800ff,
    0x00000007,0x00000000,0x00000000,0xfa800000,0xffffffff,0x5400bcee,
    0xf30006ff,0x7ffc0bff,0x3ffee000,0xefffffff,0x3ff601cd,0x3fe20004,
    0x7ff8003f,0x03ffd400,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x66666654,0x3ccccccc,0xc980332e,
    0x0665403c,0x00000000,0x402ccc82,0x00004cca,0x9931ccc8,0x0732a005,
    0x3003dd50,0x33333333,0x03333333,0xaa8813ae,0x2e06aaa2,0x37fb2a3c,
    0x77edc40b,0xb13cb82d,0x932e17bf,0x02cefeca,0xfffffff9,0x4bffffff,
    0x3ee03ffc,0x9ffe00ff,0x00000cf8,0x2e7c9800,0xff101fff,0x3fee007f,
    0x89fffc02,0xffd007ff,0x05ffd801,0x7fffffc4,0xffffffff,0x409f907f,
    0x3ffe7ffb,0xff96fd83,0x261fffff,0x5fffffff,0xfffeb7ec,0x3f2ffb4f,
    0x85ffffff,0xeeeeeeeb,0x23fffdee,0x3fa05ff9,0x9ff302ff,0x00efffc4,
    0x7ed40000,0x837fec7f,0x2e005ffd,0x7ffc02ff,0x300bff63,0xff980dff,
    0x3fe200ff,0xffffffff,0x707fffff,0x3fee087f,0x360fffe7,0xfceffdff,
    0xfff9dfff,0x22ffffdd,0xffffdefd,0xff9ffb1f,0x9ffffbbf,0x17ff6000,
    0x7fc41ffe,0x5ff704ff,0x77ffffc4,0x5c400003,0x446ffffe,0x7fdc3fff,
    0x3fee000e,0x51776c02,0xffc80bff,0x7fffe402,0x66666404,0xcccccccc,
    0x519f54cc,0x5c7d717f,0x0fffe7ff,0x503ffff6,0x819fffff,0x3ff66ffd,
    0x363a8aef,0x640befff,0x6c000fff,0x5ff906ff,0x0dfdff50,0x7f541ffa,
    0x000cffff,0x3ffff260,0xfff502df,0x007ffe61,0x0005ff70,0xff007ffc,
    0x67fc401f,0x00000ffd,0x7f7ffec0,0x3ea6fffe,0x20fffa7f,0xfb01fffd,
    0x3fe207ff,0x807fff67,0x3a01fffd,0x3ee002ff,0x9ff500ff,0x1ff9df90,
    0x4c05ff88,0x2dfffffc,0x3fffaa00,0xfc800cff,0x007ffd5f,0x0005ff70,
    0xfa817fe4,0x4ffdc04f,0x00003ff9,0x7ff6dcc0,0x3e61bdff,0x20bff66f,
    0x3ee05ffd,0x87ffc07f,0x7ec05ffd,0x1ffe404f,0x01fffa80,0x67f437fc,
    0x7fd42ffa,0xffd71002,0x91017dff,0x05dfffff,0xfeffe880,0xff70005f,
    0x7fcc0005,0x803ffb05,0x01bfa6ff,0xff980000,0x49ff102f,0xffd80ffc,
    0x01bfea03,0x3ff61ffd,0x01ffec03,0x2600ffee,0xfd802fff,0x22bfe20f,
    0x07fec4ff,0x7ffecc00,0x3fff64ff,0x20001cff,0x00fffff9,0x6d555554,
    0xaaaaacff,0x81ffd002,0x7dc06ff8,0x00bfee2f,0x3fe60000,0x7ff02ffa,
    0xffd83fd4,0x017fe602,0x3ff61ffd,0x017fec02,0xf3013fea,0x3ee007ff,
    0x743fea2f,0x002ffc6f,0x5fffae20,0x00befff8,0x5fff9000,0xfffff880,
    0xffffffff,0xff7007ff,0x403ffa87,0x2ffc47fe,0x77777744,0xeeeeeeee,
    0x653fe25e,0x22fd81ff,0x3ffb06f9,0x202ffcc0,0x3ffb0ffe,0x401ffd80,
    0x3a204ffa,0x3e2004ff,0xfc9bf65f,0x007ff30f,0x7fffc880,0x017dfff1,
    0x3fff6000,0x7fffc405,0xffffffff,0xf1007fff,0x00ffd8df,0x3f213fe6,
    0x7fffc41f,0xffffffff,0x3fa67fff,0x0620bfa0,0x0ffec026,0xe80bff30,
    0x03ffb0ff,0x5401ffd8,0x3ffa04ff,0x27fe8005,0x4bfea4ff,0x50000ffc,
    0x49fffffb,0x1cfffffc,0x3ffee000,0x555403ff,0xacffdaaa,0x2002aaaa,
    0xbff11ffd,0x981ffd80,0x7ffc45ff,0xffffffff,0x0c47ffff,0xd8000026,
    0x3fe601ff,0xd87ff405,0x7fec01ff,0x827fd401,0x8000effd,0x2ff99ffb,
    0x06feaffc,0x7fff5c40,0xfd7102ef,0x8005dfff,0xfffafff8,0x2ffb8001,
    0x3ffa8000,0x7c405ff7,0x03ffa05f,0x40000000,0x2aaa2aa9,0x201ffd80,
    0x7f405ff9,0x803ffb0f,0x7d401ffd,0x0fffc84f,0x77ff3000,0x9ffd81ff,
    0xf93003ff,0x003bffff,0x7ffffed4,0x3ffe800c,0x7000dff7,0x200005ff,
    0x01ffd6ff,0xf5017fe4,0x0000007f,0xf9bfee00,0x1ffd82ff,0xd017fe60,
    0x07ff61ff,0xa803ffb0,0x7ffdc4ff,0x77f40001,0xdffb86fd,0x7f5400ff,
    0x000cffff,0x3ffff260,0xdff902df,0x4004ffe8,0x00002ffb,0x09ff5ff9,
    0xcc804cc8,0x00000003,0x7fcdff70,0x01ffd82f,0xfd017fe6,0x007ff61f,
    0xfa803ffb,0x0bffea4f,0x3fff2000,0xffff984f,0x3fffe206,0x400002ef,
    0x6ffffeb8,0x260fffcc,0x2e001fff,0x555402ff,0x3fffe601,0x0000001f,
    0x20000000,0x3ffe6ffb,0x201ffd82,0x7f405ff9,0x803ffb0f,0x7d401ffd,
    0x5bfff34f,0x99999999,0x3fea0199,0xffff02ff,0x6fffc409,0xa8000001,
    0x3fa27ffd,0x1dff903f,0x00bfee00,0xfe807fff,0x000006ff,0x00000000,
    0x3ea37fdc,0x201ffd82,0x7f405ff9,0x803ffb0f,0x7d401ffd,0xfffff54f,
    0xffffffff,0x7ffc03ff,0x3fffb00f,0x00067c40,0x3e440000,0xfe80dff9,
    0x5ff7004f,0x403fff80,0x0003fffb,0x00000000,0x22ffd400,0x1ffd80fc,
    0xd017fe60,0x07ff61ff,0xa803ffb0,0xffff54ff,0xffffffff,0x7ec03fff,
    0x1ffee06f,0x00000000,0x1fffa840,0x017ffcc0,0x0fffe000,0x001fff10,
    0x00000000,0x4ff98000,0x7fec1ba2,0x017fe601,0x3ff61ffd,0x00ffec01,
    0x00013fea,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0xd17fc000,0x0000003f,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x40000000,0x0002e1fe,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00031000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,
};

static signed short stb__arial_38_usascii_x[95]={ 0,2,1,0,1,1,1,1,2,2,1,1,2,1,
3,0,1,3,0,1,0,1,1,1,1,1,3,2,1,1,1,1,1,-1,2,1,2,2,2,1,2,3,0,2,
2,2,2,1,2,1,2,1,0,2,0,0,0,0,0,2,0,0,0,-1,1,1,2,1,1,1,0,1,2,2,
-2,2,2,2,2,1,2,1,2,1,0,2,0,0,0,0,0,0,3,0,1, };
static signed short stb__arial_38_usascii_y[95]={ 30,5,5,5,3,5,5,5,5,5,5,9,26,19,
26,5,5,5,5,5,5,5,5,5,5,5,12,12,9,12,9,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,34,5,11,5,11,5,11,5,11,5,5,
5,5,5,11,11,11,11,11,11,11,6,12,12,12,12,12,12,5,5,5,15, };
static unsigned short stb__arial_38_usascii_w[95]={ 0,5,10,19,17,28,21,4,9,9,12,17,5,10,
4,10,17,10,18,17,18,17,17,17,17,17,4,5,17,17,17,17,33,24,19,23,21,19,18,24,20,4,15,21,
16,24,20,24,20,25,23,20,21,20,23,32,23,23,20,7,10,8,16,21,7,17,16,16,16,17,11,16,15,4,
8,15,4,25,15,17,16,16,10,15,10,15,17,25,17,17,17,11,3,11,18, };
static unsigned short stb__arial_38_usascii_h[95]={ 0,25,10,26,31,26,26,10,33,33,11,18,9,4,
4,26,26,25,25,26,25,26,26,25,26,26,18,23,18,12,18,25,33,25,25,26,25,25,25,26,25,25,26,25,
25,25,25,26,25,27,25,26,25,26,25,25,25,25,25,32,26,32,14,3,6,20,26,20,26,20,25,27,25,25,
33,25,25,19,19,20,26,26,19,20,25,19,18,18,18,26,18,33,33,33,6, };
static unsigned short stb__arial_38_usascii_s[95]={ 252,249,241,83,109,103,132,241,39,1,228,
152,246,202,197,172,65,6,38,41,110,218,183,47,154,47,170,147,116,210,98,
129,58,85,65,1,1,232,213,1,168,163,25,120,103,78,57,222,17,144,23,
26,227,59,192,159,135,189,142,101,80,92,193,213,189,171,236,205,201,153,107,
127,91,247,49,119,1,1,38,222,205,188,27,189,216,240,175,72,134,170,54,
27,23,11,170, };
static unsigned short stb__arial_38_usascii_t[95]={ 1,62,141,35,1,35,35,152,1,1,141,
141,152,28,28,35,35,89,89,62,115,35,35,115,35,35,141,115,141,141,141,
115,1,115,115,62,115,89,89,35,89,89,62,89,89,89,89,1,89,1,115,
35,62,62,62,62,62,89,89,1,62,1,141,28,28,115,35,115,35,115,62,
1,62,1,1,62,89,141,141,115,1,1,141,115,62,115,141,141,141,1,141,
1,1,1,28, };
static unsigned short stb__arial_38_usascii_a[95]={ 151,151,193,303,303,484,363,104,
181,181,212,318,151,181,151,151,303,303,303,303,303,303,303,303,
303,303,151,151,318,318,318,303,552,363,363,393,393,363,332,423,
393,151,272,363,303,453,393,423,363,423,393,363,332,393,363,514,
363,363,332,151,151,151,255,303,181,303,303,272,303,303,151,303,
303,121,121,272,121,453,303,303,303,303,181,272,151,303,272,393,
272,272,272,182,141,182,318, };

// Call this function with
//    font: NULL or array length
//    data: NULL or specified size
//    height: STB_FONT_arial_38_usascii_BITMAP_HEIGHT or STB_FONT_arial_38_usascii_BITMAP_HEIGHT_POW2
//    return value: spacing between lines
static void stb_font_arial_38_usascii(stb_fontchar font[STB_FONT_arial_38_usascii_NUM_CHARS],
                unsigned char data[STB_FONT_arial_38_usascii_BITMAP_HEIGHT][STB_FONT_arial_38_usascii_BITMAP_WIDTH],
                int height)
{
    int i,j;
    if (data != 0) {
        unsigned int *bits = stb__arial_38_usascii_pixels;
        unsigned int bitpack = *bits++, numbits = 32;
        for (i=0; i < STB_FONT_arial_38_usascii_BITMAP_WIDTH*height; ++i)
            data[0][i] = 0;  // zero entire bitmap
        for (j=1; j < STB_FONT_arial_38_usascii_BITMAP_HEIGHT-1; ++j) {
            for (i=1; i < STB_FONT_arial_38_usascii_BITMAP_WIDTH-1; ++i) {
                unsigned int value;
                if (numbits==0) bitpack = *bits++, numbits=32;
                value = bitpack & 1;
                bitpack >>= 1, --numbits;
                if (value) {
                    if (numbits < 3) bitpack = *bits++, numbits = 32;
                    data[j][i] = (bitpack & 7) * 0x20 + 0x1f;
                    bitpack >>= 3, numbits -= 3;
                } else {
                    data[j][i] = 0;
                }
            }
        }
    }

    // build font description
    if (font != 0) {
        float recip_width = 1.0f / STB_FONT_arial_38_usascii_BITMAP_WIDTH;
        float recip_height = 1.0f / height;
        for (i=0; i < STB_FONT_arial_38_usascii_NUM_CHARS; ++i) {
            // pad characters so they bilerp from empty space around each character
            font[i].s0 = (stb__arial_38_usascii_s[i]) * recip_width;
            font[i].t0 = (stb__arial_38_usascii_t[i]) * recip_height;
            font[i].s1 = (stb__arial_38_usascii_s[i] + stb__arial_38_usascii_w[i]) * recip_width;
            font[i].t1 = (stb__arial_38_usascii_t[i] + stb__arial_38_usascii_h[i]) * recip_height;
            font[i].x0 = stb__arial_38_usascii_x[i];
            font[i].y0 = stb__arial_38_usascii_y[i];
            font[i].x1 = stb__arial_38_usascii_x[i] + stb__arial_38_usascii_w[i];
            font[i].y1 = stb__arial_38_usascii_y[i] + stb__arial_38_usascii_h[i];
            font[i].advance_int = (stb__arial_38_usascii_a[i]+8)>>4;
            font[i].s0f = (stb__arial_38_usascii_s[i] - 0.5f) * recip_width;
            font[i].t0f = (stb__arial_38_usascii_t[i] - 0.5f) * recip_height;
            font[i].s1f = (stb__arial_38_usascii_s[i] + stb__arial_38_usascii_w[i] + 0.5f) * recip_width;
            font[i].t1f = (stb__arial_38_usascii_t[i] + stb__arial_38_usascii_h[i] + 0.5f) * recip_height;
            font[i].x0f = stb__arial_38_usascii_x[i] - 0.5f;
            font[i].y0f = stb__arial_38_usascii_y[i] - 0.5f;
            font[i].x1f = stb__arial_38_usascii_x[i] + stb__arial_38_usascii_w[i] + 0.5f;
            font[i].y1f = stb__arial_38_usascii_y[i] + stb__arial_38_usascii_h[i] + 0.5f;
            font[i].advance = stb__arial_38_usascii_a[i]/16.0f;
        }
    }
}

#ifndef STB_SOMEFONT_CREATE
#define STB_SOMEFONT_CREATE              stb_font_arial_38_usascii
#define STB_SOMEFONT_BITMAP_WIDTH        STB_FONT_arial_38_usascii_BITMAP_WIDTH
#define STB_SOMEFONT_BITMAP_HEIGHT       STB_FONT_arial_38_usascii_BITMAP_HEIGHT
#define STB_SOMEFONT_BITMAP_HEIGHT_POW2  STB_FONT_arial_38_usascii_BITMAP_HEIGHT_POW2
#define STB_SOMEFONT_FIRST_CHAR          STB_FONT_arial_38_usascii_FIRST_CHAR
#define STB_SOMEFONT_NUM_CHARS           STB_FONT_arial_38_usascii_NUM_CHARS
#define STB_SOMEFONT_LINE_SPACING        STB_FONT_arial_38_usascii_LINE_SPACING
#endif

