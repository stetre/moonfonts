// Font generated by stb_font_inl_generator.c (4/1 bpp)
//
// Following instructions show how to use the only included font, whatever it is, in
// a generic way so you can replace it with any other font by changing the include.
// To use multiple fonts, replace STB_SOMEFONT_* below with STB_FONT_consolas_bold_20_latin1_*,
// and separately install each font. Note that the CREATE function call has a
// totally different name; it's just 'stb_font_consolas_bold_20_latin1'.
//
/* // Example usage:

static stb_fontchar fontdata[STB_SOMEFONT_NUM_CHARS];

static void init(void)
{
    // optionally replace both STB_SOMEFONT_BITMAP_HEIGHT with STB_SOMEFONT_BITMAP_HEIGHT_POW2
    static unsigned char fontpixels[STB_SOMEFONT_BITMAP_HEIGHT][STB_SOMEFONT_BITMAP_WIDTH];
    STB_SOMEFONT_CREATE(fontdata, fontpixels, STB_SOMEFONT_BITMAP_HEIGHT);
    ... create texture ...
    // for best results rendering 1:1 pixels texels, use nearest-neighbor sampling
    // if allowed to scale up, use bilerp
}

// This function positions characters on integer coordinates, and assumes 1:1 texels to pixels
// Appropriate if nearest-neighbor sampling is used
static void draw_string_integer(int x, int y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0, cd->t0); glVertex2i(x + cd->x0, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t0); glVertex2i(x + cd->x1, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t1); glVertex2i(x + cd->x1, y + cd->y1);
        glTexCoord2f(cd->s0, cd->t1); glVertex2i(x + cd->x0, y + cd->y1);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance_int;
    }
    glEnd();
}

// This function positions characters on float coordinates, and doesn't require 1:1 texels to pixels
// Appropriate if bilinear filtering is used
static void draw_string_float(float x, float y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0f, cd->t0f); glVertex2f(x + cd->x0f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t0f); glVertex2f(x + cd->x1f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t1f); glVertex2f(x + cd->x1f, y + cd->y1f);
        glTexCoord2f(cd->s0f, cd->t1f); glVertex2f(x + cd->x0f, y + cd->y1f);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance;
    }
    glEnd();
}
*/

#ifndef STB_FONTCHAR__TYPEDEF
#define STB_FONTCHAR__TYPEDEF
typedef struct
{
    // coordinates if using integer positioning
    float s0,t0,s1,t1;
    signed short x0,y0,x1,y1;
    int   advance_int;
    // coordinates if using floating positioning
    float s0f,t0f,s1f,t1f;
    float x0f,y0f,x1f,y1f;
    float advance;
} stb_fontchar;
#endif

#define STB_FONT_consolas_bold_20_latin1_BITMAP_WIDTH         256
#define STB_FONT_consolas_bold_20_latin1_BITMAP_HEIGHT        130
#define STB_FONT_consolas_bold_20_latin1_BITMAP_HEIGHT_POW2   256

#define STB_FONT_consolas_bold_20_latin1_FIRST_CHAR            32
#define STB_FONT_consolas_bold_20_latin1_NUM_CHARS            224

#define STB_FONT_consolas_bold_20_latin1_LINE_SPACING          13

static unsigned int stb__consolas_bold_20_latin1_pixels[]={
    0x813f29f9,0x40800002,0xf52fb801,0x8fbaa007,0x4ccc4018,0x06666609,
    0x0275c220,0x0ca80000,0x8000d54c,0x2a601aa9,0x021ba801,0xb000ba60,
    0x0035530b,0x9806aa60,0x2a14c01a,0x27e53f20,0xfd703fc8,0x3fe8805b,
    0x5fe807f5,0xff700dfb,0x503ffe85,0x7fcbffff,0xff700fff,0x10017f2d,
    0x32001bfb,0x02ffb80f,0x501ffd40,0x7ec05fff,0xb806edff,0x17e6001f,
    0x20017fdc,0x3ea03ffa,0x53fa02ff,0x653f26fc,0x41ffc84f,0x2ffeefe8,
    0x7cd7fe60,0x4c72602f,0x06f4c01c,0x4c17fedc,0x3fe5fecc,0xbff504cc,
    0x90017f27,0x36009d3d,0x00776607,0xd300eecc,0x3203d919,0x202ffd9a,
    0x203cfeca,0x202fffdb,0xb3001dd9,0x4674c03b,0x25fb01ec,0x653f25fb,
    0x41ffcc4f,0x01fe24fd,0x0ffdc3d9,0xb8000000,0xf2fdc05f,0x43fd801f,
    0x320025fc,0x54404eae,0x000000ee,0x40000000,0xffffffe8,0x7ffff440,
    0x0000006f,0x81020000,0xe89f94fc,0xb85fa85f,0xefd8002f,0x7f41ff20,
    0x3fa0ff94,0x2e037cc4,0xd003fe5f,0xeadfc83f,0x3b6203ff,0xfffb100d,
    0x3bf6e0ff,0x3bf6e00c,0x3bf6e00c,0x3bf6e00c,0xfbffd80c,0x7fe40cae,
    0x225fffaa,0x8774c1ee,0x774c1ee8,0xe983dd10,0x983dd10e,0xf94fc8ee,
    0x7407fd49,0x9f51131f,0x3fffffee,0xf317fc44,0x31ff985f,0x1ff985ff,
    0x3ee03fc4,0xff003fe5,0xfffefc83,0xddd303ff,0x3fbffa03,0x7fff447e,
    0x7f441eff,0x441effff,0x1efffffe,0x7fffff44,0x4f9ffc1e,0x3ee5ff10,
    0x3ff10ffd,0xff10ff98,0xf10ff983,0x10ff983f,0x8ff983ff,0x6c9f94fc,
    0xe8ef885f,0xf75fafff,0xb09fffff,0x645fe89f,0x322ff46f,0x407f886f,
    0x003fe5fb,0xdffc83ff,0x3f20dfd0,0xaffb83ff,0xbffc82f9,0x7e45ffd9,
    0x45ffd9bf,0xffd9bffc,0x6cdffe45,0x577fc5ff,0x21ff503f,0xf11ff8fd,
    0x10ff983f,0x0ff983ff,0xff983ff1,0xf983ff10,0x9f94fc8f,0x5fd41ffc,
    0x6f9ffdfc,0x3ee13f60,0xff07fd46,0x3e0ffa87,0x403ff03f,0x803fe5fb,
    0x77e40ff8,0x3a03fea0,0x6fd86fff,0x3ff883f5,0xff887fdc,0xf887fdc3,
    0x887fdc3f,0x07fdc3ff,0x019ffff9,0x75be2df7,0x983ff13f,0x83ff10ff,
    0x3ff10ff9,0xff10ff98,0xfc8ff983,0x3fe21314,0x8ff9fc81,0x3606f8fe,
    0x40ff984f,0x01ff53ff,0x03fea7ff,0x5c16ffe4,0x2a03fe5f,0x5fc85fec,
    0x3e20ffcc,0x7f40ffbf,0xffa81f74,0xfa97fcc0,0xa97fcc0f,0x97fcc0ff,
    0x7fcc0ffa,0x7ffffdc2,0x3fab7e43,0x07fe29fd,0x3fe21ff3,0xf887fcc1,
    0x887fcc1f,0x47fcc1ff,0x0ff304fc,0x7fdbe7f6,0x13f606f8,0x5bf20ffc,
    0x2df904fd,0x3f6204fd,0x3e5fb83f,0x05ffb80f,0x0ff98bf9,0x17fc77dc,
    0x5c3e5bf2,0x73ff887f,0x27ff10ff,0x3ff887fb,0x7ff10ff7,0x9ffffb10,
    0xd0fdb7dc,0x307fe27f,0x07fe21ff,0x3fe21ff3,0xf887fcc1,0x647fcc1f,
    0x01ff104f,0x3febf3fd,0x13f605f8,0xff307fe2,0x3e603ff3,0x3a01ff9f,
    0x5fb81adf,0x3ae603fe,0x5c5fc85f,0xfb4fd87f,0x6eaffa8b,0x9ff07fc8,
    0xa7fc1ff2,0x29ff07fc,0x09ff07fc,0xa9ffa7ba,0x3fe6f8ff,0xf983ff12,
    0x983ff10f,0x83ff10ff,0x3ff10ff9,0x4fc8ff98,0x417fc353,0xef8df9fe,
    0x13f604f9,0x3fa03fe6,0x77f406fe,0x03fe206f,0x03fe5fb8,0x5fc87f98,
    0x3fe17fe2,0xfff0ff71,0x3fdcfbdf,0x0ff73ff8,0x83fdcffe,0x20ff73ff,
    0x32bf03ff,0x3f3fe67f,0x3e21ff34,0x887fcc1f,0x87fcc1ff,0x7fcc1ff8,
    0xf983ff10,0x9f94fc8f,0x4ff427ec,0x1fdefcef,0x3ee13f60,0x07fff707,
    0x203fffb8,0x2fdc07f8,0x0ff801ff,0x7ff77fe4,0xf33fcc0f,0xfffc883f,
    0x107fee7f,0x07fee5ff,0x3fee5ff1,0xfb97fc41,0x897fc41f,0xffacf9ac,
    0x44ffff45,0x07fe25fe,0x3fe21ff3,0xf887fcc1,0x887fcc1f,0x47fcc1ff,
    0x5c9f94fc,0xfe8fd86f,0x6c05ffdf,0x104fd84f,0xf8801fff,0x1fe200ff,
    0x07fcbf70,0xff907fe0,0xf9019fff,0x09ff555d,0xff3077e6,0xf31ffa85,
    0x31ffa85f,0x1ffa85ff,0xffa85ff3,0xffffff11,0xfff881ff,0x7fc0fffe,
    0x3fe3fd42,0x3fe3fd42,0x3fe3fd42,0x4fcbfd42,0x17fcc9f9,0x5c6e2bf2,
    0x4c4fe802,0x9ff101ff,0x809ff100,0x2fdc07f8,0x1ff801ff,0x20046fe4,
    0xfffffffe,0x3a05f506,0x8bfd33ff,0xbfd33ffe,0xfd33ffe8,0xd33ffe8b,
    0x7ff644bf,0xff700bdf,0xbfd01bff,0x2ff45fd8,0x8bfd17f6,0x22ff45fd,
    0x329f95fd,0x50ffe44f,0x7fc000bf,0x4417fe23,0x6c400efd,0x37cc00ef,
    0x0ff97ee0,0x3f20ff40,0xabff8805,0xb80ffcaa,0xffff501f,0xffa81fff,
    0x540fffff,0x0fffffff,0x7fffffd4,0x001f700f,0xfa8035f9,0x40ffeeff,
    0xffeefffa,0x777ffd40,0x7ffd40ff,0x9f90ffee,0x3bf613f2,0x8310bfe0,
    0xd87fee0a,0x7ffdc0ff,0x3ffee01f,0x2fec401f,0x0ff97ee0,0xf906fec0,
    0x10df700b,0x01f907ff,0x06ffff4c,0x0dfffe98,0x1bfffd30,0x37fffa60,
    0x7c01f600,0x3ffea007,0xfff501ef,0x3fea03df,0xff501eff,0xa7e43dff,
    0x4fe884fc,0x3f73bfea,0x7fff7f43,0x2e07fee5,0x7dc00dff,0x7ff400df,
    0xffffa81f,0x03ffffe5,0x75dbffe6,0xd04fd804,0x400530bf,0x2000c001,
    0xa800c001,0x44000002,0x80062001,0x40620018,0x209f94fc,0x7fecc0e8,
    0x7ffe40cf,0x000f443e,0xced80000,0x9dddd500,0x80777774,0x00005ec8,
    0x00000000,0x00000000,0x00000000,0x00000000,0x3f29f900,0x00000004,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x53000000,0x400800a8,
    0x75005429,0x0d54c043,0x01aa9800,0x2ea006a6,0x06aa6021,0x206aa600,
    0x4c005429,0x035301aa,0x5302a14c,0x55300035,0x19dfb703,0x98007d70,
    0x301effed,0x01ddddb9,0x2a607d70,0x7e53fa01,0x07bfa606,0x06fca7f4,
    0x0ddbfffb,0x5000bfee,0x7fd407ff,0x3fff602f,0x5ff706ed,0x81ffd400,
    0x80df94fe,0xff503ffa,0x653fa05f,0x02ffb86f,0xb10ffea0,0x83dfffff,
    0xf3000ff9,0xb05ffdff,0x1fffffff,0xa81ff880,0x5fb02fff,0x9ed817ee,
    0x2e5fb05e,0xfb35905f,0x0eecc05f,0x201dd980,0x01ec8ce9,0x05ffb359,
    0x4c00eecc,0x4bf601dd,0x376605fb,0xd919d301,0x3ee5fb03,0x003bb305,
    0xff903bb3,0xd0bffb37,0x1bf6007f,0xffffc811,0x5c00ff8c,0xc8ce986f,
    0x4008101e,0x0205d8dd,0x00000001,0x00000000,0x40000000,0x00000040,
    0x00002040,0x21ffc400,0x37d41ffb,0x400ffd80,0xf8cfffff,0x01ff400f,
    0x677edc00,0x07ffe600,0x881eee98,0x80ee85ee,0x4c01eee9,0x74c01eee,
    0x774c01ee,0xdddd101e,0x17b25ddd,0xddd11f6c,0x7445dddd,0x22eeeeee,
    0xeeeeeee8,0x3bbbbaa2,0x3bbaa2ee,0x3aa2eeee,0x52eeeeee,0x2ff981ff,
    0xfc801ff8,0xfff303ff,0x01ff19ff,0x77543fcc,0x222eeeee,0x1efffffe,
    0xf9002a20,0xfff107ff,0xfc80ff87,0x7fe403ff,0x7ffe403f,0x1fffe403,
    0xffffff98,0xa85ff33f,0x3ffe61ff,0x3e63ffff,0x23ffffff,0xfffffff9,
    0x3ffffee3,0x3ffee3ff,0x3ee3ffff,0x73ffffff,0x07ff10ff,0xffa80bf9,
    0x7c41efff,0xff8cffff,0x2e13f600,0x3fffffff,0x3f66fff2,0x7ffec45f,
    0xfffd01ef,0x8dfff10d,0xfffe80ff,0x37fff406,0x01bfffa0,0x260dfffd,
    0x09999aff,0x8bfd1bf6,0x9999aff9,0x266bfe60,0x2bfe6099,0x26209999,
    0x2099dfd9,0x99dfd998,0x37f66620,0x20ff9099,0x0ff884ff,0x3f633fe0,
    0x7fff41ff,0x100ff8cf,0xb33101ff,0x3e2133bf,0x107fdc3f,0x3fffbbdf,
    0x0ffbff88,0xf17fffc4,0xfbff881f,0xf7ff100f,0x2ffe201f,0x7ff100ff,
    0x3ff301ff,0xf51ff980,0x01ff983f,0x2600ffcc,0x3f6001ff,0x805fd805,
    0x07fc85fd,0x13f607ff,0xff51ffc4,0xcffff88d,0xbf900ff8,0xf50bfb00,
    0x22ff981f,0x21ffc418,0x42ff8efb,0x3e6fcff8,0x7c77dc0f,0xf1df702f,
    0x23bee05f,0x1df702ff,0x3ff305ff,0x3fabfb00,0x401ff985,0x7cc01ff9,
    0x17f6001f,0x36017f60,0x41ffb85f,0xff302ff8,0xf70fff40,0xcfeb881f,
    0x5ff00ff8,0xf70bfb00,0x007ff10f,0xb4fd89fb,0xf9ff88bf,0xfd81ff1f,
    0x3f60bfb4,0x3f60bfb4,0x3f60bfb4,0xff30bfb4,0x9819999b,0x981ffbff,
    0x0ccccdff,0x33337fe6,0x337fe60c,0xbfb00ccc,0xb00bfb00,0x85ff30bf,
    0x3fa00ffa,0x19fff502,0xf1001ff7,0x00df501f,0x1ff217f6,0x3f6627fc,
    0x7fc4ffff,0xff88ff71,0x81ff5fd8,0x20ff71ff,0x20ff71ff,0x20ff71ff,
    0x30ff71ff,0x3fffffff,0x20bfffb0,0xfffffff9,0x3ffffe61,0x3ffe61ff,
    0xfb01ffff,0x00bfb00b,0x3ffa0bfb,0xb80bfd33,0x3ffea06f,0xf1005fff,
    0x007fd01f,0x1fee17f6,0xdff51ffc,0x7cc9fd99,0xf887fe67,0xff8ff98f,
    0xff99fe60,0xff33fcc1,0x3e67f983,0xf33fcc1f,0xabff983f,0xff980aaa,
    0x57ff301f,0x7fcc1555,0x260aaaab,0x0aaaabff,0xfb00bfb0,0x20bfb00b,
    0xeffffffa,0x00ffc400,0x01dfff91,0xf303fe20,0x17f6001f,0xff107fee,
    0x3f62fec5,0x2aabbf24,0x43fe24ff,0x320ffcfe,0x4ffaaaef,0x7d5577e4,
    0x5577e44f,0x77e44ffa,0x4c4ffaaa,0x3fa001ff,0x007fe605,0xf9803ff3,
    0x17f6001f,0x36017f60,0x3ffaa05f,0xbf9000df,0x00dff300,0x3f607fcc,
    0x217f6004,0x7fd42ff9,0xffa97fa1,0x3fffffa4,0x43fe26ff,0x3a0ffffa,
    0x6fffffff,0x7ffffff4,0x7ffff46f,0x7ff46fff,0x4c6fffff,0x3f6001ff,
    0x007fe605,0xf9803ff3,0x17f6001f,0x36017f60,0x05fc805f,0x4007fc40,
    0xf90a06fd,0x001ff88f,0x7ff417f6,0xfc8bfd33,0x14fffeef,0xf95557ff,
    0xe83fe21f,0x7ff10fff,0x21ff9555,0xcaaabff8,0x57ff10ff,0x221ff955,
    0xfcaaabff,0x007fe60f,0x3e605fd8,0x0ffcc01f,0x8007fe60,0x5fd805fd,
    0xb805fd80,0x801dabff,0x666f43fd,0xdf503ffd,0xfc87ffd9,0x82fec005,
    0xfffffffa,0x5fffec40,0x10df74fb,0x83fe27ff,0xdf70fffb,0x3ee7ff10,
    0xf73ff886,0x2e7ff10d,0x23ff886f,0xfffffff9,0x4c0bfb03,0x3fffffff,
    0x3fffffe6,0x3fffe63f,0x3fee3fff,0x2e3fffff,0x3fffffff,0x3fffffee,
    0x3fffa03f,0x47fa806f,0x04fffffe,0x0fffffa6,0x3ee00bfe,0x43ffffff,
    0x00dfffe9,0x04fd8062,0x83fe2bfd,0x9fb0fff8,0x27ed7fa0,0x09fb5fe8,
    0x827ed7fa,0x3ffe65fe,0xfb03ffff,0x7fffcc0b,0x3fe63fff,0x263fffff,
    0x3fffffff,0x3fffffee,0x3fffee3f,0x3fee3fff,0x403fffff,0x80003cca,
    0x22001998,0xf7000019,0x07ffffff,0x0000000c,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x10008000,
    0x887dfdb7,0x40ca9ded,0x27442eeb,0x01fd4bee,0x754009d9,0x01775c3e,
    0x83fa97dc,0x0298cfe9,0x02764002,0x7019dfd7,0xd50005dd,0x0276407d,
    0x5c008008,0xeb87f52f,0x332a002e,0x00000802,0xffffffb1,0xffffe985,
    0x7ffecc6f,0x3b7e61ff,0xfd03f60f,0x7e41bf6b,0xffb804fe,0x805ff502,
    0xf0dfb5fe,0x20dfffdd,0x77e406fc,0xfeffd84f,0x2ffa80ef,0x80bfee00,
    0x2204fefc,0x2ebf22fe,0xbfd03fff,0x3fea1bf6,0xffffe802,0x2013f206,
    0xdff885f9,0x7c1efffc,0x44b99bff,0x41efffff,0xf73f98fc,0x32639307,
    0x5d73ea81,0x2006f4c0,0x32601ed9,0x21303931,0xffd00cda,0x75cfaa01,
    0x7c47fea2,0x03db302f,0x5401bd30,0x2a05d73e,0x3fbf25ff,0xc983ffff,
    0x36603931,0x27bee01e,0xfff02ffa,0xb82fc880,0x703fe66f,0x237003ff,
    0x47dc1ffd,0x806f8cf9,0x08002000,0x00000400,0x04ea8008,0xf137dc00,
    0x2000805f,0xd8004000,0x437ff22f,0x000406fe,0x363fd801,0x107d703f,
    0x903ffffb,0x741ff89f,0xff91005f,0xedf98dff,0x3201fd9f,0xd900dffe,
    0x3b201bff,0x3b200dff,0x2fe40dff,0xffd893f6,0x90001eff,0xf94fd8bf,
    0x6c437ecb,0x441effff,0x81effffd,0x1effffd8,0x5077e400,0x7fec41ff,
    0xfd881eff,0x5fc81dff,0x88003ff1,0x0fffefff,0xffa8ffd4,0x44027fc0,
    0x1ffeeffe,0x1fd5f75c,0xffdbffb0,0xfedffd81,0x76ffec0f,0xdffd80ff,
    0x17f20ffe,0x6f7c49fb,0xff31fffd,0x17f20fff,0x657f29fb,0xdef880ef,
    0x3e21fffd,0x41fffdde,0xfffddef8,0x7e43fb01,0xf10ffcc5,0x43fffbbd,
    0xfffffff8,0x7fe7fcc1,0xfb0fee04,0x0bfff91d,0x85ffffff,0xfc803ff8,
    0x8813fe1f,0x83fea06f,0x83fea4fe,0x83fea4fe,0x07fd44fe,0x22fe49fd,
    0xf10624fd,0x3fffe67f,0xfd8bf907,0x0ffebf94,0x8ffe20c4,0x21ffc418,
    0x81ffc418,0x317f22fe,0x220c41ff,0x47ff63ff,0xffc86fea,0x227e403f,
    0xff3ff2ff,0x1cccdfb8,0xf803ff88,0xb037ec3f,0x227ec03f,0x713f66fb,
    0x2e27ecdf,0x2e27ec6f,0xfb17f26f,0x709fb009,0xb17f20ff,0x7fd7f29f,
    0x027ec005,0xfd8027ec,0x917ffe44,0x007fb8bf,0x21ffc9fb,0x3fea0ffc,
    0xc81990ef,0x263fe64f,0x361ff8cf,0x0bff003f,0x7dc2ff88,0x9b39f507,
    0xfffffe83,0x3fffa7ff,0x3fa7ffff,0x47ffffff,0xfffffffe,0x9fb17f27,
    0xfffffd98,0xf907fb84,0xbf94fd8b,0x2603bfee,0x44fffffd,0x4fffffd9,
    0xfffffd98,0x8bbbff64,0x17fe25fc,0x3fffff66,0xfa83ff34,0xff9ff11f,
    0x9f90ff1b,0x4fe47fcc,0x3fee1ff8,0x6c0bdeff,0x3fe600ff,0x7c43fdc2,
    0x20feff9e,0xcccccdff,0x33337fe4,0x337fe4cc,0x7fc4cccc,0x24cccccd,
    0x527ec5fc,0x9fd99dff,0x3f20ff70,0x5fca7ec5,0xff51bfee,0x549fd99d,
    0x4fecceff,0x76677fd4,0x207ff34f,0xfffeeffc,0x6677fd40,0x83ff34fe,
    0x2df71ff9,0xc87fdff9,0xbfcffc4f,0x3fe60ff9,0x546ffffe,0x44e61eff,
    0x437e43ff,0xf99fb9fc,0x3a013fa3,0x04fe804f,0xf9009fd0,0x3f64fe8b,
    0x7dc27ec5,0xfe8bf907,0xffa8bf94,0x9fb17f62,0x13f62fec,0x54fd8bfb,
    0x3ff203ff,0xfd80cfff,0xff8a7ec5,0xbf93fd44,0x6c27ffd4,0xa7f7f45f,
    0x21ff45fe,0x7fec1ffa,0x3fa6ffff,0xa89ff31e,0x9f11f74f,0x3200ffe4,
    0x7fe401ff,0x01ffc801,0xffd8bfe4,0xffa97fa4,0xf907fb84,0x653ff62f,
    0xd17fc45f,0xd27fd4bf,0x227fd4bf,0x53fea5fe,0xbf904ff9,0x25fe8011,
    0x3bfa4ffa,0x7dcbfd11,0x20bff60f,0x7ffcc5fd,0x3e61fffe,0x407fd42f,
    0x23efffeb,0xfffefffa,0xcf99ba20,0x3ffe22fc,0x3e23fede,0x23fedeff,
    0xfedefff8,0x6f7ffc43,0x3ffe63fe,0x3f24feff,0x84fffeef,0xfff307fb,
    0x3f29fdff,0x41ffddd5,0xfffeeffc,0x3fbbff24,0x77fe44ff,0x3f64fffe,
    0xbf90abdf,0x3bbff200,0x3fe64fff,0x220fffff,0xfffeefff,0x4c2fec0f,
    0xe80dffff,0x4ffdcdff,0x5403be60,0x640dffff,0x427fe41f,0x2fffffd8,
    0x7ffffec4,0x7fffec42,0xfffd882f,0x7ffe42ff,0x3f624fbb,0xd74fbbff,
    0x8bddffdd,0x4fbbfffc,0x3bffebf9,0x5fffec41,0x3ff624fb,0x6c44fbbf,
    0x24fbbfff,0x91ffffd8,0x3f6200bf,0x4c4fbbff,0x980dfffe,0xfeaefffe,
    0x7d437f46,0x7fe4401c,0x7dc02dff,0x00018803,0x00266002,0x26600266,
    0x80133000,0x20188009,0xfffffffc,0x22001306,0x10018801,0x800c4003,
    0x9d71edc9,0x20018800,0x01310018,0x3fb09d90,0xeb800000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x09d90000,0x298cfe98,0x4fe83fe4,0xdb00bbae,
    0x13ae000b,0xec800000,0x01f75403,0x201bce98,0x807f52fb,0x880edcb8,
    0x221defec,0x04eeeeee,0xbf92774c,0x3ba63fe8,0xb10eeeee,0xc807bffd,
    0x33fa604e,0xa8000298,0xfdf903ee,0x7ff77c09,0x217fcc6f,0x7fd41ff9,
    0x541bfa02,0x00bf904d,0x4eeffec8,0x2e04fd80,0x49f902ff,0xd05ffff9,
    0xd81bf6bf,0x440fffff,0x1fffffff,0xdffffff3,0x321ffcc0,0xf31ff45f,
    0x21ffffff,0x5ffffff9,0x209fdf90,0x46fffeef,0xff7004fc,0x75cfaa05,
    0x336a1302,0x7e45fe80,0x203db306,0x09fb06fe,0x744017f2,0x04ffeeff,
    0xbd304fd8,0x47ffe601,0x85ffeca8,0x203931c9,0x819acffd,0x9fd10efc,
    0x37eccccc,0xfc81dd88,0xff31ff45,0x54455555,0xa81ffb31,0x1305d73e,
    0xff98336a,0x06f4c01f,0x00400080,0x3ff83fea,0x417f6000,0x4bf904fd,
    0xd87ff200,0x04fd804f,0x03ffe200,0x0100ffec,0xd801ffa8,0x9027e44f,
    0x3f2000df,0xff31ff45,0x01ff3000,0x7c404000,0x800800ff,0x01dfffd8,
    0x03bfffb1,0x07fd4ffe,0x49fb17f2,0x3ffea5fd,0xf93fffff,0xf07ffd5b,
    0xc84fd87f,0x324ffffe,0x4427ec5f,0x0bfe600a,0x03bfffb1,0x3ee00bf9,
    0x405ff32f,0x3ffe66fc,0xe8bf907f,0x001fe63f,0xfff31bee,0x2ebf20ff,
    0x05443fff,0x3bfffb10,0xffffff10,0xffff883f,0x6fc81fff,0x8bf909fb,
    0xa97f64fd,0xffffffff,0xffffdf93,0x217fc47f,0x3ffa24fd,0x3f24ffee,
    0x80027ec5,0x3fe21ffb,0x741fffff,0x82deeddf,0x4ffeffe8,0xff337e40,
    0x17f20fff,0x7ffcc7fd,0xdcc80bde,0x7ffcc1ff,0xffdf907f,0x44003fff,
    0x1fffffff,0xfea8ffec,0xea8ffec6,0xf9ff986f,0x6c5fc81f,0x6c13f24f,
    0x1bff904f,0x1ff99bfa,0x3ff927ec,0x8bf927ec,0x326004fd,0x7fec5ffd,
    0xff8dfd51,0x83ffffff,0x00efffe8,0x7fb837e4,0x7fc4bf90,0x3ffffe63,
    0x3ffe20ef,0x1fee02ef,0x7c46ffe4,0x3ff6003f,0xff8dfd51,0xff07fe43,
    0xe80ffc87,0xbf906fef,0x13f24fd8,0xefc827ec,0x7c43fea0,0xff27f42f,
    0x3f24fd87,0x64c27ec5,0x067ffd41,0x1ff90ffe,0xfe98effc,0x7e77f447,
    0x1bf201ff,0x7fc83fdc,0x2209ffd1,0x5543ffc9,0xf702ffdb,0xd83bf20f,
    0x7ff00c4f,0xff30ffc8,0xf31ffa83,0x81ffa83f,0xf903fffb,0x3f24fd8b,
    0x3209fb04,0xd0ffcc5f,0x53ff62bf,0x27ec2ff8,0x84fd8bf9,0x1bea0fff,
    0x3ea0ffcc,0xf513fe1f,0x9877e41f,0x1bf205ff,0xffc83fdc,0x03ffefff,
    0x3f602ffc,0x320ff706,0xfd27ec5f,0xa83ff30d,0x83ff31ff,0x3ff31ff9,
    0xf881ff98,0x8bf900ff,0x413f24fd,0x8bf904fd,0x3fee0ff9,0xf34fffff,
    0x324fd83f,0x2227ec5f,0x1be62fff,0x3e60ffcc,0xf317fa1f,0x2e1ffc1f,
    0x417f607f,0xfff907fb,0x809ff37f,0x37e405fe,0xbf907fb8,0xfff34fd8,
    0x4c1ff983,0x89ff11ff,0x13fe27fa,0x3fe20ff5,0xfd17f204,0x82fec009,
    0x43fdc5fc,0x4fcbfffc,0x4fe85ff1,0x09fd17f2,0x44005ff5,0x23fd44ff,
    0x1ff61ffb,0x36fc8bfd,0xb827fcc3,0x839f907f,0x3ff22018,0x413fe602,
    0x8bf907fb,0x21bfa4fd,0x3fd44ff8,0x7f447bfa,0xe88f7f45,0x0efd885f,
    0x7ec5ff20,0x640baa4f,0x44bf907f,0x6c2605ff,0x6c57fa4f,0x45ff24ff,
    0xff884ffd,0xfe813660,0x88bfd11e,0x2fffefff,0x7f6f7fdc,0xffdff52f,
    0x41fee01f,0xefb804fc,0x3b25fffe,0x00efffee,0x17f20ff7,0x3a0189fb,
    0x8bfd11ef,0xfffffff9,0x7ffffcc0,0x3ffee0ff,0x7ffcc01f,0x3fe4feff,
    0xdbfff507,0x3fbbff27,0x9fb000ff,0x77ffffdc,0x3fffe64f,0x36624fef,
    0x817fec4f,0xfffffff9,0xefffd880,0xdffff701,0x77fff4c5,0x7ff775c1,
    0x017f25ee,0x0bbfffee,0x19fffff9,0xeffeeeb8,0xfb17f25e,0x7ffcc009,
    0xe980ffff,0xd300dfff,0xfb81bfff,0xff9000df,0x7ec9f77f,0x3ffff205,
    0x9ffffd53,0x227ec001,0x4fabfffc,0x7ddfffe4,0x2e0fffa4,0x3fa600ff,
    0x09800dff,0x18013100,0x3fffff20,0x013ae6ff,0x262004c4,0x7fffe401,
    0x17f26fff,0xe98009fb,0x4400dfff,0x00062001,0x0c009800,0x11009980,
    0x40fb2000,0x40130009,0x0022009a,0x000000c4,0x00000000,0x00000000,
    0x20000000,0x00000018,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x77edc000,0x04ee980c,0x09f33f98,
    0xfedb8800,0x7ff5c43e,0xdfb9105e,0x20f7447b,0x1b6a0ee9,0x3f6e13a2,
    0x10db503d,0x077fea9d,0x7ed409d1,0xdddd31ef,0xa809d70d,0x2051004e,
    0x7775c00a,0xdfd702ee,0x3baa0007,0x70177441,0x3a209dfb,0x81efffff,
    0x7e404fe9,0xdb10ff77,0xfe983dff,0x3e26ffff,0xb87fffff,0x27ffffff,
    0x7fcc1ff8,0xfb0fff50,0x7677ec41,0x1ffea0df,0x7dd4c3f6,0xfb807ec5,
    0xff31ffff,0x0bf90fff,0xf9806fb8,0x00ffc41f,0x07ffffff,0x0bfffffd,
    0x2ff413f2,0xffd81bf2,0x7e40efff,0x05ffd9bf,0x64405db1,0xffa85912,
    0x7fc2ffff,0x324b99bf,0x43988aff,0xb99aeff9,0xf307fe25,0x71fa221f,
    0x542fc87f,0x71fa224f,0x21feb87f,0x9ff103fb,0xf90ff700,0x006fb80b,
    0xfd997dfb,0x77f7d40b,0x97fd4099,0x09f900c8,0x7fc47fea,0x2a5ff702,
    0x0ffe24ff,0x00001ff7,0x21eff880,0x007fee19,0xdfd00bfd,0x41ff8801,
    0x13f40ff9,0x933f88df,0x7e81f93d,0x3f2e1be2,0x7cc0df16,0x87fb800f,
    0x3ee025fc,0xffff1006,0x7ec01fff,0x1bf206fb,0x3604fc80,0x7c0bf96f,
    0xa87fdc3f,0x17fcc0ff,0x20fffff3,0xa87ffff9,0x2ff401ff,0x3017fec0,
    0xff1005ff,0x740ff983,0x1f707f67,0x7f15dff3,0x307f67e8,0x07f6df55,
    0xf7007fa8,0xff7bf90f,0xf137dc7f,0x9cfe81df,0x3be207fd,0x13f606f9,
    0x9dfd9990,0xfbff8899,0x41ff301f,0xff71ffe9,0x7cc7ff10,0xff307fff,
    0x0ff90fff,0xf5009ff0,0xfa817fff,0x4555510f,0x7fcc1ff8,0x83fab640,
    0x4f85fb7c,0xb83fab64,0x83fa9cef,0xabffcaa8,0x90ff702a,0x3fffffff,
    0x0efe9bee,0x07fe3fc4,0x67fcdfdc,0x277f661c,0x7fffc099,0xfc87ffff,
    0x9fea04ff,0xf92ffffb,0x5c13fe0f,0x87fb807f,0x7fc407fc,0xffff7003,
    0xf73fdc7f,0x3fe21fff,0x8807fcc1,0x3fadd06f,0x6f882f40,0x260df100,
    0xffffffff,0xf90ff707,0x27ff11bf,0x01ffb6fb,0x02fe8df5,0xffff31fd,
    0x3ffffe65,0x6d5544ff,0xf882aadf,0x3fee00ff,0x3ffaffd8,0x0ffe0ff7,
    0x7dc03fdc,0x200ffa87,0x22003ff8,0xf73fffeb,0x3ff7261f,0xf983ff10,
    0x203fb00f,0x5f83fb6d,0x36003fb0,0xf955101f,0x2e05557f,0x20efc87f,
    0xf7df74fd,0xf1fe203f,0x26df301f,0xd910aaff,0x405999df,0xd99504fc,
    0xf50599df,0x3fe1dfff,0xf883ff72,0x00ff702f,0x3bfe0ff7,0x05ff8260,
    0x26dff500,0x87fcc1ff,0x7fcc1ff8,0x7974fa80,0x2dffbbe4,0x959f509f,
    0x5d3ea05b,0x00ff503c,0x17f21fee,0x3ffee9fb,0x4e7fc03f,0x5bf906fb,
    0x27ec0df9,0x2a09f900,0x2eefffee,0x223fff98,0x85ff31ff,0xff701ffa,
    0x2e0ff700,0x22ffffff,0xb0000ffe,0x313fe2df,0x217fc1ff,0x56f887fa,
    0xc9fd4bff,0x441fbaff,0x83fdbb6f,0x0bff56f8,0x7dc01fea,0x7ec5fc87,
    0x1dfbdf74,0x3ffffa20,0x7ffc40ef,0x3f606fff,0x00fae004,0xff1013f2,
    0x3a0ffa87,0x0bfd33ff,0x7dc03fdc,0x3fffa607,0x87bfea1e,0xff306e39,
    0x985ffe49,0xb17fa0ff,0xf13f90bf,0x40ee8bd9,0x41fc86e8,0x44fe41fb,
    0xff505ecf,0x321fee00,0xfba7ec5f,0xfb05ff8e,0x8bfd9dbd,0x6fcaadfa,
    0x00013f60,0xefffeea8,0x21dfb02e,0x7fd44fe8,0x200fffff,0x7fb807fb,
    0xc8077d40,0x26ffffff,0xffffffff,0x3ffffa20,0x3fea0fff,0x540ffeef,
    0x3df7f94f,0x7dd5f7cc,0x2e27d41f,0xfca7d45f,0x7fa81efb,0xf90ff700,
    0xdf74fd8b,0xff513fea,0x3a2ff983,0x3fffe62f,0xffffff34,0x77764dff,
    0x32a4eeee,0x02ccefec,0xdffdfff3,0xbfffd301,0xffddd701,0x7775cbdd,
    0xfc85eeff,0x7fff5402,0x3ffffa3e,0xfff901df,0xfff509ff,0x26e883df,
    0x4c4ffffe,0x440dfffd,0x8d77ec6e,0x3fffa6e8,0x207fa84f,0xeeffeeeb,
    0x4fd8bf95,0x17fe4df7,0xf10dc0e6,0x4ffff98f,0xfffffff3,0x7fffecdf,
    0x9f905fff,0x3fffa200,0x6401800d,0x6fffffff,0x3ffffff2,0x000ec86f,
    0x00133006,0x0c4004c4,0x17a03f90,0x20fe4030,0x3f94ffff,0x3fd417a0,
    0xffffff90,0xfb17f2df,0xffd1bee9,0x00000003,0x00000000,0x00000180,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x76c013ae,0xe981bcee,0xeeeeeeee,
    0x79dddd11,0x9bddd703,0xdddddb05,0x776c0bdd,0xe98175c3,0x3ae09db3,
    0xdddddd55,0x77f6445d,0x0ec97603,0x1bd913b2,0x4c01dd70,0xeec81eee,
    0xeec81bde,0xd95eeeee,0x754fb60b,0xd0f7541e,0x7774403d,0x3ba2eeee,
    0xfb3374c1,0x02fe45bf,0xfffffff8,0x66667cc4,0xff11fdcc,0xc89fffff,
    0x0effffff,0x3ffffffe,0x9fff506f,0x9f503fc8,0x3fa03ff2,0xffffff74,
    0x3fffea7f,0x74df05ff,0xff32fec7,0x0ffffa87,0x20ffff20,0x6ffffffd,
    0x7fffffec,0xa85ff36f,0xd17fe1ff,0x202ff8df,0xfffffff9,0xff50bfe3,
    0x87fddecc,0x0ceffffc,0xfea9bff8,0x3b63e63f,0x3e23f12d,0x3ffea9af,
    0x3f2677f2,0x3333325f,0xff885ffc,0x81fdc4ff,0x85ff54fa,0xb3311ff9,
    0x3e6133bf,0x41ffd99c,0xfb1fe5f8,0x3f62ff4b,0x3a00ffef,0xdfd86fff,
    0x2a2ffb99,0x5ffcaaaa,0x8bfd1bf6,0x3ff72ffa,0x3e602ff8,0x209999af,
    0x83fd42ff,0xfff91fd9,0xff83ffff,0x1f33ff43,0x3f17fd97,0xffd07fe2,
    0x1ff22fe4,0xf905ff30,0x3fb89f9b,0x27fc7f70,0x2fec1fee,0x917fcc08,
    0x9ff99dfb,0x7fe57f65,0x7fcd7540,0xff7ff100,0x7f44fd81,0x307ff405,
    0x07fea3ff,0x42ff5bfa,0x3fe602ff,0x2a17fc01,0x3fff627f,0x2e2bf91f,
    0x21ffc6ff,0x81f31ffa,0xff11f8fe,0xf91ffa83,0x200ffa8b,0x8ff986fd,
    0x9a7dc4fc,0x7ec7f72e,0xfd82fec6,0x25ff1005,0xfffffff8,0xf3bfb4ff,
    0x0ff9805f,0x5ff1df70,0x1ffc4fd8,0xfb05ff70,0x7d417fab,0xff81ffdf,
    0x007fe602,0x27fa85ff,0x323f92fd,0xc87fe45f,0xff32cdff,0xee883e65,
    0x83ff11f8,0x8bf92ff9,0x3fe607fc,0x9f93fe82,0x2bf94fa8,0x83fea2fb,
    0x0bfb02ff,0xf703fee0,0xbfb13e67,0xff300bfd,0x7ed3f601,0x7656fec5,
    0x13fe606f,0x0ffdffcc,0x209fffb0,0x3fe602ff,0x3e0ccccd,0x7fdcccdf,
    0x47ff33f6,0x87fd45fc,0xf15fffff,0x3e63e67f,0xf11f8aff,0x93ff883f,
    0x13fee2bf,0x6fb86fd8,0x29f513f2,0x445f97ff,0x01ff53ff,0x3e6017f6,
    0xf52fc84f,0x1ffffd87,0xf00ff980,0xfb1fee3f,0x409fffff,0x3f600efe,
    0x7fd405ff,0x405ff01f,0xfffffff9,0x3fffffe1,0x37fa67ff,0xd8bf91eb,
    0x2b3fea7f,0x3e65ff31,0x3f10bf88,0xff307fe2,0x3fffff25,0x0bfe605f,
    0x27e43ff1,0x3ffe77e6,0xafec1fca,0x17f605fc,0x988dfd10,0x1bfc9afd,
    0x01bfb7f6,0x3e603fe6,0xfd87fe67,0x85ffdbad,0x7cc01ffb,0x7ff401ff,
    0x405ff05f,0xaaaabff9,0x2aab3fe0,0x3f2007fc,0x43ffdaae,0x8ffd43ff,
    0x220c88f9,0xa83ff11f,0xddff91ff,0x86fd8059,0xfecccefc,0xf7bf32ce,
    0xb83f99f5,0x6c07fd7f,0x3bfa205f,0x7ffffe40,0x37f67fff,0x7cc04ff9,
    0xaaefc80f,0x13f64ffa,0x7fcc1ff9,0x80bfd004,0x81ffdffa,0x3fe602ff,
    0x2a17fc01,0x3ffffa7f,0xfffff96f,0xd87ff09f,0x3663e66f,0x7fc47e21,
    0xbf937ec1,0x41ffcc00,0xfffffffc,0xddbf14ff,0xf303f7fe,0x6c01ff7f,
    0x1dfd105f,0xd99ff950,0xcafec99f,0x3fe601ff,0xfffffe80,0x513f66ff,
    0x037f41ff,0xfe80bfb0,0x5ff0dff5,0x200ffcc0,0x73fd42ff,0x32799999,
    0xf00accef,0x5ffd717f,0x11fd47cc,0x227fe23f,0x3f22ffeb,0x41ff6005,
    0xfeaaaaa9,0x7fff11ad,0x3a03fff2,0x7ec06fff,0x99efe885,0xfb3fc199,
    0xff15fd81,0xffa9988d,0x57ff119a,0x361ff955,0xb9ffa64f,0x19999bff,
    0x7dc0bfb0,0xf87ff71f,0x07fe602f,0x7fa85ff0,0x4017f200,0x3fffffff,
    0x4cd4d7cc,0xfff11fa9,0xfc87ffff,0x07ff1005,0x7c44fc80,0x1fff51ff,
    0x709fff90,0x7fffffff,0x3ffffff6,0x0fd37c7f,0x27fd4bfb,0xfffffff7,
    0x3e21beef,0xfffffb3f,0x7fffc5ff,0xfb07ffff,0xd17fe20b,0x7fffc1ff,
    0xfff35fff,0x7fc7ffff,0x9003fd42,0x3ffe00bf,0xff981cef,0x1fffffff,
    0x39dffff1,0x3200bf90,0x7e4000ff,0x7fc6ff84,0x03fff307,0xfffffff7,
    0x3fffff67,0xf97e27ff,0x7ec5fd86,0xfffff71f,0x413f6fff,0xffffb5fe,
    0xffff839d,0xfb07ffff,0x507ff20b,0x7fffc9ff,0xfff35fff,0x7fc7ffff,
    0x0003fd42,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x44000000,0xeeeeeeee,0xddddd10e,0x3bbb23dd,
    0x3b2202cd,0x45ed83ef,0x17ba25ed,0x000403ba,0x80081001,0x04000008,
    0x22064400,0x0000000c,0x00000400,0x40326000,0xea7ec5fc,0x14df302f,
    0xfffff338,0x3e63ffff,0xb2ffffff,0x0bffffff,0xbffffff3,0xff30fff8,
    0x21fffc4f,0xfffb10ff,0x3fb203df,0x3ff620df,0x443ffdaf,0x885ffffd,
    0x441effed,0x801dfffd,0x77ec5fe8,0x209f9000,0xe8cfeafa,0x3eebf23f,
    0xdfd703ff,0xfb1ff307,0x37fc01bf,0xa7ec5fc8,0x2bf503fd,0x99fec5fb,
    0x199dfd99,0x2666bfe6,0xb73bfb09,0x9efe85ff,0x3fe2ffb8,0x44fff73f,
    0x87fc6fff,0xfffddef8,0x7f6ffec1,0xff9bf30f,0x3a23ffbf,0x545ecdef,
    0x22ffffff,0xfffffff8,0x07bfe601,0x9003ffd3,0x3fbea09f,0x90fffeff,
    0x3fffffdf,0x75d5f744,0x3fbfe60e,0x3fa04fff,0xfd8bf905,0x42629f94,
    0x1bff34fb,0xbfb01dfb,0xd807fe60,0x88ffe24f,0x8aff42ff,0xfddd5fef,
    0x8bfffe21,0xf88310ff,0xe83fea3f,0xafe4114f,0x03ff54fa,0x330f7fc4,
    0xfea8ffec,0x01bff506,0x900bffa2,0x23fea09f,0x92fd8ffc,0x7ff11bff,
    0x4f7fd764,0x4bffe64e,0x806207fb,0xba7ec5fc,0x3f29f95f,0x3ffffe62,
    0x260bfb00,0x13f601ff,0x0ffcc7ff,0x76fc5bf2,0x10fecf9f,0x7fcdf9ff,
    0xfb27ec00,0xf706fb89,0x7fd57e67,0x03ff501d,0x7fe43ff8,0x8027fe40,
    0x4ccc4ffc,0x2a199dfd,0x3f29f75f,0x7ec1df92,0xf1f35f14,0x3fe61f57,
    0x9983fe62,0x21999999,0x9a7ec5fc,0x3f6ffd6f,0x00fffcc1,0x3fe60bfb,
    0x3f61999a,0x20ffd99d,0xbfec5ff8,0x9fdfbdf8,0xf3ff10fe,0xd983fe3f,
    0x3a4fffff,0x7fffffff,0x3ffffb6a,0x3fffa5ff,0x01ff20be,0xffa83ff3,
    0x0013ff21,0x3fe69ff9,0x1fffffff,0x64fee9f5,0xfd8bf92f,0xdbf31f34,
    0x3fe63f11,0x7fffcc01,0xf91fffff,0xff14fd8b,0x1fd5fff3,0x205fffd8,
    0xfff305fd,0x7fecffff,0xfd81dfff,0x36fffeff,0x36fff39f,0xfb1ff11f,
    0x7fd43feb,0x3e4fecce,0x4cccccdf,0x9bfb9ff5,0xffeb8799,0x80ff90ef,
    0x7fcc1ff9,0x007ffa21,0xc8877fcc,0xcccefecc,0x4fee9f50,0xd8bf92fc,
    0x7f31f34f,0x7fcc7e2d,0x66664401,0xf90ccccc,0x3fe4fe8b,0x47fdfcfd,
    0x05ffaefd,0x3fe60bfb,0x3f66eeee,0x9104ffef,0x2dfdffff,0x369ff4f9,
    0xf31ff11f,0x3f61ff1f,0x9fd27ec5,0x7f72fd80,0x4fff2200,0x3e200ffb,
    0x443fd44f,0x7dc03ffd,0x13f200df,0x93fba7d4,0xfb17f25f,0xafbcdfc9,
    0x007fe67b,0x22ff9000,0x3ffa4ffd,0x7e4dfff7,0xb09ff30f,0x07fe60bf,
    0x5ff54fd8,0x2bfb0880,0x365f94fa,0x3a1ff12f,0xbfd0ffcf,0xff927fd4,
    0xfd97ec03,0x5ff30106,0x0983bfe6,0x7f447bfa,0x413ff205,0xfc804ffc,
    0x3ee9f504,0x17f25f93,0x95fd49fb,0x3fe62fc9,0x81fe4001,0xfefffff9,
    0x7e53ff64,0xb303625f,0x260bfb01,0x93f601ff,0xff1006fe,0xb0c53ea5,
    0x543fe25f,0xff90ffff,0x449fffdd,0x3fedefff,0xbfdfbdf7,0x33bee5b9,
    0x3f20ffed,0x262fffff,0x0fffffff,0x362ffdc0,0x9f9003ff,0x9fdd3ea0,
    0xd8bf92fc,0x7677dc4f,0x00ffcc3f,0xfc81ffe0,0x324fbbff,0x09ff51ff,
    0x305fd800,0x27ec03ff,0x54c05ff5,0x40fee6fe,0x41ff12fc,0xfb10fffe,
    0x889f77ff,0x12fffffd,0xffd35ffb,0x3fffea3f,0xffea81df,0x7ff4c1ef,
    0x5f5000df,0x26002fa8,0x2e9f501a,0x3f25f93f,0x5cc27ec5,0x1ff981bc,
    0x401f5c00,0x00000009,0x7cc17f60,0xf13f601f,0xffffb8bf,0x40fee0ef,
    0x41ff13fc,0x0c40fffb,0x04026600,0x099980cc,0x03100300,0x00000000,
    0x00000000,0x00000000,0x80000000,0x3ff305fd,0x3ee27ec0,0x37ffee1f,
    0xf903fb83,0xf883fe27,0x000000ff,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0xfb8bff30,0xfffff51f,
    0x41ff27ff,0x77f544fe,0x75400103,0x00010102,0x22f64400,0xa82efec8,
    0x40b6e00c,0x99999998,0x4ccc9d90,0xd9099999,0x1c993b29,0x75400544,
    0xbbbb882e,0xea975c0b,0x540bbae3,0x5554c02c,0xddddd1aa,0x2adddddd,
    0x2ffb805f,0x7fd47ff1,0xf33fffff,0x21ff985f,0x83ffdffa,0x8c5f71fd,
    0xa7d432fa,0x7ff546f9,0x3efeb81d,0x2e37ffdc,0x221fffff,0xfff307ff,
    0xfffff901,0xf97f69ff,0x4fffffff,0x457f6bfb,0xfff10fff,0x817fd401,
    0x40fffff8,0xa8dfb5fe,0x7ffec2ff,0x7fdcfee5,0xffff3fff,0x2fffffff,
    0xffb002fc,0x9988dfb1,0x7f46ff99,0x3fa37e45,0x6fa8df31,0x37e61ff3,
    0xf11fdafa,0xeb8ffa3f,0x7fdc7fec,0x33664ffd,0x5ff1186f,0x6c0fffc4,
    0xccb85faf,0xfb3ccccc,0x6666664b,0x329f94fe,0x23fff54f,0xb302fff9,
    0x9999801b,0x3931c981,0x3e63bb30,0xfe9dffbe,0x5bbbbb52,0x801b6000,
    0x00ffeff8,0x3ea07fec,0xff0ffe0f,0x47fe27f8,0x3ff663fe,0x3ea1dfff,
    0xf501ff36,0xff30ff8f,0x7e40df50,0x20ffdc0f,0x003fb3fa,0x2a013f20,
    0x3f29f94f,0x7c4dfd14,0x000000ff,0x9f700000,0x01bfffa2,0x50000000,
    0xfb807fff,0x2a7ff02f,0x98ff40ff,0x7dd3f66f,0x07fff705,0x72fe4ff6,
    0x3fc45ffd,0x0df503fe,0x3e607ff2,0xdf13740f,0xaaaaaa98,0x5009f91a,
    0x7dcfee9f,0x00544043,0x00000000,0x76441110,0x0000000c,0x1fffd400,
    0x6409ff30,0xf709fb6f,0x7d45ffbf,0x74c1ff16,0x21efefef,0x2fe88ff9,
    0xf87ffb6a,0xf50ff52f,0x981dfb0d,0x17dc3fe9,0xfffc8ff2,0x0024ffff,
    0x00810d44,0x00000000,0x00000000,0x20000000,0x81fffff8,0x7cc05ff8,
    0xd701ff9f,0x29fb05df,0x2afe66fb,0x3fa1fbaf,0x7fc09f93,0x3ffffee3,
    0x3ffffee2,0x9fffff94,0x0ee0fffe,0xbbba8ee2,0x0002bbbb,0x00000000,
    0x00000000,0x00000000,0xe8efd800,0x00ffe86f,0x006fefe8,0xfe8ffc40,
    0x2097d423,0x41ff35fb,0x40ffecdc,0x7541deda,0xdd73eeee,0x026a7ddd,
    0x00000000,0x00000000,0x00000000,0x00000000,0x47fee000,0x3fee4ff9,
    0xb83fffff,0xffd03fff,0x4550dfff,0x20393028,0xff906a0a,0x0000039b,
    0x00000000,0x00000000,0x00000000,0x00000000,0x4c000000,0x97fe43ff,
    0xfffffffb,0x00fff883,0x07999997,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
};

static signed short stb__consolas_bold_20_latin1_x[224]={ 0,3,2,0,0,0,0,4,2,2,1,0,2,2,
3,0,0,1,1,1,0,1,0,1,0,0,3,2,0,1,1,2,0,0,1,0,0,1,1,0,0,1,1,1,
1,0,0,0,1,0,1,0,0,0,0,0,0,0,1,2,1,2,0,0,0,1,1,1,0,0,0,0,1,1,
1,1,1,0,1,0,1,0,1,1,0,1,0,0,0,0,1,1,4,2,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,0,0,0,
4,0,0,0,2,1,0,2,0,0,1,1,2,2,0,1,0,3,4,2,1,1,0,0,0,1,0,0,0,0,
0,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,1,0,0,
0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,
 };
static signed short stb__consolas_bold_20_latin1_y[224]={ 14,0,0,1,-1,0,0,0,-1,-1,0,3,10,7,
10,0,1,1,1,1,1,1,1,1,1,1,3,3,3,5,3,0,-1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1,0,-1,1,16,0,3,0,3,0,3,0,3,0,-1,
-1,0,0,3,3,3,3,3,3,3,0,4,4,4,4,4,4,-1,-2,-1,6,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,14,3,-1,1,1,1,
-2,0,0,1,1,4,7,7,-1,0,-1,1,0,-1,0,4,0,6,14,0,1,4,0,0,0,3,-3,-3,-3,-3,
-3,-4,1,1,-3,-3,-3,-3,-3,-3,-3,-3,1,-3,-3,-3,-3,-3,-3,4,-1,-3,-3,-3,-3,-3,1,0,0,0,
0,0,0,-2,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,0,0,0,0,0,0,0,
 };
static unsigned short stb__consolas_bold_20_latin1_w[224]={ 0,5,7,11,11,11,12,3,7,7,9,11,6,7,
5,10,11,9,9,9,11,9,11,9,10,10,5,6,10,9,9,8,11,11,10,10,11,9,9,11,11,9,8,10,
9,11,11,11,10,12,10,10,11,11,11,11,11,11,9,7,10,6,11,11,7,9,10,9,10,10,11,11,9,9,
8,10,9,11,9,11,10,10,10,9,10,9,11,11,11,11,9,8,3,8,11,11,11,11,11,11,11,11,11,11,
11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,5,9,11,11,11,
3,11,9,11,7,9,10,7,11,9,9,9,7,7,11,10,11,5,3,7,9,9,11,11,11,8,11,11,11,11,
11,11,12,10,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,9,11,11,11,11,11,11,10,10,10,11,
10,10,10,10,11,9,10,11,10,10,10,11,10,10,11,10,11,11,11,11,11,11,11,10,11,10,10,11,10,11,
 };
static unsigned short stb__consolas_bold_20_latin1_h[224]={ 0,15,6,13,18,15,15,6,20,20,9,11,8,3,
5,17,14,13,13,14,13,14,14,13,14,13,12,15,12,7,12,15,20,13,13,14,13,13,13,14,13,13,14,13,
13,13,13,14,13,17,13,14,13,14,13,13,13,13,13,19,17,19,7,3,5,12,15,12,15,12,14,16,14,15,
20,14,14,11,11,12,15,15,11,12,15,11,10,10,10,15,10,19,21,19,5,13,13,13,13,13,13,13,13,13,
13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,0,15,18,13,13,13,
21,17,5,14,10,9,6,3,11,5,8,13,8,9,5,14,17,5,3,8,10,9,14,14,14,15,17,17,17,17,
17,18,13,16,17,17,17,17,17,17,17,17,13,17,18,18,18,18,18,10,18,18,18,18,18,17,13,15,15,15,
15,15,15,17,12,14,15,15,15,15,14,14,14,14,15,14,15,15,15,15,15,11,16,15,15,15,15,19,18,19,
 };
static unsigned short stb__consolas_bold_20_latin1_s[224]={ 103,60,153,125,184,48,236,138,9,38,55,
155,109,225,161,233,1,148,115,215,69,205,150,59,162,34,247,122,134,128,145,
129,17,158,170,57,36,225,13,79,235,105,173,137,215,45,57,13,48,185,23,
68,1,91,93,81,203,191,181,86,198,79,116,233,205,69,77,112,99,79,151,
13,173,127,29,183,163,167,179,122,202,88,201,102,66,224,23,234,1,37,13,
94,1,70,213,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,
24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,103,249,126,
219,194,241,5,209,195,115,247,45,142,225,189,185,83,231,101,75,173,194,221,
167,245,93,35,65,103,127,139,193,48,60,72,84,24,114,206,25,96,130,141,
119,163,174,244,152,12,36,136,148,160,172,1,246,196,208,220,232,244,107,1,
148,159,170,182,116,213,13,90,47,94,82,71,60,25,182,225,36,36,236,224,
1,13,25,138,212,1,49,110,137,105,58,103,46, };
static unsigned short stb__consolas_bold_20_latin1_t[224]={ 20,58,118,90,1,41,41,118,1,1,118,
104,118,118,118,23,75,90,90,58,90,58,58,90,58,104,58,58,104,118,104,
58,1,90,90,74,90,90,104,74,90,90,58,90,90,104,104,74,90,23,104,
74,104,74,90,90,90,90,90,1,23,1,118,118,118,104,58,104,58,104,74,
41,74,41,1,74,74,104,104,104,41,58,104,104,58,104,118,104,118,58,118,
1,1,1,118,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,
90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,20,41,1,
74,74,74,1,23,118,74,90,118,118,118,104,118,118,74,118,118,118,58,23,
118,118,118,118,118,74,74,74,41,23,23,23,23,23,1,74,41,23,23,23,
23,23,23,23,23,90,23,1,1,1,1,23,104,1,1,1,1,1,23,90,
41,41,41,41,41,41,23,104,74,41,41,41,41,74,58,58,74,41,58,41,
59,58,58,58,104,42,58,58,41,41,1,1,1, };
static unsigned short stb__consolas_bold_20_latin1_a[224]={ 176,176,176,176,176,176,176,176,
176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,
176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,
176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,
176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,
176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,
176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,
176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,
176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,
176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,
176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,
176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,
176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,
176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,
176,176,176,176,176,176,176,176, };

// Call this function with
//    font: NULL or array length
//    data: NULL or specified size
//    height: STB_FONT_consolas_bold_20_latin1_BITMAP_HEIGHT or STB_FONT_consolas_bold_20_latin1_BITMAP_HEIGHT_POW2
//    return value: spacing between lines
static void stb_font_consolas_bold_20_latin1(stb_fontchar font[STB_FONT_consolas_bold_20_latin1_NUM_CHARS],
                unsigned char data[STB_FONT_consolas_bold_20_latin1_BITMAP_HEIGHT][STB_FONT_consolas_bold_20_latin1_BITMAP_WIDTH],
                int height)
{
    int i,j;
    if (data != 0) {
        unsigned int *bits = stb__consolas_bold_20_latin1_pixels;
        unsigned int bitpack = *bits++, numbits = 32;
        for (i=0; i < STB_FONT_consolas_bold_20_latin1_BITMAP_WIDTH*height; ++i)
            data[0][i] = 0;  // zero entire bitmap
        for (j=1; j < STB_FONT_consolas_bold_20_latin1_BITMAP_HEIGHT-1; ++j) {
            for (i=1; i < STB_FONT_consolas_bold_20_latin1_BITMAP_WIDTH-1; ++i) {
                unsigned int value;
                if (numbits==0) bitpack = *bits++, numbits=32;
                value = bitpack & 1;
                bitpack >>= 1, --numbits;
                if (value) {
                    if (numbits < 3) bitpack = *bits++, numbits = 32;
                    data[j][i] = (bitpack & 7) * 0x20 + 0x1f;
                    bitpack >>= 3, numbits -= 3;
                } else {
                    data[j][i] = 0;
                }
            }
        }
    }

    // build font description
    if (font != 0) {
        float recip_width = 1.0f / STB_FONT_consolas_bold_20_latin1_BITMAP_WIDTH;
        float recip_height = 1.0f / height;
        for (i=0; i < STB_FONT_consolas_bold_20_latin1_NUM_CHARS; ++i) {
            // pad characters so they bilerp from empty space around each character
            font[i].s0 = (stb__consolas_bold_20_latin1_s[i]) * recip_width;
            font[i].t0 = (stb__consolas_bold_20_latin1_t[i]) * recip_height;
            font[i].s1 = (stb__consolas_bold_20_latin1_s[i] + stb__consolas_bold_20_latin1_w[i]) * recip_width;
            font[i].t1 = (stb__consolas_bold_20_latin1_t[i] + stb__consolas_bold_20_latin1_h[i]) * recip_height;
            font[i].x0 = stb__consolas_bold_20_latin1_x[i];
            font[i].y0 = stb__consolas_bold_20_latin1_y[i];
            font[i].x1 = stb__consolas_bold_20_latin1_x[i] + stb__consolas_bold_20_latin1_w[i];
            font[i].y1 = stb__consolas_bold_20_latin1_y[i] + stb__consolas_bold_20_latin1_h[i];
            font[i].advance_int = (stb__consolas_bold_20_latin1_a[i]+8)>>4;
            font[i].s0f = (stb__consolas_bold_20_latin1_s[i] - 0.5f) * recip_width;
            font[i].t0f = (stb__consolas_bold_20_latin1_t[i] - 0.5f) * recip_height;
            font[i].s1f = (stb__consolas_bold_20_latin1_s[i] + stb__consolas_bold_20_latin1_w[i] + 0.5f) * recip_width;
            font[i].t1f = (stb__consolas_bold_20_latin1_t[i] + stb__consolas_bold_20_latin1_h[i] + 0.5f) * recip_height;
            font[i].x0f = stb__consolas_bold_20_latin1_x[i] - 0.5f;
            font[i].y0f = stb__consolas_bold_20_latin1_y[i] - 0.5f;
            font[i].x1f = stb__consolas_bold_20_latin1_x[i] + stb__consolas_bold_20_latin1_w[i] + 0.5f;
            font[i].y1f = stb__consolas_bold_20_latin1_y[i] + stb__consolas_bold_20_latin1_h[i] + 0.5f;
            font[i].advance = stb__consolas_bold_20_latin1_a[i]/16.0f;
        }
    }
}

#ifndef STB_SOMEFONT_CREATE
#define STB_SOMEFONT_CREATE              stb_font_consolas_bold_20_latin1
#define STB_SOMEFONT_BITMAP_WIDTH        STB_FONT_consolas_bold_20_latin1_BITMAP_WIDTH
#define STB_SOMEFONT_BITMAP_HEIGHT       STB_FONT_consolas_bold_20_latin1_BITMAP_HEIGHT
#define STB_SOMEFONT_BITMAP_HEIGHT_POW2  STB_FONT_consolas_bold_20_latin1_BITMAP_HEIGHT_POW2
#define STB_SOMEFONT_FIRST_CHAR          STB_FONT_consolas_bold_20_latin1_FIRST_CHAR
#define STB_SOMEFONT_NUM_CHARS           STB_FONT_consolas_bold_20_latin1_NUM_CHARS
#define STB_SOMEFONT_LINE_SPACING        STB_FONT_consolas_bold_20_latin1_LINE_SPACING
#endif

