// Font generated by stb_font_inl_generator.c (4/1 bpp)
//
// Following instructions show how to use the only included font, whatever it is, in
// a generic way so you can replace it with any other font by changing the include.
// To use multiple fonts, replace STB_SOMEFONT_* below with STB_FONT_courier_bold_22_latin1_*,
// and separately install each font. Note that the CREATE function call has a
// totally different name; it's just 'stb_font_courier_bold_22_latin1'.
//
/* // Example usage:

static stb_fontchar fontdata[STB_SOMEFONT_NUM_CHARS];

static void init(void)
{
    // optionally replace both STB_SOMEFONT_BITMAP_HEIGHT with STB_SOMEFONT_BITMAP_HEIGHT_POW2
    static unsigned char fontpixels[STB_SOMEFONT_BITMAP_HEIGHT][STB_SOMEFONT_BITMAP_WIDTH];
    STB_SOMEFONT_CREATE(fontdata, fontpixels, STB_SOMEFONT_BITMAP_HEIGHT);
    ... create texture ...
    // for best results rendering 1:1 pixels texels, use nearest-neighbor sampling
    // if allowed to scale up, use bilerp
}

// This function positions characters on integer coordinates, and assumes 1:1 texels to pixels
// Appropriate if nearest-neighbor sampling is used
static void draw_string_integer(int x, int y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0, cd->t0); glVertex2i(x + cd->x0, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t0); glVertex2i(x + cd->x1, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t1); glVertex2i(x + cd->x1, y + cd->y1);
        glTexCoord2f(cd->s0, cd->t1); glVertex2i(x + cd->x0, y + cd->y1);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance_int;
    }
    glEnd();
}

// This function positions characters on float coordinates, and doesn't require 1:1 texels to pixels
// Appropriate if bilinear filtering is used
static void draw_string_float(float x, float y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0f, cd->t0f); glVertex2f(x + cd->x0f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t0f); glVertex2f(x + cd->x1f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t1f); glVertex2f(x + cd->x1f, y + cd->y1f);
        glTexCoord2f(cd->s0f, cd->t1f); glVertex2f(x + cd->x0f, y + cd->y1f);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance;
    }
    glEnd();
}
*/

#ifndef STB_FONTCHAR__TYPEDEF
#define STB_FONTCHAR__TYPEDEF
typedef struct
{
    // coordinates if using integer positioning
    float s0,t0,s1,t1;
    signed short x0,y0,x1,y1;
    int   advance_int;
    // coordinates if using floating positioning
    float s0f,t0f,s1f,t1f;
    float x0f,y0f,x1f,y1f;
    float advance;
} stb_fontchar;
#endif

#define STB_FONT_courier_bold_22_latin1_BITMAP_WIDTH         256
#define STB_FONT_courier_bold_22_latin1_BITMAP_HEIGHT        128
#define STB_FONT_courier_bold_22_latin1_BITMAP_HEIGHT_POW2   128

#define STB_FONT_courier_bold_22_latin1_FIRST_CHAR            32
#define STB_FONT_courier_bold_22_latin1_NUM_CHARS            224

#define STB_FONT_courier_bold_22_latin1_LINE_SPACING          10

static unsigned int stb__courier_bold_22_latin1_pixels[]={
    0x10201310,0x0004cc40,0x000812e0,0x26660881,0x00644220,0x08009998,
    0x3a801400,0x17400260,0x0804c800,0x00370004,0x00a20102,0x2e0003d1,
    0x3006e005,0xa85fb801,0x3e05f52f,0x360002ff,0x40dfb01f,0x5d7e1fe9,
    0x4d7e6fff,0xfff8805f,0x09dd100f,0xf100bf20,0x4017e20f,0x362004fa,
    0xf2fc401f,0x4ffe980b,0x0bf2fc40,0x2fc805f9,0x400fec00,0xf304ffe9,
    0x984ea80d,0x2e03b30d,0xdb0002fe,0x81ff4c01,0x2df10cfe,0xdf16fcc8,
    0x3e200ff4,0x34ee03ce,0x2007fcc0,0x7ff704fb,0x03f98015,0x36001db0,
    0xdf880f22,0x16c05e98,0x00ff5079,0x3b2003f5,0x98df8800,0x0003705e,
    0x02fb8000,0x3e600100,0x7c46f885,0x6f8b7c46,0xbf1017ee,0x00b7d100,
    0x1ff009f9,0xffffff98,0x10008803,0x01000000,0x7f400001,0x02000803,
    0x80010100,0x14cccccb,0x66543997,0xedbbfb83,0x1ccb882c,0xbf30f32a,
    0x6f88df10,0x46f8b7c4,0x17e200ff,0x7c401440,0x427dc00f,0x4fdaadfc,
    0x0059b710,0x22059b71,0x57712baa,0x0b36e205,0x80b36e20,0x2eaa26fa,
    0x44557712,0x57712baa,0x895d5445,0x20dc2abb,0x7ffffff8,0x7fc9fff7,
    0x7ffdc1ff,0x7dc4ffff,0x3fffe4ff,0x3e217e61,0x3e237c46,0x4fb8df16,
    0xb8817e20,0x7d402aac,0xe80fe805,0x7dc0e40f,0x700effff,0x81dfffff,
    0xfc9ffffd,0x7fdc2fff,0xf700efff,0x201dffff,0xffffb1ff,0x25ffff93,
    0xfc9ffffd,0xfffb2fff,0x5ffff93f,0x2aa617e6,0x37f27faa,0x2e0bfe60,
    0xffb8adff,0xf306fe43,0x885f985f,0x222fc45f,0xf88df16f,0x40bf100f,
    0x01fffffb,0xbf5013f2,0x806fbf20,0xffbaeff9,0x577fcc0f,0x3620fffb,
    0x7fd512cf,0xfbaeff98,0x77fcc0ff,0xe80fffba,0x259fb12f,0x3623fea8,
    0x7fd512cf,0xa8967ec4,0x01bea3fe,0x41ff13fc,0x0df705fb,0x0ff88df5,
    0x67fc17ee,0x1309fd30,0x0df16f88,0x17e207f9,0x5fffba88,0xfd00bf60,
    0x3fff6203,0xd82fe82e,0x6c17f44f,0x6417e44f,0x6c17f41f,0x6c17f44f,
    0x323fc84f,0x641fc82f,0x641fc82f,0x2a1fc82f,0xb8ff007f,0x5c07fe4f,
    0xf70ff03f,0xfd80ffc9,0x005ff91f,0x437c5be2,0x0bf107f8,0x01ffbf70,
    0x5fa80bfa,0x2ffec980,0x3fcc1fe6,0x1fe60ff3,0x43f905f9,0x4ff307f9,
    0x0ff307f9,0x417e49f9,0x417e41fc,0x417e41fc,0x01fee1fc,0x23fe23fc,
    0x1bee05fb,0x3fe21fe6,0xdf105fb8,0x2b85fb83,0x06f8b7c4,0x0bf107f9,
    0x07f93fd0,0x2fe80ff6,0x4df302a0,0x43fe04fb,0x83fe04fb,0x21fc82fc,
    0x43fe04fb,0x03fe04fb,0x417e47fb,0x417e41fc,0x417e41fc,0x03ff21fc,
    0x37ee1fe0,0x3fee01ff,0x03ffb9ad,0x203ffbf7,0x46f885f9,0x8b7c45f8,
    0x10df306f,0x16f980bf,0x413ee0df,0x13ea06f9,0x01fdcdf1,0x80fee3fb,
    0x20bf21fd,0x80fee1fc,0x407f71fd,0x90ff41fd,0xc83f905f,0x641fc82f,
    0x361fc82f,0x07f801ff,0xfb80bfff,0x05ffffff,0xf302fffc,0xf88df10b,
    0x6f8b7c46,0xbf10bf60,0x3f63fc80,0xfb06fa81,0x5effd405,0x17ea3ffc,
    0x5fa87fc4,0x7e41ff10,0x3ea1fc82,0x2a1ff105,0x41ff105f,0x0bf20ff8,
    0x05f907f2,0x82fc83f9,0x03ff21fc,0x7fdc1fe0,0x655fdc00,0xffb801cd,
    0x2217e600,0x2237c46f,0x4c0df16f,0x102fc46f,0xbfffffff,0xdf10bfa0,
    0xfffff980,0x03fe20cf,0x0ff89bee,0x1fdc6fb8,0x1ff107ec,0x7fc4df70,
    0x7e46fb80,0x7ec1fdc5,0x7ec1fdc0,0x7ec1fdc0,0x22013a60,0x00bf706f,
    0x2e0005f7,0x427cc05f,0x237c46f8,0x80df16f8,0x817e22fe,0xfeeeeefb,
    0x646fb80f,0xfa89803f,0x43df900e,0x77e42ffb,0xf30bfee1,0x643fd41f,
    0x0bfee1ef,0x7fdc3df9,0xf307fe22,0x4c3fd41f,0x21fea0ff,0x1fea0ff9,
    0x884fc800,0x2fb800ff,0x00ff8800,0x7f407fee,0x3a6bf10e,0x80bf16ff,
    0x3ffe26fa,0xfc81fe85,0xf11fe883,0x05f8800f,0x7fff7ff4,0xffdffd04,
    0x37ff209f,0xffd02ffe,0x3a09fffd,0x44fffeff,0xbff905fb,0x3f205ffd,
    0x902ffedf,0x05ffdbff,0x3ffbb620,0xffddd31f,0xeefed80b,0x7f774c03,
    0x80fae05f,0x553a1fd8,0x013a6fff,0xefff89fa,0x47fffd10,0xfa85fffd,
    0xf0007f31,0xffff900b,0xffffc805,0x67ffdc02,0x7fffe401,0x7fffe402,
    0x2e00fb82,0x5c01cfff,0x5c01cfff,0x2001cfff,0x21dffff8,0x0efffffa,
    0x13ffffa0,0xdfffff50,0x00000001,0x4c002000,0x3f63fffe,0x001005ff,
    0x09800260,0x20004c00,0x004c0009,0x40000260,0x004c0009,0x00000260,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x43000000,0x00081008,0x6a800057,
    0x00036e00,0xdda88000,0x0ba00a8b,0x5c00f600,0x88cfb801,0xd0020403,
    0x803d8005,0x01ec001b,0x00100a00,0x55510008,0x2a0dc455,0xbf10dd3f,
    0xffb102fc,0x5f70001b,0x00774400,0x40374dd0,0xfffffff9,0x4013ea04,
    0x74c00ee8,0x2faa04ff,0x3e205ffd,0x4fa817e5,0x200ee880,0x8804ffe9,
    0xdb8800ee,0x3605fb1c,0x013e006d,0x4dfffff5,0x4fee0ffc,0x1e45b06f,
    0x0db11bd0,0x0001fb80,0x71e400db,0x9cff9809,0x4c05ffb9,0x805e803e,
    0x05e98df8,0x45b00350,0x01f4c03c,0x1bf1017a,0x05e80bd3,0xffffff50,
    0x165620df,0x3e037c40,0x366c999d,0x22bee1ff,0x0300006f,0x00088003,
    0x00000040,0x13ea0bfa,0x00040040,0x6dc40101,0x4000002c,0x80800400,
    0xf9800400,0x2ffeaaef,0x2003b3a0,0x3f300ef8,0x87ff25a8,0xa85f8afc,
    0x81aaaabc,0x002aacb8,0x00555971,0x00aab2e2,0x015565c4,0x21c81be2,
    0xaaaaccb8,0x599710aa,0x22155555,0xaaaaaccb,0x7fffdc0a,0x665c40ef,
    0x20aaaaaa,0x1aaaabca,0x55555e54,0x5555e541,0x82aee21a,0x17f42ab9,
    0xa809fff1,0xfffea800,0x07bfa62f,0xfc88ffc8,0x30cffeef,0xffffffff,
    0x3fffff70,0xfffff700,0xffff7003,0xfff7003f,0x27d403ff,0xfffff900,
    0x3f23ffff,0xffffffff,0xffffff91,0x7fcc3fff,0x20fffbae,0xfffffffc,
    0xffff31ff,0x7fccffff,0x267fffff,0x7fffffff,0xff93ffee,0xe8ff30ff,
    0xdc987fcf,0xff700ace,0x6f49ff9d,0xfb80cfeb,0xffffff37,0x7dd545ff,
    0xba881aae,0xa8805fff,0x8805fffb,0x805fffba,0x05fffba8,0xb88013ea,
    0xfdaaaaef,0x555df711,0x3ee23fb5,0x1fdaaaae,0x93f60bfa,0xaaaaefb8,
    0x3eeaa1fd,0x5d541aae,0x5541aaef,0x221aaefb,0x3bf20ffb,0x6fc93ee2,
    0x7ffc41fd,0x3fd05fff,0x5cbd1fcc,0x13fd42ff,0x019f75fd,0x7dc017e2,
    0xf7000ffd,0x2e001ffb,0x7000ffdf,0x2601ffbf,0x37c4005f,0x6f887f21,
    0xdf10fe42,0xff31fc84,0xdf11fe60,0xf881fc84,0x805f8805,0xafe405f8,
    0x97e41ff8,0x83fb0ffa,0x1fd989ab,0x30542fcc,0x93f623df,0x5c7f46f9,
    0x017e203f,0x01fe4ff4,0x03fc9fe8,0x07f93fd0,0x0ff27fa0,0x22000ff8,
    0x8933f36f,0x933f36f8,0x33f36f88,0xff027dc9,0x9f9b7c41,0x00bf1049,
    0xbf100bf1,0x9fb5fd00,0x3ff39f50,0x65d41fe2,0x37c43fdc,0x50cfe880,
    0x64d7e25f,0x02dfecff,0xdf300bf1,0x3e601be2,0xf300df16,0x2601be2d,
    0x640df16f,0x237441df,0x03feeff8,0x07fddff1,0x0ffbbfe2,0x1fd80fee,
    0x0ffbbfe2,0xf100bf10,0x00bf100b,0x220dfff3,0x3ee3feff,0xfffffe86,
    0x50bfe83f,0x2bfee05b,0x7ec2a4e9,0x07ffffff,0x7f900bf1,0x3f200fec,
    0xf9007f63,0x3200fec7,0xd807f63f,0x4ffedfff,0x1fffffc4,0x3fffff88,
    0x7fffff10,0x3e20bf50,0x3fffe20f,0x02fc403f,0x7c402fc4,0x03ff9005,
    0xff72ffe4,0xaabefb85,0xfffa83fd,0x36203fff,0x3e601fff,0x100afd9e,
    0xfff880bf,0x2205ffff,0x5fffffff,0x3ffffe20,0x3fe205ff,0x405fffff,
    0x83efffec,0x13fb9ef8,0x3fb9ef88,0xfb9ef881,0x407fc413,0x4f7c46fb,
    0x3e2013fb,0x805f8805,0xdf1005f8,0xfdfffc80,0x447f84ff,0xffb103fd,
    0x8db0905b,0x6d7e22c8,0x017e200f,0xfdddddf7,0x3bbee01f,0x700ffeee,
    0xffdddddf,0x3bbbee01,0xd800ffee,0x45be200c,0x3e24f88b,0x49f11716,
    0xf11716f8,0xf70f7e49,0x716f885f,0xbf109f11,0x100bf100,0x1be200bf,
    0xffecff98,0xd9dfb02f,0x220bffff,0xd83f306f,0xbf337cc6,0x5f8803fa,
    0x7e40ff40,0xf903fd03,0x3207fa07,0x903fd03f,0x05fb007f,0x2fcc37c4,
    0x4bf30df1,0x45f986f8,0x4fffeffe,0x5f986f88,0xf8805f88,0x005f8805,
    0x17e40df1,0xffd88011,0x106ffeff,0x3bbe60bf,0x20882ffe,0xd10fd4f9,
    0x4bffffff,0x363fffe8,0x3fa25fff,0x3fff63ff,0x8ffffa25,0x3a25fffd,
    0x3ff63fff,0x0fb7e05f,0x7fffffd4,0xfff55fff,0x2bffffff,0xfffffffa,
    0xfffc85ff,0xffffa82f,0xd15fffff,0x4bffffff,0xffffffe8,0x3ffffa25,
    0xfffa85ff,0x00c40eff,0x80033100,0x9999101b,0x47620039,0xfffe984b,
    0x3fa65fff,0x3fff63ff,0x8ffffa65,0x3a65fffd,0x3ff63fff,0x3fffa65f,
    0x817fff63,0x3fee03b9,0x5fffffff,0xfffffff7,0x3ffeebff,0x05ffffff,
    0xfffb8026,0x35ffffff,0xbffffffd,0x7fffff4c,0x3fffa65f,0xffb85fff,
    0x0001efff,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x3cdb8800,0x200bb980,
    0x00171dea,0x00e233ee,0x98066662,0x00081000,0x03c80037,0x11000da8,
    0x80017400,0x0ab9803c,0x5c003700,0x016c4002,0x00408002,0x130006d4,
    0x3ffffee0,0xffff901e,0xff97f103,0xb7d5001d,0x3f660bff,0xa82fffff,
    0x883cadff,0xe9817e4f,0xee8804ff,0x01ee8800,0x00bbff62,0xe88013ea,
    0x7ffe400e,0x3ffa601f,0x67fec404,0x00ee9800,0x8803dfb3,0xd1017e4f,
    0x1ff7001d,0xfbaeff98,0xb13f986f,0x0005300d,0xcff980d4,0x3200fcde,
    0x5b01efff,0x8df881ec,0x06f405e9,0xfc81f200,0x9800ffde,0x01bd003e,
    0xffcbffa8,0xe98df880,0xd31bf105,0xd809f00d,0x2d806b8c,0x03e400f6,
    0x17f41dc4,0x517227ec,0xaacb881f,0x21ab9802,0x3f22abb8,0x5c0f79b3,
    0x000ffbdf,0x08010300,0x7c402000,0x0800fee6,0x3f600100,0x40c0ff21,
    0x20060600,0x07e0f800,0x00100000,0xfa83fcc0,0x07ee1f47,0x03fffff7,
    0xf70ffff8,0x47fa5fff,0x84407bcd,0xbb7105fa,0x6edc4017,0x376e600b,
    0x376e600b,0x326f880b,0x9db9304f,0x76e4c015,0x98ff00ac,0x7bb7305f,
    0x33b72601,0x6edc400a,0x0d53d80b,0x0acedc98,0x05eedc40,0x09f706e0,
    0x71f887fc,0xba883fff,0x6cc05fff,0x9fb514ff,0x7bcda7e4,0xfbfffb30,
    0xffffd81f,0xfffd81ff,0xffb81fff,0xfb81ffff,0x441fffff,0x81fffaef,
    0x5ffffff8,0xffffff10,0xff09f30b,0xffffff70,0xfffff883,0x3fff605f,
    0x7f4c1fff,0x220db8ae,0x05ffffff,0x3ffffff6,0xfb8bf101,0x7cc7f603,
    0x01f9cf88,0x801ffbf7,0x3f21fffc,0x33bbfa22,0xcfff887b,0x3f61fffe,
    0x46fc98ae,0xfc98aefd,0x54e7fd46,0x3fea0ffe,0x20ffea9c,0x4fffaef8,
    0xfb313570,0x2626ae03,0x41fd41fd,0x4e7fd47e,0x55c0ffea,0xd81fd989,
    0x6fc98aef,0x07dfd750,0x3fb31357,0x9315dfb0,0x8bfd30df,0x1ff105f9,
    0x7c5ae3e6,0x7f93fd01,0x26fdfc80,0x7f5c42fc,0x45fb87bc,0x5ff12ffb,
    0x27fd3333,0x9999aff8,0x20bfa3fe,0x20bfa3fc,0x45be23fc,0x97504fea,
    0x5d407fb9,0x7d43fdcc,0x17f47e83,0x65d41fe4,0x7fc43fdc,0x3fe9999a,
    0x017bfd71,0x3fdccba8,0x4ccd7fc4,0x3fee3fe9,0xb80ff82d,0x3ea3e66f,
    0x6f981f89,0xafc80df1,0x405f94fd,0x1fe87bcd,0xfff32ff8,0x29ffffff,
    0xfffffff9,0x20df14ff,0x20df15f9,0x31be25f9,0xffffd0ff,0x3ffa07ff,
    0x7cc3ffff,0xdf137c45,0xffd17e60,0xf987ffff,0xffffffff,0xff917b54,
    0x3ffffa09,0x7ffcc3ff,0x14ffffff,0x77ec03ff,0xf98bfee1,0x907fffb2,
    0x900fec7f,0xf93ff15f,0x43de6c05,0x31fe80ff,0x999999ff,0x333fe659,
    0x3e2ccccc,0x3e5fa80f,0x225fa80f,0x2e1fd86f,0x3fdaabef,0xdaabefb8,
    0x7d47f83f,0x7d407fc4,0x2aafbee5,0x67fcc3fd,0x82cccccc,0x5c2e99e9,
    0x3fdaabef,0x66667fcc,0x09f32ccc,0x7f7fec37,0x264f84ff,0x7ffc40aa,
    0x3205ffff,0x5f9df72f,0x743de6c0,0xf07fd44f,0x7ff0607f,0x41bfb060,
    0x37f62fe9,0xf88bfa60,0x41fd1f9e,0x41fec47f,0x41fec47f,0xb07f63fd,
    0x17f4c1bf,0x83fd88ff,0x320303ff,0x88ff12e4,0x03ff83fd,0xf711ff83,
    0x3efffc89,0x3ee00dd0,0x0ffeeeee,0x7ff45f90,0x1ef3602f,0x3fb3ffe6,
    0x6fffd43f,0x3ea4ffed,0x4ffeddff,0x3fb7ffa2,0x6fff445f,0x3fee5ffe,
    0x45fdefdf,0xfffecefd,0x7677ec5f,0x7cc5ffff,0xe886ffef,0x45ffedff,
    0xfffecefd,0x6fffd45f,0xea84ffed,0x77ec2e88,0x45ffffec,0xfeddfffa,
    0x3fffee4f,0x77fec4ff,0x1fd44a8a,0x903fd093,0x98bf207f,0x33602fff,
    0xfffd307b,0x3ffa6039,0x74c1cfff,0x41cfffff,0x04efffd8,0x89dfffb1,
    0xffdafffb,0x7ffec41d,0x6c46ffef,0x6ffeffff,0x00efffa8,0x09dfffb1,
    0xfdffffb1,0xfffd30df,0x3f2039ff,0xfffd885f,0xe986ffef,0x41cfffff,
    0x642dffeb,0xffffffff,0x2ff7fe40,0x6c7fffd1,0x7fdc5fff,0x05ff90ef,
    0x3bfbdfd9,0x98800620,0x09988009,0x4c001300,0x20044000,0x26200198,
    0x00044001,0x03310013,0x00099880,0x01988011,0x0004cc40,0x32af3aa0,
    0x377301ce,0x23fffe98,0x7dc5fffd,0x0bfa0eff,0x332f3332,0x00000001,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x04ccccc4,0x20400810,0x002b8800,0x54400191,0x2666621b,
    0x2b880999,0x54399710,0x8f3263cc,0x57304cca,0x00266201,0x20066200,
    0xdeda801b,0x6401ccaa,0x9dedb803,0x332a0bcc,0x401cedb9,0x04c8004b,
    0x7fec01b8,0xf882ffff,0x97d417e4,0xffd502fa,0x7fdc09ff,0x7fec402f,
    0xffff92ff,0x7ec4dfff,0x7fdc3fff,0x47fffe4f,0x3ffa6ffc,0x3ffffc87,
    0x0017ffc4,0x807ffe20,0x7fec05f8,0x06ffffff,0x74401dd1,0xffffffff,
    0x3fffffe2,0x3a204fff,0x1ed8800e,0x813ffa60,0x0ccccdfd,0x981ec5b0,
    0x3e03b30d,0x81febbef,0x205f72fb,0x0cabefe8,0xfb999bf7,0x7e5f7dcd,
    0x306fe41f,0x26fa85ff,0x7fcc7fa8,0x75c1ffcc,0xeb80002f,0x81be201f,
    0xfea8cffc,0x01bd00cf,0xfc8aefd8,0x7fec41ff,0x03ffa8be,0x3b601b62,
    0x2637e200,0x001fb05e,0x2a000000,0x0442fcc1,0x02ff4022,0x24fb8191,
    0x2227d47f,0x217ee0ff,0x647f86f8,0x321bea2f,0xf900002f,0x8837c403,
    0x17fc40ff,0x1ff10010,0xdf706fc8,0x0100df30,0x02060010,0x400ccfec,
    0x4c0bddb9,0x1332a3cc,0x9932fcc0,0x26266547,0x3fb0005f,0x0df31be2,
    0x40ffc9f7,0x747f86f8,0x3207f40f,0x01cedbbf,0x7e56f6dc,0x9efa9981,
    0x6c17e609,0xa8f3262f,0x42fd44cc,0x07f706f8,0x23cc99fa,0xcca84cca,
    0x3332a03c,0x3ffff603,0xffff702e,0x37fe43ff,0x6440fffd,0x3ff22ffc,
    0xf71fffa6,0x22005b75,0x54e7f47f,0x8ff883fe,0x0df105fb,0x221fc8ff,
    0x7ffe41ff,0xe884ffff,0x1fffffff,0x3fffffe2,0x1ff15fff,0x3f22ff88,
    0x31fffa6f,0x20df50df,0x26f986fb,0x3ffa6ffc,0x05fffe87,0xd817fffa,
    0x42ffddff,0xfea9cffa,0xa89bea0f,0x3fff207f,0x2a26fa86,0x7fffec7f,
    0x27dc01ff,0x1bffffe2,0x01ffdfb8,0x47fb8ff1,0xffe88df9,0x4d77fe42,
    0x77e42ffc,0x41ffeb8b,0xeeffeeec,0x26fbf62d,0x7d42ffeb,0x3e1fea26,
    0x41bfa23f,0xfc9adffb,0x5137d43f,0xbf7510ff,0x02fdd440,0x22fcc151,
    0x23fc82fe,0x207f86f8,0x443ffca8,0x7f47f86f,0x405fc9df,0x7ffdc1fd,
    0x3fe01fff,0x3bfe205f,0x745ffffd,0x43ffffff,0x26fa87fc,0x7fcc0ff8,
    0xb017e201,0x5fffffff,0x87f86f88,0xfffdfffa,0xfffff706,0x0df109ff,
    0x02fc40ff,0x74002fc4,0x260df10f,0x3e1be25f,0x88ff3007,0x7ec7f86f,
    0xf8807ec6,0xc897fc47,0x03fee05f,0xdfffff88,0xcfea86ff,0x827e41fe,
    0x7417ea7f,0x017e201f,0x3f2b36e2,0x3fc37c42,0xfdffffa8,0xb957f706,
    0x21be2015,0x017e207f,0x360017e2,0x2a03fe1f,0x3e1be25f,0x887f6007,
    0x7e47f86f,0xfb817dc3,0x3fc2fd44,0xf880bf70,0x5c00099e,0x884fc87f,
    0x7417e67f,0x017e201f,0x3e217e40,0x4c407f86,0x5f706f88,0x7c37c400,
    0x2017e207,0x307305f8,0x06fec1ff,0x47f85fd3,0x440c47fb,0x7dc7f87f,
    0x3fa37d47,0xf983fd00,0xf8837cc6,0x037c400f,0x417fdc40,0x2fe41ffc,
    0xffb85ff1,0x80027c01,0x5c7f82fc,0x13f2007f,0x3e0017dc,0xf103fdc7,
    0x20bf100b,0xfffdeffc,0x76fff443,0xdefe85ff,0x3f25ffff,0x84ffedde,
    0xffffdefe,0x7feffec5,0x3a0ff105,0x23ffedff,0x05ffeee9,0xec8037c4,
    0xfd84fffd,0xfffdefff,0x7efffdc1,0x2604ffff,0x7ff64000,0x7ef7f43e,
    0xed885fff,0xed81fffe,0xfd003eef,0x4bffffbd,0xfffffffb,0xfffff70e,
    0x3b221dff,0xb103ffff,0x2209dfff,0x6ffdffff,0x3ffffb62,0xbffff103,
    0xffd88dff,0x07f100cf,0x21ffffe4,0x0efffffa,0xfc802740,0xffd01eff,
    0x03dffffb,0x3bbfffea,0xfffd14ff,0x809fffff,0x445ffffe,0x6ffdffff,
    0x1dffff88,0x09ffffd0,0x37fffe20,0x3ffee6ff,0xf71effff,0x3dffffff,
    0x4c001310,0x00133000,0x4cc00262,0x00006000,0x00000130,0x00131000,
    0x22001330,0x3ffa2019,0x04ffffff,0x00266000,0x40000000,0x00000099,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x04c40000,0x0cdeed40,0x0388ceb8,0x233ae000,0xbdb91038,
    0x00990175,0xa8805510,0x006a2001,0x0002ae60,0x33101544,0x03333333,
    0x2e62014c,0x30133001,0xa88039b9,0x100a8bdd,0x01559b97,0xbc980091,
    0xfd81aaaa,0x3fffea03,0xebea87ff,0x74dd05ff,0x3f6fe606,0xffffb85f,
    0xdf983fff,0xedfea800,0x17fe40df,0x002ffd80,0x0036e7dc,0x37fb7faa,
    0x4ccccd40,0x36e0a999,0x3fe606ff,0x3ea03eff,0x7ffff44f,0xfff980ef,
    0xf984ffff,0x84ffffff,0x3fe001fb,0xc86fffff,0x26ffa02e,0x2a807fd9,
    0x004b9320,0x33fe60aa,0x103fea89,0x42fa80bd,0x02f80ec8,0x300017c0,
    0x0bea003f,0x400c1d91,0xdffff308,0x32f7fe20,0x9ffd00ff,0xfda9bff8,
    0x4ce7fcc3,0x7fcc5ffb,0x85fea9ac,0x2a6002fc,0x000adfda,0x87e85f98,
    0x00acedc9,0x376e6000,0x5427e40b,0xf300402f,0x322f7663,0x20202f86,
    0x7c40202f,0xb3f3006f,0x19b217bd,0x22aa0880,0xa89f706f,0x4fffb84f,
    0xd1be22f4,0xc89f505f,0x224f882f,0x3cccdfeb,0x9507f700,0x3be20799,
    0x3fe214c0,0x9505ffff,0xffb80799,0x3fa1ffff,0x99950101,0xaeb9dc07,
    0x2f83d2fb,0x02f86e98,0x3ea203f9,0x27717ea2,0x47a6caec,0xf8808801,
    0xf9819106,0x27dffc46,0xf89be602,0x0df07206,0xffff704c,0x7001ffff,
    0xbfffd07f,0x5677fec0,0xb3135700,0xbfffd03f,0x54e7fd40,0x03fb0ffe,
    0x02ffff40,0x90a83a3d,0xf905fcc7,0x20bf985f,0x31984fea,0x83dfb15f,
    0x43e6951e,0x0110033c,0xfd800df1,0x27ce7ec4,0x547ff710,0x13e6004f,
    0x559fb300,0x0fee0015,0x7017eea2,0x205ffffd,0x83fdccba,0x3a05fba8,
    0xf93fc82f,0xa887701b,0x223e05fb,0x7fed2e07,0x2acfe9ef,0x367ffff6,
    0x7641bbef,0xabffbcef,0xfefa87c2,0x4400d2e3,0x2006f880,0x47fcc6fd,
    0xfff104f9,0x2004fa87,0x6665c4fa,0x4c02fc83,0x2203fb81,0xfb51005f,
    0xffffe81f,0x17e203ff,0x5f9837c4,0xdb9dffd1,0x817e20df,0x0b601d1d,
    0x3ea7bf22,0x2effea07,0xfb106ecf,0x1d8df71b,0x96c9b3b5,0xf8808801,
    0x0efe8806,0x04f997f4,0x17e603be,0x3ea5f980,0x7e43ffff,0x7dc37402,
    0x5417e203,0x7dc5f905,0x03fdaabe,0x0ff817e2,0x3b225fa8,0x100dffff,
    0xeba5c0bf,0x981f2eab,0x0fdf14ff,0x88dc7bf6,0x89ffdc1f,0xeca5c6ef,
    0x00c3e7d1,0x037c4044,0xf503bfa2,0x05dfb99f,0x00ff806a,0x5541ff10,
    0x02fc86fb,0x017dc3fc,0x13f60bf1,0x23fc3fd1,0x3e203fd8,0x9837f605,
    0x13bb02fe,0x2205f880,0x3659712f,0x3b61eb85,0x103e887b,0x741bb0dd,
    0x5d7c46cd,0x0cbb931c,0x37c40440,0x901bff30,0xbfffffff,0x077f2000,
    0x0cfe8dd1,0x1fe42fcc,0x220ff8a6,0x17e201fe,0x7f6fffec,0x7677ec5f,
    0xf105ffff,0x6fff440b,0xf9105ffe,0x80bf1007,0xbb510cf8,0x3f77ea00,
    0x037e6001,0x03bb7ee0,0x36a219f1,0x404400c5,0x9ff706f8,0x26666208,
    0x079105fa,0xfedfffd8,0x77ffc44f,0xf885ffed,0xf2fffddf,0x09ffbdff,
    0xfffffff7,0x3ff7ae1d,0x7ec40bef,0x26ffefff,0xfffffffb,0x7ffec40e,
    0x0ffbe04e,0x7fffffdc,0xffc880ef,0x32a003ef,0xf7001fec,0x9950033b,
    0xff9103fd,0x100307df,0x3ffffa21,0x3fffe5ff,0xe885ffff,0xffa83fff,
    0x7fff6400,0xfffb103e,0x3ae019ff,0x3222efff,0xf704ffff,0x3dffffff,
    0x31001310,0xffffb803,0x2601efff,0x201a8800,0xfffffffb,0x0004401e,
    0x1007ff70,0x005fffff,0x1100bff2,0x55555540,0xfd10baaa,0x7cbfffff,
    0x6fffffff,0x04fffe88,0x04c40011,0x40013100,0x00440098,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x71000000,0x0cc4059b,0x12baa880,0x33005577,0x40013301,
    0x30009998,0x79710379,0x2a1664c1,0x1aaa80ab,0x2aaaaee2,0xaaacb880,
    0xaabb8802,0x730000aa,0x5555e644,0x0dc42aaa,0x17999971,0x2ab32e20,
    0x6440aaaa,0x2ea0532e,0x0357712a,0xb8879b71,0x3fffee02,0x7ffcc0ef,
    0xffffd801,0x82ffffc9,0x25ffffd8,0x3a006ffc,0xfd805fff,0x7fdc3fff,
    0x43fffe5f,0xff85fff8,0x3ffff26f,0x7fe43fff,0x00dfffff,0xfffffff9,
    0x5eedcc07,0x3ffe67fa,0x46ffffff,0xfff90ffc,0xc83bffff,0xffffffff,
    0x77deec1f,0xffff882f,0xe86fffb9,0x3ee0ffff,0xaeff980f,0x75c0fffb,
    0xcfd8801f,0x207fd512,0x25eecefc,0x2a006fc9,0x7c405fcc,0x5c46fa9e,
    0x0bff22ff,0x7d41fff5,0x33f621ff,0x223ffdba,0xfecaaefb,0x759fb104,
    0xff907ffb,0x4c5fffff,0xbaefbaef,0x712fd46f,0xbfb755df,0xaaaefb88,
    0x2a201fda,0x44bbea00,0x67d41ffa,0x82f4c1c9,0x84fd82fe,0x5f9001fd,
    0x1be03f90,0x2001be20,0x17dc05f8,0x457f2011,0xfff882ff,0x2e1bffa4,
    0x107fcc2f,0x201fd0df,0x07fcc3fb,0xff717df9,0xf8afcc3f,0x2200df15,
    0x440fe85f,0x70fe426f,0x017bb579,0x21be17e2,0xf30003fc,0x361fe60f,
    0x83ccb89f,0x41fc82fc,0x2cccffcb,0xcedbef88,0x202fc401,0x3fa004fa,
    0xdf104fca,0xdfdf31ff,0x7f905f70,0x07f437c4,0x3fb83fb8,0x6ffcc7fe,
    0x7c53e25f,0x7c4017e5,0x2207fcc5,0x4933f36f,0xfffffff8,0xf85f881f,
    0x000ff986,0x3fe04fb8,0x7fd4fec0,0x417e41ff,0x3ffe61fc,0xf887ffff,
    0x01ffffff,0x764417e2,0x4c00ceff,0xf100efff,0xf5fb7f9b,0xf505f70d,
    0x5d577c49,0xfec885ff,0x29f30dee,0x17ff35f9,0xbf11b8df,0xff8800d4,
    0x884ffeee,0x303feeff,0x9f713dff,0xddddff10,0x2bff70df,0x3fb800bb,
    0x3fb07f60,0xf9037ffb,0xb983f905,0x880aaaef,0x4fc89eff,0x7cc17e20,
    0x201fffff,0x0cefffc9,0xfff9df88,0x05f70df7,0x7ffc4bf3,0xff105fff,
    0x3e61ffff,0x9ff3df15,0x5f8817ea,0x3e2176c0,0x85ffffff,0x03fffff8,
    0x10df0df1,0xdfffffff,0xfaffffa8,0x2fd4023f,0x7ec0ff88,0x3f200eff,
    0xf881fc82,0x446f8806,0x817e206f,0x400afe98,0x019ef998,0x4fff6bf1,
    0xa82fb86f,0x333fe24f,0x5fe404ff,0xfd93ea09,0x07fd34ff,0xdf302fc4,
    0x7333df10,0x9ef88bfd,0x6f8813fb,0x9ef887f8,0x7ec6f999,0x50efff9b,
    0x0ff881ff,0xffd86fb8,0x41fdc03f,0x06f880fd,0x06f86f88,0x3fe017e2,
    0xefba9800,0x35f880aa,0x2e1be1ff,0x222fc82f,0x813fe66f,0x23fc83fb,
    0xffedfffa,0x702fc405,0x10bf103f,0x716f88ff,0x37c49f11,0x42fc43fc,
    0xfc8fec6f,0x203fea2f,0x3fee1efc,0x3ffdfd82,0xfa83fe60,0x100df107,
    0x440df0df,0x43fcc05f,0x77dd442d,0x4cbf102a,0x8bee1be0,0x3e20ffb8,
    0xb80ffcc6,0x43fee23f,0xefffefe8,0x205f8804,0x30bf104e,0x986f88ff,
    0x3e1be25f,0x6f85f887,0x7ff6ffcc,0xfe80262e,0xb04fffef,0x409ff33f,
    0x2ffedffc,0xf100df10,0x7c40df0d,0x3ffff205,0x7444ffff,0xe884ffff,
    0x3ff23fff,0x3fffea5f,0x3ea2ffff,0x3fee3fff,0x7ffffd44,0x93ee2fff,
    0xfffb8009,0x03a20eff,0x3fffffea,0x3fea4fff,0x5fffffff,0x361dffd3,
    0x3ffa65ff,0x0effea8e,0x3ffbffae,0x7ffe4002,0x1ffe882f,0x2e0bfff7,
    0xe981cfff,0x43ffffff,0xfd15ffe9,0x3ffee1df,0x320effff,0xefffffff,
    0x7ffff441,0x3fffe885,0xfb97fff6,0x40ceffff,0x6c3ffffb,0x7fffdc5f,
    0x00281cef,0xdfffff70,0x3ffee001,0x5c3effff,0xffffffff,0x1dfff35f,
    0xffa9bffa,0xefffa9ef,0x00001880,0x7ff44013,0x80dfff51,0x3ffea009,
    0x7d44ffff,0xffe98eff,0xfffff70e,0x00003dff,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x55750000,
    0x20d55cc1,0xaaaabcc9,0x86ae60aa,0x6542abb8,0x2e202aaa,0x55750aab,
    0x10000000,0x80355577,0x802aacb8,0x1aaaabca,0x55579950,0x04e80355,
    0xda8ef64c,0x730ab983,0x00035559,0x2aab3220,0x2aee22aa,0xb88aae60,
    0x0aae60ab,0x5d435575,0xffff51aa,0x23ffffc9,0xffffffff,0x3fffe2ff,
    0x25ffff70,0x2ffffff9,0x3bffff90,0x4003ffff,0x0077a4ea,0x7fffffec,
    0xffff704f,0x7ffcc03f,0xf887ffff,0xffffffff,0xf101ec05,0xfffdffff,
    0xdb6e7dcb,0x006fffff,0x7ffc40fa,0x3ee6ffff,0x3fffe4ff,0x7cbfff70,
    0xfff10fff,0x3fffe6df,0x982ffea5,0x7e4c1dfd,0x2fdaaaad,0x5453ff66,
    0x7fd544fd,0x3bee202a,0x02eff88a,0x749ffd30,0x5c400cff,0x3fecaaef,
    0x5fffba88,0x577dd540,0xfbdd501a,0x000bf757,0xbff71570,0x3f303fd3,
    0x0155df71,0x7c41be20,0x25feaaae,0x3f20ffb8,0x87fee22e,0x77dc2ffc,
    0x03feaa1a,0x05fb07f9,0x0bee0fee,0x7e43fff9,0x2200ff02,0x01bfd15f,
    0x03dffb10,0x9809fff7,0x7037c45f,0x1001ffbf,0x373e00bf,0x000bf31f,
    0x5ff99510,0x7fc4bf73,0x3ffffe66,0x837c404e,0x03fee5f8,0x0ffc57f2,
    0x3ff36fc8,0x5322bf10,0x46f986f8,0x4fee06f9,0xfc81917c,0x40bf26fd,
    0x3bf1007f,0xf9100bff,0xfc8805ff,0x0bf303ff,0x27fa01fd,0x5f8803fc,
    0xafdaf980,0x55542f9d,0x21aaaaaa,0xfffffffb,0x7d446fff,0xfb99df32,
    0x037c40bf,0x807fe69f,0x404fdafe,0x203ffdfd,0xf33ff76f,0xfc87fa0b,
    0x3fbbee03,0x36bf200f,0x3e05f94f,0xffff1007,0x7fff700d,0xeffd8800,
    0xf912fcc2,0x7c5be60d,0x805f8806,0x07fdfb7c,0xfffffff1,0x33fe6bff,
    0xccccffba,0x4cbe6333,0x2a3fc45f,0xaaaefbaa,0x403fe881,0x8806fff9,
    0xbfc04ffe,0x04facffe,0x03fe2bf5,0x0fffffb8,0x3fe2bf20,0x0ff02fc9,
    0x3ffffe20,0x07fff604,0x3fffc800,0x3ffbbfe6,0x6c7f901f,0x02fc401f,
    0x4fffdaf4,0x55555550,0xa97e6355,0x764221ff,0x217e64ef,0xffff10fe,
    0xb0bfffff,0x3ff200bf,0x05ffb001,0xefefafe8,0x23fe03fb,0x67dc04fb,
    0x3f200fd9,0x05f9df72,0xf11ae1fe,0x407fd35f,0x000cfffa,0x307bff66,
    0x01bfffff,0x3fffffe2,0x02fc405f,0x33ffffe2,0xfd00002f,0xdbffffbd,
    0x2bf300bf,0x54c6fc98,0x0aaaefba,0x407337e4,0xdf7006f8,0x77ec03ff,
    0x02fefebf,0x007faff2,0x900e67f7,0x17fff45f,0x20fd87f8,0x03fe25f8,
    0x807fff70,0x302effc8,0x77dc00bf,0x00ffeeee,0x9f7017e2,0x0ea13fd9,
    0xfffd1000,0x05dfffdd,0xffffff30,0x02fc403d,0x0fe41ff5,0xfa806f88,
    0x900ffb9f,0xfff71fff,0x37ffc403,0x9001fdc0,0x17ffcc5f,0x20fd87f8,
    0x027dc5f8,0x2177fe44,0x403fffc8,0x3fa005f9,0x2203fc81,0xfb36c05f,
    0x13a03f43,0x00260620,0x9abcef98,0x882fc400,0x80fe42ff,0x7fcc06f8,
    0x7dc1bf22,0x01fff16f,0x6402ffd8,0x203fffff,0xf90efffb,0x7fff445f,
    0x50ffffff,0x3e27ffff,0xfd9802ff,0x19ffd14f,0xfffffb80,0x7fffd104,
    0xd12fffec,0x4bffffff,0xffedffe8,0x200fffff,0x0000003d,0x09fffff7,
    0x7e417e20,0x1fffffff,0x77ffffd4,0x8a7ffdc0,0x7d41effe,0x201ffa3f,
    0xffd807fa,0x3ee03fff,0x8bfa0eff,0xffffffe8,0xfff70fff,0x01ffdc7f,
    0x06747d50,0xfffffb80,0x7fffd304,0xd32fffec,0x4bffffff,0xfffdfff8,
    0x000fffff,0xf7000000,0x4009ffff,0xffff903e,0xfb83ffff,0x5c1effff,
    0xffd14fff,0x21ff983f,0x000007fb,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x06f3b6e2,0x205eedcc,
    0x332a3cc9,0x59db9304,0x6f6e4401,0x010040ba,0x202f76e2,0xd9cebbcb,
    0x9ccb883d,0x0000bec8,0x3261e654,0x2af2e0cc,0xcca80bdd,0x3999713c,
    0x33333322,0x2004043c,0x99713ccb,0x02600403,0xbbbba82a,0x222bbbbb,
    0x9879501a,0x7fffdc2b,0xfffb85ff,0x3ff21fff,0x221fffa6,0x05ffffff,
    0xfffffff7,0x6655fdc7,0x7fec0fd9,0x3e61ffff,0xffffffff,0x6fffd42f,
    0x2606ffff,0xfff9360f,0x53fff21f,0xfffffff8,0x7ffff41f,0x14ffffa8,
    0xdfffffff,0x407ea4e8,0xfa8ffff8,0x813e05ff,0x4d3ee1ff,0xffffffff,
    0x07ff96ff,0xecfb8bfe,0x2e62bfe6,0x4e7fd45f,0x3ea0ffea,0x5c1fea26,
    0x41fd989a,0xea89cff9,0x3fffe63f,0x77ec6fff,0x4c6fc98a,0x9bff9bff,
    0xfffd986f,0x7f504b9c,0xff883ba2,0x5fc8ce89,0x5c4f7fcc,0x07fdc44f,
    0x77c45ff5,0x442ffdaa,0x205f90df,0xffa8efe9,0x40bf100c,0x1ffb9ffb,
    0x2eeeeeea,0x41f46fbb,0xf88dc6f9,0x3137bfd1,0xfc82fe81,0x1fe1be23,
    0x3fdccba8,0x17d427e4,0x3ff2fbf2,0x266bfe21,0x3e23fe99,0x707f9be6,
    0x7f9003ff,0x3f603ba6,0x2fc8ffb9,0x837c37c4,0x20ff21fe,0x205ff52c,
    0x07f90ef9,0x0fffff62,0x2fbef362,0xffffb84d,0x746f8001,0xd101fb83,
    0x7ffffd4d,0x4c1be20d,0x3e1be25f,0xfffffd07,0x101fe87f,0x1fe43fd0,
    0xfffffff3,0xf37c49ff,0x2fb83fcd,0xff54fd80,0x3fafee01,0x7c40febf,
    0xbf507f86,0xfa803fe2,0x8ffcc02f,0x3ffa04fd,0xfffff304,0x3ff60dff,
    0xe8df0003,0xbf505d83,0xdfd95308,0x5fa80ff8,0x21fe1be2,0xfdaabefb,
    0xd000fec3,0xf31fdc1f,0x9999999f,0x4df37c45,0x005f707f,0x5fd31bf9,
    0x3fbffe20,0x86f886ff,0x327fa07f,0x0bfea04f,0x7fcd7f60,0x5ffffb01,
    0x37ffea20,0x3ffff701,0x744df000,0x7e40f40b,0xd05f518c,0x306fec1f,
    0x5c7f85fd,0x6c47f87f,0x406fe43f,0xe8a7e43b,0x181ffc1f,0x7cdf37c4,
    0x2005f707,0x2fd88efa,0xffb7fff0,0xff0df10b,0x07ff7d40,0x1ae2ffa8,
    0x077ccff6,0x7d477f44,0xdfff504f,0xf73ff701,0x93d8003f,0xf003ffff,
    0xff73ffff,0x88bffbbd,0x5ffedffe,0xfffdefe8,0x7677ec5f,0x3a25ffff,
    0x6fedceff,0x7fffffec,0x6efffd43,0xffd14ffe,0x2ffd7fe9,0xdffffff9,
    0xf7374403,0xf51ffb05,0xeffe987f,0x740bffb0,0xfff304ff,0x641fffff,
    0x2609f31e,0xfff36fff,0xfc9ff81d,0x3ee1ff84,0x00000004,0x3fffbe60,
    0xffd880be,0xfff104ef,0xd88dffbf,0x6ffeffff,0x7ffff644,0x3fbbee0d,
    0x74c0ffdf,0x11cfffff,0x57febffd,0x3fff26ff,0xb801efff,0x97ee0a60,
    0x7ffcc1fe,0x40dffd0e,0xff500ffb,0x41ffffff,0xfa80a20a,0xdfff36ff,
    0x20b63d81,0x00001809,0x26200000,0x40026000,0x33100099,0x80998800,
    0x204980c9,0x00000998,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x02a00000,0xaaaaaa98,0x544001aa,
    0x057300ab,0xa9766bb5,0x800b986e,0x3c804c1a,0xdb50b602,0xdddddddd,
    0x444441bd,0x40888888,0xaaaaaaa8,0x00000022,0x00000000,0x00000000,
    0x26000000,0xffff706f,0x41ffffff,0x6dc2efc8,0xedfc86dc,0x7cdbe61f,
    0xffb1be66,0x9b07a63d,0xdd107fd4,0xfa83fea1,0x3ffffee4,0x1fffffff,
    0xfffffff7,0x223fffff,0x6fffffff,0x002fc9f1,0x00000000,0x00000000,
    0x00000000,0x710bfff1,0x99999999,0x1fdcfc87,0xf107e654,0x2bf12dc3,
    0xb97e25f8,0xffbffddf,0x7d4bf221,0xfa837a0f,0x111f4c0f,0x11111111,
    0xeeeeda81,0x0deeeeee,0x55555551,0x007b16c5,0x00000000,0x00000000,
    0x00000000,0x01ff67f4,0x93a3f800,0x260fccee,0xf93e3cc7,0x5cb527c4,
    0x7f7c3fff,0x04402022,0x00000010,0x00000000,0x00000000,0x00000000,
    0x00000000,0x17fc57f6,0x99999991,0x3e4e8799,0x7f955f34,0x43ebade8,
    0x07d0fa2e,0x1a880a88,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x237cc000,0x3ffee7f9,0x0fffffff,0xb83fbbee,0x220ddcee,
    0x20a82deb,0x0000dc0a,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x80b80000,0x4ccccc29,0xda809999,0x0000001c,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
};

static signed short stb__courier_bold_22_latin1_x[224]={ 0,4,2,1,1,1,2,4,5,2,1,0,3,1,
4,1,1,1,1,1,1,1,2,1,1,2,4,3,-1,0,0,1,1,-1,0,0,0,0,0,0,0,1,1,0,
0,-1,-1,0,1,0,0,1,0,0,-1,-1,0,0,1,4,1,2,1,-1,3,0,-1,1,0,0,1,0,0,1,
1,0,1,-1,0,0,-1,0,1,1,1,0,0,-1,0,0,1,3,4,3,1,2,2,2,2,2,2,2,2,2,
2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,4,1,0,1,0,
4,0,2,-1,2,0,-1,1,-1,-1,2,0,2,3,3,0,1,4,3,3,2,0,0,-1,0,1,-1,-1,-1,-1,
-1,-1,-1,0,0,0,0,0,1,1,1,1,-1,-1,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,
0,0,0,0,-1,1,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,0,
 };
static signed short stb__courier_bold_22_latin1_y[224]={ 16,3,4,2,2,3,5,4,3,3,3,4,13,9,
13,2,3,3,3,3,3,3,3,3,3,3,7,7,4,7,4,4,3,4,4,4,4,4,4,4,4,4,4,4,
4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,3,2,3,3,19,3,7,3,7,3,7,3,7,3,3,
3,3,3,7,7,7,7,7,7,7,4,7,7,7,7,7,7,3,3,3,8,3,3,3,3,3,3,3,3,3,
3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,16,7,2,4,5,4,
3,3,3,4,3,7,9,9,4,1,1,2,3,3,3,7,3,8,15,3,3,7,3,3,3,7,0,0,0,1,
0,-1,4,4,0,0,0,0,0,0,0,0,4,1,0,0,0,1,0,6,3,0,0,0,0,0,4,3,3,3,
3,4,3,2,7,7,3,3,3,3,3,3,3,3,3,4,3,3,3,4,3,5,6,3,3,3,3,3,3,3,
 };
static unsigned short stb__courier_bold_22_latin1_w[224]={ 0,4,8,10,10,10,9,4,5,5,10,11,5,9,
4,10,10,10,9,10,9,10,9,9,10,9,4,6,12,12,12,10,9,14,12,12,11,11,12,12,12,10,11,12,
12,14,13,12,11,12,13,10,11,12,14,13,12,12,10,6,10,5,10,14,5,12,13,11,12,11,11,12,12,10,
8,12,10,14,12,11,13,12,11,10,11,12,12,13,12,12,10,6,3,6,10,11,11,11,11,11,11,11,11,11,
11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,4,9,11,10,12,
3,11,7,13,8,11,12,9,13,14,7,11,7,6,5,12,10,4,5,6,8,12,12,14,12,9,14,14,14,14,
14,14,14,12,11,11,11,11,10,10,10,10,12,13,12,12,12,12,12,9,12,12,12,12,12,12,11,11,12,12,
12,12,12,12,13,11,11,11,11,11,10,10,10,10,11,12,11,11,11,11,11,11,12,12,12,12,12,12,13,12,
 };
static unsigned short stb__courier_bold_22_latin1_h[224]={ 0,14,6,16,17,14,12,6,17,17,9,12,7,3,
4,17,14,13,13,14,13,14,14,14,14,14,10,12,12,7,12,13,15,12,12,13,12,12,12,13,12,12,13,12,
12,12,12,13,12,15,12,13,12,13,12,12,12,12,12,17,17,17,7,3,4,10,14,10,14,10,13,14,13,13,
18,13,13,9,9,10,14,14,9,10,13,10,9,9,9,14,9,17,17,17,5,13,13,13,13,13,13,13,13,13,
13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,0,14,15,12,10,12,
17,15,3,13,6,9,7,3,13,3,7,14,7,8,4,14,15,4,5,7,6,9,13,13,13,14,16,16,16,15,
16,17,12,16,16,16,16,16,16,16,16,16,12,15,17,17,17,16,17,9,15,17,17,17,17,16,12,14,14,14,
14,13,14,15,10,13,14,14,14,14,13,13,13,13,14,12,14,14,14,13,14,11,12,14,14,14,14,18,18,18,
 };
static unsigned short stb__courier_bold_22_latin1_s[224]={ 254,251,135,1,128,210,238,144,111,204,201,
13,242,218,177,117,162,141,152,37,162,1,61,71,81,118,248,180,144,96,157,
172,14,182,187,183,116,200,91,196,225,197,221,131,118,101,104,1,170,1,128,
244,168,27,76,62,49,36,25,89,78,68,85,203,182,37,128,50,142,73,40,
193,52,233,1,14,65,85,138,12,206,167,100,1,209,24,151,124,188,92,164,
57,74,50,149,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,
129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,254,249,229,
76,62,88,64,239,228,60,117,112,222,218,115,188,109,155,248,249,171,105,53,
166,160,235,126,175,74,87,102,246,53,38,23,24,68,96,208,83,96,108,120,
145,157,168,179,12,142,39,139,152,178,132,191,212,203,210,223,236,165,190,1,
124,136,149,185,1,221,216,235,37,234,198,88,76,49,233,244,14,64,212,112,
100,173,25,12,223,155,220,180,48,24,37,23,10, };
static unsigned short stb__courier_bold_22_latin1_t[224]={ 1,20,119,20,1,37,82,119,1,1,109,
96,109,119,119,1,37,68,68,53,68,53,53,53,53,53,82,82,95,119,95,
68,37,95,82,68,82,82,95,68,82,95,68,95,95,82,95,82,95,37,82,
67,82,82,95,96,96,96,96,1,1,1,119,119,119,109,53,109,53,109,82,
53,82,67,1,82,82,109,109,109,53,53,109,109,68,109,109,109,109,53,109,
1,1,1,119,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,
68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,1,1,20,
82,109,82,1,20,119,68,119,109,109,119,68,119,119,53,109,95,119,53,37,
119,119,109,119,109,68,68,68,37,20,20,20,37,20,1,95,20,20,20,20,
20,20,20,20,20,82,37,1,1,1,20,1,109,20,1,1,1,1,20,96,
37,37,37,37,68,37,20,95,68,37,37,37,37,68,53,53,68,37,82,37,
37,37,68,53,95,82,53,53,53,53,1,1,1, };
static unsigned short stb__courier_bold_22_latin1_a[224]={ 186,186,186,186,186,186,186,186,
186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,
186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,
186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,
186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,
186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,
186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,
186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,
186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,
186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,
186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,
186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,
186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,
186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,
186,186,186,186,186,186,186,186, };

// Call this function with
//    font: NULL or array length
//    data: NULL or specified size
//    height: STB_FONT_courier_bold_22_latin1_BITMAP_HEIGHT or STB_FONT_courier_bold_22_latin1_BITMAP_HEIGHT_POW2
//    return value: spacing between lines
static void stb_font_courier_bold_22_latin1(stb_fontchar font[STB_FONT_courier_bold_22_latin1_NUM_CHARS],
                unsigned char data[STB_FONT_courier_bold_22_latin1_BITMAP_HEIGHT][STB_FONT_courier_bold_22_latin1_BITMAP_WIDTH],
                int height)
{
    int i,j;
    if (data != 0) {
        unsigned int *bits = stb__courier_bold_22_latin1_pixels;
        unsigned int bitpack = *bits++, numbits = 32;
        for (i=0; i < STB_FONT_courier_bold_22_latin1_BITMAP_WIDTH*height; ++i)
            data[0][i] = 0;  // zero entire bitmap
        for (j=1; j < STB_FONT_courier_bold_22_latin1_BITMAP_HEIGHT-1; ++j) {
            for (i=1; i < STB_FONT_courier_bold_22_latin1_BITMAP_WIDTH-1; ++i) {
                unsigned int value;
                if (numbits==0) bitpack = *bits++, numbits=32;
                value = bitpack & 1;
                bitpack >>= 1, --numbits;
                if (value) {
                    if (numbits < 3) bitpack = *bits++, numbits = 32;
                    data[j][i] = (bitpack & 7) * 0x20 + 0x1f;
                    bitpack >>= 3, numbits -= 3;
                } else {
                    data[j][i] = 0;
                }
            }
        }
    }

    // build font description
    if (font != 0) {
        float recip_width = 1.0f / STB_FONT_courier_bold_22_latin1_BITMAP_WIDTH;
        float recip_height = 1.0f / height;
        for (i=0; i < STB_FONT_courier_bold_22_latin1_NUM_CHARS; ++i) {
            // pad characters so they bilerp from empty space around each character
            font[i].s0 = (stb__courier_bold_22_latin1_s[i]) * recip_width;
            font[i].t0 = (stb__courier_bold_22_latin1_t[i]) * recip_height;
            font[i].s1 = (stb__courier_bold_22_latin1_s[i] + stb__courier_bold_22_latin1_w[i]) * recip_width;
            font[i].t1 = (stb__courier_bold_22_latin1_t[i] + stb__courier_bold_22_latin1_h[i]) * recip_height;
            font[i].x0 = stb__courier_bold_22_latin1_x[i];
            font[i].y0 = stb__courier_bold_22_latin1_y[i];
            font[i].x1 = stb__courier_bold_22_latin1_x[i] + stb__courier_bold_22_latin1_w[i];
            font[i].y1 = stb__courier_bold_22_latin1_y[i] + stb__courier_bold_22_latin1_h[i];
            font[i].advance_int = (stb__courier_bold_22_latin1_a[i]+8)>>4;
            font[i].s0f = (stb__courier_bold_22_latin1_s[i] - 0.5f) * recip_width;
            font[i].t0f = (stb__courier_bold_22_latin1_t[i] - 0.5f) * recip_height;
            font[i].s1f = (stb__courier_bold_22_latin1_s[i] + stb__courier_bold_22_latin1_w[i] + 0.5f) * recip_width;
            font[i].t1f = (stb__courier_bold_22_latin1_t[i] + stb__courier_bold_22_latin1_h[i] + 0.5f) * recip_height;
            font[i].x0f = stb__courier_bold_22_latin1_x[i] - 0.5f;
            font[i].y0f = stb__courier_bold_22_latin1_y[i] - 0.5f;
            font[i].x1f = stb__courier_bold_22_latin1_x[i] + stb__courier_bold_22_latin1_w[i] + 0.5f;
            font[i].y1f = stb__courier_bold_22_latin1_y[i] + stb__courier_bold_22_latin1_h[i] + 0.5f;
            font[i].advance = stb__courier_bold_22_latin1_a[i]/16.0f;
        }
    }
}

#ifndef STB_SOMEFONT_CREATE
#define STB_SOMEFONT_CREATE              stb_font_courier_bold_22_latin1
#define STB_SOMEFONT_BITMAP_WIDTH        STB_FONT_courier_bold_22_latin1_BITMAP_WIDTH
#define STB_SOMEFONT_BITMAP_HEIGHT       STB_FONT_courier_bold_22_latin1_BITMAP_HEIGHT
#define STB_SOMEFONT_BITMAP_HEIGHT_POW2  STB_FONT_courier_bold_22_latin1_BITMAP_HEIGHT_POW2
#define STB_SOMEFONT_FIRST_CHAR          STB_FONT_courier_bold_22_latin1_FIRST_CHAR
#define STB_SOMEFONT_NUM_CHARS           STB_FONT_courier_bold_22_latin1_NUM_CHARS
#define STB_SOMEFONT_LINE_SPACING        STB_FONT_courier_bold_22_latin1_LINE_SPACING
#endif

