// Font generated by stb_font_inl_generator.c (4/1 bpp)
//
// Following instructions show how to use the only included font, whatever it is, in
// a generic way so you can replace it with any other font by changing the include.
// To use multiple fonts, replace STB_SOMEFONT_* below with STB_FONT_arial_bold_18_latin1_*,
// and separately install each font. Note that the CREATE function call has a
// totally different name; it's just 'stb_font_arial_bold_18_latin1'.
//
/* // Example usage:

static stb_fontchar fontdata[STB_SOMEFONT_NUM_CHARS];

static void init(void)
{
    // optionally replace both STB_SOMEFONT_BITMAP_HEIGHT with STB_SOMEFONT_BITMAP_HEIGHT_POW2
    static unsigned char fontpixels[STB_SOMEFONT_BITMAP_HEIGHT][STB_SOMEFONT_BITMAP_WIDTH];
    STB_SOMEFONT_CREATE(fontdata, fontpixels, STB_SOMEFONT_BITMAP_HEIGHT);
    ... create texture ...
    // for best results rendering 1:1 pixels texels, use nearest-neighbor sampling
    // if allowed to scale up, use bilerp
}

// This function positions characters on integer coordinates, and assumes 1:1 texels to pixels
// Appropriate if nearest-neighbor sampling is used
static void draw_string_integer(int x, int y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0, cd->t0); glVertex2i(x + cd->x0, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t0); glVertex2i(x + cd->x1, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t1); glVertex2i(x + cd->x1, y + cd->y1);
        glTexCoord2f(cd->s0, cd->t1); glVertex2i(x + cd->x0, y + cd->y1);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance_int;
    }
    glEnd();
}

// This function positions characters on float coordinates, and doesn't require 1:1 texels to pixels
// Appropriate if bilinear filtering is used
static void draw_string_float(float x, float y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0f, cd->t0f); glVertex2f(x + cd->x0f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t0f); glVertex2f(x + cd->x1f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t1f); glVertex2f(x + cd->x1f, y + cd->y1f);
        glTexCoord2f(cd->s0f, cd->t1f); glVertex2f(x + cd->x0f, y + cd->y1f);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance;
    }
    glEnd();
}
*/

#ifndef STB_FONTCHAR__TYPEDEF
#define STB_FONTCHAR__TYPEDEF
typedef struct
{
    // coordinates if using integer positioning
    float s0,t0,s1,t1;
    signed short x0,y0,x1,y1;
    int   advance_int;
    // coordinates if using floating positioning
    float s0f,t0f,s1f,t1f;
    float x0f,y0f,x1f,y1f;
    float advance;
} stb_fontchar;
#endif

#define STB_FONT_arial_bold_18_latin1_BITMAP_WIDTH         256
#define STB_FONT_arial_bold_18_latin1_BITMAP_HEIGHT        104
#define STB_FONT_arial_bold_18_latin1_BITMAP_HEIGHT_POW2   128

#define STB_FONT_arial_bold_18_latin1_FIRST_CHAR            32
#define STB_FONT_arial_bold_18_latin1_NUM_CHARS            224

#define STB_FONT_arial_bold_18_latin1_LINE_SPACING          12

static unsigned int stb__arial_bold_18_latin1_pixels[]={
    0x707653a2,0x3ec80019,0xba88074c,0x4c83cccc,0x2e0565c4,0x0e6404cc,
    0x20020880,0x264c02ca,0xca880eb8,0x666540bc,0x55e5cc00,0x540e5c00,
    0x32e1d74c,0x99300003,0x00cc8800,0x00002cb8,0x12a88300,0xfe83fabf,
    0x417e6001,0xffff884f,0x17cc6fff,0xe8fffff3,0x3bee07ff,0xddff9806,
    0x0077c404,0x3f213fba,0x7ffffcc0,0x07fff63f,0x3bbfff62,0x0bfa04ff,
    0x43f2dff5,0x2fd04ffc,0x0bf202fb,0x1003fb80,0x2bee00df,0x83e005f8,
    0x0c4266fa,0x4a8007fa,0xffb03f20,0xe87ff9ff,0x3fd9fec7,0x6c406bfa,
    0x5dc03e8b,0x6d401dc9,0x75cf5c00,0xff107e40,0x21ffb57f,0x7441fe98,
    0x04fb81be,0x0bfd8397,0x1bea21f9,0x402eab6c,0x00f6004c,0xd5003d30,
    0x26009d15,0x0d5674c5,0x4cff46a6,0x4c1aa81b,0xff17e61a,0xf51fafff,
    0x808efd89,0x32a201fe,0x654402bc,0x81cb82bc,0x903971cc,0xfd83f239,
    0x7f43fe86,0x5cc3ba21,0x507f3550,0x321fd815,0x32e3fc0f,0x3971cc81,
    0x95103990,0xca880579,0x654402bc,0x6dc402bc,0x45fc8a83,0xffbfd2fe,
    0x22fe41bf,0x363fc2fe,0xc8fd7fff,0x17ffcc2f,0xffa80ff4,0xa80dffff,
    0x0dffffff,0x4bfe0ffa,0x92ff83fe,0x0427fc1f,0x47f21fe8,0x96fdfffc,
    0xfe85fd0b,0x8ff03f21,0xd2ff83fe,0xa85ff07f,0x0dffffff,0xffffffa8,
    0xffffa80d,0x7ec40dff,0x45fc3fff,0x74ff30ff,0x23feabff,0x0ff30ff8,
    0x7ffd41fd,0x21fd8fd7,0x44ffefe8,0xfff981fe,0x4c5ffdac,0xffdacfff,
    0x3fe0ffa5,0x5ff07fd2,0x17fc43f2,0x9f43fd00,0x4ff88cfb,0xe85fd0f5,
    0xff03f20f,0x7fc1ff41,0x5ff07fd2,0x6d67ffcc,0x7ffcc5ff,0x4c5ffdac,
    0xffdacfff,0x7fdefec5,0x97f4fe0f,0xa93fa4fb,0xfb97f46f,0x6cc2fd84,
    0x0fe8fd7f,0x2ffdd3ea,0x1dfb03fd,0x3f62ffa8,0xe97fd40e,0xfd2ff83f,
    0x8a65ff07,0x3a001ff8,0x3fa5f11f,0x07ccff60,0x37dc4bfa,0x1bf903f2,
    0x4bfe0ffa,0x22ff83fe,0x7fd40efd,0xf503bf62,0x2077ec5f,0x3ff12ffa,
    0x3e213597,0x87fabf74,0x83fe22fe,0x903fd5fb,0x3f5fa07f,0x0ffa8ff1,
    0x07fa3ff5,0x27fc13fe,0x53fe09ff,0xd2ff83fe,0x405ff07f,0xfd0081ff,
    0x13e23ea3,0x3a1ae3fb,0xc83ff72f,0xeaff440f,0xfd2ff83f,0x7fc5ff07,
    0x7fc9ff04,0x7fc9ff04,0x3e69ff04,0x2bf303b7,0x746f9ff8,0xf11fe23f,
    0x3f20df3f,0xf1fafd02,0x91eff88f,0xf107fa3f,0x457f605f,0x2bfb02ff,
    0xd2ff83fe,0x405ff07f,0x43fe84fe,0x3eef71fe,0xd07d3fc3,0x90ffee5f,
    0xd4ff981f,0x3a5ff07f,0xf12ff83f,0x457f605f,0x2bfb02ff,0xbfb02ff8,
    0x205e7fe2,0x3fbf66fa,0xbf72ff43,0x207fdfb0,0x3afd01fd,0x3a607f47,
    0x3fa7fbff,0xc80ffcc1,0x203ff36f,0xf07fd6fc,0x3e0ffa5f,0x7d41d72f,
    0x83ff70bf,0xf33f31fe,0x0fcb7dcb,0x1fe62fe8,0x22fd81f9,0xd2ff83fe,
    0x265ff07f,0x2df901ff,0xdf901ff9,0x7e407fe6,0x7f577fe6,0x7fccdf71,
    0x6ffff40f,0xfff982ff,0x3a01fd00,0x81fd8fd7,0x3a1fffd8,0x81ffc41f,
    0x07ff15fe,0x41fed7fa,0xf07fb1ff,0xfb03f23f,0xd09fffff,0xcfe9fc3f,
    0x02fefffc,0x20fe85fd,0xb07fc0fc,0x363ff07f,0xf11ff83f,0x457fa07f,
    0x2bfd03ff,0xbfd03ff8,0x2ff77fdc,0x86fe8ff7,0x02efebfe,0x06f81bfa,
    0x3ee3f5fa,0xe93fee03,0x985ff81f,0x217fe3ff,0x09fb3ff9,0x213f63ff,
    0x701f91ff,0x3a07bffd,0x3263b61f,0x31cee9ce,0x7f42fe81,0x8ff03f21,
    0xb1ff84fd,0x7c3ff09f,0x23ff985f,0x3ff985ff,0x3fe617fe,0x067ffdc3,
    0x83fe8ff7,0xfd0011fe,0xe80bea07,0x45f88fd7,0x74df50cb,0x0cffb81f,
    0x7dc1ffd5,0x1ffd50cf,0xffb87ff2,0x7dc3ff90,0x2a01f90f,0x87fa01ee,
    0x6c401ee8,0x360ffc0e,0xff03f21f,0x3ee1ffc8,0x5c3ff90f,0x33fee0ff,
    0x5c1ffd50,0xffd50cff,0xa867fdc1,0x0ecc0ffe,0xfda89988,0x401fe80f,
    0x900ffda8,0x0fd7e80f,0xdaefc8f9,0x20affa3f,0xfffefffd,0xfefffd82,
    0x3ffe22ff,0x3e24fffe,0x24fffeff,0x436c00fc,0x7441ffa9,0xba989acf,
    0x3ff660ef,0xfc9f7e40,0xf88dfb50,0x24fffeff,0xfffefff8,0xfefffd84,
    0xfffd82ff,0xfd82fffe,0x82fffeff,0xfff3003c,0x3007fa05,0x3e205fff,
    0x87ebf403,0x3ff623f8,0x1fffa0df,0x0effff5c,0x3bfffd70,0x9ffffb30,
    0x9ffffb30,0xdd980fc8,0x1fffd82e,0xfffffb90,0x5ffc817b,0x1f96ff98,
    0x3660bff2,0xd984ffff,0x2e04ffff,0x201dfffe,0x01dfffeb,0x077fffae,
    0x15500074,0xaa800c40,0x1002a200,0x40d40623,0x199880a8,0x00800080,
    0x04400220,0x01310298,0x8800ccc4,0x00d4401a,0xa98a6531,0x10008800,
    0x80008001,0x00008000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0xb801e540,0x0059701c,
    0x088200a0,0x264c0000,0x00664400,0x32600104,0x01654003,0x39701991,
    0x01cb8000,0x26000000,0x9951003d,0x5e5c4057,0x203eb800,0x1bb304ec,
    0x26007ec0,0x1fdf505f,0x223fcfea,0xdf700bfc,0xcb7c05d9,0x02fc801f,
    0x6c01fdc0,0x4400fcef,0xf1003fef,0x417e401d,0xf980fefa,0x0df10fd4,
    0x95100fae,0xd812e159,0x7fd400d8,0x440dffff,0x201fffff,0x37ea05f8,
    0x407f502f,0x82dc03d8,0xd34d8cd8,0xfffa9765,0xdaad80ff,0x1ebaec04,
    0xd8009900,0x7b73b003,0x1b91b700,0xd801b500,0x3d8cd883,0x20d93e88,
    0x40d681e9,0xeffffffa,0x01f7203f,0xfb59fff3,0xd8cfc8bf,0x8032604f,
    0x1d40973c,0x3333332e,0x9999972c,0x81cb8599,0x7dfec1cb,0x20b2e4fd,
    0x099501cb,0x2e026540,0x2059903c,0x32a004ca,0x0132a004,0x6665c397,
    0x9972cccc,0xb8599999,0x303eb81c,0xff959fff,0x02ffe80f,0xff503bf6,
    0x3fd97ec5,0x20157510,0x5540aba8,0x3ffa6a60,0xfd5fffff,0x8bffffff,
    0x42fe82fe,0x741378ef,0x817f40ff,0xfd002ffe,0x17fd405f,0x7f403fee,
    0x5ffd002f,0x80bffa00,0x3fffa2fe,0xffd5ffff,0xe8bfffff,0x055d442f,
    0x3fe637ec,0xbfff301f,0xff827fc0,0x3fe2bfa4,0xfffffa80,0x7ffffd42,
    0xdfb8bfa2,0xaaaaadfe,0x5555bfd1,0xe82fe835,0x83e7f42f,0x17f45ffe,
    0x402fffcc,0x6c05fff9,0x40ffe26f,0x9805fff9,0xf9805fff,0x8bfa05ff,
    0xaaaaadfe,0x5555bfd1,0x2a2fe835,0x7c2fffff,0x3fbbe24f,0x1ffbf904,
    0x3605ff10,0x3ee7fa5f,0xf935fd06,0xfc9afe8b,0xdfb8bfa5,0x1ff403fe,
    0xfe82fe80,0x067ffd42,0xfe87fffa,0x0ffdfc82,0x07fefe40,0x3f67ff10,
    0x3ff7f206,0x7fefe400,0x7fefe400,0x7f45fd00,0x801ff403,0x26bfa2fe,
    0x47fe65fc,0x85fc8ee8,0x84fe9ff8,0xdf900ff9,0x1ffd4ff4,0x10df7108,
    0x2fe9bee2,0x00ffb7ee,0x3fa007fd,0xe982fe82,0x3bfa2fff,0xf10bfa6f,
    0x4409fd3f,0x404fe9ff,0x01ffaffb,0x09fd3ff1,0x27f4ffc4,0x9fd3ff10,
    0x3fe8bfa0,0xe801ff40,0x6fb8842f,0x87f43fe6,0x56fb86fc,0x07ff10ff,
    0x91fe97f6,0xfec885ff,0x7f6447ff,0xb8bfa7ff,0xfffffedf,0xffffd1ff,
    0x2fe83fff,0x9f102fe8,0x7fdff4df,0x6fb85fd3,0xb7dc0ff5,0xffe807fa,
    0x55bee04f,0x55bee07f,0x55bee07f,0x745fd07f,0x1fffffff,0xfffffffd,
    0x3222fe83,0x3e27fffe,0x3fa1fdaf,0xff13fe85,0x56cbff05,0x87fa3ff8,
    0x33fe27fc,0x3fe27f99,0x3fa7f99c,0x3ffb7f22,0xfd1fffff,0x83ffffff,
    0x22fe82fe,0x1fd789a8,0x23feabfa,0x89ff42fe,0x27fd02ff,0x7cc02ff8,
    0x89ff406f,0x27fd02ff,0x7fd02ff8,0x3fa0bfe2,0x3fffffa2,0xffffd1ff,
    0x2fe83fff,0xff339ff1,0x222ffff8,0x6ffcc3ff,0xfb85ffcc,0xffffd8bf,
    0x3ff07fa0,0x27fa9bea,0xe9fea6fa,0x3fb7f63f,0x801ff403,0x22fe82fe,
    0x4dd79ff8,0xfdbfb2fe,0x666ffcc5,0xdff985ff,0xe805ffcc,0x37fe603f,
    0xf985ffcc,0x85ffccdf,0xffccdff9,0x3fa2fe85,0x801ff403,0x54df52fe,
    0x32ffdc7f,0xffc81ffb,0x80ffffff,0xfffefffd,0x6fe57f45,0x2f3fe26f,
    0x33fe27ff,0x3ff27ffb,0x3fedffdc,0xe801ff40,0x642fe82f,0x3a3fefff,
    0x5ffff12f,0x7fffffe4,0x7ffe40ff,0x400fffff,0x3ff203fd,0x40ffffff,
    0xfffffffc,0x7fffe40f,0x7f40ffff,0xfd00ffa2,0x44bfa007,0x47ffbcff,
    0xffeffffb,0xaacff82f,0xd704feaa,0x1dffdfff,0x3bfaa7fa,0x757ff5c1,
    0x2bffae1f,0xbffb11fe,0x807fdbf5,0x5fd003fe,0xfc885fd0,0x717f42ef,
    0x67fc5fff,0x44feaaaa,0xeaaaacff,0x01fec04f,0xd55559ff,0xaacff89f,
    0x7fc4feaa,0x4feaaaac,0x07fd17f4,0xfd003fe8,0x757ff5c5,0xfb59f31f,
    0xff503bff,0x8201fee0,0x200406d8,0x01001000,0x3ffffffa,0xfffffd7f,
    0x82fe8fff,0x20f102fe,0x97ff42fe,0x4ff707fa,0x0ff707fa,0xff503fd8,
    0x7fa9fee0,0x3fd4ff70,0x17f47fb8,0xfffffffd,0x3fffffaf,0x417f47ff,
    0x20041400,0x5ff104fd,0x00000000,0x3fa00000,0xd7ffffff,0xffffffff,
    0x2fe82fe8,0x0bfa0910,0x13f65ff5,0x4fd97fc4,0x6c05ff10,0x209fb03f,
    0x09fb2ff8,0x27ecbfe2,0x3fa2ff88,0x3fffffa2,0xffffd7ff,0x2fe8ffff,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x22000000,0x29d1050a,
    0x03eb80ec,0x76407d90,0x1b67d103,0x804c6644,0xb8800ed8,0x407d900a,
    0x04c81cb8,0xd90188d4,0xa7405d31,0x02a881eb,0x01cc0b26,0xa80aa075,
    0xb8805503,0x1bd3002c,0x3006f440,0x74c7645d,0x87efff83,0x201fb5f8,
    0x2fc400fd,0x303fbf70,0xf981fa9f,0x0fea00ef,0x2ffffd88,0x3b607e88,
    0x80be61fd,0xb02ffffb,0x2607f51f,0xf301fb3f,0x0fefea0f,0x1bf2207a,
    0x3f2203e2,0x2600f886,0xd806feff,0x00fe401f,0xa8fd87ee,0x0a89c44f,
    0x88062130,0x2025401c,0x4260773c,0xdfbb1018,0x7ec07500,0x880ffbae,
    0x7f19f01c,0x542e036c,0x04c46202,0x20df2fb8,0x3ea206e8,0xdc982dc3,
    0xb9303d86,0xfd807b0d,0x1c805f93,0x7d802c80,0x880988c4,0x75100aba,
    0x2aea2015,0x100ae200,0x02b88057,0x1027dccc,0x3ff10377,0x15c404d4,
    0xf35f9fcc,0x03771005,0xcb81bb88,0x03efcdfe,0x23fc8055,0x236400f8,
    0x4c6c8079,0xfb5fc807,0x54c15505,0x401bb881,0xa982aa5f,0x3ffffea1,
    0x7ffffd42,0x7ffffd42,0x77ffecc2,0x77ffecc0,0x77ffecc0,0xfffffc80,
    0x5ffffd82,0x6cc03fcc,0x67c0efff,0xb00db3f9,0x360bffff,0x7f45ffff,
    0x85ffffff,0x327307f8,0x1b201327,0xe8d9005d,0xfeff9802,0x7dc5fd05,
    0x2ffffec5,0x8bfa3f88,0x26bfa5fb,0x4d7f45fc,0x4d7f45fc,0x4e7f45fc,
    0x4e7f45fc,0x4e7f45fc,0x67fe45fc,0x77e45ffc,0x3e62ffbb,0x33fa020f,
    0x7fdc5fc9,0x6402f98e,0x42ffbbef,0x2ffbbefc,0x203f75f8,0xfdf105fd,
    0x32003e67,0x36401aa6,0x3fa200d5,0xb8bfa05f,0x2efbf25f,0x21fa82ff,
    0x117ee2fe,0x4421bee2,0xf71086fb,0xff13fccd,0xff89fe61,0x7fc4ff30,
    0x7dc5ff10,0xbf517fc7,0x3fd17fc4,0x0ff89fe6,0x5d4db0c4,0xbf517fc0,
    0x17ea2ff8,0x6c1f67f3,0xb04c00ef,0x20881c87,0x1015731e,0x30720f41,
    0x531fffff,0xbf717f41,0x0bf517fc,0x2e2fe8f9,0x3ffb225f,0x7ff6447f,
    0x7ff6447f,0x3bbfea7f,0xdff51ffe,0x3ea3ffdd,0x31ffeeef,0x87fc41ff,
    0x07fc47f9,0x4bfdbff9,0xffeeeffa,0x77cbe601,0xf11fe67e,0xf11fe61f,
    0x337f6e1f,0x3bf23cff,0x36354000,0xf9adc02f,0x22dc05ec,0xea7f43fd,
    0x3fa2feef,0x3fcd7ee2,0x8bd03fe2,0x457ee2fe,0x27f99cff,0x7f99cff8,
    0x3e673fe2,0x2aabbea7,0x55df50aa,0x3bea1555,0xf10aaaaa,0x887fcc1f,
    0x21fe60ff,0x2a0cffda,0x0aaaaaef,0x557cdb60,0x4c1ff11f,0x983fe27f,
    0x3ffffa7f,0x1ff15fff,0x71740098,0x87c405fd,0x7c40f928,0xf88ffae0,
    0x8ffff10f,0x457f22fe,0x11fe60ff,0x322fe87f,0x7d4df55f,0x7fa9bea7,
    0x47fa9bea,0xf85910ff,0xff85910f,0x3fd85910,0x47ff1bf2,0x3bd704fc,
    0x0b221ff0,0x33f72f98,0xf91ffc7f,0x3f23ff89,0x3ee7ba24,0xa83fe09b,
    0xfa96e06f,0x213202f8,0xa93202fc,0x0ffc3f8e,0x7f41dff7,0x3ff97f63,
    0x83f513f2,0x457f63fe,0x27ffbcff,0x7ffbcff8,0x3fef3fe2,0x7f677ec7,
    0x7f677ec4,0x7f677ec4,0x7f77fd44,0x777fdc2f,0x427401ff,0x04fecefd,
    0xfaaf99b6,0x3fbbfee1,0x777fdc1f,0x5d7e21ff,0xcbefb81f,0x43f103ff,
    0x981ffffd,0x300fe40f,0x7fffec1f,0x3fb7ff21,0xff90efff,0x7dcbffb9,
    0x641ffeef,0xfdcffc87,0x2bffae5f,0x3ffae1fe,0x3fae1fea,0x7e41feaf,
    0xfff904ff,0x13fff209,0x8177fe4c,0x500cffea,0x3f203ddb,0x0be604ff,
    0xfd50dffd,0x3faa019f,0xd9fcc0cf,0x3fffae07,0x33113203,0xf70f607f,
    0x10f60fff,0xff907f33,0x449d35ff,0x45fadffd,0xe80cffea,0xadffd886,
    0x0100085f,0x00080020,0x44002001,0x31001000,0x26002001,0x00803302,
    0x10988020,0x50031001,0x82805401,0x0502aaa9,0x002200a8,0x98010004,
    0x00000200,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0xee980000,0x0d4c2a80,0x2200774c,0x02ea202b,
    0x25513730,0x5403732a,0x2202aaaa,0x4c00acca,0x4c1aa82b,0x801b981a,
    0x400acca8,0x654401b9,0x403d80bc,0x88006640,0xca800bcb,0x221e4c02,
    0x65c1cdca,0xa881cc81,0x5d902bcc,0x445fee88,0x741fec7f,0xffb106ee,
    0xffff30bf,0x9fffb10b,0x3ff3fadf,0xffff80df,0x77bf707f,0x3ff605fd,
    0xd17f21ff,0x7fffcc5f,0x77df700e,0xffd505fd,0x3ffe60bf,0x836c3fff,
    0x00ffc3d8,0x17ffff4c,0xf5013f20,0x7ffff44d,0x3e0ffa4f,0x7fffd42f,
    0x37440dff,0x8872632a,0x261fec7f,0xfc81c98c,0x7f43fead,0x7e42feac,
    0xfd6ffbae,0x987fd57f,0xb84cccef,0x5c2f980f,0x225fcaef,0xd8ff30ff,
    0xb83fd9cf,0x742f980f,0x442ffbcf,0xffdabfff,0x3f603ee0,0x6c00ffc3,
    0x406fb8df,0x37d404fc,0xff935dfb,0x3fe0ffa1,0x2b3ffe62,0x0c885ffd,
    0x88d4c155,0x441fec7f,0x23ff01bb,0xf92e46fa,0x3f22fe89,0x37d49fd6,
    0x1f3013ea,0x3e69dffb,0x42b8bfa1,0xf89f72fe,0xf98bf30f,0x3e69ff90,
    0x37e4df11,0x8ffa1bf6,0x6ff4c2f9,0x80d47fe2,0x802b21ff,0xf52984fc,
    0x3b617f4d,0x5ff07fd2,0x3ea077ec,0xfe85542f,0x7fc57ee2,0xffb0ff60,
    0x0ff88bff,0x7f4c0ff3,0xfa83fe62,0x7fc45fd6,0x02f37f20,0x7d4e6d32,
    0x23fe2791,0x3abf7019,0x645fec1f,0x9eba643f,0x3ea7b2f9,0x9ff1fea5,
    0xfb13e010,0x7e7fcfff,0x0ff40dff,0xe993f200,0x2e6fdeff,0x7fd01cff,
    0x27fc5ff0,0x97f44ff8,0x457ee2fe,0xc8ffa1ff,0x22ffbbef,0x03fe67f9,
    0xff10ffea,0x3feb7dc1,0xfffb1fe2,0x9b2e85ff,0x4d6a1f53,0x41effdff,
    0xb06f9ff8,0x25d09fff,0x3e2b504e,0x7c43ff27,0x31b6002f,0x7ffc5bfd,
    0x3ae3feaa,0xf9004cef,0x7dcf7f49,0x3fffe26f,0x20ffa0cf,0x05ff12ff,
    0x25fd17f6,0x457ee2fe,0x47ff13ff,0x997ea2ff,0x203fe27f,0x7fc1efda,
    0x2ff5bfa2,0x8bec8bf7,0xed8fc6fc,0x7cda62ff,0xd85fc9ef,0xffa83fef,
    0xe8fc1ffe,0x77ecd303,0xff10fffd,0x207dc003,0x527fc3fd,0x7ffff4df,
    0x229f9007,0x21bf61ff,0xd1ffffeb,0x265ff07f,0x8df901ff,0x5c5fd2fe,
    0xdbfff15f,0x11fe67ff,0x43fe61ff,0x37d407f9,0x3ffb7fee,0xffbdffd6,
    0x6c3ff005,0x5c9d17b3,0x7fc5ff34,0x407ffcc0,0xd8df51ff,0x4b8e4b93,
    0x3fefbee2,0x40207fe0,0x21fec2f9,0x43fe22ff,0x0019efa8,0x71fe69f9,
    0x7fdc40df,0x3ff07fb4,0x7f40ffe2,0x2fe97f45,0x67fc57f2,0xff13fdef,
    0xff13fcc1,0x4331fea1,0x7f5c0ff8,0xd7fd6fbe,0xfd0605df,0xf53dadc5,
    0x0ffc4ba3,0x0dfd03fd,0x20ff8df3,0x1fbbf35b,0x47fa80ba,0x83fe84fe,
    0x3e1fec4f,0xb83fe63f,0xd8f6a05f,0x641ff14f,0xb81fd36f,0xff09fb6f,
    0x7cc2ffc3,0xfe97f43f,0xbfc57f63,0xfc8ffe00,0x5fb97f44,0x37d43fe2,
    0x7f5bea10,0x47fe2011,0x567447f8,0xe83b26a1,0x3a0ff14f,0x30ff883f,
    0x2a4e88df,0x76c1d90b,0xffa89f90,0xd03ff70b,0x7fc3fd8d,0xff99fee5,
    0x8efa8209,0x8bfa3ff8,0x893fa6fe,0x43ff95fe,0x3fee0ffb,0x81ffd50c,
    0xb9ff92fe,0x01fe2bff,0x3ffbbfee,0x7feffdc1,0x7feffe41,0xfd6fa802,
    0xfbff7003,0x439d109f,0x7fd40ed9,0x36a24ffe,0xbffb00ff,0x39d107ff,
    0x3f6076d4,0xfd80ffee,0x904fffff,0x3e5efc8f,0x23ffdeff,0xfefffffd,
    0xdfffff10,0x7f6ffdc1,0x3bffea6f,0xfff12fff,0xfb09fffd,0x05fffdff,
    0x3ff625fd,0x0ff15fad,0x033ffaa0,0x440effdc,0x5002dfeb,0x4007fadf,
    0x2204ffeb,0x00ceffec,0x4c17dff5,0x32202fff,0x32203efe,0x880ceffe,
    0x2e01effd,0x2a03dffe,0x43ffe61f,0x42efe9ff,0xfffecdfa,0x077ff6a3,
    0x1bebbfaa,0x83dffff7,0x04ffffd9,0x077fffae,0x300217f4,0x20008003,
    0x88001000,0x10003109,0x20008800,0x8002aa00,0x80044000,0x00220008,
    0x0200404c,0x80040300,0x20031000,0x00040008,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00bcba88,0x815445cc,0x2ed804ca,0x6c40072e,0xca85971e,0x99999973,
    0x802ee209,0x82abcccb,0x832e01a9,0x555511cb,0x472e1555,0x4ba600cc,
    0x32e3975d,0x98395001,0x905972cc,0x664c0199,0xcccccccc,0xcb803550,
    0x5c0abccc,0x666442cc,0x39705970,0xfffffe88,0x7fff4c0e,0x5ffd06fc,
    0xe87efe40,0x45f7003f,0x4bfe26fb,0xfffffffe,0x3ffffa20,0xffffe80e,
    0x17ee0dff,0x5fd07fd4,0x3fffffea,0x3fe5fd1f,0xb7cfea01,0x005fd2fe,
    0x7fcc5ff3,0xfd87fb4f,0x7ffec02f,0x0fffffff,0xffe809fb,0x3a3fffff,
    0x7ffdc6ff,0xfe81ffd1,0x2b3ffa22,0x77f44ffb,0xf986ffb9,0x159105ff,
    0x2ab7fa59,0xff05700a,0xdfe9bee5,0x7e42aaaa,0xe83fd89d,0x5ffcbadf,
    0x3fe213aa,0x64cbfa0f,0xd0ffdccc,0x8807fe5f,0x472e1309,0x7fd402fe,
    0xfb17ee2f,0x2017fe47,0xacfe9ff9,0x13f62aaa,0xb555bfd0,0x07fff4ff,
    0x3fa3fffb,0xf917f45f,0x10efa81f,0x437ec3ff,0x200ffdfc,0x3fffa0aa,
    0x0aa84fff,0x22ffb7dc,0x0fd803fe,0x0ffa1fe2,0xfb005ff3,0x017f41ff,
    0xf97f45fb,0xa815511f,0x7f42aa0a,0x7fe41552,0x5bfb52ff,0x7fdcff61,
    0xfd4fd803,0x404fd805,0x8ffc43fe,0x3fe2fefe,0x3fffd1fe,0x09fd17f4,
    0xdf71fe60,0x4fe9ff88,0xefe8bfa0,0x743ffdcc,0x7e7fc42f,0x8001ff46,
    0x83fe86fb,0x5fdc04fd,0x40bfa0ff,0xf97f44f9,0xfd0bfd1f,0xcfe97f45,
    0x19b1fffe,0x3fffa5fd,0xff77fb1f,0x21ff1007,0x27ec02fe,0xff70ffa0,
    0xf9afe7f4,0xfdfd1fed,0x5ff17f4d,0x884cccc4,0x71bf20ff,0xe81feadf,
    0xf90ffa2f,0x32a2fe8b,0xd1cefffe,0x03dddddf,0x7541ffb8,0x17f22adf,
    0x41ff6f88,0x81fd02fe,0xfb3ff2fe,0xfe8bfa0d,0xfd35ffd2,0xb52fe829,
    0x3bf615bf,0xfc802fff,0x3fffffa5,0xd013f64f,0x3dffffff,0xfbbfd7f4,
    0xf7fd1feb,0x7c4bfa7f,0x3fffee1f,0x7f44ffa4,0xff89ff46,0x7f45fd02,
    0x3fa3fdc3,0x3fffff22,0xffffd3ff,0x7fd405ff,0x7fffff81,0xd04c57f2,
    0xfe83fe3f,0xfe85fa82,0x01dfdff2,0xd2fe8bfa,0x742fdc7f,0xfb13f22f,
    0x401ffdff,0x3ffa1ff8,0x3f64ffff,0x7ffff404,0x27fa4fff,0xfe9fd9fe,
    0x1ff55fd1,0x527fc5fd,0x7dc9ffdd,0x266fffef,0x5ffccdff,0x67f45fd0,
    0x745fea99,0x3f66622f,0x07fd099c,0x3a02fe80,0xf74fd83f,0x3e677eeb,
    0xd05fd0af,0x3e5fd03f,0xfd01ffff,0x2fe97f45,0x8bfa17ee,0x5ffec4fc,
    0x3f204ff8,0x02ffeeef,0x3fa027ec,0xfe9ff4c3,0xfd7fbfb9,0x6fecbfa3,
    0x41bf62fe,0x6775c4fd,0x3fff25fa,0xe80fffff,0x3ffffa2f,0x17f41fff,
    0xdddffdd7,0x8800ffa5,0x41ff407f,0x36bf73ff,0x4fffffff,0x20df05fd,
    0xf9fff2fe,0xfe8bfa0b,0x2fdc5fd2,0x89f917f4,0x0bfee4fd,0x3fffffe2,
    0x27ec02ff,0x3f20ffa0,0xfff33fd5,0x97f47fab,0x2a2ffff8,0x3fea1cff,
    0x4fb826a4,0x2aaab3fe,0x22fe84fe,0x0cdeeefe,0x3bae2fe8,0xfd2eeeff,
    0x40198007,0x3ff223fe,0x66655320,0x5fd2cffc,0x5fd05f98,0x417fcbfe,
    0x74bfa2fe,0x3a17ee2f,0xfb13f22f,0x5c0efe87,0xff9999ff,0x2027ec02,
    0xa7f443fe,0x27fff1fe,0x5c5fd1fe,0x7fd42fff,0x22ffffef,0x3febaefd,
    0x1fee0ff5,0x03fe8bfa,0x3f205fd0,0x2003fe83,0x3fa00ff8,0x23ffffff,
    0x83fe00fa,0x827dc2fe,0x2a3ff2fe,0x3a2fe86f,0x7dc5fd2f,0x3f22fe85,
    0x3e61fec4,0x741ff44f,0x2fffffff,0xfffffffb,0x3fffffa5,0x23fd1fff,
    0x23fd1ffe,0x17ff42fe,0x677ffed4,0x7ffffcc0,0x7c413f65,0xfd17f42f,
    0x40bfa007,0x03fe83fc,0xe803fe20,0x41deffff,0xd07fc009,0xd03fc85f,
    0xfe87fe5f,0x5fd17f43,0x85fb8bfa,0xb13f22fe,0x23ffb07f,0xffe80ffa,
    0xfb2fffff,0x25ffffff,0xdffffffe,0x3fe47fa1,0x50bfa3fd,0x000805ff,
    0x00001553,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x97000000,0x97055999,0x54057999,
    0x6665c331,0x7952cccc,0x33333322,0x40f2e0cc,0x819932cc,0x83970cc9,
    0x33220ccb,0x65c0b320,0xca81b982,0x2ccccccc,0x23990397,0x1abccccb,
    0x000175c0,0x10711550,0x5d440375,0x02ae200a,0x0aa82b88,0x000006a6,
    0x3ffffffa,0x3ffffa0d,0x7fdc0dff,0x3fffa2ff,0xdf95ffff,0x3fffffe2,
    0x0bfea1ff,0x2ff41ff7,0x44fd97fa,0x1fea1fff,0x5ff10df9,0x0f7fffcc,
    0xfffffff9,0x3e0ffa7f,0xfffffd2f,0x17e409ff,0x4cccccd4,0x7fffe442,
    0x7fffdc4f,0x7fffd40f,0x7ffec42f,0x7ffecc2f,0xfb8bfa0e,0x20003b35,
    0xaadfecc8,0x37fa5ffc,0x5c4ffcaa,0xadfe8550,0xdf91aaaa,0x7fdd5554,
    0xf137ec0f,0x92ffa87f,0x337dc1ff,0x2fe49fff,0xff507fe6,0x4fdacfd8,
    0x2ffeeaa6,0xf07fd1aa,0x2ab7fa5f,0xf901ffda,0x2a040305,0x24ffaaef,
    0x3fc89ef8,0x2fe4d7f4,0x3feebbf6,0x3f273fa0,0x5fb8bfa5,0x2007dff3,
    0x3fecffd9,0x3fe97fcc,0x115537e4,0x01ff4177,0xffc81bee,0xfb3ff881,
    0x3e7bf20d,0xb87fcc2f,0x0ffa6fef,0x49fb0ffa,0x0ff10ff8,0x3fa03fe6,
    0x7fd2ff83,0x775c7fd0,0x032eeeff,0x7647fa04,0x59ff10ff,0x6fb88401,
    0x09a87fe2,0x87fc4ff3,0xb97ee2fe,0xa80cfffe,0xfe9cfffe,0x7fd4fd83,
    0x33fa6fb8,0x7fd1ffff,0xf705fa80,0x57fdc07f,0xfff101ff,0x6c7fe0bf,
    0x07fe7faf,0x1ff89bf2,0xf983fcc0,0xf83fe80f,0xff07fd2f,0x7ffffe45,
    0x304033ff,0x3fe3aeff,0x33fffee1,0x7fff6441,0xf501fe67,0x23ffdddf,
    0x217ee2fe,0xf13fffc9,0x3fe85bff,0x5bfd5fc8,0x7f49ff75,0xfd4fe9af,
    0x23ffffff,0x5ff984fa,0x04fffe80,0xd807ffd4,0x3fd1ff3f,0x3fe60ff3,
    0xfd00ff51,0x203fe609,0xfffffffe,0xd99dfd2f,0xc9988ffd,0x403099bf,
    0x27ebfe60,0x764c0ff8,0x33fe26ff,0x3fe67f99,0x55df5020,0x8bfa1555,
    0x3fee05fc,0xd01bff34,0x3abf907f,0x0effffff,0xd5fb8ffa,0x3fffffff,
    0xdff10fe6,0x01bfe600,0x5c03ffea,0x7f76f9df,0xa7f40bf7,0x77ec04fd,
    0xd01ff300,0xffffffff,0x3fffffa5,0x417e403f,0x5fff0201,0x23c993ee,
    0x4df50ff9,0x8bfe27fa,0x443fe1fe,0xfd8ffa2c,0x6fffe4c5,0x5bfff911,
    0xa7ec1ff4,0x82cccefe,0x757ee2fe,0x21fc403f,0x3a000ffe,0x7ffc403f,
    0xf9ff305f,0x0ff7be67,0x1ff8efb8,0x9803ff60,0x83fe80ff,0x939fd2ff,
    0x2fc805ff,0xff702018,0x7c43ffbb,0x224fdbdf,0x47ffbcff,0x45fedffc,
    0x24fecefd,0x5ffdcffc,0x039fffd1,0x75ffff5c,0xfd3fe83f,0x5c5fd007,
    0xf007fd5f,0x000ffe45,0xffb00ff6,0x3fe05ff5,0x3fffe1ff,0x3f3fe201,
    0x003bf606,0x7fd01ff3,0x8ffa5ff0,0x26201ffc,0xbd020180,0xb3019ffb,
    0xeb819dff,0x541feaff,0xfc80cffd,0x7fec44ff,0x7ff35fad,0x67ed4001,
    0x87fe43fe,0x2fe803fe,0x01ff57ee,0x1ffdc262,0x501fec00,0x03ff65ff,
    0xffb1fffa,0x7fffb00f,0x2003ff20,0x3fe80ff9,0x87fd2ff8,0x3ff20efe,
    0x033fffff,0x20008a04,0x02000800,0x88020040,0x754c0002,0x2fffffff,
    0x3fa00ffa,0x7ff57ee2,0xf77fffff,0x3fffffab,0x3f603fff,0x44bff103,
    0x5ffc85ff,0x5402ffdc,0xff880fff,0x980fffff,0x83fe80ff,0x987fd2ff,
    0x3fff24ff,0x3353ffff,0x00053333,0x00000000,0x00000000,0x3bffffa0,
    0x401ff41d,0x757ee2fe,0x7fffffff,0x3fffabf7,0x203fffff,0x1ff903fd,
    0x7d42ffa8,0x01ffcc3f,0xfa82ffc4,0x80ffffff,0x3fe80ff9,0x07fd2ff8,
    0x00003ff9,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x2e600000,
    0x4015751a,0x8aa81bb8,0x54aa0bb8,0x22a8aa0a,0x13a602b9,0x2aaaaaa2,
    0x0603fd81,0x26055411,0x5541551a,0x154c6a60,0x715442aa,0x20711311,
    0xb4d8bb4d,0x7777710b,0x09b30577,0x77777771,0x54166545,0xc982f264,
    0xb80bc882,0x0cb81883,0x04c42ee2,0xfdfffff1,0xffb03fff,0xfcfe8bff,
    0xfbff1fff,0x7fdffc3f,0x04fffcdf,0xfff50bf3,0x7fb07fff,0x7f44bf60,
    0x2fe8bf90,0xd27fc7f9,0x64ffe63f,0x7d57ea6f,0x41ffffff,0x5c2fb9fc,
    0x7cc3faaf,0x85ffffff,0x7fcc0ffd,0xf35fffff,0x3f221fb9,0x2abd7f36,
    0x3be23fbf,0x197130fe,0xbdb0ff43,0x743fe61f,0x326ff62f,0x46fb9dff,
    0x2ffbbefc,0x3fa6bffa,0xf897fff4,0x9effa9ef,0x5f980ffb,0xffeaaa88,
    0xf9009881,0x221dfd7f,0x54ff30ff,0x22dff35f,0x7d7fdc7f,0xfe93aa1f,
    0x7d45ffdf,0x1fd05f9d,0x666443fd,0x7c42cccc,0x666444ff,0x2a25fdcc,
    0x2db931fd,0x7d44db18,0xc97cdee3,0x3fa5feef,0x4cf61f11,0x085fd0ff,
    0x7ec1ff71,0x5fa8bfe1,0xf5fb8ffa,0xf8bfe07f,0x74c7fe2f,0x84eeffee,
    0x3bae2ffa,0x642eeeee,0x7ec0efff,0x77f89f93,0x09f71fff,0xf007fffb,
    0xf89be63f,0xf501fe8f,0x4000df3b,0x800ffafc,0xf9bf35f9,0x0fe46c83,
    0xf16c8ff2,0x7c17fcc7,0xf8ba2be0,0x7ff64407,0x2fffffff,0x0ff88ff3,
    0xfafdc5fd,0x7c3ff02f,0x7d47fe1f,0x45ffffff,0x7fe43ffa,0x443fffff,
    0x6fa82fff,0xd9fd83ff,0x81fdafbf,0xff006ff8,0x2bf637c4,0x59f702fd,
    0x7fffccbf,0x5fe24fff,0x5f9803fc,0xc83f91f9,0x93987b66,0x0fdd7d4d,
    0x45d8d9bd,0x01dc5ffb,0x3fe6b7fa,0xf11aaaab,0xfd3fcc1f,0x1ffafdc5,
    0x0ffc3ff0,0x32aa23ff,0x3e61aaef,0xaaaa984f,0x3fa20aaa,0xbff82fff,
    0xdfcfa86f,0xf707fcf9,0x9fb005ff,0xef88bf93,0x8ef886f8,0x3ffe60fe,
    0x3f25ffff,0xf300ff14,0x0bf3fa6b,0x5bffeed9,0x7e43fef8,0x2144543f,
    0x26000202,0xc8bfea7f,0xfc8ffe0b,0x5fb8bfa4,0x87fe03ff,0x207fe1ff,
    0x5fe885f9,0xfd02ca80,0xc83ff91d,0xff883fff,0x109fff3f,0x441ffbff,
    0xfffff109,0xabfa81df,0x7dcfe43f,0x88888882,0x17705dc0,0x18800100,
    0x09833333,0x00000000,0x7f5e7fc0,0x5c6fdcff,0x21ffeeff,0x7d7ee2fe,
    0x7c3ff01f,0x2607fe1f,0xffffd85f,0x03fd85ff,0x442e41d5,0xffb00fff,
    0x3a0bff63,0x7d4bfd5f,0x97b99f35,0x0aa5501f,0x0000aa35,0x00000000,
    0x00000000,0xffd50000,0x1bfff73b,0x819ffd50,0x7d7ee2fe,0x7c3ff01f,
    0x2207fe1f,0xffffd81a,0x02ca85ff,0x409fb000,0x21fee7fb,0x7ff30ffb,
    0x010097ea,0x5dc40000,0x00443b98,0x3da833b2,0x4ccc4772,0x9876a9b1,
    0x19999999,0xccc89766,0x004ccccc,0x00080400,0x00000001,0x00000000,
    0x00000000,0x00000000,0xff100000,0x3f22df73,0x445a9bef,0x5fd1be3f,
    0xb7dbffee,0xffff11fb,0xfb8fffff,0xdddddd12,0x00000ddd,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x2bf73ff1,0xfffffffb,
    0x261ddb76,0xfb85d40c,0x022115ff,0x33333333,0x00005703,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x51fd0000,0xeda8aa9f,
    0x0001310c,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x40000000,0x0003713a,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,
};

static signed short stb__arial_bold_18_latin1_x[224]={ 0,1,0,0,0,0,0,0,0,0,0,0,0,0,
1,-1,0,1,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,1,0,1,1,1,0,1,1,0,1,
1,1,1,0,1,0,1,0,0,1,-1,0,0,-1,0,1,-1,0,0,-1,0,0,1,0,0,0,0,0,1,1,
-1,1,1,0,1,0,1,0,1,0,0,1,0,0,0,0,0,0,1,0,0,2,2,2,2,2,2,2,2,2,
2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,1,0,0,0,0,
1,0,0,-1,0,0,0,0,-1,-1,0,0,0,0,1,0,-1,1,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,-1,0,1,1,1,1,-1,0,-1,-1,-1,1,0,0,0,0,0,0,0,1,1,1,1,-1,1,1,0,0,
0,0,0,0,0,0,0,0,0,0,-1,0,-1,-1,0,1,0,0,0,0,0,0,0,1,1,1,1,0,1,0,
 };
static signed short stb__arial_bold_18_latin1_y[224]={ 14,2,2,2,1,2,2,2,2,2,2,4,11,8,
11,2,2,2,2,2,2,2,2,2,2,2,5,5,3,5,3,2,2,2,2,2,2,2,2,2,2,2,2,2,
2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,15,2,5,2,5,2,5,2,5,2,2,
2,2,2,5,5,5,5,5,5,5,2,5,5,5,5,5,5,2,2,2,6,3,3,3,3,3,3,3,3,3,
3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,14,5,2,2,4,2,
2,2,2,2,2,6,5,8,2,0,2,3,2,2,2,5,2,7,14,2,2,6,2,2,2,5,-1,-1,-1,-1,
-1,0,2,2,-1,-1,-1,-1,-1,-1,-1,-1,2,-1,-1,-1,-1,-1,-1,4,1,-1,-1,-1,-1,-1,2,2,2,2,
2,2,2,1,5,5,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,4,5,2,2,2,2,2,2,2,
 };
static unsigned short stb__arial_bold_18_latin1_w[224]={ 0,3,7,9,9,14,12,4,5,5,6,9,4,5,
3,6,9,6,9,9,9,9,9,9,9,9,3,3,9,9,9,10,16,12,10,11,10,9,9,12,10,3,8,11,
9,12,10,12,10,13,11,10,10,10,12,16,11,12,10,5,6,5,9,11,4,9,9,9,9,9,6,9,8,3,
5,8,3,14,8,10,9,9,6,9,6,8,9,13,9,9,8,6,3,6,9,9,9,9,9,9,9,9,9,9,
9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,0,3,9,9,9,9,
3,9,6,13,6,9,9,5,13,11,6,9,5,6,5,9,10,3,5,4,6,9,14,14,14,10,12,12,12,12,
12,12,17,11,9,9,9,9,5,5,6,6,12,10,12,12,12,12,12,9,13,10,10,10,10,12,10,9,9,9,
9,9,9,9,14,9,9,9,9,9,5,5,6,6,10,8,10,10,10,10,10,9,10,8,8,8,8,9,9,9,
 };
static unsigned short stb__arial_bold_18_latin1_h[224]={ 0,12,5,13,15,13,13,5,16,16,6,9,6,3,
3,13,13,12,12,13,12,13,13,12,13,13,9,12,10,7,10,12,16,12,12,13,12,12,12,13,12,12,13,12,
12,12,12,13,12,14,12,13,12,13,12,12,12,12,12,16,13,16,7,3,3,10,13,10,13,10,12,13,12,12,
16,12,12,9,9,10,13,13,9,10,13,10,9,9,9,13,9,16,16,16,4,11,11,11,11,11,11,11,11,11,
11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,13,16,13,9,12,
16,16,3,13,7,8,7,3,13,2,6,11,7,7,3,13,16,3,4,7,7,8,13,13,13,13,15,15,15,15,
15,14,12,16,15,15,15,15,15,15,15,15,12,15,16,16,16,16,16,9,14,16,16,16,16,15,12,13,13,13,
13,13,13,14,10,13,13,13,13,13,12,12,12,12,13,12,13,13,13,13,13,9,10,13,13,13,13,16,16,16,
 };
static unsigned short stb__arial_bold_18_latin1_s[224]={ 252,42,165,140,35,103,206,246,48,31,227,
58,234,199,251,239,31,166,112,41,109,71,95,123,115,139,131,105,246,165,236,
81,140,24,220,149,1,32,71,1,133,119,195,180,210,231,244,236,12,203,144,
214,122,225,99,82,70,57,46,64,161,134,175,212,224,197,175,207,204,217,173,
14,157,153,157,137,133,43,27,16,61,51,36,187,168,227,97,107,121,105,68,
163,170,174,173,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,
166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,252,252,242,
185,135,61,118,54,205,125,195,145,185,199,81,229,239,156,207,213,189,10,37,
195,183,202,220,155,191,176,161,150,69,121,108,95,56,190,192,122,1,11,140,
150,160,134,21,28,92,45,216,203,70,83,229,87,176,192,96,107,181,82,44,
217,21,227,237,1,11,166,1,83,93,31,41,51,249,55,37,146,61,23,72,
228,20,118,129,77,176,247,219,1,246,21,11,1, };
static unsigned short stb__arial_bold_18_latin1_t[224]={ 15,76,97,34,18,34,34,89,1,1,89,
89,89,97,89,34,48,62,76,48,62,48,48,62,48,48,89,62,76,89,76,
62,1,62,62,48,76,76,62,62,76,62,48,62,62,62,62,48,76,18,76,
48,76,48,76,76,76,76,76,1,48,1,89,97,97,76,48,76,48,76,62,
62,62,62,1,62,62,89,89,89,48,48,89,76,48,76,89,89,89,48,89,
1,1,1,97,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,
76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,15,1,1,
48,89,62,1,1,97,48,89,89,89,97,48,97,89,76,89,89,97,48,1,
97,97,89,89,89,34,34,34,34,18,18,18,18,18,18,62,1,18,18,18,
18,18,18,18,18,62,18,1,1,1,1,1,89,18,1,1,1,1,18,62,
18,34,18,18,34,34,18,89,34,34,34,34,34,48,62,62,62,34,76,34,
34,48,34,34,89,76,18,34,48,34,1,1,1, };
static unsigned short stb__arial_bold_18_latin1_a[224]={ 72,86,122,143,143,229,186,61,
86,86,100,151,72,86,72,72,143,143,143,143,143,143,143,143,
143,143,86,86,151,151,151,157,251,186,186,186,186,172,157,201,
186,72,143,186,157,215,186,201,172,201,186,172,157,186,172,243,
172,172,157,86,72,86,151,143,86,143,157,143,157,143,86,157,
157,72,72,143,72,229,157,157,157,157,100,143,86,157,143,201,
143,143,129,100,72,100,151,193,193,193,193,193,193,193,193,193,
193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,
193,193,193,193,193,193,193,193,72,86,143,143,143,143,72,143,
86,190,95,143,151,86,190,142,103,141,86,86,86,149,143,72,
86,86,94,143,215,215,215,157,186,186,186,186,186,186,258,186,
172,172,172,172,72,72,72,72,186,186,201,201,201,201,201,151,
201,186,186,186,186,172,172,157,143,143,143,143,143,143,229,143,
143,143,143,143,72,72,72,72,157,157,157,157,157,157,157,141,
157,157,157,157,157,143,157,143, };

// Call this function with
//    font: NULL or array length
//    data: NULL or specified size
//    height: STB_FONT_arial_bold_18_latin1_BITMAP_HEIGHT or STB_FONT_arial_bold_18_latin1_BITMAP_HEIGHT_POW2
//    return value: spacing between lines
static void stb_font_arial_bold_18_latin1(stb_fontchar font[STB_FONT_arial_bold_18_latin1_NUM_CHARS],
                unsigned char data[STB_FONT_arial_bold_18_latin1_BITMAP_HEIGHT][STB_FONT_arial_bold_18_latin1_BITMAP_WIDTH],
                int height)
{
    int i,j;
    if (data != 0) {
        unsigned int *bits = stb__arial_bold_18_latin1_pixels;
        unsigned int bitpack = *bits++, numbits = 32;
        for (i=0; i < STB_FONT_arial_bold_18_latin1_BITMAP_WIDTH*height; ++i)
            data[0][i] = 0;  // zero entire bitmap
        for (j=1; j < STB_FONT_arial_bold_18_latin1_BITMAP_HEIGHT-1; ++j) {
            for (i=1; i < STB_FONT_arial_bold_18_latin1_BITMAP_WIDTH-1; ++i) {
                unsigned int value;
                if (numbits==0) bitpack = *bits++, numbits=32;
                value = bitpack & 1;
                bitpack >>= 1, --numbits;
                if (value) {
                    if (numbits < 3) bitpack = *bits++, numbits = 32;
                    data[j][i] = (bitpack & 7) * 0x20 + 0x1f;
                    bitpack >>= 3, numbits -= 3;
                } else {
                    data[j][i] = 0;
                }
            }
        }
    }

    // build font description
    if (font != 0) {
        float recip_width = 1.0f / STB_FONT_arial_bold_18_latin1_BITMAP_WIDTH;
        float recip_height = 1.0f / height;
        for (i=0; i < STB_FONT_arial_bold_18_latin1_NUM_CHARS; ++i) {
            // pad characters so they bilerp from empty space around each character
            font[i].s0 = (stb__arial_bold_18_latin1_s[i]) * recip_width;
            font[i].t0 = (stb__arial_bold_18_latin1_t[i]) * recip_height;
            font[i].s1 = (stb__arial_bold_18_latin1_s[i] + stb__arial_bold_18_latin1_w[i]) * recip_width;
            font[i].t1 = (stb__arial_bold_18_latin1_t[i] + stb__arial_bold_18_latin1_h[i]) * recip_height;
            font[i].x0 = stb__arial_bold_18_latin1_x[i];
            font[i].y0 = stb__arial_bold_18_latin1_y[i];
            font[i].x1 = stb__arial_bold_18_latin1_x[i] + stb__arial_bold_18_latin1_w[i];
            font[i].y1 = stb__arial_bold_18_latin1_y[i] + stb__arial_bold_18_latin1_h[i];
            font[i].advance_int = (stb__arial_bold_18_latin1_a[i]+8)>>4;
            font[i].s0f = (stb__arial_bold_18_latin1_s[i] - 0.5f) * recip_width;
            font[i].t0f = (stb__arial_bold_18_latin1_t[i] - 0.5f) * recip_height;
            font[i].s1f = (stb__arial_bold_18_latin1_s[i] + stb__arial_bold_18_latin1_w[i] + 0.5f) * recip_width;
            font[i].t1f = (stb__arial_bold_18_latin1_t[i] + stb__arial_bold_18_latin1_h[i] + 0.5f) * recip_height;
            font[i].x0f = stb__arial_bold_18_latin1_x[i] - 0.5f;
            font[i].y0f = stb__arial_bold_18_latin1_y[i] - 0.5f;
            font[i].x1f = stb__arial_bold_18_latin1_x[i] + stb__arial_bold_18_latin1_w[i] + 0.5f;
            font[i].y1f = stb__arial_bold_18_latin1_y[i] + stb__arial_bold_18_latin1_h[i] + 0.5f;
            font[i].advance = stb__arial_bold_18_latin1_a[i]/16.0f;
        }
    }
}

#ifndef STB_SOMEFONT_CREATE
#define STB_SOMEFONT_CREATE              stb_font_arial_bold_18_latin1
#define STB_SOMEFONT_BITMAP_WIDTH        STB_FONT_arial_bold_18_latin1_BITMAP_WIDTH
#define STB_SOMEFONT_BITMAP_HEIGHT       STB_FONT_arial_bold_18_latin1_BITMAP_HEIGHT
#define STB_SOMEFONT_BITMAP_HEIGHT_POW2  STB_FONT_arial_bold_18_latin1_BITMAP_HEIGHT_POW2
#define STB_SOMEFONT_FIRST_CHAR          STB_FONT_arial_bold_18_latin1_FIRST_CHAR
#define STB_SOMEFONT_NUM_CHARS           STB_FONT_arial_bold_18_latin1_NUM_CHARS
#define STB_SOMEFONT_LINE_SPACING        STB_FONT_arial_bold_18_latin1_LINE_SPACING
#endif

