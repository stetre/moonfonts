// Font generated by stb_font_inl_generator.c (4/1 bpp)
//
// Following instructions show how to use the only included font, whatever it is, in
// a generic way so you can replace it with any other font by changing the include.
// To use multiple fonts, replace STB_SOMEFONT_* below with STB_FONT_arial_bold_34_usascii_*,
// and separately install each font. Note that the CREATE function call has a
// totally different name; it's just 'stb_font_arial_bold_34_usascii'.
//
/* // Example usage:

static stb_fontchar fontdata[STB_SOMEFONT_NUM_CHARS];

static void init(void)
{
    // optionally replace both STB_SOMEFONT_BITMAP_HEIGHT with STB_SOMEFONT_BITMAP_HEIGHT_POW2
    static unsigned char fontpixels[STB_SOMEFONT_BITMAP_HEIGHT][STB_SOMEFONT_BITMAP_WIDTH];
    STB_SOMEFONT_CREATE(fontdata, fontpixels, STB_SOMEFONT_BITMAP_HEIGHT);
    ... create texture ...
    // for best results rendering 1:1 pixels texels, use nearest-neighbor sampling
    // if allowed to scale up, use bilerp
}

// This function positions characters on integer coordinates, and assumes 1:1 texels to pixels
// Appropriate if nearest-neighbor sampling is used
static void draw_string_integer(int x, int y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0, cd->t0); glVertex2i(x + cd->x0, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t0); glVertex2i(x + cd->x1, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t1); glVertex2i(x + cd->x1, y + cd->y1);
        glTexCoord2f(cd->s0, cd->t1); glVertex2i(x + cd->x0, y + cd->y1);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance_int;
    }
    glEnd();
}

// This function positions characters on float coordinates, and doesn't require 1:1 texels to pixels
// Appropriate if bilinear filtering is used
static void draw_string_float(float x, float y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0f, cd->t0f); glVertex2f(x + cd->x0f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t0f); glVertex2f(x + cd->x1f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t1f); glVertex2f(x + cd->x1f, y + cd->y1f);
        glTexCoord2f(cd->s0f, cd->t1f); glVertex2f(x + cd->x0f, y + cd->y1f);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance;
    }
    glEnd();
}
*/

#ifndef STB_FONTCHAR__TYPEDEF
#define STB_FONTCHAR__TYPEDEF
typedef struct
{
    // coordinates if using integer positioning
    float s0,t0,s1,t1;
    signed short x0,y0,x1,y1;
    int   advance_int;
    // coordinates if using floating positioning
    float s0f,t0f,s1f,t1f;
    float x0f,y0f,x1f,y1f;
    float advance;
} stb_fontchar;
#endif

#define STB_FONT_arial_bold_34_usascii_BITMAP_WIDTH         256
#define STB_FONT_arial_bold_34_usascii_BITMAP_HEIGHT        146
#define STB_FONT_arial_bold_34_usascii_BITMAP_HEIGHT_POW2   256

#define STB_FONT_arial_bold_34_usascii_FIRST_CHAR            32
#define STB_FONT_arial_bold_34_usascii_NUM_CHARS             95

#define STB_FONT_arial_bold_34_usascii_LINE_SPACING          22

static unsigned int stb__arial_bold_34_usascii_pixels[]={
    0x00000266,0x31000044,0x00ccc400,0x19880310,0x547bbb60,0x95eeeeee,
    0x07dddddd,0x00001cb8,0x08000001,0x33310000,0x00009988,0x10000000,
    0x00099800,0x00007fec,0x3fffbae2,0x5000beff,0x5403bfff,0x7f5407ff,
    0x1bfe207f,0xf71fffe8,0x3affffff,0x04ffffff,0xa80017ec,0xcdefffdc,
    0x36ea0001,0x01bdeffe,0x746ffb80,0x3fb204ff,0x7ddd13df,0x6dc57bb6,
    0x75403dff,0xfb803eff,0x7fd4003f,0xffd50005,0xffffffff,0xfa803dff,
    0xf503ffff,0x7ffec0ff,0x0fff207f,0xf71fffe8,0x3affffff,0x84ffffff,
    0x3dfffec8,0xffffb100,0x09ffffff,0xffffe880,0x03ffffff,0xf127fe40,
    0xffd305ff,0xff3bffff,0x23fffe9f,0xdffffffe,0xfffffb80,0x1ffe205f,
    0x00fff400,0xfffffb10,0xfffd99bd,0x7d407fff,0xa80fffff,0xfff307ff,
    0x3fe20fff,0x3fffa00f,0xfff55511,0x2affffaf,0x7fffd41a,0x200effff,
    0xfffffffa,0x1effffff,0xfffffa80,0xffffffff,0x7ffd001e,0x2207ffcc,
    0xffffffff,0xff4fffef,0xfffffdff,0xff88dfff,0x02fffabf,0x20007ff7,
    0xf3005ffb,0x5005bfff,0x220bfffd,0x82ffffcb,0xff907ffa,0x3f2059df,
    0xff00004f,0x03fffaff,0x7fffffcc,0xf304ffff,0xbbdfffff,0x1fffffff,
    0x7ffffcc0,0xfffeddef,0xfff006ff,0x643ffdc3,0xdabeffff,0xff4fffff,
    0xf73bffff,0x7d45ffff,0x213ff26f,0x20007ff8,0x4c01fff8,0x8000dfff,
    0x5c03fffb,0xffa82fff,0x03fffb07,0x000fffc4,0xfd7fff80,0x3ffa01ff,
    0xfffcfedf,0xffffe80f,0xfffe980d,0x3fffa04f,0xffe980df,0x7fcc04ff,
    0x117ff20f,0xf509ffff,0x3ffe9fff,0x7fec41ff,0xb93fee6f,0x3ffc85ff,
    0x2fff4000,0x009ffd10,0x01fff980,0x2a0fffea,0xfffd07ff,0x807ffd80,
    0xff01eeed,0x03fffaff,0x7ed7ffe2,0x5c4fff9a,0xd804ffff,0xfb81ffff,
    0xfd804fff,0x2aa60fff,0xaaafffca,0xf31adffe,0x3f601fff,0x9ffff4ff,
    0x43fffe60,0x3fea4ffc,0x003ffc46,0x80fffdc0,0xec984ffd,0xeee98cef,
    0x4c09ff73,0xffa84fff,0x40fffd07,0xe804fff8,0xfff01fff,0x203fffaf,
    0x5fb3fff9,0xfff066ae,0x3fe600ff,0xffff85ff,0xffff1007,0x7ffffecb,
    0xffffffff,0xdfff74ff,0xfa7ffdc0,0x3fe02fff,0x49ff91ff,0x7fe46ffb,
    0xff980003,0x86ff983f,0xeffffffc,0x3f63fffc,0x9fff300f,0x3a0fff50,
    0x3fea07ff,0xfffe802f,0x3affff01,0xff980fff,0x8805fb4f,0x2003ffff,
    0x7cc6fffd,0x32003fff,0x3ff66fff,0xffffffff,0xf94fffff,0x7fd40bff,
    0x03ffff4f,0xfb97fff4,0x897ff25f,0x100007ff,0xffb09fff,0xdffffc83,
    0x1ffffffe,0x7cc0bfea,0x7ffa84ff,0x640dffd0,0xfe801fff,0xffff01ff,
    0x2203fffa,0x2fd9ffff,0x07fffcc0,0x8ffff500,0x000ffffb,0xfd9fffea,
    0xffffffff,0x94ffffff,0x7dc09fff,0x3ffff4ff,0x897fff40,0xfff9afff,
    0x000fff22,0x446fff80,0x7ffdc5ff,0x3fffea0d,0x40ffe60f,0xfa85fff8,
    0x0dfff07f,0x4007fff4,0xff01fffe,0x03fffaff,0x7ffffff4,0x3fffd402,
    0x3fffe600,0x01fffee0,0x03ffff30,0x7e41fff3,0x5fffa85f,0x7d3ffee0,
    0x3fe02fff,0x3fff21ff,0x3fe26fff,0x7f400007,0x11ffdc7f,0x3fa0ffff,
    0x04ff86ff,0xf503fffe,0x9fff30ff,0x01fffe20,0xf80ffff4,0x1fffd7ff,
    0x3ffffe60,0xff901cff,0xff8800ff,0x3fff22ff,0x7ffc4007,0x46ffb82f,
    0xff983ffe,0x3fffa07f,0x209ffff4,0x640ffff8,0x320dffff,0x400003ff,
    0x3f60fffd,0x0bfff20f,0x7c27ffdc,0x3fff205f,0x223ffd44,0xf102fffe,
    0x3fa00dff,0xffff01ff,0xb803fffa,0xffffffff,0x37ffe40d,0x3fffe200,
    0x01bfff22,0x05ffff10,0xfff89ff9,0x2ffff882,0xf4ffffa8,0xf901ffff,
    0x04cc0fff,0x9511ffe2,0xff900057,0x3e37f45f,0x3fee06ff,0x027fcc3f,
    0x29fffff1,0x3ff67ffa,0x3fe606ff,0xfffd005f,0x75fffe03,0x74c00fff,
    0xffffffff,0x01fffee1,0x43ffff30,0x4007fffb,0xe81ffff9,0x3ffe63ff,
    0x9ffff900,0xfffffb33,0x3fffffe9,0xffffd98c,0x3ffc8003,0x3bffffea,
    0x3ffee000,0xff897fe3,0x3fff205f,0x2017fdc1,0xf56ffff9,0x3fffe2ff,
    0x3ffea00e,0x3fffd004,0x7f5fffe0,0xfd3000ff,0x54dfffff,0x2000ffff,
    0x7d47fffa,0x2a000fff,0x9970ffff,0xfb99bfff,0x445999ff,0xffffffff,
    0xff4fffff,0xffffffff,0x1000dfff,0x7ffc4fff,0x2005fffe,0x3fe3fffb,
    0x80fffea4,0xffd87ffd,0x7fff4401,0x3e2fff56,0x7d404fff,0xffd004ff,
    0x5fffe03f,0x2000fffe,0xffffecfd,0x05ffff11,0x1bfff206,0x005ffff1,
    0xfb3fffe4,0xffffffff,0x89ffffff,0xfffffffa,0xff4fffce,0xfffff7ff,
    0x90003dff,0xaffe47ff,0x7001fff8,0x27fc5fff,0x2205fff7,0x7fcc6fff,
    0x7fffc406,0x22fff56f,0x205fffff,0xd005fff8,0x3fe03fff,0x01fffd7f,
    0xffc97ec0,0x1bfffe2f,0x7fc437ea,0xffff85ff,0xffff1006,0x7ffffecb,
    0xffffffff,0xffe984ff,0x9fff74ff,0x3627fffe,0x000cffff,0x7ec7ff88,
    0x00bffa2f,0xfd07ffe4,0x827ffd4b,0x3a24fffc,0x7fe402ff,0x9ffea1ef,
    0x01ffffa8,0x74017ffe,0xfff01fff,0x203fffaf,0x4bf63a99,0x3f23fff9,
    0x7ff42fff,0x2ffffdcf,0x03ffffc8,0x22ffffd8,0xcceffecb,0xcccdfffc,
    0xf7066202,0x3fffe9ff,0x00006621,0xffe87ff9,0x400fff62,0x3fec7ffc,
    0xf10dfff3,0x7fec5fff,0x0fffe805,0x7dc3ffd4,0x3ffa04ff,0x3fffd006,
    0x7f5fffe0,0xfffd80ff,0x3fe65fb2,0x3fffe22f,0x3fffaa3f,0xd105ffff,
    0x2209ffff,0xd05ffffd,0x7ffcc7ff,0xffb80000,0x03ffff4f,0x7ff88000,
    0x3f61fff8,0xdffd004f,0x3fe1ffc8,0x3ffa23ff,0xeffdabff,0x85fff800,
    0xfff07ffa,0x03ffec0b,0xf01fffe8,0x3fffafff,0xb6fffb80,0x07fff25f,
    0x7bfffff5,0xffffff55,0x7ffd403f,0xfdbbceff,0x880fffff,0x3fea1fff,
    0xff700006,0x07fffe9f,0x7ff90000,0x7ec5ffd0,0xbfff003f,0x3ea4ff98,
    0xfffeffff,0xdfffffff,0x4fff8800,0xff07ffa8,0x7ffdc0df,0x1fffe800,
    0x3faffff0,0xfff880ff,0xffcbfeef,0xffff906f,0xffffffff,0xfc805fff,
    0xffffffff,0x302fffff,0x7fe41fff,0xff700005,0x07fffe9f,0x7ff88000,
    0x7fc9ff90,0xfff8801f,0x320ffe84,0xdeffffff,0x05ffffff,0x213ffe60,
    0xffd07ffa,0x17ffd40f,0x80ffff40,0xfffd7fff,0x3fffee01,0x1fffffff,
    0x3ffffa60,0xffffffff,0x3a602eff,0xffffffff,0x3ee00dff,0x01fff46f,
    0x4fffb800,0x0003ffff,0x981ffe40,0x6ffedfff,0x03fff500,0xed98dff7,
    0x33bb23df,0x404cc40a,0xfa84fff9,0x0fffd07f,0x4027ffc4,0xff01ffff,
    0x03fffaff,0xffffffd8,0xd7002fff,0x7bdfffff,0x01fffffd,0xfffffeb8,
    0xffd803df,0x000fffc4,0xf4fffb80,0x00003fff,0xf701ffe2,0x003fffff,
    0xfe81bff6,0x3200005f,0xff980fff,0x07ffa83f,0xfc80fffd,0x7ffc406f,
    0x2ffff01f,0x5400fffe,0x0cfffffe,0x01331000,0x8007fff9,0x54000998,
    0x055541aa,0x00000000,0x03eeb800,0x00cdec98,0x880fffe0,0x0001dfff,
    0x40bfffa6,0xfa83fffa,0x1fffb07f,0x407ffc40,0x0ffffeba,0xffff3331,
    0x2667fffa,0x00ffa200,0x7ecc0000,0x00000000,0x00000000,0x00000000,
    0xfff30000,0xffffa801,0x3ee6001c,0x54c43fff,0xfa82fffe,0xbfff907f,
    0x0fff2035,0x9bfffffa,0x7ffffffb,0x9ffffffd,0x0002fd80,0x00000000,
    0x00000000,0x00000000,0x20000000,0xb1003ffd,0x79bfffff,0xfffdb955,
    0xff503fff,0xf501ffff,0x3ffea0ff,0xdff107ff,0xffffff88,0x3ffffee1,
    0xfffffd7f,0x02fd809f,0x00000000,0x00000000,0x00000000,0x00000000,
    0x000fff10,0xfffffff7,0xffffffff,0x3fea019f,0xff504fff,0x7ffff40f,
    0x987ff607,0x5c3effff,0xd7ffffff,0x09ffffff,0x00000000,0x00000000,
    0x00000000,0x00000000,0x2ffc8000,0x3fb26000,0xffffffff,0xfffa802d,
    0x1ffea03f,0x07fffd88,0x55117fe6,0x26666201,0x33331199,0x00000133,
    0x00000000,0x00000000,0x00000000,0x80000000,0x400002aa,0x0099aa99,
    0x004d5440,0x2200aaa2,0x155402a9,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00100000,0x00044000,
    0x98800000,0x00040009,0x10000666,0x27775c00,0x007bbb60,0x00008001,
    0x303eeea8,0x20179db7,0x0000eeed,0x0bcedba8,0xaaaaaa80,0x7642aaaa,
    0x3f6601ee,0x0002dfff,0x7ffff64c,0xd91003de,0x3ba67bff,0x17ff403e,
    0x3fff72a0,0x7ff402de,0x3f726000,0x300cefff,0x2601ffff,0x36207fff,
    0xfffda804,0xff70005e,0xffff709f,0xfff03fff,0x7440001f,0x2fffffff,
    0x3ffffe20,0x747fffff,0xff702fff,0x0bffffff,0xffffb100,0x7fffffff,
    0x7ffffcc0,0x4fff9cff,0x8807ffc0,0xfffffffd,0xff900dff,0x3ffee005,
    0x4fffffff,0x205fffd0,0xf904fffc,0xfffa809f,0x70006fff,0xffc89fff,
    0x1fffffff,0x0007fffc,0xfffffe88,0xf502ffff,0xffffffff,0x2fffe8ff,
    0xefffffa8,0x2003ffff,0xffffffe9,0x3fffffff,0xffffff88,0x4fffefff,
    0x4c1bfe60,0xffffffff,0xa82fffff,0xffd804ff,0xffffffff,0xfffc84ff,
    0x03ffff05,0xf809fff9,0x04ffffff,0x49fff700,0xfdeffff8,0x7ffc5fff,
    0xff90000f,0xffffbbff,0xffff901f,0x8fffffff,0xfd82fffe,0x3ffe64ff,
    0xfffd1006,0xfffbbfff,0xfd85ffff,0xfd99dfff,0x2e04ffff,0xfff884ff,
    0xfffcdfff,0x7c40ffff,0x7ffd406f,0xfffdceff,0x7fc42fff,0x7ffcc0ff,
    0x09fff906,0x45ffffc4,0xff700009,0x2fffdc9f,0x7c3ffff1,0xf0000fff,
    0x7fc43fff,0xfffd82ff,0x2aaaaaab,0x7417fff4,0x7fe41fff,0xfffd800f,
    0xffd981ef,0x3ffe66ff,0xffffa82f,0x20bff604,0x984ffffd,0xf84ffffd,
    0x3ff200ff,0xfffa80df,0x2fffe85f,0xc81fffe4,0x3e604fff,0x700007ff,
    0x7ffc9fff,0x2fffe41f,0x0081ffff,0xd85fffa8,0xfff84fff,0x7fff4007,
    0x25fffd82,0x9807fff8,0xe805ffff,0xff51ffff,0x7fff40df,0x303ffe04,
    0x4407ffff,0x6c0fffff,0x3ffe02ff,0x3fff601f,0x45fffa87,0x7540ffff,
    0x2eeeffff,0x8037ffd4,0x73dffec8,0x3fe69fff,0x7fff987f,0x3223fffe,
    0x4403dffe,0x2fffd80a,0x002fffc4,0x2e0bfffa,0xffb1ffff,0xfffb009f,
    0x9df3001f,0x13ffee17,0x304fffc8,0xfffd0dff,0x79df700d,0x7c09ff70,
    0x32603fff,0xfff882cc,0x0bfff30f,0xfffffff7,0x3ffbae5f,0xf305eeff,
    0x9bffffff,0x3fea9fff,0x7fff886f,0x3fabfffe,0x00dfffff,0x07fffcc0,
    0x2a33ffe6,0x3ffa00ab,0xffffd02f,0x803ffffd,0x003ffff8,0x04fffc80,
    0x5c13ffee,0xffff84ff,0xf9801002,0x3fff606f,0x320001cf,0xfff92fff,
    0xfffff705,0x3ff25fff,0x87ffffff,0xfffffff8,0x74ffffff,0x3fe0bfff,
    0xfffff0ff,0xffffffff,0x3ff2a00d,0xfffb84ff,0x04ffffff,0x2605fffd,
    0xffffffff,0xffff9801,0xffd80001,0x3ffee04f,0x885ffb04,0x0001ffff,
    0x5c03ffe0,0xdfffffff,0x3fe6000a,0x20fffd5f,0xcefffeca,0xfffff91c,
    0xffb0ffff,0xffb33bff,0x3fee9fff,0x3ffff05f,0x33fffffe,0x2fffffb9,
    0x7ffffc40,0xfffff903,0x81dfffff,0xd102fffe,0x01bfffff,0x03fffea0,
    0x3fff2000,0x13fff205,0x3e607ffc,0x00000fff,0xfd80bff6,0xffffffff,
    0xffe800be,0x404fffaf,0xca84fffc,0x4ccffffd,0x417fffcc,0xf94ffffa,
    0x3ffe0bff,0x1fffff2f,0x80dfffb0,0x00effff9,0xfdfffffd,0xfe8bffff,
    0xffe982ff,0x2004ffff,0x2a07fffb,0xcccccccc,0x01ffff73,0x309ffff1,
    0xfff50fff,0xfb80000f,0x3ff2204f,0xffffffff,0x7ffdc00e,0x6401fffe,
    0x3ea04fff,0x3fea06ff,0x3fffa06f,0x209fffb4,0xfff2ffff,0x3ffe607f,
    0x3ffea00f,0xfff83fff,0x3fff262f,0x0bfffa2f,0xfffffff7,0xb80545ff,
    0x3f207fff,0x6fffffff,0x419ffff1,0x84ffffd8,0xffb85ffb,0x4c00007f,
    0xfd9806ff,0xffffffff,0x3ffe201f,0xfc807fff,0x3fea04ff,0x3ffee06f,
    0x53fff204,0xff05fffc,0x3fffe3ff,0x07fffe01,0x3fffaa08,0xff009884,
    0x7fff49ff,0x3bfffee2,0x98fffff9,0x7fcc4fff,0xfff900ff,0x64dfffff,
    0xfccfffff,0xd84fffff,0xfffa83ff,0x7c00000f,0x7654007f,0x07ffffff,
    0x27ffffec,0x027ffe40,0x640dfff5,0x3f203fff,0xbfff74ff,0x7c7fffe0,
    0x3fe01fff,0x3e6002ff,0xfc8007ff,0x3fffa6ff,0xa93fffa2,0xffceffff,
    0x1ffff84f,0xffffff90,0x7ff44dff,0xfeffffff,0x1ffe84ff,0x01ffff98,
    0x0ffec000,0xfffb8800,0x3fea01ff,0xfc801fff,0x3fea04ff,0x3fff606f,
    0x53ffee04,0xff05fffb,0x3fffe1ff,0x0bfffa01,0x03fffd00,0x27fffa80,
    0xff12fffe,0xfffb81ff,0xd81fffff,0x32004fff,0x7f446fff,0xfbafffff,
    0x3ffc44ff,0x02ffff88,0xfb8039d0,0x0d54c43f,0x0ffffe20,0x06ffff88,
    0x409fff90,0x2e06fffa,0x3f204fff,0xdfff54ff,0x7cffff10,0x3fe01fff,
    0x360181ff,0x54003fff,0x3ffa6fff,0x0bfff72f,0x3ffffff6,0x1ffff906,
    0x1bfff200,0x473bf6e2,0x7d44fffb,0x3fffe05f,0xffffa806,0xd8bff301,
    0xfd806fff,0x7ffc05ff,0xfff9003f,0x37ffd409,0x40dfff50,0xff34fffe,
    0xfffa81ff,0x413fffe6,0xf90ffff9,0xfff107ff,0x17fb6a5f,0xfd2fffdc,
    0x3fff25ff,0x3ffffa06,0xffff501f,0x3fff2009,0xfffc8006,0x701ffe43,
    0xe803ffff,0x7fc06fff,0x17fffdc7,0x09ffff10,0x007fffdc,0x204fffc8,
    0x2606fffa,0xfa82ffff,0x3ffa4fff,0x1ffff43f,0x901fffff,0x7fdcdfff,
    0xffffa87f,0x03ffff51,0x7f47fffd,0xffff52ff,0x3ffff203,0xfffd00df,
    0x3f6601bf,0x9bd36fff,0x3fff6037,0x200fff42,0x982ffffe,0x403ffffd,
    0x3fe61ffe,0xff900eff,0xff7103ff,0x7e400bff,0x54099eff,0x7ec06fff,
    0xfc88afff,0x3ea4ffff,0xffc9afff,0x3fffe0ff,0xfffb31ef,0x7fffc45f,
    0xffffc9ae,0x577fffc6,0x46fffea8,0xff12fffe,0xd5337dff,0xdfffffff,
    0xfffff103,0xffd977bf,0x7fcdffff,0x3ee20fff,0x3fe20fff,0xffff9807,
    0xfffebcdf,0x7e400fff,0x7fffec3f,0xfffdbbef,0x7ffec7ff,0x2001ffff,
    0x3ffffffa,0x2037ffd4,0xfffffff9,0x44ffffff,0xffffffff,0x7fffc4ff,
    0xffffffff,0xffffb86f,0x0fffffff,0x7fffffd4,0x742fffff,0x3fee2fff,
    0xffffffff,0xffffffff,0xfffffa81,0xffffffff,0x3ff61dff,0xfffeefff,
    0x2ffd44ff,0xfffffc80,0xffffffff,0x45ffa801,0xffffffe8,0x2fffffff,
    0x7fffffe4,0x7ffc4004,0x7fd44fff,0xfffa806f,0xff9dffff,0x7fff4c4f,
    0x7c0dffff,0xffff9eff,0xfb00efff,0xffffffff,0x3fffee03,0xe81fffff,
    0x7fdc2fff,0xffffffff,0x04fffe9c,0x3fffffa2,0x2effffff,0xfffffe88,
    0x40efffff,0x26003ffc,0xfffffffe,0xf1001fff,0xfffd30ff,0xffffffff,
    0xfffff703,0x3fe60007,0x7fd44fff,0xffd3006f,0x3ffe69ff,0xffffd884,
    0x2dfff03f,0x04ffffd8,0xfffffea8,0x7ff4c00c,0xfd01dfff,0xffb105ff,
    0xb83bffff,0xffb5005f,0x059dffff,0xfffffb88,0xffd03fff,0xfec88003,
    0x003fffff,0xd501ffe8,0x9dffffff,0x06aa6201,0x8054c000,0x4006fffa,
    0x4c000198,0x0cc0000a,0x0054c400,0x0000a980,0x400a9880,0xa9980009,
    0x2a620001,0x1554009a,0x04d4c000,0x01553000,0x00015530,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x01ef6dcc,
    0x0bbbb600,0x02bdeca8,0x337b72a0,0x07ddd901,0x007ddd90,0xdddd3000,
    0xdddddddd,0xeec87ddd,0xddb001ee,0x3bb621bd,0x776400de,0x3bbb21ee,
    0x3bbba203,0x3bbb200e,0x017bbb63,0x30eeeea8,0xdddddddd,0xdddddddd,
    0x007bbb2b,0x7fffec40,0xf0001fff,0xfd307fff,0x01bfffff,0x7fffff4c,
    0x7ff40cff,0xfffe804f,0xdfdb9104,0x7fd4017b,0xffffffff,0x4c4fffff,
    0xb806ffff,0x7dc3ffff,0x3e604fff,0x7fe45fff,0x3ffee06f,0x3ffe02ff,
    0x3ffff22f,0xdfffd000,0x7fffffd4,0xffffffff,0x5fffd7ff,0xfffd3000,
    0x01ffffff,0x87ffff00,0xfffffff9,0xff881eff,0xffffffff,0x027fff45,
    0x5c27fff4,0xffffffff,0xffff503f,0xffffffff,0xff909fff,0x7fc407ff,
    0xfffd06ff,0x3fffa03f,0x7fffd40f,0xfffffb00,0x3fffe609,0x0ffffe60,
    0x8ffffe20,0xfffffffa,0xffffffff,0x05fffd7f,0xdffffd00,0x00bffffb,
    0xe87ffff0,0xfffdffff,0xfffd85ff,0xffffebdf,0x013fffa2,0xf913fffa,
    0xffffffff,0xfff509ff,0xffffffff,0xd107ffff,0x3201ffff,0xf301ffff,
    0xff70dfff,0xfff107ff,0x3fffe03f,0xfff706ff,0x0dfffd0d,0x41ffff70,
    0xfffffffa,0xffffffff,0x05fffd7f,0x2efff980,0x003fffe6,0x5c7ffff0,
    0x3ee1efff,0x7ffc1fff,0x27ffe42f,0xd009fffd,0x7fdc9fff,0xfeb9beff,
    0xb0002fff,0x540dffff,0xf984ffff,0x7dc04fff,0x3fe23fff,0x3ffa06ff,
    0xffff983f,0xffc80fff,0xffffb84f,0x2ffff401,0x07fffd00,0x002fffe8,
    0x741fffec,0x7c001cee,0x3ff63fff,0x5fffe84f,0x261fffe2,0x3ffa5fff,
    0xfffe804f,0x413fffe4,0x8006fffc,0x00fffffb,0x20ffffec,0x800ffffe,
    0xfb0ffffe,0x7e403fff,0xfffb85ff,0xfe82ffff,0xfff882ff,0x3ffe204f,
    0x3ffa002f,0x7fff403f,0xfff10082,0xf000001f,0x7ff47fff,0x7fffc82f,
    0x7cc37ffc,0x3fffa4ff,0x4fffe804,0x201ffff3,0x4007fff8,0x01fffffa,
    0x26ffff88,0x002ffffa,0xf5bffff3,0xfa809fff,0xfffd87ff,0x7c44fffc,
    0xffb00fff,0x7ffdc0df,0x7fff4007,0x97fff403,0x20ceffdb,0x0046fff9,
    0x3ffff800,0x2603fffe,0x3f60ffff,0x7ffe41ff,0x013fffa2,0x5c53fffa,
    0x7ffc03dc,0xfff1000f,0x7dc005ff,0xfffd2fff,0xfffc800b,0x806fffff,
    0x7c0ffff8,0x6fff8fff,0x503fffd4,0x3603ffff,0x74004fff,0x7f403fff,
    0xffffdaff,0xfff51fff,0x3bfffb1b,0x7fffc000,0x20bfffa3,0x261ffffa,
    0xfdbcffff,0x7fff46ff,0x4fffe804,0x6fffa800,0xffffd100,0xfffd0009,
    0x01ffff9f,0xfffffd00,0x3fe003ff,0x3ffe62ff,0x5c1fffd4,0x3e205fff,
    0xff884fff,0x7f4002ff,0x7ff403ff,0xffffffff,0xdfff76ff,0x7ffffffd,
    0x3fffe000,0x213fff63,0x4c2ffffc,0xfffffffe,0x04fffe85,0x004fffe8,
    0x01ffffcc,0x05ffffd8,0xfffff300,0x20007fff,0x4ffffffa,0x93fff600,
    0xff92fffc,0x1fffec5f,0x21bfff60,0x8007fffa,0x7403fffe,0x98aeffff,
    0xfc9ffffd,0xffffffff,0xf8002fff,0x3fee3fff,0x3ffe20ef,0xfffb83ff,
    0xfe81ffff,0xffe804ff,0x3fea004f,0xff7006ff,0x40001dff,0x6ffffffc,
    0x7ffec000,0x3ee000ff,0x3fffa6ff,0x7c9fff50,0x7d401fff,0x7fec1fff,
    0xffe8004f,0x7fff403f,0xafffe81f,0x8cfffffd,0x00ffffd9,0x21ffffc0,
    0xfccffffe,0x643fffff,0xffffffff,0x27fff43f,0x027fff40,0x0effffa8,
    0xfffffa80,0xffe80001,0x20001fff,0x1ffffff8,0x5fffe600,0x3e26fff8,
    0xffff36ff,0x93fffe00,0x001ffff8,0x403fffe8,0xfb04fffe,0xffff97ff,
    0x05fffb09,0x43ffff80,0xfffffff9,0x362fffff,0xfb8befff,0x3ff64fff,
    0xfffe804f,0xffff9803,0xfff9800e,0x300002ff,0x0009ffff,0xffffffd8,
    0x7fffc006,0x744fffa9,0xfffa8fff,0xffff9005,0x0037ffd4,0x403fffe8,
    0xf903fffe,0xffff77ff,0x09fff505,0x83ffff80,0xafffffe8,0xff11fffe,
    0xffff30ff,0x4027ffec,0xf803fffe,0xd1005fff,0x0009ffff,0x02ffff80,
    0x3fffea00,0x2004ffff,0xffcbfffd,0x57ffdc2f,0x3003fffc,0x3f63ffff,
    0xfd0003ff,0xffe807ff,0x7fff902f,0x260ffff5,0x20105fff,0x2602ffff,
    0xffff0acb,0x413ffea1,0xffb1fffe,0xfffd009f,0xefff9807,0xffffb000,
    0xff00000b,0x220005ff,0xffefffff,0xff7001ff,0x81fffd9f,0xffecfff9,
    0x3ffa001f,0x0ffff8cf,0x7fffd000,0x02fffe80,0xff37fff9,0xfff503ff,
    0x41bffaab,0x4001ffff,0x3f27fff8,0xfff903ff,0x017fff27,0x700bfffe,
    0x32005fff,0x000effff,0x2ffff800,0xffffb000,0x0dffff37,0x3ffffe60,
    0xffff06ff,0xc800ffff,0xfffaffff,0x3ffa0006,0x7fff403f,0x17fff902,
    0xf907ffff,0x3ffe69ff,0x0ffff887,0x7dc0d4cc,0x3fff26ff,0x25fffd05,
    0x201ffffb,0x401ffffa,0xa801fffc,0x000fffff,0x5ffff000,0xffff5000,
    0x27fffe4d,0x7ffffc40,0xfffb03ff,0x9800bfff,0xffffffff,0x3ffa0003,
    0x7fff403f,0x27fff902,0xfe86fffc,0xffff12ff,0x47fffb87,0xfe86fffb,
    0x3ffea2ff,0x1ffff987,0x01dffff3,0x01ffffd1,0x400aaa98,0x02fffff9,
    0x3ffe0000,0x7fc4002f,0x7ff41fff,0xffe801ff,0xf701ffff,0x009fffff,
    0xffffffd0,0x7f40001f,0x7ff403ff,0x7fff902f,0x2bbfffe6,0x20ffffd9,
    0xebeffffe,0x7c45ffff,0xfea9cfff,0x7ffc46ff,0xffea8aef,0x7ffff46f,
    0xfffdbbef,0x998804ff,0x7ffe4009,0xccccccef,0x004ccccc,0x0017fffc,
    0x20fffff6,0x806ffff9,0x07fffffc,0x3fffffe6,0xfffb8002,0x40005fff,
    0x7403fffe,0xff902fff,0x7fffec7f,0x42ffffff,0xfffffffa,0xfd80efff,
    0xffffffff,0xffffb82f,0x1fffffff,0x7fffffcc,0xffffffff,0x3fffc800,
    0x7ffffe40,0xffffffff,0x7c007fff,0x2a002fff,0x3206ffff,0x5404ffff,
    0x405fffff,0x00ffffff,0xfffff880,0x7f40002f,0x7ff403ff,0x7fff902f,
    0xffffffc8,0xfffb04ff,0x03ffffff,0x3fffffa2,0x3f202fff,0xffffffff,
    0xffffd303,0x3dffffff,0x0ffff200,0xffffff90,0xffffffff,0xff800fff,
    0xff1002ff,0x7c403fff,0x2201ffff,0x403fffff,0x006ffffd,0x1fffff60,
    0x3fffa000,0x17fff403,0xb83fffc8,0x01effffe,0x7fffffd4,0x7fe4401d,
    0xa800dfff,0x1efffffe,0x7fffe440,0x4004efff,0x6403fffc,0xffffffff,
    0xffffffff,0x7fffc007,0xffff9002,0xffff5009,0xffffe80d,0x7fffdc01,
    0x3fea0004,0xe80005ff,0x7f403fff,0xfff902ff,0x004cc407,0x0026a620,
    0x00035310,0x40006a62,0x0000aa99,0x000ffff2,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x77640000,0xeeeeeeee,
    0x3b600acc,0x764000ee,0xeeeeeeee,0xddd902cd,0x5ddd5009,0x13bbbbb6,
    0xdddddd50,0x00f332a1,0x00fbbb20,0x437bbbb2,0xddb1eeec,0x0fbbb25d,
    0x00fbbb20,0xc82eee98,0xeeeeeeee,0x90eeeeee,0xdddddddd,0x3ddddddd,
    0x3bbbbbb2,0x401accee,0xd11eeee9,0xfffd8ddd,0xffffffff,0xfff02fff,
    0xffd8003f,0xffffffff,0x7fec0dff,0x7fdc02ff,0xfffffd3f,0x7ffec01f,
    0xfff91fff,0xfffb000b,0xffffc809,0x4bfffa1f,0xffb3fffe,0xfffb009f,
    0x7fff4009,0xfffffd83,0xffffffff,0xfffffb0f,0xffffffff,0x3fff65ff,
    0xffffffff,0xfff300df,0x1fffe23f,0xfffffffb,0xffffffff,0x03ffff09,
    0xfffffd80,0xffffffff,0x3ffff62f,0x9fffdc06,0x2ffffffe,0x3fffffe0,
    0x0bfff91f,0x09fffb00,0x0fffffdc,0x7f4bfffa,0x9fffb3ff,0x09fffb00,
    0x0fffff20,0x3ffffff6,0xffffffff,0xffffffb0,0xffffffff,0x3ffff65f,
    0xffffffff,0xfff982ff,0x8ffff11f,0xfffffffd,0xffffffff,0x0ffffc1f,
    0x3ffff600,0xffffffff,0xfffb0fff,0x7fdc07ff,0xfffffd3f,0x3ffe609f,
    0xff91ffff,0xffb000bf,0x3ffee09f,0xfffe82ff,0x367fffd2,0xfd804fff,
    0xff9804ff,0xffd83fff,0xffffffff,0xffb0ffff,0xffffffff,0x365fffff,
    0xffffffff,0x0fffffff,0x88ffffcc,0x7fec7fff,0x3ff2204f,0x7fffc3ff,
    0x7ffec001,0xffffd504,0x3fffff67,0x7fff700f,0x3ffffffa,0xfffff706,
    0x3fff23ff,0xfffd8005,0xfffffa84,0x7fff4002,0x009fffb3,0xd009fffb,
    0xb07fffff,0xb0009fff,0x20009fff,0xb304fffd,0xf98bffff,0x2aaa1fff,
    0x027ffec2,0x3e37fff4,0x6c001fff,0x3e204fff,0xfffb5fff,0x3ee0bfff,
    0xdfffd3ff,0xffb01fff,0x323fffdf,0xd8005fff,0x7fcc4fff,0xe8002fff,
    0xfffb3fff,0x9fffb009,0xfffffc80,0x4fffd83f,0x4fffd800,0x9fffb000,
    0x2ffffc80,0x007fffe6,0x4027ffec,0x7fc7fffc,0x7774c1ff,0x13fff64e,
    0x36dfffd0,0x2fffffff,0xfd3fffb8,0x05fff9ff,0xfffdbfff,0x017fff23,
    0x993fff60,0x402fffff,0xffd1eeec,0x13fff67f,0x813fff60,0xfffefff9,
    0x04fffd83,0x04fffd80,0x09fffb00,0x44bfffd0,0xb000ffff,0xfb009fff,
    0xffff8dff,0x3bfffa21,0x013fff60,0x3f6bfffb,0x0effffff,0xfe9fffdc,
    0x44fffaff,0xffebfff9,0x0bfff91f,0x29fffb00,0x03fffff8,0xfd2fffe8,
    0x3fff67ff,0x4fffd804,0xf7bffd10,0xfffb07ff,0xfffb0009,0x3ff60009,
    0xfffb804f,0x003fffc7,0xa809fffb,0x7fc4ffff,0xfffd11ff,0x4fffd81f,
    0x53fffe20,0xfffcfffd,0x9fffdc4f,0xffe9fffe,0x74fffdc6,0xfff91fff,
    0xfffb000b,0x9ffffd19,0x4bfffa00,0xffb3fffe,0x333333bf,0x09fffd33,
    0x3ee3fff2,0xfffd83ff,0xfffd8004,0x9999999d,0x3ff60999,0xfffa804f,
    0x003fffc7,0x999dfffb,0xffffd999,0x1ffff81f,0xb03ffffb,0xf5109fff,
    0x3f65ffff,0xffffcaff,0x74fffee1,0xfffc9fff,0x7f5fffa0,0xbfff91ff,
    0xbfffb000,0x0bfffffd,0x74bfffa0,0xfffb3fff,0xffffffff,0x509fffff,
    0x3fee7fff,0xffffd83f,0xffffffff,0x7ffffec5,0xffffffff,0x13fff64f,
    0x87fffe60,0x36006ffe,0xffffffff,0x2fffffff,0xfc9ffff8,0xffb01fff,
    0xffffffff,0x361dffff,0xfff8afff,0x4fffee6f,0xffa9fffe,0x2bfff13f,
    0xff91fffe,0xffb000bf,0xffffffff,0xfffd007f,0x6cffffa5,0xffffffff,
    0xffffffff,0x72fffc44,0xffb07fff,0xffffffff,0xfffd8bff,0xffffffff,
    0x3ff64fff,0xfff8804f,0x017ff62f,0xffffffd8,0xdfffffff,0xfbffff01,
    0x7ec05fff,0xffffffff,0x360fffff,0xfff52fff,0x4fffee5f,0xff89fffe,
    0x27fff55f,0xff91fffe,0xffb000bf,0xffffffff,0xffe801ff,0x27fffd2f,
    0xfffffffd,0xffffffff,0x07ffec4f,0xfb07fff7,0xffffffff,0xffd8bfff,
    0xffffffff,0x3f64ffff,0xff8804ff,0x13ff22ff,0xffd83333,0xffffffff,
    0xffff805f,0x200fffff,0xfffffffd,0x41efffff,0x3f62fffd,0xfffb8fff,
    0x3a3fffd3,0x3fff97ff,0x7e47fffa,0xfd8005ff,0xfabfffff,0x7f405fff,
    0x7fffd2ff,0x2ab7fff6,0xfeaaaaaa,0x3ffea4ff,0x41fffdc3,0xeeeffffd,
    0x6c4eeeee,0xaaaadfff,0x21aaaaaa,0x9804fffd,0x3f21ffff,0x1fffe24f,
    0x6c49fffb,0x7c05ffff,0xffffffff,0x3ffff605,0x1cceeeee,0x445fffb0,
    0xffbcffff,0x23fffd3f,0xffe9fffc,0x647fffa7,0xd8005fff,0x364fffff,
    0x3a02ffff,0xfffd2fff,0x013fff67,0x7c53fff6,0xfffb85ff,0x04fffd83,
    0x04fffd80,0x09fffb00,0x41ffff50,0x3fe23ffb,0x27ffec7f,0x037fffe4,
    0xffffffff,0x3ff603ff,0xffb0004f,0xffffb85f,0xffd3fffd,0x33ffea3f,
    0x3ffa5fff,0x0bfff91f,0x9ffffb00,0x0fffff98,0x3a5fffd0,0xfffb3fff,
    0x9fffb009,0x3fffffee,0xffffffff,0x09fffb1f,0x09fffb00,0x13fff600,
    0x51fffee0,0x7ffc45ff,0x827ffec7,0xf04ffffe,0xff79ffff,0x3fff60df,
    0xfffb0004,0xfffffd05,0x3fffa7ff,0xffffff11,0x8ffff47f,0x8005fffc,
    0xf905fffd,0x3fa0bfff,0x7fffd2ff,0x2013fff6,0xff74fffd,0xffffffff,
    0x363fffff,0xd8004fff,0xb0004fff,0xfb009fff,0x1ff98dff,0xfb1fffe2,
    0x3fe209ff,0xfff82fff,0x0ffffa4f,0x0013fff6,0x4c17ffec,0x3fffffff,
    0x7f43fffd,0x3a1fffff,0xfff91fff,0xfffb000b,0x3fffe209,0x2fffe82f,
    0x3f67fffd,0xffd804ff,0xfffff74f,0xffffffff,0x3fff63ff,0xfffd8004,
    0xfffb0004,0xffff9809,0x4c055443,0x27ffec6f,0x1dffff70,0x2a1ffff8,
    0x7ec0ffff,0xfb0004ff,0x3ff605ff,0xffd3ffff,0x7fffe43f,0x8ffff47f,
    0x8005fffc,0x2e04fffd,0x740effff,0xfffd2fff,0x013fff67,0x64d3fff6,
    0xeccccccc,0xb0ccefff,0xb0009fff,0x20009fff,0x2a04fffd,0x9986fffe,
    0x6c5fb819,0x7ec04fff,0x7ffc4fff,0x27fff41f,0x0013fff6,0x8817ffec,
    0xd3ffffff,0x7fd43fff,0x7ff45fff,0x9dfff91f,0x99999999,0x13fff659,
    0x89ffffd0,0xffd2fffe,0x13fff67f,0x013fff60,0xd83fffb8,0xd8004fff,
    0xccccefff,0x3ccccccc,0x999dfffb,0xfffffddb,0x0ffff883,0xffb07fee,
    0xfff8809f,0x3fffe1ff,0x07fffcc1,0x0009fffb,0xb80bfff6,0xfd3fffff,
    0x7ffc43ff,0x7fff43ff,0xffffff91,0xffffffff,0x013fff69,0x43fffff3,
    0xffd2fffe,0x13fff67f,0x013fff60,0xd83fffb8,0xd8004fff,0xffffffff,
    0x5fffffff,0xfffffffb,0x9fffffff,0x21ffff10,0xffd83ff9,0xfffb804f,
    0x07fffe6f,0xfd97fff6,0xfb0004ff,0xffe805ff,0x3fffd3ff,0x41ffffe8,
    0xff91fffe,0xffffffff,0x3f69ffff,0xffd804ff,0x3fffa6ff,0x367fffd2,
    0xfd804fff,0x3ee004ff,0xfffd83ff,0xfffd8004,0xffffffff,0xffb5ffff,
    0xffffffff,0x3e205dff,0x40320fff,0xb004fffd,0x3fe7ffff,0xfff881ff,
    0x09fffb2f,0x0bfff600,0x27ffff30,0x7e41fffe,0xfffe87ff,0xffffff91,
    0xffffffff,0x013fff69,0x53ffffe2,0xffd2fffe,0x13fff67f,0x013fff60,
    0xd83fffb8,0xd8004fff,0xffffffff,0x5fffffff,0xfffffffb,0x88079ddf,
    0x0000ffff,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x64000000,0xeeeeeeee,0x0001ccde,0x007bbbae,
    0x5555554c,0x1aaaaaaa,0x502f7640,0x0039bdb9,0x00000000,0x04000040,
    0x00022000,0x00000020,0x01000000,0xc80f776c,0xffb02eee,0xffffffff,
    0x0003dfff,0x009fffff,0x3ffffff6,0x4fffffff,0x21fffee0,0xffffffe9,
    0x005dc0df,0x32600000,0xffffda82,0xec8802df,0x8802deff,0xceffffec,
    0xffdb9800,0x36a003df,0xb02dfffe,0x3bfaabdd,0x5cdddb0b,0x740deffd,
    0xffb01fff,0x3fff607f,0xffffffff,0x2001ffff,0x0ffffffa,0xfffffd80,
    0xffffffff,0xfffff304,0xffffff88,0x320effff,0x00001cff,0x217ff540,
    0xfffffffd,0x3fa604ff,0x0dffffff,0xffffff30,0x5c05ffff,0xffffffff,
    0x3ff6201e,0x86ffffff,0xfff9efff,0x23fffa6f,0xfffffffd,0x407fffa1,
    0xfb03fffd,0xdddddfff,0x0dfffffd,0x7ffffec0,0xfffd803f,0xffffffff,
    0xffe883ff,0x7fff47ff,0xfffffdef,0x3bffff25,0x2e200002,0x322fffff,
    0xffffffff,0xff983fff,0xffffffff,0xfffff886,0x1fffffff,0xffffffa8,
    0xd02fffff,0xffffffff,0xffff8bff,0x3a4fffff,0xffffefff,0x3fa6ffff,
    0xfffb01ff,0x13fff607,0x0ffffd98,0xfffff880,0xaa9806ff,0xfcaaaaaa,
    0xfffb85ff,0x3fe67fff,0x7ffe42ff,0xfffff90f,0x200017ff,0xffffffc9,
    0x7ffff12f,0xbfffd513,0x17dfffb0,0xb85ffff7,0x3a60cfff,0x7fd44fff,
    0xffdacfff,0x7fdc0fff,0xffcaadff,0x3fffe2ff,0x3a1fddff,0x98beffff,
    0xfd1ffffd,0x3ff603ff,0x9fffb03f,0x2ffff880,0xfefffc80,0x80001fff,
    0x3e60effe,0x7fffffff,0x221bffee,0xf911ffff,0x9fffffff,0x3ff6a003,
    0x0befffff,0xf509db71,0xfffa8dff,0x37ffcc0f,0x260bfff2,0x7ff409bc,
    0x7ff4c0df,0x3fffe25f,0x25fffd82,0x021fffff,0x883ffffd,0xffd2ffff,
    0x3fff603f,0x09fffb03,0x001ffff0,0xffb5ffff,0xfc80009f,0x7ffe41ff,
    0x2a7fffcf,0xffd04eed,0xfffb505f,0x105bffff,0xffffffd7,0x260003bf,
    0x7fe47fff,0x3fffd05f,0x56ffffdc,0xffff8800,0x4ffff500,0x7306fffa,
    0x5ffff815,0x827fff40,0xffd3fffd,0x3fff603f,0x09fffb03,0x806fffa8,
    0xff57fffa,0x260001ff,0xffc84fff,0x07fff98c,0x07fffc40,0xfffff710,
    0x3fea3dff,0x0befffff,0x7f654400,0x7fec7fff,0xc99999bf,0x3fe62fff,
    0x1cefffff,0x80bfff50,0xff71ffff,0xfff000bf,0xfffe807f,0x27fffb03,
    0xfb01fffe,0x3ff607ff,0x999999df,0x803ffffb,0xff14fffd,0x3a0007ff,
    0x1dc80fff,0x001fffe6,0x400ffff7,0x2fffffda,0x39fffff9,0xffec9800,
    0x47ffffff,0xffffffff,0x43ffffff,0xfffffffb,0x7fec2eff,0x7fff404f,
    0x009fff92,0x803ffff0,0xf902fffe,0x3fffa7ff,0x07fffb01,0x3ffffff6,
    0xffffffff,0xffff8802,0x01bfff61,0x413ffea0,0x07fff980,0x13fffe20,
    0xffffb300,0x33ffff25,0x7ffd4001,0xfffcdfff,0x7fffffc7,0xffffffff,
    0xffffea84,0x323fffff,0x7f403fff,0x9fffb2ff,0x3ffff000,0x02fffe80,
    0x3fa7fff9,0xfffd01ff,0x3ffff607,0xffffffff,0xfff7005f,0x1ffff98d,
    0x07fff400,0x0ffff300,0x1bfffa20,0x7fff5c40,0xfff92fff,0x3005dfff,
    0x4459ffff,0x7ff47fff,0xaaaaaacf,0x2e601aaa,0xfffffffd,0x80bfff50,
    0xff71ffff,0xfff000bf,0xfffe803f,0x27fff902,0xff02fffe,0x3ff607ff,
    0xffffffff,0x401effff,0xff83fffe,0x3e6004ff,0x7cc005ff,0xfe8807ff,
    0x64c02fff,0xefffffff,0x3fffee22,0x901cffff,0xff30bfff,0x4fffd8ff,
    0xfc980000,0xfff32fff,0x7fffcc0d,0x20dfff50,0x3fe3cef9,0x7ff401ff,
    0x7fff902f,0x2a0ffff6,0xfb03ffff,0x99999dff,0x5fffffb9,0x03fffe60,
    0x003ffff2,0x0017ffec,0x101fffe6,0x207ffffd,0xfffffeb8,0x75401dff,
    0xefffffff,0x417fff42,0x7dc7fffb,0xcef887ff,0x3ffd910b,0xf8bfffa0,
    0xfd883fff,0x3ffe65ff,0x6fffc82f,0xd003fffe,0x3f205fff,0xffff73ff,
    0x7ffffd43,0x09fffb03,0x05fffe88,0x999ffff9,0x7ffffb99,0x0ffff100,
    0x0ffff300,0x27ffff44,0xffffffb8,0x4c000cff,0xfffffffc,0x8dfffb1f,
    0x447ffff9,0x321dffff,0x3fa0ffff,0x7fcc0eff,0x3fff20ff,0xfffc8bef,
    0x7ffe41ff,0xfffb99df,0x03fffe3f,0x205fffd0,0xff53fffc,0xffffffff,
    0x3f607fff,0xffa804ff,0xffff80ff,0xffffffff,0xfa806fff,0xf98004ff,
    0xffd107ff,0x7fe407ff,0x0003efff,0xfffffc88,0xfffff72f,0xffffffdb,
    0xfffffb81,0x43fffffe,0xdefffffa,0xd84fffff,0xffffffff,0xff883fff,
    0xffffffff,0x07fffc6f,0x40bfffa0,0x3f23fffc,0xacffffff,0xffb03fff,
    0xfff1009f,0xffffa85f,0xffffffff,0x6c01ffff,0x98001fff,0xfe887fff,
    0x7e403fff,0x00002dff,0x45fffd50,0xfffffffe,0xb82fffdd,0xffffffff,
    0xffff504f,0x0dffffff,0x7fffffe4,0x3a603fff,0xffffffff,0x07fffc0f,
    0x40bfffa0,0x7643fffc,0xff52efff,0x3fff607f,0xffffa804,0x7ffffec1,
    0xffffffff,0x7fc04fff,0xff30007f,0xffffb0ff,0x039f9005,0x36600000,
    0x3fff222f,0xbfff53ff,0x3ffff660,0x7e4c02ef,0x02efffff,0xffffeda8,
    0xffc8800d,0xf80bffff,0x7f400fff,0xfff902ff,0x00026207,0x2027ffec,
    0x447fffe9,0xc801ffff,0xf300ffff,0x26000dff,0x7fdc7fff,0x013004ff,
    0x22000000,0x000a9880,0x0009a880,0x0009a998,0x40001510,0x00000998,
    0x00000000,0x677ffec0,0xffedcccc,0x7fe45fff,0xfff3007f,0x3ffea07f,
    0xfff30005,0x7ffffc4f,0xeeeeeeee,0x00000002,0x00000000,0x00000000,
    0x00000000,0x00000000,0xffffd800,0xffffffff,0x7fc0efff,0x3fa004ff,
    0xfff706ff,0x3fe60009,0x3fffea7f,0xffffffff,0x1555402f,0x777776c0,
    0x0eeeeeee,0x1003bbba,0x98800133,0x3ffff601,0xffffffff,0x866623ff,
    0xd70eeee9,0x3bbaebdd,0x01bca985,0x20222228,0x3fe09998,0x00ffffff,
    0x7ffffec0,0xffffffff,0x7ffd41ff,0x3fee001f,0xfffc81ff,0xfff30003,
    0x7ffffecf,0xffffffff,0x02fffc02,0x7ffffff4,0x20ffffff,0x7c00ffff,
    0x7dc006ff,0x3ffff607,0xffffffff,0x3fffa3ff,0x23ffff51,0xff96fffc,
    0xffffc8df,0x2ec41cff,0xfd89fffb,0x3fffe2ff,0x4000ffff,0xfffffffd,
    0x02ceffff,0x800dfffb,0xd84ffff8,0x30002fff,0x3fe2ffff,0xffffffff,
    0x7c02ffff,0xffe805ff,0xffffffff,0x3fffe0ff,0x3fffee00,0x81fee002,
    0xfffffffd,0x3fffffff,0x7d47fffa,0xfff91fff,0xe9bfff2d,0xffffffff,
    0x45ffdcef,0x3f60fffd,0x3fffe2ff,0x0000ffff,0x00000000,0x00000000,
    0xf8000000,0xccb805ff,0xfffecccc,0x07fffc6f,0x0dffffd0,0x54df52d8,
    0x3bbbbb22,0xeeeeeeee,0x47fffa2e,0xf91ffffa,0x3fff2dff,0x3fffffe6,
    0xffffffff,0x1fff445f,0x7fc5fffb,0x00ffffff,0x00008000,0x403eeeb8,
    0xdd32eeed,0x3bb609dd,0x07bbb25e,0x5c17bba2,0x7fc02eee,0x3e60005f,
    0x5540efff,0xfff500aa,0x3e203fff,0xffcdfcef,0xfe800005,0xffff30ff,
    0x5dbffee1,0x33fe6fff,0xffffecaa,0xe882ffff,0x8bfff66f,0x19999999,
    0x4eee8800,0x83bffd91,0xa83dffdb,0x3e607fff,0x3ff20fff,0x7ffe42ff,
    0x0fffee1f,0x207fffee,0x7c01fffe,0xf30005ff,0x0001ffff,0x7fff7ff4,
    0xfffff505,0x001fffff,0xff1fe000,0xa7ffd4ff,0x03a4fffa,0x6ffff5c4,
    0x00266201,0x3e200000,0xffff9dff,0xffd89fff,0xfe84ffff,0xfff902ff,
    0xefffe889,0x87ffff30,0xfd86fff8,0x7fc43fff,0x3bbbb27f,0xeeeffffe,
    0x3fe202ee,0x20001fff,0xffdbfffa,0x3fee600f,0x554c1aef,0xaaaaaaaa,
    0x7d41aaaa,0xf12fff47,0x3ffe27ff,0x00088003,0x00000000,0xfffffff1,
    0xfdffffff,0x7fffffff,0xf05fffb8,0xff303fff,0x3fffa9ff,0x81fffd05,
    0x545fffff,0x3ff64fff,0xffffffff,0xd103ffff,0x0005ffff,0xf98fffe8,
    0x7fe404ff,0xfffd81ff,0xffffffff,0x3fea3fff,0x3e27fe42,0x0bffe2ff,
    0x00000000,0xff100000,0xf713bfff,0x717fffff,0xf88bffff,0x7fd40fff,
    0x3ffee06f,0x00ffffdf,0x7cc5fff7,0x7ec7ffff,0x3fff61ff,0xffffffff,
    0xffb03fff,0x980007ff,0x3ffa4fff,0xd5ff900f,0xfffd81df,0xffffffff,
    0x9ff13fff,0x00000000,0x00000000,0xffff1000,0x5ffffd0b,0xd86fffa8,
    0x7fec3fff,0x7fff403f,0x2602ffff,0x3fee5fff,0x3fe1ffff,0x7fffec7f,
    0xffffffff,0xfffc83ff,0xfd80004f,0x3ffee1ff,0xf35ffa83,0xffffd8bf,
    0xffffffff,0x0006e3ff,0x00000000,0x00000000,0x417fffc4,0xf886fffc,
    0xfffa87ff,0x03fffe26,0xffffff10,0x4fffd009,0x3fffdffd,0x9889fff3,
    0xefff9999,0x5c099999,0x0005ffff,0x446fff98,0x1f507fff,0x5554c264,
    0xaaaaaaaa,0x00001aaa,0x00000000,0x00000000,0x903ffff1,0xff10bfff,
    0xfffd01ff,0x013ffee3,0x07ffffd4,0xf8fffe40,0x95ffdaff,0x3e005fff,
    0xffa805ff,0x266005ff,0x1fffec19,0x001fffec,0x00000000,0x00000000,
    0x00000000,0x07fffc40,0x442fffe4,0xfb80ffff,0x3fffd4ff,0x3ffff200,
    0xfff9802f,0xfb8fff9b,0x00fffd7f,0x2602fffc,0xccdfffff,0x3e2ccccc,
    0xddd10fff,0xbddd301d,0x00000000,0x00000000,0x00000000,0xfff10000,
    0x13fff20f,0x203fffe2,0xff8efff8,0xfff3006f,0xf001ffff,0x2dff7dff,
    0xfffafff8,0x17ffe005,0xffffff70,0x9fffffff,0x0007fffc,0x00000000,
    0x00000000,0x00000000,0x7c400000,0xfff907ff,0x1ffff109,0x3f7fff60,
    0xfe8803ff,0x05ffffff,0xffefffc8,0x3ffbffa4,0x3ffe002f,0x7fffdc05,
    0xffffffff,0x03fffe4f,0x00000000,0x00000000,0x00000000,0x20000000,
    0xf907fff8,0xfff109ff,0x3ffea01f,0xc800ffff,0xfffbffff,0x7ffd403f,
    0x3ff22fff,0x2000ffff,0x7dc04eee,0xffffffff,0x3fe4ffff,0x000000ff,
    0x00000000,0x00000000,0x00000000,0x7fff8800,0x109fff90,0x7401ffff,
    0x805fffff,0xfb2ffffa,0xff801fff,0x3ea0ffff,0x0005ffff,0x00000000,
    0x00000000,0x00000000,0x00000000,0x80000000,0xf907fff8,0xfff109ff,
    0x7ffdc01f,0x7fc401ff,0x3ffe25ff,0x7ffec06f,0x7fffc46f,0x9999103f,
    0x99999999,0x00099999,0x00000000,0x00000000,0x00000000,0x00000000,
    0x1fffe200,0x4427ffe4,0x2200ffff,0xd806ffff,0x7dc0ffff,0x3ea04fff,
    0xffe84fff,0xfff300ff,0xffffffff,0x00ffffff,0x00000000,0x00000000,
    0x00000000,0x00000000,0x3ffe2000,0x09fff907,0x801ffff1,0x5c03fffd,
    0xfd02ffff,0x3e203fff,0xffc82fff,0x3ffe606f,0xffffffff,0x007fffff,
    0x00000000,0x00000000,0x00000000,0x00000000,0xffff1000,0x213fff20,
    0x000ffff8,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,
};

static signed short stb__arial_bold_34_usascii_x[95]={ 0,2,1,0,1,1,1,1,1,0,0,1,1,0,
2,-1,1,2,0,1,0,1,1,1,1,0,2,2,1,1,1,1,0,0,2,1,2,2,2,1,2,2,0,2,
2,2,2,1,2,1,2,1,0,2,-1,0,0,-1,0,2,-1,0,1,-1,0,1,2,1,1,0,0,1,2,2,
-2,2,2,1,2,1,2,1,2,0,0,2,0,0,0,0,0,0,2,0,0, };
static signed short stb__arial_bold_34_usascii_y[95]={ 27,5,5,4,3,4,4,5,4,4,4,8,22,17,
22,4,5,5,5,5,5,5,5,5,5,5,11,11,7,11,7,4,4,5,5,4,5,5,5,4,5,5,5,5,
5,5,5,4,5,4,5,4,5,5,5,5,5,5,5,5,4,5,4,30,4,10,5,10,5,10,4,10,5,5,
5,5,5,10,10,10,10,10,10,10,5,11,11,11,11,11,11,4,4,4,13, };
static unsigned short stb__arial_bold_34_usascii_w[95]={ 0,6,12,17,15,25,21,5,9,9,12,16,6,10,
5,10,15,10,16,15,17,16,15,15,15,16,6,6,16,16,16,17,30,22,19,20,19,17,16,21,18,5,15,20,
16,22,18,22,17,23,20,18,18,18,22,29,21,22,19,8,10,8,16,19,8,15,16,16,16,16,12,16,15,5,
9,15,5,25,15,17,16,16,11,16,10,15,17,24,17,17,15,12,4,11,17, };
static unsigned short stb__arial_bold_34_usascii_h[95]={ 0,22,8,24,28,24,24,8,30,30,12,16,10,5,
5,24,23,22,22,23,22,23,23,22,23,23,16,21,18,11,18,23,30,22,22,24,22,22,22,24,22,22,23,22,
22,22,22,24,22,26,22,24,22,23,22,22,22,22,22,29,24,29,13,4,6,18,23,18,23,18,23,24,22,22,
29,22,22,17,17,18,24,24,17,18,23,17,16,16,16,23,16,30,30,30,7, };
static unsigned short stb__arial_bold_34_usascii_s[95]={ 251,240,182,173,110,225,1,195,72,1,145,
88,175,234,228,62,183,60,71,216,167,232,1,44,50,33,121,247,105,158,88,
85,11,21,1,73,220,202,185,23,148,142,17,115,98,75,56,150,38,126,1,
105,221,66,198,168,146,123,103,101,94,92,128,88,219,122,199,190,166,138,153,
45,240,136,82,22,249,1,219,172,208,191,207,155,142,235,27,63,45,124,105,
59,54,42,201, };
static unsigned short stb__arial_bold_34_usascii_t[95]={ 1,81,123,1,1,1,32,123,1,1,123,
123,123,123,123,32,32,104,104,32,81,32,57,104,57,57,123,81,104,123,104,
57,1,104,104,32,81,81,81,32,81,81,57,81,81,81,81,1,81,1,81,
32,57,57,57,57,57,57,57,1,32,1,123,140,123,104,32,104,32,104,32,
32,57,81,1,81,32,127,104,104,1,1,104,104,32,104,127,127,127,32,123,
1,1,1,123, };
static unsigned short stb__arial_bold_34_usascii_a[95]={ 135,162,231,271,271,433,352,116,
162,162,189,284,135,162,135,135,271,271,271,271,271,271,271,271,
271,271,162,162,284,284,284,297,475,352,352,352,352,325,297,379,
352,135,271,352,297,406,352,379,325,379,352,325,297,352,325,460,
325,325,297,162,135,162,284,271,162,271,297,271,297,271,162,297,
297,135,135,271,135,433,297,297,297,297,189,271,162,297,271,379,
271,271,243,189,136,189,284, };

// Call this function with
//    font: NULL or array length
//    data: NULL or specified size
//    height: STB_FONT_arial_bold_34_usascii_BITMAP_HEIGHT or STB_FONT_arial_bold_34_usascii_BITMAP_HEIGHT_POW2
//    return value: spacing between lines
static void stb_font_arial_bold_34_usascii(stb_fontchar font[STB_FONT_arial_bold_34_usascii_NUM_CHARS],
                unsigned char data[STB_FONT_arial_bold_34_usascii_BITMAP_HEIGHT][STB_FONT_arial_bold_34_usascii_BITMAP_WIDTH],
                int height)
{
    int i,j;
    if (data != 0) {
        unsigned int *bits = stb__arial_bold_34_usascii_pixels;
        unsigned int bitpack = *bits++, numbits = 32;
        for (i=0; i < STB_FONT_arial_bold_34_usascii_BITMAP_WIDTH*height; ++i)
            data[0][i] = 0;  // zero entire bitmap
        for (j=1; j < STB_FONT_arial_bold_34_usascii_BITMAP_HEIGHT-1; ++j) {
            for (i=1; i < STB_FONT_arial_bold_34_usascii_BITMAP_WIDTH-1; ++i) {
                unsigned int value;
                if (numbits==0) bitpack = *bits++, numbits=32;
                value = bitpack & 1;
                bitpack >>= 1, --numbits;
                if (value) {
                    if (numbits < 3) bitpack = *bits++, numbits = 32;
                    data[j][i] = (bitpack & 7) * 0x20 + 0x1f;
                    bitpack >>= 3, numbits -= 3;
                } else {
                    data[j][i] = 0;
                }
            }
        }
    }

    // build font description
    if (font != 0) {
        float recip_width = 1.0f / STB_FONT_arial_bold_34_usascii_BITMAP_WIDTH;
        float recip_height = 1.0f / height;
        for (i=0; i < STB_FONT_arial_bold_34_usascii_NUM_CHARS; ++i) {
            // pad characters so they bilerp from empty space around each character
            font[i].s0 = (stb__arial_bold_34_usascii_s[i]) * recip_width;
            font[i].t0 = (stb__arial_bold_34_usascii_t[i]) * recip_height;
            font[i].s1 = (stb__arial_bold_34_usascii_s[i] + stb__arial_bold_34_usascii_w[i]) * recip_width;
            font[i].t1 = (stb__arial_bold_34_usascii_t[i] + stb__arial_bold_34_usascii_h[i]) * recip_height;
            font[i].x0 = stb__arial_bold_34_usascii_x[i];
            font[i].y0 = stb__arial_bold_34_usascii_y[i];
            font[i].x1 = stb__arial_bold_34_usascii_x[i] + stb__arial_bold_34_usascii_w[i];
            font[i].y1 = stb__arial_bold_34_usascii_y[i] + stb__arial_bold_34_usascii_h[i];
            font[i].advance_int = (stb__arial_bold_34_usascii_a[i]+8)>>4;
            font[i].s0f = (stb__arial_bold_34_usascii_s[i] - 0.5f) * recip_width;
            font[i].t0f = (stb__arial_bold_34_usascii_t[i] - 0.5f) * recip_height;
            font[i].s1f = (stb__arial_bold_34_usascii_s[i] + stb__arial_bold_34_usascii_w[i] + 0.5f) * recip_width;
            font[i].t1f = (stb__arial_bold_34_usascii_t[i] + stb__arial_bold_34_usascii_h[i] + 0.5f) * recip_height;
            font[i].x0f = stb__arial_bold_34_usascii_x[i] - 0.5f;
            font[i].y0f = stb__arial_bold_34_usascii_y[i] - 0.5f;
            font[i].x1f = stb__arial_bold_34_usascii_x[i] + stb__arial_bold_34_usascii_w[i] + 0.5f;
            font[i].y1f = stb__arial_bold_34_usascii_y[i] + stb__arial_bold_34_usascii_h[i] + 0.5f;
            font[i].advance = stb__arial_bold_34_usascii_a[i]/16.0f;
        }
    }
}

#ifndef STB_SOMEFONT_CREATE
#define STB_SOMEFONT_CREATE              stb_font_arial_bold_34_usascii
#define STB_SOMEFONT_BITMAP_WIDTH        STB_FONT_arial_bold_34_usascii_BITMAP_WIDTH
#define STB_SOMEFONT_BITMAP_HEIGHT       STB_FONT_arial_bold_34_usascii_BITMAP_HEIGHT
#define STB_SOMEFONT_BITMAP_HEIGHT_POW2  STB_FONT_arial_bold_34_usascii_BITMAP_HEIGHT_POW2
#define STB_SOMEFONT_FIRST_CHAR          STB_FONT_arial_bold_34_usascii_FIRST_CHAR
#define STB_SOMEFONT_NUM_CHARS           STB_FONT_arial_bold_34_usascii_NUM_CHARS
#define STB_SOMEFONT_LINE_SPACING        STB_FONT_arial_bold_34_usascii_LINE_SPACING
#endif

