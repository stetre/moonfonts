// Font generated by stb_font_inl_generator.c (4/1 bpp)
//
// Following instructions show how to use the only included font, whatever it is, in
// a generic way so you can replace it with any other font by changing the include.
// To use multiple fonts, replace STB_SOMEFONT_* below with STB_FONT_times_bold_32_usascii_*,
// and separately install each font. Note that the CREATE function call has a
// totally different name; it's just 'stb_font_times_bold_32_usascii'.
//
/* // Example usage:

static stb_fontchar fontdata[STB_SOMEFONT_NUM_CHARS];

static void init(void)
{
    // optionally replace both STB_SOMEFONT_BITMAP_HEIGHT with STB_SOMEFONT_BITMAP_HEIGHT_POW2
    static unsigned char fontpixels[STB_SOMEFONT_BITMAP_HEIGHT][STB_SOMEFONT_BITMAP_WIDTH];
    STB_SOMEFONT_CREATE(fontdata, fontpixels, STB_SOMEFONT_BITMAP_HEIGHT);
    ... create texture ...
    // for best results rendering 1:1 pixels texels, use nearest-neighbor sampling
    // if allowed to scale up, use bilerp
}

// This function positions characters on integer coordinates, and assumes 1:1 texels to pixels
// Appropriate if nearest-neighbor sampling is used
static void draw_string_integer(int x, int y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0, cd->t0); glVertex2i(x + cd->x0, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t0); glVertex2i(x + cd->x1, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t1); glVertex2i(x + cd->x1, y + cd->y1);
        glTexCoord2f(cd->s0, cd->t1); glVertex2i(x + cd->x0, y + cd->y1);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance_int;
    }
    glEnd();
}

// This function positions characters on float coordinates, and doesn't require 1:1 texels to pixels
// Appropriate if bilinear filtering is used
static void draw_string_float(float x, float y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0f, cd->t0f); glVertex2f(x + cd->x0f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t0f); glVertex2f(x + cd->x1f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t1f); glVertex2f(x + cd->x1f, y + cd->y1f);
        glTexCoord2f(cd->s0f, cd->t1f); glVertex2f(x + cd->x0f, y + cd->y1f);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance;
    }
    glEnd();
}
*/

#ifndef STB_FONTCHAR__TYPEDEF
#define STB_FONTCHAR__TYPEDEF
typedef struct
{
    // coordinates if using integer positioning
    float s0,t0,s1,t1;
    signed short x0,y0,x1,y1;
    int   advance_int;
    // coordinates if using floating positioning
    float s0f,t0f,s1f,t1f;
    float x0f,y0f,x1f,y1f;
    float advance;
} stb_fontchar;
#endif

#define STB_FONT_times_bold_32_usascii_BITMAP_WIDTH         256
#define STB_FONT_times_bold_32_usascii_BITMAP_HEIGHT        126
#define STB_FONT_times_bold_32_usascii_BITMAP_HEIGHT_POW2   128

#define STB_FONT_times_bold_32_usascii_FIRST_CHAR            32
#define STB_FONT_times_bold_32_usascii_NUM_CHARS             95

#define STB_FONT_times_bold_32_usascii_LINE_SPACING          21

static unsigned int stb__times_bold_32_usascii_pixels[]={
    0x44000aa0,0x001abba9,0x000aa92e,0x8800ba88,0x4ccc0030,0x33333099,
    0x57531001,0x02440003,0x06666662,0x44003333,0x4c0001a9,0x310a20ab,
    0x15cc3333,0x97003710,0x2aea0970,0x0025c000,0x200bffb0,0xaacceeb8,
    0x6c01cedb,0x003bf267,0x220177dc,0x200ba65c,0xff4fffca,0x754039df,
    0xdffecdff,0xdffb5000,0xffff7037,0x3fee219f,0x3ffaa00c,0x00cffecd,
    0x7f99ff90,0xffd88bf5,0xffffe8ff,0x404fff83,0x74c7f87f,0x5004fdaf,
    0x7fc0007f,0x6fdc00ff,0x203ea802,0x00efb87d,0x7cc037e4,0x9005e884,
    0x0bffe9ff,0x885ffd88,0x3a603fff,0xefc9f9af,0x07fffd43,0xffb102ec,
    0x05fff10b,0x3f60ffc8,0xffff05ff,0x3fffb37d,0x103fffd4,0x225f88bf,
    0x07ff35ff,0x40006f88,0x36206ffd,0x2644001f,0x4ff887d8,0x100ffe60,
    0x027d40df,0xfffa7fdc,0x1dfff101,0x217ffe60,0x5cf34fe8,0x2fffe86f,
    0xfff101e8,0x2fffd40d,0x7d45ffb8,0xfffd05ff,0x2e6fff87,0xf500ffff,
    0x3f23fa87,0x01fff34f,0x200007ec,0xdf100cb8,0x416c0001,0x07ff887d,
    0xe880ffee,0x027f402f,0x7ffd3fee,0x03fffb00,0x642fffc8,0x6c8f31ff,
    0x445fffa8,0x07fff606,0x885fff90,0x7fcc3fff,0x1fffd05f,0xf51fffc8,
    0x17dc0fff,0x3ffe8bee,0x2a05fff1,0x0000003f,0x880001fb,0xff987d87,
    0x813ff207,0xffb807fd,0x7d3fee01,0xfffb80ff,0xffff9807,0x3cd3ff60,
    0x7fff41a6,0x7fdc0ee1,0xfff9807f,0x0bffea0f,0x3a0bfff1,0x7fdc0fff,
    0x0bfff13f,0x83f607ec,0xfff13fff,0x000df107,0x81999988,0x2ee201fc,
    0xd8370660,0x206ffa87,0xff106ffa,0x817fe009,0x1fff4ffb,0x04ffff88,
    0x6cbffff0,0x2879cfff,0x749fff70,0x4ffff880,0x4bffff00,0x7c41fffc,
    0xfffd05ff,0x24fffa81,0x2aa23fff,0xfaaaaffa,0x29ffd2af,0xfd82fff8,
    0x7ecc0000,0x027c47ff,0xff799ff3,0x43ec398d,0x3e605ffb,0x05ff907f,
    0x5c07ff60,0x81fff4ff,0x003ffffa,0x7d4ffffd,0x2007efff,0x598ffff8,
    0x07ffff50,0xd9bfffa0,0x7fc41fff,0x1fffd05f,0x365fffa8,0x3ffee1ff,
    0xffffffff,0x229ff96f,0x1fd40fff,0xffff0000,0xff700fb8,0x213ffb21,
    0x7fe43ec5,0x21ffe203,0x9001fff8,0x3fee0bff,0xfb81fff4,0xfb002fff,
    0x7ffc1fff,0x32003fff,0x702cbfff,0x2005ffff,0xfb0ffffd,0xfff883ff,
    0x81fffd05,0x3ee4fffa,0x6fe55447,0x2adfcaaa,0x3fe6bff1,0x00037c44,
    0xbd1fffe0,0xfb93fea0,0x3ec681ff,0x3e017fd4,0x0fffa85f,0x20fff700,
    0x1fff4ffb,0x01ffffd8,0x43ffffb0,0xdffffff9,0xffff8800,0x3ffff606,
    0xffffb001,0x10bffee3,0x3fa0bfff,0x7ffdc0ff,0xfb81be62,0x7d417dc2,
    0xfd85fc8f,0x7fc00000,0x220be67f,0x3ff60fff,0x887d8b07,0x3fe604fe,
    0x007ffb82,0x2e03ffea,0x81fff4ff,0x001ffffe,0x885ffff9,0x1ffffffe,
    0x04fffd80,0x007ffffa,0x997fffe4,0x7fc43fff,0x1fffd05f,0x7c1fffc8,
    0xfb03f604,0x06f2e201,0x2aa20fea,0x7fff8001,0x3ff603ea,0x582fff44,
    0x0ff883ec,0x3f207f90,0x3fea007f,0xf4ffb81f,0xfffd81ff,0xfffb002f,
    0x3ffee03f,0x7cc01fff,0x3ff600ff,0xffb002ff,0x37ffc3ff,0x7417ffea,
    0x7ff42fff,0x1fe03e85,0xf88001ba,0xdfbdfc86,0x9fffe000,0x1fff887b,
    0x260fffe2,0xd7103ec3,0xb00ef549,0x7d400fff,0x4ffb82ff,0xffb81fff,
    0xffb002ff,0x7fd401ff,0xfe804fff,0x7fffdc06,0xffffd002,0x4efffd41,
    0xd05fffec,0xf917ffff,0x885b01ff,0xbaaaefba,0x4002aaef,0x87fe41fd,
    0x3fe006fe,0x3f21b27f,0x07ffe47f,0x301f60dc,0x005f5cdb,0x5400fffb,
    0xffb82fff,0xfa81fff4,0xfd003fff,0xdf980fff,0xfb807fff,0x7fffd402,
    0xfffff003,0x39ffff50,0x3fa0bfff,0xdfffe9ff,0xffb81701,0xffffffff,
    0x3ea006ff,0xfb3ffc43,0x3ffe007f,0x3ff61b27,0x41bffe25,0x3f607d85,
    0x902fd882,0x7d400fff,0x4ffb81ff,0xfff01fff,0x3ffe009f,0x6de6023f,
    0x7c402fff,0x4ffff800,0x3ffff880,0x7fc42a60,0x1fffd05f,0x220002a2,
    0xdaaacfda,0x1002aacf,0x4fff50df,0xff005ffd,0x7fc3d4ff,0x13fff24f,
    0x6c1f612a,0x07fe605f,0xa801ffee,0xffb80fff,0xf701fff4,0xff500fff,
    0x260dc1ff,0x500bffe7,0x3ffee009,0x7fff9807,0x2fffc400,0x000fffe8,
    0xd81fb004,0x1fd8000f,0x3f27ffb8,0xffff006f,0xfff107cc,0x0bffeee9,
    0x30fb01d3,0x5ff805ff,0x000fffa8,0x3ee0fff7,0x201fff4f,0x6c02fffe,
    0x225c2fff,0xa87ff679,0xe800363e,0x7ec02fff,0x7c4003ff,0xfffd05ff,
    0x177e4001,0x003fc37c,0xffb81fd4,0x4017ff67,0x217c7fff,0xf8ddffff,
    0x987a20ff,0x7ff70fb0,0xf887ff80,0xff9001ff,0x7d3fee0d,0xffd100ff,
    0x1fffcc0d,0x7cf30fdc,0x59bffc5f,0x37fec400,0x005fff70,0x20bfff10,
    0x3000fffe,0x5f88dfff,0x22002fc4,0x3ffe606f,0x2009ffb0,0x21f47fff,
    0xfd0efffc,0x443d915f,0x3fee1f65,0x41ffe604,0xfb002ffd,0x53fee05f,
    0x7ec00fff,0x7ffcc0df,0x265ff702,0xff81df77,0x90000ebf,0xff981bff,
    0xff30001f,0x3fffe0df,0xffff3000,0x1fd43fa8,0xb007f600,0x03ffa1ff,
    0x2a3fffc0,0x313f220f,0x39017bf9,0x2ffd43ec,0x260dff50,0xdfd004ff,
    0xffa7fdc0,0xffc9800f,0x00befecd,0x3fbfff66,0xbfd504fe,0xeda80003,
    0x0ceffddf,0xfffd5000,0x3ff623bf,0xfb002dff,0x641fb87f,0x0fea002f,
    0x3e6ffa20,0x3ffa001f,0x00004c87,0xf30fb126,0x2ffdc0ff,0xf300ffb0,
    0xa7fdc05f,0x22000fff,0x000ffffe,0x8007dccc,0x98800000,0x3300001a,
    0x22133333,0x01999999,0x20a60260,0x176000a9,0x017b9700,0x886ffe80,
    0xd980002f,0x7fc43ec0,0x80fff207,0x7ec02ff9,0xfa7fdc05,0x7d4000ff,
    0x30005fff,0x0000000f,0x00000000,0x00000000,0x00000000,0x7fec7220,
    0x0003d506,0x83ec06cc,0x3fea05ff,0x1037cc03,0xffc801df,0x0001fff4,
    0x007ffff9,0x44444000,0x33322088,0xcccccccc,0x00002ccc,0x00000000,
    0x00000000,0xb5fc8000,0x274c09ff,0xd806dc00,0x401ffa87,0x3fa806fe,
    0xf9001db0,0x007ffe9f,0x77fffdc0,0x8000089b,0xfffffff9,0xffffff36,
    0xffffffff,0x0000000b,0x00000000,0x00000000,0x3bf6df70,0x00aeb800,
    0xfb00bae2,0x8802fea8,0x74c00cfd,0x30033a24,0x3fe9fff5,0x88000adf,
    0x2efffeca,0xfff98000,0x3316ffff,0x33333333,0x00033333,0x00000000,
    0x00000000,0x3f600000,0x22001dfd,0xeecceecb,0x5cfb002d,0x5d4000bd,
    0x151a800d,0x26666600,0x01333330,0x00011000,0xeeeee980,0x000005ee,
    0x00000000,0x00000000,0x80000000,0x02600000,0x0000c400,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x98003b80,0x10000aaa,0x00001575,0x0980ab98,0x33333310,
    0x32a20333,0x2666201b,0x4ccc0199,0x04b80199,0x01333330,0x4c401530,
    0x80001999,0x98800ab9,0x09999999,0x106a6200,0x33333333,0x26662133,
    0x40999999,0xc8999999,0xdfd3000f,0x4003bfd7,0x0dffeefb,0xffb73000,
    0xb37bfddf,0x3ffaea03,0x220bdfff,0xfffccffc,0xfff936ff,0x7fe40bff,
    0x2fc00cef,0x5fffec80,0x37f37ae0,0xffffc880,0xfec88000,0x7f401fff,
    0x0fffffff,0x16ff5c40,0x7fffffec,0xb713ffff,0x37bfffff,0x5f7fedc4,
    0xfa803fa8,0x007ff44f,0x9ff737dc,0xbfff7000,0x03fff905,0x05ffff98,
    0x7fdc7ffd,0x7ffd43ce,0x07f403ff,0x3001fcc0,0x3ee0bfff,0xfe81bee6,
    0xfe8000ff,0x206fffff,0xfffffff8,0x67fdc05f,0x3ffffe00,0x81ffffff,
    0xe807ffff,0x2202fc0f,0x7fe41fff,0x127fc405,0x6c001fff,0x7cc04fff,
    0x7ffc401f,0x1fffb84f,0x6c03ffe6,0x201fffff,0x01f9005c,0x42fffcc0,
    0x3fe63ff8,0x01fffd04,0xfebbdc80,0xff702fff,0x05ffffff,0x2601ffec,
    0xffffffff,0xfffd06ff,0xfb0b900d,0x17ffdc01,0xf701ffea,0x007fe8bf,
    0x401bfff2,0xfff801fa,0x0fffd84f,0x6c0fffe2,0x00fffffe,0x01be00b5,
    0xb0bfff10,0x1fff85ff,0x000fffe8,0x3fff612a,0x9999bd05,0x7ff40999,
    0xdfffb804,0x04fecccc,0x700bfffd,0x6405f50b,0x7fcc5fff,0x23ffe406,
    0xff5003fe,0x0f4001ff,0x427fffc0,0x7fc47ffe,0xffd5b04f,0x012a0dff,
    0xf1000fe6,0xfff88bff,0x7427ffc2,0x06000fff,0x4c27ffcc,0xdff90007,
    0xf8033600,0xbfffd01f,0xbf109700,0x17fffd40,0xfc809ff5,0x01df32ff,
    0x01bfffa0,0xfff00370,0x1fff709f,0xd80fffc4,0x4fffff89,0x1fc804a8,
    0x7c455cc0,0x7ffd45ff,0x742fffc2,0x05750fff,0x03fff100,0x200137d9,
    0x9003fff9,0x3a06f980,0x4b805fff,0x7fc40fb0,0x1dfb3fff,0xddfffb80,
    0x3fe6004f,0x000005ff,0xf109ffff,0x3ffd43ff,0x3ffea3b0,0x402543ff,
    0x3ffea06e,0x45fffafe,0x7fc2fffb,0x9fffe86f,0x003ffffe,0x7f407fea,
    0x200cffff,0x0030fffd,0x3a04fc80,0x4b805fff,0x7dc05f70,0x0dfdffff,
    0xcffff880,0x555554c0,0x07ffff70,0x3ffe0000,0x1bfd104f,0x6c01dfb1,
    0x3ffffee1,0x9f1012a1,0x4c7ffe20,0x7e45ffff,0x3fffc2ff,0x467ffff4,
    0x8802fffc,0xfff305fe,0x107fffff,0xfffddfff,0x3ff0001b,0x02ffff40,
    0x04f8825c,0x7fffffe4,0xfffc8801,0xeffc886f,0x5ffffb0a,0x3fe00000,
    0x7fec04ff,0x41d803df,0x50fffffd,0xd01fb809,0xfffa89ff,0x217ffec5,
    0x7f41ffff,0x7fff41ff,0xffff9100,0xffffc81d,0x5c5fffff,0xffcbefff,
    0x3e6000ff,0x2ffff406,0x0fd025c0,0xffffff70,0x7d6fdc03,0x3ff04fff,
    0x01ffffe8,0xffff0000,0x80026409,0xffffe81d,0x07e80955,0xf887fff3,
    0x7fff45ff,0x217fffc2,0x7e40fffe,0xffd502ff,0xccb8dfff,0xffffffee,
    0xa8bfff23,0x32005fff,0x7fff404f,0x2e04b805,0x3bba601f,0x441fffff,
    0x3fff65fd,0x641fc42f,0x0002ffff,0x09ffff00,0x6c0007f6,0xfffff881,
    0x13e204ac,0x2217ffdc,0x7ff45fff,0x0ffffc2f,0xf703fffa,0xff9807ff,
    0x6cc01fff,0x3f66ffff,0x7fffc2ff,0x803fd001,0xb805fffe,0x5c13e604,
    0xfffe89ff,0x117fec5f,0x5c3fffff,0x7ffff505,0x3fe00000,0xeff984ff,
    0x00aabbab,0x7ffcc076,0x3ee04dff,0x83fff902,0x7ec5fff8,0x7fffc2ff,
    0x207fff40,0x8805fffa,0x3004fffe,0x3fa1ffff,0x7ffec2ff,0x807f9802,
    0xb805fffe,0x7cc37404,0x3fffec6f,0xfb85fff5,0x0f98efff,0x09ffff10,
    0x3ffe0000,0xffffa84f,0x04ffffff,0x7ffdc03b,0x81f604ff,0x7c41fffe,
    0x7ffe45ff,0x743fffc2,0x7fd40fff,0xfff7005f,0x7ffcc00b,0xc85fffb1,
    0xfc803fff,0x5fffe804,0x7e404c80,0x222ffe41,0xff92ffff,0xffffb09f,
    0xffe805dd,0x6dc0006f,0x81ffffc2,0xfffffffe,0x01d83fff,0x827fffe4,
    0x3ff605f8,0x2fffc42f,0xff0bffee,0x1fffd0bf,0x003fffa8,0x8007fff1,
    0x3ffee7fc,0x017ffe43,0x7e400ff4,0x03c805ff,0x3ffa1fcc,0xb1fffd84,
    0xfd01ffff,0xc801ffff,0x2001ffff,0xf83ffea0,0xfd103fff,0xffffffff,
    0xfd003b0d,0x0bea09ff,0x443fffc8,0x7fc45fff,0x427ffc2f,0x7d40fffe,
    0x3f2001ff,0x2fcc002f,0xfb89fff5,0x3fcc00ff,0x06fffb80,0x46f802e8,
    0xffb85ffd,0xdffff90f,0xfffffd10,0xffd11cc3,0xc9a600df,0x3ffe2fff,
    0x01ffa81f,0x03b0bfd3,0x209ffd10,0x3fea00fd,0x37ffc44f,0x3fe1ffec,
    0x0fffe81f,0x0663ffe4,0x01a86fb8,0xfff88fe6,0x4037fdc5,0xff3004fc,
    0x00f980ff,0x3fee0fc8,0x2a4ffc86,0x21dfffff,0xffffffd8,0x7fcc0fcd,
    0x27cc03ff,0x7fc4dff5,0x809fd06f,0x003f82fc,0x17e09ff3,0xd83fffe0,
    0xff986fff,0x7417fe64,0x7fec1fff,0x2037fe62,0x6ffec1fe,0xffa84d80,
    0x00bff20f,0xfe800bfa,0x05d103ff,0xffb0fea0,0x6437fc47,0xeeffffff,
    0xffffeadf,0xffb101ff,0x32a217bf,0x2e4fd82f,0xff700fff,0x509f5103,
    0x27d400df,0x7d401fcc,0xffddadff,0x3fdc0bff,0x3fa01df9,0x0ffe64ff,
    0x117ffff5,0xfffb05f7,0x4099317f,0x0ffa4ffb,0x1001fe60,0x2639fffd,
    0x2fc004eb,0x7feeffdc,0x3fffee03,0x7fe41dff,0xfda803ff,0x0defffff,
    0x3ffbff20,0x77ecc01d,0x542cefee,0x00cffffe,0x00fc84c8,0x19ffff50,
    0x7017bdff,0x401bfbdd,0xfdefa8ee,0xffff903e,0x322019ff,0x03dffffe,
    0x3eedfeb8,0x0009f700,0x3ffffff2,0x02a8003e,0x98006aa6,0x0d4401aa,
    0x4d54c400,0x06a62000,0x00009800,0x02a81800,0x0260a980,0x1800a980,
    0x98800a98,0x5440009a,0x01510000,0x0000aa80,0x000d54c4,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x05597510,0x35953005,0x05544018,0x1abba880,0x99999988,
    0x99988099,0x33331099,0x26621333,0x40999999,0xa8099998,0x4ccc0003,
    0x99999999,0x22199999,0x99999999,0x4cccccc1,0x26666621,0x20001999,
    0x00099999,0x4ccccccc,0x2a600009,0xfd88001b,0xdfedccef,0x3f6207aa,
    0x4bbeecce,0xbfd9fd30,0x7e675c03,0x3faa0dff,0x80bdffff,0x52ffffc9,
    0x39ffffff,0x3fffff26,0x7fe441bf,0x037fe42e,0x7fffc0e4,0xffffffff,
    0xb11fffff,0x7bffffff,0x3dfffda8,0x3ffffae2,0xceffffef,0xffffc800,
    0x3f6e2002,0xefffffff,0xafe9802d,0xf7000ffe,0x3faa05ff,0x05ff107f,
    0xff109ff7,0x203ffe25,0x3ffe63fb,0x7ffff40e,0x40dfa800,0x707ffff8,
    0xb80bffff,0x1fffe80f,0x3fe07ea0,0xdfff90ad,0x2e0ffdc4,0x201fffff,
    0x7ffc03ff,0x77ff544f,0x2fffd801,0xbfffd000,0x03bfff6a,0xffcaffcc,
    0x2fffd804,0xe83ff440,0x113ee06f,0x7fdc1ffd,0x3a2ffc0e,0x7fdc3fff,
    0x0fa802ff,0x03ffffb0,0x701ffffe,0x81fff209,0x85f81ff8,0xfa86fffc,
    0x5ffffd81,0xfd009f10,0xfff309ff,0xfffc803f,0xfffb0002,0x0efffb8b,
    0xdf55ffe8,0x6fffc803,0xf30fd100,0x5c4d809f,0x7ffd47ff,0xc83ffe24,
    0xfff85fff,0x204c806f,0x703ffff9,0x7403ffff,0x20397101,0x2f81ffe8,
    0xd06fffc8,0xfffff103,0x3a00bb05,0xffb04fff,0xfffc809f,0xfff90002,
    0x3ffff88b,0x4005fff8,0x001ffff9,0x3ffea1ea,0xff912601,0x45fff98f,
    0x3fee0ffe,0xffffb84f,0xd003e201,0x3e20dfff,0x0d304fff,0x7fff4400,
    0x320b099a,0x03706fff,0x83ffffee,0xffd000ea,0x3fff209f,0x17ffe406,
    0x5fffc800,0x444ffff8,0x74005fff,0x68006fff,0x02ffffa8,0x88fffd0e,
    0x0dc47fff,0x220bfff2,0x2e04ffff,0xffffb804,0x1ffffb02,0x33310790,
    0xffff9833,0x6402ffff,0xb0006fff,0x3e69ffff,0x3fffa000,0x0ffff904,
    0x512fffc8,0xfff90017,0x49ffff0b,0x09efffa9,0x4ffff980,0xff880800,
    0xf801dfff,0x7ffc0fff,0x6ffe801f,0x03ffff60,0x7fc40074,0xffff05ff,
    0xb101f07f,0x4c41ffff,0x099afffd,0x037ffe40,0xfffff880,0x7f4001eb,
    0xfffd04ff,0xafffc80d,0x404ffffa,0x7c45fffc,0x3ffe1fff,0xa805ffff,
    0x0003ffff,0x3fffff60,0x3ffa00df,0x17fff41f,0x3017fe60,0xb507ffff,
    0x7fffe400,0x7fff6d40,0x3fe02d46,0xfffd80ff,0x3fff2001,0x3fea0006,
    0xe8003fff,0xff884fff,0x7fe403ff,0xfffdadef,0x17fff201,0xa98dfff7,
    0x8009efff,0x002ffffc,0x3fffa200,0xfb04ffff,0xffff87ff,0x8027ec01,
    0x1e87fffe,0x3fffe600,0x7ffe5743,0xfd00b61f,0xfffb01ff,0x7ffe4003,
    0x7fec0006,0xfe8005ff,0x7ff4c4ff,0xfffc804f,0x813ffe66,0xf715fffc,
    0xff103dff,0x7fec00bf,0x400001ff,0xffffffe8,0x7ffcc0ef,0x03fffe0e,
    0x2a004f88,0x1a62ffff,0x9bfffa00,0x9ffff169,0x3ffa01e2,0x1fffd80f,
    0x1bfff200,0xffff1000,0xffe8005f,0xffffeeff,0xfff9001c,0x027ffc45,
    0xffdffff9,0x7fc405ff,0x3ff2005f,0x000002ff,0xfffffff7,0x9ffff90d,
    0xb80ffffb,0xffff8003,0x2e000b66,0x4792ffff,0x0977fffd,0xb01fffd0,
    0x64003fff,0x80006fff,0x00fffffc,0x277fffa0,0x001ffffe,0xf88bfff2,
    0x3ff205ff,0x80099aef,0x2005fff8,0x203ffffa,0xffffffeb,0x7ffdc00c,
    0xfea80fff,0x04fffdef,0x7dc00064,0x00689fff,0x1bffff10,0x7fffd41f,
    0xffe801ea,0x1fffd80f,0x1bfff200,0xffbf3000,0x7f400bff,0xffff34ff,
    0x3ff2001d,0x1bffe22f,0x005fffc8,0x005fff88,0x013fffe6,0x503ffffa,
    0x3fff2201,0xfff9003f,0x10003803,0x0799ffff,0x7fffe400,0xeffff84c,
    0x1fffd006,0x003fffb0,0x0037ffe4,0xfff13f10,0x3fa005ff,0x3ffee4ff,
    0xfff9005f,0x037ffc45,0x000bfff9,0x800bfff1,0xd805ffff,0x03b87fff,
    0x4037ffd4,0x0005fff8,0x7fffec00,0x3e60000f,0xfc81ffff,0xfd003fff,
    0xfffb01ff,0x7ffe4003,0xa8fa0006,0x800fffff,0x7ec4fffe,0xfc802fff,
    0x3ffe22ff,0x17fff206,0x17ffe200,0x1ffff700,0x87fffc80,0x5ffc805b,
    0x00effb80,0x3e600008,0x80004fff,0xf306fffe,0x3a001fff,0xffd80fff,
    0x3ff2001f,0x09b0006f,0x00bffff9,0xf889fffd,0x6400ffff,0x3fe22fff,
    0x3fff206f,0xfff88005,0xfffd8005,0x3fffe405,0x3ea017dc,0x7ffcc03f,
    0x01efc801,0x01fffd00,0x5fff7000,0x002fff40,0xf901fffd,0xb002a3ff,
    0x7000dfff,0x3fffa20d,0x7fff402f,0x6ffffa85,0x117ffe40,0x7e40dfff,
    0xf88006ff,0xfd0005ff,0x7fe405ff,0x00ffb87f,0xf9803bf6,0xffa801ef,
    0xff50005f,0x3e20000b,0x17fdc07f,0x01fffd00,0x079dfff3,0x00ffffb0,
    0x3ea01fa8,0x3a00ffff,0xffb05fff,0x7fe407ff,0x1bffe62f,0x006fffd8,
    0x005fff88,0x02fffee0,0x2e1bfff6,0xffa82fff,0x09ff7101,0x037ffd40,
    0x0003ff00,0x2201fe40,0x7ffc007f,0x9dfd502f,0x3ffffa00,0x01ff7000,
    0x0efffff8,0x06ffff88,0x05ffffd1,0xfa8ffff6,0x3ffa07ff,0x7cc000ff,
    0x440007ff,0xfdceffed,0x5b701cef,0x9ff9bdd9,0x17df9301,0x05ffd000,
    0x0002dc00,0x36003e60,0xfffd3004,0x400407ff,0xfffffec9,0xfff702cf,
    0xfea859ff,0x33ffffff,0xdfffffd9,0xffff9839,0x3fff60df,0xffff9bff,
    0xffd910ef,0x0039dfff,0x5dffffd9,0x2aa60000,0x40980099,0x2a009aa9,
    0x01300001,0x00018800,0x01300280,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x33333000,0x99988001,0x20009999,
    0x09999999,0x33333331,0x26200133,0x19999999,0x99999988,0x06666620,
    0x4cccccc4,0x99999999,0x26666620,0x33309999,0x23333333,0x99999998,
    0x33333009,0x26666621,0x99999999,0x33331099,0x33333333,0x4cc41333,
    0x00999999,0x4ccccc40,0x33109999,0x13333333,0x7fffe400,0x7edc4002,
    0x3004ffff,0x37dfffff,0x3ffff6e2,0x71001bdf,0x7dfffffb,0xffffc981,
    0x3fff622d,0xffffb80f,0xffffffff,0x3f6e21ff,0x51beffff,0x9ffffff9,
    0x3ffff6a5,0xec880bef,0xfb711dff,0xffffffff,0x2e2bffff,0xfffffffd,
    0x24ffffff,0xfffffeb9,0x00bdffff,0x3ffff6e2,0xfb711bef,0xffffffff,
    0xffe807bf,0x3fa0002f,0xd800ffff,0x201fffff,0x0007ffff,0x007ffff4,
    0xff807bf2,0xbffc80ff,0x4ffffc80,0x03ffffa0,0x81ffffdc,0x804ffffd,
    0x3ffa04f9,0x5ffb887f,0x986fffe8,0xff884ffc,0x3ff664ff,0xfffe803f,
    0x3fffe00f,0x9fffd535,0x017ffe40,0xffff9b00,0xffcf8807,0x3ffa00ff,
    0x7ec0006f,0x6fc407ff,0x07fff400,0xff9807ec,0x3f600fff,0x3fea07ff,
    0xfff102ff,0x06b801ff,0x103fffec,0xdfffb0bd,0xff827cc0,0xfffd84ff,
    0x3fffec06,0x117fffa0,0x3209ffff,0x20002fff,0x06fffead,0x3fffde5c,
    0x01bfff60,0x0ffff900,0xfe8027cc,0x201e80ff,0x402ffffe,0x2a06fffd,
    0x2e01ffff,0x2203ffff,0x7ffe401f,0x7ec2dc07,0x826c06ff,0xfb04ffff,
    0x7fec0bff,0x7ffec06f,0x07fffc85,0x0005fff9,0x7fffdd6c,0x3fee7a02,
    0x7ffec07f,0x7fe40006,0x005f507f,0x3407fff4,0x0bffff70,0x40dfffb0,
    0x401ffffa,0x900ffffe,0xffff9009,0x7ec2c410,0x951446ff,0x413fffe0,
    0xb02ffffa,0xfd80dfff,0xfffa85ff,0x2fffc81f,0x80666662,0x5ffff8ad,
    0x3ffeeb50,0x37ffec07,0x3fff2000,0x4001ec87,0x0180fffe,0x01fffff1,
    0x40dfffb0,0x401ffffa,0x984ffffa,0xfffc800f,0x36060c87,0x21dc6fff,
    0x09ffff02,0xd837fffc,0x7ec06fff,0xfffc85ff,0x2fffc80f,0x02fbff6a,
    0xffffc96c,0xfff72d81,0x6fffd80f,0x7ffe4000,0x00037627,0x8003fffa,
    0x003ffffd,0x540dfffb,0xe801ffff,0x1ec0ffff,0x87fffc80,0x7ffec00e,
    0xff801ec6,0x3ff604ff,0xfffd81ff,0x2fffec06,0xc827fff4,0x2fcc2fff,
    0xfff896c0,0xff73c44f,0xfffd80ff,0x7fe40006,0x005fd37f,0x003fffa0,
    0x037fffd4,0x40dfffb0,0x801ffffa,0x2a5ffff9,0x3fff2006,0x36007dc7,
    0x0fe26fff,0x027fffc0,0xb05ffff9,0xfd80dfff,0x7ffec5ff,0x5fff900d,
    0x45b004d8,0x320ffffd,0x01fffee3,0x000dfffb,0xfaffffc8,0xe8000fff,
    0xe8800fff,0x2001ffff,0xaaaffffd,0xffffcaaa,0xffffb001,0x64003d13,
    0xfca9ffff,0x7ffec00f,0x003ffb9e,0x5c09ffff,0xfd83ffff,0x7fec06ff,
    0xcfffecef,0x17ffe401,0x316c0099,0x07c7ffff,0xd80ffff7,0x40006fff,
    0xfffffffc,0xfe8006ff,0xffc800ff,0x7ec004ff,0xeeeeefff,0x01ffffee,
    0x9bffff30,0xfffc800b,0x00ffffef,0x7fffffec,0xfff003ff,0x7ffdc09f,
    0x6fffd84f,0x677ffec0,0x01cffffe,0x3e4bfff2,0xffd0b600,0xff716adf,
    0xfffd80ff,0x7fe40006,0xffffe8ff,0x7fff4004,0x7fffcc00,0x7fec000f,
    0x3ffea06f,0x3ff2001f,0x64000fff,0xff737fff,0x6fffd801,0x3e007fb1,
    0x3ee04fff,0xffd83fff,0x7ffec06f,0x27fffdc5,0xfcafffc8,0x70b6004f,
    0x83d5ffff,0x6c07fffb,0x40006fff,0xff17fffc,0x74007fff,0x7f400fff,
    0xd8002fff,0x3ea06fff,0x22001fff,0x8005ffff,0x7cc7fffc,0x37ffec00,
    0x7ffc00fa,0x3fff204f,0x6fffd81f,0x42fffec0,0xc84ffffa,0xffffefff,
    0xff05b001,0xff70ddff,0xfffd80ff,0xf9015006,0x7ffccfff,0xffd001ff,
    0x7ffdc01f,0xfd84805f,0x3fea06ff,0x7f4001ff,0xfc8005ff,0x400d87ff,
    0x1dc6fffd,0x04ffff80,0x203ffff6,0x6c06fffd,0xff885fff,0xfffc87ff,
    0x006fffbc,0xffff905b,0x0ffff705,0x006fffd8,0xffff901d,0x0fffffb8,
    0x00fffe80,0x03fffff1,0xfffd84a8,0x3fffea06,0x7fff4001,0xfffc8005,
    0x7ec00b87,0x2c1cc6ff,0xd027fffc,0x3f60dfff,0x7fec06ff,0xffffd05f,
    0xb2fffc83,0x5b009fff,0x20ffff10,0x6c07fffb,0x79806fff,0xb0ffff90,
    0xd00dffff,0x3f601fff,0x3e804fff,0x206fffd8,0x001ffffa,0x002ffff4,
    0x043fffe4,0x437ffec0,0x7ffc2cc0,0xffff304f,0x1bfff603,0x20bfffb0,
    0x640ffffe,0xfff12fff,0xb02d805f,0x3fee09ff,0x7ffec07f,0xf906d806,
    0xffd10fff,0xffe809ff,0xffffa80f,0xd82fa806,0x3ea06fff,0x74001fff,
    0xc8005fff,0xb0007fff,0x9b00dfff,0x209ffff0,0x3604fffd,0x7ec06fff,
    0xfff885ff,0x2fffc86f,0x803fffea,0x01ff302d,0x803ffff2,0x6407fffe,
    0xffffb06f,0x3ffffe60,0x03fffa04,0x00bffffa,0xffb03ff9,0x7ffd40ff,
    0x7ffc002f,0xffd8005f,0xffb0007f,0x83fd80ff,0xfa85ffff,0x7fec04ff,
    0x7fff407f,0x1ffffd85,0x743fffd8,0xbf105fff,0xffb02f40,0x3fe203ff,
    0x2a21afff,0xffd05ffd,0x3ff601ff,0xfff04fff,0xffffc85f,0xffea9985,
    0xffffe80f,0x7ffff900,0x7fffc400,0xfffe8006,0xffe8000f,0xf7310aff,
    0xfff885ff,0xffc989ef,0xfffe802f,0x3fffe00f,0xfffda89f,0xffffd81e,
    0xffffd33f,0x3fff263d,0x2215c0ce,0xffffffec,0xfffd933c,0xffffffff,
    0x764c9fff,0x0cffffff,0xffffffb1,0x3ffa67df,0xfff33fff,0xffffffff,
    0x21ffffff,0xfffffec9,0xfffb92cf,0x6409bfff,0xefffffec,0x3fb2603c,
    0x02cfffff,0x7ffff64c,0xffffffff,0xfff951ff,0x9ddfffff,0xffec9803,
    0x932cefff,0xfffffffd,0x00039bdf,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x1a800006,
    0x30003710,0x02aa0059,0x0000c400,0x00044600,0x2620dc40,0x4cc19999,
    0x0ccccc19,0x80133331,0x33101ba8,0x26621333,0x33310999,0x006ee601,
    0x40663773,0x000aca98,0x00003773,0x40000f88,0xfff02fea,0x1ff44009,
    0xdffff930,0x01fc8001,0x57ea8000,0x7c00039f,0x3ffea4ff,0x3fee0cff,
    0x3ffff20c,0x0bfffd51,0x3bf73fa2,0x7ffffd43,0x5dffff72,0xd107bf22,
    0x701bf99f,0x05ffd9df,0xbffd9bf5,0x75eff440,0xf700003f,0xff710007,
    0xfff505ff,0x1ffec00f,0xffffff98,0x3f2000ef,0xf9100001,0x3ffe6bff,
    0x7fd4002e,0x7fffd47f,0xffd05d80,0x2fffd43f,0xff9a7f44,0x37ffd40f,
    0xf117ffee,0x364ff881,0x907fc45f,0x7c5fc85f,0x6ff984ff,0x0000ffea,
    0xd9001ffa,0x305fffff,0x2a00dfff,0xdff03fff,0x09ffffff,0x0000fe40,
    0x033fff6a,0x033fff6a,0x21bffe60,0x1f82fffe,0x4c3fffb0,0xffd85fff,
    0x3a13ffa2,0x3fe21fff,0x361660ff,0x8bfee2ff,0x11f42ffb,0x7ff41fff,
    0x21fff40f,0x20002fff,0x2003fffa,0x40bfffa0,0xf8801efb,0x1eb83fff,
    0x0fffff71,0x4000fe40,0x02effeb8,0x5bfff910,0xa81efb80,0x02cc5fff,
    0x7cc3fffb,0x7ffcc5ff,0x2e0ffee0,0x3fea4fff,0xf50b23ff,0x2ffd41ff,
    0x1cc7fffb,0x7ec5fff3,0x3ffea0ff,0x002ffec2,0x00dfffd0,0x00bfff60,
    0x7ffef400,0xffb80c83,0x07f2007f,0xcfffc980,0x3faa0001,0xd0000bff,
    0x01643fff,0x7cc3fffb,0x3ffe45ff,0xfff8814c,0x9bffeb67,0x546ffc86,
    0x3ffee6ff,0x1bf900df,0xf907fff4,0x7ffd83ff,0xffff3000,0xffb0005f,
    0xb900005f,0x4007fff5,0x2005fff8,0xfea801fc,0x00000bef,0x0b7fff26,
    0x29fff700,0x7ffec068,0xb17ffe61,0xd8001fff,0xfd589fff,0xfb0951ff,
    0xffffffff,0x7ffffc4f,0xffeb801e,0x3fffa0ff,0x00fffec1,0x7fffdec0,
    0xfffd8005,0x47540002,0x4003fffa,0x55443fff,0xabfdaaaa,0xff52aaaa,
    0x8000009f,0x4007ffe9,0x3b8ffff8,0x30fffec0,0xffe8bfff,0x7fd4001f,
    0xfff72bdf,0xfffd03b7,0x7fffd400,0x3ff501ff,0x7f41fffb,0x7ffec1ff,
    0xfcbc4002,0x6c000fff,0x20002fff,0x7fff51f8,0x0fffcc00,0x3fffffee,
    0xffffffff,0x7dffd717,0x6cc00001,0x8001cfff,0x00ebfffc,0xf30fffec,
    0xfffd8bff,0xffff8002,0xddfff10e,0x003fff60,0x5ffffe98,0xfd877ec4,
    0x3fff60ff,0x00fffec1,0x7ffccf20,0x7fec004f,0x7d00602f,0x001fffd4,
    0x5510bff7,0x57fb5555,0xb3055555,0x00039fff,0x2fbffae2,0xf9801300,
    0xfc804fff,0x3ffe61ff,0x02fffe45,0x22fffe40,0xf904fffd,0x443007ff,
    0x7ec7fffd,0x83fff63f,0x7ec1fffc,0x3e2000ff,0x03ffff60,0x82fffd80,
    0x5c82efe8,0x001fffd4,0xc8001ffb,0xeb88001f,0x93002eff,0xd803bfff,
    0x7fec03ff,0xfffc801f,0x517ffe61,0x0107ffff,0x2a17ffcc,0xff501fff,
    0x42c920ff,0xff10fffc,0x07ffec3f,0xfe83fff5,0x225c006f,0x003ffffa,
    0x320bfff6,0x07d46fff,0x400fffea,0xc8001ff8,0x6d40001f,0xda81cfff,
    0xa800bfff,0x7d407fff,0xfff7006f,0x17fffa25,0xa8bffffa,0x443ff404,
    0x7ffc06ff,0xec8722ef,0xff937fc0,0xffff93bf,0x7c3ffd83,0x0f4001ff,
    0x003ffff4,0xf905fffb,0x2fe23fff,0xfffb9999,0x03fd801c,0x0003f900,
    0x57fff220,0x002dfff9,0x403fffd4,0xff1002fe,0xfff9d9ff,0xfffff30d,
    0x9f700bff,0xf300ff20,0x87fdffff,0x5ff10dfb,0x67ffffd4,0x224efffc,
    0x0ffee6fe,0x5555d500,0x05ffffb5,0x20bfff60,0xf32fffe9,0xffffffff,
    0x7d403fff,0x07f20003,0x5f6a0000,0x20001cfa,0x7b803ffe,0x7fffd400,
    0x0dffff9a,0x27ffff44,0xf301f880,0xfffd3001,0xbfdd709d,0xbff905ff,
    0x213ffa23,0x2ffdefd8,0xcccce800,0x6ffffccc,0x05fffb00,0xff987d44,
    0xffffffff,0x09f101ff,0x00fe400a,0x00230000,0x10009800,0x00660003,
    0x8001a880,0x22001402,0x4c42600a,0x40020001,0xd30000a9,0x1ffffc80,
    0x02fffd80,0xdddd32e4,0xddfffddd,0x34413a03,0x0001fc80,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x3fe201f4,0xffd805ff,
    0x00be202f,0x901fffd4,0xfdb9999f,0x99800009,0x37510999,0x26037510,
    0x2e209999,0x84ccccc1,0x33100ba8,0x26633333,0x26662099,0x09999999,
    0x91000a60,0x5c406001,0x2a80b980,0x6eeeeecc,0xdddddddd,0x80bddb15,
    0xffd800fa,0x7ff401ff,0x007d303f,0xb81fffd4,0xffffffff,0x5c00003f,
    0xffabffff,0xfff70eff,0xffff70bf,0xb83fff27,0xffaaffff,0xffd884ff,
    0xffc8aeff,0x33bff60c,0x00ffffec,0xfd800ffe,0x0f7fd404,0x7cc3fff1,
    0x97ff20ff,0xfffffffa,0x7fffffff,0x4403ffe6,0xffb802fe,0x3fe206ff,
    0x01c985ff,0x41fffd40,0xfffffffa,0x00001fff,0xaeefffd8,0xadcdfffb,
    0xfc82fffd,0xffffcbff,0x6f7ffec1,0x902fffda,0x0fccdfff,0x7fff42ec,
    0x013fe204,0xd007ffcc,0x7fdcbfff,0x8bfff24f,0x2220ffff,0x88888888,
    0x7cc08888,0xffffb83f,0xfffda82d,0x32e2efff,0xcefffffe,0x7fd40000,
    0x7fffc43f,0x0fffffff,0xffb80000,0x3fffa0ef,0x213ffe24,0xd9ddfffb,
    0x5fffc86f,0xe813ffe6,0x205b2fff,0x37ffdc1d,0x143fb0cc,0x40bfbfd0,
    0xf50ffffe,0x7ffdc7ff,0x001fffa1,0x006fa800,0x00000000,0x00000000,
    0x3ee00000,0x7fff43ff,0x217ffe20,0x020ffffb,0xf317ffe4,0x7fd40bff,
    0x10a05aef,0xf985ffff,0xff56a8df,0xff1bf509,0x3fffea03,0x543fff30,
    0x3ff60fff,0x44444445,0x88888888,0x0001f500,0x00000000,0x00000000,
    0x3fee0000,0x07ffec3f,0x3ee1bffe,0xff9005ff,0x2fffc45f,0x03ffffa0,
    0x85fffd80,0xbcaefff8,0x7fc44fff,0xb880df70,0x3e23ffc6,0x51ffdc6f,
    0xffffffff,0x0fffffff,0x00000004,0x00000000,0x00000000,0xd87fff70,
    0x7ffc0fff,0x04fffb86,0x445fff90,0x7cc05fff,0xf5000fff,0x2a201fff,
    0x1aaaecaa,0x17f44fc8,0x0bf90fa0,0x1ff889fd,0x33333326,0xcccccccc,
    0x00000004,0x00000000,0x00000000,0x87fff700,0x7fc0fffd,0x3fffb86f,
    0x45fff900,0xd805fff8,0xfd004fff,0x3ae009ff,0x1ff100da,0x3e607f98,
    0x7e41fd40,0x00007e82,0x00000000,0x00000000,0x00000000,0x43fffb80,
    0x7fc0fffd,0x3fffb86f,0x45fff900,0xa805fff8,0x6400ffff,0xd8806fff,
    0xfb05ff3f,0x2a0ff607,0xa81f881f,0x0305c80f,0x00000000,0x00000000,
    0x00000000,0x7ffdc000,0x207ffec3,0xffb86fff,0xfff9003f,0x02fffc45,
    0x027fff6c,0x885ffff1,0xfd8ffe40,0x881be60f,0x8032a0ff,0x0e60b105,
    0xd983ffd1,0x16200bef,0x00000000,0x00000000,0x70000000,0xffd87fff,
    0x437ffc0f,0x9003fffb,0x7fc45fff,0x7c65c05f,0xffb01fff,0xfb8190bf,
    0x3971fea6,0x0002ca80,0xfff70000,0x7ffffdcb,0x004b82df,0x00000000,
    0x00000000,0x7dc00000,0x7fff43ff,0x21fffe21,0x9003fffc,0x7fcc5fff,
    0xfc9a606f,0xfffa85ff,0x8183cc0f,0x00000009,0xff700000,0x5445fcbf,
    0xdbcffffd,0x0000001f,0x00000000,0x00000000,0x227ffec0,0x3e62fffe,
    0x7fec0fff,0xfffb004f,0x83fffd49,0x3ffe63f8,0x27fff42f,0x0000ff71,
    0x00000000,0x47ffa200,0xfff71069,0x000007df,0x00000000,0x00000000,
    0xffffc800,0xffffd8cf,0xfffffaaf,0xfffff91e,0x7ffec019,0xffff9bff,
    0xdffb30ef,0xfffffb37,0x3ffffeeb,0x006fffff,0x00000000,0x260c0000,
    0x002b9801,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,
};

static signed short stb__times_bold_32_usascii_x[95]={ 0,2,2,0,1,2,1,1,1,0,1,0,0,0,
1,0,1,1,0,0,0,0,1,0,1,0,2,2,0,0,0,1,1,0,0,1,0,0,0,1,0,0,0,0,
0,0,0,1,0,1,0,1,1,0,0,0,0,0,0,3,0,0,2,-1,0,1,0,1,1,1,0,1,0,0,
-1,0,0,1,0,1,0,1,1,1,0,0,0,0,0,0,0,2,2,1,0, };
static signed short stb__times_bold_32_usascii_y[95]={ 25,5,5,5,5,5,5,5,5,5,5,7,20,16,
20,5,5,5,5,5,5,5,5,5,5,5,11,11,8,12,8,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,29,5,11,5,11,5,11,5,11,5,5,
5,5,5,11,11,11,11,11,11,11,6,11,11,11,11,11,11,5,5,5,14, };
static unsigned short stb__times_bold_32_usascii_w[95]={ 0,6,12,14,13,25,22,6,9,9,12,16,7,9,
5,9,13,12,14,13,14,14,13,14,13,14,6,6,16,16,16,12,26,21,19,19,20,18,17,22,22,11,15,23,
19,27,21,21,17,21,22,14,18,21,21,29,21,21,19,6,9,7,13,16,7,13,15,12,15,12,12,13,16,8,
9,17,8,23,16,13,15,15,12,10,10,16,15,21,14,15,13,9,3,9,16, };
static unsigned short stb__times_bold_32_usascii_h[95]={ 0,21,10,21,22,21,21,10,26,26,12,17,11,4,
6,21,21,20,20,21,20,21,21,21,21,21,15,20,15,7,15,21,27,20,20,21,20,20,20,21,20,20,21,20,
20,20,21,21,20,26,20,21,20,21,21,21,20,20,20,26,21,26,11,3,6,15,21,15,21,15,20,21,20,20,
27,20,20,14,14,15,21,21,14,15,20,15,15,15,14,21,14,26,27,26,6, };
static unsigned short stb__times_bold_32_usascii_s[95]={ 251,203,208,210,119,225,25,221,62,72,173,
73,200,133,228,120,146,23,58,176,43,190,205,219,11,39,124,36,90,228,107,
54,11,1,235,48,202,183,165,1,120,223,68,67,47,19,98,149,220,97,180,
24,139,234,67,89,158,143,100,90,1,82,186,143,245,223,160,164,130,199,238,
84,203,119,1,1,91,90,127,237,187,171,114,212,128,147,131,177,144,133,159,
52,38,42,234, };
static unsigned short stb__times_bold_32_usascii_t[95]={ 1,1,110,1,1,1,29,110,1,1,110,
94,110,23,118,29,29,94,94,29,94,29,29,29,29,51,94,94,94,110,94,
51,1,94,73,29,73,73,73,51,73,73,29,73,73,73,29,1,51,1,51,
51,51,29,51,51,51,73,73,1,29,1,110,23,110,94,29,94,29,94,51,
29,51,51,1,73,73,110,110,94,1,1,110,94,51,94,94,94,110,1,110,
1,1,1,118, };
static unsigned short stb__times_bold_32_usascii_a[95]={ 116,154,257,231,231,462,385,128,
154,154,231,263,116,154,116,128,231,231,231,231,231,231,231,231,
231,231,154,154,263,263,263,231,430,334,308,334,334,308,282,360,
360,180,231,360,308,436,334,360,282,360,334,257,308,334,334,462,
334,334,308,154,128,154,269,231,154,231,257,205,257,205,154,231,
257,128,154,257,128,385,257,231,257,257,205,180,154,257,231,334,
231,231,205,182,102,182,240, };

// Call this function with
//    font: NULL or array length
//    data: NULL or specified size
//    height: STB_FONT_times_bold_32_usascii_BITMAP_HEIGHT or STB_FONT_times_bold_32_usascii_BITMAP_HEIGHT_POW2
//    return value: spacing between lines
static void stb_font_times_bold_32_usascii(stb_fontchar font[STB_FONT_times_bold_32_usascii_NUM_CHARS],
                unsigned char data[STB_FONT_times_bold_32_usascii_BITMAP_HEIGHT][STB_FONT_times_bold_32_usascii_BITMAP_WIDTH],
                int height)
{
    int i,j;
    if (data != 0) {
        unsigned int *bits = stb__times_bold_32_usascii_pixels;
        unsigned int bitpack = *bits++, numbits = 32;
        for (i=0; i < STB_FONT_times_bold_32_usascii_BITMAP_WIDTH*height; ++i)
            data[0][i] = 0;  // zero entire bitmap
        for (j=1; j < STB_FONT_times_bold_32_usascii_BITMAP_HEIGHT-1; ++j) {
            for (i=1; i < STB_FONT_times_bold_32_usascii_BITMAP_WIDTH-1; ++i) {
                unsigned int value;
                if (numbits==0) bitpack = *bits++, numbits=32;
                value = bitpack & 1;
                bitpack >>= 1, --numbits;
                if (value) {
                    if (numbits < 3) bitpack = *bits++, numbits = 32;
                    data[j][i] = (bitpack & 7) * 0x20 + 0x1f;
                    bitpack >>= 3, numbits -= 3;
                } else {
                    data[j][i] = 0;
                }
            }
        }
    }

    // build font description
    if (font != 0) {
        float recip_width = 1.0f / STB_FONT_times_bold_32_usascii_BITMAP_WIDTH;
        float recip_height = 1.0f / height;
        for (i=0; i < STB_FONT_times_bold_32_usascii_NUM_CHARS; ++i) {
            // pad characters so they bilerp from empty space around each character
            font[i].s0 = (stb__times_bold_32_usascii_s[i]) * recip_width;
            font[i].t0 = (stb__times_bold_32_usascii_t[i]) * recip_height;
            font[i].s1 = (stb__times_bold_32_usascii_s[i] + stb__times_bold_32_usascii_w[i]) * recip_width;
            font[i].t1 = (stb__times_bold_32_usascii_t[i] + stb__times_bold_32_usascii_h[i]) * recip_height;
            font[i].x0 = stb__times_bold_32_usascii_x[i];
            font[i].y0 = stb__times_bold_32_usascii_y[i];
            font[i].x1 = stb__times_bold_32_usascii_x[i] + stb__times_bold_32_usascii_w[i];
            font[i].y1 = stb__times_bold_32_usascii_y[i] + stb__times_bold_32_usascii_h[i];
            font[i].advance_int = (stb__times_bold_32_usascii_a[i]+8)>>4;
            font[i].s0f = (stb__times_bold_32_usascii_s[i] - 0.5f) * recip_width;
            font[i].t0f = (stb__times_bold_32_usascii_t[i] - 0.5f) * recip_height;
            font[i].s1f = (stb__times_bold_32_usascii_s[i] + stb__times_bold_32_usascii_w[i] + 0.5f) * recip_width;
            font[i].t1f = (stb__times_bold_32_usascii_t[i] + stb__times_bold_32_usascii_h[i] + 0.5f) * recip_height;
            font[i].x0f = stb__times_bold_32_usascii_x[i] - 0.5f;
            font[i].y0f = stb__times_bold_32_usascii_y[i] - 0.5f;
            font[i].x1f = stb__times_bold_32_usascii_x[i] + stb__times_bold_32_usascii_w[i] + 0.5f;
            font[i].y1f = stb__times_bold_32_usascii_y[i] + stb__times_bold_32_usascii_h[i] + 0.5f;
            font[i].advance = stb__times_bold_32_usascii_a[i]/16.0f;
        }
    }
}

#ifndef STB_SOMEFONT_CREATE
#define STB_SOMEFONT_CREATE              stb_font_times_bold_32_usascii
#define STB_SOMEFONT_BITMAP_WIDTH        STB_FONT_times_bold_32_usascii_BITMAP_WIDTH
#define STB_SOMEFONT_BITMAP_HEIGHT       STB_FONT_times_bold_32_usascii_BITMAP_HEIGHT
#define STB_SOMEFONT_BITMAP_HEIGHT_POW2  STB_FONT_times_bold_32_usascii_BITMAP_HEIGHT_POW2
#define STB_SOMEFONT_FIRST_CHAR          STB_FONT_times_bold_32_usascii_FIRST_CHAR
#define STB_SOMEFONT_NUM_CHARS           STB_FONT_times_bold_32_usascii_NUM_CHARS
#define STB_SOMEFONT_LINE_SPACING        STB_FONT_times_bold_32_usascii_LINE_SPACING
#endif

