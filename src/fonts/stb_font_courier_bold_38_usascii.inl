// Font generated by stb_font_inl_generator.c (4/1 bpp)
//
// Following instructions show how to use the only included font, whatever it is, in
// a generic way so you can replace it with any other font by changing the include.
// To use multiple fonts, replace STB_SOMEFONT_* below with STB_FONT_courier_bold_38_usascii_*,
// and separately install each font. Note that the CREATE function call has a
// totally different name; it's just 'stb_font_courier_bold_38_usascii'.
//
/* // Example usage:

static stb_fontchar fontdata[STB_SOMEFONT_NUM_CHARS];

static void init(void)
{
    // optionally replace both STB_SOMEFONT_BITMAP_HEIGHT with STB_SOMEFONT_BITMAP_HEIGHT_POW2
    static unsigned char fontpixels[STB_SOMEFONT_BITMAP_HEIGHT][STB_SOMEFONT_BITMAP_WIDTH];
    STB_SOMEFONT_CREATE(fontdata, fontpixels, STB_SOMEFONT_BITMAP_HEIGHT);
    ... create texture ...
    // for best results rendering 1:1 pixels texels, use nearest-neighbor sampling
    // if allowed to scale up, use bilerp
}

// This function positions characters on integer coordinates, and assumes 1:1 texels to pixels
// Appropriate if nearest-neighbor sampling is used
static void draw_string_integer(int x, int y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0, cd->t0); glVertex2i(x + cd->x0, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t0); glVertex2i(x + cd->x1, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t1); glVertex2i(x + cd->x1, y + cd->y1);
        glTexCoord2f(cd->s0, cd->t1); glVertex2i(x + cd->x0, y + cd->y1);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance_int;
    }
    glEnd();
}

// This function positions characters on float coordinates, and doesn't require 1:1 texels to pixels
// Appropriate if bilinear filtering is used
static void draw_string_float(float x, float y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0f, cd->t0f); glVertex2f(x + cd->x0f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t0f); glVertex2f(x + cd->x1f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t1f); glVertex2f(x + cd->x1f, y + cd->y1f);
        glTexCoord2f(cd->s0f, cd->t1f); glVertex2f(x + cd->x0f, y + cd->y1f);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance;
    }
    glEnd();
}
*/

#ifndef STB_FONTCHAR__TYPEDEF
#define STB_FONTCHAR__TYPEDEF
typedef struct
{
    // coordinates if using integer positioning
    float s0,t0,s1,t1;
    signed short x0,y0,x1,y1;
    int   advance_int;
    // coordinates if using floating positioning
    float s0f,t0f,s1f,t1f;
    float x0f,y0f,x1f,y1f;
    float advance;
} stb_fontchar;
#endif

#define STB_FONT_courier_bold_38_usascii_BITMAP_WIDTH         256
#define STB_FONT_courier_bold_38_usascii_BITMAP_HEIGHT        156
#define STB_FONT_courier_bold_38_usascii_BITMAP_HEIGHT_POW2   256

#define STB_FONT_courier_bold_38_usascii_FIRST_CHAR            32
#define STB_FONT_courier_bold_38_usascii_NUM_CHARS             95

#define STB_FONT_courier_bold_38_usascii_LINE_SPACING          18

static unsigned int stb__courier_bold_38_usascii_pixels[]={
    0x00999880,0x00800220,0x00040020,0x91000000,0x0ccccc45,0x00000e4c,
    0x01a88351,0x00999998,0x80002660,0x001bcca8,0x00000988,0x00001531,
    0x00003310,0x007fff90,0xd1007fe6,0x7fcc07df,0x03bf2602,0x3a60de98,
    0xffd00005,0x3fffff23,0x01fff13f,0x83ffa000,0xff501ffd,0xb80bffff,
    0x04effffe,0x7ffffdc0,0xffd9803f,0xeea9dfff,0xfd700cee,0xdd37ffff,
    0x76d439dd,0xfffb8dee,0x00003eff,0x2007fff9,0x7d404ffb,0xff703fff,
    0x3fffee0b,0xd8fff602,0x540002ff,0xfff91fff,0x7ffcdfff,0xffc80003,
    0x41bffa1f,0x5ffffffd,0xfffffd30,0x7003dfff,0xfffdffff,0x7fffdc07,
    0xffffffff,0x7f443fff,0xffffffff,0xf15fffff,0xffffffff,0x1dffffff,
    0xfffc8000,0x0bff9003,0x1ffffe88,0xfd05ffc8,0x7f401dff,0x00bffe3f,
    0x64dffd00,0x23ffffff,0x40007ffc,0x7dc6fff8,0xfffa83ff,0xff985fff,
    0xffffffff,0x3fea02ff,0x07ff662e,0x3ffffff6,0xffffffff,0x3ffa22ff,
    0xffffffff,0x3e4fffff,0xffffffff,0xffffffff,0x2aa60000,0x7ff5c00a,
    0x80cdcfff,0xfc83fffa,0x2fff985f,0x3e3ffe80,0x260002ff,0x3ff22fff,
    0xfff9819d,0x3ff20003,0x3fffc42f,0x8bff9310,0x8adfffe8,0x0ffffca8,
    0xf101ffd0,0xffffb87f,0xfffca89b,0x7e41aeff,0xd988aeff,0x41bfffff,
    0xfffffda8,0xffeb98ac,0x8000006f,0xffffffd8,0xfb02ffff,0x0bff909f,
    0x3e00bff9,0x3fff12ff,0x37fec000,0xfb017ff2,0x3e2000df,0xfff906ff,
    0x45ffc807,0x2a03fffd,0xff986fff,0xf897fa03,0xff100eff,0xfff30dff,
    0x7fffe40b,0x3fffee00,0x0ffff602,0xff900000,0xffffffff,0x13ff609f,
    0x3f217ff2,0x5fff005f,0x0007ffe2,0x321fffcc,0x7fcc05ff,0xffb8002f,
    0xffff103f,0x2a5ffc80,0xfb804fff,0x07fe43ff,0x7fd4ff70,0x7ffcc01f,
    0x00fffb86,0x7007fff4,0xfd009fff,0xeed980df,0xeeeeeeee,0x2fbffe62,
    0x4fffdb9a,0xf909ffb0,0x0bff90bf,0x263fff10,0xb0000fff,0xbff90fff,
    0x00dffd00,0xc80fffd0,0x3f202fff,0x01bff25f,0x7ec5ffe8,0x4ffd7307,
    0xfb006ffc,0x09ffb0df,0x401fff70,0xa801fffb,0x7ff407ff,0xffffffff,
    0x07ffea2f,0xfd817fdc,0x85ffc84f,0xfa805ffc,0xfffa9aff,0xfff88001,
    0x805ffc83,0x2002fffa,0x4c03fff9,0x3f204fff,0x00fffa5f,0x7f47ffa8,
    0x7fffec45,0x4013ff67,0xffe86ffc,0x0fffa803,0x401ffee0,0x3600fff9,
    0xffffffff,0x3fea2fff,0x40332207,0xffc84ffd,0x205ffc85,0xfffffffc,
    0x03ffffff,0x203fff20,0xfd005ffc,0x7fd400df,0x6fff801f,0xff97ff20,
    0x3fe2001f,0xf98ffe0f,0x2e7fffff,0xffd006ff,0x009ffb0d,0x5c01fff7,
    0xfb801fff,0xaaa9807f,0x2fffaaaa,0x0073ffe2,0x6427fec0,0x5ffc85ff,
    0xffffff10,0xffffffff,0x3ffe200f,0x00bff904,0x4007ffea,0xd800fffc,
    0x3ff207ff,0x001fff35,0x3fe2fff8,0x2e73ffa2,0x0fffea7f,0x90dfff70,
    0xffb00dff,0x7ffdc01f,0x2fffc406,0x17ffc000,0x33bffff6,0xdff9000a,
    0xfd0bff90,0x7fff409f,0xffffffff,0xff7004ff,0x17ff201f,0x005fff80,
    0x3200fffb,0xff900fff,0x003ffe6b,0x7fc5fff0,0x7dc9ff32,0x067fff47,
    0x1bffff22,0xb813ffea,0x2e00ffff,0xa81effff,0x0002ffff,0x7cc2fff8,
    0xefffffff,0x7fffdc02,0xfb97ff24,0x64403fff,0xffd99fff,0x3fe0009e,
    0x17ff204f,0x01fffb80,0x7006ffe8,0x3f203fff,0x03fff15f,0xf0fffc40,
    0xb83fee5f,0x7fffcc7f,0xffffeeef,0xfffb06ff,0x7ffe443b,0x3fee00ff,
    0xfeefffff,0x0003ffff,0xb105fff0,0xffffffff,0xffffe80b,0x3e6bff91,
    0xf7006fff,0x02ffe4df,0x807ffee0,0x22005ffc,0xff804fff,0xfff5005f,
    0xf97ff205,0x3e6002ff,0x54bfe0ff,0x21fee1ff,0xfffffff9,0x06ffffff,
    0xfffffff1,0x1fffffff,0x7ffffdc0,0xffffffff,0x3fe00004,0x3b2a202f,
    0x104fffff,0x321fffff,0xffff15ff,0xbff9001f,0x20027fec,0x7e405ffe,
    0x7fe4005f,0x2fffc00f,0x02fffa80,0x7ff4bff9,0x1fff6006,0x37fe25ff,
    0x3220ff71,0xcfffffff,0x3a606ffc,0xffffffff,0x2e00ffff,0xfffeaeff,
    0x0001efff,0x0017ffc0,0x01fffd71,0x643bfff7,0x3ff665ff,0x5ffc804f,
    0xa8013ff6,0x7e401fff,0x7fc4005f,0x37ff404f,0x01fffb80,0x7fd4bff9,
    0xfffa803f,0xff91ffc3,0x401fffff,0x70abcba8,0xff900dff,0xff59ffff,
    0x37fdc01f,0x00359953,0x8bffe000,0x7fcc01ca,0x85ffc81f,0xffd85ffc,
    0xffffd504,0xffffffff,0x0dffd00b,0x000bff90,0x6c01fff9,0xff9007ff,
    0x22ffe40f,0x2602fffe,0x4fd86fff,0x7fffffe4,0x3fee0004,0x26aa6006,
    0x401fff30,0x00006ffb,0x45fff000,0x7fc406ff,0x84ffd82f,0xffc85ffc,
    0xfffffd05,0xffffffff,0x7ffd403f,0x05ffc802,0x03fff880,0x2003fff2,
    0x3f206ffe,0x7fffcc5f,0x3fff221c,0x985fc82f,0x000bcccb,0x001bfee0,
    0x701fff20,0x00000dff,0x4cbffe00,0x3f204fff,0x4ffd80ff,0xfc85ffc8,
    0xffff905f,0xffffffff,0x6ffd80df,0x00bff900,0xa81fff60,0xff802fff,
    0x17ff205f,0x3fffffea,0x03ffffff,0x00000ff7,0x001bfee0,0x80bfff10,
    0x00006ffb,0x25fff000,0x9aeffff9,0x06ffffc9,0xff909ffb,0x40bff90b,
    0x99bfff98,0x4c00afff,0xf9002fff,0x3e6000bf,0xfff303ff,0x4fff9809,
    0x5417ff20,0xffffffff,0x3fe602ff,0x51000003,0x015dffb5,0xfdaaaa98,
    0x36602fff,0x000aafff,0x3ffe0000,0xffffff32,0x3fffffff,0x3213ff60,
    0x5ffc85ff,0xf12fff80,0xffb003ff,0x2ffe400f,0x0dffb000,0xb007fff4,
    0x7e401fff,0x3ff6205f,0x801dffff,0x000406fe,0x7fffffd4,0xff881fff,
    0xffffffff,0x3ffffa04,0x0005ffff,0x45fff000,0xffffffff,0x3601ffff,
    0x5ffc84ff,0x4405ffc8,0xfff31fff,0x3fff8801,0x017ff200,0x02fffa80,
    0x2609fff7,0x7e405fff,0x3ffa205f,0x503503ff,0xfc881bff,0x7ffe4003,
    0x83ffffff,0xfffffffa,0x3fe204ff,0x7fffffff,0xff000000,0x75d6d45f,
    0x00beffff,0x7e427fec,0x05ffc85f,0xf98fffc4,0x7fe400ff,0x3ff2000f,
    0x7ff40005,0x03fffe06,0x9007fff6,0x3fe20bff,0xbeffffff,0xfd81fffc,
    0xfffedeff,0x7fecc002,0x00dfffff,0x7bfffff9,0xfffd9003,0x0007dfff,
    0x3fff3000,0x005ffc80,0xf905fff3,0x5fff50bf,0xa87ffcc0,0x7fc407ff,
    0x7fe4004f,0xf500009d,0x3fee03ff,0x37ffc43f,0x0bff9310,0x3ffffffa,
    0xffffffff,0xfffff901,0x000009ff,0x00000000,0xd8000000,0xffc807ff,
    0x7fff4405,0x10bff906,0x301dffff,0x3fea1fff,0x07ffe407,0x3ffff200,
    0xfe8002ef,0x1fffa05f,0xd305fff9,0x20bfffff,0xffffffff,0x04ffffff,
    0x05e6e544,0x00000000,0x00000000,0xcaaaa880,0xc805ffff,0x7fd405ff,
    0xbff703ff,0x0bfffee0,0xffa9ffe6,0x027ffc05,0x7ffffe40,0xffb8006f,
    0x3fff501f,0xfd82fffc,0x505fffff,0x2e6137bd,0x0000bdec,0x00000000,
    0x00000000,0x7fffec00,0x00efffff,0x4404ffb8,0x3e601dff,0x3ffae02f,
    0x7447fb00,0x3ffe202f,0xfffc8000,0xd0003fff,0x37e403ff,0x7d403bf2,
    0x005fffff,0x00000000,0x00000000,0x00000000,0x3ffffffe,0xf1000eff,
    0x4002003f,0x00010008,0x002da800,0x03333310,0x803d9800,0x26600100,
    0x00000999,0x00000000,0x00000000,0x2e000000,0x1ceffffe,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x26660000,0x09999999,
    0xbdcba880,0x3bb6e00a,0xeeda82de,0x654403de,0x5e4400ac,0x40000000,
    0x400adcb9,0x002bdca8,0x00013331,0x99999988,0x19999999,0x26662000,
    0x79973000,0x13300005,0x01998800,0x8817b500,0xffffffff,0xf9106fff,
    0x5fffffff,0xffffff10,0xfffff81f,0xfff902ff,0x3e20bfff,0xfd980fff,
    0x2a0000df,0x4ffffffe,0xffffff50,0x7fff403d,0x7dc0006f,0xffffffff,
    0x0007ffff,0x80bffffd,0xffffffd8,0x7f54001e,0x01cfffff,0x000fffec,
    0xf117ffee,0xffffffff,0xfe883fff,0xffffffff,0xfffff83f,0xffffe87f,
    0xfffc81ff,0xb86fffff,0x7dc3ffff,0x002fffff,0xffffffc8,0xfffb87ff,
    0x81ffffff,0x06fffff9,0x7fffdc00,0xffffffff,0xff98007f,0x3e605fff,
    0xffffffff,0xfffd002f,0x0fffffff,0x001fffd8,0x223fffec,0xffffffff,
    0xffc86fff,0xfffddeff,0x7fec41ff,0xffa880bf,0xfffb81df,0x3ffffeef,
    0x327fffec,0xffb339ff,0x7ffe4001,0x44feceff,0xfdfffff9,0xfd80ffff,
    0x40006fff,0xfffffffb,0x07ffffff,0xbffffb00,0x77ffff40,0x00fffffd,
    0x7fffffe4,0x6c07ffff,0x54001fff,0x7fc45fff,0x999999af,0x03dff900,
    0xf10bfff5,0x7fdc09ff,0x5dffd01f,0x907fff4c,0x7e47ffff,0x9002fe85,
    0x0815ffff,0x223fffd8,0x3204fffc,0x540006ff,0x99999dff,0x007ffd99,
    0xb82ffe40,0x2e20cfff,0x7fc04fff,0xba999bef,0x5554c01c,0x82c98000,
    0x8001fff8,0x7fe403c8,0x01fff906,0x2a0bfff1,0xff881fff,0x3fffee2f,
    0x3ee0bf63,0xefffc804,0x9fff1000,0x403fff20,0x80006ffb,0x7ff401ed,
    0x7fe40004,0x40dffb05,0x3e606ffe,0x000001ff,0x7fc40000,0x2000001f,
    0xff107ffa,0x3fff709f,0xc817ff60,0x3ffee4ff,0x3613f62f,0x7ffcc03f,
    0x3fe6000e,0x5fff101f,0x311bfee0,0xf9800003,0x131001ff,0xfd05ffc8,
    0x3ffdc09f,0x000fff50,0x10000000,0x26a63fff,0xffb00000,0x07ffe40d,
    0x7c0bfff1,0x3fe602ff,0x87fffea6,0x3fea1ffb,0x07ffe401,0x01ffea00,
    0x3ee07ffd,0xffffb8ef,0xc80003ef,0x7ecc07ff,0xfc8cffff,0x0dffb05f,
    0x36a37fec,0xeeefffee,0x3ae03dee,0x004eeeee,0x7fffc400,0x01efffff,
    0x9fffb300,0x72fffc40,0x3e203fff,0x3fe201ff,0x1ffff30f,0xffeeffe8,
    0x3ffe1444,0xf5006a65,0x3fe201ff,0xffff704f,0xffffffff,0x7fc0001b,
    0x3fff204f,0xffffffff,0x5fff705f,0xf89fff30,0xffffffff,0xa81fffff,
    0x5fffffff,0x7fc40000,0xffffffff,0xffd8803f,0xc806ffff,0xfff89fff,
    0x03ffe605,0x3e25fff0,0x7ec40fff,0xfd714fff,0x2bffe27f,0x03fffffb,
    0x3607fff1,0xff706fff,0xffffffff,0x0001ffff,0x3a03fff3,0xffffffff,
    0x105fffff,0xd77dfffd,0xfe83ffff,0xffffffff,0xf980ffff,0x05ffffff,
    0x7ffc4000,0xffffffff,0x7ffdc01f,0x8800ffff,0xfffcdfff,0x03ffe601,
    0x7fc5fff0,0x2aaa207f,0x0dffffeb,0xfffdfff3,0xf01bffff,0xffb81dff,
    0xfff707ff,0xd5113bff,0x9000bfff,0x3fee0fff,0xfb989bff,0x2605ffff,
    0xffffffff,0xcaa882ff,0xaaaaafff,0x2aaa200a,0x22005ffd,0xffb05eee,
    0x3ff6637d,0x7ffcc06f,0x7003ffff,0x0bffffff,0x400fff98,0x3ffe2fff,
    0x3ffae606,0x7d40adff,0xffffffff,0xffa85fff,0xfffdabff,0xffb80fff,
    0x3ff202ff,0x7ffc002f,0x0efff984,0x0bffff30,0xffffffe8,0x7d400fff,
    0xf900007f,0x7fdc00bf,0xb802602f,0x54402fff,0x03ffffdc,0xffffff88,
    0x07ffcc01,0xfe8bffe0,0x7ff64c6f,0x7d402dff,0xb8aeffff,0xfd82fffe,
    0xffffffff,0xfff707ff,0x0bffd009,0x40fffcc0,0x5400fffb,0x3f605fff,
    0xffffffff,0x3ffd406f,0x5ffc8000,0x017ff600,0x07fff100,0x0ffffa80,
    0x5ffffb80,0x00fff880,0xffb17ffc,0x67fffccb,0x81dfec8a,0x886ffff9,
    0xfd885fff,0xfdffffff,0x1fff706f,0x00fff500,0xfd83ffe4,0xbffd004f,
    0x33fffee0,0x4ffffc89,0x001ffea0,0x802ffe40,0x0000fff8,0x8005ffd8,
    0x8802fff9,0xf001ffff,0x7fc403ff,0x88fff21f,0x3ffe61cd,0xfff83fff,
    0x0dffb01f,0x467ffed4,0xff704ffd,0x3ffe600f,0x09fff000,0x6c00fffa,
    0xfffd05ff,0x81fffa01,0x00007ffa,0x2a00bff9,0x900003ff,0x3a000bff,
    0xff8804ff,0x3ff6005f,0x11ffe603,0xbfd001bb,0xe83ff935,0x3fea04ff,
    0x3e60800f,0xfff702ff,0x03ffe600,0x407ffe60,0xfb003ffe,0x13ffe0bf,
    0x501fffa8,0x20000fff,0xfb005ffc,0x7ec0000d,0xff90004f,0x3fff900b,
    0x037fdc00,0x4000dffb,0x44fd87fa,0x3ea06ffd,0x7f44007f,0xfff700ff,
    0x0fff7001,0xc81fff20,0xffd005ff,0x03fff10b,0xa817ffc4,0x900007ff,
    0x3fe00bff,0x4c00d401,0x88002fff,0x7c402ffe,0x7cc005ff,0xfff982ff,
    0x13ee0002,0xfff71be6,0x01bff605,0x02fffe98,0x1017ffee,0x3e00bfff,
    0x3fee04ff,0x7ffdc02f,0x409ffd05,0xf500fffb,0x320000ff,0x4f9805ff,
    0x40effdc0,0x30fffeb8,0x3aa205dd,0x554c0fff,0x00bfffda,0x467fff40,
    0x007fffc8,0x7dc2fdc0,0x577ffc45,0x8bfff930,0x3ff260a8,0x3f6603ff,
    0xfa81efff,0xf9801fff,0x3fa201ff,0x7e440bff,0xfc82efff,0x3ee61bff,
    0xfca986ff,0x0aaaaaff,0x36aaaa20,0x0aaaaeff,0x7fe40144,0xfffeffff,
    0x3ff23fff,0xffffefff,0x7ff44fff,0xffffffff,0x3ffe6000,0x2fffffff,
    0x4c01dd98,0x0ffa22ff,0x3ffffff2,0x220fffff,0xffffffff,0x3ffe05ff,
    0xefffffff,0x03fffffe,0x300fff90,0xfdffffff,0xffffffff,0x7fffcc3f,
    0xffffffff,0x3ffffe62,0xffffffff,0xfffffb85,0xffffffff,0xffd0004f,
    0xffffffff,0xffff989f,0xffffffff,0x7ffffc43,0x02ffffff,0x7ffffdc0,
    0xffd03fff,0xbdff900d,0x7fec0dff,0x2fffffff,0x7fffffcc,0x3e603fff,
    0xffffffff,0x4fffffff,0x00fff600,0x7fffffd4,0xffffffff,0x7ffcc3ff,
    0x2fffffff,0x7fffffdc,0x7fffffff,0xffffffd8,0xffffffff,0xfd710006,
    0x3dffffff,0x3ffff660,0x902effff,0xfffffffd,0x3aa000bf,0x203effff,
    0xf9005ffd,0xb801bfff,0x1effffff,0xffffff90,0xffd90019,0xffffd7df,
    0x98003dff,0x7ec4006e,0xdcffffff,0x880dffff,0xdffffffd,0xffffd881,
    0xefffffff,0xffffd982,0xffffffff,0x9980002e,0x10009aaa,0x00135553,
    0x44000000,0x055000aa,0x001aa880,0x8004d54c,0x00000aa9,0x004d5d4c,
    0x98800000,0x80001aba,0x00001aa8,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00066660,0x4ccccc40,0x00000000,0x00013331,0x00019800,0x01bccb98,
    0x06666200,0x00075100,0x40006662,0x40001a98,0x880001a8,0xeb88019a,
    0x262deeee,0x0ceeeeed,0x3ea0b726,0x0001ffff,0x3fffffe2,0x4fb8005f,
    0xffff8800,0xb800004f,0x04effffe,0x7ffffd40,0xe8000dff,0x54407fff,
    0x4005ffec,0xcffffffc,0xff9303da,0x001bffff,0xffffd951,0xb809b35b,
    0xcffffffd,0x7ffdc4ca,0xfd0fffff,0x29ffffff,0x6c1ffff8,0x001fffff,
    0x3ffffee0,0xff8005ff,0x7fdc000f,0x00004fff,0x3fffffa6,0xb801efff,
    0xffffffff,0x3ee001ff,0xfd507fff,0x00bfffff,0x3fffffe6,0x20ffffff,
    0xffffffe9,0x2602ffff,0xfffffffe,0x881fffff,0xfffffffd,0x2a1fffff,
    0x7fffffff,0x3ffffff6,0x7ffff53f,0x1ffffea8,0x3ffa2000,0x4005ffff,
    0x4001fff8,0x04ffffe8,0xffff3000,0xffffffff,0x7fffdc07,0xeffffedf,
    0xffff8800,0xffff887f,0x8805ffff,0xffffffff,0x322fffff,0xffffffff,
    0xfa81ffff,0xffffffff,0x443fffff,0xfffffffe,0x43ffffff,0x0acfffd9,
    0x3bffb2a2,0x807fffc1,0x0001fff8,0x5ffd9988,0x0fffc400,0x4ffe8800,
    0xffe88000,0xfca88adf,0xfff01fff,0x7fe4c15d,0xfffc804f,0xffff07ff,
    0xb00bffdd,0x3117bfff,0x645ffff9,0xa89bdfff,0x7c46fffd,0x531bdfff,
    0x447ffffd,0x11bdffff,0x07ffff73,0xf900bff9,0x017510bf,0x0001fff8,
    0x002ffe40,0x0007ffe2,0x0004ffd8,0x203fffd8,0xfa86fffa,0x3ffa01ff,
    0x7fffcc05,0x159307ff,0x3e017ff2,0x3fee05ff,0x817fee2f,0x3f60fffc,
    0x7fe405ff,0x13fff23f,0x907fff10,0xff900bff,0xfff8000b,0x7e400001,
    0xfdd7005f,0xddddddff,0x7fec019d,0xa8006624,0xfa804fff,0x27fcc3ff,
    0xb01ffee0,0x0fff7fff,0x202ffe40,0x7c01fff8,0x0ffe61ff,0x3e1fff88,
    0xfff004ff,0x017ffe25,0x7e40ffe4,0x5ffc805f,0x0fffc000,0x19ddddb7,
    0x017ff200,0x3fffffea,0xffffffff,0x2f3ff603,0x01effffe,0xd0037fe4,
    0x01750dff,0x2a06ffc8,0x7ffacfff,0x017ff200,0xf700bffe,0xf980550d,
    0x1fff31ff,0x5c3fee00,0xb1000fff,0x017ff207,0x00017ff2,0x3fea3fff,
    0x004fffff,0xf300bff9,0xffffffff,0x405fffff,0xfffffffd,0x3a03ffff,
    0x3e6003ff,0xff10007f,0xbfff40bf,0x32007ffa,0xffd805ff,0x000000bf,
    0x7fdcdffb,0xf9054006,0x640000df,0xffc805ff,0x7ffc0005,0xffffff31,
    0x3ff2007f,0xff751005,0x5555557f,0xffffd803,0xffffffff,0x003fff02,
    0x000fffc4,0x40bfffa2,0xff52fffb,0x2ffe400f,0x7ffffd40,0x40000ace,
    0x363fffea,0x740004ff,0x200004ff,0xfc805ffc,0x7fc0005f,0x9ffffb1f,
    0x7fe40035,0x7ffc4005,0x3ff60001,0xfb98adff,0xfff984ff,0x17ffc000,
    0xbfffd100,0xa9bffe20,0x3f2007ff,0xfff5005f,0x17dfffff,0x3ffee200,
    0x3ffe0eff,0x7ffc0002,0x3f200002,0x5ffc805f,0x5fffc000,0x002ffffe,
    0x800bff90,0x0001fff8,0x6413fff6,0xfff986ff,0x17ffc000,0x6fffe880,
    0xa87fff60,0x3f2007ff,0x3f66005f,0xefffffff,0xffffc800,0x17ffc0ef,
    0x0bffe000,0x666665c4,0x05ffc81b,0xc985ffc8,0x7fffc02d,0x0001ffff,
    0x10017ff2,0x40003fff,0x3e604ffd,0x7ffc40ff,0x3ffe2001,0xffff9801,
    0x9fff300e,0x2007ffa8,0x50005ffc,0xffffffd9,0xefffc801,0x007fff02,
    0x982ffe80,0xffffffff,0x02ffe44f,0x3e22ffe4,0x3fe01fff,0x000effff,
    0x002ffe40,0x0007ffe2,0x2604ffd8,0xffe80fff,0x3ffe6002,0x7fffd400,
    0x07fff405,0xc801ffea,0x880005ff,0x403fffea,0x7f405ffa,0x7ec0004f,
    0xffffa84f,0x5c6fffff,0xffc806ff,0x1ffffcc4,0xfffffff0,0xffc80005,
    0x7ffc4005,0x3ff60001,0x03ffe604,0xd801bff6,0x7fdc06ff,0x7fd405ff,
    0xffffffff,0xfc803eff,0x01e4405f,0x4406ffc8,0x7fec01ee,0x7fdc0006,
    0xfdddb705,0xff983dff,0x1fff402f,0xf007fff4,0x7fffffff,0x2ffe4000,
    0x07ffe200,0x04ffd800,0x2a03ffe6,0xfa803fff,0x3ff204ff,0xffb804ff,
    0xffffffff,0xfc807fff,0x17fe405f,0x003ffd40,0x05fff500,0xfff50c40,
    0x0fffa001,0xc81bffe2,0x17501fff,0xfaafff80,0x90004fff,0xf8800bff,
    0x80c402ff,0x3e604ffd,0xfffb00ff,0x37ffcc05,0x2ffffd88,0xfffff700,
    0xffffffff,0x0bff9009,0x400effe8,0x00007ffd,0x400ffff4,0xfff14ff9,
    0x0fffa00b,0x85f7ffe4,0x005fffc9,0xf51fff80,0x9000bfff,0xff000bff,
    0x765441bf,0x4ffd83ff,0x403ffe60,0x21cffff8,0x81ffffb8,0x01ffffe8,
    0x26666620,0x0fffb999,0x80bff900,0x21bffffe,0x05fffeb9,0x7ffcc000,
    0x326209df,0x3fee6fff,0x65441bff,0x3fa03fff,0xffffffff,0x220000ff,
    0x3e61fffa,0x881adfff,0xeffdaaaa,0x6c00aaaa,0xffefffff,0x2625ffff,
    0xb881dffe,0xf500afff,0xffffffff,0xff109fff,0x55559fff,0x2005b755,
    0x01fffca8,0xdffb5553,0xffe83555,0xffffffff,0x5c00ffff,0xff3004ee,
    0xffffffff,0xfd87ffff,0xffffffff,0x203fffff,0xffffffe8,0x20001eff,
    0x41fffffb,0x6ffffffd,0x3fffffee,0xffffffff,0x3fffe204,0xefffffff,
    0x3fffff61,0x3fffe64f,0xfd500fff,0xffffffff,0x3fffe605,0xffffffff,
    0xffc806ff,0x745fffff,0xffffffff,0xfb0fffff,0xffffffff,0x8805ffff,
    0x3002ffff,0xffffffff,0x9105ffff,0xffffffff,0x003dffff,0x9ffffff7,
    0xfffb0000,0xffff83ff,0xffb0ffff,0xffffffff,0x980dffff,0xfffffffd,
    0x7fffc42d,0x3ff27fff,0x203fffff,0xffffffc8,0x3ffe600d,0xffffffff,
    0x7400ffff,0x7fffffff,0x3fffffe2,0xffffffff,0xffb3bd31,0x019fffff,
    0x003fffa0,0xfffedb88,0x4c00ceff,0xffffffed,0xa98001cf,0x2600001a,
    0x541ffffd,0x23effffe,0xffffffd9,0x2effffff,0x15775100,0xffffeb80,
    0x3fff622e,0x53000dff,0x3fe60035,0xffffffff,0x400fffff,0xefffffda,
    0x7ffff5c2,0x4effffff,0x0d554c40,0x00554400,0x006aa200,0x03555300,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x3bbbb6a0,0x43deeeee,0xeeeeeedb,
    0x7002cdee,0x505bdddb,0x5c7bdddb,0xeeeeeeee,0xeeeeeeee,0xddddd914,
    0xdddb305b,0x76d419dd,0xeda82dee,0x76dc3dee,0xdb83deee,0x223deeee,
    0xeeeeeeec,0xdb7000ce,0x5c39dddd,0xa83deeed,0xeeeeeeed,0xdb83deee,
    0x3663deee,0x4c0ceeee,0xeeeeeeed,0x0000bcee,0x3fffffe2,0x3fffffff,
    0xfffffff5,0x3dffffff,0x7ffffc40,0x7fffc0ff,0xfff91fff,0xffffffff,
    0x32bfffff,0xffffffff,0x7fffffc0,0xffff15ff,0xfff81fff,0xff32ffff,
    0x47ffffff,0xfffffff9,0xfffffb2f,0x00bfffff,0xfffffff5,0x3fffe6df,
    0x3fe22fff,0xffffffff,0x3ea1ffff,0xd0ffffff,0x8bffffff,0xfffffffe,
    0x03ffffff,0x3ffffe00,0xffffffff,0xffffff31,0xffffffff,0x3ffe203f,
    0xffe87fff,0xff90ffff,0xffffffff,0x2bffffff,0xfffffffa,0xfffffe87,
    0x3fffe3ff,0xfffe87ff,0xfff11fff,0x443fffff,0xffffffff,0xffffff91,
    0x3009ffff,0xffffffff,0x3ffffe6b,0x7fffc1ff,0xffffffff,0x3ffea0ff,
    0xffb0ffff,0xfd89ffff,0xffffffff,0x005fffff,0xf9999510,0x88379bff,
    0xccceffeb,0x0fffffec,0x3ffff710,0x19ffff10,0x66677fe4,0xeccceffe,
    0x3ff2a5ff,0xca880adf,0x5442dfff,0xf880ffff,0x74c0bfff,0x881bceff,
    0x41fffdcb,0xceffecb9,0x3ee6001b,0x7ec2ceff,0xa880bfff,0xceffeccc,
    0xfe980acc,0x32a20aef,0xf9502fff,0xfb9999ff,0x0007ffff,0x4017ffc0,
    0xf7104ffd,0xffb805ff,0x5fffc85f,0x7e45ffc8,0x42ffe45f,0xfb804fff,
    0x3fee00ff,0x4fffb84f,0x8017ff60,0x7ec06ffb,0x7ec0004f,0xffffd84f,
    0x2ffe4001,0x409ffb00,0x2600fff9,0xff300fff,0x7c0000ff,0xffd802ff,
    0x027ff404,0xf727ffec,0x3ff20dff,0x322ffe45,0xfffc85ff,0x02fff400,
    0xf10fffec,0xffc80dff,0x323ffec6,0x7fec05ff,0x7fec0004,0x3bfffa24,
    0x5ffc8001,0x813ff600,0x2600fff9,0x3ee00fff,0xf00000ff,0xffb005ff,
    0x05ffd809,0xf37fffd0,0x3f201fff,0x22ffe45f,0xff885ffc,0x3ffea03f,
    0x6fff8802,0x7007fff6,0x7ffc4fff,0x013ff61f,0x80009ffb,0xffd34ffd,
    0x320001df,0x3f6005ff,0x3ffe604f,0x03ffe600,0x001fff88,0x005fff00,
    0x7d409ffb,0xff1002ff,0x03ffffff,0x3f21ffdc,0x81ffd45f,0x3f606ffd,
    0x3fee006f,0x04fffbcf,0x3ee7ffa8,0x3ffa4fff,0x027fec03,0x2b3ff600,
    0x000dffff,0x8017ff20,0x3e604ffd,0x3fe600ff,0x3fff200f,0xfff00000,
    0x89ffb005,0x0ffffda8,0x3fffe600,0x6ec402ff,0x222ffe40,0xfff500dd,
    0x07fff103,0xfffffd80,0xfff3006f,0x9fffff61,0x7ec02fff,0x7ec0004f,
    0x05ffffef,0x05ffc800,0x333bff60,0xfffdcccc,0x03ffe600,0x0037ffc4,
    0x005fff00,0xfffffffb,0x005fffff,0x09ffff50,0x05ffc800,0x90bffd00,
    0x88001fff,0x01ffffff,0xf13fff10,0xf13fffff,0xffd803ff,0x7fec0004,
    0x01ffffff,0x02ffe400,0xffffffb0,0x1fffffff,0x4cfffcc0,0xffffeb99,
    0x40054403,0xfd802fff,0xffffffff,0xf90001ef,0x8000bfff,0x70005ffc,
    0xfff81fff,0xfff50004,0xfff8007f,0xffffffba,0x400fff9c,0x40004ffd,
    0xfffffffd,0x320001ff,0x3f6005ff,0xffffffff,0x2600ffff,0xffffffff,
    0xe804ffff,0x2fff806f,0xfffffd80,0x002fffff,0xffffff50,0x7fe40009,
    0xfff10005,0x00fffd47,0x00dffb00,0xffd7ffd0,0xff5fff9b,0x09ffb00f,
    0xffb02d98,0xffffb5ff,0x3ff20003,0x3bff6005,0xfeeeeeee,0x3fe600ff,
    0xffffffff,0xfff8804f,0x017ffc00,0x5556ffec,0x001ffffe,0x7f7fffcc,
    0xf90002ff,0x7ec000bf,0x01bffa7f,0x00bff900,0xfffdffb0,0xffbfff35,
    0x09ffb00f,0xffb07fe8,0x37ffd41d,0x05ffc800,0x9813ff60,0x3e600fff,
    0xefffffff,0xfff3000d,0x02fff801,0xfd84ffd8,0xf1001fff,0xfff15fff,
    0xff90003f,0x7fcc000b,0x02fff9af,0x02ffe400,0x7ffffe40,0xfffffd0f,
    0x09ffb00d,0xfd81fff8,0x3fffb84f,0x05ffc800,0x9813ff60,0x3e600fff,
    0x000999ff,0x401fff30,0xd801fff8,0xfff904ff,0x3fffa00d,0x03fffe63,
    0x00bff900,0xfcdffe80,0xfc80007f,0xffb8005f,0x3ff25fff,0xfd805fff,
    0x3ffe204f,0xb04ffd81,0xc8001fff,0x3f6005ff,0x3ffe604f,0x03ffe600,
    0x3ffe6000,0x01ffee00,0xf9027fec,0xffd809ff,0x6fffa84f,0x02ffe400,
    0x3fffee00,0xc80004ff,0xfa8005ff,0x3e63ffff,0xd804ffff,0x3fe204ff,
    0x04ffd81f,0x8007fff1,0x36005ffc,0x3fe604ff,0x3ffe600f,0xff980000,
    0x3f222cef,0xfe9805ff,0xffd00adf,0xffc8837f,0xfffb00ff,0x6d54c01b,
    0x001aaeff,0xffffff88,0xb5510000,0x00355dff,0x03ffffe6,0x207ffffd,
    0xadffeaa8,0xffbaaaaa,0x6fff4c1f,0xafffc80a,0xfb555301,0x103555df,
    0x103bffd3,0x1015fff9,0x5557fff7,0xfff30001,0xffffffff,0x7fc401df,
    0x85ffffff,0x32fffff8,0x3fffffff,0x7fffffc4,0xffffd83f,0x06ffffff,
    0x5ffffc80,0xffffb000,0x0dffffff,0x0dffff10,0x705ffff9,0xffffffff,
    0xffffffff,0x3fffe63f,0x7c44ffff,0x7f46ffff,0xffffffff,0x7ff47fff,
    0x3f27ffff,0x20ffffff,0xfffffffc,0xb8002fff,0xffffffff,0x7d400eff,
    0x7fffffff,0x2bffff50,0xfffffffb,0x3ffffe63,0xffff85ff,0xffffffff,
    0x7ffcc000,0xfff0002f,0xffffffff,0xffff001f,0x3ffff307,0xffffffb0,
    0xffffffff,0x3fee3fff,0x86ffffff,0x10fffffd,0xffffffff,0x23ffffff,
    0xfffffff8,0xfffffd1f,0x7fff47ff,0x4fffffff,0x3ff6a000,0x800cefff,
    0xffffffd8,0x37ff602e,0xfffffb11,0xfffec81b,0xffeb81df,0x3effffff,
    0x0dffb000,0x7fff5400,0x03efffff,0x201ffff0,0xd980fffe,0xffffffff,
    0xffffffff,0xfffffb11,0xfff305df,0xfffeb89d,0xefffffff,0x7ffff5c4,
    0x3fffaa4e,0x3faa0dff,0xdfffffff,0x55300001,0x00000001,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0xdb800000,0xeeeeeeee,0x4eeeeeee,0x3bbbbb6e,0xeeeeeeee,
    0x7776dc4e,0x02bdeeee,0xeeeeeec8,0x46eeeeee,0x80deeeda,0xceeeeed9,
    0xeeeeb880,0x2000eeee,0x804eeedb,0x20bdeeeb,0xeeeeeedb,0x000bceee,
    0x019bcca8,0x00000000,0x00000000,0x7cc59997,0xffffffff,0xffffffff,
    0xffffff55,0xffffffff,0x7ffd4bff,0xffffffff,0x3ffa01ef,0xffffffff,
    0x3ffe27ff,0xffe85fff,0xb85fffff,0xffffffff,0xfff1003f,0xfe803fff,
    0xff53ffff,0xffffffff,0x2007ffff,0xffffffe9,0x003ee884,0x1ee88000,
    0xea800000,0x1ffff81e,0x3fffffe2,0xffffffff,0xfff35fff,0xffffffff,
    0x4cbfffff,0xffffffff,0x04ffffff,0xfffffffd,0xf8ffffff,0x42ffffff,
    0xfffffffd,0xfffff984,0x1006ffff,0x09ffffff,0x7fffffd4,0xffffff32,
    0xffffffff,0xfff8807f,0xb86fffff,0x0002efff,0x013fea00,0xffea8000,
    0x2fffcc4f,0x677ff544,0xeccccccc,0x3fae25ff,0xccccccef,0x6445ffec,
    0xdccccfff,0xe82fffff,0xccccceff,0x5446fffe,0x40fffffe,0x01effeca,
    0x3fff72e6,0xb1001fff,0x201fffff,0x41effffe,0xccefffb9,0xffffeccc,
    0x3bfff601,0xf982fffd,0x001effff,0x05ffc800,0xffd98000,0x7fe43fff,
    0x17ff200f,0x3617ff20,0x7fe404ff,0x206ffb85,0x740ffffa,0xfff883ff,
    0xffff701f,0x1bff209f,0xfffffb80,0x3fee004f,0xff983fff,0x3f606fff,
    0x3ffe604f,0x993ffe03,0x3ffa600c,0x0000dfff,0x0017ff20,0xffffc880,
    0x4ffe82ef,0x402ffe40,0xffd84ffc,0x42ffdc04,0x7dc06ffb,0x1fff44ff,
    0x701ffff4,0x03ffffff,0x7c00dff9,0x0fffcdff,0xfffff700,0xfffffb0f,
    0x027fec0d,0x7c417ff6,0xd50001ff,0x019fffff,0x0bff9000,0x3ffee000,
    0xff103fff,0x5ffc801f,0x5ff51fe4,0x6c49ffb0,0x707ff32f,0xffb00dff,
    0x217fec1f,0x5c04fffc,0x86ffffff,0xf5006ffc,0x7fff13ff,0x3fffee00,
    0x3ffe23ff,0x3f606fff,0x27ffc04f,0x000bfff0,0xffffffb8,0x7fe40003,
    0x7fd40005,0x200cffff,0xfc804ffa,0x31bfe25f,0x993ff603,0x5c0a65ff,
    0xff9806ff,0xa83bea1f,0xfb806fff,0x43fffbef,0xfb006ffc,0x037fecdf,
    0xffdeffb8,0x3f3fff26,0x13ff606f,0x01fffecc,0x0003fff9,0xfffffc88,
    0xff90002e,0x3fa6000b,0x800dffff,0xfc800ffd,0x7ffdccef,0x33bff600,
    0x7007ffdc,0xff100dff,0xfff9805f,0x6ffb800f,0x7e41fffd,0xfff8806f,
    0x007ffea3,0x3febbfee,0xf79fff2f,0x77fec0df,0xffffdccc,0x7ffc406f,
    0xfb100006,0x403dffff,0xffd99998,0x2019999e,0xefffffd9,0x00ffe001,
    0x7fffffe4,0x3f6007ff,0x7fffffff,0x00dff700,0xe880fffa,0xf7002fff,
    0x97ffe6df,0xfc806ffc,0x27ff40ff,0xfeb7fdc0,0xb9fffbef,0x3ff606ff,
    0xffffffff,0x3fa201ff,0x2f2a4fff,0xffe98001,0x3e60dfff,0xffffffff,
    0x2fffffff,0x3fffff22,0x37c4002e,0xfffff900,0x6c00ffff,0xffffffff,
    0x0dff7007,0xd80fffa0,0x2e004fff,0x3fff26ff,0xf00dff93,0xfff709ff,
    0x76ffb801,0x2bffffff,0x3f606ffb,0xffffffff,0xe880efff,0xd1ffffff,
    0x74000dff,0x70ffffff,0xffffffff,0xffffffff,0x3ffffa2b,0x030000ef,
    0xeefffc80,0x36007ffe,0xffeeefff,0x0dff7007,0x5c0fffa0,0x5c005fff,
    0x7fff46ff,0x5406ffc8,0xeeeeefff,0x5c03fffe,0x3fffe6ff,0x0dff72ff,
    0x77777fec,0xefffffee,0x7efffe40,0xffff9eff,0x7ff54001,0x3a60cfff,
    0xffffffff,0x1effffff,0x7fffffdc,0xc8000003,0x1ffe25ff,0x2a4ffd80,
    0x5c04c6ff,0xff8806ff,0xefff981f,0x5c0f7440,0x7ffd46ff,0x6c06ffcd,
    0xffffffff,0x5c06ffff,0x3ffee6ff,0x81bfee6f,0x36604ffd,0x7ff44fff,
    0xffffff54,0x7f4c007f,0x200dffff,0xffd99998,0x2009999d,0xefffffc8,
    0x80026002,0x27ec5ffc,0x449ffb00,0x03fee3fe,0xf500dff7,0xfff881ff,
    0x84ffb81f,0xffd86ffb,0x2206ffef,0xffffffff,0x01ffffff,0xff89bfee,
    0x1bfee2ff,0xe804ffd8,0x3ffe26ff,0x3fffff61,0xfffb1004,0x20003dff,
    0x10005ffc,0x3dfffffb,0x2007ff00,0x00085ffc,0x20427fec,0x7fdc3ffd,
    0x37ff4406,0xc81ffff4,0x6ffb85ff,0xffffff88,0x33fff206,0xeccccccc,
    0x3fee04ff,0x2e3ffe46,0x3ff606ff,0x0fff9804,0x7c43fff3,0x4401ffff,
    0x2efffffc,0x2ffe4000,0x3ffa6000,0x3200dfff,0xffc804ff,0xffd80005,
    0x43ffe804,0x3a206ffb,0x7fe43fff,0x17ff204f,0x7d41bfee,0x3e06ffff,
    0xffb804ff,0x8dff700f,0x7fdc0998,0x013ff606,0xff83ffee,0x3fff21df,
    0xfff7009f,0x00007fff,0x00017ff2,0x7fffff54,0x1bff700c,0x2bbff660,
    0x74c001aa,0xaaaaadff,0x23ffeaaa,0xaaafffc8,0x5ffffdca,0x55ffffd4,
    0xffdaaaaa,0x57ffe445,0x6ffffd81,0x1cfffb88,0x33ffee20,0x577fe441,
    0x3ff6a201,0xdffe980e,0xecaaaaaa,0x7fec6fff,0xffffffff,0x7ff546ff,
    0x0000cfff,0x0017ff20,0xfffff700,0x1bfea07f,0x3ffffffe,0x4400ffff,
    0xffffffff,0xffffffff,0xfffff13f,0xffffffff,0xfffb81df,0xffffffff,
    0x3fe65fff,0x446fffff,0x7d46ffff,0x86ffffff,0xfffffffd,0xffffff33,
    0xffff90df,0x3fe67fff,0xffffffff,0x2fffffff,0x7fffffc4,0x1fffffff,
    0x1bfffff5,0xff900000,0x9100000b,0x207fffff,0x3fe60fe8,0xffffffff,
    0x7ffd402f,0xffffffff,0x53ffffff,0xffffffff,0x01bfffff,0xfffffff7,
    0xbfffffff,0x7fffffdc,0x7ffdc1ff,0x7ffffe46,0x7ffc0fff,0xf75fffff,
    0x1fffffff,0xffffffe8,0xfffff75f,0xffffffff,0x32207fff,0xfcffffff,
    0x3ffee4ef,0x2000001e,0x00003ffa,0x13fff660,0x3fffb200,0x004fffff,
    0xfffffffb,0xffffffff,0x3fff627f,0xbcefffff,0x3fffee01,0xffffffff,
    0x3ff625ff,0xfd04efff,0xfffd98df,0xfea83eff,0xb11dffff,0x07dfffff,
    0xbfffffd5,0x3ffff623,0xefffffff,0xa98800bd,0x6ec4009a,0x88000002,
    0x000001ed,0x0000dd98,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x0004ccc4,0x00066620,
    0x00000988,0x00001331,0x26000031,0x00001880,0x36e00133,0x75c43eee,
    0x0000eeee,0x3bb20098,0xeeeeeeee,0x3b220eee,0x3221deee,0x4c0ceeee,
    0x203deeed,0x42deeedb,0x3660cccc,0xffeda82d,0x000cffff,0xffffff91,
    0x6c403b7b,0x03dfffff,0x7ffff540,0x402dabef,0xdfffeca8,0x3bb6e00b,
    0xa8efffad,0x100cfffe,0xfd37ddd9,0x5405dfff,0x5c4fffff,0x01ffffff,
    0x23ddddb7,0x82dfffc8,0xfffffffd,0x20ffffff,0x6ffffffb,0x3ffffff2,
    0x7fffff44,0xffff982f,0x3ffe0fff,0x3ffff10f,0x7fffffe4,0x400fffff,
    0xfffffffb,0xf906ffff,0xffffffff,0xffd8805d,0xffffffff,0x3ffa207f,
    0x1fffffff,0xffffffa8,0xffffffff,0xfc80efff,0xffffffff,0xf304ffff,
    0xfa89ffff,0x981fffff,0xbaffffff,0x3fffffff,0x7fffffec,0x0fffffff,
    0x3fffffea,0x3ffffea4,0x7fffec3f,0xfff881ff,0x7ff46fff,0x8ffffe67,
    0xfffffffd,0x2606ffff,0xffffffff,0xfd87ffff,0xffffffff,0xff102fff,
    0xffffffff,0xd101ffff,0xffffffff,0xff983fff,0xffffffff,0xffffffff,
    0xfffffb84,0xffffffff,0xffd5102f,0xfff75109,0xfffff103,0xffffffff,
    0x7fec1fff,0xffdaaaad,0xffd983ff,0x3ffe62ff,0xfff701ef,0x4cb32a39,
    0x6c0cfffb,0x7fff46ff,0x26b37660,0x0fffda88,0x159fffb0,0x8ffff731,
    0x8acffffb,0x0ffffdb9,0x9aefffd8,0xffffdb98,0x6ffff441,0xfffca88a,
    0x7ffec42f,0xffffd8af,0x305ffd8a,0x15bffffd,0x80dffd73,0x3e204ffd,
    0xf55101ff,0x39ffffff,0xffc8bfd5,0x1ffffcc2,0x2fffff20,0x00dffffa,
    0xffd1fffc,0x407ffccf,0x0aa85ffc,0x2fff8800,0x440bffd0,0x3ffe65ff,
    0x3ffee01f,0x027ffd44,0xf903fff2,0x7fcc05ff,0x1fffb86f,0xfb87ffee,
    0x3fff606f,0x80fff705,0x3e204ffd,0xfff801ff,0x98081eff,0x3ffea0ee,
    0xfff7003f,0x009fffff,0x7fcd7ff6,0x0fff72ff,0x40013fee,0xfbcdecba,
    0xfff903ff,0x144157bd,0x2007ffee,0x3f60fffc,0x7ff8806f,0xb804fff8,
    0x7fdc0fff,0x2e3ffdc6,0x3ff606ff,0x03ffe605,0x2204ffd8,0xff801fff,
    0x40000dff,0x003ffffa,0x7fffffd4,0x5ffee003,0xfb5ffffc,0x0ffea0bf,
    0xfffff500,0x07ffffff,0x3fffffe2,0xfc82dfff,0xffffffff,0x1fffffff,
    0x5400fffa,0x03ffcc2d,0x5c2fff88,0x3ffdc6ff,0xfd81bfee,0x3ffe204f,
    0x813ff600,0xf801fff8,0xa80004ff,0x0003ffff,0x01dffffb,0x7cfffcc0,
    0xff8fffff,0x05ff303f,0x7ffffec0,0x3fffffff,0x3ffff660,0x744fffff,
    0xffffffff,0xffffffff,0x0007ffe2,0x400dff70,0x7fdc5ffd,0x2e3ffdc6,
    0x3ff606ff,0x03ffe204,0x2204ffd8,0xff801fff,0x7d40002f,0x88003fff,
    0xeffffffe,0x37ffe000,0xfdffffff,0x07fe01ff,0x7ffffe40,0xffffedce,
    0xfecb9803,0x366fffff,0xffffffff,0xffffffff,0x000bffe3,0x400dff50,
    0x7fdc4ffd,0x2e3ffdc6,0x3ff606ff,0x03ffe204,0x2204ffd8,0xff801fff,
    0x3ea0002f,0x40083fff,0xfeefffe8,0xfb001fff,0xff9dffff,0x7e80ffff,
    0x5dfff100,0x40fffa01,0xfb5100ba,0x3fff23ff,0x99999999,0x3a099999,
    0x440003ff,0xf8801fff,0x37fdc1ff,0xff71ffee,0x027fec0d,0x6c01fff1,
    0x3fee05ff,0x2fff801f,0xffff5000,0x301ff505,0x361bffff,0xb802ffff,
    0xf9bfffff,0x4405ffff,0x3fff5001,0x41fffcc0,0xfe804ff9,0x0bfff54f,
    0x1fffc800,0xfe839500,0x7ff400ff,0x5c6ffb87,0x37fdc7ff,0x4409ffb0,
    0x3ee00fff,0x3fee21ff,0xff802fff,0xffa8002f,0xaaaaadff,0x7fd42ffe,
    0xfffd86ff,0x3fe600bf,0xfffd0fff,0x5400007f,0x2a20afff,0x41cffffe,
    0x441dfffb,0x364fffb9,0x980adfff,0x7fcc5edb,0xd9880bff,0x7ffdc6ff,
    0x7ff540bf,0x7ffe444f,0xb83ffee0,0x74c40fff,0xfa809dff,0x3fe602ff,
    0xfffffeff,0xa986ffff,0xaaacfffa,0x3ffe201a,0xffffffff,0x3ffa3fff,
    0x3ee4ffff,0x00ffffff,0xfb97fffe,0x00001fff,0x3bffffe2,0xffffffff,
    0x3ffee6ff,0xfffeefff,0x3fe21fff,0xffefffff,0x542fffff,0xeeffffff,
    0x86ffffff,0xeffffffb,0x4c4fffff,0x74ffffff,0x3ee9ffff,0x3ff64fff,
    0x7f44ffff,0x3206ffff,0xffffffff,0x20ffffff,0xfffffffe,0x80ffffff,
    0xfffffff8,0x3fffffff,0xfffffff1,0x7ffffecd,0x3ff602ff,0x1fffe22f,
    0x3fea0000,0xffffffff,0x50ffffff,0xffffffff,0x305fffff,0xfffffffd,
    0x01ffffff,0xfffffff9,0x03ffffff,0x3fffffea,0xfb84ffff,0xf76fffff,
    0x3feedfff,0x3fffe6ff,0x3fe27fff,0x200fffff,0xdffffffc,0x223efffb,
    0xffffffff,0x81ffffff,0xfffffff8,0x3fffffff,0x37ffffb2,0x3ffff662,
    0x3ffdc05f,0x00037fe4,0xffffea80,0xffffbdff,0x7fe7ec3e,0x0cffffff,
    0x7ffffdc0,0x00beffff,0x3fffff66,0x400befff,0xffffffd9,0xfffb102d,
    0x3ffee5bf,0x5dfff72e,0x77ffff5c,0x77fff5c3,0x13573003,0x7fff5c00,
    0xefffffff,0x00000004,0x00000000,0x54c00000,0x40000aac,0x009abba9,
    0x4d5dd440,0xba988000,0x10001aab,0x00000375,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x76cc0000,
    0x221deeee,0x2deeeeec,0x00000000,0x2aaaaa60,0xaaaaaaaa,0x266620aa,
    0x00266620,0x22222000,0x88888888,0x99999880,0x99999999,0x00199999,
    0x00000000,0x00000000,0x00000000,0xffffffe8,0x3ffff66f,0x4c00ffff,
    0x2e0001ff,0xfffff004,0xffffffff,0x321fffff,0x3ff23fff,0x0ceec83f,
    0x3ffffa00,0xffffffff,0x7fffff47,0xffffffff,0xffffffff,0x00000000,
    0x00000000,0x00000000,0x3fff6000,0x3ea4ffff,0x07ffffff,0x0004ffb8,
    0xf9805ff5,0xffffffff,0xffffffff,0x45fff52f,0x3a62fffa,0xb81fffff,
    0x3ffffa2e,0xffffffff,0x3ffffe67,0xffffffff,0xffffffff,0x0000003f,
    0x00000000,0x00000000,0x7dcc0000,0xfca82dff,0xc800acff,0xf98005ff,
    0x76401fff,0xffffffff,0x4effffff,0xf987ffe6,0xfffd11ff,0x7e47ffff,
    0x3ffffa7f,0xffffffff,0x7ffffe47,0xffffffff,0xdfffffff,0x00000000,
    0x00000000,0x00000000,0xdffb0000,0x003ffec0,0x10017ff2,0x01fffffd,
    0x7c400000,0x3ffe20ff,0xf9bfffb0,0xfff99fff,0x2200000b,0x88888888,
    0x88888888,0x00000000,0x00000000,0x00000000,0xff980000,0x3fff982f,
    0x322fbf60,0x5fdb8dff,0x3fffffa0,0x000000ef,0x3fe1ffe0,0xfa93ffa7,
    0x1fffffff,0x00000000,0x00000000,0x00000000,0x00000000,0xfe800000,
    0x07ffd86f,0x3fffffe2,0xffffffff,0xcdfffc81,0x00005fff,0x3a1bfa00,
    0x2213666f,0x01fffffe,0x00000000,0x00000000,0x00000000,0x00000000,
    0xff500000,0x1fffcc5f,0x3fffffa0,0x6fffffff,0x366fffb8,0xffc84fff,
    0xffffffff,0x0dffffff,0x17f617f6,0x017dd700,0x00000000,0x00000000,
    0x00000000,0x00000000,0xfe800000,0x03fff66f,0x3ffff6a0,0xa82dffff,
    0x3a20ffff,0x3fe62fff,0xffffffff,0xffffffff,0x3f213f22,0x00000004,
    0x00000000,0x00000000,0x00000000,0x00000000,0x7ffd4000,0x004fff9a,
    0x7fffff44,0x07fffa00,0xe83fffe2,0xffffffff,0xffffffff,0x2207a20f,
    0x0000001e,0x00000000,0x00000000,0x00000000,0x00000000,0xffe80000,
    0x000fffde,0x7fffffe4,0x05fff104,0x220fffcc,0x99999999,0x01999999,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x3ea00000,
    0x004fffff,0x7ef7ffcc,0x05d702ff,0x00009d50,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x80000000,0x00fffffe,0x447fff40,
    0x00006fff,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x3fee0000,0xff8004ff,0x03ffea2f,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x80000000,0x8000fffe,
    0x02da83da,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,
};

static signed short stb__courier_bold_38_usascii_x[95]={ 0,7,4,1,2,2,3,7,8,3,2,1,6,3,
7,2,2,2,1,2,2,2,3,2,2,3,7,6,-1,0,1,3,2,-1,0,1,0,0,1,1,0,2,1,0,
1,-1,-1,0,1,0,0,2,1,0,-1,-1,0,0,2,8,2,4,2,-2,6,1,-1,1,1,1,2,1,0,2,
2,1,2,-1,0,1,-1,1,1,2,2,0,0,-1,0,0,2,5,8,5,2, };
static signed short stb__courier_bold_38_usascii_y[95]={ 27,5,6,3,3,5,8,6,5,5,5,7,22,15,
23,3,5,5,5,5,5,5,5,5,5,5,12,12,7,12,7,6,5,7,7,6,7,7,7,6,7,7,7,7,
7,7,7,6,7,6,7,6,7,7,7,7,7,7,7,5,3,5,4,33,4,11,5,11,5,11,5,11,5,5,
5,5,5,11,11,11,11,11,11,11,6,12,12,12,12,12,12,5,5,5,13, };
static unsigned short stb__courier_bold_38_usascii_w[95]={ 0,6,12,18,16,16,16,6,9,9,16,18,8,15,
6,16,16,16,17,16,16,16,16,16,16,16,6,9,20,20,20,15,15,22,20,18,19,19,19,19,20,16,20,21,
19,22,21,20,19,20,21,17,18,20,22,22,20,20,16,8,16,8,16,24,8,19,21,19,20,18,18,19,20,17,
14,19,17,22,20,18,21,20,19,16,18,20,21,22,20,20,16,10,4,10,17, };
static unsigned short stb__courier_bold_38_usascii_h[95]={ 0,23,10,28,29,23,20,11,28,28,15,20,11,5,
5,28,23,22,22,23,22,23,23,23,23,23,16,19,20,11,20,22,25,20,20,22,20,20,20,22,20,20,21,20,
20,20,20,22,20,26,20,22,20,21,20,20,20,20,20,28,28,28,12,5,7,17,23,17,23,17,22,24,22,22,
30,22,22,16,16,17,24,24,16,17,22,16,15,15,15,23,15,28,28,28,8, };
static unsigned short stb__courier_bold_38_usascii_s[95]={ 251,73,173,60,16,80,167,242,122,132,118,
205,245,204,249,79,56,135,100,18,118,1,97,153,191,114,246,245,224,152,184,
170,172,100,146,186,41,21,1,205,210,193,1,171,151,123,78,79,231,151,22,
152,65,225,84,128,44,107,61,96,105,142,135,220,245,1,131,57,170,38,208,
209,58,227,1,1,21,96,119,77,229,188,161,21,39,140,96,219,198,35,181,
49,44,33,186, };
static unsigned short stb__courier_bold_38_usascii_t[95]={ 1,32,139,1,1,32,101,122,1,1,139,
101,101,139,122,1,32,56,56,32,56,32,32,32,32,32,56,32,101,139,101,
56,1,101,101,56,101,101,101,56,79,79,79,79,79,101,101,56,79,1,79,
56,79,56,79,79,79,79,101,1,1,1,139,139,113,122,32,122,32,122,32,
1,56,32,1,56,56,122,122,122,1,1,122,122,56,122,139,122,122,32,122,
1,1,1,139, };
static unsigned short stb__courier_bold_38_usascii_a[95]={ 322,322,322,322,322,322,322,322,
322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,
322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,
322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,
322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,
322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,
322,322,322,322,322,322,322, };

// Call this function with
//    font: NULL or array length
//    data: NULL or specified size
//    height: STB_FONT_courier_bold_38_usascii_BITMAP_HEIGHT or STB_FONT_courier_bold_38_usascii_BITMAP_HEIGHT_POW2
//    return value: spacing between lines
static void stb_font_courier_bold_38_usascii(stb_fontchar font[STB_FONT_courier_bold_38_usascii_NUM_CHARS],
                unsigned char data[STB_FONT_courier_bold_38_usascii_BITMAP_HEIGHT][STB_FONT_courier_bold_38_usascii_BITMAP_WIDTH],
                int height)
{
    int i,j;
    if (data != 0) {
        unsigned int *bits = stb__courier_bold_38_usascii_pixels;
        unsigned int bitpack = *bits++, numbits = 32;
        for (i=0; i < STB_FONT_courier_bold_38_usascii_BITMAP_WIDTH*height; ++i)
            data[0][i] = 0;  // zero entire bitmap
        for (j=1; j < STB_FONT_courier_bold_38_usascii_BITMAP_HEIGHT-1; ++j) {
            for (i=1; i < STB_FONT_courier_bold_38_usascii_BITMAP_WIDTH-1; ++i) {
                unsigned int value;
                if (numbits==0) bitpack = *bits++, numbits=32;
                value = bitpack & 1;
                bitpack >>= 1, --numbits;
                if (value) {
                    if (numbits < 3) bitpack = *bits++, numbits = 32;
                    data[j][i] = (bitpack & 7) * 0x20 + 0x1f;
                    bitpack >>= 3, numbits -= 3;
                } else {
                    data[j][i] = 0;
                }
            }
        }
    }

    // build font description
    if (font != 0) {
        float recip_width = 1.0f / STB_FONT_courier_bold_38_usascii_BITMAP_WIDTH;
        float recip_height = 1.0f / height;
        for (i=0; i < STB_FONT_courier_bold_38_usascii_NUM_CHARS; ++i) {
            // pad characters so they bilerp from empty space around each character
            font[i].s0 = (stb__courier_bold_38_usascii_s[i]) * recip_width;
            font[i].t0 = (stb__courier_bold_38_usascii_t[i]) * recip_height;
            font[i].s1 = (stb__courier_bold_38_usascii_s[i] + stb__courier_bold_38_usascii_w[i]) * recip_width;
            font[i].t1 = (stb__courier_bold_38_usascii_t[i] + stb__courier_bold_38_usascii_h[i]) * recip_height;
            font[i].x0 = stb__courier_bold_38_usascii_x[i];
            font[i].y0 = stb__courier_bold_38_usascii_y[i];
            font[i].x1 = stb__courier_bold_38_usascii_x[i] + stb__courier_bold_38_usascii_w[i];
            font[i].y1 = stb__courier_bold_38_usascii_y[i] + stb__courier_bold_38_usascii_h[i];
            font[i].advance_int = (stb__courier_bold_38_usascii_a[i]+8)>>4;
            font[i].s0f = (stb__courier_bold_38_usascii_s[i] - 0.5f) * recip_width;
            font[i].t0f = (stb__courier_bold_38_usascii_t[i] - 0.5f) * recip_height;
            font[i].s1f = (stb__courier_bold_38_usascii_s[i] + stb__courier_bold_38_usascii_w[i] + 0.5f) * recip_width;
            font[i].t1f = (stb__courier_bold_38_usascii_t[i] + stb__courier_bold_38_usascii_h[i] + 0.5f) * recip_height;
            font[i].x0f = stb__courier_bold_38_usascii_x[i] - 0.5f;
            font[i].y0f = stb__courier_bold_38_usascii_y[i] - 0.5f;
            font[i].x1f = stb__courier_bold_38_usascii_x[i] + stb__courier_bold_38_usascii_w[i] + 0.5f;
            font[i].y1f = stb__courier_bold_38_usascii_y[i] + stb__courier_bold_38_usascii_h[i] + 0.5f;
            font[i].advance = stb__courier_bold_38_usascii_a[i]/16.0f;
        }
    }
}

#ifndef STB_SOMEFONT_CREATE
#define STB_SOMEFONT_CREATE              stb_font_courier_bold_38_usascii
#define STB_SOMEFONT_BITMAP_WIDTH        STB_FONT_courier_bold_38_usascii_BITMAP_WIDTH
#define STB_SOMEFONT_BITMAP_HEIGHT       STB_FONT_courier_bold_38_usascii_BITMAP_HEIGHT
#define STB_SOMEFONT_BITMAP_HEIGHT_POW2  STB_FONT_courier_bold_38_usascii_BITMAP_HEIGHT_POW2
#define STB_SOMEFONT_FIRST_CHAR          STB_FONT_courier_bold_38_usascii_FIRST_CHAR
#define STB_SOMEFONT_NUM_CHARS           STB_FONT_courier_bold_38_usascii_NUM_CHARS
#define STB_SOMEFONT_LINE_SPACING        STB_FONT_courier_bold_38_usascii_LINE_SPACING
#endif

