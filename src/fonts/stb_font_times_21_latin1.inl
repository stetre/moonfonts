// Font generated by stb_font_inl_generator.c (4/1 bpp)
//
// Following instructions show how to use the only included font, whatever it is, in
// a generic way so you can replace it with any other font by changing the include.
// To use multiple fonts, replace STB_SOMEFONT_* below with STB_FONT_times_21_latin1_*,
// and separately install each font. Note that the CREATE function call has a
// totally different name; it's just 'stb_font_times_21_latin1'.
//
/* // Example usage:

static stb_fontchar fontdata[STB_SOMEFONT_NUM_CHARS];

static void init(void)
{
    // optionally replace both STB_SOMEFONT_BITMAP_HEIGHT with STB_SOMEFONT_BITMAP_HEIGHT_POW2
    static unsigned char fontpixels[STB_SOMEFONT_BITMAP_HEIGHT][STB_SOMEFONT_BITMAP_WIDTH];
    STB_SOMEFONT_CREATE(fontdata, fontpixels, STB_SOMEFONT_BITMAP_HEIGHT);
    ... create texture ...
    // for best results rendering 1:1 pixels texels, use nearest-neighbor sampling
    // if allowed to scale up, use bilerp
}

// This function positions characters on integer coordinates, and assumes 1:1 texels to pixels
// Appropriate if nearest-neighbor sampling is used
static void draw_string_integer(int x, int y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0, cd->t0); glVertex2i(x + cd->x0, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t0); glVertex2i(x + cd->x1, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t1); glVertex2i(x + cd->x1, y + cd->y1);
        glTexCoord2f(cd->s0, cd->t1); glVertex2i(x + cd->x0, y + cd->y1);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance_int;
    }
    glEnd();
}

// This function positions characters on float coordinates, and doesn't require 1:1 texels to pixels
// Appropriate if bilinear filtering is used
static void draw_string_float(float x, float y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0f, cd->t0f); glVertex2f(x + cd->x0f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t0f); glVertex2f(x + cd->x1f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t1f); glVertex2f(x + cd->x1f, y + cd->y1f);
        glTexCoord2f(cd->s0f, cd->t1f); glVertex2f(x + cd->x0f, y + cd->y1f);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance;
    }
    glEnd();
}
*/

#ifndef STB_FONTCHAR__TYPEDEF
#define STB_FONTCHAR__TYPEDEF
typedef struct
{
    // coordinates if using integer positioning
    float s0,t0,s1,t1;
    signed short x0,y0,x1,y1;
    int   advance_int;
    // coordinates if using floating positioning
    float s0f,t0f,s1f,t1f;
    float x0f,y0f,x1f,y1f;
    float advance;
} stb_fontchar;
#endif

#define STB_FONT_times_21_latin1_BITMAP_WIDTH         256
#define STB_FONT_times_21_latin1_BITMAP_HEIGHT        124
#define STB_FONT_times_21_latin1_BITMAP_HEIGHT_POW2   128

#define STB_FONT_times_21_latin1_FIRST_CHAR            32
#define STB_FONT_times_21_latin1_NUM_CHARS            224

#define STB_FONT_times_21_latin1_LINE_SPACING          14

static unsigned int stb__times_21_latin1_pixels[]={
    0x10000400,0x00020004,0x26000200,0x182ccccb,0x16440026,0x00072600,
    0x26000f22,0x065c002c,0x5000f200,0x0d54c03d,0x100b336a,0x3c880059,
    0x66441000,0x2a29804d,0xb814c07d,0xbba80371,0x5100bbba,0x883f8803,
    0x5fffa21a,0xf8afb829,0x001d7004,0xbb0009b0,0x06c8003f,0x002f74c0,
    0x4d8003e6,0x2e3c5220,0x001ae007,0x30007f72,0x43657205,0x403ec43a,
    0x0371b849,0x00c80726,0xd03900b2,0x26ffffb0,0x0370b882,0x44000360,
    0x599cc005,0x20006c00,0xb800390c,0x77016003,0x400f707c,0x99cc000d,
    0xc8064005,0x90598d95,0x370ae00f,0x4016606e,0x000b500b,0xfffff0b5,
    0x300000a6,0x00088000,0x0c001102,0x00302200,0x20020030,0x00f700eb,
    0x2204000c,0x5c812000,0x03e40ba0,0x1b8dc1f0,0x070006cc,0x1b2001ee,
    0x14dffffe,0x55445555,0x83999950,0x9951ccca,0xccca8399,0x17b99301,
    0x17b99300,0x83999950,0x9301ccca,0x555017b9,0xf1055445,0x400f701d,
    0x0170000b,0xc813ae20,0x3207a825,0x2ec05957,0x01d06e37,0x81cb5777,
    0x70ae207c,0x2ffffb0f,0x3207f429,0xa8077d43,0x8077d40e,0x0dd880ea,
    0x6ec40fa6,0x3ea0fa60,0x101d500e,0x41f4c1bb,0x641e40fe,0x003dc0ef,
    0x0fa0007d,0x17f232e0,0x1b638ae4,0x5fedafc8,0x1b8dcf70,0x7c476126,
    0x41b202a4,0x43d43fc8,0x8537ffd8,0x7c42c2f9,0x3e216205,0x36c16205,
    0x06d83f98,0x05f887f3,0x9836c162,0x1617cc3f,0xf7077452,0x001bea00,
    0x1f301bea,0x5720f991,0xfc817e39,0x3ee03f62,0x2b86a370,0x545f3264,
    0x1fc06980,0x3698812a,0x824cdb05,0x7c12205f,0x3ee12205,0xfb83f602,
    0xbf03f602,0x17dc2440,0x26d81fb0,0xbd11cc49,0xfcd803dc,0x17e6c002,
    0x9006ad90,0x027c52ab,0xa83fa8f9,0x8360372f,0x071ea0fb,0x447f015c,
    0x0534800b,0x7c0323f5,0x2fc12205,0x80ff0910,0x501fe4fa,0x2205f89f,
    0x7d407f84,0x40c8fd44,0x0f73cc5b,0x00bf1930,0xb02fc64c,0x5d72012b,
    0x3e409f15,0xb9fcc2fc,0x6c3e8d01,0x412a0245,0xa400b33f,0x0b1bd029,
    0x209102fc,0xf112205f,0xf15fa80f,0x7c5fa80f,0xff112205,0xde85fa80,
    0x2c3f9858,0x363900f7,0x3639000f,0x871d900f,0x7cd75c80,0x13a1f204,
    0x680dcbea,0x23f987e2,0xf806e039,0x52003223,0x05bf5029,0x209102fc,
    0xf312205f,0xf36f980d,0x7c6f980d,0xdf312205,0xfa86f980,0x2a9f702d,
    0x4b101ee1,0x258804f9,0x1df704f9,0x4f95c80c,0xf11f205e,0x46e3f707,
    0x87d4361a,0x40911fb8,0x2a1fc059,0x40534804,0x102fc07e,0x48817e09,
    0x3e6037cc,0xf980df36,0x89102fc6,0x37cc06f9,0x6fdc07e8,0x0ae03dc1,
    0xe85700fd,0x737ff107,0x87ed7205,0xa83f206c,0x46e1f706,0x6fc4ae1b,
    0x0c99f9ab,0x3f80d905,0x29a403d4,0x0bf00ee0,0x205f824c,0x5407f849,
    0xf501fe4f,0x12605f89,0x09f501fe,0x13ea00ee,0xccce80f7,0x67402fdc,
    0x502fdccc,0xae409fff,0x201f50fe,0x00bbbdfc,0x21b8dc9b,0xcb872a49,
    0x01f20a61,0x4807b87f,0x20064053,0x7c0ea06f,0x3f60ea06,0xfd8bee01,
    0xdf0bee01,0x0fec1d40,0x03205f70,0x81ee3d40,0x206f883a,0x906f883a,
    0x32b90011,0x37c816c6,0x370fc401,0x8003906e,0x3f80f704,0x29a40364,
    0x1fb00b10,0x07ec0b20,0x04f882c8,0x409f117a,0x900fd85e,0x7409f105,
    0x3d80b105,0x06c0f71a,0x01b01fc8,0x801207f2,0x6416205c,0x1b877007,
    0x20039037,0xf80b500c,0x9a402cc2,0x00373622,0x816a13e2,0x205a84f8,
    0x80ec82fb,0x80ec82fb,0x205a84f8,0x20ec82fb,0x5400dcd8,0x507b8713,
    0x5437cc0b,0x551be605,0x2602e400,0x49807c83,0x320371b8,0x00cb980a,
    0xd1191072,0x14d201a0,0x4c003df3,0x804dcced,0x04dcced9,0x4dbbce98,
    0x6dde74c0,0x6676cc04,0xbce9804d,0x1ef984db,0xd5035300,0x0ffaa7dd,
    0x5477ff66,0xffd983fe,0xdd30051d,0x5451009d,0x05300bfe,0x7300dc6e,
    0x403bb979,0xaef980a8,0x00006a00,0x0004c000,0x13000098,0x00013000,
    0x02600013,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x64400000,0x336a2003,0x032a289b,0x00a1bd50,0x00f20079,
    0x34a8032e,0x23b1001b,0xa802803c,0x3b101b34,0x03c880b6,0x0286f540,
    0x40366950,0x86f5404a,0x7bb93002,0x000f2001,0x3220012e,0x03fb9002,
    0x7e4c5d90,0x5700fa23,0x7c405bfd,0x401f9801,0x5f604eea,0x3f9801fb,
    0xbceb80bf,0x3f51f900,0x09f15f50,0x2e002aa4,0xb002efea,0x7f407eaf,
    0x37faae00,0x89f6c402,0x0f9803fa,0x0007cc00,0x4e6003ae,0x807dc059,
    0x8202c44d,0x8015c019,0x3b0c802b,0x04001040,0x464f4c01,0x2008207c,
    0x0aa90020,0x00066080,0x01fb0041,0xdd003304,0x2a00fea0,0x003a8003,
    0x4408006c,0x4407f500,0x664c0184,0x800600bd,0x30180801,0x95017b99,
    0xcca83999,0x2692791c,0xccccccc9,0x6665cc4c,0x0013a602,0x0b80005c,
    0x99713ec0,0x82f32a03,0x03f602fb,0x00c00060,0x99930060,0xb0999999,
    0x9730803f,0x0dd88599,0x99730fa6,0x33332a59,0x986665c1,0x6c42cccb,
    0x2a0fa60d,0x41d500ef,0x7fc1495e,0x80e99999,0x03e801fe,0x20007d00,
    0x5436403e,0xf0d500ef,0x404fc80f,0x6664c00b,0x4c4ccccc,0xcccccccc,
    0x3333ff04,0x007f81d3,0x06d81fe8,0x83fd07f3,0x1bd01ffa,0x0db03fd0,
    0x0bf10fe6,0x12ff22c4,0x202a0fd0,0x37d400fd,0x0037d400,0x1ae037d4,
    0x45982fec,0x2fd407f8,0x7fc00fa0,0x80e99999,0xe99999ff,0x41507e80,
    0xfd8006f9,0xfb017dc0,0xfc80fd81,0xfb00e883,0x3602fb81,0x9102fc0f,
    0x200efe88,0x03ec007e,0x20017e6c,0x6c002fcd,0x416a02fc,0x44884fcd,
    0x37cc06f9,0x3a00df50,0x0fd01507,0x401fa02a,0x7d8006f9,0x27d407f8,
    0x40fe81f6,0x3e1f602c,0x3e27d407,0x36212205,0x50fd01ef,0x32603ec0,
    0x326005f8,0x326005f8,0x412605f8,0x44887fb5,0x37cc06f8,0xd005f9b0,
    0x007e800f,0x7c4143f4,0x23ec000f,0x2fd407f8,0x25f981f6,0x223ec049,
    0x22fd407f,0xd812205f,0x447e82ff,0x3901f605,0x8e4003f6,0x239000fd,
    0x207100fd,0x2443fd15,0x17ea03fc,0x402fc64c,0x1fa0287e,0x2c47e80a,
    0x6c001fd8,0x26037cc7,0x3203ec6f,0x7d801b2f,0x3e6037cc,0x09102fc6,
    0x3a07f4e4,0x207eeeef,0xf996207d,0x3e658804,0x3e658804,0xf32c0604,
    0x3f61221f,0x640bee00,0x7e801fb1,0x88fd02c4,0x3bbbfa05,0x40df307e,
    0x3e63ec28,0x3637cc06,0x167fc407,0x1be63ec0,0x05f8df30,0x5f348122,
    0x360487e8,0x0fd0ae07,0x807e8570,0x4003f42b,0x848b7d45,0x41ba04f8,
    0xd013e658,0x40fddddf,0x07eeeefe,0xfa8121fa,0x3ec1c40d,0x13ea03fc,
    0x0df500fb,0x01fe1f60,0x205f89f5,0x0fc92449,0x7d8061fa,0x373333a0,
    0x6667402f,0x67402fdc,0xa82fdccc,0x1bf70b04,0x3207ea09,0x0fd0ae04,
    0x3a0487e8,0x21fa0487,0x66ff4c01,0xfb0fb04c,0x3617dc03,0x004f8807,
    0x403fb0fb,0x5037c2fb,0x1aa90f87,0x0fb001fa,0x81be20ea,0x206f883a,
    0xd86f883a,0x33f60b07,0x2eb36604,0x6667402d,0x1fa02fdc,0x0187e806,
    0xd88001fa,0x7c43ec00,0x1f617a04,0x6c013e20,0x3a04f887,0x5900fd85,
    0x0bbdcfd8,0x361207e8,0x3f201b07,0x3f201b01,0x3f201b01,0x220b0081,
    0xffa804fe,0x7c41d404,0xd001fa06,0x207e800f,0x20274c04,0x905f707d,
    0x100fb01d,0x41f6009f,0x80ec82fb,0x205a84f8,0xa83f4059,0x2d40fe84,
    0x0b50df30,0x02d437cc,0x07400df3,0xd3004f88,0xc806c07f,0x240fd01f,
    0xfd0903f4,0x0f6012a0,0x3a601fd0,0x3a04dbbc,0x02fcc00f,0x9d300fe8,
    0xd9809b77,0x1804dcce,0x99dff730,0x7e4c3fdb,0x07fd52df,0x2a3bffb3,
    0xffd983fe,0x307fd51d,0x4c03bffb,0x09302dfc,0x540bea80,0x741be605,
    0x0fd09507,0xeffb992a,0x401fedcc,0x3ff2602b,0x3004c02d,0x2a05bff9,
    0x9300bffd,0x09805bff,0x00009800,0x00000000,0x00000000,0x00100000,
    0x7f546e60,0x1dffd983,0xb99dff73,0x7fdcc3fd,0x01fedcce,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00400000,0x04000008,0x00800008,0xcc980100,0x360170cd,0x8088ea05,
    0x1ed803d8,0x6e4026c0,0x2607d500,0x04c30310,0x88061b88,0x2289bcda,
    0x10e603db,0x2214c057,0x550e202b,0x80554455,0x32603cd8,0x13a80cdc,
    0xb5064019,0x2c36400d,0x203f6600,0x33ea0dd8,0x2603f103,0x2a04bffc,
    0x0366d406,0x03f003e6,0x3e07efa2,0x9fcc1fb6,0x5bfb905f,0xc98bb207,
    0x03d1533f,0x407b1036,0x3603d885,0x1e40fe80,0x3e812350,0x0275413a,
    0x801b622c,0x2002a86c,0x06e80fc8,0x806e07f5,0xc805d711,0x402a9200,
    0xb80aa02a,0x26550910,0x81b85c43,0x2e0bb308,0x0b09b00f,0xc81e40ae,
    0x0ea07901,0x101617cc,0x87e60979,0x06bcb87b,0x00364154,0x2e002440,
    0x4417dc0f,0x00080fdd,0x04001000,0x08010040,0x00000000,0x92203fa8,
    0x02441fe8,0x64093079,0x36c05883,0x40310093,0x861b20fa,0x3203204d,
    0x0580c006,0x1fe07d40,0x2627d46c,0x32e603cb,0x80f2e603,0x64c03cb9,
    0x980b2602,0x40b2602c,0x2a203cb9,0x01fd81cc,0x0362e404,0x640583c8,
    0x7d400c83,0xcb980191,0x3a21f703,0x07f99303,0x1cab6416,0x01540620,
    0x883eef2e,0xbf31c87f,0xb84f8adc,0x2b709f15,0xf15b84f8,0x3f619109,
    0x07ec3220,0x883f6191,0xadc1fb0c,0x2a3b04f8,0x8003fc3f,0x7900aa2a,
    0x21e401b8,0xb1bd0039,0x09f15b80,0x10bf51f7,0x2a1ff25b,0xfdb7d902,
    0x0488120b,0x83fe27d1,0xf31d46f9,0xd0db1f4d,0xb1f436c7,0x436c7d0d,
    0x1d8be21d,0x221d8be2,0x2f88762f,0x4d86d8fa,0x06f987e4,0x588abaa0,
    0x4c336228,0x19b10224,0xdfa8142c,0x0db1f402,0x837ea1f7,0x320fe45b,
    0x7e41f900,0x41602541,0xf107e46b,0x97e624cf,0x9821fa60,0x1fa6087e,
    0x7c47e982,0xf14ecccc,0x229d9999,0x14eccccf,0x49d9999f,0x0fe1fa60,
    0x01be67f5,0x0d703600,0x0bd970d8,0xd035c1c8,0x3f4c100f,0x47f307dc,
    0x161fd43e,0x11fcc6c8,0xe82a803f,0x3fe07d44,0x44fa8588,0x9507caca,
    0x2b2a0f95,0xf959507c,0x3e601f98,0x9807e601,0xcaca801f,0x3e21fcc7,
    0x0001ff15,0x81b2a1d4,0x301f862b,0x2e06ca89,0xf9595003,0xafc41f70,
    0x52fc42f9,0x2fc36405,0x889100fb,0x3607d42f,0x2fb80daf,0x5c87c972,
    0x7c9721f2,0xf11f25c8,0x213e2109,0x22109f10,0xc972084f,0x27c2fc47,
    0x220003fb,0x88345c45,0x44581a04,0x0032068b,0xfb87c972,0x83f8af40,
    0x6c80324f,0x3d13e4e8,0x544f98b0,0x80ffc40f,0x7c8be64f,0x98f917cc,
    0x5f31f22f,0x2076c3e4,0x6c703b63,0x81db1c0e,0x43e45f33,0xf317c46e,
    0x1c81440d,0x0d834522,0x88720370,0x01620d14,0xb87c8be6,0x5d8f608f,
    0xc80b17c4,0x89f17cc6,0x3f42a83e,0x0bf203ea,0x2a9f11b2,0x29f108fe,
    0x9f108fea,0x7c423faa,0x5411fd54,0x2a0dacff,0x2a0dacff,0x2a0dacff,
    0xf10dacff,0xb823faa9,0x3ea16a2f,0x3a81c40d,0x21fee64c,0x2605502a,
    0x9fee64c4,0x8800dcd8,0x411fd54f,0x41f2e8fb,0x2a96a2fa,0x916e3e40,
    0x44880d8f,0x1fd88cfb,0x5deece4c,0x55ff903d,0xaaffc85f,0x557fe42f,
    0x557fe42f,0x1dfea82f,0xa81dfea8,0xfea81dfe,0x557fe41d,0xdccfb82f,
    0x99bfd300,0xd1016209,0x99d90588,0x33440589,0x7e4003df,0x3a62faaf,
    0xa81bcb8f,0x0320dccd,0x0597db30,0x40557b71,0x66ffdc44,0x026020cf,
    0x80040020,0x08001000,0x80080080,0x03000200,0x04400980,0x10130a20,
    0x0c415555,0x40000a20,0x01000000,0x00088002,0x11080200,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x2a000000,0x665401cc,0x666440cc,0x2a599951,0x665c3ccc,0x500cca82,
    0x544537bb,0x0c402a20,0x405e9803,0x6e402db8,0x66664c00,0x406ee600,
    0x201bcca8,0x2cccccc8,0xb880de54,0xcca8802c,0xb993001b,0x005c8017,
    0x5dcc03d5,0xa8008199,0x5400e88d,0x707e607f,0xb06fb8bf,0x07a29707,
    0x4bf5117d,0x40be22f8,0x6c03f77e,0xb7b102eb,0x400fc0bf,0x2e05fffd,
    0x882ee00d,0xfffb80ca,0xd87a2fff,0x1e98f442,0x65441770,0x4c1bb100,
    0x007e203e,0xf52e80f6,0x01fc419b,0xe802c8ba,0x3e09300f,0x30d07e86,
    0x0d52dc3f,0xf117c4b5,0x01c4ea05,0x21c12235,0x803a80fc,0x80bb0039,
    0x641aaabb,0xa87c0ec0,0x916e3545,0x2ea2370d,0x6d80ca8a,0x1cc07f30,
    0x47a81220,0x4403904f,0x2a003e3f,0x3203903f,0x220fe41f,0x8fd46d84,
    0x17c4906d,0x100005f1,0x041ea000,0xeb800d80,0x4f6c6a00,0x808921eb,
    0x8d51b25a,0x3517cc3e,0x49ecc36a,0x1fb017dc,0x90020040,0x20006d8f,
    0x2002d8ef,0x2605886f,0x2e27dc4f,0x9fcc5e82,0xf1040dfc,0x2aa17c45,
    0x5550aaa2,0x1dc01554,0x41554555,0xf302eff9,0xd9724807,0x459002a5,
    0xf88b64fa,0x2291fc44,0x7c153886,0x2227d407,0x95101cca,0x743f5039,
    0x37f20003,0x2039fd10,0x2015c2fb,0x163f746e,0x29f113e2,0xf103ffe8,
    0x3ec17c45,0xfb1f61f6,0x47d85980,0xffdb987d,0xbebafc84,0x274b91c0,
    0x5c0f8071,0x46f81cdf,0x025ce4f8,0x203fc4e2,0xfa8ec5fa,0x07f51d83,
    0x220975d9,0x1bf6a02b,0x46f880b7,0x931fb806,0x261225f7,0x3225f83f,
    0x17c41eff,0xb8f705f1,0x03dc7b87,0x3dc1bff9,0x3fd101ee,0x4ff51ee8,
    0x0f73b219,0xf905a812,0x4c1f901d,0x00fa332f,0x26037cd2,0x1f91366f,
    0x903f226c,0x1fe44033,0x6c9f95c8,0x931fc800,0x26e9f300,0xf10374f8,
    0xe984f889,0x557e23ff,0x23dc1afd,0x3dc7b87b,0x7b8ff220,0x44e803dc,
    0x288fd44f,0x0e0be372,0xfac982c8,0x5dfec41e,0x176510fd,0x2037cce0,
    0xf50fe6f9,0x8fea1fc7,0x10199aeb,0x7c4f707f,0xf3002a9f,0xbf400329,
    0xbd02dfa5,0x3ee03f98,0x29ffd30f,0x2e3dc3fe,0x03dc7b87,0xf71ee5e8,
    0x4f89ee00,0xae4927cc,0xf80660fa,0x0df334c0,0x55237466,0x7f86600f,
    0x3f9a7d40,0x43f9afc4,0x3ffe65f8,0x83f82fff,0x02f7dc5e,0x80167fa0,
    0x2fee4bfb,0x5f51b604,0xc99fdc0e,0x23dc0408,0x3dc7b87b,0x71ee4c80,
    0xbf1a600f,0x4b9247f0,0x85980e5d,0x500fd45c,0x833a485f,0x01fd8719,
    0x42fc4bee,0x9f0bf14f,0x6a99894c,0x437cc3f8,0x2a0045fd,0x3e2002ef,
    0x807fe21f,0x0d87d47b,0x00b71f98,0x70f707dc,0xd803dc1f,0x07b83ee1,
    0x446c8790,0x32e3220f,0x40555911,0x0f85d82c,0x99220fa0,0x88551bcc,
    0xdd17a04f,0x11ba2f88,0x8381a25f,0x50bfe83f,0x0735bfdb,0xdb000ff0,
    0x1e880fb0,0x640dd8ba,0xfa801b25,0xfa81fb32,0x0a81fb32,0x265f51a6,
    0xb515c0fd,0x42d45f10,0xf00aa048,0x0598f301,0x204880f6,0x905f702a,
    0x2a2fb81d,0x4b517dc5,0xca88adf9,0xfd983f80,0x3bff23ff,0x8004b800,
    0x8804a83a,0x76643cbd,0x1720cdbc,0xf75ffd00,0xbaffe819,0xbbff10cf,
    0x2ebffa09,0x37ff60cf,0x36ef6603,0x95797100,0x20598059,0x4c0babca,
    0xcb8802ba,0x4c02ccab,0x204dbbce,0xb80dccfb,0x6540dccf,0x9f00cefe,
    0x00880c40,0x20000040,0x10402000,0x20800003,0x44010400,0x88020800,
    0x10002000,0x40044001,0x88000600,0x00130000,0x0001800c,0x002efc88,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x26000000,0x2ea00cda,0x017a601c,0x88073200,0x4402e403,
    0x2a298061,0x073332a1,0x2e239995,0x799501cc,0xa8800081,0x1028bdcc,
    0xcacca800,0x0bcccb80,0x59539808,0x97002e00,0x98e65479,0x9932cccb,
    0x30157999,0x2e239999,0xd86e0bcc,0x1f34a80f,0x880faf60,0xe9ec3fcb,
    0xe8801b02,0x1fbbf402,0x2a064370,0x01d500ef,0x1aa01df5,0x5c001fb3,
    0x317f261f,0x7b1001fb,0x2e01fd11,0x21f5c45f,0x5fedaffb,0xfe803e80,
    0x0ff416c0,0x32a27fe2,0x07fc40cf,0x987e0bea,0x0361f83f,0x440644a6,
    0x3e21f70e,0x00370991,0x22750122,0xf10b1603,0xfb02c40b,0xf911660b,
    0x403ea001,0x007e4469,0x403ee2e4,0x1fcc43fa,0x01fb17e4,0x7cc037d4,
    0x07ec1622,0x41fdc374,0xf80f446e,0x1f313e23,0xf5010100,0x35c3e608,
    0x00100126,0x7c162c00,0xcd812205,0xfb84884f,0x404f9800,0x4400fb84,
    0x9807d43f,0xf907f03f,0x33603fa8,0x2e6e802f,0x1ba0fb01,0x89ba1be2,
    0x3f30201d,0xa8800fa8,0x40d701cc,0x058b91f8,0x05551554,0x950732a2,
    0x19d999d9,0x812205f8,0x84887fb5,0x2fd800fb,0x007dc040,0x01f507e6,
    0x41fc0fe6,0x9305f87c,0x3f700bf1,0xdd07d816,0x2dd0bf10,0x26c001e8,
    0x8ec00fd4,0x3f6a23fa,0x8ba5d02a,0x6c7d801c,0x8fea3b07,0xbb99bb98,
    0x12205f81,0x443fd158,0xbc98fb84,0x8000ff80,0x455510fb,0x807d43f9,
    0x907f03f9,0x47209d0f,0x67c400fd,0x741f603a,0xee82fd86,0x744001e8,
    0x3bbfba20,0x0fc89b04,0x44067f66,0x011262bc,0x9b0f71ee,0x90e40fc8,
    0x48817e01,0x10ff9960,0xf795f709,0x7106f989,0x87dc19dd,0x545f82e8,
    0x207f300f,0x7c47c83f,0x13e65883,0x4efecccc,0xe83ec099,0x01ffecdf,
    0x8003fdfd,0x803f301c,0x321fd43f,0x744b0006,0x2e3dc0da,0x1fd43f87,
    0x02fc0b16,0x3ea2c091,0x43f70916,0x203fcc7c,0x447dc0fe,0x319f900d,
    0x0fe601fb,0x507e41fc,0x0fd0ae0d,0x2b7eeaaa,0xe83ec1aa,0x741ff4c6,
    0x2001ffae,0x9807e203,0x322fc43f,0x3a1c8006,0x5c7b8b94,0x3e21fcc7,
    0xfdddfd75,0x205f81dd,0x3ee16049,0x20fb848d,0x00ffc47b,0x1b3f70fb,
    0x55ffe440,0x207f300f,0xbbdfc83f,0x9999d00b,0x07f005fb,0x20dd07d8,
    0xfab740fe,0x2028801f,0x17e200f8,0x800d913e,0x47b97c3a,0x3e23dc7b,
    0x99224f85,0x3a81be03,0x267ec160,0x81f707dc,0x21f603fd,0x8800fdfb,
    0x3e601f50,0x2f907f02,0x220ea009,0xfeeed86f,0x3ec2eeee,0x87f906e8,
    0x007fea6e,0x4286b980,0x3217c46e,0xf1162006,0x41f71ea5,0x7c46e87b,
    0x202b8aa2,0x405900fd,0x709fd105,0x2207dc1f,0x70fb00ff,0x4001dd1f,
    0x03f300fa,0x401f20fe,0x803f900d,0xe83ec03f,0x6e83fd06,0x9700ffd4,
    0x59df7530,0x2a2fb879,0x32006c85,0xa8b93e80,0xb81fb32f,0x43916a2f,
    0x213e200c,0x8807405a,0x2e0fb84f,0xb06f980f,0xbf31f70f,0xf707dc00,
    0x41fc0d51,0x205a807c,0x13e206f9,0x8df01fd0,0x87f85fb8,0x0fd02ffa,
    0x37fee973,0x0dccfb80,0x075007d8,0x3a0ba36a,0x40cfbaff,0x2c0dccfb,
    0x33b66016,0x3f2604dc,0xf709302d,0xd8807dc1,0x82ddbade,0x009f50fb,
    0x3e619fb3,0x89f101cd,0xd500bfea,0xbffb307f,0x83efd983,0x932dffc9,
    0x7bddbdff,0x21cffc98,0x082dfffc,0x03001010,0x00b3fee2,0x200a9807,
    0x08060020,0x00260004,0xfe981000,0x00cfea8c,0xfd500cc4,0x039ff339,
    0xc8802200,0x000002ef,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x33260000,
    0x3332e1cc,0x9999930b,0x33265999,0x101abccc,0x20e88039,0x664c3108,
    0x970003cc,0x99999999,0x402664c1,0xc980ccc8,0x6dc4000b,0xbcccc982,
    0x2207500a,0x9993061b,0x4274c039,0xccccccc9,0x33332a3c,0x986665c1,
    0x710bcccc,0x33261799,0x6c01abcc,0x7c41b705,0x885fb80f,0x5c9999ef,
    0x2e66bfe2,0x01fcc1fe,0xf96e83f6,0x000ffc41,0x2673f720,0x7fc41d99,
    0x4437e402,0x0481f91d,0x81ffdbf3,0x3fc99ff8,0x6e413f66,0xff883adf,
    0x217df400,0xf9999adb,0x80ffd40f,0x3fec40de,0x9ff883f8,0xf100efc9,
    0x0dd07d01,0x83740fe6,0x7ec43744,0x3f6e0041,0x741ccaa0,0xfae80007,
    0x6fe81983,0x3617fa20,0x0798be24,0x7c1fdc19,0x13e17ec6,0x3a05d984,
    0x4488d406,0x3207f903,0x100e883f,0x204b85fd,0x302fdc6e,0x0dd04887,
    0x83740fe6,0xff883740,0x1f593000,0x0007e800,0x081fcdcc,0x7701fce8,
    0x201f889f,0x0622affa,0xf51ba1be,0x80004f8b,0x041ccdfe,0x017ea060,
    0x402c81fd,0x80b30ff8,0x203fc46e,0x20dd0040,0x98dd03f9,0x3ee06e80,
    0x03eab002,0x01fa0571,0x10fe6b00,0x417e3a01,0x0fcc4f8e,0x0033f910,
    0xfa8dd0bb,0x9a4c27c4,0x22dd00bc,0x015c45fb,0x26007fc4,0x5401265f,
    0x7400d8df,0xb8837cc6,0x37415c42,0x8dd03f98,0x2a06e80c,0xf51c804f,
    0xe81fe441,0x4cea0007,0xb407223f,0x7c5d41fd,0x70427c44,0x20be200f,
    0x3e0fec6e,0x6757f544,0xfc8dd05f,0xb007f913,0x4bf2005f,0x3bf6000d,
    0x7ec6e801,0x223fc882,0xeefe83fc,0xd03feeee,0x5c1fdddf,0x23eeeffe,
    0x51cc06f8,0xd03f881f,0xf32c000f,0x203fdddd,0x88e89f36,0x1446d84f,
    0x416e00f7,0x83ed9afe,0x322fb84f,0x5fa8dd07,0x9f500fe2,0x167fc400,
    0x003fe200,0x033f6ffa,0x1fc43f88,0x03f98374,0x6e80b8dd,0x0ecdbe60,
    0xf80fa8b1,0x2000fd03,0x43fdccea,0x87ecd01b,0xf709f149,0x07b8b55f,
    0x27ba01b0,0x2e13e01a,0x37407dc7,0x407f13ee,0x54000ef8,0xfea8006f,
    0xfc9ee805,0x3f83f803,0x07f306e8,0xdd0111ba,0x6fca7d40,0x3f733372,
    0x7e81fc3c,0x5333b000,0x4d00887f,0x3e21b4f9,0x83bfd504,0x201c807b,
    0x709f006e,0x6e80fa8f,0x07f07fa2,0x44000fec,0xdac4004f,0xfb37402f,
    0x3f83f803,0x07f306e8,0x037401ba,0x952c43fb,0x879fb999,0x040fd03f,
    0x01fcc2b8,0x2cff4681,0x82c409f1,0x2015407b,0x709f006e,0xfe80fa8f,
    0x3f81efcb,0x00209f70,0x6c4009f1,0x7401ff10,0x7f01be26,0x20dd07f0,
    0x00dd03f9,0x227d41ba,0x407d4038,0x240fd03f,0x81fcc2c4,0x3fea340b,
    0xf9817e21,0xa819fa83,0x80374083,0x7d47b84f,0x0099ee80,0x81be60fe,
    0x0027c404,0x205fa83b,0xf027d46e,0x0ff07f07,0x03fc13ea,0x44fb86f8,
    0x80fa8029,0x701fd04f,0x7f507909,0xbd0f0b30,0x17406f88,0x3aa1ff44,
    0x7c2caaaa,0xf709f007,0x3fc07dc1,0x1fe84f80,0x5f980b50,0x3fa09900,
    0x7f90ff04,0x993e13e0,0x3ae1cffc,0xff930bef,0x3ff26039,0x001cddde,
    0xfc883ea0,0x3bff262e,0x221ffeee,0x3fae1dfc,0x23fedcdf,0x8ae1cfc9,
    0x440bffda,0x7fd4001b,0x3267ffff,0xf7301cff,0x33faa15d,0xb30cfea8,
    0x322039ff,0x3bff22ef,0x04ffeeee,0x402fff6a,0x7541dfea,0xff931dff,
    0x12dfe839,0x3f225df9,0x0000002e,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x666664c0,0x66444ccc,
    0x4ccccccc,0x2f333326,0x3333301a,0x40153333,0x02000000,0x300f2e60,
    0x0b260179,0x2a214188,0x0015c1cc,0x5551e654,0x2aa61554,0x5542aa22,
    0x5455551a,0x86a2151a,0xc86e2003,0xc99e5d41,0x20a0c40c,0xaa88aaa9,
    0x9999ff80,0x26baa0e9,0x47b99df9,0xeb99aff8,0x04400c1f,0x99500488,
    0xb80b0123,0x3b109f15,0xb0c883f2,0x0e41b01f,0x711fd476,0x2390017d,
    0x1f63ec78,0x445907f6,0xb51be27e,0x6e5f66c4,0x2dc9803c,0xf15c93e6,
    0x1b0bea7d,0xf2fdc0e4,0x0541fa03,0x0e2fc415,0x8bf621ba,0x91008801,
    0x3be65b00,0x8fa02c00,0x3e24d86d,0x42f88762,0x89b16e4c,0x0cda80fc,
    0x3dc487e0,0xb0fe61ee,0x07dc1f50,0x2c43c819,0x040336a0,0x2747e8fe,
    0x407443a6,0x3a02b9fc,0x5f881007,0xf8837404,0x0110030f,0xd8b90122,
    0x8202c00f,0x00fc47e9,0x9d9999f1,0x41f987d4,0x301fd43f,0x05fd03bb,
    0x360f71ee,0x71fc0a66,0x982c247f,0x005edc42,0xccfe9820,0x325d85dc,
    0x404ee886,0xf880287e,0x2e06e805,0x0110032f,0x5c7f0122,0x402c03fa,
    0x7cc7caca,0x8807e601,0xf98bf14f,0x4402fc43,0x3bfa20ec,0x41ee3dc1,
    0x364091fa,0x730aadb9,0x005f52c0,0x06ebd980,0x13e27f50,0x8fd00fea,
    0x05f88058,0x53ea06e8,0x99708801,0x19999db9,0x5f954fe6,0x33b3332a,
    0xc9721ccc,0x88427c47,0xc9b6084f,0x3e17e20f,0x80ee4c04,0x71ee1ffb,
    0x0246f40f,0x3f5373f3,0x0e60b109,0x700019b5,0xfb803ecb,0xf9903f50,
    0x7777f403,0x05f8807e,0x5be206e8,0x91008801,0xf1d67cc0,0x3e605809,
    0x11b61f22,0x88e076c5,0x8dd1362e,0x19b502f8,0x2e4f88a0,0xfb81ee0f,
    0xf2e7401c,0x3203609b,0x003bb300,0x41fc8be2,0x05d0fc43,0x7e81ba37,
    0x05f88048,0x5be606e8,0x91008801,0x3e24ef80,0x9f102c02,0xfb823faa,
    0x7fd45aaf,0x13440dac,0xb517dc1d,0x400bdb88,0x25f516c7,0xbf100fd9,
    0x7e45f700,0xb317d900,0x2dc8801f,0x24f88ec4,0x41c9befc,0x92612a3c,
    0x30fd04f9,0xd00bf100,0x01a7d40d,0x80910088,0x2016a2fb,0x557fe405,
    0x1dfea82f,0x501dfea8,0x33ee1c45,0x00b6e0dc,0xe84bbef8,0x00cfbaff,
    0x88d10059,0x7b917706,0x2e200b11,0x7e49f31e,0x3fffa8de,0x3ea12244,
    0xd033fea4,0x17e2000f,0x1fd81ba0,0x22011003,0x2fef2204,0x805800dc,
    0x04004000,0x02030000,0x82009800,0x02000800,0x80000002,0x06022020,
    0x3a000000,0x5f881207,0xbf506e80,0xcb84400c,0xcccccccc,0x2000c130,
    0x00000002,0x00000000,0x00000000,0x00000000,0x00000000,0x83f40000,
    0x01be204a,0x513ee1be,0x33333333,0x00000015,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0xfb980000,0x1fedccef,0x017ffb50,
    0xbbbdff93,0x00000039,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x55065526,0x00055555,
    0x64464c00,0x3039710c,0x5002f269,0x2a15c40b,0xda81203d,0x81d5440b,
    0x5d4c0bd9,0x50db8ec0,0x44443629,0x20888888,0x99999998,0x07ae0819,
    0x200110bd,0x366130c1,0x47ffff10,0xaaaaaaaa,0x9999911a,0x00079999,
    0x5fb5fd50,0x27dcccf4,0x3a0b1093,0xbcafea82,0x0eebc9ef,0x3f3abfaa,
    0xb101cc05,0x40f45447,0xd8a982db,0x5c2f8e44,0x4562598b,0x3fa7f10f,
    0x54beafb3,0xcccccccc,0x9999951d,0x24419999,0x6c0f98f6,0xf7142ded,
    0x53e2bea3,0x777711fb,0x5dddddc3,0x22221bbb,0x00088888,0x140bee00,
    0x44950dd1,0x4574a60d,0x7f70fdc3,0x8bee0fcc,0x3c80007c,0x016b1090,
    0x85d51095,0x3a4b9545,0xca444be3,0x54005f36,0x0be60001,0x88260dc9,
    0x3263cdec,0x086e1710,0x00000000,0x00f70000,0x465403f6,0x5667d40d,
    0xf307dc6e,0x1ee17c43,0x6665c1f7,0x20cccccc,0x20f6c43c,0x0640731c,
    0x516174ea,0x3a2d9ae5,0x1f2d46a1,0x8888d400,0x80888888,0x0101041e,
    0x0000004c,0x00000000,0xb807b800,0x807dc02f,0xfa81deb8,0x2f887e60,
    0x003ea3dc,0x96e07900,0x0dc06c49,0x2e1f4dfc,0x58fc4b33,0xd1cc352c,
    0x99509800,0x19999999,0x000006e2,0x00000000,0x00000000,0x27cc07b8,
    0x2612f620,0x543ebced,0xf887e60f,0x03ea3dc2,0x303c8010,0x716206c5,
    0x4e541313,0x40bda83b,0x0c0182b8,0x00000003,0x00000000,0x00000000,
    0x7b800000,0x8831ba20,0x8db8950d,0x07d46a9d,0x217c43f3,0x7007d47b,
    0xa866cc0d,0x5c0a62ad,0x00bddd70,0x00000000,0x00000000,0x00000000,
    0x00000000,0x03ee0000,0xd88e07ec,0x02f82540,0x10fcc1f7,0x2e0fb87f,
    0x0006200f,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x37faa000,0x66677dc1,0x80c0226d,0x9cfe980a,0xfc99dfd9,0x519fd51d,
    0x000019fd,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,
};

static signed short stb__times_21_latin1_x[224]={ 0,2,1,0,1,0,0,0,0,0,1,0,1,0,
1,0,0,2,0,0,0,0,0,0,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,-1,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,-1,1,0,-1,0,0,0,0,0,0,0,
-2,0,0,0,0,0,-1,0,0,0,0,0,0,0,0,0,0,2,1,1,0,2,2,2,2,2,2,2,2,2,
2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,2,1,0,0,0,
1,1,0,0,-1,0,0,0,0,-1,0,0,0,0,2,1,-1,1,1,1,0,0,1,1,0,0,0,0,0,0,
0,0,-1,0,0,0,0,0,0,0,0,0,0,-1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,0,
 };
static signed short stb__times_21_latin1_y[224]={ 16,3,3,3,2,3,3,3,2,2,2,4,14,11,
14,2,3,3,3,3,3,3,3,3,3,3,7,7,5,7,5,3,2,3,3,3,3,3,3,3,3,3,3,3,
3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,19,3,7,2,7,2,7,2,7,2,2,
2,2,2,7,7,7,7,7,7,7,4,7,7,7,7,7,7,2,2,2,9,4,4,4,4,4,4,4,4,4,
4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,16,6,3,3,5,3,
2,3,3,3,3,7,7,11,3,1,3,4,3,3,3,7,3,8,15,3,3,7,3,3,3,6,-1,-1,-1,0,
0,0,3,3,-1,-1,-1,0,-1,-1,-1,0,3,0,-1,-1,-1,0,0,5,3,-1,-1,-1,0,-1,3,2,3,3,
3,3,3,2,7,7,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,6,6,3,3,3,3,3,2,3,
 };
static unsigned short stb__times_21_latin1_w[224]={ 0,3,6,10,8,16,15,3,6,6,8,11,3,6,
3,6,9,6,9,8,9,9,9,9,8,9,3,4,11,11,11,8,18,14,12,12,13,12,10,14,14,6,8,14,
12,17,15,13,10,13,13,9,12,14,14,18,14,14,12,5,6,5,9,11,4,9,10,8,10,8,9,10,10,5,
6,10,5,15,10,9,10,10,7,7,6,10,10,14,10,10,9,6,2,6,11,11,11,11,11,11,11,11,11,11,
11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,3,8,10,10,10,
2,8,6,14,7,9,11,6,14,11,7,11,6,5,4,10,10,3,4,4,6,9,13,13,14,8,14,14,14,14,
14,14,18,12,12,12,12,12,6,6,6,6,13,15,13,13,13,13,13,9,13,14,14,14,14,14,10,9,9,9,
9,9,9,9,13,8,8,8,8,8,5,5,6,6,9,10,9,9,9,9,9,11,10,10,10,10,10,10,10,10,
 };
static unsigned short stb__times_21_latin1_h[224]={ 0,14,6,14,16,14,14,6,19,19,9,11,6,2,
3,15,14,13,13,14,13,14,14,14,14,14,10,13,10,5,10,14,19,13,13,14,13,13,13,14,13,13,14,13,
13,13,14,14,13,17,13,14,13,14,14,14,13,13,13,17,15,17,7,2,4,10,15,10,15,10,14,14,14,14,
19,14,14,9,9,10,14,14,9,10,13,10,10,10,9,14,9,19,19,19,4,12,12,12,12,12,12,12,12,12,
12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,0,15,17,14,10,13,
19,17,3,14,6,10,5,2,14,2,6,11,7,7,4,14,18,3,5,7,6,10,14,14,14,15,17,17,17,16,
16,16,13,17,17,17,17,16,17,17,17,16,13,17,18,18,18,17,17,9,14,18,18,18,17,17,13,15,14,14,
14,14,14,15,10,13,14,14,14,14,13,13,13,13,15,13,14,14,14,14,14,8,11,14,14,14,14,18,19,18,
 };
static unsigned short stb__times_21_latin1_s[224]={ 252,251,136,79,177,41,1,128,1,19,29,
76,132,209,205,31,51,150,129,104,46,124,134,159,169,178,216,41,204,155,136,
1,32,195,228,186,27,1,16,132,1,221,169,241,63,95,105,203,139,17,229,
61,14,90,17,32,214,199,186,201,58,246,88,228,172,88,38,98,65,107,31,
237,121,248,58,147,178,38,54,126,184,158,1,148,122,156,167,178,244,242,9,
65,26,51,182,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,
41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,252,252,237,
10,193,210,29,192,198,188,105,116,143,209,144,216,113,53,98,82,177,71,72,
194,167,77,121,234,228,214,199,49,31,207,222,221,236,206,76,85,46,59,72,
186,98,119,141,199,27,1,167,138,124,105,148,19,76,109,94,152,162,126,168,
11,110,90,120,100,166,1,220,113,130,139,148,157,243,249,179,56,21,157,217,
227,21,176,69,65,65,58,113,93,82,181,8,83, };
static unsigned short stb__times_21_latin1_t[224]={ 17,20,113,70,20,70,55,113,1,1,113,
99,113,113,113,39,55,85,85,55,85,55,55,55,55,55,99,85,99,113,99,
70,1,70,70,39,99,99,85,70,85,70,70,70,85,85,70,55,85,21,85,
55,99,70,55,55,85,85,85,1,39,1,113,113,113,99,39,99,39,99,70,
55,70,55,1,70,70,113,113,99,70,70,113,99,85,99,99,99,99,39,113,
1,1,1,113,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,
99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,17,1,1,
70,99,70,1,1,113,55,113,99,113,113,55,113,113,99,113,113,113,55,1,
113,113,113,113,99,39,39,39,39,21,1,1,20,20,20,85,20,21,21,20,
20,20,20,20,20,85,21,1,1,1,20,20,113,39,1,1,1,20,20,85,
39,39,39,39,39,39,39,99,85,39,39,39,39,85,85,85,85,39,85,55,
55,70,39,70,113,99,70,55,55,55,1,1,1, };
static unsigned short stb__times_21_latin1_a[224]={ 76,101,124,152,152,253,236,55,
101,101,152,171,76,101,76,84,152,152,152,152,152,152,152,152,
152,152,84,84,171,171,171,135,279,219,202,202,219,185,169,219,
219,101,118,219,185,270,219,219,169,219,202,169,185,219,219,286,
219,219,185,101,84,101,142,152,101,135,152,135,152,135,101,152,
152,84,84,152,84,236,152,152,152,152,101,118,84,152,152,219,
152,152,135,146,61,146,164,236,236,236,236,236,236,236,236,236,
236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,
236,236,236,236,236,236,236,236,76,101,152,152,152,152,61,152,
101,231,84,152,171,101,231,152,121,167,91,91,101,175,137,76,
101,91,94,152,228,228,228,135,219,219,219,219,219,219,270,202,
185,185,185,185,101,101,101,101,219,219,219,219,219,219,219,171,
219,219,219,219,219,219,169,152,135,135,135,135,135,135,202,135,
135,135,135,135,84,84,84,84,152,152,152,152,152,152,152,167,
152,152,152,152,152,152,152,152, };

// Call this function with
//    font: NULL or array length
//    data: NULL or specified size
//    height: STB_FONT_times_21_latin1_BITMAP_HEIGHT or STB_FONT_times_21_latin1_BITMAP_HEIGHT_POW2
//    return value: spacing between lines
static void stb_font_times_21_latin1(stb_fontchar font[STB_FONT_times_21_latin1_NUM_CHARS],
                unsigned char data[STB_FONT_times_21_latin1_BITMAP_HEIGHT][STB_FONT_times_21_latin1_BITMAP_WIDTH],
                int height)
{
    int i,j;
    if (data != 0) {
        unsigned int *bits = stb__times_21_latin1_pixels;
        unsigned int bitpack = *bits++, numbits = 32;
        for (i=0; i < STB_FONT_times_21_latin1_BITMAP_WIDTH*height; ++i)
            data[0][i] = 0;  // zero entire bitmap
        for (j=1; j < STB_FONT_times_21_latin1_BITMAP_HEIGHT-1; ++j) {
            for (i=1; i < STB_FONT_times_21_latin1_BITMAP_WIDTH-1; ++i) {
                unsigned int value;
                if (numbits==0) bitpack = *bits++, numbits=32;
                value = bitpack & 1;
                bitpack >>= 1, --numbits;
                if (value) {
                    if (numbits < 3) bitpack = *bits++, numbits = 32;
                    data[j][i] = (bitpack & 7) * 0x20 + 0x1f;
                    bitpack >>= 3, numbits -= 3;
                } else {
                    data[j][i] = 0;
                }
            }
        }
    }

    // build font description
    if (font != 0) {
        float recip_width = 1.0f / STB_FONT_times_21_latin1_BITMAP_WIDTH;
        float recip_height = 1.0f / height;
        for (i=0; i < STB_FONT_times_21_latin1_NUM_CHARS; ++i) {
            // pad characters so they bilerp from empty space around each character
            font[i].s0 = (stb__times_21_latin1_s[i]) * recip_width;
            font[i].t0 = (stb__times_21_latin1_t[i]) * recip_height;
            font[i].s1 = (stb__times_21_latin1_s[i] + stb__times_21_latin1_w[i]) * recip_width;
            font[i].t1 = (stb__times_21_latin1_t[i] + stb__times_21_latin1_h[i]) * recip_height;
            font[i].x0 = stb__times_21_latin1_x[i];
            font[i].y0 = stb__times_21_latin1_y[i];
            font[i].x1 = stb__times_21_latin1_x[i] + stb__times_21_latin1_w[i];
            font[i].y1 = stb__times_21_latin1_y[i] + stb__times_21_latin1_h[i];
            font[i].advance_int = (stb__times_21_latin1_a[i]+8)>>4;
            font[i].s0f = (stb__times_21_latin1_s[i] - 0.5f) * recip_width;
            font[i].t0f = (stb__times_21_latin1_t[i] - 0.5f) * recip_height;
            font[i].s1f = (stb__times_21_latin1_s[i] + stb__times_21_latin1_w[i] + 0.5f) * recip_width;
            font[i].t1f = (stb__times_21_latin1_t[i] + stb__times_21_latin1_h[i] + 0.5f) * recip_height;
            font[i].x0f = stb__times_21_latin1_x[i] - 0.5f;
            font[i].y0f = stb__times_21_latin1_y[i] - 0.5f;
            font[i].x1f = stb__times_21_latin1_x[i] + stb__times_21_latin1_w[i] + 0.5f;
            font[i].y1f = stb__times_21_latin1_y[i] + stb__times_21_latin1_h[i] + 0.5f;
            font[i].advance = stb__times_21_latin1_a[i]/16.0f;
        }
    }
}

#ifndef STB_SOMEFONT_CREATE
#define STB_SOMEFONT_CREATE              stb_font_times_21_latin1
#define STB_SOMEFONT_BITMAP_WIDTH        STB_FONT_times_21_latin1_BITMAP_WIDTH
#define STB_SOMEFONT_BITMAP_HEIGHT       STB_FONT_times_21_latin1_BITMAP_HEIGHT
#define STB_SOMEFONT_BITMAP_HEIGHT_POW2  STB_FONT_times_21_latin1_BITMAP_HEIGHT_POW2
#define STB_SOMEFONT_FIRST_CHAR          STB_FONT_times_21_latin1_FIRST_CHAR
#define STB_SOMEFONT_NUM_CHARS           STB_FONT_times_21_latin1_NUM_CHARS
#define STB_SOMEFONT_LINE_SPACING        STB_FONT_times_21_latin1_LINE_SPACING
#endif

