// Font generated by stb_font_inl_generator.c (4/1 bpp)
//
// Following instructions show how to use the only included font, whatever it is, in
// a generic way so you can replace it with any other font by changing the include.
// To use multiple fonts, replace STB_SOMEFONT_* below with STB_FONT_courier_47_usascii_*,
// and separately install each font. Note that the CREATE function call has a
// totally different name; it's just 'stb_font_courier_47_usascii'.
//
/* // Example usage:

static stb_fontchar fontdata[STB_SOMEFONT_NUM_CHARS];

static void init(void)
{
    // optionally replace both STB_SOMEFONT_BITMAP_HEIGHT with STB_SOMEFONT_BITMAP_HEIGHT_POW2
    static unsigned char fontpixels[STB_SOMEFONT_BITMAP_HEIGHT][STB_SOMEFONT_BITMAP_WIDTH];
    STB_SOMEFONT_CREATE(fontdata, fontpixels, STB_SOMEFONT_BITMAP_HEIGHT);
    ... create texture ...
    // for best results rendering 1:1 pixels texels, use nearest-neighbor sampling
    // if allowed to scale up, use bilerp
}

// This function positions characters on integer coordinates, and assumes 1:1 texels to pixels
// Appropriate if nearest-neighbor sampling is used
static void draw_string_integer(int x, int y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0, cd->t0); glVertex2i(x + cd->x0, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t0); glVertex2i(x + cd->x1, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t1); glVertex2i(x + cd->x1, y + cd->y1);
        glTexCoord2f(cd->s0, cd->t1); glVertex2i(x + cd->x0, y + cd->y1);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance_int;
    }
    glEnd();
}

// This function positions characters on float coordinates, and doesn't require 1:1 texels to pixels
// Appropriate if bilinear filtering is used
static void draw_string_float(float x, float y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0f, cd->t0f); glVertex2f(x + cd->x0f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t0f); glVertex2f(x + cd->x1f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t1f); glVertex2f(x + cd->x1f, y + cd->y1f);
        glTexCoord2f(cd->s0f, cd->t1f); glVertex2f(x + cd->x0f, y + cd->y1f);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance;
    }
    glEnd();
}
*/

#ifndef STB_FONTCHAR__TYPEDEF
#define STB_FONTCHAR__TYPEDEF
typedef struct
{
    // coordinates if using integer positioning
    float s0,t0,s1,t1;
    signed short x0,y0,x1,y1;
    int   advance_int;
    // coordinates if using floating positioning
    float s0f,t0f,s1f,t1f;
    float x0f,y0f,x1f,y1f;
    float advance;
} stb_fontchar;
#endif

#define STB_FONT_courier_47_usascii_BITMAP_WIDTH         256
#define STB_FONT_courier_47_usascii_BITMAP_HEIGHT        188
#define STB_FONT_courier_47_usascii_BITMAP_HEIGHT_POW2   256

#define STB_FONT_courier_47_usascii_FIRST_CHAR            32
#define STB_FONT_courier_47_usascii_NUM_CHARS             95

#define STB_FONT_courier_47_usascii_LINE_SPACING          22

static unsigned int stb__courier_47_usascii_pixels[]={
    0x00026200,0x98000000,0x8a140001,0x02aaaaa9,0x55500388,0x00263555,
    0x40200310,0x00060000,0x00000180,0x00000000,0x64c00000,0x06fc8001,
    0x3a1f5000,0x77f40003,0x3fee2002,0x3ffa3f52,0xfa807fff,0xfffff801,
    0x4001dd6f,0x42f8807d,0x7f5c006c,0x4c003eff,0x1cdfffec,0xefec9800,
    0x03fc801c,0x6f7f6dc4,0x2e620003,0x7f42cefd,0x7e4005ff,0x4fd00006,
    0x220000fd,0xf9001ffb,0x988fd43b,0xb807e999,0x99df801f,0x009f7099,
    0x3e6013ee,0xd8803ec2,0x4fecbdff,0x7bfff700,0x4007fffb,0xfffdfffb,
    0x41ffe203,0xedefffc8,0x5c001eff,0xffedffff,0x3fffff50,0x0037e400,
    0x9f31fd40,0x0df10000,0x07ea13e0,0x2fb807d8,0x7f405f80,0x007fc401,
    0x01ba17d4,0x5fb81ff4,0x4037f620,0xfc805fd8,0x827ecc1d,0xfe887ff8,
    0x03ff701d,0x015dfd10,0x7ffffdc1,0x01bf2002,0xfd03fa00,0x0fb00001,
    0x3f503f50,0xfd983ec0,0xc8adffff,0xbf7017e0,0x7004fc80,0xb806e83f,
    0x80fe402f,0xdf9004fe,0xb0077cc0,0x0fff103f,0xdf1007fb,0x027fd401,
    0x1fffff10,0x0004c400,0x3ea13e60,0x0fc80003,0x7d407e40,0x3ee1f601,
    0xffecabdf,0x2017e2fe,0x03fe01ff,0x17e0fdc0,0x3e00df10,0x4003fb83,
    0x01fb03fc,0xfff06f98,0x7d400330,0x005ff303,0x003bfb30,0x3f600000,
    0x0000fd00,0x0fc801f9,0x1f601fa8,0x32603df5,0x2017e2ff,0x0bf504fc,
    0x17e07e40,0x36003f90,0x80037c46,0x027cc0fe,0x6ff81fd8,0x04f88000,
    0x000003fd,0x4c000000,0x00fee05f,0xc801f900,0x201fa80f,0x4007fc7d,
    0x2017e2fe,0x05fb07f9,0x13e23e40,0x3e400bf0,0x540007f6,0x800fec4f,
    0x06ff84fa,0xf90bd000,0x00000009,0x1fc80000,0x200037c0,0x07e400fc,
    0x4fb00fd4,0x3f3003f9,0x2fe802fc,0xb0007fc4,0x2203f88f,0x43f2004f,
    0x740005f8,0xf001ba0f,0x000bfd0d,0x6f887f10,0x65c00000,0xcccccccc,
    0x7c4002cc,0x002fb805,0xf9003f20,0x6c03f501,0x80007ee7,0x8bf7005f,
    0x3ec005fc,0x3f980fe6,0x87ed4c40,0x5c0002f9,0xd0013e1f,0x000bfd0f,
    0x1fa83f70,0x3e200000,0xffffffff,0x64005fff,0x06f8801f,0x9003f200,
    0x403f501f,0x000bea7d,0xff5005f8,0x20027fc1,0x7017cc6e,0x3ff2203f,
    0x03f70fff,0xf12f9800,0xd87d8009,0x7cc0005f,0x00007c86,0x99999880,
    0x05f99999,0xc801be20,0x1f90001f,0xfa80fc80,0x5f89f601,0x4017e000,
    0x7ff32ff9,0x7e666440,0xcdfdcccf,0x203f23cc,0xfd9adff9,0x80001f90,
    0x007f34f8,0x27ec0fc8,0x0efc8800,0x013105e8,0x5f800000,0x800bee00,
    0xf70005f8,0xf507d803,0x3ee3ec03,0x05f8001d,0x3ea7ff10,0x3ffe602f,
    0xffffffff,0x1f26ffff,0x1f90bfa2,0x7c0001f6,0xb8005f55,0x8027e41f,
    0x05fffeea,0xffdb893e,0x000001ef,0x37c00bf0,0x000fe400,0x1be01fd4,
    0x0fb00fd4,0x037bfff7,0x7fc00bf0,0x4001ff74,0x007dc4f8,0x905f70f9,
    0x0001ba1f,0x002fab7c,0x0ff20fdc,0x7ffff4c0,0x3a25f302,0x3ffcbcef,
    0x0019d930,0xfb802fc0,0x05f98003,0x983fe880,0x03f503fd,0xfdb883ec,
    0xf80befff,0x657fa005,0x27c4007f,0x87c803f2,0x361f907d,0x29f00007,
    0x7dc002fa,0x4001fe41,0xfa84feb9,0xd882fe89,0x7fffc43f,0x017e0007,
    0xfb0003f4,0xfff10001,0xa813ff65,0x401f601f,0x40effcb9,0x5bf6005f,
    0x7cc006fd,0x1f203e43,0xc87e417e,0x7cc0000f,0xb8005f53,0x0017dc1f,
    0xfa837f60,0x7f400fea,0x3ffffee0,0x00bf0002,0x4c0007f5,0xff98004f,
    0x40bff91e,0x01f601fa,0xbf0ffd40,0xfcb7ec00,0x217cc006,0x743e407d,
    0xf70fc80f,0x2fa80003,0xfb8005f5,0x00017dc1,0xfff327dc,0x54bf3005,
    0x001fffff,0x1fd00bf0,0x00fe8000,0x220bbe20,0x03f504fc,0xf10003ec,
    0xfd002fcb,0x5001feeb,0x6406d85f,0xfc83fc87,0x80007f30,0x007f31fc,
    0x07cc0fc8,0x227d8000,0x1b6004ff,0x000dfffd,0x13e602fc,0x00fea000,
    0x37c03fa8,0x1f601fa8,0x2fcfb000,0x3ea9ff00,0x3332e01f,0xffcccdfd,
    0x43e43ccc,0x3f22dfe8,0x40003fa0,0x017e26f8,0x00020fb0,0xff12fa80,
    0x207e4001,0x7c0002ca,0x0007ec05,0x2e007e80,0x407e400f,0x19f601fa,
    0xbf1fb800,0x4cffe200,0xfff102ff,0xffffffff,0x5c1fffff,0xfffe980f,
    0x13ea4fff,0x3e0fe400,0x00374006,0xd27c4000,0x01fb800d,0x40bf0000,
    0x200004f9,0x1f9003fa,0xfa80fc80,0x0fcdf601,0x2fc3f200,0xf12ff980,
    0x07e4007f,0x03f5017e,0x276f7654,0xf30007fa,0x4400fd0b,0x8000005f,
    0x007ee4f8,0x01360fc8,0xfb02fc00,0x6f800003,0xc801f900,0x201fa80f,
    0x400bf57d,0x4017e6f8,0x13fa0ffa,0x3e20fc80,0x0017cc04,0x800f7cc0,
    0x2fb80ff9,0x0007f700,0x4c5f3000,0x91f6003f,0xbf0000bf,0x00017e20,
    0x3200bee0,0x407e400f,0x55f601fa,0xfe8804ff,0x7e4017e1,0xb002fdc6,
    0x4403f88f,0xf300004f,0x2ffa805f,0x3a00df10,0xb0000007,0x1006e81f,
    0x01df90bf,0xfc82fc00,0xf8800001,0x400fc806,0x01fa80fc,0x77ffd5f6,
    0x3ff2621a,0xfe802fc3,0x8007fc43,0x401fcc7d,0x300000fd,0x73137bff,
    0xfd801dfb,0xa81fdc02,0x2001642c,0x04fa84fb,0xdf701fc8,0x217e0001,
    0x000006f8,0x1f900bf2,0xfa80fc80,0x4fcdf601,0xfffffffa,0x805f81ef,
    0x3fd80ff9,0x2f98dd00,0x0003fa80,0x3ffff220,0xf1004fff,0x41bea03f,
    0x3fa3fffc,0x06fc802e,0x4fb80ff6,0x000ffd40,0x017dc2fc,0x0bf10000,
    0x7e400fc8,0x3601fa80,0xbfb73027,0x402fc017,0x0df504fc,0x05f517a0,
    0x00007fa0,0x037dff10,0x359ff500,0x3e03dfb5,0x3f626fff,0xba89abdf,
    0x7ec00dfe,0xdfda99ad,0x006f9800,0x006f85f8,0x01fc8000,0x1f9003f2,
    0x3ec03f50,0x7c00fdc0,0x00ffc405,0x8bf003ff,0xff3001fa,0x401e4403,
    0x80003fe9,0xefffffe9,0x0ffff200,0x3ffffb26,0x2e002fff,0x04fffffd,
    0x7c000440,0x00017dc5,0xd02fc400,0x505f700d,0x403ec03f,0x05f801fb,
    0x3ee02fdc,0x7dc4f805,0x33fee001,0x2ffb998a,0x7777fdc0,0xf930acdf,
    0x0aca980b,0x10059500,0x00035773,0x0004ddc4,0xe89f0000,0x20000007,
    0x03f980fd,0x1fa85f98,0x3ee01f60,0x2205f801,0x1fe800ff,0x1f913e20,
    0xffff9800,0x6402efff,0xfeefffff,0x1effffff,0x00000000,0x00000000,
    0x8be60000,0x000003fa,0xfc993e60,0x7dfb000f,0xaaa98fd4,0x1fb807ea,
    0xaaaaef80,0x2a009f71,0x90fe205f,0x65cc000f,0x7b7001ac,0x33b2a203,
    0x00000002,0x00000000,0xfc800000,0x00003fa0,0x3a1fb000,0x75c001cf,
    0x3fa1f32f,0xa807ffff,0xffff801f,0x800dd6ff,0x2205c07d,0x00000003,
    0x00000000,0x00000000,0x00000000,0x07f337cc,0xf3000000,0x10000227,
    0x26666208,0x00588019,0x21333333,0x00080008,0x00000000,0x00000000,
    0x00000000,0x00000000,0x06077dc4,0x98000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0xddd10000,0x1dfffddd,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x76c40000,0x02bdeeee,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x40000000,0x06600000,0x2aa00000,0x020002aa,0x2aaa9800,
    0x32600000,0x26000bdd,0xaaaaaaaa,0x82aaaaaa,0xaaaaaaaa,0x0001aaaa,
    0x00020000,0x3fb2a000,0x2e2002ce,0xa802defd,0x6dcc4ccc,0x000aceff,
    0x0003ff30,0x7fffcc00,0x3fb26005,0x665c2cef,0x3ffffc3c,0xffb80000,
    0xb001efcb,0xffffffff,0x0dffffff,0xffffffff,0x100fffff,0x039bfd95,
    0x7ffee440,0x666641bd,0x3ff62002,0x00dffede,0x7f6fffd4,0x3ffe00ef,
    0x37ffee7f,0x003fffdc,0x0001ff98,0x2fcccc00,0xcdeffb80,0xffd0dffe,
    0x6ccc41ff,0xfa800007,0x4007e442,0x999999fd,0x6e999999,0x99999ef8,
    0x40099999,0xffdefffa,0xfffa803f,0x24ffedce,0x800fffff,0xfc884ff8,
    0x05ff500e,0x4cc01df9,0x201dfb7d,0x4c003fe9,0x000001ff,0xfd1017e0,
    0x23bee01d,0x320099ee,0x4f800007,0x1f6013e0,0x17e1be00,0x5f7dc000,
    0xb037ec41,0x3f6205df,0x0099ef8d,0xfa805fb0,0x200ef884,0xefc805fa,
    0x07f9003f,0x000ffcc0,0x80bf0000,0xee9803fc,0x00f9006e,0x201f8800,
    0x004a806c,0x02fc1fcc,0x4037dc00,0x05fb84fb,0x00bfdf50,0xfb004fa8,
    0xc802fb83,0x27fe401f,0x800bf600,0x00000019,0x0bf302fc,0x8037fcc0,
    0x4c00007c,0x0003cc07,0x5f81fc80,0x00ff8000,0x37cc3fb0,0x017fee00,
    0x26001f90,0x8802fc3f,0x037e405f,0x00027c40,0x3e000000,0x0003fa05,
    0x1f200df9,0x03f10000,0x80000364,0x000bf06e,0x26002fa8,0x0003f63f,
    0xfb0017fa,0x3e25f800,0x803f6003,0xd90003fc,0x80000000,0x9f02fc00,
    0x00df3000,0x000101f2,0x013e20bd,0x413e2000,0x2dc0005f,0x0bf2fc00,
    0x0017ea00,0x24f800fb,0x3ea002f9,0x0007f202,0x000007dc,0x3ffb2600,
    0x982fc0bd,0x0df0003f,0xd9511f20,0x30019bff,0x036cc17f,0x01fb8000,
    0x000000bf,0x01fc5ba0,0x4005f980,0x5f3000fa,0x3e0017d4,0x0003f204,
    0x32e217cc,0x001ccccc,0xb9dfff30,0x82fc5fff,0xdd0001fa,0xffa9f200,
    0x2fffdcdf,0xfedffa80,0xd000000e,0x9532fc0f,0x00000359,0x00bea9f1,
    0x44005f80,0x88fb005f,0x1be6003f,0x50000fc8,0xffffa85f,0x98002fff,
    0x7fd102ff,0x017d417e,0xf9006f80,0x7d407bea,0xcca8804f,0x001b2a02,
    0x9df027c4,0xdfffffff,0x7dc00001,0x20007f32,0xfc8005f8,0x7427e403,
    0x81ffa004,0xf90002fc,0x73333101,0xdf98005f,0x5fcfb800,0x10009f10,
    0x33f200df,0x3fd8804f,0x7fed4000,0x5f50001c,0x5effffc0,0x02ffca89,
    0x225f9800,0xbf30004f,0x2bbf2000,0x207fd731,0xffb800fc,0x0013f207,
    0x5f5003f4,0x0077c400,0x7c0bff90,0x06fa8006,0x800bff90,0x2a2000fe,
    0x0001cffd,0x0e5c07d8,0x0003fa60,0x3741fe88,0x005fc800,0x3ffffea0,
    0x17e602ff,0x01f79f50,0x7000bff2,0x17d4009f,0x8005f700,0x3f205ff8,
    0x1bfe2003,0x0007fe40,0xb51017e6,0x000039ff,0x200005f8,0xd10005f9,
    0x009f705f,0x0005ff98,0xfd9dffb1,0x0dfa80bf,0x01f75fb8,0x4003fff2,
    0x7d4006f9,0x00176002,0x3fa02fdc,0x0dffb000,0x40013f20,0xefda887d,
    0x5000001c,0xc800005f,0x7f44001f,0x4007f602,0x8005ffe8,0xdf702fe8,
    0x5e7fdc01,0x03f26ffc,0x017fcfe4,0x50007fee,0x027c005f,0x4c05f980,
    0x3f6202ff,0x5f9006ea,0x447ee000,0x0001befd,0x000fc800,0x0017cc00,
    0xf8805fd1,0x57f5403f,0x77c4005f,0x0077c400,0x15bfffb5,0x22f903ec,
    0xba9abdfe,0xa8001efe,0x05f3002f,0x2017e200,0xa99bdfe9,0x00dd2ffc,
    0x540007f2,0xd9806e2f,0x40002dff,0x8800005f,0x5fd1004f,0x33bfa600,
    0x1ffdb99a,0x1fb800bf,0x2005f500,0x7c81fe01,0x3fffff22,0x2a0004ff,
    0x03f5002f,0x8802fc00,0xdffffffd,0x7e401ba1,0x07f30000,0x3aafbee0,
    0x7f30004f,0x17e00000,0x000bfa20,0x3fffffee,0x0017e0df,0x05e800bd,
    0x902fc400,0x06aea20f,0x00bea000,0x88001fc4,0xbb98005f,0x3200dd01,
    0x3f50001f,0xf305f300,0x01f90005,0x09f10000,0x0002ff98,0xf8055d4c,
    0x00fe2005,0xa8000f90,0x001f203f,0x02fa8000,0x540013a0,0xd000005f,
    0x00ff200d,0x6c007e40,0x2001f206,0x3000006e,0x0ffcc07f,0xbf000000,
    0x001fcc00,0x440003ee,0x01f200ff,0x2fa80000,0x4001b200,0x000005fc,
    0x17f200bf,0xf8037400,0x8003e602,0x000003f8,0x3fe603f7,0x40000001,
    0x027c005f,0xd8001f60,0x003e403f,0x05f50000,0x20027d40,0x00005ff9,
    0xf9003f88,0x2fc8007f,0x7c403f00,0x007ee001,0x0df10001,0x00007fea,
    0x0017e000,0x2fc400dd,0x805fa800,0x0000007c,0xfb000bea,0x3ffa2003,
    0xfc800005,0x1fff9002,0x8017e600,0x001ee04e,0x03dd00dd,0x7d417e40,
    0x0000000e,0xfa800bf0,0x003fb004,0x9001ff90,0x4000000f,0xfd8002fa,
    0x7c774c03,0x7dc00005,0x3a3f2006,0x07fdc02f,0x2f40f700,0x5009f100,
    0xfd8809ff,0x000efb85,0xf8000066,0x04fd8005,0x260027e4,0xf9000dfe,
    0x54000000,0xdfb0002f,0xdfb53137,0x013bbfe1,0x00efc980,0xe8bff75c,
    0xeb989adf,0xee8000ef,0x8003f6a2,0xfd1001fb,0xf753379d,0x0dfa81bf,
    0x00036c00,0xb1000bf0,0xd73137df,0x335910bf,0x007ffb95,0xdddffddb,
    0x320001bd,0xfeeeeeee,0x4eeeeeee,0x7ffff5c0,0x3ffe0dff,0x3bb200ef,
    0x0dfffeee,0x47fffe80,0xfffffffc,0x3f620003,0x4000dfef,0xfdb8006b,
    0x02ffffff,0xddddddf7,0xfddddddd,0x3bb6000d,0x05eeffee,0x7ffffd40,
    0xfff102ff,0x0037dfff,0x3bbbbbb2,0xd0000dee,0xffffffff,0xdfffffff,
    0x06f2a200,0x77764000,0x0002cdee,0x01bcb880,0x06aa2000,0x98000000,
    0x7dc01acb,0xffffffff,0x06ffffff,0xdddddb00,0x2000bddd,0x3001aca9,
    0x00000377,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x2aa60000,0x0000002a,0x40266aa6,
    0x0002aaaa,0x39999950,0xccccca80,0xaaaaaa81,0x4c00000a,0x37300000,
    0x2aa20000,0x00c4000a,0x00266200,0x00026200,0x80006600,0xff099999,
    0x00000fff,0xffffff70,0x3fe23dff,0xd00006ff,0x80dfffff,0x45ffffff,
    0xfffffffa,0x764c0001,0x000cffff,0x00fff64c,0x2fffd800,0xffffda80,
    0x2a0911de,0xcffffffd,0x3ff26000,0x0dc3dfff,0x7fffe440,0x406e2def,
    0x11fffff8,0x0000fb33,0xaabefe80,0x221edcca,0x00006e99,0x400677ea,
    0x9809fe99,0x01fb9999,0x33bff200,0x404fffdb,0xfeffffc9,0xcf980001,
    0x3f6202fb,0xffdcbcdf,0x3fae1fbc,0xfecbbcdf,0x7fec402f,0xefedcbdf,
    0xffc809f1,0xfffdbcef,0xff504f9d,0x01f60bff,0x04fc8000,0x00037400,
    0x50003f20,0x1fa8007f,0x0dfe8800,0x260bfd30,0x3f51beff,0x51fd0000,
    0x067f405f,0x21fffc88,0x3ee00bff,0x3bfd101f,0x27eff540,0x00adfe88,
    0x20bfff73,0xb01ffffc,0x2200000f,0x6e80007f,0x27c40000,0x0003fa00,
    0xf88003f5,0x0bfb003f,0x007ea02a,0x3ea7f700,0x2007f902,0x017e1ffc,
    0x3fe837cc,0x413ff200,0x3a2004fe,0x9ffff05f,0x00003ec0,0x80003f98,
    0xd800006e,0x07f3000f,0x8003f500,0x7e4002fc,0x007ea003,0x3ea6f880,
    0xe800bf02,0xc8013e1f,0x0027e42f,0x2fdc27ec,0x4c2fd400,0x3600ffff,
    0xf5000007,0x0dd00005,0x09f10000,0x20003f60,0x3e6001fa,0x01ff0005,
    0x80007ea0,0x20bea1fc,0x7e4003f9,0xf98006e1,0x0003be23,0x1ff113e6,
    0x2e13e000,0x3ec04fff,0x2fa80000,0x206e8000,0x03f60000,0x20009f30,
    0x3f6001fa,0x07f70001,0x40007ea0,0x417d45f9,0x2cc002fa,0xf527c000,
    0x21fc0005,0x260002fa,0x00fffd80,0xccc983ec,0xccb81ccc,0xccccdfdc,
    0x7400bccc,0x3bff6e26,0x27c4003d,0x40003f60,0x9f3001fa,0x006f8000,
    0x360003f5,0x4417d40f,0x0000004f,0x01b63f98,0x01f90100,0x7fff0000,
    0x3f20fb00,0x446fffff,0xffffffff,0x1fffffff,0xfff9b740,0x004ffdcd,
    0x4f9807ec,0x007ea000,0x20000fd4,0x1fa801fc,0xa84fa800,0x001fd02f,
    0x0fc80000,0x2000013e,0xa800006e,0x0fb007ff,0x80cdffd4,0x9bfb9998,
    0x00999999,0x82efbee8,0x26005fc8,0x001fb04f,0xc800fd40,0x7d40000f,
    0x001fa803,0x2fa80fe8,0x0003df30,0x997ea000,0x4400003f,0xc800004f,
    0x0fb003ff,0x20007fea,0xe80002fa,0x1fc805ff,0xf303f600,0x1fa80009,
    0x0000fb00,0x3f5009f3,0x502fb800,0x6ffd405f,0x4000009b,0x3ea1efd8,
    0x7d400001,0xfe800002,0x2e1f6006,0xf50000ef,0xbfd00005,0x800fe200,
    0x007ec4f9,0x4007ea00,0xf880006e,0x001fa804,0x2fa81be2,0xefffeb80,
    0x910001bd,0x1fa81bff,0x0fd40000,0x07640000,0xdfd8fb00,0x0bea0000,
    0x001ba000,0x0fd800dd,0x500009f3,0x017e003f,0x5402fc00,0x07f2001f,
    0x22002fa8,0x0efffdca,0x077ff600,0x00000fd4,0x000007ea,0xe8bec000,
    0xfa80004f,0x06e80002,0x26003740,0x0001fb4f,0x36003f50,0x4f880006,
    0x3001fa80,0x02fa80bf,0x0ffdcc00,0x5401ef80,0x5400001f,0xccc9801f,
    0x002aaccc,0x1ff4fec0,0x02fa8000,0x4006e800,0x9fd8006e,0xf500004f,
    0x001f2003,0x2a00fea0,0x01fb001f,0x00002fa8,0xbf003fd3,0x0007f500,
    0xe802f980,0xffffffff,0x033b262f,0x1dffffb0,0x05f50000,0x800dd000,
    0xff98006e,0xf500000f,0x007ee003,0x5005f700,0x07f5003f,0x00005f50,
    0x2f401fc4,0x00027c40,0x4c013e20,0x1df99999,0x01ffffe2,0x1df53dfb,
    0x02fa8000,0x4006e800,0x9fb0006e,0x0fd40000,0x0002fa80,0x7d4007ec,
    0xeeefc801,0xfeeeeeee,0xd00003ee,0x2001300d,0xf800006f,0x22fc0005,
    0x02fffffb,0x0efa83f6,0x00bea000,0xd001ba00,0x03f2000d,0x01fa8000,
    0x4000df10,0x3f5005f9,0xddddd700,0xdfdddddd,0x0007a29d,0x000007e4,
    0x800003f9,0x2fc0007d,0x07ffffea,0x0efa87d8,0x005f5000,0xe800dd00,
    0x05f88006,0x00fd4000,0x20007f70,0x3f5002fd,0x2fa80000,0xd80027cc,
    0x7c400007,0x2e040006,0x17e0004f,0xb01bfffa,0x0017ee0f,0x400017d4,
    0x0374006e,0x0000fe40,0xd0007ea0,0x5fa8001f,0x0007ea00,0xf985f500,
    0x05f88006,0x04fb8000,0xfd81f900,0x20bf0001,0x07d802ca,0x2a0017ee,
    0x6e80002f,0x20037400,0x800005f8,0x7cc001fa,0x1ff5000e,0x000fd400,
    0xf30bea00,0x2fd8009f,0x000e6540,0x6c4007fb,0x00ef884f,0x80005f80,
    0x02fdc07d,0x0000bea0,0x0dd001ba,0x0001fc80,0x8001fa80,0x7d402ffb,
    0x0fd4002f,0x0bea0000,0x8019fff3,0x7e405fc8,0x36003fff,0x7f4400df,
    0x00ffea04,0x80005fa8,0x05fb807d,0x0000bea0,0x0dd001ba,0x0002fc40,
    0x0001fa80,0x3137bfd3,0x0003ffb7,0x800003f5,0x65fcc2fa,0x75319bff,
    0xfff00bff,0xfd800bff,0xdb989bcf,0xfd8802ff,0xa9889ace,0x0003fffc,
    0xb80ffdd7,0x31deeffd,0xddfddddb,0x05bddddd,0x37bffb6a,0xdffdb502,
    0x3bbbae5b,0x05eeefee,0x77777640,0xeeeeefee,0x7ec403ee,0x0cffffff,
    0x3bbbb220,0xeeeeefee,0xddb3004e,0x3a25bdfd,0xfffffd31,0x32005dff,
    0x8003ffff,0xffffffea,0x7dc000df,0xffffffff,0x7f40002e,0x7ff407ff,
    0xff53ffff,0xffffffff,0x320bffff,0x04ffffff,0xbffffff9,0x3bbbbbae,
    0x2005eeee,0xffffffe8,0xffffffff,0x32e6006f,0xff9800ab,0xffffffff,
    0x800effff,0xfffffffb,0x5e5d4404,0xcca8001a,0x5cc40001,0x880001bc,
    0x00abcca9,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x3bbb2200,0xdd904eee,0xa809dddd,
    0xc8800002,0xeeeeeeee,0x7644eeee,0xeeeeeeee,0x26002bce,0x3deeeeed,
    0x77776dc0,0x3bbb21de,0xb100ceee,0x47bddddd,0xeeeeeee8,0xeeeeeeee,
    0x3b6e5eee,0x75c02dee,0x3222deee,0xeeeeeeee,0x3b2001de,0x84eeeeee,
    0x2deeeec8,0x3bbbbb22,0xeeeeeeee,0x3ffffe24,0x7f440eff,0x00efffff,
    0x200001f6,0xfffffff9,0x0effffff,0xffffffd1,0xdfffffff,0xffff7005,
    0xfe80bfff,0x12ffffff,0xfffffffd,0x3fffe603,0x3fe26fff,0xffffffff,
    0xffffffff,0x3fffff67,0x7ffff404,0x3fffe64f,0x3fffffff,0xffffd100,
    0xf881dfff,0x265fffff,0xffffffff,0x0effffff,0x9f0007d8,0x0001f600,
    0x003f2000,0x7dcc06d8,0x017e004f,0x7d40fd00,0x0fd40001,0x1fb813e2,
    0x07fa1f60,0x2009f700,0x200003f9,0x3fa2007d,0x00fd4004,0x7c001f60,
    0x000fb004,0x01f90000,0xd88036c0,0x01f9003f,0xa813e600,0x7dc0002f,
    0xf7027c40,0x7c43ec03,0x0df3000e,0x0001fcc0,0x3a200fb0,0x1fa8003f,
    0x8003ec00,0x00fb004f,0x1f900000,0x20036c00,0x3f9800fe,0x401f9000,
    0x640003f9,0x2e04f887,0x541f601f,0x0fe8805f,0x000fe600,0xe9807d80,
    0x3f50002f,0x0007d800,0x01f6009f,0x3f200000,0x001b6000,0x1ba005f3,
    0x22037c00,0x806aa04f,0x204f886d,0x81f601fb,0x17ec04fb,0x000fe600,
    0x7cc07d80,0x3ea0001f,0x003ec001,0x999504f8,0x999999fd,0x00007999,
    0xdb0007e4,0x2009f000,0x7d4001fb,0xf105f802,0x442f40ff,0x807ee04f,
    0x817ec07d,0xf98004fb,0x1f600003,0x0001efa8,0x36000fd4,0x209f0007,
    0xfffffffe,0xffffffff,0x1f900001,0x20036c00,0x9f1003f9,0x800fd800,
    0x3fbf706e,0x13e217e0,0x1f601fb8,0xf981fd10,0x07f30006,0xb83ec000,
    0xa80000ef,0x03ec001f,0x26604f80,0x99999fe9,0x00009999,0xd8003f20,
    0x007e4006,0x22001fb0,0x20fb004f,0xf883f9fd,0x7dc05d04,0x26016e01,
    0x003fe26f,0x0001fcc0,0x1bf90fb0,0x07ea0000,0x2000fb00,0x00fb004f,
    0x1f900000,0x70036c00,0x2fa800bf,0x2003f700,0x1babf07c,0x5c000fe2,
    0xf700001f,0x80007f69,0x200003f9,0x002fec7d,0x0007ea00,0x13e000fb,
    0x00003ec0,0x0007e400,0xdfb100db,0x00df0003,0x0fb801ba,0x40fc9fcc,
    0xf70002f9,0x7ec00003,0x4c0003fe,0x3600003f,0x003ffb17,0x001fa800,
    0x4f8003ec,0x0000fb00,0x001f9000,0x4ccccfec,0x00dffecb,0x9803f900,
    0x07ea003f,0x50bea3f9,0x3ee0003f,0x7f400001,0x3f980005,0x23f60000,
    0x004ffdfe,0x0007ea00,0x13e000fb,0x00003ec0,0x0007e400,0xfffffffb,
    0x80003bff,0x07e404f8,0x7e85f300,0x01f713e2,0x0007ee00,0x00eff880,
    0x001fcc00,0x25fdfb00,0x0001efc8,0x6c001fa8,0x009f0007,0x288001f6,
    0x000fc800,0x2aaaabf6,0x00003ffc,0x005f80fb,0x89f11fcc,0x0003e47d,
    0x400003f7,0x0005fcfe,0x00001fcc,0xdf505ffb,0x1fa80001,0x8003ec00,
    0x00fb004f,0x20007dc0,0x1b6000fc,0x0004ffa8,0x5f502fa8,0x2a4f8800,
    0xfb0fdc2f,0x00fdc000,0xf93fc800,0x1fcc0007,0x7ec02e00,0x0017e601,
    0xd8003f50,0x009f0007,0xfb8001f6,0x007e4000,0xfe880db0,0x05f80004,
    0x97e000fb,0xd1fcc0fd,0x0fdc000d,0x22fd4000,0xf30001fe,0x81fc4007,
    0x02fc807d,0x0007ea00,0x9f1000f9,0x8001f600,0x7e4000fb,0x401b6000,
    0x640003fd,0x0027c40f,0x7c1be5e8,0xb80017e5,0x7cc0001f,0x007fc40e,
    0x1001fcc0,0x401f607f,0xf50000fe,0x00fa8003,0xd801fd40,0x03ee0007,
    0xd800fb00,0x007fa006,0x7dc3f980,0x26db0001,0x3e1f903f,0x07ee0004,
    0x203fd000,0xf98005f9,0x40fe2003,0x07f5007d,0x0007ea00,0xfc8005f1,
    0x000fb001,0x3e0007dc,0x0036c006,0xe8000df3,0x90003746,0x7d407eef,
    0x20003f8a,0x360001fb,0x027dc02f,0x8800fe60,0x400fb03f,0x3f50007e,
    0x800dd000,0x0fb000ff,0x0007dc00,0x6d8009f5,0x001fdc00,0x0fe63f70,
    0x7e8fb800,0x0be73e20,0x001fb800,0x36009f70,0x0fe6002f,0xfb03f880,
    0x0017dc00,0x5c000fd4,0x07fb003f,0x80017e40,0xe8800dfb,0x036c000f,
    0x80007f40,0x001fb4f8,0x02fcfd40,0x0007ebfa,0x98001fb8,0x3fa2006f,
    0x007f3000,0x07d81fc4,0x2001be20,0xf90001fa,0x005fd809,0xda8037d4,
    0x8807bf25,0x6d8002fe,0x004f9800,0x017e3f60,0x05f9f300,0x000fdfb8,
    0x10007ee0,0xf98001fd,0x007f3006,0x07d81fc4,0x2000fe40,0x360001fa,
    0xeb989aef,0xfc8000df,0xf95311ae,0xdffa87ff,0x4feca89b,0x3ffbb200,
    0xfb004eee,0xfa8003bd,0x440002ff,0x7cc00fff,0xdb7000ff,0xddddfddd,
    0xffd9105b,0x322019dd,0x10ceffee,0xddfdddd9,0xdddddddd,0x77647fdd,
    0x404eeeff,0x912deef9,0xdfdddddd,0x009ddddd,0x3ffffff2,0x7dc0003f,
    0xefffffff,0xfffb100b,0x4003dfff,0xffffffe8,0xff8800ef,0x7fe8002f,
    0x6ff88000,0x400fff00,0xfffffffd,0xf984ffff,0x00efffff,0xdffffff3,
    0x3ffffe61,0xffffffff,0x13ffffff,0xfffffffd,0xfffe801d,0xffffff34,
    0xffffffff,0x6544001d,0x1000009b,0x00359975,0x00379730,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x70000000,0x805bdddb,0x22deeedb,0x0ceeeedb,0x3eeeeec8,0x3bbbbb22,
    0x1acdeeee,0x3bbbb6a0,0xeeeeeeee,0x20eeeeee,0xeeeeeeec,0xeeeeeeee,
    0x3bb6a4ee,0xbdeeeeee,0x3bbb6001,0xeeeeeeee,0x777644ee,0xdeeeeeee,
    0xedb800ac,0xeec804ee,0x2e0ceeee,0x4001eeee,0x204eeee8,0xeeeeeeda,
    0xfb00005e,0xe80bffff,0x364fffff,0x40ffffff,0x6fffffe8,0x3fffffe6,
    0xffffffff,0xffffb80d,0xffffffff,0x0fffffff,0xffffffd1,0xffffffff,
    0x7fe4dfff,0xffffffff,0x7400dfff,0xffffffff,0x225fffff,0xfffffffe,
    0xcfffffff,0x3ffffa00,0x3ffa201f,0x3a1fffff,0x4005ffff,0x00effffc,
    0xfffffff9,0x400003ff,0x7e4003fb,0xb001f602,0x440bf00f,0x2a02ffc9,
    0x0fc8002f,0xdd000db0,0x5cc07f30,0x1ba01efd,0x3a05f880,0x77ecc406,
    0x06ffc800,0x37e02f40,0x37e000fd,0x3ba0007c,0x400005f8,0xbf3000fe,
    0x6c007d80,0x3005f807,0x0bea03fd,0x6c03f200,0x986e8006,0x3ff5003f,
    0xfe801ba0,0xa801ba01,0xfcfc805f,0xf017a002,0x2a007f3b,0x30007caf,
    0x0003f67f,0xd005f980,0x007d801f,0x02fc03ec,0x3ea0df10,0x00fc8002,
    0x0dd000db,0x7c4007f3,0x2e00dd06,0x0037403f,0x1f900bee,0x17a001fd,
    0x401fabf0,0x2000f96e,0x007f50fc,0x403fb800,0x07d802fb,0x2fc03ec0,
    0x2a07ee00,0x0fc8002f,0xdd000db0,0xb8007f30,0x9806e83f,0x006e805f,
    0x5f2027c4,0x0bd004fa,0x805f55f8,0x000f93f9,0x000df17e,0x2601fd00,
    0x00fb005f,0x05f807d8,0x7d417cc0,0x207b8002,0x85e8006d,0xfe8003f9,
    0x3a203740,0x006e800f,0xb3e405f8,0x80bd003f,0xfb01ba5f,0x2a001f21,
    0x0007e42f,0x7417e600,0x00fb000f,0x05f807d8,0x7d41fcc0,0x20080202,
    0x0440206d,0x4c001fcc,0x32026c4f,0x00dd002f,0x3e403fa8,0x0bd00bf1,
    0x407ee5f8,0x001f24f8,0x09f303f6,0x85f90000,0x1f6003fb,0xbf00fb00,
    0xa81fb800,0x000f702f,0x004e81b6,0x7c000fe6,0x027d4005,0xfd800dd0,
    0x3f23e400,0x3e02f402,0x7e417e25,0xf1001f21,0x0001fa0b,0x6f887f40,
    0x2003ec00,0x005f807d,0x02fa83f4,0xdb0001f9,0xf3002fc0,0x01b60007,
    0x2000ef88,0x9fb1006e,0x0dd0f900,0x22fc05e8,0x645f80fc,0x817d4007,
    0x800002fb,0x003fb5f9,0x99999fd8,0x7e999999,0xb1005f80,0x26fea09f,
    0x00fc9999,0x9999fd80,0x26005f99,0x0f90003f,0x2000fec0,0x999999ee,
    0x003fedb9,0x409f50f9,0x222fc05e,0x3217dc4f,0x103f4007,0x200000bf,
    0x8003fdfc,0xfffffffd,0x07ffffff,0xfe9805f8,0x3fffea05,0x000fffff,
    0xffffffd8,0x3e6005ff,0x01f90003,0xd0007f70,0xffffffff,0x6400bfff,
    0x3a01fb07,0x7ec2fc05,0x01f21ba0,0x7ec04f88,0xfd000000,0x33f6000d,
    0xcccccccc,0xef807fcc,0xfdbaaaaa,0x6fd404ff,0x0feccccc,0xcccfd800,
    0x2005fccc,0xf90003f9,0x006f9801,0x99999fd0,0x7fffdd99,0x3e60f900,
    0x5f80bd05,0x07f33f98,0x0fdc00f9,0x0000fea0,0x80017d40,0x03ec007d,
    0x7ffffffc,0xa800cfff,0x001f902f,0x02fc0db0,0x20007f30,0x07f400fc,
    0x2006e800,0x3e405fea,0x0bd05f90,0x36dd05f8,0x2007c80f,0x00df006e,
    0x00bea000,0x36003ec0,0x999ef807,0x54000999,0x001f702f,0x02fc0db0,
    0x20007f30,0x017e406d,0x8800dd00,0x81f203fd,0x405e86f8,0x9f7f505f,
    0x7cc01f20,0xccccccce,0x0001fecc,0x0002fa80,0x07d800fb,0x200005f8,
    0x007102fa,0x01a81b60,0x4000fe60,0x017ea04f,0x003740b2,0x01f206e8,
    0x405e87f7,0x07ffe05f,0xffc803e4,0xffffffff,0x00004fff,0xb0002fa8,
    0x807d800f,0x2a00005f,0xd800002f,0x98590006,0x2f98003f,0xf001ff10,
    0x4001ba0b,0x00f900fb,0x202f41fd,0x813ae05f,0x00bf007c,0x800007d8,
    0xfb0002fa,0xf807d800,0x3ea00005,0x6d800002,0xf98bf000,0x01fc8003,
    0x17e003fb,0xf9800374,0xf300f903,0x17e02f4b,0x500f9000,0x2fa8005f,
    0x17d40000,0x4007d800,0x005f807d,0x000bea00,0x4001b600,0x001fcc5f,
    0x27dc1bea,0x1ba0bf00,0xc80fdc00,0x3a3f9007,0x0002fc05,0x01f601f2,
    0x00017e20,0x20005f50,0x03ec007d,0x500002fc,0xb000005f,0x317e000d,
    0x7fcc007f,0x4006f881,0x000dd05f,0x007c81f6,0xf017adf1,0x07c8000b,
    0xd80027c4,0x2a00000f,0x0fb0002f,0x5f807d80,0x0bea0000,0x01b60000,
    0x0fe62fc0,0xe81ff440,0x82fc001f,0x5fb8006e,0xfb801f20,0x02fc05eb,
    0xf701f200,0x0fe60003,0x02fa8000,0xd800fb00,0x0005f807,0x0000bea0,
    0x7c001b60,0x5c01fcc5,0x07f703ff,0x1ba0bf00,0x405fc980,0x7ff4007c,
    0x0002fc05,0x00dd01f2,0x50006f80,0xddfddddb,0x36a05bdd,0x80ceeffe,
    0x3deffeec,0xddffdd91,0x5003bddd,0xddddfddb,0x640019dd,0xeeeeffee,
    0xeeeeeeee,0xdfdb55fe,0xfddddddd,0x77e405ff,0xeeeeeeee,0x325feeee,
    0xeeeeffee,0xfffeeeee,0x3bffb205,0x3e600cee,0xffed885f,0x6d403dee,
    0x31deffee,0x7bddffdb,0xffeedb80,0x3f2001de,0xffffffff,0xfff904ff,
    0xe881ffff,0x35ffffff,0xffffffff,0xf7007fff,0xffffffff,0x3a2001df,
    0xffffffff,0xffffffff,0xffff75ff,0xbdffffff,0xffff9005,0xffffffff,
    0x3fa2bfff,0xffffffff,0x01bdffff,0x3fffffa2,0x2fec00ef,0x7fffffd4,
    0x7ffec05f,0xff52ffff,0x80bfffff,0xfffffffd,0x00000002,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x7bb91000,0x32a00151,0x00000441,0x00880000,0x400000c0,0x00000000,
    0x00002000,0x08000020,0x00080000,0x0b333326,0x666665c0,0x05555511,
    0xfffff700,0xffd007ff,0x001ff4bf,0x91000000,0x0fd400bf,0xffb75000,
    0x20007dff,0xdeffedb8,0x2e00710b,0x0cdeffed,0xffdc9800,0x2a001cdf,
    0x1deffffd,0x24ccb835,0x3ceffdb8,0x7ffffec0,0xffff8807,0xffff14ff,
    0xbefa800f,0xf5007d50,0x3a63ffff,0x000002ff,0x077fdc00,0x0003f500,
    0x99dffff9,0x4003ffdb,0xecceffea,0x01fabffe,0x333bffa6,0x2002fffe,
    0xfdcdfffc,0x7fcc03ff,0xffedccef,0x3ffe65ed,0xb9bffd37,0xee980bff,
    0x26620019,0x7fffc0df,0x00ff4006,0xfffff700,0x01effa85,0x75400000,
    0xfa8002ef,0x1bdd8001,0x2003fea0,0x3aa01efc,0xff901fff,0x02ff5407,
    0x4c037fa2,0xff980efe,0xbff9100b,0xefafe988,0xc80bf902,0x7f30000f,
    0x00bfffd0,0x20002fc4,0x207ffff8,0x0000dffb,0x1ffecc00,0x003f5000,
    0x05fb8000,0xfb002fdc,0x01df503f,0xfe813f20,0x90bf7003,0x17f6007f,
    0x20077fec,0x07ea01fc,0x1fa804c4,0x004fffd8,0x20000fe6,0x4401dfd9,
    0x0000cffc,0x067fe440,0x007ea000,0x81fa0000,0xfe8006f8,0x00077c41,
    0x0ff207f6,0x6e87f900,0x6c17e200,0x09f000ef,0x4fd81fc4,0xff901f90,
    0x05f8007f,0x26000000,0x00003ffd,0x0001bff7,0x00007ea0,0xfd81f200,
    0x41fb8001,0xdf0001fd,0xd0005f98,0x0007e41f,0x003f6035,0x42fc06e8,
    0x0dd07ff8,0x000bffee,0x000003f9,0x2efea800,0x3dff5000,0x1fa80000,
    0x7c800000,0x440017e0,0x20006f83,0x007ee0fc,0xdf317d40,0x0fb00003,
    0x3ec07d80,0x7c17efdc,0x03fff504,0x0005f880,0xff700000,0x3fa6003d,
    0x5000002f,0x5440003f,0xabceeecc,0x007f307d,0x001fc400,0x03ec3f30,
    0xfa89f100,0x009abcef,0xfb001f60,0x7ec0fb80,0x817cc5f8,0x8000fff9,
    0x000001fa,0xbff91000,0x0fff6601,0x3f500000,0xfff91000,0xfffffdff,
    0x000bea0f,0xfffffa80,0xffffffff,0x3a3fffff,0x43740005,0xfffffec8,
    0x03ec00ce,0x5f301f60,0x5c7da7c4,0x0fff101f,0x00dfd300,0x88000000,
    0xf910cffc,0x7000019f,0xdddddddb,0xdddddddf,0xaeff987b,0x20fd5101,
    0x200001fb,0xcccccdf9,0xcccccccc,0x017e2ccc,0x5300dd00,0x405ffd97,
    0x03ec007d,0x51fb93e2,0x3e03e45f,0x7fdc006f,0x0aa883fc,0x00999988,
    0x5ffd3000,0x0007bfea,0x7fffff40,0xffffffff,0x3e25ffff,0x41f2002f,
    0x200002fa,0x400004f8,0x2fc0006e,0x04fd9800,0x07d800fb,0xbf1f66e8,
    0x13f602f4,0xfb0dfc80,0x444ffb81,0x000fffff,0x41ffec40,0x000dffc8,
    0x00fd4000,0xc8003f90,0x0007f107,0x00006e80,0x880007e4,0x7e40003f,
    0x6c007d80,0x9f17c807,0x04f88fd8,0xbf00064c,0x0fec5f88,0x01ffffd4,
    0x19ff9100,0x0cffd880,0x3f500000,0x40037400,0x001be07c,0x0003fb00,
    0x80017dc0,0x000752fb,0x00fb07f1,0x9fa807d8,0x4d7d41fa,0x5400002f,
    0xf12fb82f,0x1bfff20b,0x1dffb800,0x1fff4c00,0x0fd40000,0x8800bf00,
    0x00ff207e,0x1be21440,0x01fd0000,0x1f66f980,0x3613e200,0x403ec007,
    0xbf07dbf9,0x800001f7,0x2e3fa07c,0x3ffff03f,0x5dfd5000,0xefea8000,
    0x3ea00002,0x003fa001,0x3a03ffd4,0x7fd4000f,0x8002fd40,0x002fcc1b,
    0x17f41fd1,0x360bee00,0x803ec007,0xdf904fef,0xfb00000d,0x07f67cc0,
    0x0027ffcc,0x000fffa6,0x03bff700,0x003f5000,0x7ec027dc,0x7fcc07ef,
    0x3ffd8802,0x2003bfb0,0xefc83ffb,0x21ff5401,0xf7003ffe,0xb001f60d,
    0x07ff600f,0x0002ffd4,0xf9007e40,0x3fff207f,0x9ffb1000,0x22000001,
    0x0000cffc,0xfd0007ea,0xfb73113b,0x9ddf919f,0x37bfd501,0xdffb7511,
    0xacffb803,0xffcb9889,0x33fee03f,0x5ffb531a,0x57bfdfd0,0x3bfae663,
    0x3bffb6a0,0xffd9103d,0x3fdc01bd,0x0000ffe0,0xf980fea0,0x07ffd00f,
    0x019ff910,0x36200000,0xa8000cff,0x7e44001f,0x1effffff,0x807ffff2,
    0xfffffffc,0x362001df,0xffffffff,0xfd8800be,0x0dffffff,0x3ffeeb90,
    0x0bffffff,0x7fffffe4,0xffffd105,0x0000003f,0x03fd0000,0xf109ffd1,
    0xbff700df,0x00000003,0x000fffa6,0x220003f5,0x0009bcca,0x59953100,
    0x4c400013,0x0001acca,0x026f2e62,0x332ea600,0x000000aa,0x00000000,
    0x2ffe6000,0xfdbfeb89,0x03ff71de,0x0002efd8,0xfd500000,0x00fd4009,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0xffffd100,
    0x4fffe25f,0x03b804fc,0x00000000,0x01c40057,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x0acb9800,0x00000300,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x332a0010,0x6665404c,0x9997104c,0x9db51039,0xccccc983,
    0x999301cc,0x65c37999,0xcccccccc,0x6543cccc,0x9301cccc,0x20039999,
    0x04800009,0x8bffff70,0xd72ffffe,0xdddddddd,0xdddddddd,0xbb7107dd,
    0x00000005,0x2ccb8800,0xb83bffb3,0x3e00dffe,0x7f407fff,0xff707fff,
    0xffb85fff,0x3f65ffef,0x05ffffff,0xfffffffd,0x7fffff49,0xffffffff,
    0x7fffffc6,0xfffffd05,0x0013e00d,0xf5009f90,0xffd89fff,0xffff91ff,
    0xffffffff,0x9fffffff,0x4ffefe88,0x00001440,0xdfffb800,0x0ffddffb,
    0x0dfdbffb,0x9807d998,0x26207d99,0xdfd12fa9,0x98ff6215,0x40199fd9,
    0x409dfa99,0x999999fe,0x42fe9999,0x401affa8,0x000affa9,0x7dc0009f,
    0x7fcc02ff,0x7ffe42ff,0x8000000f,0x3bf22fe8,0x0007e880,0x3e620000,
    0x3be60eff,0x01fdc4fd,0x1f6003ec,0x7f4d7cc0,0x3ea02a04,0x80fe4003,
    0x07f9006e,0x260077cc,0x27c001ff,0xe8ef9800,0x3ffe200f,0x3fffd41f,
    0xfe800000,0x221efb81,0x000002fe,0x80fff800,0x6f885ffd,0x6c007d80,
    0xffbf3007,0x03740005,0x06d81be0,0xf9804fc8,0x03ff301f,0x10009f00,
    0x03be61ff,0x4c0ffff8,0x00006fff,0x7cc03b00,0x003ffccf,0xff000000,
    0xd81bea03,0x4007d807,0xfff3007d,0x2fb80003,0x4c05f500,0x002fdc02,
    0xef983ff3,0x27c06600,0x83fd00a8,0x3ffa05fa,0x05fff887,0x20000000,
    0x001effd8,0x3e000000,0xc80be605,0x4007d807,0x1df3007d,0x0bf10000,
    0x50001fa0,0xff3000df,0xd003be63,0x8a7c39df,0xfc83ffda,0x3607f903,
    0x7fff06ff,0x66666654,0xcccccccc,0x002ccccc,0x00000110,0x40bf0000,
    0x01f202f9,0x0fb001f6,0x0000be60,0x7cc01fc8,0x3be60003,0x7fd10000,
    0xd91001df,0xfbdf9dff,0xbf507bff,0xfb82fe80,0x45ffd05f,0xfffffffd,
    0xffffffff,0x0004ffff,0x00000000,0x5f302fc0,0x3ec03e40,0x4c01f600,
    0x2200002f,0x007ec04f,0x000ff880,0x0077fc40,0x7fff64c0,0xdf300bdf,
    0x40ff8801,0xffb04ffa,0x00000003,0x00000000,0x302fc000,0x403e405f,
    0x03ec007d,0x00002f98,0x4f8807ec,0x03fd1000,0x5fff5000,0x3ffe8000,
    0x8007f440,0x17fcc6f9,0x0000ffc8,0x00000000,0x20000000,0x80be605f,
    0x007d807c,0x2f9803ec,0x1fcc0000,0xd0001fc8,0xf700005f,0x0005fd3d,
    0x803fb3ee,0x7d4002f9,0xf9807f40,0x00000005,0x00000000,0x302fc000,
    0x403e405f,0x03ec007d,0x00002f98,0x00bf07e8,0x0000bf60,0x7f4437ee,
    0x9b7cc002,0x0000006f,0x00002004,0x00000000,0x20000000,0x80be605f,
    0x007d807c,0x2f9803ec,0x2fa80000,0x640017d4,0x5c00803f,0x03fe885f,
    0x7dc1ff10,0x00000004,0x00000000,0x00000000,0x02fc0000,0x03e405f3,
    0xf98007e4,0x005f3007,0xdd1be000,0x009f7000,0x17f203f3,0xd803fd88,
    0x882fe82f,0xffffffff,0xffffffff,0x2aaaa60f,0xaaaaaaaa,0xaaaaaaaa,
    0x000001aa,0x00000000,0x7cc0bf00,0x2e01f202,0x7ffb803f,0x0005f300,
    0x7cc7ee00,0x02fd4003,0x5fc82fa8,0x4c07fb00,0x10df104f,0xffffffff,
    0xffffffff,0x3fffe61f,0xffffffff,0xffffffff,0x0002ffff,0x00000000,
    0x205f8000,0x01f202f9,0xff901be6,0x0be600fd,0xafc40000,0x3e6000fd,
    0x90bea006,0x4fd800bf,0x103100a0,0x77777777,0x77777777,0xaaaaa987,
    0xaaaaaaaa,0xaaaaaaaa,0x0000001a,0x00000000,0x17cc0bf0,0x3f200f90,
    0xffdb98be,0x10defd8c,0xddfb9999,0x07bddddd,0x27f7e400,0xdddff100,
    0xdddddddd,0x3ff6e5fd,0xdb502dee,0x0005bffd,0x00000000,0x00000000,
    0x00000000,0x3fb66000,0xdef984ef,0x01defc83,0x7fffffe4,0x4bfff62e,
    0xfffffffa,0x6fffffff,0x3ffe2000,0x3ffe6000,0xffffffff,0xffb2ffff,
    0x3209ffff,0x04ffffff,0x00000000,0x00000000,0x00000000,0xff500000,
    0xf981dfff,0xfffc85ff,0xabcb9802,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
};

static signed short stb__courier_47_usascii_x[95]={ 0,9,5,3,4,3,5,9,12,6,0,2,6,3,
9,4,4,4,3,3,4,3,5,4,4,5,9,6,0,2,0,0,4,0,1,2,3,1,3,2,2,4,3,1,
2,0,0,0,3,2,1,3,2,1,0,0,1,2,4,0,0,0,4,1,8,2,0,3,2,2,4,2,1,3,
3,3,3,0,2,2,0,2,3,4,2,1,1,1,2,3,4,0,11,0,3, };
static signed short stb__courier_47_usascii_y[95]={ 34,7,9,6,6,8,12,8,8,8,8,11,27,21,
29,5,7,8,7,7,8,8,7,8,7,7,16,16,11,18,11,9,7,10,10,9,10,10,10,9,10,10,10,10,
10,10,10,9,10,9,10,9,10,10,10,10,10,10,10,8,5,8,8,43,7,15,8,15,8,15,8,15,8,7,
7,8,8,15,15,15,15,15,16,15,10,16,16,16,16,16,16,8,8,8,19, };
static unsigned short stb__courier_47_usascii_w[95]={ 0,6,15,19,17,19,16,7,8,7,16,20,9,19,
7,17,17,17,17,18,16,18,17,16,17,17,7,10,20,21,20,15,16,25,22,21,21,21,21,22,21,17,22,23,
21,25,24,21,20,21,24,19,20,23,25,25,23,21,17,7,16,7,17,26,8,21,23,20,23,20,19,22,22,19,
14,21,19,25,21,20,23,23,20,17,20,22,23,23,21,21,17,9,3,9,19, };
static unsigned short stb__courier_47_usascii_h[95]={ 0,28,12,31,32,27,23,13,32,32,16,22,14,3,
6,33,28,26,27,28,26,27,28,27,28,28,19,23,22,9,22,26,30,24,24,26,24,24,24,26,24,24,25,24,
24,24,24,26,24,30,24,26,24,25,24,24,24,24,24,32,33,32,12,3,7,20,27,20,27,20,26,27,26,27,
35,26,26,19,19,20,27,27,18,20,25,19,18,19,18,26,18,32,32,32,7, };
static unsigned short stb__courier_47_usascii_s[95]={ 255,203,198,126,83,152,1,241,117,109,163,
71,246,180,246,16,185,130,208,210,148,189,229,172,1,19,247,18,50,214,29,
185,146,224,150,201,110,88,66,223,23,237,46,213,191,198,173,108,45,163,69,
165,146,1,94,120,167,1,132,101,34,75,180,200,247,92,128,114,81,135,23,
105,43,61,1,1,88,29,195,156,37,226,78,177,25,55,99,217,141,66,123,
61,71,51,236, };
static unsigned short stb__courier_47_usascii_t[95]={ 1,1,167,1,1,37,144,144,1,1,167,
144,66,180,81,1,1,66,37,1,66,37,1,37,37,37,1,144,144,167,144,
66,1,119,119,66,119,119,119,66,119,93,93,93,93,119,119,66,119,1,93,
66,93,93,93,93,93,119,119,1,1,1,167,180,21,144,37,144,37,144,66,
37,66,37,1,66,66,167,144,144,37,37,167,144,93,167,167,144,167,66,167,
1,1,1,167, };
static unsigned short stb__courier_47_usascii_a[95]={ 398,398,398,398,398,398,398,398,
398,398,398,398,398,398,398,398,398,398,398,398,398,398,398,398,
398,398,398,398,398,398,398,398,398,398,398,398,398,398,398,398,
398,398,398,398,398,398,398,398,398,398,398,398,398,398,398,398,
398,398,398,398,398,398,398,398,398,398,398,398,398,398,398,398,
398,398,398,398,398,398,398,398,398,398,398,398,398,398,398,398,
398,398,398,398,398,398,398, };

// Call this function with
//    font: NULL or array length
//    data: NULL or specified size
//    height: STB_FONT_courier_47_usascii_BITMAP_HEIGHT or STB_FONT_courier_47_usascii_BITMAP_HEIGHT_POW2
//    return value: spacing between lines
static void stb_font_courier_47_usascii(stb_fontchar font[STB_FONT_courier_47_usascii_NUM_CHARS],
                unsigned char data[STB_FONT_courier_47_usascii_BITMAP_HEIGHT][STB_FONT_courier_47_usascii_BITMAP_WIDTH],
                int height)
{
    int i,j;
    if (data != 0) {
        unsigned int *bits = stb__courier_47_usascii_pixels;
        unsigned int bitpack = *bits++, numbits = 32;
        for (i=0; i < STB_FONT_courier_47_usascii_BITMAP_WIDTH*height; ++i)
            data[0][i] = 0;  // zero entire bitmap
        for (j=1; j < STB_FONT_courier_47_usascii_BITMAP_HEIGHT-1; ++j) {
            for (i=1; i < STB_FONT_courier_47_usascii_BITMAP_WIDTH-1; ++i) {
                unsigned int value;
                if (numbits==0) bitpack = *bits++, numbits=32;
                value = bitpack & 1;
                bitpack >>= 1, --numbits;
                if (value) {
                    if (numbits < 3) bitpack = *bits++, numbits = 32;
                    data[j][i] = (bitpack & 7) * 0x20 + 0x1f;
                    bitpack >>= 3, numbits -= 3;
                } else {
                    data[j][i] = 0;
                }
            }
        }
    }

    // build font description
    if (font != 0) {
        float recip_width = 1.0f / STB_FONT_courier_47_usascii_BITMAP_WIDTH;
        float recip_height = 1.0f / height;
        for (i=0; i < STB_FONT_courier_47_usascii_NUM_CHARS; ++i) {
            // pad characters so they bilerp from empty space around each character
            font[i].s0 = (stb__courier_47_usascii_s[i]) * recip_width;
            font[i].t0 = (stb__courier_47_usascii_t[i]) * recip_height;
            font[i].s1 = (stb__courier_47_usascii_s[i] + stb__courier_47_usascii_w[i]) * recip_width;
            font[i].t1 = (stb__courier_47_usascii_t[i] + stb__courier_47_usascii_h[i]) * recip_height;
            font[i].x0 = stb__courier_47_usascii_x[i];
            font[i].y0 = stb__courier_47_usascii_y[i];
            font[i].x1 = stb__courier_47_usascii_x[i] + stb__courier_47_usascii_w[i];
            font[i].y1 = stb__courier_47_usascii_y[i] + stb__courier_47_usascii_h[i];
            font[i].advance_int = (stb__courier_47_usascii_a[i]+8)>>4;
            font[i].s0f = (stb__courier_47_usascii_s[i] - 0.5f) * recip_width;
            font[i].t0f = (stb__courier_47_usascii_t[i] - 0.5f) * recip_height;
            font[i].s1f = (stb__courier_47_usascii_s[i] + stb__courier_47_usascii_w[i] + 0.5f) * recip_width;
            font[i].t1f = (stb__courier_47_usascii_t[i] + stb__courier_47_usascii_h[i] + 0.5f) * recip_height;
            font[i].x0f = stb__courier_47_usascii_x[i] - 0.5f;
            font[i].y0f = stb__courier_47_usascii_y[i] - 0.5f;
            font[i].x1f = stb__courier_47_usascii_x[i] + stb__courier_47_usascii_w[i] + 0.5f;
            font[i].y1f = stb__courier_47_usascii_y[i] + stb__courier_47_usascii_h[i] + 0.5f;
            font[i].advance = stb__courier_47_usascii_a[i]/16.0f;
        }
    }
}

#ifndef STB_SOMEFONT_CREATE
#define STB_SOMEFONT_CREATE              stb_font_courier_47_usascii
#define STB_SOMEFONT_BITMAP_WIDTH        STB_FONT_courier_47_usascii_BITMAP_WIDTH
#define STB_SOMEFONT_BITMAP_HEIGHT       STB_FONT_courier_47_usascii_BITMAP_HEIGHT
#define STB_SOMEFONT_BITMAP_HEIGHT_POW2  STB_FONT_courier_47_usascii_BITMAP_HEIGHT_POW2
#define STB_SOMEFONT_FIRST_CHAR          STB_FONT_courier_47_usascii_FIRST_CHAR
#define STB_SOMEFONT_NUM_CHARS           STB_FONT_courier_47_usascii_NUM_CHARS
#define STB_SOMEFONT_LINE_SPACING        STB_FONT_courier_47_usascii_LINE_SPACING
#endif

