// Font generated by stb_font_inl_generator.c (4/1 bpp)
//
// Following instructions show how to use the only included font, whatever it is, in
// a generic way so you can replace it with any other font by changing the include.
// To use multiple fonts, replace STB_SOMEFONT_* below with STB_FONT_courier_bold_23_latin1_*,
// and separately install each font. Note that the CREATE function call has a
// totally different name; it's just 'stb_font_courier_bold_23_latin1'.
//
/* // Example usage:

static stb_fontchar fontdata[STB_SOMEFONT_NUM_CHARS];

static void init(void)
{
    // optionally replace both STB_SOMEFONT_BITMAP_HEIGHT with STB_SOMEFONT_BITMAP_HEIGHT_POW2
    static unsigned char fontpixels[STB_SOMEFONT_BITMAP_HEIGHT][STB_SOMEFONT_BITMAP_WIDTH];
    STB_SOMEFONT_CREATE(fontdata, fontpixels, STB_SOMEFONT_BITMAP_HEIGHT);
    ... create texture ...
    // for best results rendering 1:1 pixels texels, use nearest-neighbor sampling
    // if allowed to scale up, use bilerp
}

// This function positions characters on integer coordinates, and assumes 1:1 texels to pixels
// Appropriate if nearest-neighbor sampling is used
static void draw_string_integer(int x, int y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0, cd->t0); glVertex2i(x + cd->x0, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t0); glVertex2i(x + cd->x1, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t1); glVertex2i(x + cd->x1, y + cd->y1);
        glTexCoord2f(cd->s0, cd->t1); glVertex2i(x + cd->x0, y + cd->y1);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance_int;
    }
    glEnd();
}

// This function positions characters on float coordinates, and doesn't require 1:1 texels to pixels
// Appropriate if bilinear filtering is used
static void draw_string_float(float x, float y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0f, cd->t0f); glVertex2f(x + cd->x0f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t0f); glVertex2f(x + cd->x1f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t1f); glVertex2f(x + cd->x1f, y + cd->y1f);
        glTexCoord2f(cd->s0f, cd->t1f); glVertex2f(x + cd->x0f, y + cd->y1f);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance;
    }
    glEnd();
}
*/

#ifndef STB_FONTCHAR__TYPEDEF
#define STB_FONTCHAR__TYPEDEF
typedef struct
{
    // coordinates if using integer positioning
    float s0,t0,s1,t1;
    signed short x0,y0,x1,y1;
    int   advance_int;
    // coordinates if using floating positioning
    float s0f,t0f,s1f,t1f;
    float x0f,y0f,x1f,y1f;
    float advance;
} stb_fontchar;
#endif

#define STB_FONT_courier_bold_23_latin1_BITMAP_WIDTH         256
#define STB_FONT_courier_bold_23_latin1_BITMAP_HEIGHT        140
#define STB_FONT_courier_bold_23_latin1_BITMAP_HEIGHT_POW2   256

#define STB_FONT_courier_bold_23_latin1_FIRST_CHAR            32
#define STB_FONT_courier_bold_23_latin1_NUM_CHARS            224

#define STB_FONT_courier_bold_23_latin1_LINE_SPACING          11

static unsigned int stb__courier_bold_23_latin1_pixels[]={
    0x0e440280,0x0fbb2059,0x00774c00,0x00130019,0x10006440,0x0006e009,
    0x03100062,0x18000000,0x9803d980,0x25c97003,0x2e03bddb,0x00730002,
    0x2da800c4,0xfa80dd10,0x3fe0df14,0xff30004f,0x300fec01,0x3a6000bf,
    0x017e6006,0xf5001fdc,0x3fea007f,0x880d9003,0x52fb804e,0x04ffb83f,
    0x3a006fc4,0x3fe1fd0f,0x07f703ff,0x5004fa80,0xffa807ff,0x800df984,
    0xfc80260a,0x00660004,0x1ff80bf2,0x002fcc00,0xfa8009f5,0xfabfd804,
    0x7ddfec06,0x200ff806,0x1ff805fc,0x0ff50df5,0x7401dd10,0x3fe1fd0f,
    0x027d4009,0xfb003fb8,0x7ec0df57,0x00009503,0x018a7dc0,0x80aa0000,
    0x1cc004fc,0x4000aa00,0x221c8039,0xc887200c,0xdfffd500,0x401ff88b,
    0x41ffc5fb,0x802e007f,0x3e1fd0fe,0x0071000f,0x21c8006e,0x01fd00c8,
    0x27ffd400,0xfb87fff7,0x82efffdd,0x2ffffffe,0x07fc4000,0x0cc00000,
    0x30006600,0xf3000003,0xc8fffdff,0x41fe806f,0x007f86fb,0x7f43fa00,
    0x00001ff0,0xd0000000,0x93ffea1f,0xff53fffb,0x27ffdcbf,0x3fbfffee,
    0x7fff42ff,0xfff72fff,0x9fffd15f,0x3ee04fc8,0xffe8afff,0xffffb84f,
    0x7fffdc04,0x7fffdc04,0xaffffb84,0x364fffe8,0xff1fa23f,0x886fa805,
    0x983fc2ff,0x202fffff,0x3e1fd0fe,0x7fffd40f,0x2a5fffff,0xffffffff,
    0x3fffea5f,0xe85fffff,0x4bfff50f,0x3ea4fffb,0xfb83fd86,0x1ff710cf,
    0xff72fd80,0xfffd15ff,0x700ff88b,0xfd15ffff,0xfffd8bff,0xfd80effe,
    0x80effeff,0xeffefffd,0x2bfffee0,0x365fffe8,0xff30c42f,0x3605fd00,
    0x4c07fc3f,0x206fffff,0x7fc3fa7d,0x7ffffd40,0x3ea5ffff,0xffffffff,
    0x3ffffea5,0xff85ffff,0x3f61bea0,0x3e63fe83,0xd06fb80f,0x22fd805f,
    0x05f983fb,0x1fdc07fb,0x3fee2fcc,0xf717faa3,0x22ff547f,0x3faa3ffb,
    0x7cc1fdc5,0x0e77fd45,0x3e6037d4,0xfb17f206,0x3ffe205f,0x0fe8201f,
    0x21fe01ff,0x987f85f9,0xf987f85f,0x3a1bfea5,0x203fe63f,0x40ff66f9,
    0x09f705fb,0x0fee2fd8,0x3fcc17e6,0xbf307f70,0x7c417fc4,0x105ff11f,
    0x0bfe23ff,0x3fb87fe2,0xfea85f98,0x17ee2eff,0x7d407fb0,0xb81ffe46,
    0xd004fcdf,0x7c03fe1f,0x213e26a7,0x13e26a7f,0x4f89a9fe,0x3e617fea,
    0xfe80ff66,0x3ee07f9b,0x402fe80f,0x20fee2fd,0x0ff605f9,0x2fcc1fdc,
    0x9fec0ff3,0x4ff607f9,0x8ff607f9,0x05f983fb,0xfc9bfae6,0x501fe605,
    0x201ff8df,0x707f8afe,0x0ff87f49,0x4d7e2ff0,0x2bf17f80,0xbf17f809,
    0x20ff1026,0x407f9bfe,0x203feff9,0xebacfffb,0x17ec00ef,0x0bf307f7,
    0x3fb837d4,0x13ee5f98,0x09f75fa8,0x04fbafd4,0x83fb97ea,0x640e45f9,
    0x6c0df52f,0x22fdc03f,0xd9fe607f,0xfd0fe82f,0x7fc03fe1,0x7fc06fff,
    0x7fc06fff,0x7f406fff,0x3feff980,0x407ffd80,0xfffffffb,0x22fd801e,
    0x05f983fb,0x1fdc17f4,0x09f72fcc,0x04fbafd4,0x027dd7ea,0x41fdcbf5,
    0x21be65f9,0x20ff31fe,0x7ec00ff8,0xbf903fc4,0xfd0df955,0x07fc3fa1,
    0x06fffff8,0x037ffffc,0x01bffffe,0x3ff601fd,0x07ff3007,0xcdc9cfb8,
    0xb8bf6002,0x405f983f,0x83fb86fa,0x81fe65f9,0x40ff33fd,0x40ff33fd,
    0x20fee3fd,0x3ffea5f9,0x3e26ffcc,0x804fc81f,0x883fc2ff,0xffffffff,
    0x0fe87f41,0x45fe01ff,0x2ff0515f,0xff0515f8,0x741457e2,0x07ff300f,
    0x2e01fea0,0x7ec0004f,0x3ea17ea1,0x541fe804,0x224fa85f,0x1ff882ff,
    0xff105ff1,0x220bfe23,0x217ea1ff,0x3ffe64fa,0x7e41dfff,0x2007fc45,
    0x707f87fa,0xfdddddff,0x1fd0fe89,0x33fc03fe,0x4ff03f61,0x7f81fb09,
    0x3a07ec26,0x00ff500f,0x7dc01ff4,0x3fe60004,0xf98bfe20,0x45fb802f,
    0x3fe62ff8,0xa85ffdc2,0x5ffdc5fe,0xfb8bfd50,0x8bfd50bf,0x3fe62ff8,
    0x01ff9842,0x27dc3ff3,0xff31ff40,0x220bfa09,0xfe87f47f,0xf83bdff0,
    0x7f83fd07,0x07f83fd0,0x2ffc83fd,0x36603fe8,0x200dffee,0x804eefec,
    0x84ffeeec,0x5ffefffb,0xf707fe00,0x20bffdff,0xeffefffd,0xfefffd80,
    0xfffd80ef,0xfb80effe,0x405ffeff,0x53f600ff,0x7d401ff8,0x3037ee0f,
    0x7dcbffff,0x6cfb2fff,0x54ffffe7,0xffffffff,0xffff51ff,0x23ffffff,
    0xfffffffa,0xcfd81fff,0x0dffeed9,0xffffff70,0x7ffffc05,0x7fffc407,
    0x3ffea04f,0x17dc004f,0x027fffd4,0x013fffee,0x809ffff7,0x404ffffb,
    0x804ffffa,0x9afc407e,0x82fb805f,0x9fffd300,0x117fffdc,0xa8266608,
    0xffffffff,0xffff51ff,0x23ffffff,0xfffffffa,0x2e101fff,0x02ffffff,
    0x00266662,0x00133331,0x4c003331,0x30060001,0x00198003,0x066000cc,
    0x4c003300,0x00098002,0x00000001,0x00000000,0x44000000,0x00009999,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x4001b800,0x00330039,0x031000c4,
    0x01dddb10,0x32004771,0x4c4016e4,0x00370000,0x24c80398,0x07b7005b,
    0x0754fa20,0x0036a5b8,0x00011dc4,0x99001000,0x5c9902dc,0x801fdc05,
    0x7fdc04fa,0x3ea00cff,0x4ffa803f,0x07fffd40,0x3f3bfbe2,0x0fd9be02,
    0x3bfffae0,0x0fd8806d,0x2013ea00,0x1003f66f,0xf300391b,0x3f40bf6b,
    0xdf1003f9,0x2005f9df,0x2217a219,0x3e00effd,0x37c03f66,0x4fa801fb,
    0x3601fdc0,0x0effefff,0x06fbbfd8,0x03beb3f2,0x440ff988,0x8807b912,
    0xdff90040,0x401ffffd,0x2e000ee8,0x0811003f,0x01d8d880,0x03fb5fa8,
    0x94400204,0xfb803dc8,0x85fdbeff,0x00febcfe,0x02200811,0x700e6001,
    0x23ffb803,0x21c85fea,0x443900c8,0x00fe801c,0x03300066,0x7dc1ffb8,
    0x000e200f,0x0000006e,0xfa801f5c,0x00003fd4,0x7fec0000,0x40ffffef,
    0x00be61fa,0x00000000,0x417fc400,0x00001ff8,0x203fa000,0x404ffffb,
    0xd04ffffb,0x003f603f,0x7dc00000,0xffe8afff,0x3200004f,0x981fe9df,
    0x402fffff,0x3fa26ffe,0x1ffdc5ff,0x0b90dff5,0x7fffd49d,0x225fffff,
    0xfffffffe,0x3ffffa21,0xffd11fff,0x2a3fffff,0x44ff607f,0xfffffffe,
    0x7ffffcc1,0xd81fd002,0x0effefff,0xffefffd8,0x881fe20e,0xfffff981,
    0x93ffea02,0xff73fffb,0xfffd15ff,0xfffff98b,0x3fffe602,0x7cc5ffff,
    0x7406ffff,0xffd13fff,0x117fc4bf,0x3e83ffff,0xffa93f26,0x5fffffff,
    0x3fffffa2,0x3ffa21ff,0xd11fffff,0x3fffffff,0x5fa813ee,0xffffffd1,
    0xffff983f,0x41fd006f,0x3faa3ffb,0xd51ffdc5,0x002fd4bf,0x37ffffcc,
    0x649fff50,0x0fee3fff,0x3fe617e6,0x36206fff,0x3effeeff,0x03ffff10,
    0x260fffb8,0x3a3fcc5f,0x3e24fcdf,0xf09fff92,0x7c0bf30f,0x01ff000f,
    0x9f701ff0,0xff82fd40,0xffff8800,0xf10fe801,0x23ff105f,0xff882ff8,
    0x40009f51,0x401ffff8,0x03fea3fe,0x0bf307f7,0x00ffffc4,0x01be2bf2,
    0x809f9bf7,0x3e65fffb,0xdf927dc5,0x4fccbf51,0xff09d3f8,0xf027c4d4,
    0x03fe001f,0x3e203fe0,0x7c0ff607,0xcdfb800f,0x30fe804f,0x99fec0ff,
    0x44ff607f,0x3ee0007f,0x7cc04fcd,0xb83fe89f,0x205f983f,0x404fcdfb,
    0x406f99fd,0x407f8afe,0xf32ffcfb,0xff54fb8b,0x9f997ea3,0xff09d0fa,
    0xf004d7e2,0x03fe001f,0x7f403fe0,0xf01ff882,0x15fd001f,0x21fd00ff,
    0x57ea04fb,0x97ea04fb,0xe80202fe,0xc807f8af,0xf705fcef,0x740bf307,
    0xd507f8af,0x3bffddff,0x17ecff30,0x1ff57f70,0x9efa8bf3,0x98ff62ff,
    0x09d3bf1f,0x00dfffff,0x7fc003fe,0x700ff800,0x3faa17ff,0x3003fe05,
    0x2017ecff,0x409f70fe,0x409f75fa,0x2fbf25fa,0x260bf620,0x200bf67f,
    0xf700fffe,0x260bf307,0x320bf67f,0xffffffff,0xcaadfc82,0x6cfee06f,
    0x7c45f9df,0x3fe24fef,0x7fdcfe21,0xfffff87f,0x001ff006,0x3fe003fe,
    0x3bffee00,0x3fe00eff,0x556fe400,0x87f406fc,0x4ff607f9,0x0ff607f9,
    0xffddfff9,0x55bf901f,0xff300df9,0x4c1fdc05,0x55bf905f,0x3fe20df9,
    0xff105fb9,0x03ffffff,0x67fc4fee,0x26ffb85f,0x45e85fea,0xf17f81aa,
    0x0ff80a2b,0xf001ff00,0xfffa801f,0x00ff804f,0x3fffffe2,0x43fa01ff,
    0xff882ff8,0xf105ff11,0xfffb703f,0xfff101bf,0x003fffff,0x2fd401fd,
    0x7fc427d4,0x01ffffff,0x5c13eeff,0xfeeeeeff,0x7dc7f704,0xfffb85ff,
    0xd80effee,0x4cff000f,0x3fe01fb0,0x001ff000,0xffc801ff,0xf01b88be,
    0x77fdc01f,0x204feeee,0x2ffee0fe,0xfb8bfd50,0x0bfd50bf,0x7dc00eb8,
    0x4feeeeef,0x2200fe80,0x0bfe62ff,0x3bbbbfee,0x77f884fe,0x20bfa07f,
    0x87f707f8,0x7fcc5ffe,0x204fffec,0x03910cf9,0x407fa0ff,0x1ff000ff,
    0x5c01ff00,0xffffffff,0x7401ff04,0x447f882f,0x7ec0ffed,0x80effeff,
    0xeffefffd,0x2027dc00,0x07f882fe,0x7dc00fe8,0xd05ffeff,0x10ff105f,
    0xf30bf2df,0x7fdcbfff,0x3ffee2ff,0xc8bff32f,0x5c00623f,0x2a1ffeff,
    0xffffffff,0xfffd11ff,0x7443ffff,0x1fffffff,0xffffffd1,0xbcdea83f,
    0xfd10beed,0x23ffffff,0x2e5ffff9,0xff52ffff,0xfff701ff,0xfffb809f,
    0x6eed804f,0x4bffff30,0x542ffffb,0x03ffffff,0x213fffea,0x2e5ffff9,
    0x9ec2ffff,0x7ff4c0d9,0x3fffee4f,0x8bfffee2,0x001445fc,0x502b2e60,
    0xffffffff,0x3ffa23ff,0x221effff,0xeffffffe,0xfffffd11,0x440003df,
    0xeffffffe,0x49fffd31,0x222ffffb,0x00cc0199,0xc9800660,0xfffd301d,
    0x17fffdc9,0x3fffffea,0x26019803,0x3ee4fffe,0x00002fff,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x44771000,0x00035000,0x001000a2,
    0x36600088,0x4400000c,0x80008002,0x00040028,0x02000000,0x7776dcc0,
    0x0026204e,0x88000800,0xffd70009,0xd04c85ff,0x007f7fdd,0xd3000bf2,
    0x0bfa600b,0x3a007d80,0x7e4c03b9,0x17e601cf,0x0b7ff620,0x98027cc0,
    0x7ec402fe,0x3ffd41df,0x5c05fff7,0x3ff200df,0x983dfcff,0xffeefffe,
    0x4c07fe65,0x3ffa02fe,0x01efffdd,0x3f3337f2,0x71407fc2,0x3fb8007d,
    0x2009f500,0x005fcdfb,0x23a001ff,0x3ffe204a,0x3a602fff,0x3fffa00e,
    0x27dc01ff,0x5fcdfb80,0xfffffd10,0xf73ffdc1,0x7fd105ff,0x3df505fd,
    0xf305f1f7,0xfffffdff,0x5c27fdcb,0xfd05fcdf,0xfffdffff,0x5f10fe05,
    0x00000088,0x03c80254,0x01d98b60,0xd5000ff8,0x867e401b,0x0e4406fb,
    0xdf71efa8,0x36002c80,0x3ee03662,0xf85fc88d,0xda82fc87,0x4ff612e0,
    0xfe82f8fb,0x85ffb10d,0x22d84ffb,0xbff700d9,0x2607fdc3,0x3000b85f,
    0x005fffff,0x310004c4,0x004c4001,0x44003fe0,0x743fc009,0xc802601f,
    0x201ff43f,0x004c0009,0x87f887f6,0x002fc87f,0x8fb9fec0,0x207fc42f,
    0x7fdc2ff8,0x2e002203,0x5c7fb06f,0x6400dfff,0xfffff984,0xffffc806,
    0x3fff203e,0x3ff203ef,0x99503eff,0x07999ff9,0x07dffff9,0x0ff887fe,
    0x67fffec4,0x3ee0fec0,0xffffd884,0xfffb100c,0xd0ff019f,0xfc87f83f,
    0xfa9ffea2,0x27bee2ff,0x7cc2f8fb,0xfa85fb05,0xeffeb82f,0x20bf700c,
    0x2a37a4fb,0x03fe03ff,0x00ffffc4,0x3ffbbffe,0xfddfff02,0x3bffe05f,
    0x7fc42ffe,0xffffffff,0x7f77ffc1,0xcdffb82f,0x7ffc45ff,0x7d46ffee,
    0xf117fe24,0x0dffddff,0xffddfff1,0xfb85f98d,0x17e43fc3,0x7fdcfff5,
    0x7fffe42f,0x07fc42f8,0xff30bfe2,0xfffffc83,0x0ffb80ef,0x47f22ff8,
    0x7c41efd8,0xf9bf700f,0x7cc08809,0x6f981106,0x86f98110,0xabffaaa9,
    0x7cc0882a,0xffffff06,0x220efe81,0x2ffe24fe,0x7f47ffea,0xd13fa20e,
    0x27f441df,0x87f70bf5,0x0bfaa0ff,0x20bf21fe,0x82f8feb9,0xffb10dfe,
    0x2e1ff885,0x17faa2ef,0x32b3ffee,0x3fa20efe,0xf98bfa64,0xf15fd01f,
    0xdddb700f,0x776dc0ff,0x3b6e07fe,0xff807fee,0xeeedb800,0xdeffc87f,
    0x37fe25ff,0x47fdcccc,0x6ffffffb,0x33337fe2,0x3fe27fdc,0x7fdccccd,
    0x0fee17ea,0xffffdfff,0xfc87f85f,0x0be3ee02,0x3ffbffe6,0x20ff82ff,
    0x87f882fe,0xfffffffb,0x45ff900e,0x20bfea7d,0x80bf67f9,0x7ffffffe,
    0xffffffd0,0x3ffffa0f,0x0ff807ff,0x7fffff40,0x117fc47f,0x3ffe63ff,
    0x0fffffff,0x27e5f5c4,0xfffffff3,0x3fe61fff,0xffffffff,0x3fb0ff10,
    0xeefffff8,0x643fc2ff,0x3e3ee02f,0xdfffd302,0xf8fd05fd,0xf707f607,
    0x0017b939,0x1f95bfb3,0x3f20ffee,0x706fcaad,0xff5337df,0x5337df70,
    0x37df70ff,0xff00ff53,0x4df7dc01,0x37cc7fa9,0xcff89fe4,0x0ccccccc,
    0xf88bfe60,0xcccccccf,0x999ff10c,0x74199999,0x3e1fe21f,0x7f801a9f,
    0x3ee02fc8,0x84c402f8,0x740882fd,0x40ff881f,0x5c0004fb,0x3fee3fff,
    0x7ffffc44,0x0ff81fff,0x3fe1ff22,0x3e1ff220,0x01ff220f,0x41ff01f6,
    0x7fc47fc8,0xfe87fa21,0x880cc40d,0xdfe85feb,0x3fa0cc40,0x320cc40d,
    0xf09f70df,0x20ff800f,0x3ee02fea,0x3e6002f8,0x3df9000f,0x7dc37ecc,
    0x2a064004,0x21ffdc2f,0xeeeeeffb,0xedffc84f,0x322fffff,0xffffedff,
    0x3b7ff22f,0x402fffff,0x76ffe400,0x362fffff,0x46ffeeff,0xffeefff9,
    0xffdf90ff,0x3ffe60df,0x20ffffee,0xffeefff9,0x3ffa20ff,0x07f81ffe,
    0x7ff7fec0,0x1f702fff,0x7776405f,0x889904ff,0xeffeeffd,0x2777f641,
    0x3ee17c40,0x3a07fc41,0x887f882f,0xffdffffd,0x3fff622f,0x222fffdf,
    0xffdffffd,0x3ffffa2f,0x220fffff,0xffdffffd,0x7fffe42f,0xfffd980d,
    0x3fee3eff,0x7ecc03ff,0x983effff,0x3efffffd,0x02fffe98,0xfe8800dd,
    0x42ffeeff,0x3efbfeec,0x4fffff88,0xf901ff10,0xff01bfff,0xf100ffff,
    0x00bfdddd,0xb97fffe6,0x3302ffff,0x004cc001,0xfe801330,0xffffffff,
    0x40013300,0x33310018,0x44000980,0x33100199,0x10062003,0x02620001,
    0x3af7bb20,0x0333104e,0x01880110,0x004cccc4,0x1ef77744,0x9fffd300,
    0x017fffdc,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x2e000000,0x00028804,
    0x00144002,0x0004c001,0x144000a2,0x4002f260,0x6ec400cc,0x02000063,
    0x5c000400,0x02eeeeee,0x54000000,0xeeeeeeee,0xdd880101,0xb93ffea0,
    0x1fd03fff,0x2004f980,0x203ffec9,0x7ed405e9,0xffb102df,0x03dff9df,
    0x980037e2,0x3b3ea05e,0x02ff9807,0x7ffffec4,0x0e7ff540,0xa800ff66,
    0xfc8003fd,0x265fffff,0x50004ffd,0x2e059dd9,0xffffffff,0x5017f4c2,
    0x7ffd47ff,0x413ffee5,0x5f9800fe,0xfefff980,0xc80bf506,0x43ffffff,
    0xfffefff8,0x3a201fff,0x04fa800e,0x3005d174,0xfffb1003,0xffffc83f,
    0x0feea1ff,0x003fbb80,0x1999bfc8,0x017c45d4,0x326aff20,0x99bfa85e,
    0x3f21ff99,0x33204fcc,0x7ec37d40,0x37bff303,0x2600d880,0x5c010cff,
    0x50bee803,0x22efd8df,0x91006ffa,0xd0079003,0x00001ec5,0x4df717b3,
    0xbf712ff9,0x7f0007f0,0x005f9000,0xc800bf2a,0x42ec198d,0x3626f981,
    0x20003662,0x03fe63fe,0xffffff91,0x09ff0000,0x7ec00000,0xf701ff11,
    0x8001100d,0x5d75c008,0x804b800f,0x2fe9aba8,0x81fd07f5,0xf017103f,
    0x7e415407,0xd900bdcc,0xfa83883f,0x364ffff8,0x004fc803,0xd9be6000,
    0x9befc83f,0xfff50ffb,0xf317ffd4,0x27ffa80b,0x9802fffa,0x20df30ff,
    0x3fae06fa,0x3ae00cef,0xd700ceff,0x209fb55b,0x7ffd407e,0x2064ffff,
    0x41fc0ff8,0x83f82ffa,0xffc85fd8,0x3a02ffff,0x7903fee5,0x6a96c5a6,
    0x7e41fe80,0x20000fff,0xf07f9bfe,0x3ea6d83f,0x8bffee7f,0x43efdcfb,
    0x3fee7ffa,0xffdb302f,0xfe82ff89,0xfffff906,0xfff901df,0x2a01dfff,
    0xe982dffd,0xdff500ff,0x80bffd77,0x37eaa6fd,0xa83dfb12,0xff70adfa,
    0x2b3bee07,0x75770ffd,0x01dfd37f,0x3aa7a63d,0x7cc01f12,0x0ffffc86,
    0x7cc0bfb0,0x6f983fef,0x3f21fe00,0x3fffff62,0xfc87f86f,0x3ffff502,
    0xebadffc8,0x2efb86ff,0xdf717faa,0xb12ff545,0x2e0559ff,0x3fa02eff,
    0x3606fe85,0x3332e0ef,0x1cacffbc,0x3af3332e,0x082ddbef,0x9d954fd8,
    0x3977ff95,0x9fff31f8,0x13f200f8,0x3fe01ff0,0x03ffec00,0x1fe001ff,
    0xdffd8bf2,0x3fc1fe98,0xb51017e4,0xfffc83ff,0xfe86ffff,0x7f47f882,
    0x3267f882,0xf85fff91,0x82ff802f,0xffe886fb,0x27bf6201,0x3ee03ff8,
    0x3ebbfabf,0xe985fa80,0x42ff98df,0x43ead32d,0x00ffc069,0x0fea03fe,
    0xc80ffe60,0x86eb8adf,0x322fc87f,0xf13ea0ef,0x2005f90f,0xcda883fc,
    0x07f86f9b,0x207f87f6,0x71f881fd,0x1d437ccd,0x17f20bfe,0x5401dfd3,
    0x0ffb63ff,0x14437fa2,0x89f700bb,0x3fba2ffb,0x74fdb5c2,0x7cc0993d,
    0xc80ff806,0x80ff5006,0x6fffffe9,0x22fc87f8,0x237c44fb,0x002fc87f,
    0x3e600bf5,0xf881fe86,0x2207fa0f,0x226a80ff,0xe887fa0f,0xf1077ec7,
    0x077fd47f,0x8fb836a0,0x6405b03f,0xe881931f,0xf9065c3f,0xace885f3,
    0x803f2a2a,0x0ff804fc,0x7fd001e8,0x0bbfee00,0x5fd507fc,0x7f90ffc4,
    0x3faa0ff8,0x3fa20a22,0x90df3003,0x37ecc3df,0xfd987bf2,0x1725f106,
    0xfffddff7,0x76fffc41,0x17fee6ff,0x33be2006,0x7744005f,0x3fbbfee1,
    0xef9806ff,0x1de884fc,0xff007f26,0x001ff003,0xdffeed98,0x401fd000,
    0xffffeffd,0x3fbfee2f,0x77fec0ff,0xf72fffff,0x1dfffddf,0xdffeda80,
    0x3bbff620,0x7ec41eff,0x01effeef,0x3207bfee,0x881dffff,0x20cffffd,
    0xfffffffe,0x6e64401f,0x3bea005f,0x3ff6e099,0xc9800dff,0xd9104fdc,
    0xb0019dff,0x3fffee0b,0xb804ffff,0x02ffffff,0xfe880fd0,0x42ffeeff,
    0x882dffec,0xffeefffe,0xffffd912,0xfff9001b,0xfff905ff,0x7fe401bf,
    0x01000dff,0x26200330,0xffffe809,0x1002ffff,0x7ec00fff,0x03306fff,
    0x01bfe600,0xb8000022,0xffffffff,0x33331004,0x80154001,0x02200098,
    0x44002620,0x99980009,0x000c4009,0x00000062,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x47700331,0x0066204a,
    0x0a2000d4,0x7b710000,0x7000cc01,0x98802547,0x00662000,0x8ee001a8,
    0x0000004a,0x91000400,0x19801643,0x00177640,0xed880988,0x3bfffee1,
    0x7ecff04d,0x77ffecc0,0xdffe880b,0x1ba202ea,0x401fb730,0x01fffff9,
    0x9fe007f5,0x3fae00fd,0xf706deff,0x20dbffff,0x2eadffe8,0x00fd9fe0,
    0x01677654,0x7fffffe4,0x8017cc1e,0x80df14fa,0x884ffffb,0x5c003fff,
    0x51edfffd,0x3fff27ff,0x3307fffe,0x77ff40c4,0x8b884ffe,0x3e604fe9,
    0x3fffa205,0x273f600f,0x13ea04fc,0x20188660,0xfffeeffc,0x77ffe40f,
    0xb881fffe,0x4c04fd88,0x7f900621,0xc80bd935,0x1effffff,0x150027dc,
    0xfffb004c,0xf901dffd,0x77fdc007,0x2ee3fffe,0x2e0bff98,0x8026207f,
    0x03fe20fe,0x1dc004c4,0x3ff3be20,0x7f89fe00,0x13002cc0,0x5c1ffb80,
    0x07fea0ff,0x08803ff3,0x64004400,0x005d860d,0x27dc0df1,0xffb80000,
    0x2e17faa3,0x7401313f,0x40ffa21f,0x90bb04fc,0x707dffff,0xfc85f909,
    0x0003efff,0xff007f40,0x0001bf26,0x33ffff62,0xfb01fe80,0x6b80fe41,
    0x33bffae0,0x3bffae00,0xc88fa80c,0x007b4fff,0xffd30df1,0x545fffff,
    0x3ffea7ff,0x220bfe22,0x6efdc1ff,0x7cc1efff,0xfd02fa85,0xefff8003,
    0xf9802ffe,0x777ffc1f,0xfffc82ff,0x00fe800f,0x13ffebfe,0x403ffff2,
    0xffeefff8,0x3103fc46,0xf90007f8,0x01dfffff,0xdffffff9,0x21b73c81,
    0xf100d55c,0xfffff30d,0x7fd47fff,0x98bffee7,0x70ff607f,0xfffdffff,
    0x041cff85,0x88007fb0,0xb3037cc0,0x98110bff,0xffffc86f,0x200fe800,
    0x2fffd8ff,0x807fffe4,0x3fa20efe,0xa8017ea4,0xefb8005f,0xf717faa2,
    0x22ff545d,0xf1083d1e,0x206f8801,0x0ff004fb,0x027dc5f9,0xdffb8bf5,
    0x541ff911,0x883dffff,0xb503df71,0xfdddb703,0x01fff40f,0x0ffdddb7,
    0xfe800ff8,0xfb89fe00,0x101ff01f,0xb9999bff,0x0027d4ff,0xeeec89f5,
    0x4417f43d,0x4417f47f,0x00f8fc7f,0x7c41d43e,0x4013ee06,0x2e2fc87f,
    0x717ea04f,0x85fd01ff,0x0efffeb9,0x3ff65ff3,0x41fffedf,0x7ffffffe,
    0xfe803f60,0x407fffff,0x0fe800ff,0x0ffa1fe0,0x7fcc07fc,0xffffffff,
    0x4c00ff10,0x3fffe26f,0xfb03fc7f,0x3fb03fc3,0x9843c96c,0xdf103fa6,
    0xf8027dc0,0x3e62fc87,0xf70ff607,0x8813ee09,0x5ff34fea,0x3fffff22,
    0x4df7dc2e,0x06207fa9,0xa99befb8,0x007fc07f,0x2ff007f4,0x7fc17ea0,
    0xcccff880,0x3a0ccccc,0x3ff0202f,0x20ff4cc4,0x0ff881fe,0x3fe207fa,
    0x66fcdae0,0x07f4995d,0x4fb81be2,0x5f90ff00,0x7c417fc4,0xd837dc1f,
    0xf101f73f,0x7e440c4d,0x441ff019,0x3e0007fc,0x01ff220f,0x1fd001ff,
    0xba7c7fc0,0x201ff03f,0x0cc40dfe,0xd882fbf2,0x82b7f62f,0x77e41fe8,
    0xf91bf661,0x237ecc3d,0x5c6ea3e8,0xf90bfa0f,0x262fd409,0xd507fc2b,
    0x0bffb85f,0xff70bfd5,0xd8ffd417,0x13f220df,0xf902fdc0,0xfffffdbf,
    0x3201b905,0xffffedff,0x001ff02f,0xfff701fd,0x01ffdffb,0x7fcc03fe,
    0x0ffffeef,0x7f77ffe4,0x3ffe20ff,0x41fffeef,0xffeeffd8,0x77fec41e,
    0xe881effe,0xd07f261d,0x1dffdfff,0xffeeff80,0x7f7fec6f,0x7ec2ffff,
    0x40effeff,0xfefffffe,0x3fff64ff,0x800fffee,0x36206eed,0xfffdffff,
    0x8817fc42,0xffdffffd,0xfffff72f,0x3fa29fff,0x71ffffff,0xdff79fff,
    0x7ffffdc7,0x7ecc4fff,0x703effff,0x01bffffb,0xbfffff91,0x7fffe405,
    0x3fff200d,0x3b2200df,0xb880ceff,0x800dffff,0x0cffffea,0x777fff44,
    0xfffb82ff,0xddffd04f,0xea87ffff,0x02effffc,0x20017510,0x01100099,
    0xfb802660,0x4fffffff,0xffffffd1,0xf703003d,0x9fffffff,0x00066620,
    0x4cc40013,0x00062000,0x01100031,0x88000c40,0x00988009,0x4c000cc0,
    0x09988019,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x2e000000,0x000004ee,0x264a8011,
    0x0000000c,0x3ae00000,0xed880eee,0x4000002e,0xbdd504eb,0x00151000,
    0x0bdeda88,0x33333333,0x00000333,0x00000000,0xd15ffff7,0xfd009fff,
    0x541100bf,0xeffd982f,0x3f21fd02,0x3ffffa02,0xf31fffff,0x7ffdcbff,
    0x3ffffea3,0xfffb01de,0x5fff101f,0xfffff700,0x06fc801d,0xa800fff9,
    0x407bbfff,0x3ffffff8,0x7fdca005,0x80adffff,0xfffffffd,0xffff56ff,
    0x44bfffff,0xffffffff,0xffffbaff,0x05fffe8a,0x7640bf50,0x82ffdfff,
    0x80ffeefe,0xfd00a218,0xffffffdf,0xc9bffea3,0x3fea3fff,0x03ffffff,
    0x6c01ff31,0xfffb802f,0x4c400eff,0x001fe200,0x00bbee55,0x155339f9,
    0xffb9400a,0x86ffffff,0xfffffffd,0xffff56ff,0x44bfffff,0xffffffff,
    0x307f72ff,0xf30980bf,0xdfffb10b,0xdf309fff,0x000006d4,0x7f47f7f9,
    0xff31ff41,0x5cc9f701,0x03fe01ff,0xf1002fc8,0x0013555f,0x0262ff00,
    0xff001880,0x42801401,0x417ecc7f,0x46f885fa,0x225f987f,0x2fd9fe6f,
    0x0bf307f7,0xf9dfffb1,0x265dfb0b,0x4fa86fff,0x1ffff900,0x47f7bf00,
    0x8ffcc0fd,0x09f703fe,0x07fc0bf9,0x3ffa5f90,0x7fffc43f,0x7fe44fff,
    0x37fe00ff,0x7440efff,0x0cfffcff,0x7fffff44,0x1400a1ff,0x217ea1fe,
    0x37c2a5fa,0x4f89a9fe,0x367f9be2,0xf307f72f,0xfefff88b,0x1ff85fff,
    0x83ff9ff3,0xff9006f8,0xbf9801ff,0x049eebfb,0x40bf9df9,0x40ff04fb,
    0x2bf200ff,0x443ffff8,0xffba99ff,0x03ffff22,0xffeffff8,0x7ffff446,
    0x7f445ffe,0x22ffffff,0x27f85002,0xfa83fea8,0xf0265f75,0x204d7e2f,
    0x0fb9fe5f,0x8bf307f7,0xff711dfd,0xff36f98b,0x7fc4bf29,0xf003ffff,
    0xb8fc801f,0xfe807fff,0xfff880ff,0x07fa2fff,0x7f9007fc,0x3e205ffd,
    0xff04fb86,0x886ffc01,0x0dff80fe,0x03fc03fa,0x3fe1400a,0x506fffff,
    0x407fffff,0x206fffff,0xfb823fc0,0x3e25f983,0xf85fe80f,0xff15ff9f,
    0x3ffffa23,0x01ff003f,0xfffdafe8,0x3ffba607,0x7ff443ef,0x07fa2fff,
    0xff9007fc,0x37c401df,0x0ff81fe4,0x0bf61fe0,0x40bf21fe,0x2801407f,
    0x7ffffffc,0xffffa83f,0x3fffe03f,0x81fe006f,0x25f983fb,0x0bf505fa,
    0x366bfff9,0x007f907f,0x3e200ff8,0x05ebffff,0xfb801fd0,0x3e01ff04,
    0x3fff200f,0x27fe200e,0xf01ffca9,0x643fc01f,0xfc87f82f,0x0280ff02,
    0x5cc7f850,0xbafd41ff,0x7c5fe02f,0x07f80515,0x93ea17ea,0x0bf907f9,
    0xffddfff3,0x00bfa03f,0x7dc01ff0,0x3623fdab,0x67fe64c1,0x509f702c,
    0x007fc0df,0x01dfdbf9,0x3fffffe2,0x803fe02f,0xf82fc87f,0xff02fc87,
    0xf8500280,0xfa87f907,0x4cff00a5,0x3fc01fb0,0x7cc5ff10,0x305ffc2f,
    0xefe88bff,0x300dffff,0x206b81ff,0xb9f600ff,0x3113ea3f,0x20133ff3,
    0x3fee24fb,0xc803fe02,0x81ffd8af,0x009aaff8,0x1fe00ff8,0x21fe0bf2,
    0x80ff02fc,0x87f85002,0x2fd43fd9,0x3fa0ff00,0xf701fe01,0x50bffdff,
    0xffffdfff,0x897ee3ff,0x7fffe401,0xf70fffff,0x9fffffff,0x3fbbffe2,
    0x44ffffff,0x1fffffe8,0xffffffa8,0x7ffdc4ff,0xd14fffff,0x3ffe65ff,
    0xfffff72f,0xffff701d,0x3e69ffff,0xfffd1fff,0x47fffe69,0xff32fffc,
    0x41dfffff,0x3fee5002,0xffffffff,0x3fffff60,0xfffff506,0xa83fffff,
    0x03ffffff,0x409ffff5,0xfdffffe9,0x2000a1ef,0xfffffffc,0x3fffee3f,
    0xff14ffff,0xfffffdbf,0xfffd09ff,0xfff503df,0xf705bdff,0x9fffffff,
    0x744bffa2,0xfff72fff,0xff701dff,0x29ffffff,0xfd1effe9,0x3ffa67ff,
    0x25fff91e,0xffffffe9,0x2aaaaa0e,0xf73aaaaa,0xbdffffff,0xfffffc81,
    0xfffff505,0xa83fffff,0x03ffffff,0x331000cc,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00013000,0x01bb6000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x20000000,0x000d4029,0x0ffffa60,0x5c9fffd3,
    0xf502ffff,0x5fffd0ff,0x2e3dffd1,0x1defffff,0xfffffe88,0xffff11ff,
    0x3ea5ffff,0x3ffee4ff,0x5c9fff53,0x7ff43fff,0x3bfff26f,0xfffffd11,
    0x3fffee07,0x5c7fff95,0x3effffff,0xfa84ffe8,0x9bffa1ef,0x2e5fffe8,
    0x4effffff,0x7ffffcc0,0x103f4002,0x20003bff,0x4c2ffefe,0x3ee4ffff,
    0xfff02fff,0x15fffd0f,0x3ee3fffd,0x3fffffff,0x7fffff44,0xffff11ff,
    0x3ea5ffff,0x3fff24ff,0x5cbfff53,0x3fa23fff,0x3fff26ff,0xffffd11f,
    0x3ffee07f,0x47fffb5f,0xfffffffb,0x07fff44f,0xfe87fff6,0xfffd13ff,
    0x7ffffdcb,0x3e605fff,0x4006ffff,0x3fee00ff,0x3ea000cf,0x17f40115,
    0xfc807fc4,0x90ff07fe,0x264fb85f,0x3fe01ffc,0x7e47f880,0x3ea3fe86,
    0x527f440f,0x0df303ff,0x1fd817e4,0x7f4cff00,0x226f880e,0x3fe20ffa,
    0x0bffe63f,0xf983ffee,0x7544ff05,0x7ffc401f,0x03fe001f,0x07fff910,
    0x5401bea0,0x104fc85f,0x3e0ff3ff,0x7dc2fc87,0x3e05fc84,0x7dcdf00f,
    0x89ff980f,0x7ff303fe,0x3e205ff3,0x3f65ff17,0x2003fb01,0x01bff37f,
    0x8fee1be2,0x3f67fff8,0xfffb82ff,0x3fc17e65,0x3ee027d4,0x3e004fcd,
    0xffb1000f,0x07ff005f,0x3ff07fe0,0x83fd3f60,0x5c2fc87f,0x207f884f,
    0x267900ff,0x3bf202ff,0x7fd405fc,0x47fc04ff,0x01fd4ffb,0x7fc007f6,
    0x7c404ffa,0x3e24fd86,0xdff8afee,0xffcfb82f,0x1fe0bf32,0xfe807fb1,
    0x3b207f8a,0xdeeeffee,0x77ff4c00,0x53fff702,0xa93f207d,0x21ff505f,
    0xfffff07f,0x4fb85fff,0x3fe01fd0,0x027f4400,0x4007fff4,0xfe805ffb,
    0x0ff7ffd9,0xff800fec,0x7c401fff,0x1ffca99f,0x33bebbe2,0xfb82fccf,
    0x5f98ffab,0xffd99ff0,0xb3fcc01d,0xffff105f,0x03ffffff,0x81bfff50,
    0xfdefdffa,0x7f4ff107,0x3fc7fd02,0xfffffff8,0xe827dc2f,0x801ff01f,
    0xff3005fd,0x3bff6005,0x7fdfec00,0x3607fafe,0xfff8081f,0x3e201ffe,
    0x43ffffff,0x3fffd6f8,0x27f705f9,0xf05f9dfd,0x01dfffff,0xfcaadfc8,
    0xff333106,0xe9801333,0x9f901eff,0xd807fffa,0xf507f9bf,0x1bffdddf,
    0x42fc87f8,0x40ff04fb,0x3ff200ff,0x0fe80b60,0x5feffb80,0x5eff7e40,
    0x3f606fef,0x3fe1fcc1,0x2201ff71,0x81ceeeff,0x2bff76f8,0x13fb82fc,
    0x3e0bf9ff,0x01ffdaaf,0x3fffffe2,0x0ff801ff,0x2fffd880,0xff99fe40,
    0x7e77d405,0xfffff703,0x87f81fff,0x427dc2fc,0x03fe06fa,0xbf30ffd4,
    0x2a007f40,0x04fe89ff,0x3e2bffee,0x07f605ff,0x6c7f89f5,0x00df104f,
    0x97fc5be2,0x23fb82fc,0xff05fffb,0xf700ffc8,0x9fdddddf,0x4401ff00,
    0x1003fffc,0xdfffddff,0x00fffe80,0xff333331,0x5f90ff01,0x3ee24fb8,
    0x203fe02f,0x2fcc3ff8,0x7cc01fd0,0x40bfe63f,0x3ffa7ffa,0xf507f604,
    0x7fc47f89,0x1006f880,0x5f90c4df,0xffe87f70,0xbfb0ff05,0x3e20bfa0,
    0x200fe807,0x4000cfff,0x5fefffeb,0x002ffdc0,0x261dfffb,0xfe8affff,
    0xffff73ff,0xe889ffff,0x1fffffff,0xfffffff7,0xffffa8bf,0x7ffdc3ff,
    0x217fff66,0x3fee5ff9,0x7ffff443,0xf74fffff,0x7fe4bfff,0xfffff70e,
    0xfffd101d,0x17fffdcb,0x265ffff7,0x7ffdc5ff,0x4bffa25f,0x2e5ffff9,
    0x3202ffff,0x000eec05,0x88002620,0x3f6001ff,0xfff30eff,0x7fffd15f,
    0x3bffffea,0xfffe882d,0xff71efff,0x8bffffff,0x3ffffffa,0xf937ffdc,
    0x5ff10bff,0x3a217fc4,0xffffffff,0xbffff74f,0xfb877fc4,0x880effff,
    0x3ee4fffe,0x3fee2fff,0x517f22ff,0xf98bffff,0x9fffd32f,0x017fffdc,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00188053,0x98800262,0x00131001,
    0x00000022,0x40980026,0x88000008,0x0304c001,0x40644000,0x000001c8,
    0x80000044,0x9709704b,0x0007105c,0xb00ffe44,0xffff900f,0x7ffdc07d,
    0x6dc44def,0xb80eefff,0x540ceffe,0x3ffea7ff,0xffffd882,0xdfff900c,
    0xff07ff93,0x25ffffff,0xfffcffe8,0x77ff440c,0x83fffcff,0xffd1effe,
    0x3f7bee1d,0x3f64fedf,0x3ffa21ff,0x273ffa66,0xff90dffe,0x3fffa3df,
    0x3a0fd00e,0x643ff25f,0x001bd11f,0x404fffb8,0xefff8029,0xffc82ffe,
    0x647fffef,0x1fffeeff,0x7fffffe4,0xb9ffea0e,0x7fc42fff,0x886ffeef,
    0xeffffeff,0x7fffc3ff,0xfd11ffff,0x8bffdfff,0xffefffe8,0x7f40ffef,
    0x1fffd0ff,0x7ffffff4,0x8bfff60e,0x3e66fff8,0xffffffff,0x21ffffb3,
    0x260efffe,0x44311ff0,0x41ffcdfe,0x01dd12fd,0x01bfff50,0x26044000,
    0x05ffcc6f,0x21ff8ff7,0x3bee0fd8,0x3e17faa2,0x7f42fc87,0x213fa20e,
    0x7d5bfe08,0x7ff537c7,0x7f41bff0,0x9fd2ff80,0x3ff20bf2,0xfb85ffab,
    0xe85fd89e,0x1fe3ff1f,0x151fffd4,0x3fa07fc4,0x7ff7fcc2,0x3fa22ffd,
    0x27fb01ff,0xfd501ff8,0x000003df,0x1ffbbb6e,0x917609f9,0x81159bff,
    0x87f882fe,0x222fc87f,0xdccccdff,0xfeec987f,0x21ffccdf,0x207ff52a,
    0xf82fc87f,0x1fe47fa7,0x04ffffa8,0x43fc45fb,0x9cffabfc,0x03ff505f,
    0x37d49f90,0x7ffffe44,0x37fe40df,0x3ea9ff10,0x3bff661f,0xeeeec802,
    0x740deeee,0x47ffffff,0x362001fe,0x7c3fffff,0xff07f607,0x7fcc5f90,
    0xffffffff,0x3fffff60,0x82ffffff,0x1fe03ffa,0xe9fe0bf2,0x6c07f91f,
    0x5fb00eff,0x6fd43fc4,0x04fcfffd,0x3e2009f5,0xe805fd0f,0xffc80fff,
    0x1bfb05fe,0xffc87fd1,0xfff8803f,0x1fffffff,0x2a66fbee,0x001fec7f,
    0x17fe54c5,0x1ff103fd,0x22fc87f8,0xcccccff8,0x7ff30ccc,0x999bff33,
    0x03ffa839,0x417e43fc,0x7e47fa7f,0xdfdffb03,0xb33df701,0xffff10bf,
    0x2a05fffd,0x33f2004f,0x7fd406fa,0x4ffe44fe,0x9fec5fe8,0xfb301fe8,
    0x998805df,0x40999999,0x1ff220ff,0x3b503df7,0x93f213ea,0x3f661efc,
    0x3aa0ff86,0x206ff42f,0x99be6198,0xf50a25ff,0x3e17cc7f,0x7f82fc87,
    0x21fe47fa,0xfe89efe8,0x7ffff41f,0xffe80eff,0x500fffac,0x7fc4009f,
    0x57fc02fe,0x87fa0ff9,0xe87f27e8,0xffe9800d,0x3200001e,0xffffedff,
    0x37fff62f,0xff71fffe,0x43fffddf,0xffeeffd8,0xfeffd81e,0x3e62ffff,
    0xffffeeff,0x3ffbffa0,0x32ffeeff,0xffffffff,0x47fffe69,0xfd12fffc,
    0x327ffadf,0xffff52ff,0x27fffd13,0xddfecefb,0xf1ffc84f,0xffff90df,
    0xfd809fff,0x2a2b806f,0x50440443,0xfa800281,0x80000dff,0xfdffffd8,
    0x3ff222ff,0x3e62efff,0x02cffffe,0x01bffff9,0x3bbfffa2,0x7fecc2ff,
    0x7443efff,0xffeedfff,0xffff30cf,0x3a69ffff,0xfff91eff,0x75bffa25,
    0x52ffc9ef,0x3fa3dfff,0x201913ff,0x326fa81c,0xffffc84f,0x7cc04fff,
    0x0000003f,0x7dc00000,0x01f601ff,0x31000998,0x19880335,0x88006200,
    0x26620009,0x4c098801,0x00000000,0x00000000,0x00000000,0x00000000,
    0x22000000,0x016e00ec,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x97100200,0x221bb501,
    0xeeeeeeec,0xbb911eee,0x3bbbbbbb,0x54402000,0x4cc3310a,0x7b710a60,
    0x5dc28808,0x881a8620,0xbbbbbbbb,0x3221bbbb,0x1ccccccc,0x3aa4a8ee,
    0xffffffff,0x00004fff,0x00000000,0x00814098,0x0bffb102,0xfff3036c,
    0x264fd85f,0xffffffff,0xfff72fff,0x9fffffff,0x20e7fec4,0x220dfffa,
    0x21ff31ff,0xe89ae2ff,0x4bf15fff,0x4ffe65e9,0x85f72ff8,0xfffffffc,
    0x227fffff,0xffffffff,0x90fd9be1,0xffffffff,0x000dffff,0x00000000,
    0x3f62fa80,0x21bffb10,0x47646ed9,0x4ffb83e8,0x8db11db0,0x4ccc40ff,
    0x2fd99999,0x2aaaaaa6,0x4cef41aa,0x74ccc46c,0x7f887fc3,0x95fb87fa,
    0xffdff5bf,0xdd113ea9,0xfb8bfe23,0x2eeeee23,0x1bbbbbbb,0x44444444,
    0x103104c0,0x11111111,0x00000011,0xc8000000,0x4c3fd13f,0xb734e89b,
    0x87f1088d,0xf83ffffa,0x27cc3ee4,0x002fc800,0x45f03e20,0x744fffd9,
    0x21fb37c7,0x44935eee,0x00ee4ffd,0x00498088,0x00000000,0x00000000,
    0xb0000000,0x407fa67f,0x83643fba,0x5ffcc5f9,0x57e42ffa,0x003ee5e9,
    0xee997e40,0xeeeeeeee,0x10f98be2,0xd89d117f,0x44f92f46,0x004c00ba,
    0x00000000,0x00000000,0x00000000,0xfd100000,0xc80bfe69,0x643642fe,
    0x2e4fe84f,0x3ffa20ff,0x8000f61f,0xffff52fc,0x49ffffff,0x7c4fdefb,
    0x2e2ffecd,0x00b726c5,0x00000000,0x00000000,0x00000000,0x00000000,
    0xefc8ffd4,0x1b236c00,0x26575bfd,0x982fc85f,0x54000082,0x2222220e,
    0xa8808888,0xaaca880b,0x8110620a,0x00000000,0x00000000,0x00000000,
    0x00000000,0x8ff44000,0x2b2e0efa,0x5db534eb,0x8b333323,0x00000600,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x9ba63fb0,0x32a2cdc9,0x00002ccc,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x35000000,0x00000038,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,
};

static signed short stb__courier_bold_23_latin1_x[224]={ 0,4,2,1,1,1,2,4,5,2,1,0,4,1,
4,1,1,1,1,1,1,1,2,1,1,2,4,4,-1,0,0,2,1,-1,0,0,0,0,0,0,0,1,1,0,
0,-1,-1,0,1,0,0,1,0,0,-1,-1,0,0,1,5,1,2,1,-1,4,0,-1,1,0,0,1,0,0,1,
1,0,1,-1,0,0,-1,0,1,1,1,0,0,-1,0,0,1,3,5,3,1,2,2,2,2,2,2,2,2,2,
2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,4,1,0,1,0,
5,0,2,-1,2,0,-1,1,-1,-1,2,0,3,3,4,0,1,4,4,3,2,1,0,-1,0,1,-1,-1,-1,-1,
-1,-1,-1,0,0,0,0,0,1,1,1,1,-1,-1,0,0,0,0,0,2,0,0,0,0,0,0,1,0,0,0,
0,0,0,0,-1,1,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,0,
 };
static signed short stb__courier_bold_23_latin1_y[224]={ 16,2,3,2,1,3,4,3,2,2,3,4,13,9,
13,1,2,2,2,2,3,3,2,3,2,2,7,7,4,7,4,3,2,3,3,3,3,3,3,3,3,3,3,3,
3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,1,3,2,20,2,6,3,6,3,6,3,6,3,3,
3,3,3,6,6,6,6,6,6,6,3,6,6,6,6,6,6,3,3,3,8,3,3,3,3,3,3,3,3,3,
3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,16,7,2,3,5,3,
3,3,3,3,2,7,9,9,3,0,1,1,2,2,2,6,3,8,15,2,2,7,2,2,2,7,-1,-1,-1,0,
0,-1,3,3,-1,-1,-1,0,-1,-1,-1,0,3,0,-1,-1,-1,0,0,6,2,-1,-1,-1,0,-1,3,3,2,2,
2,3,3,2,6,6,2,2,2,3,2,2,2,3,3,3,2,2,2,3,3,4,5,2,2,2,3,2,3,3,
 };
static unsigned short stb__courier_bold_23_latin1_w[224]={ 0,4,8,10,10,10,10,4,5,5,10,12,5,10,
4,10,10,10,10,10,10,10,9,10,10,10,4,5,13,12,13,9,10,14,12,12,12,12,12,13,12,10,12,13,
12,14,14,12,11,12,13,10,12,12,14,14,13,12,10,5,10,6,10,15,5,12,13,11,13,12,11,13,12,10,
9,12,10,14,12,12,13,13,11,10,11,12,13,14,12,12,10,6,3,6,10,11,11,11,11,11,11,11,11,11,
11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,4,10,12,10,12,
3,12,8,14,8,12,13,10,14,15,8,12,6,6,5,12,11,4,4,6,8,11,13,14,13,10,14,14,14,14,
14,14,14,12,12,12,12,12,10,10,10,10,13,14,12,12,12,12,12,9,13,12,12,12,12,12,11,11,12,12,
12,12,12,12,14,11,12,12,12,12,10,10,10,10,11,12,12,12,12,12,12,12,12,12,12,12,12,12,13,12,
 };
static unsigned short stb__courier_bold_23_latin1_h[224]={ 0,15,7,16,18,14,13,7,18,18,9,12,7,3,
4,18,15,14,14,15,13,14,15,14,15,15,10,12,12,7,12,14,16,13,13,14,13,13,13,14,13,13,14,13,
13,13,13,14,13,17,13,14,13,14,13,13,13,13,13,17,18,17,8,3,4,11,14,11,14,11,13,15,13,13,
18,13,13,10,10,11,15,15,10,11,14,11,10,10,10,15,10,17,17,17,5,13,13,13,13,13,13,13,13,13,
13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,0,14,15,13,10,13,
17,15,3,14,7,9,7,3,14,3,7,15,8,8,4,15,15,4,5,8,7,9,14,14,14,14,17,17,17,16,
16,17,13,17,17,17,17,16,17,17,17,16,13,16,18,18,18,17,17,9,16,18,18,18,17,17,13,14,15,15,
15,14,14,15,11,14,15,15,15,14,14,14,14,13,14,13,15,15,15,14,14,12,13,15,15,15,14,19,18,18,
 };
static unsigned short stb__courier_bold_23_latin1_s[224]={ 174,205,111,164,140,112,1,106,151,168,222,
226,55,174,147,157,142,60,146,61,27,186,38,226,81,105,251,248,1,75,239,
26,219,211,204,107,51,230,217,120,38,64,175,141,128,167,182,213,155,23,197,
240,243,1,12,113,99,86,75,204,64,62,35,194,152,28,226,41,14,90,180,
191,154,143,41,118,107,142,129,64,223,72,196,53,188,77,208,181,157,1,118,
249,200,174,125,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,
192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,174,250,14,
41,170,80,196,237,185,160,97,1,61,174,211,158,46,55,28,14,136,153,179,
142,120,21,88,243,157,171,197,123,181,108,47,1,175,149,65,95,210,223,236,
230,1,12,36,243,93,190,101,88,114,69,82,233,205,51,75,127,136,123,131,
71,16,29,42,36,13,68,103,1,92,116,129,94,83,49,237,54,134,167,86,
99,210,134,147,15,28,25,48,166,200,1,27,14, };
static unsigned short stb__courier_bold_23_latin1_t[224]={ 19,39,128,21,1,56,102,128,1,1,116,
102,128,128,128,1,39,72,56,56,102,56,56,56,39,39,72,56,116,128,102,
72,21,102,87,72,102,87,87,72,102,102,72,102,102,102,102,72,102,21,102,
72,87,87,102,102,102,102,102,1,1,21,128,128,128,116,72,116,87,116,87,
39,87,87,1,87,87,116,116,116,39,56,116,116,72,116,116,116,116,56,116,
1,1,1,128,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,
87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,19,39,56,
87,116,87,1,39,128,72,128,129,128,128,56,128,128,39,128,129,128,39,39,
128,128,129,128,116,56,56,56,56,1,21,21,39,21,21,87,21,1,1,1,
21,21,21,21,21,87,21,1,1,1,21,21,116,21,1,1,1,21,21,87,
72,39,39,39,72,72,39,116,72,39,39,39,72,72,72,56,87,56,87,56,
56,39,72,72,116,87,56,56,39,72,1,1,1, };
static unsigned short stb__courier_bold_23_latin1_a[224]={ 195,195,195,195,195,195,195,195,
195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,
195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,
195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,
195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,
195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,
195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,
195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,
195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,
195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,
195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,
195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,
195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,
195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,
195,195,195,195,195,195,195,195, };

// Call this function with
//    font: NULL or array length
//    data: NULL or specified size
//    height: STB_FONT_courier_bold_23_latin1_BITMAP_HEIGHT or STB_FONT_courier_bold_23_latin1_BITMAP_HEIGHT_POW2
//    return value: spacing between lines
static void stb_font_courier_bold_23_latin1(stb_fontchar font[STB_FONT_courier_bold_23_latin1_NUM_CHARS],
                unsigned char data[STB_FONT_courier_bold_23_latin1_BITMAP_HEIGHT][STB_FONT_courier_bold_23_latin1_BITMAP_WIDTH],
                int height)
{
    int i,j;
    if (data != 0) {
        unsigned int *bits = stb__courier_bold_23_latin1_pixels;
        unsigned int bitpack = *bits++, numbits = 32;
        for (i=0; i < STB_FONT_courier_bold_23_latin1_BITMAP_WIDTH*height; ++i)
            data[0][i] = 0;  // zero entire bitmap
        for (j=1; j < STB_FONT_courier_bold_23_latin1_BITMAP_HEIGHT-1; ++j) {
            for (i=1; i < STB_FONT_courier_bold_23_latin1_BITMAP_WIDTH-1; ++i) {
                unsigned int value;
                if (numbits==0) bitpack = *bits++, numbits=32;
                value = bitpack & 1;
                bitpack >>= 1, --numbits;
                if (value) {
                    if (numbits < 3) bitpack = *bits++, numbits = 32;
                    data[j][i] = (bitpack & 7) * 0x20 + 0x1f;
                    bitpack >>= 3, numbits -= 3;
                } else {
                    data[j][i] = 0;
                }
            }
        }
    }

    // build font description
    if (font != 0) {
        float recip_width = 1.0f / STB_FONT_courier_bold_23_latin1_BITMAP_WIDTH;
        float recip_height = 1.0f / height;
        for (i=0; i < STB_FONT_courier_bold_23_latin1_NUM_CHARS; ++i) {
            // pad characters so they bilerp from empty space around each character
            font[i].s0 = (stb__courier_bold_23_latin1_s[i]) * recip_width;
            font[i].t0 = (stb__courier_bold_23_latin1_t[i]) * recip_height;
            font[i].s1 = (stb__courier_bold_23_latin1_s[i] + stb__courier_bold_23_latin1_w[i]) * recip_width;
            font[i].t1 = (stb__courier_bold_23_latin1_t[i] + stb__courier_bold_23_latin1_h[i]) * recip_height;
            font[i].x0 = stb__courier_bold_23_latin1_x[i];
            font[i].y0 = stb__courier_bold_23_latin1_y[i];
            font[i].x1 = stb__courier_bold_23_latin1_x[i] + stb__courier_bold_23_latin1_w[i];
            font[i].y1 = stb__courier_bold_23_latin1_y[i] + stb__courier_bold_23_latin1_h[i];
            font[i].advance_int = (stb__courier_bold_23_latin1_a[i]+8)>>4;
            font[i].s0f = (stb__courier_bold_23_latin1_s[i] - 0.5f) * recip_width;
            font[i].t0f = (stb__courier_bold_23_latin1_t[i] - 0.5f) * recip_height;
            font[i].s1f = (stb__courier_bold_23_latin1_s[i] + stb__courier_bold_23_latin1_w[i] + 0.5f) * recip_width;
            font[i].t1f = (stb__courier_bold_23_latin1_t[i] + stb__courier_bold_23_latin1_h[i] + 0.5f) * recip_height;
            font[i].x0f = stb__courier_bold_23_latin1_x[i] - 0.5f;
            font[i].y0f = stb__courier_bold_23_latin1_y[i] - 0.5f;
            font[i].x1f = stb__courier_bold_23_latin1_x[i] + stb__courier_bold_23_latin1_w[i] + 0.5f;
            font[i].y1f = stb__courier_bold_23_latin1_y[i] + stb__courier_bold_23_latin1_h[i] + 0.5f;
            font[i].advance = stb__courier_bold_23_latin1_a[i]/16.0f;
        }
    }
}

#ifndef STB_SOMEFONT_CREATE
#define STB_SOMEFONT_CREATE              stb_font_courier_bold_23_latin1
#define STB_SOMEFONT_BITMAP_WIDTH        STB_FONT_courier_bold_23_latin1_BITMAP_WIDTH
#define STB_SOMEFONT_BITMAP_HEIGHT       STB_FONT_courier_bold_23_latin1_BITMAP_HEIGHT
#define STB_SOMEFONT_BITMAP_HEIGHT_POW2  STB_FONT_courier_bold_23_latin1_BITMAP_HEIGHT_POW2
#define STB_SOMEFONT_FIRST_CHAR          STB_FONT_courier_bold_23_latin1_FIRST_CHAR
#define STB_SOMEFONT_NUM_CHARS           STB_FONT_courier_bold_23_latin1_NUM_CHARS
#define STB_SOMEFONT_LINE_SPACING        STB_FONT_courier_bold_23_latin1_LINE_SPACING
#endif

