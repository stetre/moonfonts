// Font generated by stb_font_inl_generator.c (4/1 bpp)
//
// Following instructions show how to use the only included font, whatever it is, in
// a generic way so you can replace it with any other font by changing the include.
// To use multiple fonts, replace STB_SOMEFONT_* below with STB_FONT_times_38_usascii_*,
// and separately install each font. Note that the CREATE function call has a
// totally different name; it's just 'stb_font_times_38_usascii'.
//
/* // Example usage:

static stb_fontchar fontdata[STB_SOMEFONT_NUM_CHARS];

static void init(void)
{
    // optionally replace both STB_SOMEFONT_BITMAP_HEIGHT with STB_SOMEFONT_BITMAP_HEIGHT_POW2
    static unsigned char fontpixels[STB_SOMEFONT_BITMAP_HEIGHT][STB_SOMEFONT_BITMAP_WIDTH];
    STB_SOMEFONT_CREATE(fontdata, fontpixels, STB_SOMEFONT_BITMAP_HEIGHT);
    ... create texture ...
    // for best results rendering 1:1 pixels texels, use nearest-neighbor sampling
    // if allowed to scale up, use bilerp
}

// This function positions characters on integer coordinates, and assumes 1:1 texels to pixels
// Appropriate if nearest-neighbor sampling is used
static void draw_string_integer(int x, int y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0, cd->t0); glVertex2i(x + cd->x0, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t0); glVertex2i(x + cd->x1, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t1); glVertex2i(x + cd->x1, y + cd->y1);
        glTexCoord2f(cd->s0, cd->t1); glVertex2i(x + cd->x0, y + cd->y1);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance_int;
    }
    glEnd();
}

// This function positions characters on float coordinates, and doesn't require 1:1 texels to pixels
// Appropriate if bilinear filtering is used
static void draw_string_float(float x, float y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0f, cd->t0f); glVertex2f(x + cd->x0f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t0f); glVertex2f(x + cd->x1f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t1f); glVertex2f(x + cd->x1f, y + cd->y1f);
        glTexCoord2f(cd->s0f, cd->t1f); glVertex2f(x + cd->x0f, y + cd->y1f);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance;
    }
    glEnd();
}
*/

#ifndef STB_FONTCHAR__TYPEDEF
#define STB_FONTCHAR__TYPEDEF
typedef struct
{
    // coordinates if using integer positioning
    float s0,t0,s1,t1;
    signed short x0,y0,x1,y1;
    int   advance_int;
    // coordinates if using floating positioning
    float s0f,t0f,s1f,t1f;
    float x0f,y0f,x1f,y1f;
    float advance;
} stb_fontchar;
#endif

#define STB_FONT_times_38_usascii_BITMAP_WIDTH         256
#define STB_FONT_times_38_usascii_BITMAP_HEIGHT        166
#define STB_FONT_times_38_usascii_BITMAP_HEIGHT_POW2   256

#define STB_FONT_times_38_usascii_FIRST_CHAR            32
#define STB_FONT_times_38_usascii_NUM_CHARS             95

#define STB_FONT_times_38_usascii_LINE_SPACING          25

static unsigned int stb__times_38_usascii_pixels[]={
    0x0ac80051,0x8800e980,0x00a2004a,0x20001991,0xbcdedca9,0x26662001,
    0x18000999,0x33333000,0x00710033,0x20001800,0x00980000,0x400003b5,
    0x00c00601,0x012e3c98,0x4c02fc88,0x067cc00f,0x6400ea80,0x2e2003ff,
    0x5311abde,0xffb007db,0x7009ffff,0x59dfffd9,0xfffff100,0x069801ff,
    0x7ff6dc00,0xf7002cef,0x7654001d,0x3ff260ce,0xf500001f,0x75c03e60,
    0x3604efef,0x007aa3ff,0x3e603f88,0x4007ee00,0xfb800ed8,0x19f9002f,
    0x003b2200,0x74c09fd0,0xfda89adf,0x3fe200df,0xffb71002,0x260039df,
    0xd730acfe,0xfff801bf,0x0bfea802,0x03fff770,0x5c172000,0x10bfe887,
    0xffd03ff7,0x2001fa87,0x01f301fd,0x5d8017e2,0x44015400,0xd30000de,
    0x827f4003,0x7ec02ffb,0x05ff102f,0x3d59fd30,0x6403ffd7,0x7fe402ff,
    0x09fff102,0x9001efc8,0x200003ff,0xfb0bb04d,0x303bea07,0x00db019b,
    0x0f982fd4,0x32005fb0,0xa800000f,0xe980005f,0xb09fd000,0xfd1003ff,
    0x05ff105f,0x8d30ff88,0x3ff902fd,0x40fff200,0x3f603fff,0x3fee000e,
    0x05f00001,0x01ff30fa,0x1000bfe2,0x1fea007f,0x2ff807cc,0x0004fa80,
    0x0004f980,0x7f4016a0,0x002ffd44,0xf881fff3,0x32fec02f,0xfa82f88d,
    0x3fe2005f,0x02fff80f,0xb8001ff9,0x880001ff,0x5c1f881f,0x027ec06f,
    0x5c007ec0,0x80f981ff,0x7c404ff8,0x4400001f,0xd800005e,0x224fe801,
    0x5c001fff,0x17fc45ff,0x8698ffe0,0x0fffc42d,0x217ff200,0xff982ffe,
    0x1ffb8002,0x507a8000,0x00ffc81f,0x2a000bfa,0x0ffc805f,0xff880f98,
    0x0037dc05,0x0007ec00,0x2012a001,0x17ff64fe,0x8bffe600,0x3e202ff8,
    0x0ae1a66f,0x1000bffb,0xffd85fff,0x002ffc41,0x0001ffb8,0x50d706c8,
    0x3fe20bff,0x3ff88000,0xf983ff40,0xf80dff00,0x5b50003f,0xc8803fa8,
    0x2ed8addf,0x14fe8068,0x20007fff,0x3fe25fff,0x98fff402,0x7ffc0886,
    0xbffd0003,0x7ec0ffc8,0xff70001f,0x405ee4c3,0xceecccc9,0xcceecccc,
    0x320fffe2,0x3fa0003f,0x9837fc06,0x40ffd00f,0x22001ffa,0x3ec2ffeb,
    0x7b0efcc0,0x801d01ff,0x5fff34fe,0x9bff2000,0x7e402ff8,0x980699ff,
    0xb0002fff,0x47fb8fff,0x06626ffa,0x744ffdc0,0x4c2fffff,0xeeefeeee,
    0x2eeefeee,0xfb93ffee,0x3fec0004,0x7cc17fa0,0x740df900,0x2ee000ff,
    0x13e22fff,0xff50bf50,0xfd00760d,0x007ffea9,0x887ffe40,0x7fcc02ff,
    0xfa806cff,0xf90001ff,0x237d41ff,0xffeabffc,0x7fdc04ff,0xfffdceea,
    0x203e602f,0x3ff201f8,0x0002fbdf,0x2e01ffc8,0x201f304f,0x1ffe03fb,
    0x717fdc00,0x077d403f,0x2c827fcc,0xffca7f40,0xff70000f,0x00bfe23f,
    0x01bfffe6,0x0003fff2,0xf50fffdc,0xadfffd8b,0x00effea9,0xe885fff7,
    0x41ee06ff,0x7fe400fa,0x700002ff,0x2fc405ff,0x1fb00f98,0x001ffe20,
    0x0dd17fd4,0xfb80ffc4,0xe803d01f,0x01fffb4f,0x4bffea00,0xf3002ff8,
    0x6c03dfff,0x70000fff,0x27cc5fff,0x3a207ffe,0x5ff705ff,0x40bffe20,
    0x200d705c,0x402ffffd,0x04ffb800,0x07cc0fdc,0xff301fc4,0x3fea000d,
    0x5fd813e2,0x0781ff60,0xfffb4fe8,0x3fea0001,0x005ff12f,0x1ffffec4,
    0x000fffc8,0x443fff70,0x81bfe24f,0xfb81fff9,0x13ff201f,0x804d8274,
    0x3ffffbfc,0x5403ff70,0x2d8805ff,0x0faa07cc,0x000bff50,0x1fc4bfea,
    0x3e01ff98,0xd00b304f,0x07fff29f,0x8fffdc00,0xb8002ff8,0xfb84ffff,
    0xf70001ff,0x2a3f81ff,0x7ffc06ff,0x201ffb83,0x05f05ff9,0x25fb00fe,
    0xf83fffe9,0x3fe604ff,0x4c7b2007,0x0019d10f,0x20009ff7,0x05f32ffa,
    0xff981bf6,0xfd009702,0x00bffee9,0xf13ffe40,0xdd30005f,0xffa8bfff,
    0xff90002f,0x7fdc5d0f,0x42ffec05,0x3e201ffb,0xbfb9936f,0x9bf99999,
    0x21fe4599,0x6c0fffe8,0x3fe602ff,0x217d7007,0x00bae0f9,0x40017fee,
    0x03f52ffa,0x7ec09ff1,0xd005900f,0x0fffe69f,0x137fec00,0xd30005ff,
    0xf88bfff2,0xfb0003ff,0x7cc3b0bf,0x2ffdc05f,0x3e00ffdc,0xdfddd36f,
    0xddfddddd,0x03fe25dd,0x2a0bffa2,0x02ffd401,0x03e613a2,0xdff3012e,
    0x4bfea000,0x2ffa81f9,0x220dff30,0x24fe800f,0xd0005ffe,0x17fc45ff,
    0xff734c00,0x005ffe8b,0x1907ffd0,0x26037fc4,0x1ffb84ff,0x2e427fc0,
    0x1bee06b8,0x0005ff88,0x7e809ff7,0x1be01f30,0x0006ff88,0x0be25ff5,
    0x3a203fee,0x009903ff,0xfffa93fa,0x37fd4000,0x2000bfe2,0x307fec69,
    0xa8001fff,0x3fa006ff,0x41ffcc07,0x3e201ffb,0x9b04e83f,0x3202ff40,
    0x5c0040ff,0x13e603ff,0x1fb807cc,0x4001ffa0,0x20fe2ffa,0x56c40ffc,
    0x00f981ff,0xffc89fd0,0x17ff4004,0x2880bfe2,0x17fdc698,0xd0013ff2,
    0x7e4003ff,0x07fea01f,0xf9807fee,0x7f02f81f,0x2a02fec0,0x013fa27f,
    0x7e405ff9,0x3201f304,0x01ff604f,0x9d17fd40,0x6c47ff50,0x7cc0ff9a,
    0x213fa002,0xf5000ffe,0x05ff109f,0x2a34c2c4,0x7ffc41ff,0x09ff5000,
    0x02ff4404,0x3fee09f7,0x260ff601,0x201f880f,0x2fd406fc,0xfd80fff7,
    0x417fe00f,0x0ffb00f9,0x40007fdc,0x21ae2ffa,0x2fddfff8,0x3f263ff3,
    0x9fd01541,0x801dff10,0xff104fe9,0x2607c405,0xe983fe46,0x7fd400ef,
    0x303bf204,0x03fe03ff,0xf9817fdc,0x1ea0f706,0x7405ff10,0x017fe61f,
    0x7fe809fd,0x3fa01f30,0x00bfe607,0xf88bfea0,0x1dfffb82,0x05ef7ff4,
    0x4fe803a2,0x105ffb10,0x7c407ff7,0x317e202f,0x1017fc4d,0xf7105ff9,
    0x3fff803f,0x76c0efc8,0x2fffea00,0x6403bea0,0xf300d705,0x83fb883f,
    0x0ffcc028,0x7cc1ff60,0xe80bff00,0xffa8004f,0x0a882ec2,0x3c802a60,
    0x26027f40,0xffecdffe,0x17fc400c,0x261bff10,0x2007fd16,0xffdeffea,
    0xffe800ce,0xd9bff500,0xff91001b,0xe807ffdf,0x22009b03,0x1efdcdfd,
    0x017f2000,0x3e607ff2,0x404ff880,0xfa8007fa,0x000fcc1f,0x400f9800,
    0xff5004fe,0x22005fff,0x7ed402ff,0x1efefdef,0x13751000,0x30015000,
    0x54c00035,0x2015001a,0x9a98001a,0x1ff80000,0x980ffb80,0x03ff880f,
    0x54001fd8,0x00eb80ff,0x01744000,0xd30027f4,0x1001dfff,0x54c005ff,
    0x00000aec,0x00000000,0x00000000,0x80000000,0xff5002fa,0x7f403e60,
    0x006f8802,0x0bb03fd4,0x01744000,0x44004fe8,0x8805fffd,0x698002ff,
    0x00000000,0x00000000,0x00000000,0x013a0000,0x1f304fb8,0x4c00fee0,
    0x17ea002f,0x0000ed88,0xfd0017cc,0x3fee0009,0x17fc404f,0x0001c400,
    0x00000000,0x00000000,0x00000000,0x374006d8,0x37401f30,0xc883d500,
    0x5c00fdc3,0xec88002f,0x027f4002,0x037fae00,0x00017fc4,0x00000000,
    0x00000000,0x00000000,0x03e88000,0x9803b220,0x033a200f,0xff716c40,
    0x4009d13d,0x4c00bed9,0xccb803fc,0x0004ffcc,0x417dfb50,0xccccdff8,
    0x00000000,0x00000000,0x00000000,0x44000000,0x13ae001d,0x32003e60,
    0x44ae003e,0x002fffff,0x9bdff930,0x4007dffd,0x3eeeeeec,0xca980000,
    0xdddddd10,0x0000001d,0x00000000,0x00000000,0x00000000,0x44003000,
    0x2000c002,0x0000d4c0,0x0006aa60,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x20000440,0x00100001,
    0x00011000,0x00004026,0x80020133,0x30000098,0x00800401,0xb00002c8,
    0x07930005,0x44000080,0x5c400bdb,0x98001bdc,0x8002effd,0x2e60005c,
    0x0001cffe,0x13bfff22,0x3bfffaa0,0x200598ac,0xffffffc9,0xb801b0ad,
    0x00dfffef,0x3ffff6a0,0x40b30ace,0x01dfffdb,0xf10000d7,0x7ff54001,
    0xffdb8804,0x37a2001d,0xb80effdb,0xeefd99df,0xbf101dee,0x4005fb11,
    0xf70000fa,0x01fd517f,0xfffff100,0xfb101dff,0xffd7339f,0xffd100bf,
    0x3ee62159,0x9d101fef,0x00fff5c1,0x42b7ffa6,0x05fdfea9,0xff713bf9,
    0x0001f107,0x2ea006b8,0x74404ffd,0x003fb33f,0x89ffb13a,0xeffb86fb,
    0x43fd02ee,0x7f1006f9,0x07fea000,0xbb0009f3,0x5fffd735,0x7dc0bfb0,
    0x77fcc05f,0x0ffec400,0xdff106e8,0x4027fdc0,0x2fd86ffa,0x3e83ff98,
    0x001f4000,0xd1027fcc,0x01ff883f,0x2ff40fec,0xff109ff3,0xf87f9809,
    0x005d800f,0x3f41bf60,0x7e412e00,0x017fd46f,0xffa817ee,0x0bf6000e,
    0xffc81be6,0x003ffc81,0x0df51bee,0x1ae07fec,0x000f8800,0x3604ff88,
    0x40df905f,0x42880ff8,0xffb02ffb,0xfe87fb80,0x0007d402,0x1be0bff0,
    0x7fc40900,0x401bf20f,0x0dff105e,0xf505f100,0x13fea03f,0x9000dff5,
    0x2603fe8f,0x007c44ff,0x10006b80,0x3fe609ff,0x205ff102,0xf9000ff9,
    0x07ff203f,0x5fe86fd8,0x8000be20,0x3fa87ff8,0x37ec0000,0x2e003ff6,
    0x007ffd05,0x3fe20f20,0x44bff304,0x88001fff,0xf00bfe67,0x003e81ff,
    0x220007d0,0x1ffb04ff,0xfb837f40,0x5ff7000f,0xc807ff20,0x205fe87f,
    0xff80005d,0x0007f41f,0xf90ff600,0x70b3009f,0x44000fff,0x2a05fb04,
    0x1bfee3ff,0xff50d800,0x41ffd805,0x0f88006b,0x09ff1000,0xffb01ffe,
    0x001ff903,0x7f40ffe6,0x743fdc07,0x001f704f,0x269ffd00,0x800002fe,
    0x7ffd40ef,0xffe82805,0x02000004,0x3fa1ffc8,0xc860004f,0x7fe403ff,
    0x2000fc42,0xdca8806b,0x984ff8ac,0x7fdc06ff,0x7ffd5532,0x7fe80555,
    0x4c03ff88,0x41ffc0ff,0x700002f8,0x43df7fff,0x2cccccc9,0x2203aa00,
    0x002effff,0x000bffe6,0x3fe20000,0x00bffe64,0x027fe400,0x0fa13fee,
    0xf9807d00,0xffefcacf,0x405ffb84,0xfdd73ffb,0x80ddddff,0xfb31dfd8,
    0xa87fa009,0x0009d07f,0x17fffc40,0x02dfffc8,0xf980bea0,0x800dffff,
    0x0001fffb,0x0efb8000,0x0007ffee,0x202ffd40,0x06b84ffc,0xfa803e60,
    0x27ffcc0e,0x2a02ffe4,0x07fd85ff,0xeefef880,0x5be2001d,0x0eb82fe8,
    0x3fe60000,0xbff100ff,0x7ffe4c00,0x3fffe602,0x3f200cff,0x553000ff,
    0x01555555,0xff907fa0,0x2600001f,0x3f601fff,0x001f883f,0x0ffc40b7,
    0xfc84ffc8,0x37fd404f,0x22003fec,0x9300002e,0x3f303bdd,0xf91000c0,
    0x220bfffb,0xfd9000ff,0x4409ffff,0x2ffffffd,0x001fffb0,0x3ffff6a2,
    0x07f5002e,0x0001fffb,0xd02ffec0,0x00f605ff,0x0bf901f4,0x7ec27fcc,
    0x37fd404f,0x3a003fec,0x80000006,0x9fbf904e,0xc9ffcc01,0x2fa82fff,
    0xfffa8800,0x7ff5402f,0xffd85fff,0xffe8002f,0xd8274007,0x00000fff,
    0xd313ffe2,0x1ae03fff,0x7c403e60,0x13fe203f,0xf500fff6,0x00ffb0df,
    0x4d567fd4,0x00000999,0x32fc8364,0x8bfe60bf,0x640efff8,0x7ec40005,
    0xfff7005f,0xfffb8bff,0x6ffc8003,0xfb81a600,0x400002ff,0xdfefffe9,
    0x3e207ffb,0xf702dc01,0x27fc405f,0x2e027fe4,0x07fd85ff,0x3ffffea0,
    0x02dfffff,0xb81f9800,0x2627ec6f,0xfffc83ff,0x00003e64,0x8801ffe2,
    0x2a3ffffc,0xb8005fff,0x072005ff,0x003fffa8,0x37995000,0x7b00fff6,
    0x3f203e80,0x13fe201f,0xf7013fee,0x00ffb0bf,0xffffffa8,0x004fffff,
    0x4fd82740,0x3ffa37dc,0x13fffd01,0x6400007d,0x2a0011ff,0x3fe66fff,
    0xffb8007f,0xf3016005,0x00000bff,0x007ffcc0,0x00f981ae,0xf8807ff6,
    0x05ffa84f,0x7ec1ffe4,0x99a5c007,0x7fcbaaa9,0xf81b2000,0xa87fd43f,
    0x3fe606ff,0x00005cef,0x01c87fd4,0x741fff70,0x5c000fff,0x016005ff,
    0x0001bffa,0x04ffc800,0x0b901f88,0x2202ffd8,0x6ff884ff,0x6c0ffec0,
    0x01ae007f,0x98001f98,0x87ff101f,0xdff72ff9,0x0ffffc80,0x3fcc0000,
    0x7ffc0079,0x00fffe60,0x400bff70,0x0fffa802,0x20051000,0x36006ff8,
    0xfc807d04,0x17fe204f,0xfd007fec,0x401ff60f,0x07c004f9,0x880fa200,
    0x8ffcc3ff,0x7401fffd,0x06204fff,0x3649f900,0xfb0ffd00,0x7dc001ff,
    0xe800005f,0x1b0005ff,0x003ff200,0x00f986b8,0xf103ffdc,0x0bfea0bf,
    0xfd827fc4,0x00bfb007,0x364002dc,0x3ea1ff40,0x09fff70f,0x05ffffc8,
    0x0ff80059,0x3e600bf2,0x5ffe885f,0x017fee00,0xfff30008,0x002c8007,
    0x88005ff7,0x4402e41f,0xff103fff,0xb827f40b,0x1ffb00ff,0x039ffb00,
    0x54003644,0x44fd800f,0x3ffe67fb,0xebee982f,0xc98befff,0x5c02ee27,
    0x017fe42f,0xfc803ff2,0xffb800df,0x05fe8805,0x009ffd10,0x77d40136,
    0xe89b0001,0x7fff7002,0x440dff90,0x1ffc40ff,0x1001ffd0,0x99ddffff,
    0x80019fdb,0xff3003f8,0x7fdc3fe8,0xdfecceff,0xfffffd10,0x7ffdc5ff,
    0x81eeb89c,0x20acfffc,0xa802ffc8,0xb881ceff,0xfa803ffe,0xfb1000ff,
    0x2e237bff,0xfc8803ec,0x9aa0000d,0x3f6000f9,0xfcebbdff,0xf980deff,
    0x407f910d,0x1004fff9,0xffffffd7,0x1760003b,0xf91bf500,0x3fffea0b,
    0xff902eff,0xfe885dff,0x204effff,0xeffecabc,0x2000dffe,0xddfffdc8,
    0x2002effe,0xb8006ff8,0xfffffffd,0x3fb2a01c,0xf880001d,0xf7000b91,
    0xff15ffff,0xdfda803b,0xffb501cf,0x0059dfff,0x00026a62,0x30001f50,
    0x53007bd9,0x2a600137,0x00d54c00,0x9bba8828,0xb9880000,0x100009aa,
    0x75100005,0xaa880135,0x1a800001,0x54c00035,0x22000541,0x00000002,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00880000,0x8004c000,0xeeeeeeea,0x0003d984,
    0x26003322,0x0770cddb,0x15555555,0x20555550,0x2f7261c9,0xeeeeea81,
    0x3bbb25ee,0xb80eeeee,0x90eeeeee,0xdddddddd,0xeeeeb807,0xdddd91ee,
    0x5c0ddddd,0x2eeeeeee,0x80003d98,0x800801da,0x0cefffd8,0x037d4000,
    0xffffffe8,0x9ffd712f,0x1ffe4000,0xf959fb10,0xfd509fdf,0xd5015dff,
    0x7f5c45df,0xfffffb2f,0xffffb107,0xffffb101,0x07ff9003,0x19ffffb1,
    0x37ffa600,0x7fffd441,0xffd5000c,0x4ffeb887,0xfff91000,0x007e4c05,
    0xfffffff5,0x3e20005f,0xfffa806f,0x2aa6ffff,0x20004ffe,0xbf502ffb,
    0x04ffe881,0xf9013ffa,0xafffcc83,0xffffedfb,0x40bffd02,0x3005fff8,
    0xfffe809f,0x07fd4000,0x000fffb0,0xfd5505f7,0x2ee0009f,0xfd982fff,
    0xdff100ff,0x1ffffb77,0x0dffb000,0x333339d0,0x09ff5013,0xf102a800,
    0x13fea01f,0x7406ff98,0x177ff205,0x2e0dfff7,0x7fe406ff,0x801f5006,
    0x4002fffa,0x7fe402fa,0x01fa8006,0x00013fea,0xddc85ff9,0x3dd00fff,
    0x00bfff30,0x406fffb8,0x7cc000fa,0x2000004f,0x3fe603fd,0x807fec04,
    0x3fee02f8,0x07fff304,0x4c03fff1,0x6c800fff,0x009ffd00,0xffb806d8,
    0x00fa8005,0x00013fe6,0x7f405ff7,0x201f880f,0x3000fffa,0xe80dfd5f,
    0x4ff98004,0xff300000,0x027fc403,0x36413fe6,0xd80bfee0,0x7ffd04ff,
    0x803ffe80,0xfff5003f,0x00be2001,0x20017fee,0x3fe200fa,0x7fdc0004,
    0x203ff602,0x1ffe803a,0x1bfa9d00,0x000befa8,0x00013fe6,0x1007fdc0,
    0xffb009ff,0xfb807f01,0x17fea02f,0x2e037fdc,0x07d406ff,0x007fff00,
    0x7fdc01ee,0x00fa8005,0x00013fe2,0x7ec05ff7,0xf900080f,0x74d9001f,
    0x3fffa06f,0xff9803ef,0xf9000004,0x04ff880f,0x7d44ffa8,0x017fdc00,
    0x3e20fff3,0x3ff201ff,0x0017200f,0x3e00dff9,0x0bff7004,0x4401f500,
    0x5c0004ff,0x3ff202ff,0x1ff20000,0x6fe87e60,0xffffff30,0x7fcc01bf,
    0x006f6e24,0x0ffb076a,0xd004ff88,0x402ec1ff,0x3e202ffb,0x13ff606f,
    0x203ffff8,0x7fc4003f,0x00fd402f,0x8005ffb8,0x3fe200fa,0xaaaaaa84,
    0x202ffb81,0x20000ffc,0x1f4405fd,0x54c41bfa,0x1fffffdb,0x3ee9ff30,
    0xb881ffff,0x7fec2fff,0x013fe200,0x1f8a7fd4,0x402ffb80,0x3fea05ff,
    0xdff9f307,0x20003ea0,0x36c05ffd,0x00bff700,0x7c401f50,0xcfffa84f,
    0x02ffb80a,0x80003ff2,0x436c02ff,0x3a2006fe,0xf980efff,0xfc9bebcf,
    0xfffbb86f,0x1017fe42,0x7f4009ff,0xf7006c8f,0x27fc405f,0x3207ffe0,
    0xd81fff8e,0xfff30005,0x800be201,0xa8005ffb,0x13fe200f,0xf7003be2,
    0x07fe405f,0x405f9800,0x06fe80fa,0x84fffc80,0xfc84fff9,0x85ff902f,
    0x3e205ffb,0x3fea004f,0xff7003fc,0x017fcc05,0x4fe13ff2,0x17c44ffd,
    0x09ffd000,0xff7001f2,0x01f5000b,0x3e227fc4,0x05ff7005,0x80007fe4,
    0x0be201fd,0xa80037f4,0x7fcc0fff,0x207ff305,0x7fcc2ffb,0x09ff502f,
    0x00fffe80,0x5c07ff70,0x7ffa805f,0x7ffa87d4,0x500007d4,0x09f01fff,
    0x005ffb80,0x3e200fa8,0x8013e64f,0x3f202ffb,0x3fa8000f,0xdfd02ec0,
    0x0ffec000,0x7c413fe6,0x05ff704f,0x2217fff9,0x4004ffdb,0x2e004ffb,
    0x3ff105ff,0xd8bffe00,0xbb0fffc6,0x7fff0000,0x5c000fa8,0xfa8005ff,
    0x4d3fe200,0x7fdc004f,0x003ff202,0x1f7017a0,0x00037f40,0xff987ff5,
    0x209ff104,0xfe882ffa,0xf8cfffff,0x1ff8004f,0x0fffee00,0xfc800ff6,
    0xff90fe4f,0x0000be29,0x0bb1bfee,0x00bff700,0x7c401f50,0x8004facf,
    0x3f202ffb,0x036c000f,0x2aaab3e6,0xaaffeaaa,0x42ff8002,0xff104ff9,
    0x40bfea09,0x13ffffd8,0xdb0009ff,0xebffb800,0x001eecdf,0x0fabffcc,
    0x0fabffd4,0xfff88000,0x50005f12,0xf7000bff,0xffdff880,0x7fdc000f,
    0x003ff202,0x7dc00ec8,0xffffffff,0x007fffff,0x7fcc0fd8,0x209ff104,
    0x54402ffa,0x0027fc41,0x3ee001fc,0x0015532f,0x2ed7ff40,0x05dafff8,
    0x57ff6000,0xff50007c,0x80f7000d,0x6ffccff8,0x017fdc00,0x2a001ff9,
    0xfffb800f,0xffffffff,0xe8007fff,0x104ff987,0x3fea09ff,0x9ff10002,
    0x000fa800,0x00017fdc,0x0bf7fee0,0x017effe4,0x3fff3000,0x3e60009f,
    0x05d8007f,0xffda7fc4,0x0bfee004,0x9800ffc8,0x7400001f,0x3e20006f,
    0x104ff983,0x3fea09ff,0x9ff10002,0x8004e800,0x00002ffb,0x807fffc4,
    0x0007fff9,0x0feffe80,0x0bffe000,0x4404f880,0x5ffd14ff,0x80bfee00,
    0x7cc00ffc,0x74001801,0x1b20006f,0xf8827fcc,0x05ff504f,0x013fe200,
    0xb8000fb8,0x800002ff,0x7f405ffe,0xa800005f,0x40005fff,0x36005ffc,
    0x27fc400f,0x7003fff3,0x7fe405ff,0x2007ea00,0x37f4002c,0xfc817f44,
    0x209ff300,0xff504ff8,0x3fe20005,0xf99df705,0x3fee0005,0xfb800002,
    0x17fe402f,0xfff80000,0x7fc40002,0x04fd803f,0x7dc4ff88,0x7fdc00ef,
    0x403ff202,0xcccccefa,0x000ffccc,0x7fc437f4,0x0debacff,0x4413fe60,
    0x7ff705ff,0x1bfe6000,0x027ffff4,0x007ff900,0x00ff1000,0x00000ff3,
    0x800037dc,0x10adffe8,0x2009fd95,0xffd85ff9,0x01ffdc06,0xff501ffb,
    0xffffffff,0xfd000bff,0x3fffee0d,0xffb803df,0x20fff506,0x44004ffd,
    0x42cfffea,0x0003effb,0x57ffff95,0x04d80000,0x000009d0,0x00001fc4,
    0xffffff71,0x5c003bff,0xfff886ff,0x0bffb00d,0xf30bffa2,0xffffffff,
    0x0005ffff,0x0a880dfd,0xffffd500,0x3fff6abd,0xfffd74ef,0x2a6005df,
    0x882aaaaa,0x55540001,0x0002aaaa,0x1a800cc0,0x05c00000,0xaa980000,
    0x2e000aab,0x24effffe,0x1dfffffd,0x7dffffd5,0x3ffffb6a,0x0000004e,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0xddddd700,0x07dddddd,0x20000200,0xeeeeeeeb,0xdddd50ee,
    0x775c00bd,0xd51eeeee,0x9ddddddd,0x40015799,0x0eeeeeea,0x77764000,
    0xdddd34ee,0x00bddddd,0xeeeeeea8,0x3ba61eee,0x80eeeeee,0xeeeeeeea,
    0x500accce,0xdddddddd,0xeeeeb83d,0x3aa6eeee,0xeeeeeeee,0x2eeeeeee,
    0x7fffffc4,0x03ffffff,0x00006a80,0x077fffa6,0x02fffecc,0x40bbfea0,
    0xcdefffe9,0x002effed,0x027fffcc,0x7ffff300,0xffffb301,0x74c00013,
    0x2e00dfff,0x9801dfff,0xfddefffe,0x3a203fff,0x4c00dfff,0x300cffff,
    0x9999fffd,0x87ffdb99,0xfffffffb,0x000fffff,0x00001fd8,0x2003ffee,
    0x4003fffd,0x7fd401fb,0x09fff707,0x0ffffb80,0xbfff9000,0x02fff980,
    0x3fff5000,0x002ffb80,0x74c3ffd4,0xff500dff,0x3ff2003f,0x07ffa807,
    0x57743fb8,0x0017e601,0x00017fe2,0x2007ffa8,0x2002ffff,0x7fcc00fb,
    0x0bffea07,0x3ffffa80,0xffff8800,0x0fffc404,0xfff98000,0x007fa200,
    0x4c1ffe60,0xff306fff,0x3fee001f,0x07ff9806,0x0074c9b0,0x64001fdc,
    0x00000fff,0x7c00dff5,0x5000ffff,0x7ff8801f,0x002fff40,0x00dffbf3,
    0x09ffbf90,0x0001fff0,0x881ffe20,0xf10001fe,0x7ffdc0ff,0x007ff880,
    0x2601bfea,0x493007ff,0x01fd000b,0x07ffff00,0x1bfea000,0xefffdf80,
    0x8807a800,0x7fe407ff,0xf5f3000f,0xcf8005ff,0xff804ffc,0xf100000f,
    0x07f620ff,0x07ff8800,0x220fffe6,0x3ea007ff,0x7ff9806f,0x22000200,
    0xbfb8005f,0x500007ff,0x5fc00dff,0xa805fffa,0x07ff8807,0x800fffdc,
    0x06ffb9f9,0x3ff23ee0,0x00fff804,0x0fff1000,0x80003fd1,0x7fc07ff8,
    0x07ff885f,0x201bfea0,0x00007ff9,0x4001fdc0,0x005fff5e,0x00dff500,
    0x4fffb9fc,0x7c403d40,0x7ffec07f,0xf13f3000,0x57a005ff,0xff804ffc,
    0xf100000f,0x01fe88ff,0x07ff8800,0x7c42fffc,0x3fea007f,0x07ff9806,
    0x3fa00014,0xc8fcc000,0xa80005ff,0x8fe006ff,0x2a02fffd,0x07ff8807,
    0x8017ffe2,0x0bff91f9,0x3ff23f50,0x00fff804,0x4fff1000,0x00001fe8,
    0x7cc0fff1,0x7ff883ff,0x01bfea00,0x5981ffe6,0x017e2000,0xfff89b60,
    0x7fd40001,0xfd0fe006,0x01ea03ff,0xfd81ffe2,0x3e6000ff,0x803fff11,
    0x013ff26e,0x00003ffe,0xfe8bffc4,0x3e200001,0x3fff207f,0x007ff880,
    0x2601bfea,0x017607ff,0x4003fb80,0x27fec2f8,0x1bfea000,0x7fc43f80,
    0x807a80ef,0xfea87ff8,0x7cc000ef,0x9817ff61,0x013ff22f,0x00003ffe,
    0x7fcfffc4,0x7c400003,0x7fff507f,0x267ffe20,0x99999999,0xf9806ffb,
    0xfcccccff,0x3fa0005f,0x543e4000,0x20000fff,0x3e006ffa,0x85fff983,
    0xfff8807a,0x2dfffedc,0x4c3f3000,0x8db00fff,0xff804ffc,0xf100000f,
    0x05fffdff,0x7ffc4000,0xfffda9ab,0x3fffe202,0xffffffff,0x9806ffff,
    0xeeeeefff,0xf10005ff,0x209f000b,0x20003ffe,0x3e006ffa,0x89fff703,
    0xfff8807a,0x00fffcaa,0xfb07e600,0xc87f309f,0xfff804ff,0xff100000,
    0x05ffff3f,0x3ffe2000,0x0acdeecb,0x003ffc40,0xf300dff5,0x017620ff,
    0x2001fdc0,0xdff700fa,0x37fd4000,0x7e407f00,0x201ea2ff,0x7fec7ff8,
    0x07e60006,0x7c81fff5,0xf804ffc8,0x100000ff,0x3ffe2fff,0xf880002f,
    0x7c40007f,0x3fea007f,0x07ff9806,0x7ec00162,0x102f4000,0x20003fff,
    0x3e006ffa,0x8fffec03,0x7ff8807a,0x001fffc4,0xffe81f98,0x3f20fe23,
    0x0fff804f,0xfff10000,0x017fff44,0x01ffe200,0x00fff100,0x4c037fd4,
    0x002c07ff,0x26002fc4,0xeeeeeeef,0x0005fffe,0x7c00dff5,0x7fff4403,
    0xff8807a8,0x01fff987,0xfa81f980,0x3203ee7f,0xfff804ff,0xff100000,
    0x2fffe88f,0x1ffe2000,0x0fff1000,0x4037fd40,0x00007ff9,0x6c003fb8,
    0xaaaaaaae,0x000fffba,0x2005ffa8,0xfff9803f,0xff8807be,0x01dff907,
    0xfd01f980,0x7e413e7f,0x0fff804f,0xff880400,0x2fffe887,0x0fff1000,
    0x07ff8800,0x201bfea0,0x00007ff9,0x22000fd8,0x7ffd002f,0x09ff5000,
    0xfa801fc0,0xf8807fff,0x17ffa07f,0x2e03f300,0x900fbeff,0xfff009ff,
    0xf1058001,0x3ffa20ff,0xff88002f,0x7fc40007,0x1bfea007,0x001ffe60,
    0x800bf100,0x3fea007b,0x3ffa8006,0xb800fe00,0xf8807fff,0x3ffe207f,
    0x407e6003,0x205ffff8,0xff804ffc,0x416a000f,0x3a207ff8,0x44002fff,
    0x440007ff,0x3ea007ff,0x7ff9806f,0x1fd40000,0xf0013e00,0x0ed405ff,
    0x7c003ff5,0x3ffec003,0x007ffc40,0x2003fff5,0x3ff201f9,0x13ff201f,
    0x003fff10,0xfff98174,0x3fffa200,0x1ffe6003,0x1fff3000,0x01bfea00,
    0x0001ffe6,0x5c001fb0,0x7fec001f,0x5cdff106,0x13e2005f,0x00ffd100,
    0xd801fff3,0xf9801fff,0x01bfe202,0xf8809ffb,0xfe9802ff,0x01fff300,
    0x04ffff98,0x001fff30,0x007ffcc0,0x9807ffb8,0x00000fff,0x7c400bf1,
    0xfffa8007,0xb4fff882,0x77dc001d,0x03fc4000,0x013fff62,0x017fffd1,
    0xc8037f62,0x3ffe602f,0xfff9100f,0x9755559f,0x3620bffb,0x7c403fff,
    0x00aeffff,0x009fffb1,0x0ffff220,0x07fffa20,0x03fffd88,0x007f5000,
    0x0003ff62,0x705ffff7,0x003bdfff,0xbfffff91,0x983cc005,0xfffffffd,
    0xffff301c,0x3ff661df,0x6981dfff,0xfffffd70,0x3ff227df,0xffffffff,
    0x43ffffff,0xffffffd9,0x7ff5c0ce,0x25ffffff,0xffffffd9,0xfd9800cf,
    0x1cefffff,0x7ffffed4,0x3ff664ef,0x00ceffff,0x2002a600,0x1efffffb,
    0x7ffff540,0x02a81fff,0x0c000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0xeeee9800,0x40eeeeee,
    0xeeeeeee8,0x3bbbba65,0xeeeeeeee,0x7540eeee,0xeeeeeeee,0x000abccc,
    0xddddddd9,0xdddddddd,0x77754bdd,0xcdeeeeee,0xd1000aac,0xdddddddd,
    0x5ddddddd,0x7777775c,0x3bae06ee,0xd11eeeee,0xdddddddd,0x0c01ecc7,
    0x00015000,0x19944000,0x36e20000,0x00afffff,0x4077ffe2,0xcccfffd9,
    0xffeccccc,0xffffd301,0xffffb9bd,0xeffd807d,0xefffeeee,0x86fffeee,
    0xbcdfffe9,0x0dfffdcb,0x677ffc40,0xfccccccc,0xffe986ff,0xd8800eff,
    0xf9102fff,0xffd05dff,0x0001d405,0x0000003f,0x3bea9fb3,0x7e400002,
    0x7fd007ff,0x01fff100,0x7d405f50,0x3fee207f,0x03fb02ef,0xf301fff1,
    0x81ffea0f,0x201fffc8,0xff9004f9,0x7ffec03f,0x03bee003,0x740fffe0,
    0x00fa02ff,0x00001f80,0x30b7faa0,0x00017ffb,0x00ffff20,0x3e2007f5,
    0x05b000ff,0x4403ffcc,0x2e82fffe,0x201fff10,0x0fff3079,0x201fff90,
    0xfff3005a,0x6fff8807,0x4007f600,0x9b302fff,0x0001fdc0,0x8800003f,
    0x4401cffb,0x0001cffc,0x100fffe8,0xfff8009f,0x44055000,0x3f6007ff,
    0xf10341ff,0x883401ff,0xfff007ff,0x2200ea09,0xf5005ffe,0x7f3005ff,
    0x017ff400,0x003ffa80,0x400007e0,0x000bffc9,0x016ff5c4,0x0bfff100,
    0x3fe001ba,0x8802000f,0x3e6007ff,0xf10146ff,0x881401ff,0xffb007ff,
    0x36006e0d,0x36000fff,0x36c00fff,0x00bffa00,0x2b7ffee0,0x00fc002a,
    0x0bbf6a00,0x77ed4000,0xfff50003,0x8000fc85,0x00000fff,0xc800fff1,
    0xf1002fff,0xf10001ff,0x3ff200ff,0x3fea0006,0x7fc4002f,0x007ea05f,
    0x8005ffd0,0xeeeffeeb,0x007e000e,0x077fae20,0x7e4c0000,0x7ec000cf,
    0x003f70ff,0x3003ffe0,0x0fff1003,0x05fff880,0x001fff10,0x200fff10,
    0x10004ffe,0x2000bfff,0xf882fffa,0x2ffe8004,0x07ff3000,0x1000fc00,
    0x00019ff9,0x3fee2000,0xfff1001d,0x40007f39,0x15c00fff,0x003ffc40,
    0x4007fff4,0x8000fff8,0xf9807ff8,0xfb0001ff,0x6c0001df,0x03640eff,
    0x002ffe80,0x0007ff30,0xff9800fc,0x00000005,0xa8027fdc,0x0005ffff,
    0xd1007ffc,0x0fff1005,0x03fffb00,0x001fff10,0x980fff10,0x70004fff,
    0x80003fff,0x3e64fff8,0x5ffd0002,0x0ffe6000,0x7fffffd4,0xffffffff,
    0x3faa4fff,0x0000002e,0x0067fe44,0x003fffb0,0xaabfff80,0x02ffccaa,
    0x8007ff88,0x8802fffb,0x88000fff,0xa99abfff,0x002effdc,0x009fff30,
    0x47ffea00,0x3fa0005e,0xff30002f,0x26666207,0x99bf9999,0x98099999,
    0x0000bffc,0x0bbf6600,0x2fffc400,0x3bffe000,0xfffeeeee,0x07ff8802,
    0x02fffa80,0x000fff88,0xffffff88,0x02ffffff,0x01bffa00,0x9dffb000,
    0x7f40001f,0xff30002f,0x00fc0007,0x39ff9100,0x7f540000,0x7d40001d,
    0x20002fff,0x3e600fff,0x07ff8802,0x02fffb80,0x000fff88,0xa887ff88,
    0x002effeb,0x000fffe4,0x3fffe200,0x7ff40002,0xff980602,0x007e0003,
    0x16ff5400,0xcffc8800,0xcf880000,0x0000fffd,0x2c801fff,0x007ff880,
    0x800fffc8,0x8000fff8,0x6c407ff8,0xf3005fff,0x000007ff,0x0001bfee,
    0x3e20bffa,0x3ff981ef,0x0007e000,0x17dfb300,0x17dfb300,0x8af40000,
    0xf0005fff,0x02a801ff,0x8007ff88,0xf1007ffd,0xf10001ff,0x3ff600ff,
    0x7ff4402f,0x2a000005,0xe80006ff,0xfffb82ff,0x003ff985,0x000007e0,
    0x4067fe44,0x0002dfea,0x3ea0ed80,0xff8002ff,0x8800800f,0xff8007ff,
    0xfff1006f,0xfff10001,0x17ffea00,0x001fff90,0x37fd4000,0x17ff4000,
    0x207fffcc,0x20003ff9,0x4000001f,0xff33feb8,0x20000039,0xfffd81fb,
    0x07ffc000,0x7ff88000,0x17ffd400,0x00fff880,0x007ff880,0xfa81fffe,
    0x000002ff,0x00037fd4,0xa9817ff4,0x1ffcc1f8,0x0003f000,0xb99d4000,
    0x26000000,0xbfff103f,0x00fff800,0x7ff881c0,0x02fff400,0x001fff10,
    0x400fff10,0xff105fff,0x005800bf,0x0006ffa8,0x4c02ffe8,0x004ff886,
    0x000007e0,0x00000000,0x3ee02fc4,0x3fe003ff,0x4166000f,0x2e007ff8,
    0x22000fff,0x88000fff,0xff1007ff,0x3fff607f,0x00166000,0x0001bfea,
    0x7b00bffa,0x01b9bfe0,0x00000320,0x00000000,0x7ec01ba2,0xff8801ff,
    0x05d1001f,0x5c01ffe2,0x44003fff,0x98000fff,0xffb007ff,0x5fff701f,
    0x8004d800,0x80006ffa,0x3aa02fff,0x7dfffd00,0x00000000,0x00000000,
    0x26003fd1,0x4400efff,0xd8801fff,0x0fff300f,0x00effd88,0x01fff980,
    0x407ffa80,0x882fffc8,0x22004fff,0xfb8002fb,0xff80007f,0x00dd883f,
    0x0013ffa2,0x00000000,0x3ea00000,0xff3002ff,0x7dc03dff,0x9999adff,
    0x105ffba9,0x3579fffb,0x07fffb75,0x3fff2200,0x7fec4004,0xba99abcf,
    0xfd00efff,0x555557ff,0xfffb7555,0xffd88003,0x3ee0002f,0x001a85ff,
    0x00000002,0x00000000,0x3ffffee0,0xffb300ef,0x23ffffff,0xfffffec8,
    0xffffffff,0x7fecc2ff,0xefffffff,0x80009acd,0xffffffc9,0x3f6600cf,
    0xffffffff,0x202ceeff,0xfffffffb,0xffffffff,0x36a007ff,0x4effffff,
    0xffff9100,0x0005bfff,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x49acdcb8,0x8d555554,0x2aaaaaa8,0x98555544,0x41aaaaaa,0x552aaaa8,
    0xaa981555,0xcb8801aa,0x951002ce,0xb930079d,0x9800159b,0x2200acdb,
    0xaaaaaaaa,0xc981aaaa,0xaa98f6a3,0x2aa1aaaa,0x8b2602aa,0x3001bda8,
    0x0e6dc479,0x0056e544,0x08803b10,0x326fba20,0x7ff547ff,0x3ffaa1df,
    0x7fdc43df,0xffff930d,0x5dfb5017,0x30bffeea,0xb807fff9,0x0effdbdf,
    0x3aeb7ea0,0x5bf901ff,0x5005ffd7,0x7ff957bf,0x3bbffe60,0x3fffeeee,
    0x369ffd71,0xff732fff,0x7fdc3bff,0x7ff5c43e,0x3fffff53,0xaa7ff540,
    0x265fffff,0x006ffffe,0xff981bf2,0xfd01fb01,0x2207ffa0,0x17a00fff,
    0x2e02ffe4,0x02ffb80f,0x76c07ff7,0x4077fd41,0x7ffc42fc,0x7ec37e40,
    0x217e600f,0x1f985ffa,0xbb97ff20,0xfecccffe,0x27ffc43f,0x2ea03be2,
    0xabeabffe,0xba80fffd,0x9beacffe,0xcf99fffc,0x004fffba,0x7fdc0df9,
    0xf305f884,0x640ffea0,0x03f101ff,0x7d01ffe2,0x4c0bfea0,0x07f503ff,
    0xbf513ff2,0xff0fff60,0x205ff509,0xff900ef8,0x3ea05987,0xeffa80ef,
    0x7fcc0ea4,0x5003b20f,0xff909dff,0x277fd405,0x20777fd4,0xcd887ff8,
    0x8ee49f50,0xff984ffb,0x37fc0d00,0xd704ff98,0x302ffc80,0x0bfea01f,
    0xfe81ffcc,0xe8fff500,0x85ff501f,0x3ff983ff,0x7c40bfd0,0x440e60ff,
    0xff301fff,0x5ffc800d,0xff3003f3,0x80ffea09,0xff105ff8,0x543ff40f,
    0xb2f88eff,0x0ffea9ff,0x0607bfe2,0xf881ffc8,0x403e80ff,0x09905ff9,
    0xf9817fd4,0xccef983f,0xfffdcccc,0x4401ff50,0xf980ba80,0x03ff883f,
    0xe801ffec,0x3fe603ff,0xbffe8004,0x7ff3003f,0x8813fe60,0x1ffa04ff,
    0xfd80ffc8,0xffd9f9ef,0x203ff30e,0x000cfffd,0xff709ff3,0x800f987f,
    0x01f80ffd,0x7cc0bfea,0xaaefb83f,0xaaaaaaaa,0x0000ff70,0x41fffe4c,
    0x7dc02ffa,0x5ffc805f,0x0027fcc0,0x002fffcc,0x3e207ff3,0x13fe204f,
    0x3f207fe8,0xffb5101f,0xff8817bd,0xffffd100,0x0ffd0019,0x4c8dff5f,
    0xa89ff500,0x817fd406,0x5fc83ff9,0x007fd800,0xf9aeea80,0x02ffc83f,
    0x2a037fd4,0x7cc00eff,0xff70004f,0x1ffcc00b,0x2204ff88,0x1ffa04ff,
    0x2201ffc8,0xd00befdb,0xfffc880f,0x7fdc01ef,0x0ffe5aa2,0x3ff4003f,
    0x5ff500fa,0x360ffe60,0xffd8007f,0x5fd30000,0x7ec1ffcc,0x37fcc02f,
    0x003fff10,0x20009ff3,0x3002fff9,0x3fe207ff,0x813fe204,0x3ff207fe,
    0xeaffeb81,0x2ec4effa,0xffffd880,0xe97fe201,0x1aa9ff32,0x265ff700,
    0x17fd400f,0xfc83ff98,0x7fe4000f,0x0ef98001,0x7ec1ffcc,0x27fc403f,
    0x2007ffd0,0x88004ff9,0x800fffce,0xff103ff9,0x027fc409,0x7fe40ffd,
    0x44fffd41,0x23ffe89f,0x3a60204b,0x7fec05ff,0xdbff46a8,0xb7fc4003,
    0x2ffa804c,0xf707ff30,0x2e17009f,0x265804ff,0x3ff982ff,0x4c05ffb8,
    0xbff902ff,0x027fcc00,0x5ffbaec0,0x103ff980,0x7fc409ff,0xc81ffa04,
    0x8ffcc1ff,0x45fd13fa,0x22073019,0x7fd407ff,0x5ffdc3eb,0xffd8000f,
    0xff9801fa,0x307ff303,0x2cc01fff,0x5401fff5,0x2603fee4,0xfff983ff,
    0x203fea00,0x5100effa,0x4004ff98,0x0fff60eb,0x2207ff30,0x3fe204ff,
    0xc81ffa04,0x7e4081ff,0x0d300045,0x7fc03fe4,0x5fff887f,0xdfff3000,
    0x413fe200,0xffd04ffc,0xfd07a03f,0x43f101df,0xff982ffd,0x407ffb04,
    0xfff885fc,0xff30aa01,0x20fcc009,0x2601fff8,0x9ff103ff,0xd027fc40,
    0x0ffe40ff,0x00037ec0,0x17ee07f3,0x6413ff20,0x3a0002ff,0x3fe002ff,
    0x3ff7620f,0x9ffff305,0xf50bf957,0xfb537dff,0x20dffa8b,0x4195fffb,
    0xdf01fff9,0x900fffa0,0x005ff985,0x3fee07f1,0x413fea06,0x3e605ff8,
    0x81ffa05f,0xfa802ffc,0x3fe60003,0x003fa20b,0x7cc03fe2,0x3fd40007,
    0x37ffee00,0xefff9bfd,0xfffffb85,0xff901fff,0x01dfffff,0x1bfbffff,
    0xf307dfff,0x076c43df,0x4ccf7fe4,0x41fca999,0x4400fffb,0xfff101fe,
    0x41bff20b,0x3ee07ffa,0x3fff106f,0x000fffa0,0x7f7cc000,0x000ceddf,
    0x009d013a,0xb0009f00,0x3e65ffff,0x3fa601cf,0x5400efff,0x204fffff,
    0x363fffd9,0x3fa203ff,0x980ceeef,0xffffffff,0xd51fffff,0x01bfffff,
    0xa85ffff3,0x53fffffe,0x29dffffd,0x5effffda,0x3bffff66,0xffffd98d,
    0xfffd91df,0x000005df,0x006a6210,0x026004c0,0x00026000,0x02a20d44,
    0x000aa880,0x8800554c,0xa9800100,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x20010000,
    0x30220200,0xdddddddd,0xdddddddd,0x00cccc9d,0x00600066,0x7ffe4000,
    0x0007ffff,0x00000000,0x00000000,0x00000000,0x00000000,0xf500b900,
    0x90ffcc1f,0x6664c9ff,0xcccccccc,0x22cccccc,0xfd507ffa,0x770039ff,
    0x3fffffe6,0xffffffff,0xfff92fff,0x000fffff,0x00000000,0x00000000,
    0x00000000,0x00000000,0x805ff100,0x3fee3ffc,0x007fffe4,0x3ff70000,
    0xfca9cfa8,0x23d00bef,0xaaaaaaa8,0xaaaaaaaa,0x777750aa,0x00007777,
    0x00000000,0x00000000,0x00000000,0x00000000,0xd80d9bb0,0x93ff23ff,
    0x0004fffe,0x743fc800,0x7bffb502,0x0000bd73,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x01fc47d4,0x7fdc5ff7,0x01726a23,
    0x136c0000,0xfff9300d,0x0000017d,0x00000000,0x00000000,0x00000000,
    0x00000000,0x40000000,0x5403ee4e,0x0bfe60ff,0xaaaa8974,0xaaaaaaaa,
    0x101aaaaa,0x2200041d,0x00000001,0x00000000,0x00000000,0x00000000,
    0x00000000,0x6c800000,0x8ff305e8,0x27981ff8,0xfffffffa,0xffffffff,
    0x002205ff,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x30000000,0x203f305f,0xe887e85f,0x00000003,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x41b205d8,0x75c6d84e,
    0x00000002,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x3e201fa8,0x24c83c83,0x00000028,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x7009d100,0x2980a81f,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x3a001f90,0x00000004,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x16c40000,0x0001d300,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,
};

static signed short stb__times_38_usascii_x[95]={ 0,3,2,0,1,1,1,1,1,0,2,0,1,1,
2,0,1,4,0,1,0,1,1,1,2,1,2,2,0,0,0,1,1,0,0,1,0,0,0,1,0,0,0,0,
0,0,-1,1,0,1,0,2,1,0,0,0,0,0,0,2,0,1,0,-1,1,1,-1,1,1,1,1,1,0,1,
-3,0,1,0,0,1,-1,1,0,1,0,0,0,0,0,0,0,4,2,2,0, };
static signed short stb__times_38_usascii_y[95]={ 30,6,6,6,5,6,6,6,6,6,6,9,26,21,
26,6,6,6,6,6,6,7,6,7,6,6,14,14,10,15,10,6,6,6,7,6,7,7,7,6,7,7,7,7,
7,7,7,6,7,6,7,6,7,7,7,7,7,7,7,6,6,6,6,35,6,14,6,14,6,14,6,14,6,6,
6,6,6,14,14,14,14,14,14,14,9,14,14,14,14,14,14,6,6,6,18, };
static unsigned short stb__times_38_usascii_w[95]={ 0,5,10,17,15,27,25,4,10,11,13,19,6,10,
5,10,15,9,16,14,16,14,15,15,14,15,5,6,19,19,19,13,30,25,22,21,24,21,18,24,25,11,14,26,
21,30,26,23,18,23,24,16,20,25,25,33,25,25,21,9,10,8,16,19,7,15,17,14,17,14,14,16,17,8,
10,18,8,27,18,15,17,17,12,12,10,18,17,25,17,17,15,11,3,11,19, };
static unsigned short stb__times_38_usascii_h[95]={ 0,25,11,25,28,25,25,11,32,32,15,19,10,3,
5,25,25,24,24,25,24,24,25,24,25,25,17,22,17,8,17,25,32,24,23,25,23,23,23,25,23,23,24,23,
23,23,24,25,23,31,23,25,23,24,24,24,23,23,23,31,25,31,13,3,7,17,25,17,25,17,24,24,24,24,
32,24,24,16,16,17,24,24,16,17,22,17,17,17,16,24,16,32,32,32,6, };
static unsigned short stb__times_38_usascii_s[95]={ 250,177,156,217,137,1,29,247,41,1,233,
196,167,242,250,175,204,245,1,55,18,35,183,1,235,148,250,178,216,174,236,
112,63,17,95,126,49,27,235,87,209,166,43,163,141,110,58,153,190,103,85,
70,74,191,165,131,1,140,118,127,164,94,139,222,194,107,199,92,186,77,220,
235,50,68,52,217,236,205,186,123,113,77,155,1,185,58,40,14,168,95,139,
29,25,13,202, };
static unsigned short stb__times_38_usascii_t[95]={ 25,1,151,1,1,34,34,134,1,1,134,
110,151,151,19,34,34,60,60,34,60,60,1,85,1,34,1,110,110,151,110,
34,1,85,110,34,110,110,85,34,85,110,85,85,85,85,85,1,85,1,85,
34,110,60,60,60,110,110,110,1,34,1,151,151,151,134,1,134,34,134,34,
34,60,60,1,60,60,134,134,134,60,60,134,134,110,134,134,134,134,60,134,
1,1,1,151, };
static unsigned short stb__times_38_usascii_a[95]={ 137,183,224,275,275,457,427,99,
183,183,275,310,137,183,137,153,275,275,275,275,275,275,275,275,
275,275,153,153,310,310,310,244,506,396,366,366,396,335,305,396,
396,183,214,396,335,488,396,396,305,396,366,305,335,396,396,518,
396,396,335,183,153,183,258,275,183,244,275,244,275,244,183,275,
275,153,153,275,153,427,275,275,275,275,183,214,153,275,275,396,
275,275,244,264,110,264,297, };

// Call this function with
//    font: NULL or array length
//    data: NULL or specified size
//    height: STB_FONT_times_38_usascii_BITMAP_HEIGHT or STB_FONT_times_38_usascii_BITMAP_HEIGHT_POW2
//    return value: spacing between lines
static void stb_font_times_38_usascii(stb_fontchar font[STB_FONT_times_38_usascii_NUM_CHARS],
                unsigned char data[STB_FONT_times_38_usascii_BITMAP_HEIGHT][STB_FONT_times_38_usascii_BITMAP_WIDTH],
                int height)
{
    int i,j;
    if (data != 0) {
        unsigned int *bits = stb__times_38_usascii_pixels;
        unsigned int bitpack = *bits++, numbits = 32;
        for (i=0; i < STB_FONT_times_38_usascii_BITMAP_WIDTH*height; ++i)
            data[0][i] = 0;  // zero entire bitmap
        for (j=1; j < STB_FONT_times_38_usascii_BITMAP_HEIGHT-1; ++j) {
            for (i=1; i < STB_FONT_times_38_usascii_BITMAP_WIDTH-1; ++i) {
                unsigned int value;
                if (numbits==0) bitpack = *bits++, numbits=32;
                value = bitpack & 1;
                bitpack >>= 1, --numbits;
                if (value) {
                    if (numbits < 3) bitpack = *bits++, numbits = 32;
                    data[j][i] = (bitpack & 7) * 0x20 + 0x1f;
                    bitpack >>= 3, numbits -= 3;
                } else {
                    data[j][i] = 0;
                }
            }
        }
    }

    // build font description
    if (font != 0) {
        float recip_width = 1.0f / STB_FONT_times_38_usascii_BITMAP_WIDTH;
        float recip_height = 1.0f / height;
        for (i=0; i < STB_FONT_times_38_usascii_NUM_CHARS; ++i) {
            // pad characters so they bilerp from empty space around each character
            font[i].s0 = (stb__times_38_usascii_s[i]) * recip_width;
            font[i].t0 = (stb__times_38_usascii_t[i]) * recip_height;
            font[i].s1 = (stb__times_38_usascii_s[i] + stb__times_38_usascii_w[i]) * recip_width;
            font[i].t1 = (stb__times_38_usascii_t[i] + stb__times_38_usascii_h[i]) * recip_height;
            font[i].x0 = stb__times_38_usascii_x[i];
            font[i].y0 = stb__times_38_usascii_y[i];
            font[i].x1 = stb__times_38_usascii_x[i] + stb__times_38_usascii_w[i];
            font[i].y1 = stb__times_38_usascii_y[i] + stb__times_38_usascii_h[i];
            font[i].advance_int = (stb__times_38_usascii_a[i]+8)>>4;
            font[i].s0f = (stb__times_38_usascii_s[i] - 0.5f) * recip_width;
            font[i].t0f = (stb__times_38_usascii_t[i] - 0.5f) * recip_height;
            font[i].s1f = (stb__times_38_usascii_s[i] + stb__times_38_usascii_w[i] + 0.5f) * recip_width;
            font[i].t1f = (stb__times_38_usascii_t[i] + stb__times_38_usascii_h[i] + 0.5f) * recip_height;
            font[i].x0f = stb__times_38_usascii_x[i] - 0.5f;
            font[i].y0f = stb__times_38_usascii_y[i] - 0.5f;
            font[i].x1f = stb__times_38_usascii_x[i] + stb__times_38_usascii_w[i] + 0.5f;
            font[i].y1f = stb__times_38_usascii_y[i] + stb__times_38_usascii_h[i] + 0.5f;
            font[i].advance = stb__times_38_usascii_a[i]/16.0f;
        }
    }
}

#ifndef STB_SOMEFONT_CREATE
#define STB_SOMEFONT_CREATE              stb_font_times_38_usascii
#define STB_SOMEFONT_BITMAP_WIDTH        STB_FONT_times_38_usascii_BITMAP_WIDTH
#define STB_SOMEFONT_BITMAP_HEIGHT       STB_FONT_times_38_usascii_BITMAP_HEIGHT
#define STB_SOMEFONT_BITMAP_HEIGHT_POW2  STB_FONT_times_38_usascii_BITMAP_HEIGHT_POW2
#define STB_SOMEFONT_FIRST_CHAR          STB_FONT_times_38_usascii_FIRST_CHAR
#define STB_SOMEFONT_NUM_CHARS           STB_FONT_times_38_usascii_NUM_CHARS
#define STB_SOMEFONT_LINE_SPACING        STB_FONT_times_38_usascii_LINE_SPACING
#endif

