// Font generated by stb_font_inl_generator.c (4/1 bpp)
//
// Following instructions show how to use the only included font, whatever it is, in
// a generic way so you can replace it with any other font by changing the include.
// To use multiple fonts, replace STB_SOMEFONT_* below with STB_FONT_arial_10_latin_ext_*,
// and separately install each font. Note that the CREATE function call has a
// totally different name; it's just 'stb_font_arial_10_latin_ext'.
//
/* // Example usage:

static stb_fontchar fontdata[STB_SOMEFONT_NUM_CHARS];

static void init(void)
{
    // optionally replace both STB_SOMEFONT_BITMAP_HEIGHT with STB_SOMEFONT_BITMAP_HEIGHT_POW2
    static unsigned char fontpixels[STB_SOMEFONT_BITMAP_HEIGHT][STB_SOMEFONT_BITMAP_WIDTH];
    STB_SOMEFONT_CREATE(fontdata, fontpixels, STB_SOMEFONT_BITMAP_HEIGHT);
    ... create texture ...
    // for best results rendering 1:1 pixels texels, use nearest-neighbor sampling
    // if allowed to scale up, use bilerp
}

// This function positions characters on integer coordinates, and assumes 1:1 texels to pixels
// Appropriate if nearest-neighbor sampling is used
static void draw_string_integer(int x, int y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0, cd->t0); glVertex2i(x + cd->x0, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t0); glVertex2i(x + cd->x1, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t1); glVertex2i(x + cd->x1, y + cd->y1);
        glTexCoord2f(cd->s0, cd->t1); glVertex2i(x + cd->x0, y + cd->y1);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance_int;
    }
    glEnd();
}

// This function positions characters on float coordinates, and doesn't require 1:1 texels to pixels
// Appropriate if bilinear filtering is used
static void draw_string_float(float x, float y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0f, cd->t0f); glVertex2f(x + cd->x0f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t0f); glVertex2f(x + cd->x1f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t1f); glVertex2f(x + cd->x1f, y + cd->y1f);
        glTexCoord2f(cd->s0f, cd->t1f); glVertex2f(x + cd->x0f, y + cd->y1f);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance;
    }
    glEnd();
}
*/

#ifndef STB_FONTCHAR__TYPEDEF
#define STB_FONTCHAR__TYPEDEF
typedef struct
{
    // coordinates if using integer positioning
    float s0,t0,s1,t1;
    signed short x0,y0,x1,y1;
    int   advance_int;
    // coordinates if using floating positioning
    float s0f,t0f,s1f,t1f;
    float x0f,y0f,x1f,y1f;
    float advance;
} stb_fontchar;
#endif

#define STB_FONT_arial_10_latin_ext_BITMAP_WIDTH         256
#define STB_FONT_arial_10_latin_ext_BITMAP_HEIGHT         82
#define STB_FONT_arial_10_latin_ext_BITMAP_HEIGHT_POW2   128

#define STB_FONT_arial_10_latin_ext_FIRST_CHAR            32
#define STB_FONT_arial_10_latin_ext_NUM_CHARS            560

#define STB_FONT_arial_10_latin_ext_LINE_SPACING           6

static unsigned int stb__arial_10_latin_ext_pixels[]={
    0x00000000,0x000000c4,0x00000000,0x00000000,0x05555540,0x00000000,
    0x0f2e0f2e,0xcd8000d4,0x2004d881,0x000a8018,0x26485100,0x3b00e404,
    0x05c076a0,0x50498498,0xa83da815,0xb880c80c,0x37702b80,0x0360b590,
    0x1da82d64,0xb0157d55,0x0ae03720,0x22073073,0xa818a81c,0x3101b00c,
    0x40eea0c2,0x1261c458,0x360390b1,0x8862ab85,0x3159301c,0x57301c88,
    0x40d40510,0x2266219a,0x98866a19,0x866a1989,0x31198998,0x989988c2,
    0x83111311,0x057301c9,0x881902a6,0x444c4611,0xc82b2218,0x8631310e,
    0x4544b9cc,0xba82f4c1,0x44930aaa,0x896a6f25,0xa89c4609,0xa8960abb,
    0x2eee22ab,0x9c2a170b,0x6644b9cc,0x27320fc9,0x25ce644b,0x415c02a2,
    0x5892618a,0x2249862a,0x249862a5,0x9ac49358,0xb124d624,0x32164de4,
    0x90b04b9c,0x4d624981,0x556c5624,0x22498e66,0x331c8b15,0x36a0b066,
    0x4930aabe,0x50a89358,0x99c5621f,0x8960aaad,0x2b666baa,0xc96550aa,
    0x2598e458,0x1c8b11dc,0x36e1c8b1,0x3198bb03,0x33589263,0x2b124c66,
    0x89263319,0x49ac4935,0x2b124d62,0xc8b11449,0x4c0c8581,0xb124d624,
    0x47309926,0x21556249,0xb0ae553a,0x260363a0,0x3315d624,0x8ac572a1,
    0x424c0933,0x6c41261d,0x750ab648,0xa9d4dcae,0x542a9d42,0x73072533,
    0x32b9541b,0x572aac49,0x25558926,0x9ac4932b,0xb124d624,0x05758926,
    0x160ea154,0xac493032,0xceb96249,0x22498e61,0x552b8755,0x2930b0ae,
    0x89264ccd,0x4b2a2755,0x7158bbba,0x191333a6,0x6674c2c8,0x75f0e644,
    0x237572b8,0x52b8752b,0xb9712b87,0x2a3a8c85,0x58926572,0x124cae55,
    0x4995caab,0x2b124d62,0x124d6249,0x1d410eab,0x032160ae,0x249ac493,
    0xd11d9858,0xd1589263,0xc9543a21,0x33760e62,0x52a5880e,0x9d4ae0e8,
    0x1267159d,0x24c25c58,0x0e8d8d30,0x44ba21d1,0x3a21d10e,0x43a21d10,
    0x67c4572c,0x8964aa7c,0x2c9552a5,0x92aa54b1,0xb14a9625,0x52a58a54,
    0x12c52a58,0x0e88744b,0x8130b117,0x52c52a58,0x8a2a8ea9,0xde992a58,
    0x8b2fa21e,0x6cce4c2a,0x41bbb700,0x750cedd9,0x499c57a2,0x93059960,
    0xde981cc0,0x3b3b261e,0x20f6f4c1,0x36a1ede9,0x2c8aa3dc,0x6dc597d1,
    0x597d10dd,0xe886eedc,0x3776e2cb,0xb83776e0,0x376e0ddd,0x03776a0d,
    0x6cc3dbd3,0xdb80b81e,0x3776e0dd,0x89177720,0x0000dddb,0xdb06c2dc,
    0x500005dd,0xd328adc7,0xd8ae5ddd,0xdd31eeee,0x0016a5dd,0x00000004,
    0x002c41b0,0x00000000,0x00000000,0x00000800,0x00000200,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00880000,0x0c188200,0x062110c4,
    0x37903cb8,0x16640d10,0x3cc8165c,0x02a60130,0x4288a200,0x220aaaa8,
    0x5711545d,0x89b03181,0x44315008,0x4c15cc0a,0x355512aa,0x00055c40,
    0x004c0018,0x985d80e0,0x1c00dc81,0x13aac493,0x203a9547,0x308c42b9,
    0x20c41a98,0x2620e4c1,0x22176060,0xb916259d,0x45590ec1,0x220aaad9,
    0x6c5a20bc,0x20dcc6aa,0x40aa0bb9,0xc82ea18a,0x37f25a9b,0x7955b33d,
    0x059337b0,0x6c42c057,0x83b70484,0x8888a838,0x15314661,0x264ca826,
    0x38945624,0xcc81d4aa,0x589264b9,0x498b26f2,0x2c9bc962,0x5cc58926,
    0x1441d80d,0x65c582a6,0x3620931a,0x249ac6aa,0x446b2e09,0x332a6aad,
    0x2a8542e3,0x3fa15126,0x2c4931bb,0x32ab2a32,0x70357510,0x82262359,
    0x4262150b,0xa86b2a18,0x192a8764,0x5930d9ae,0x15892639,0x752a8e29,
    0x931c8b10,0x31449ac4,0x1449ac49,0x2322c493,0x11edd43a,0x752c4889,
    0x26674cb6,0x5cb04c93,0x96cea1ce,0xcad42649,0x22a96552,0x7dc2662b,
    0xb99d31bb,0xbd9d5cc3,0x7955b339,0x0552d9d4,0x22499655,0x3b0b6755,
    0x2552a895,0x1d5cb1bd,0x09158926,0x1541d4aa,0x2b124cea,0x5892602b,
    0xb124c057,0x2e3e67c4,0x91122591,0x4ae190e4,0x073ae049,0x4323b30b,
    0xa873ae2b,0x92362932,0x6544ea2a,0x64c6ee62,0x86cd43b9,0x4493199c,
    0xba95c325,0x9923623c,0x2a865624,0x89542f44,0x239c9c8c,0xa9619bba,
    0x2a862914,0x2b875075,0x43aac493,0x75589260,0x25892608,0xbd88b22a,
    0x2488912a,0x9964ae48,0x561d9804,0xc95caa3a,0x2751d982,0x2a87323a,
    0x262b83a2,0x16c931bb,0x325a1b35,0x95c3b99d,0xc872952c,0x3bbba61c,
    0x2e0b2575,0x4ab62a82,0x22eec1bd,0x2910ddda,0x7754aa38,0x3a21d13e,
    0x58a54b10,0x52a58962,0x25896258,0x8588364a,0x8911226b,0x4cb73225,
    0x4752eeee,0x5ddc962a,0x1d4b7322,0x3173aa55,0x6ecc2a8d,0x46ee60ce,
    0x6443a249,0x261cecd9,0x66443b9c,0x98aa552d,0x22b124c6,0x82b82dcc,
    0x2e43722b,0x4428805c,0x261cc714,0x20f6f4c2,0x36a0dddb,0x6eedc0dd,
    0x703776a0,0x1c401bbb,0x22443271,0x32132c48,0x6ee40a81,0x130e62c5,
    0x25ddc872,0x2a87302a,0x37730370,0x88790370,0x316c931d,0x2a954721,
    0xac4930e6,0x85703919,0x5a9aa0c9,0x91164028,0x1e43c8a2,0x00000000,
    0x23c80000,0x911224cb,0x079913a8,0x16e00722,0x03cc8859,0x50b50350,
    0x882c883b,0x80e4c0aa,0x260cdcd9,0x66443a24,0x5a954aa3,0x64562498,
    0x0000003c,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0xb81ddc00,0x00997028,0x000066e0,0x88353000,
    0x3b7000c1,0x90022098,0x8012e603,0x19811001,0x88c19862,0x37331088,
    0xbb10ea00,0x0c60c188,0xb80d4491,0xab85c981,0x55417661,0x1aaa8cc1,
    0x5cc06e20,0x64035102,0x0c444c41,0x04d8824c,0xc9bc83bb,0x22c43ea2,
    0x7057702b,0x05930154,0x10ea0ae6,0x2088930b,0x26750cc8,0x4c442e0d,
    0x85b37d31,0x2a0263cb,0x98362441,0xd9c8a21b,0x88aeea20,0x11442bca,
    0x17303775,0x5576d564,0x5ce64551,0x225ce644,0x3304b9cc,0x2a162498,
    0x98855101,0x45126308,0x2a2b15ca,0x26f20aba,0x8aa8dc2c,0x22d4de43,
    0x0a25a9bc,0x3108a962,0x5d433066,0x333240d9,0x54689663,0x1760aa2c,
    0x32a0d891,0x44ac9222,0x2a26baa8,0xb32446ba,0x24887955,0x37616e48,
    0x588e4588,0x0e4588e4,0x589262ec,0x517605d8,0x015d621f,0x26b17775,
    0x8930aaad,0x0dba9cc2,0x12615126,0x9620ea15,0x2154764a,0x30bb6a2a,
    0x499d5547,0x54727334,0x9106dcc2,0x472730d8,0xd807ea48,0x24883b01,
    0x49116249,0x4333a63a,0x53a8552a,0xa8553a85,0x9306dcc3,0x036e62c4,
    0x5ca836e6,0x5410eab1,0x4126b3b3,0xeaa4c02b,0x213315c5,0x1d42662b,
    0x92a762c4,0x1b51542a,0x5551541d,0x864b1267,0xa8c85549,0x321b1223,
    0x65522930,0x81640de8,0x3a64882c,0x32441dcc,0x46ec2d49,0x43a95c3a,
    0x42b8752b,0x89263a8c,0x641d4645,0x2eeea3a8,0x52c4b158,0x674d7a27,
    0xa810ea4c,0x9d477553,0x22752ca8,0xb10752ca,0x21545e88,0x334cea2a,
    0x499d5549,0x2752a922,0x9f33e22a,0x954b39c8,0x5cae913a,0x04b825c6,
    0x1dce4c91,0x85c9a244,0x3a21d12a,0x43a21d10,0x441d10e8,0xa9627ccf,
    0x11f33e24,0xd9d4f99f,0x83776a59,0x824d6e3a,0x23b16258,0x83a21b2a,
    0x95c1d12b,0x2b85883a,0x3a8aa154,0x5553452e,0x106ed267,0xa8aa1b99,
    0xdda44b22,0x44373224,0x277bbb14,0x440b3059,0x442d9264,0x77d664c4,
    0x3a61d33e,0x76f4c1ed,0x20f6f4c1,0xddb8b22a,0x22c8aa0d,0x89d4b22a,
    0x2e02445e,0xdda81261,0x20dc340d,0x260cedd9,0x0750cedd,0x83857053,
    0x1d81902b,0x2a000154,0x00588362,0x76c02440,0xdddb1eee,0x4932443d,
    0x001220e8,0x20000000,0x6c01620d,0x220d9620,0x2e2dc755,0xe9872604,
    0x33002eee,0x00001c88,0x644fbbaa,0x432615c2,0x40c980c9,0x00032228,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x66440000,0x98862623,
    0x86a0c442,0x20c42882,0xa8814099,0x20454111,0x055441da,0x0bb10626,
    0x10220993,0x40c60e60,0x991000cc,0x88002205,0x46132a19,0x0301a981,
    0x88150513,0x28981302,0x1de40c4c,0x066440c6,0x54d41880,0x5750e6e1,
    0xc838a54c,0xad89262b,0x27320e21,0x312a28cb,0x222a1b79,0x88762188,
    0x9550abba,0x066e6157,0x0abba88b,0xbaa886e6,0xa88f2e0a,0x2ee40aaa,
    0x4eee0797,0x5cc0aca8,0x41ed5e41,0x55429c85,0x42405443,0x106cc1d8,
    0x03730c13,0x1132e06a,0x527675c9,0x5198cc59,0xb9109173,0x45d124c3,
    0x91621dc8,0x570ee447,0xa8764a87,0x2aab662c,0x2157d550,0x316542ec,
    0x6541555b,0x82aab662,0x2ab662ca,0x4cb36e0a,0x5e6dc331,0x23d55b30,
    0x3a143319,0x3198b2e0,0x233165c3,0xb70b2e19,0x3ea2cb87,0x81edcb10,
    0x443db85d,0x64e64a44,0x5c4ae551,0x471b838b,0x23716249,0x5c750aa3,
    0x6c2ec871,0x8e5264a9,0x26064049,0x931ca4c3,0x498e5260,0x24c72930,
    0x4aa5b3a8,0x98b6752b,0x2b955623,0x23d99995,0x5caa194a,0x95432952,
    0x4c32952b,0x8652a392,0x4a6b15ca,0x306dcc1c,0x2a488725,0x26192dad,
    0x320ae554,0x5bb10cc8,0xd88b124c,0x4570ea2d,0x2cb82dd8,0x99b917a2,
    0x21333a65,0x3721cc0c,0x999d32cc,0xe99666e4,0x333724cc,0x64999d32,
    0x95caa570,0x21cc571c,0x1d4ae556,0x9540e436,0x2550392b,0x9710392b,
    0x2ea0725b,0xb97158bb,0x223a8c85,0xa9222dcb,0x2a550bab,0x730b2553,
    0x22265553,0x4c4a9626,0x443a2688,0xb9a2260e,0x215c2ab9,0x0126112a,
    0x95439819,0x4aa09308,0x4aa09308,0x4ae09308,0x5cb2552c,0x5a1cc592,
    0xd134592a,0x2550a954,0x542a552c,0x854aa592,0x54aa572c,0x65676750,
    0x667c4572,0x9115cb27,0x9910d4d4,0x0b2fa21b,0xcd986649,0x206eedc4,
    0x6f4c4cd9,0x1266cc1e,0x42b81bbd,0x0930dcc8,0x10f440c8,0x41261b99,
    0x0930dcc8,0x24c37322,0xd12dcd88,0x37362597,0xd14a8e62,0x66e4c597,
    0xe8933220,0x499912cb,0x9912cbe8,0x89ee6d49,0x744ea4cc,0x547b9b55,
    0x6e6d4b22,0x00109223,0x00010200,0x70000000,0x74c00ae0,0x00642eee,
    0x5dddd300,0x2eeee980,0x177774c0,0x774c0000,0x000000ce,0x00000000,
    0x402dc750,0x0001620d,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x93000000,0x4dc31019,0x31506a21,
    0x88130288,0x21882201,0x40c44189,0x01881302,0x05441988,0x40d4c011,
    0x0c4c0ab8,0x2204c0a2,0x51037301,0x18982881,0x40a20c44,0x54c0c409,
    0x0aa88a01,0x07360544,0x03130353,0x20a31573,0x4c3502b8,0xa876760a,
    0x24155c18,0x1a8ae048,0x85750626,0x890483ab,0xb11f4c39,0x220aa1b5,
    0x3623a89c,0x20c4c6aa,0x090482ab,0x6c499399,0x26054459,0x2e15d418,
    0x8890482a,0x5c56059d,0xb5b10bbb,0x26f21441,0x3206cc2c,0x2090fc9c,
    0x13cc985d,0x46611cc9,0x4c663319,0x0cc66331,0x2a2459b7,0x2a16542c,
    0x2a16542c,0xca83b22c,0xba95cee6,0x2af62e3c,0x504c931a,0x542ca859,
    0x9516542c,0x836111d8,0x21edc3db,0x21edc3db,0x31edc3db,0x5b358167,
    0x1546e155,0x50a24c91,0x3b92cc59,0x81b7306e,0xec922995,0x552b9544,
    0x52b954ae,0x2d9d4ae5,0x26393992,0x8e4e6393,0x64e63939,0x6464c731,
    0xad4ea392,0x2579172c,0x49873ae3,0x98e52639,0x8e526394,0x97a1d42b,
    0x64a63929,0x94c72531,0x4c72531c,0x126ea392,0x4ea09358,0x02b9223c,
    0x72b8e4e6,0x190e2753,0xacd5d475,0x5507a248,0x52b954ae,0x2b954ae5,
    0x914cae19,0x49865261,0x98652619,0x1cd26194,0xa8dce639,0x45d26553,
    0xd98288bb,0x32599b91,0x99b92ccd,0x5cb33725,0x89641643,0xb9712dcb,
    0x44b72e25,0xb9712dcb,0x54b72e25,0x74d60793,0x1dedc4cc,0xc821d491,
    0x46eae930,0xccf8922b,0x4522f667,0x64aa1224,0x954b2552,0x5cb2552c,
    0x2a82e592,0xa9d4aa75,0x9d4aa752,0xb8e6752a,0x8dce6572,0x46aa553a,
    0x954750ca,0x44aa112a,0x95422550,0x3aa6b108,0x964aa350,0x64ae592b,
    0x95cb2572,0x5cb2572c,0x5c361752,0x26093588,0xb1244371,0x4ea552c4,
    0x241d12e8,0xce896455,0x66ec910d,0x2597d13d,0x7d12cbe8,0x4b2fa259,
    0x8892dcd8,0xb9910dcc,0x44373221,0xb9910dcc,0x66447a21,0x9b526e44,
    0x40cbca89,0x33225ddc,0x21b9910d,0x9910dcc8,0x6f6f541b,0x6d499b10,
    0x7b9b53dc,0x6d4f736a,0x7b9b53dc,0x5d4f736a,0x47b664cc,0x899b1049,
    0x06eed448,0x3261b991,0xd8d41ece,0x48809620,0x00000000,0x00000020,
    0x00000000,0x00000000,0x00006000,0x00000000,0x5dddd300,0x00009100,
    0x00002001,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x15550000,0x31060544,0x80a01898,0x060c41a9,
    0x19830351,0x06a02b98,0xbc8814cc,0x82a20a81,0x33146218,0x2aaaa079,
    0x208c130a,0x4c026289,0x4c0b83c9,0xa88b2e08,0x22004c09,0x81886601,
    0x8cca64a9,0x81103108,0x1110a20a,0x5b10aae8,0x10906ccb,0x220a201b,
    0x9263a89c,0x92e73258,0x2f2120d9,0x205705a9,0x033102a8,0x8e661b3b,
    0x56a49cc4,0x5576541c,0x05d4710a,0xa814c3b1,0xbb818395,0x3b82e951,
    0x932cc848,0x83a87011,0x94ce60ca,0x8550732a,0x7550d644,0x64e605cc,
    0x260dc321,0x5dedc331,0x2af22e2d,0x8ac4931a,0x32190e45,0x202a24c0,
    0xd817605d,0x50444cc5,0x8a7306e9,0xd8d8552a,0x98e23880,0x2e6623c9,
    0x32154aa4,0x20391c40,0x10f26619,0x876e74c7,0x512ea4a9,0x2a553985,
    0x44550732,0x79331c43,0xdb06ded4,0x41398b8b,0x646a572a,0x706ae594,
    0x85558926,0x20aa2e3a,0x7302662b,0x01b7301b,0x66dc1b73,0x2735750d,
    0x54aa0e60,0x266ed262,0x2b524491,0xa95d6a1c,0x44254552,0x55054aa4,
    0x9221cad4,0x0654ea39,0x4c2a81b5,0x9cd2e554,0x22452aa4,0x40e56a48,
    0x20b2773a,0x2b954d34,0x799bd971,0x99454a2e,0x2e1d5624,0x86e46442,
    0xc859513a,0x3a8c83a8,0x4ae3a8c8,0x4cd3482a,0x6c552a83,0x22088ecd,
    0x552a9224,0x2552a9d4,0x1220b12a,0x2a2a8999,0x93244552,0xb0aa3911,
    0xde985507,0x04e65b2d,0x91122155,0x2352a954,0x90aa372a,0xc9549911,
    0x84cb2592,0x10c8ba9a,0x10e8a54b,0x8922481d,0xcf88ae0e,0x3e67c47c,
    0x299f33e2,0x4c88c855,0x260b80e6,0x4880d88c,0x4552a922,0x2350552a,
    0x42449348,0x54aa2a84,0xcce99222,0x20750aa1,0x4aa0e61b,0x1222a839,
    0x12a95491,0x2664499b,0x886d44aa,0x79b52cbe,0x5e541b9b,0x06eedc0c,
    0x1b83dbd3,0x6ecc17d1,0x2c8aa0ce,0x8aa2c8aa,0x5517322c,0x6f4c36a2,
    0x0c83263d,0x24477776,0x22a95491,0x0d98552a,0x4488332a,0x4aa2a83a,
    0x0399222a,0x3ddea855,0x5414c391,0x2a7bbd32,0x54911222,0x04000552,
    0x00000004,0x26208000,0xb106c001,0x06cb106c,0x010100b1,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x44c59500,
    0x33220222,0x8a830621,0x82aaaaa1,0x26250a1a,0x2330f6e1,0x51028819,
    0x02050155,0x8a82aaa2,0x42885471,0x43103128,0x1882a219,0x05455551,
    0x98d65c31,0x04c0c3cb,0x0882aaa2,0x42271011,0x43597008,0xa882e62a,
    0x2aaa20aa,0x71188662,0x1d88dce6,0x8e370f72,0x20ebbbdb,0x2b6a60d9,
    0x95c1950a,0x4a67552b,0x40d4aa1c,0xaad981ac,0x1260e21d,0x5476ab66,
    0xf9965518,0x4c1cd721,0x2b621b33,0x2aa2b10d,0x51c92a6b,0x2cad4767,
    0xc989b091,0x154aa5ba,0x20aa1108,0x43625b3a,0x5b30d9d9,0x2ab663d5,
    0x106c3a22,0x54cb336e,0xd88f2ea4,0x26672a2d,0x903332e5,0x58d82a81,
    0x6e5c42aa,0x270d4aa1,0x11cc1338,0x5c3332eb,0x88e60ccc,0x246c4715,
    0x39ae4793,0x260d9b98,0x36162550,0x1924cec1,0x1399546e,0x260cb989,
    0xaa954363,0x2ea33038,0xc954323c,0x4caa131e,0x301cd623,0x44aa0599,
    0xcad41951,0x74cd1130,0x44a85eee,0x30aa1ada,0xc8aa17d9,0x1b954572,
    0x3225ae32,0x84a8d0bd,0x685ee44a,0x261cd891,0x0e6b355b,0x6c40bb66,
    0x882c8910,0x51c9545d,0x32244aa7,0x377a6398,0x06d54aa4,0x472952a8,
    0x20e2592a,0x26d0e658,0x05d82cce,0x42a86e64,0x3366552a,0x598b0e64,
    0x0aa0ad98,0x8aa35d53,0x3622dcd9,0x2f2aa1cb,0x4d065458,0xca859859,
    0x1aa245a0,0x4d691773,0x40e8d983,0x095241d8,0x3b32215c,0x244b9b51,
    0x8b99b33e,0x3aa551c8,0x552aa445,0x96e644aa,0x0e60d838,0x2202326d,
    0x871220dd,0x22a9542a,0x8961cc48,0x85503205,0x0552ceca,0x36054066,
    0x51cc2d9c,0x41621629,0x22452a39,0xa645cc39,0x26730735,0x4c603625,
    0x3500dc05,0xba9220aa,0x5c731c88,0x0aeaa552,0x2a954aa5,0x41c47213,
    0x26951cc2,0x01663603,0x4aa15495,0x8730ee2a,0x90333765,0xa8b02a81,
    0x93039102,0x4c0f96c1,0x33764dde,0x4199bb0c,0x9224dde9,0x23d3985a,
    0x267bbd35,0x6ef64ee3,0x37776912,0x3500dc0d,0x0d922066,0x2eef4d22,
    0x406caa55,0x44aa552a,0x160e23cc,0x1cc9bbd3,0x244ee2b8,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x20000000,0x51098a22,0x23062155,0x0880aaa8,0x22155551,0x182828c1,
    0x442aaaaa,0x98cc1aaa,0x8888b2a1,0x8e2b2a08,0xcb8182ca,0x165c2cab,
    0x33198f6e,0x5e45e547,0xc89e64c0,0xa840021c,0x86665c71,0x10a8e4a9,
    0x93595308,0x220f2663,0x84ce2708,0x06223899,0xb8641871,0x6d54c366,
    0x5b358732,0x98f443b5,0x1f30aaad,0x90e61cac,0x8556d4c9,0x2a3caad9,
    0x8e4e6352,0x55939840,0x3160dce6,0x4a8dd323,0xa8e4a617,0x5cea7552,
    0x4cac488f,0x0bd98e37,0x57b12da8,0x70654950,0x1edea965,0x5aacb695,
    0x19245c39,0x0daa92d7,0x58911ce4,0x0b1bd954,0x4d61ccb1,0x31bc8ea3,
    0x35972607,0x09730649,0x96239819,0x4c32352a,0x26190813,0x54b336e5,
    0x3b2e2cec,0x10393ccd,0x54aa3b97,0x33a2370b,0x566aaa5c,0x3d982dd8,
    0x30d505b3,0x46442a8b,0x2a8dce64,0x2a955619,0x65545791,0x217aa58b,
    0x26910caa,0x32912beb,0x20d848b9,0xb35eeee9,0x31a81d75,0x5dcc999d,
    0x644b2cb3,0x74c0c848,0x5caa1dcc,0x204ea351,0x2a8ea350,0x42362231,
    0x5466591c,0x95cb2152,0xa954372a,0x48bd98a6,0xcc88d113,0xcd839911,
    0x20aa1622,0x363221cd,0xaac32550,0x224ec552,0x2aa2d9cd,0x912c642b,
    0xad827662,0x458835b2,0x1ad9ac39,0x22326350,0x72cece60,0x6d564555,
    0x23260640,0x8e5f443b,0x0810dcc8,0xb990b991,0x5e6d4481,0x326645cd,
    0x2fa25b9b,0x6dee641c,0x4373a22c,0x032a4cd9,0x1b2b9dc4,0x15433376,
    0x2f2ea354,0xaac32552,0x054c4552,0xb2a83e5b,0x48826a21,0x4c866424,
    0x561cc2a8,0x398d4039,0x89762730,0x0f5dd45c,0x16473032,0x11113000,
    0x6eedc000,0x00000002,0x00000000,0x00000000,0x00000000,0xa9660000,
    0x21cc1c85,0x31a80735,0x8e65bbbd,0x0902645b,0x3a239819,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x26000000,0x882a2bbb,0x40c1510a,0x895ddcc6,0x3060c41b,0x22086261,
    0x51edc2a4,0x31985555,0x94a2759b,0x66644332,0x0000004c,0x00000000,
    0x00000000,0x00000000,0x2b100000,0x2133311c,0x4d22648b,0x5dd4b339,
    0x2b33311b,0xb52e4599,0x25ac8e49,0x11c4ca0c,0x24088888,0x25086e63,
    0x000000e2,0x00000000,0x00000000,0x00000000,0x80000000,0x2eee63e9,
    0x4c191292,0x09b988e3,0xc896b2b0,0x8545911a,0x1019338a,0x00000057,
    0x00000000,0x00000000,0x00000000,0x00000000,0x40000000,0x266625cc,
    0x9e5c5910,0x00e0a2ba,0xb1b8eea1,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x06651000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,
};

static signed short stb__arial_10_latin_ext_x[560]={ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,0,0,0,0,0,0,0,0,0,0,
-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,0,0,-1,
0,0,0,0,0,0,0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,-1,-1,-1,
-1,-1,0,0,0,0,0,0,0,0,-1,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-1,0,-1,0,-1,0,0,0,0,0,0,0,0,0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,-1,-1,-1,-1,-1,-1,0,0,0,0,0,0,0,-1,0,0,0,0,0,0,
-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,1,1,1,
1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1,0,-1,-1,0,
0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,-1,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1, };
static signed short stb__arial_10_latin_ext_y[560]={ 8,1,1,1,1,1,1,1,1,1,1,2,7,5,
7,1,1,1,1,1,1,1,1,1,1,1,3,3,2,3,2,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,9,1,3,1,3,1,3,1,3,1,1,
1,1,1,3,3,3,3,3,3,3,1,3,3,3,3,3,3,1,1,1,4,2,2,2,2,2,2,2,2,2,
2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,8,3,1,1,2,1,
1,1,1,1,1,3,3,5,1,0,1,2,1,1,1,3,1,4,7,1,1,3,1,1,1,3,-1,-1,-1,0,
0,0,1,1,-1,-1,-1,0,-1,-1,-1,0,1,0,-1,-1,-1,0,0,2,1,-1,-1,-1,0,-1,1,1,1,1,
1,1,1,1,3,3,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,3,3,1,1,1,1,1,1,1,
0,1,0,1,1,3,-1,1,0,1,0,1,0,1,0,1,1,1,0,1,0,1,0,1,1,3,0,1,0,1,
0,1,0,1,1,1,-1,-1,1,1,0,1,0,1,0,1,1,1,0,3,1,1,-1,1,1,1,3,-1,0,1,
1,1,1,1,1,1,1,-1,1,1,3,-1,1,1,1,3,0,1,0,1,-1,1,1,3,-1,1,1,3,0,1,
-1,1,0,1,1,3,0,1,1,1,0,1,1,1,0,1,0,1,0,1,-1,1,-1,1,1,3,-1,1,-1,1,
0,-1,1,0,1,0,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,2,2,1,2,2,2,
2,2,2,2,2,2,2,2,2,2,1,3,2,2,2,2,2,2,2,2,2,2,2,2,2,1,3,2,2,2,
2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,1,0,1,0,
1,0,1,-1,0,-1,-1,-1,-1,-1,-1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,
2,2,2,2,2,2,2,2,2,2,-2,-1,-1,1,-1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,
2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,
2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,
2,2,2,2,2,2, };
static unsigned short stb__arial_10_latin_ext_w[560]={ 0,2,3,5,5,8,6,2,3,3,4,5,2,3,
2,3,5,4,5,5,5,5,5,5,5,5,2,2,5,5,5,5,9,7,6,7,6,6,6,7,6,2,4,6,
5,7,6,7,6,7,7,6,6,6,6,9,6,6,6,3,3,2,4,7,3,5,5,5,5,5,3,5,5,2,
3,5,2,7,5,5,5,5,4,5,3,5,5,7,5,5,5,3,2,3,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,1,5,5,5,6,
2,5,3,7,4,5,5,3,7,7,3,5,3,3,3,5,5,2,3,3,4,5,8,8,8,5,7,7,7,7,
7,7,9,7,6,6,6,6,2,3,4,3,7,6,7,7,7,7,7,5,7,6,6,6,6,6,6,6,5,5,
5,5,5,5,8,5,5,5,5,5,2,3,4,3,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
7,5,7,5,8,6,7,5,7,5,7,5,7,5,6,6,7,5,6,5,6,5,6,5,6,5,6,5,7,5,
7,5,7,5,7,5,6,5,7,5,4,4,4,4,4,4,3,3,2,2,7,4,5,4,6,5,5,5,2,5,
3,5,3,5,3,5,2,6,5,6,5,6,5,6,7,5,7,5,7,5,7,5,9,9,7,4,7,4,7,4,
6,5,6,5,6,5,6,5,6,3,6,4,6,3,6,5,6,5,6,5,6,5,6,5,6,6,9,7,6,5,
6,6,5,6,5,6,5,3,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,7,5,5,5,5,5,5,
5,5,5,5,5,5,5,5,5,5,8,6,5,5,5,5,5,5,5,5,5,5,5,5,5,8,6,5,5,5,
5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,7,5,4,4,7,
5,6,5,6,5,6,5,6,5,6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5,5,5,5,5,7,5,9,8,7,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5, };
static unsigned short stb__arial_10_latin_ext_h[560]={ 0,7,3,8,8,8,8,3,9,9,4,5,3,2,
1,8,8,7,7,8,7,8,8,7,8,8,5,7,6,4,6,7,9,7,7,8,7,7,7,8,7,7,8,7,
7,7,7,8,7,8,7,8,7,8,7,7,7,7,7,9,8,9,4,1,2,6,8,6,8,6,7,7,7,7,
9,7,7,5,5,6,7,7,5,6,8,6,5,5,5,7,5,9,9,9,2,6,6,6,6,6,6,6,6,6,
6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,0,7,9,8,5,7,
9,9,2,8,4,5,4,2,8,2,3,6,4,4,2,7,9,2,3,4,4,5,8,8,8,7,9,9,9,8,
8,8,7,9,9,9,9,8,9,9,9,8,7,8,10,10,10,9,9,5,8,10,10,10,9,9,7,8,8,8,
8,8,8,8,6,7,8,8,8,8,7,7,7,7,8,7,8,8,8,8,8,4,6,8,8,8,8,9,9,9,
8,8,8,8,9,7,10,8,9,8,9,8,9,8,8,8,7,8,8,8,8,8,8,8,9,7,8,8,9,9,
9,9,9,9,9,9,9,9,7,7,8,7,8,7,8,7,9,9,8,5,8,9,10,9,9,9,5,9,8,9,
9,7,7,7,7,7,7,9,7,9,7,9,7,7,8,7,9,8,9,8,10,8,8,6,9,7,9,7,8,7,
10,8,9,8,9,7,9,8,10,10,8,8,7,8,9,8,9,8,9,8,10,8,10,8,9,7,9,7,9,9,
8,9,7,8,7,8,7,7,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,8,6,6,9,6,6,6,
6,6,6,6,6,6,6,6,6,6,8,6,6,6,6,6,6,6,6,6,6,6,6,6,6,8,6,6,6,6,
6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,8,8,8,7,9,
8,9,8,10,9,10,10,10,10,10,10,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,
6,6,6,6,6,6,6,6,6,6,10,10,9,8,10,8,6,6,6,6,6,6,6,6,6,6,6,6,6,6,
6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,
6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,
6,6,6,6,6,6, };
static unsigned short stb__arial_10_latin_ext_s[560]={ 254,147,60,6,69,24,203,57,152,93,52,
249,68,75,252,55,99,31,141,158,57,1,101,11,7,219,252,203,171,7,165,
225,205,179,187,230,231,36,238,69,17,176,207,134,128,120,43,52,24,150,70,
119,63,45,50,1,245,157,150,179,252,144,47,108,104,130,105,124,49,103,221,
215,209,206,8,197,194,206,214,84,170,164,189,159,89,78,194,226,177,114,183,
120,220,230,91,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,
90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,254,254,22,
19,200,49,38,105,100,37,42,220,36,75,111,79,71,109,18,22,87,221,191,
97,64,26,13,240,13,60,107,165,25,40,48,93,85,77,128,63,78,223,241,
212,35,111,115,15,102,228,1,17,25,51,9,1,244,86,136,143,33,129,198,
200,194,188,182,176,170,164,115,176,144,138,132,126,138,240,244,110,93,249,83,
77,71,65,59,30,153,43,37,31,25,235,167,173,1,249,241,235,96,60,107,
210,85,198,66,186,81,222,165,158,82,146,139,133,126,120,113,107,130,1,88,
82,205,124,111,154,103,223,183,248,241,229,24,12,1,171,237,193,224,141,125,
136,200,246,186,156,123,140,145,97,234,119,175,45,41,116,56,230,236,210,227,
213,187,71,122,56,146,152,161,159,17,169,1,194,115,12,242,143,215,205,197,
216,229,7,150,48,160,33,147,18,137,63,129,157,95,102,38,252,89,18,74,
152,59,172,161,204,100,192,28,67,12,74,1,248,75,234,90,210,96,217,32,
45,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,178,90,90,182,
90,90,90,90,90,90,90,90,90,90,90,90,90,54,96,90,90,90,90,90,
90,90,90,90,90,90,90,90,39,136,90,90,90,90,90,90,90,90,90,90,
90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,178,216,
225,182,168,238,198,22,93,176,79,73,66,60,53,47,90,90,90,90,90,90,
90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,
90,90,90,39,33,188,28,9,9,90,90,90,90,90,90,90,90,90,90,90,
90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,
90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,
90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,
90,90,90,90,90,90,90,90,90, };
static unsigned short stb__arial_10_latin_ext_t[560]={ 9,59,75,32,32,32,22,75,22,22,75,
67,75,75,65,41,41,67,59,41,67,50,50,67,50,41,59,59,67,75,67,
59,12,59,59,41,59,67,59,50,67,59,41,59,59,59,67,50,67,41,67,
41,67,50,67,67,59,59,59,12,41,12,75,75,75,67,41,67,41,67,59,
59,59,59,12,59,59,67,67,67,59,59,67,67,41,67,67,67,67,59,67,
12,1,1,75,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,
67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,9,1,12,
41,67,59,12,12,75,50,75,67,75,75,41,75,75,67,75,75,75,50,12,
75,75,75,75,67,50,50,50,50,22,22,22,50,50,50,50,22,22,1,1,
41,12,12,12,41,59,32,1,1,1,12,22,75,41,1,1,1,22,22,50,
41,41,41,41,41,41,41,67,50,41,41,41,41,50,50,50,59,41,50,41,
41,41,41,41,75,67,41,41,41,41,12,12,12,41,32,32,32,12,59,1,
32,22,32,12,32,12,32,32,32,59,32,32,32,32,32,32,32,12,59,32,
32,1,12,22,12,22,12,12,12,12,12,59,59,32,50,22,50,22,50,22,
22,22,67,22,22,1,22,22,22,67,22,22,12,12,50,59,50,50,50,50,
1,50,22,50,22,50,50,22,50,22,22,22,22,1,32,22,67,12,50,12,
50,22,59,1,32,12,32,12,59,12,32,1,1,32,32,59,22,12,32,12,
32,12,32,1,32,1,32,12,59,12,59,12,1,32,1,59,22,59,22,59,
59,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,32,67,67,1,
67,67,67,67,67,67,67,67,67,67,67,67,67,32,67,67,67,67,67,67,
67,67,67,67,67,67,67,67,32,67,67,67,67,67,67,67,67,67,67,67,
67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,22,32,
41,50,1,41,1,50,1,1,1,1,1,1,1,1,67,67,67,67,67,67,
67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,
67,67,67,1,1,1,50,1,41,67,67,67,67,67,67,67,67,67,67,67,
67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,
67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,
67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,
67,67,67,67,67,67,67,67,67, };
static unsigned short stb__arial_10_latin_ext_a[560]={ 40,40,51,80,80,127,96,27,
48,48,56,84,40,48,40,40,80,80,80,80,80,80,80,80,
80,80,40,40,84,84,84,80,145,96,96,103,103,96,87,111,
103,40,72,96,80,119,103,111,96,111,103,96,87,103,96,135,
96,96,87,40,40,40,67,80,48,80,80,72,80,80,40,80,
80,32,32,72,32,119,80,80,80,80,48,72,40,80,72,103,
72,72,72,48,37,48,84,107,107,107,107,107,107,107,107,107,
107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,
107,107,107,107,107,107,107,107,40,48,80,80,80,80,37,80,
48,106,53,80,84,48,106,79,57,79,48,48,48,83,77,40,
48,48,52,80,119,119,119,87,96,96,96,96,96,96,143,103,
96,96,96,96,40,40,40,40,103,103,111,111,111,111,111,84,
111,103,103,103,103,96,96,87,80,80,80,80,80,80,127,72,
80,80,80,80,40,40,40,40,80,80,80,80,80,80,80,79,
87,80,80,80,80,72,80,72,96,80,96,80,96,80,103,72,
103,72,103,72,103,72,103,88,103,80,96,80,96,80,96,80,
96,80,96,80,111,80,111,80,111,80,111,80,103,80,103,80,
40,40,40,40,40,40,40,32,40,40,105,64,72,32,96,72,
72,80,32,80,32,80,42,80,48,80,32,103,80,103,80,103,
80,87,104,80,111,80,111,80,111,80,143,135,103,48,103,48,
103,48,96,72,96,72,96,72,96,72,87,40,87,54,87,40,
103,80,103,80,103,80,103,80,103,80,103,80,135,103,96,72,
96,87,72,87,72,87,72,32,107,107,107,107,107,107,107,107,
107,107,107,107,107,107,107,108,107,107,80,107,107,107,107,107,
107,107,107,107,107,107,107,107,123,94,107,107,107,107,107,107,
107,107,107,107,107,107,107,122,96,107,107,107,107,107,107,107,
107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,
107,107,107,107,107,96,80,40,32,111,80,103,80,103,80,103,
80,103,80,103,80,107,107,107,107,107,107,107,107,107,107,107,
107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,
107,107,96,80,143,127,111,87,107,107,107,107,107,107,107,107,
107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,
107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,
107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,
107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,
107,107,107,107,107,107,107,107, };

// Call this function with
//    font: NULL or array length
//    data: NULL or specified size
//    height: STB_FONT_arial_10_latin_ext_BITMAP_HEIGHT or STB_FONT_arial_10_latin_ext_BITMAP_HEIGHT_POW2
//    return value: spacing between lines
static void stb_font_arial_10_latin_ext(stb_fontchar font[STB_FONT_arial_10_latin_ext_NUM_CHARS],
                unsigned char data[STB_FONT_arial_10_latin_ext_BITMAP_HEIGHT][STB_FONT_arial_10_latin_ext_BITMAP_WIDTH],
                int height)
{
    int i,j;
    if (data != 0) {
        unsigned int *bits = stb__arial_10_latin_ext_pixels;
        unsigned int bitpack = *bits++, numbits = 32;
        for (i=0; i < STB_FONT_arial_10_latin_ext_BITMAP_WIDTH*height; ++i)
            data[0][i] = 0;  // zero entire bitmap
        for (j=1; j < STB_FONT_arial_10_latin_ext_BITMAP_HEIGHT-1; ++j) {
            for (i=1; i < STB_FONT_arial_10_latin_ext_BITMAP_WIDTH-1; ++i) {
                unsigned int value;
                if (numbits==0) bitpack = *bits++, numbits=32;
                value = bitpack & 1;
                bitpack >>= 1, --numbits;
                if (value) {
                    if (numbits < 3) bitpack = *bits++, numbits = 32;
                    data[j][i] = (bitpack & 7) * 0x20 + 0x1f;
                    bitpack >>= 3, numbits -= 3;
                } else {
                    data[j][i] = 0;
                }
            }
        }
    }

    // build font description
    if (font != 0) {
        float recip_width = 1.0f / STB_FONT_arial_10_latin_ext_BITMAP_WIDTH;
        float recip_height = 1.0f / height;
        for (i=0; i < STB_FONT_arial_10_latin_ext_NUM_CHARS; ++i) {
            // pad characters so they bilerp from empty space around each character
            font[i].s0 = (stb__arial_10_latin_ext_s[i]) * recip_width;
            font[i].t0 = (stb__arial_10_latin_ext_t[i]) * recip_height;
            font[i].s1 = (stb__arial_10_latin_ext_s[i] + stb__arial_10_latin_ext_w[i]) * recip_width;
            font[i].t1 = (stb__arial_10_latin_ext_t[i] + stb__arial_10_latin_ext_h[i]) * recip_height;
            font[i].x0 = stb__arial_10_latin_ext_x[i];
            font[i].y0 = stb__arial_10_latin_ext_y[i];
            font[i].x1 = stb__arial_10_latin_ext_x[i] + stb__arial_10_latin_ext_w[i];
            font[i].y1 = stb__arial_10_latin_ext_y[i] + stb__arial_10_latin_ext_h[i];
            font[i].advance_int = (stb__arial_10_latin_ext_a[i]+8)>>4;
            font[i].s0f = (stb__arial_10_latin_ext_s[i] - 0.5f) * recip_width;
            font[i].t0f = (stb__arial_10_latin_ext_t[i] - 0.5f) * recip_height;
            font[i].s1f = (stb__arial_10_latin_ext_s[i] + stb__arial_10_latin_ext_w[i] + 0.5f) * recip_width;
            font[i].t1f = (stb__arial_10_latin_ext_t[i] + stb__arial_10_latin_ext_h[i] + 0.5f) * recip_height;
            font[i].x0f = stb__arial_10_latin_ext_x[i] - 0.5f;
            font[i].y0f = stb__arial_10_latin_ext_y[i] - 0.5f;
            font[i].x1f = stb__arial_10_latin_ext_x[i] + stb__arial_10_latin_ext_w[i] + 0.5f;
            font[i].y1f = stb__arial_10_latin_ext_y[i] + stb__arial_10_latin_ext_h[i] + 0.5f;
            font[i].advance = stb__arial_10_latin_ext_a[i]/16.0f;
        }
    }
}

#ifndef STB_SOMEFONT_CREATE
#define STB_SOMEFONT_CREATE              stb_font_arial_10_latin_ext
#define STB_SOMEFONT_BITMAP_WIDTH        STB_FONT_arial_10_latin_ext_BITMAP_WIDTH
#define STB_SOMEFONT_BITMAP_HEIGHT       STB_FONT_arial_10_latin_ext_BITMAP_HEIGHT
#define STB_SOMEFONT_BITMAP_HEIGHT_POW2  STB_FONT_arial_10_latin_ext_BITMAP_HEIGHT_POW2
#define STB_SOMEFONT_FIRST_CHAR          STB_FONT_arial_10_latin_ext_FIRST_CHAR
#define STB_SOMEFONT_NUM_CHARS           STB_FONT_arial_10_latin_ext_NUM_CHARS
#define STB_SOMEFONT_LINE_SPACING        STB_FONT_arial_10_latin_ext_LINE_SPACING
#endif

