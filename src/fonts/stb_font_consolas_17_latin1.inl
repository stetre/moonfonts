// Font generated by stb_font_inl_generator.c (4/1 bpp)
//
// Following instructions show how to use the only included font, whatever it is, in
// a generic way so you can replace it with any other font by changing the include.
// To use multiple fonts, replace STB_SOMEFONT_* below with STB_FONT_consolas_17_latin1_*,
// and separately install each font. Note that the CREATE function call has a
// totally different name; it's just 'stb_font_consolas_17_latin1'.
//
/* // Example usage:

static stb_fontchar fontdata[STB_SOMEFONT_NUM_CHARS];

static void init(void)
{
    // optionally replace both STB_SOMEFONT_BITMAP_HEIGHT with STB_SOMEFONT_BITMAP_HEIGHT_POW2
    static unsigned char fontpixels[STB_SOMEFONT_BITMAP_HEIGHT][STB_SOMEFONT_BITMAP_WIDTH];
    STB_SOMEFONT_CREATE(fontdata, fontpixels, STB_SOMEFONT_BITMAP_HEIGHT);
    ... create texture ...
    // for best results rendering 1:1 pixels texels, use nearest-neighbor sampling
    // if allowed to scale up, use bilerp
}

// This function positions characters on integer coordinates, and assumes 1:1 texels to pixels
// Appropriate if nearest-neighbor sampling is used
static void draw_string_integer(int x, int y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0, cd->t0); glVertex2i(x + cd->x0, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t0); glVertex2i(x + cd->x1, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t1); glVertex2i(x + cd->x1, y + cd->y1);
        glTexCoord2f(cd->s0, cd->t1); glVertex2i(x + cd->x0, y + cd->y1);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance_int;
    }
    glEnd();
}

// This function positions characters on float coordinates, and doesn't require 1:1 texels to pixels
// Appropriate if bilinear filtering is used
static void draw_string_float(float x, float y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0f, cd->t0f); glVertex2f(x + cd->x0f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t0f); glVertex2f(x + cd->x1f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t1f); glVertex2f(x + cd->x1f, y + cd->y1f);
        glTexCoord2f(cd->s0f, cd->t1f); glVertex2f(x + cd->x0f, y + cd->y1f);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance;
    }
    glEnd();
}
*/

#ifndef STB_FONTCHAR__TYPEDEF
#define STB_FONTCHAR__TYPEDEF
typedef struct
{
    // coordinates if using integer positioning
    float s0,t0,s1,t1;
    signed short x0,y0,x1,y1;
    int   advance_int;
    // coordinates if using floating positioning
    float s0f,t0f,s1f,t1f;
    float x0f,y0f,x1f,y1f;
    float advance;
} stb_fontchar;
#endif

#define STB_FONT_consolas_17_latin1_BITMAP_WIDTH         256
#define STB_FONT_consolas_17_latin1_BITMAP_HEIGHT         98
#define STB_FONT_consolas_17_latin1_BITMAP_HEIGHT_POW2   128

#define STB_FONT_consolas_17_latin1_FIRST_CHAR            32
#define STB_FONT_consolas_17_latin1_NUM_CHARS            224

#define STB_FONT_consolas_17_latin1_LINE_SPACING          11

static unsigned int stb__consolas_17_latin1_pixels[]={
    0x0001c872,0x08000000,0x0330012e,0x4c032257,0x2e400cdc,0x5440baa0,
    0x0006e401,0x13aa01b9,0x81a8ceb8,0x2801b12c,0xc8003720,0x409d500d,
    0x7001b12c,0x6406a203,0x14401b12,0xd982f8be,0x205bf13f,0x3fffc85c,
    0xf50ffff1,0x0f6002e4,0x540fd57e,0x200ec9af,0x05f500ff,0x320075f4,
    0x00ed800e,0xb10bb5d5,0x9d03df93,0x079807e6,0x76c00764,0x0bb5d500,
    0x200fcd3a,0x3d7d00f8,0x807e69d0,0x2f8be2fd,0x2e609df8,0x443f880f,
    0x35f13f99,0x1723fa83,0x08105d00,0x02640f98,0x2004c053,0x00001d9e,
    0x00000000,0x2dfec980,0x00000000,0x6ffd9800,0x000165e0,0x7c5f064c,
    0x7d00fcc2,0x9f407ea0,0xc8bd01f8,0x2e603535,0x501511cf,0x33cc1ec3,
    0x54455555,0x3c981a80,0x8277ecc0,0xb304efd9,0x3f6609df,0x9dfb304e,
    0x57dbbf50,0x89740f44,0x3d12e81e,0x207a25d0,0x3ab7e62e,0x40bf704f,
    0x408805ea,0x0f50be2f,0x41b604d8,0xf703f13e,0xfefcdc81,0x9efefec3,
    0x997c43f8,0xf8bcb88f,0x4fdddd70,0x417c43f8,0x37e605ea,0x6fcc5fba,
    0x6fcc5fba,0x6fcc5fba,0x6fcc5fba,0xcaf45fba,0x3f82f884,0x227f05f1,
    0x5f13f82f,0x9f2f47f0,0x0aaa885f,0xa801ffb0,0xa85f17c6,0xf3026c07,
    0x07e27d01,0xc97f213a,0x0f33f70f,0xb70fb8db,0x807df376,0x3ee36c7b,
    0xd00ffd80,0x17a2fa8b,0x2a2f45f5,0x5f517a2f,0xe8bea2f4,0x05f107b6,
    0x3e0be27f,0x27f05f13,0xf33f82f8,0xf31f5a63,0xf885ffdd,0x23d403fa,
    0x0d50be2f,0x0be205b8,0x260fc4fa,0x7c46c82f,0x2a1aabb2,0x9bd93a1f,
    0x5c07ed77,0x09d0fd47,0xf307f5f1,0x07e69d03,0x740fcd3a,0x29d03f34,
    0x2e4e81f9,0x2f882eef,0xf05f13f8,0x4fe0be27,0xf53f82f8,0x112ed321,
    0x6dbd46e8,0x2f8ffb30,0x01f5cc26,0x2740b3a6,0x541f89f4,0x2f85c81f,
    0xa7416e9d,0x56eba1f9,0x1ee01f4c,0x540fcd3a,0x01f50db7,0x3603eabb,
    0x2bb01f55,0xf55d80fa,0xfd98bb01,0x7c17c43e,0x27f05f13,0xf13f82f8,
    0xe9ee7f05,0x47b80db1,0x9d01f55d,0x3ae05f01,0x06fb800d,0x3e27d0db,
    0x45c83dc1,0x132bb2f8,0x4f46bbdc,0x40f17b4c,0x0d77b87b,0x2e07d576,
    0x41eed907,0x5b20f76c,0x1eed907b,0x7e7c4364,0x4fe0be25,0xf13f82f8,
    0x0be27f05,0x3c47d4fe,0xeeeb98bb,0x1fc4be27,0x017c07e6,0x80d50172,
    0x3f13e85e,0x45c80fa8,0x7b5f50fa,0xd0fabe20,0xb55f1b93,0x57c43dc0,
    0xf12f883e,0x5d80fb87,0x2ebb01f7,0x1f75d80f,0x203eebb0,0x3f57985d,
    0x44fe0be2,0x5f13f82f,0x20be27f0,0x4b73f33f,0x266fe64e,0x5e83ea7c,
    0x22f81fc4,0x3203d41c,0x9f427c05,0x417c41f8,0x44ea89ec,0xd83edffc,
    0x7d56c0ff,0x2e01eede,0x501ffb07,0x3ea2f41f,0x03f54e81,0x3a07ea9d,
    0x29d03f54,0xa84e81fa,0x0be23f56,0x10be25f1,0xf10be25f,0x5f10be25,
    0x1f996e7c,0x7ecf7176,0x6c0feccc,0x0be2f82f,0x204c80f5,0xf13e82f9,
    0xff909d03,0x33e607df,0xd85fa80a,0x7006a333,0x6c17ea0f,0x20fecccf,
    0x88fcc4f8,0xf88fcc4f,0x4f88fcc4,0x44f88fcc,0xdb5911f9,0x544f8bf7,
    0x3f513e1f,0xf87ea27c,0xff50fd44,0x8ed8bf55,0x9bf17fc8,0xf907f999,
    0x85f17cbf,0x9026407a,0x0fc4fa0d,0x01720764,0x07ea03c4,0x364001aa,
    0xdf881fa8,0x643fcccc,0x645fa9bf,0x645fa9bf,0x645fa9bf,0x645fa9bf,
    0x6c5fa9bf,0xfc83effe,0x7e45ea8a,0x7e45ea8a,0x7e45ea8a,0xfc85ea8a,
    0xffe984ff,0xd01f57ac,0x2f8a620b,0x401f30be,0x205f304d,0xd103f13e,
    0xd3005c8b,0x7f027cc0,0x13e20808,0x07d413e6,0x7ffdc2f4,0x09fff704,
    0x5c13ffee,0xff704fff,0x2017409f,0xc80dfffc,0xfc80dfff,0xffc80dff,
    0x00bd80df,0x2e0bb008,0x7c5f000f,0x7f103f82,0x9f40bf10,0x45f301f8,
    0x50b7005c,0xdf980bfd,0xfeee87dc,0x817faa0e,0x201f705d,0x02001000,
    0x80080040,0x2001001f,0x02001000,0x000001b0,0x5f17c000,0x3a25df70,
    0xb86c80ef,0xddf13fee,0x014cf70b,0x4006a600,0x55102a98,0x00035303,
    0x00000000,0x00000000,0x00000000,0x00000000,0x7c5f0000,0x01a82602,
    0x2aaa6022,0x0c0aaaa1,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x0a82a000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x6e400000,0x809d5000,0x541a8ceb,0x00dc8004,0x8037bf6e,0xdfb300dc,
    0x8006e409,0x04ea80dc,0xb9036259,0x0d896401,0xb806f6d4,0x5401eedc,
    0x5406e405,0x519d704e,0x2aaaaa03,0x0b513ae1,0x4c032257,0x45d5003d,
    0x3b200bca,0x2ed75400,0x1efc9d88,0xdb000fc4,0x5567ec01,0x201db01d,
    0x05fbadf9,0x1db003b2,0xd0bb5d50,0x3b207e69,0x87e69d00,0x4c0babfc,
    0x01fbcfff,0x01db01f4,0xd88bb5d5,0xfe81efc9,0x3d53efec,0x3e0be27d,
    0x7f303f55,0x42fa807d,0x0002fec9,0x4d800000,0x07ee0000,0x545e8000,
    0x0000002f,0x00000000,0xfffe809f,0x3e601f8b,0x00000000,0x649d07dc,
    0x04172b74,0x01884402,0x07f2004c,0x3aa017aa,0x205ea805,0x5ea800fa,
    0x0b9017a0,0x40fcc36e,0x77774c4e,0x3bbba64e,0x3bbba64e,0x3bbba64e,
    0x3bbbae4e,0x3bbbae5e,0xf807f65e,0x01f8bfff,0x3bbae136,0x3bbae5ee,
    0xd037a5ee,0xc9763643,0x401f39b5,0x2a600aa9,0x02aa600a,0x1ffb09f0,
    0x400ffd80,0x0fa00ffd,0x7c03ff60,0x221fcc03,0x3603ea4f,0x5555fd45,
    0x2aaafea2,0x2aaafea2,0x2aaafea2,0x2b3eea62,0x2b3eea62,0x019ffd12,
    0x3f17ffff,0x2a607e20,0x2a62acfb,0x3fe2acfb,0x23f717c3,0x3bfa23f8,
    0x37f202e8,0xedfc81fe,0xfedfc81f,0x5f10fe01,0x7d7c407f,0x0febe203,
    0x57c406b8,0x802f883f,0xb83f20fd,0x0fa8d907,0xfa803ea0,0x4003ea00,
    0x3217c02f,0xfc83dd56,0x701f8bff,0xf805f00d,0x17c7ef82,0x80bfdff3,
    0xc83ea05c,0x8d907d46,0x531b20fa,0xdb7a81fb,0x206dbd40,0x7c40db7a,
    0x836dea02,0x14f8804f,0xd80fb87f,0xf5007d45,0x5007d401,0x00be001f,
    0x3a24d85f,0xf8bffc86,0x5f005f01,0xfaf82f80,0x98cd8be3,0xd007cc00,
    0x13a1f989,0x262743f3,0x202ff21f,0x3601f55d,0x57601f55,0x817200fa,
    0xdb01f55d,0x1b23ee00,0x513a07ea,0x5413335f,0x2a0999af,0x2a0999af,
    0xf00999af,0x7dc2f805,0x44403e61,0x007a81f8,0xf82f805f,0xed8be6ca,
    0x2fa01aab,0x777c0dda,0x3be2feee,0x3e2feeee,0x22feeeee,0x225f105c,
    0xf12f883f,0x3e25f107,0x2203e603,0xf707f12f,0x5fbf1001,0x1f989f10,
    0x27ffffd4,0x49fffff5,0x24fffffa,0x04fffffa,0xd82f805f,0x8801f73f,
    0xf004e81f,0xaf82f805,0x7d45f2f8,0x5c0ffeee,0x7c6caf8e,0x2099999c,
    0x099999cf,0x2666673e,0x07d40ee0,0x741f50bd,0x17a0fa85,0x41f509b0,
    0x9dfe885e,0x05fa81b9,0x17ea6ff2,0x0fa803ea,0xfa803ea0,0xf805f000,
    0x05fdf502,0x0f983f10,0x2f805f00,0x8bed92f8,0xf327c43f,0xdb1e6d53,
    0xdb00db00,0xccfd8000,0x67ec0fec,0x7ec0fecc,0x200feccc,0xcccfd87a,
    0xfff700fe,0x900be01b,0x3ea09fff,0xa803ea00,0x003ea00f,0x80be017c,
    0xf9800fd8,0x5f002e41,0x32f82f80,0x0fe25f3f,0xf99f47f1,0x8e7d46a8,
    0x88e7d418,0x188e7d41,0x66fc4374,0x3e23fccc,0x23fccccd,0xfccccdf8,
    0xbf117c03,0x407f9999,0x002f803e,0x007d407f,0x07d401f5,0x3e001f50,
    0x26017c02,0x20fb802f,0x0be001f8,0x6c5f05f0,0x37bf62fd,0xfb1ae5fe,
    0xfffd503f,0xbfffd50b,0x8bfffd50,0xe80fa87e,0x97a03ea5,0x405e80fa,
    0x3a03ea6b,0xf003f105,0x2aff6005,0x4ccd7d44,0x2666bea0,0x2666bea0,
    0x2666bea0,0x26fe6620,0x26fe6620,0x1fd73550,0x89f959d0,0xf998806b,
    0x3e66209b,0xf98be09b,0x05554c2f,0x40020000,0xd8001000,0x1761f705,
    0x705d87dc,0xd874401f,0x5101f705,0x4400be00,0x3ea0cfec,0x3ea6ffff,
    0x3ea6ffff,0x3ea6ffff,0x3f26ffff,0x3f26ffff,0xfd56ffff,0x3b66019d,
    0xc802d83e,0x326fffff,0x3e6fffff,0x00017f42,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x009b1000,0x91032257,0x09b105bd,0x400d4c66,0x03d982ea,
    0xb1066795,0x44ae0227,0x003d980c,0x405445d5,0x201aa81a,0x754004d8,
    0x17441802,0x0530a615,0x4c032257,0x5004b83d,0x54406679,0x12d4029a,
    0x1015009b,0xf55f80bd,0x7e56fc43,0xdc85e882,0x2a03fefc,0x3ebf982f,
    0x17ff5f44,0x20ffff66,0xf983f55f,0x17d403eb,0x85f10fe2,0x2203fefe,
    0x05f5005e,0x9fcc1f10,0x6b8b95fa,0x303f55f8,0x05c87d7f,0x2ffebe88,
    0x07feefc8,0x817a23dc,0x802606fb,0x9d1b2040,0x97f204c0,0x201300fc,
    0x09803108,0x100fdde8,0x03108808,0xb8db0098,0x3e43ee0f,0x04c004c0,
    0xf1172a60,0x22e47227,0x8804086b,0x005c8310,0x22fb8098,0x983dc07b,
    0x2609f500,0x442980aa,0x83f99762,0x1b20aaa8,0xaaa885f1,0x80aaa880,
    0x7100aaa8,0x2aaa20bf,0x30155300,0x0fd42885,0x1ae7b89d,0x4c015530,
    0xefd880aa,0x98fe21ff,0x306b8b90,0x88530155,0x00d4d722,0x8bd01553,
    0x7caa887b,0x400510a6,0x641fedfc,0x2a9b3d45,0xfeef983f,0x45f0b92f,
    0x22ffeef9,0x22ffeef9,0x42ffeef9,0x4c1feefc,0x222ffeef,0x642feefd,
    0x9a743d45,0x7cd7cc1f,0xfddfb103,0xfeefd885,0x6fc47642,0x97c5f10f,
    0x36235c5c,0x2e42feef,0xefcdc9ea,0x777ec43f,0x1ee1fc2f,0x64ffddf9,
    0xfa803d45,0xa8b91b20,0x88275367,0x4c5cb740,0x4dd0222f,0x81137408,
    0x5d87ee6e,0xec9ba044,0x45c83f20,0x0d77b87a,0xec80fff6,0x0ec83f20,
    0xb72f83f2,0xf8be23f1,0x646b8b92,0x5c83f20e,0x64bf93d4,0xfc83b20f,
    0x5cf70be0,0x45c9ee2f,0x989d007a,0x4f51721f,0x2001db4d,0x0fb8b97b,
    0x1ee03dc0,0x2a274f70,0x7f3dc00f,0x51722f88,0x07d5f10f,0x0721dff5,
    0x3e2f887f,0x1f897c43,0x17c4fe5d,0x8fb1b25f,0xb917c43f,0xf11b27a8,
    0x8be21fc5,0x5e9fa24f,0x7a8b93dc,0x3bbe0e44,0x1722feee,0xef9a6cf5,
    0x7eeeb981,0x09f713d9,0x98fddd73,0x5cc7eeeb,0x85f17eee,0x775cc1f9,
    0x7f03f17e,0x6c1ea2e4,0x4dfc40ff,0x3e22f8df,0x03f13f81,0x3e27e27f,
    0x5f17c7f0,0x3fb66ff2,0x47f03f11,0x0b93d45c,0x3e07e25f,0x3ba67f23,
    0x64f70fe7,0x1fee3d45,0x1333339f,0x4d9ea2e4,0xbf983fa2,0xfff97c99,
    0x337f307d,0x4cdfccf9,0x266fe67c,0xf985f17c,0x3266fe61,0x47f05f17,
    0xfa83d45c,0x37ea7b85,0x3e0be21f,0x47f05f13,0x43f35bbe,0x3b27f11e,
    0xf17e8cff,0x22e47f05,0x5f11727a,0x88fe0be2,0x3e7bbffd,0xa8b93dc3,
    0x1b63fc47,0x6cfb1b20,0x8bb17c44,0xbb00b97b,0xf71767b8,0x4f9ee2ec,
    0xb8bb07dc,0x43f313e7,0xfa83ec6c,0x3f20fb81,0x0fcc4f86,0x2e1f989f,
    0x205e9aef,0x802b93f8,0xd90fcc4f,0xf51727d8,0x07e627c1,0x897a7b82,
    0x0fb1b27e,0x11cfa8dd,0xfc8af983,0x7d4cd367,0x3f223b61,0x1db00b97,
    0x476cff91,0x23b67fc8,0x2bee7fc8,0x476c4fa8,0x2bee7fc8,0x57cc5e98,
    0x4f987fc8,0xfb53bf10,0x98afb81f,0x4c57dc5e,0xcfffb85e,0x9fc4fe60,
    0x8afb805c,0x457cc5e9,0x227b27fc,0x457dc4ea,0x27b805e9,0x27ee9afc,
    0x27fc8af9,0xfea81fca,0xdffc85ff,0x7ffd367a,0x567ff4c3,0xfd300b97,
    0x7f4cf59f,0x3fa67acf,0x7fdc7acf,0xcffe984f,0x27ffdc7a,0x27adffc8,
    0x75405fea,0x40ee9dff,0xf704fffb,0x036e09ff,0x93f8a7cc,0x3ffee00b,
    0xf5bff904,0x81f7ff54,0x7004fffb,0x55ffec4f,0x3d6ffe47,0x0010019b,
    0x40200001,0x20020029,0x01000800,0x40020010,0x00035300,0x00800400,
    0xa8820164,0x00800531,0x04000010,0x0020a600,0x00000004,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x3f6a0000,0x07b300ce,0x4c1f7ed4,0x221eeeee,0xedb8804d,0x3bbbba63,
    0x0b7ff662,0x3660baa0,0x41eb83ef,0x4efd985a,0x2e02aa60,0x3ae0dffd,
    0x895c2d41,0xeffda80c,0xe882d883,0xfdb82e81,0x99e540de,0xb5077a21,
    0x22003b10,0x80b53eda,0xf503eee9,0xf30dd537,0x35f707d7,0xaaa88bd5,
    0x02f441fb,0x54359df5,0x261aaaaf,0x201fdaab,0x9df982fa,0x8bf724fb,
    0x56fcc2f8,0x77f4c5fb,0x2b3fa25e,0x45fb92da,0xf55f82f8,0xbaacfa83,
    0xf885fa82,0x67ec3f82,0x2fa21daa,0x2ecc2ffe,0x03f105f1,0x5caefbe0,
    0x27554407,0x443dc6d8,0x11f88310,0x1f980fa1,0x07f10130,0x3e2003d4,
    0x36402604,0x645f03ee,0x97d45e85,0xfc820df8,0x1722f800,0x017a0204,
    0x82f880a8,0x0007ee3f,0x647fd013,0x567dd4c5,0x701f302a,0xb827400f,
    0x5511b60f,0x3f2b9035,0x3e606aae,0x206aaa21,0x003d406c,0x2aaa217c,
    0x2fc87f01,0x4c0f997c,0x1f74e81f,0x7c00fe20,0x55101f32,0x101ba035,
    0x5f103555,0x402f47f0,0x32015519,0xeea81f37,0xd906eeef,0x03511ee0,
    0x2ffa209d,0x7f74c1ed,0x20f9bd84,0x43f300f8,0xce84fee9,0x67d42cca,
    0x1766602b,0x2213fba6,0x87fdd11f,0x1f505d2f,0x981b2bb0,0x3a5f001f,
    0x09fdd302,0x74c0bbea,0x82f884fe,0x3200fe3f,0x262feedd,0x4405d3ff,
    0xdb33101f,0x99ee1333,0x4409d05f,0x27403fff,0x0fc35d74,0x09d01f98,
    0x4bf99bfd,0x41ffecc9,0x7403fff9,0xdfa9f984,0x20b904e8,0x1eed907b,
    0xfff30fa8,0x74017205,0x0fffa604,0x82f884e8,0x9005f33f,0xc822ec9f,
    0xa80fc405,0x3fffffff,0xe817e2f7,0xf93bd304,0x5ec27409,0x9807c479,
    0x9f09d01f,0xdf102f98,0x9d02f540,0x7c7fbf10,0xf700f983,0x0be6bb01,
    0x5f3307d4,0x3a001f30,0x04fd9804,0xf05f109d,0x32013e27,0x0f983dc6,
    0x6400fc40,0x0bf1f706,0xb8bb04e8,0x9909d01f,0x81e6b7fa,0xd09d01f9,
    0x3e407f09,0x27403ee0,0x417c1ef8,0x7d41db3e,0x2fba4e81,0xf05f3299,
    0x3bb57d05,0xf7002740,0x5f109d01,0x01be2f88,0x3a0f5172,0x3f101db3,
    0x3ee0d900,0xf04e806e,0x9d01f989,0x6c621f30,0x7403ee04,0x17c46d84,
    0x07b80db0,0x2a2f413a,0xfdbb5c0f,0x3f313e20,0x3a4fffb8,0x9b5c2f86,
    0x013a05c9,0x04e80fa8,0x361fa89f,0x2a2e400f,0x1fb76b87,0x1b200fe0,
    0x2027cfdc,0x315fb04e,0x413a01fb,0x41d911ec,0x205ea9ba,0x98bf984e,
    0x3266626d,0x2e66622f,0x5413a03f,0x4c4fa8bf,0x40f9f99f,0x05fa9bfc,
    0x35bf307d,0x10fcc5f3,0xb827407d,0xd06ea999,0x2a2bf209,0x4effc45e,
    0xf51721b9,0xf9f99f98,0x0335db00,0xfabdc1b2,0x6c413a03,0x4c41dfff,
    0xeb819de9,0x7fd40dff,0x74cc40df,0x7ffd419d,0x37ffee0d,0x177ffe41,
    0x0cef4cc4,0x7427ffd4,0x70ffff93,0x3e209fff,0xdfffb301,0x07d31f43,
    0x433bd331,0x0cffffe8,0x0677a662,0x2037fff2,0x20dfffd8,0x4fa3d45c,
    0xb307fffc,0x41b20fff,0x988fee7b,0x02019de9,0xffffffc8,0xc8020000,
    0x80ffffff,0x11002200,0xfffffc80,0x1ae0100f,0x8801007c,0x8d701002,
    0x7fe47ffd,0x0980ffff,0xffffff90,0x00800201,0x1ae7a8b9,0x3200007c,
    0x2fc8f706,0x1ffffff9,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x80000000,0x4174c04b,0x3efea83d,
    0xd100c04c,0x04c0bddd,0x776c0264,0x7774c1cd,0xdd13eeee,0xeec819bd,
    0xeeee82de,0xdd301eee,0x81d504c8,0xeee985da,0x4003eeee,0x75c590e8,
    0x5d15eeee,0x77edc5d0,0xdddb0002,0x41723ddd,0x885d30db,0x6cc12e3d,
    0x5c6d805c,0x54e7d40f,0xf989f10d,0x557fd702,0x4f6c17c0,0xb75bd009,
    0x2099cc7f,0xd759f148,0x6dd76c5f,0x5555545f,0x8ffd01fc,0x266d80fb,
    0xaa886ffe,0x301aacfb,0x8ba7985d,0x12acfba9,0x3ee7f05f,0x1f42fcab,
    0x36aaaaa0,0xf887f30f,0x1f907ec4,0x5cea835c,0x7f13f880,0xdfa80bb0,
    0x2fa05ede,0xd82f801f,0x740dffff,0x93987e44,0x17c522bb,0x2e2ec3f2,
    0xb836401f,0x41fc47be,0x1b63723f,0x9f500be0,0xaf99fb98,0x17c42f81,
    0x44e811fc,0x3e2004fa,0x1f907ec3,0x85f34f88,0x2b9d706b,0x91f900aa,
    0x3a013a0d,0xf302fdae,0x05f003f3,0x3a374cbb,0x4399fc44,0x85f148bc,
    0xf98bb3f8,0x220be202,0x45e87a9f,0x00db00fa,0x21fdc05f,0xfffffff9,
    0x17c42f87,0x30bd01fc,0x0dd001bf,0x40fe29f1,0x7a85e9fb,0xeddcdb82,
    0x5fbd02fe,0x3f3013a0,0xf8cd827c,0x3bba209a,0x8bb2eeef,0x13bd31f9,
    0x5dc39a7c,0x9f05f148,0x403f7176,0x1ea9b06c,0x206c83ee,0x902f806d,
    0x78adc03f,0x37f10be0,0x2207f333,0x01dd103f,0x8fb80fdc,0x07ff406c,
    0xb92f8bd4,0xa82ec9f9,0xffff985f,0xb07d40ff,0xff13f10b,0xcfaaa8bf,
    0xf98bb1aa,0x747ffff2,0x237aa735,0xbd05f148,0x17ee67b6,0x0fb82f88,
    0x7c5f10f5,0x3e01b603,0x6402fc82,0x217c0f34,0xfffffff8,0x4401fb03,
    0x407f106f,0x5402fdf8,0x3eaf305f,0x7b8d9995,0x2f77f75c,0x206673e6,
    0x2e13a1fa,0x5f003f16,0x20fc8bb0,0x39a7c44e,0x2f8a4457,0xfffda7c4,
    0x4436403e,0xaf41ea2f,0x01b600f9,0x417e40be,0x9eb9cd98,0x17c42f80,
    0x00fe41fc,0x1b601dd1,0x3a017ea0,0xd8f981fe,0x45ccd8fc,0x67dd4c7a,
    0xf804e82a,0xee81fcbe,0x2f801fcc,0x3fdbaed8,0x4cfea274,0xf8a44133,
    0x1ed9fd42,0xf907f100,0x879fb999,0x6d80d97b,0x3ee02f80,0x7ffffe43,
    0x442f84ff,0x7e43f82f,0xb817e601,0x805f001f,0xf886e8fc,0xcbdbe8f9,
    0x26623d45,0x04e819bf,0x2f77efd4,0x07f333ea,0x3bf60720,0x6c4e81ce,
    0x88b2730f,0x7ec45f14,0x36400bb0,0xfdcccca8,0x1fd7cc3c,0x0be01b60,
    0x23f0bf30,0xf10be04c,0x0fe47f05,0x7c409f50,0x980be003,0x9f07f33f,
    0x172f7aed,0xefeeb8f5,0x4ce7cc5e,0xf313e219,0x35f12ec5,0x99999883,
    0x37a01761,0x4e62fda9,0x5fc52219,0x1762ffc9,0x5001fc40,0x407f740f,
    0x0aaeeaa9,0x3d1005f0,0x988791f8,0x5f109bf9,0x2b3ee7f0,0x00ba0aaa,
    0x155555fb,0x46e80be0,0x99ffc0fc,0x3d45caff,0xfff305f0,0x80c3ffff,
    0xff887e21,0x7ffff47f,0xd00bb1ff,0xe983bdff,0x14eeeeee,0xd839dfff,
    0x800f9005,0x41bee07a,0x1ffffffb,0x220005f0,0xffc87b0f,0x05f16fff,
    0x3ffff67f,0x3e2002ff,0x02ffffff,0x107ee05f,0x3a0fe8df,0x03d45caf,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0xeee98000,0xdddd34ee,0x40bd509d,
    0x717a202e,0x37bbae5d,0x16777642,0x642efea8,0x1bd06dc4,0x288531e8,
    0x01a8954c,0xa9802aa6,0x02aaa20a,0x2602aaa6,0x900a80aa,0x542a5103,
    0x40554661,0x2a62efd8,0x7542aaaa,0x440661ef,0x06a02a22,0x44a20b62,
    0x2aafe61a,0x5557f52a,0x201ffb05,0x83fe203f,0xb75f93fe,0x65576c7f,
    0x5cdfd43f,0x2f99762f,0x64be1ffc,0xfbf33d45,0xf905fbfb,0xfe983fdb,
    0xfddf35ee,0x7777ec5f,0x3fbbf622,0x17c1bee2,0x7577674c,0xfddbb91f,
    0x1fc9dd85,0x8bfdddd5,0x1b26c899,0x887f13dc,0xa84fa82f,0xf35fef9f,
    0x1003ea03,0x0fe07f5f,0xbd33df88,0x6cdd1b27,0x913e3645,0x83f8aecd,
    0x5c97c7ef,0x94f983d4,0x9b20fa8d,0x04420df8,0x900fcdba,0xfa87e41d,
    0x9f305f04,0x4fc9edbe,0x3e1f8976,0x7303f503,0x6413dcfb,0x81ee36c5,
    0x263ff501,0xf501f98f,0x0db7a801,0x6af980fe,0xb1b29b79,0x89b22ecd,
    0x5d87d42f,0x8febe0bd,0x07a8b92f,0x13a3d4be,0x003ee3f3,0x407f37b8,
    0x3017c43f,0x21337f33,0x5365f0f9,0x5f13dc6c,0x41fcc17c,0x5e67badc,
    0xfa89b3f8,0x333313a1,0x07ea1333,0x2a03f35d,0x6c0999af,0x07f01f55,
    0xd8f9fbcc,0xb1fd4d94,0xf85f733d,0xcdd8fcc3,0xf9b2be06,0x5c7a8b92,
    0x47eeefee,0x2feeeeef,0xeeb980d9,0x873fee7e,0x303f81f8,0x9fffffff,
    0x29b2f9e6,0x3ba3d45c,0x2f440fca,0x227d9ce8,0x07d5fa8f,0xf987e69f,
    0x54ffffff,0x3ffe601f,0xffff54ff,0xf897c49f,0x5ea03f83,0x3f29b6ec,
    0x7fec2eff,0x5fe41dff,0xffb1feba,0x97c57c05,0x27a8b92f,0x99bf9afb,
    0x4ccce7c1,0x7cc0f909,0x5c47c99b,0xf05f13fe,0x5fcccc07,0x97cf3099,
    0x47a8b94d,0xed81ded8,0x8b5bb500,0x2f8fbd9f,0x330d97c8,0x2a133333,
    0x335f300f,0xa803ea13,0x0fe17a0f,0x327f37a8,0x85f53d95,0x703f665d,
    0x361f79db,0x25f00fcd,0xb1b25f6c,0x407f2ecf,0x817dc06d,0xdb03dc5d,
    0xa87e627c,0x4f305f00,0x51729b2f,0x0999998f,0x999807ee,0x23efa099,
    0xaf881fbd,0x5405403f,0x203f300f,0x33f600fa,0x1fc0fecc,0x5c854d50,
    0xbb07e4d9,0x3dc02f98,0x3e03babb,0x265f3f32,0x2e7fc8af,0x189efd8e,
    0x4188e7d4,0xdb299bee,0x266ff911,0x3ee5e989,0x3ee5e98a,0x4f305f06,
    0x51729b2f,0x7ffffc4f,0x33339f33,0x1fffffc4,0x03feebdb,0xf5007f6c,
    0x2601f509,0x201f501f,0xfccccdf8,0x0d701fc3,0x7f136572,0x807ea2ec,
    0x7c5763f8,0x3f762f85,0x9eb7ff22,0xffe8cfe8,0x5fffea84,0x9a7ffec4,
    0xf57acffe,0xfb81bfff,0x82fd44ff,0x4be7980a,0x07a8b94d,0x3fffff20,
    0x897e4007,0x013ea07f,0x01f505b1,0x57d407e6,0x01f50999,0x999bf8bd,
    0xcb641ae1,0x33db3e46,0xca988bd7,0x7f52ec5f,0x0bfe62f8,0x00110002,
    0x20040001,0x02008018,0x00000000,0x00000000,0x30000000,0x3ffea03f,
    0x2e0bb6ff,0x3ffffe0f,0x5ae0d90f,0xfd9fc46c,0xefb83eff,0x7dc5d82d,
    0x05fd0be1,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x10000000,0x441a8835,0x07601cec,0x8e639864,0x0676cc1c,
    0xb3019dd5,0x424c4987,0x0eedc1c8,0x9ec41744,0x0ccccccb,0x82222222,
    0x0881b75c,0x33331000,0x1c88ed40,0x220c895c,0x0cccc44c,0x777774be,
    0x0001eeee,0x00000000,0x3f20fc80,0x3666fa20,0x21874223,0x1f98fa6b,
    0x5ebcb8d9,0xfb13aaa6,0xf34f989f,0x6ecdf707,0x7eec0fba,0xccc9fc40,
    0x3fe0cccc,0x5b67ffff,0x93ff60fb,0xd50bf54b,0x8bea09dd,0xfaafc6fc,
    0xffb2ec41,0x543e21ff,0xaaaaaaaa,0x00000000,0xdd000000,0x9b3b0be6,
    0x2bea1d1d,0x23f15e9d,0x0fa6b86c,0x0fa62364,0xbf309b15,0x45be207f,
    0xb698fa0f,0x4003f889,0x27a88888,0x4fccf76d,0xf94e9dfa,0x204c000f,
    0x802045fb,0x41111109,0x00000038,0x00000000,0x09d9f300,0x11656f6d,
    0x8b643df9,0x1ee7f01f,0x5ff90fea,0x37dc1360,0xd0fc57a0,0x41f89747,
    0x9999992f,0x32798019,0xd324cf55,0x00b221df,0x00002000,0x00000000,
    0x00000000,0x837dc000,0x44b299b6,0xf11ddeeb,0x43ae1723,0x701fdc3e,
    0xf309b01f,0x1fb509f9,0xa87edf6c,0xbb823646,0x400bbbbb,0x80082238,
    0x00000000,0x00000000,0x00000000,0xd8000000,0x8d9d80ff,0x3a950e9d,
    0x3e9ae4a8,0x363647e2,0x5330bbdf,0xbdeba8dd,0x13e67f30,0xcdb8819b,
    0x017106a0,0x00000000,0x00000000,0x00000000,0x00000000,0x2e000000,
    0xbe886e9f,0x03d02ea9,0x4731cc32,0x6eeeec1c,0xc819dd91,0x8731dddd,
    0x00000039,0x00000000,0x00000000,0x00000000,0x00000000,0x98000000,
    0x7109f13f,0x0054039b,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x80000000,0x017dc5f8,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,
};

static signed short stb__consolas_17_latin1_x[224]={ 0,3,2,0,0,0,0,3,2,2,1,0,1,2,
3,0,0,1,1,1,0,1,1,0,0,0,3,2,1,1,1,2,0,0,1,0,0,1,1,0,0,1,1,1,
1,0,0,0,1,0,1,0,0,0,0,0,0,0,0,2,1,2,1,0,0,1,1,1,0,0,0,0,1,1,
1,1,1,0,1,0,1,0,1,1,0,1,0,0,0,0,1,1,3,1,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,0,0,0,
3,1,0,0,1,1,0,2,0,0,1,0,2,2,0,1,0,3,3,1,1,1,0,0,0,1,0,0,0,0,
0,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,1,0,0,
0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,
 };
static signed short stb__consolas_17_latin1_y[224]={ 12,0,0,1,-1,0,0,0,-1,-1,0,3,9,6,
9,0,1,1,1,1,1,1,1,1,1,1,3,3,2,5,2,0,0,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1,0,-1,1,14,0,3,0,3,0,3,0,3,0,0,
0,0,0,3,3,3,3,3,3,3,1,3,3,3,3,3,3,-1,-2,-1,5,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,12,3,-1,1,1,1,
-2,0,0,1,1,4,6,6,0,0,0,1,0,0,0,3,0,5,12,0,1,4,0,0,0,3,-2,-2,-2,-2,
-2,-3,1,1,-2,-2,-2,-2,-2,-2,-2,-2,1,-2,-2,-2,-2,-2,-2,4,-1,-2,-2,-2,-2,-2,1,0,0,0,
0,0,0,-1,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,0,0,0,0,0,0,0,
 };
static unsigned short stb__consolas_17_latin1_w[224]={ 0,3,6,9,9,10,10,3,6,5,7,9,5,6,
3,9,9,8,8,8,9,8,8,9,9,9,3,5,7,8,8,6,10,10,8,9,9,7,7,9,9,7,7,8,
8,9,9,9,8,10,8,9,9,9,10,9,10,10,9,5,8,5,8,10,6,7,8,7,8,9,9,9,8,8,
7,8,8,9,8,9,8,8,8,7,9,8,9,10,9,9,8,7,3,8,9,9,9,9,9,9,9,9,9,9,
9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,0,3,7,9,9,9,
3,8,8,10,7,8,9,6,9,7,7,9,6,6,8,8,9,4,3,7,7,8,10,10,10,6,10,10,10,10,
10,10,11,9,8,8,8,8,8,8,8,8,9,9,9,9,9,9,9,8,9,9,9,9,9,10,8,8,8,8,
8,8,8,8,10,7,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,8,9,
 };
static unsigned short stb__consolas_17_latin1_h[224]={ 0,13,5,11,15,13,13,5,17,17,8,9,6,3,
4,14,12,11,11,12,11,12,12,11,12,11,10,12,11,5,11,13,16,11,11,12,11,11,11,12,11,11,12,11,
11,11,11,12,11,14,11,12,11,12,11,11,11,11,11,17,14,17,6,2,4,10,13,10,13,10,12,13,12,12,
16,12,12,9,9,10,13,13,9,10,12,10,9,9,9,13,9,17,18,17,5,11,11,11,11,11,11,11,11,11,
11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,13,16,11,11,11,
18,14,4,12,9,7,5,3,8,4,6,11,7,7,4,13,14,4,3,7,9,7,12,12,12,13,14,14,14,14,
14,15,11,14,14,14,14,14,14,14,14,14,11,14,15,15,15,15,15,7,15,15,15,15,15,14,11,13,13,13,
13,13,13,14,10,12,13,13,13,13,12,12,12,12,13,12,13,13,13,13,13,9,13,13,13,13,13,16,16,16,
 };
static unsigned short stb__consolas_17_latin1_s[224]={ 255,165,124,168,168,207,124,101,44,26,21,
162,78,183,163,159,87,141,196,68,120,59,50,110,1,65,158,249,160,105,205,
248,78,17,56,186,91,9,1,126,186,178,32,75,28,37,84,108,101,75,47,
157,150,176,130,246,235,224,214,38,34,32,92,194,176,132,202,124,230,114,227,
197,1,167,89,237,246,172,182,148,39,221,247,140,217,94,227,216,1,114,199,
9,1,17,131,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,
81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,255,169,60,
20,30,10,5,140,167,21,208,29,114,183,11,146,84,52,47,54,154,173,149,
141,190,61,191,38,97,136,206,248,1,43,12,23,237,107,40,54,86,95,104,
113,122,169,178,131,71,187,118,128,138,148,158,69,218,178,188,198,208,64,62,
21,30,48,57,66,85,228,103,118,1,238,228,218,40,77,11,147,75,196,135,
145,94,211,182,237,155,239,104,192,11,97,51,68, };
static unsigned short stb__consolas_17_latin1_t[224]={ 1,35,87,62,1,20,35,87,1,1,87,
75,87,87,87,20,49,62,62,49,62,49,49,62,49,75,75,35,62,87,62,
20,1,75,75,49,62,75,75,49,62,62,49,75,75,75,75,49,62,20,75,
49,62,49,62,62,62,62,62,1,20,1,87,87,87,75,35,75,35,75,49,
20,62,49,1,49,49,75,75,75,35,35,75,75,49,75,75,75,87,35,75,
1,1,1,87,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,
62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,1,35,1,
62,62,62,1,20,87,49,75,87,87,87,87,87,87,62,87,87,87,35,20,
87,87,87,75,87,49,49,49,1,20,20,20,20,1,1,62,20,20,20,20,
20,20,20,20,20,62,20,1,1,1,1,1,87,1,1,1,1,1,20,62,
35,35,35,35,35,35,1,75,49,35,20,20,20,49,49,49,49,35,49,35,
35,35,35,35,75,35,35,35,35,35,1,1,1, };
static unsigned short stb__consolas_17_latin1_a[224]={ 150,150,150,150,150,150,150,150,
150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,
150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,
150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,
150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,
150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,
150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,
150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,
150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,
150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,
150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,
150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,
150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,
150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,
150,150,150,150,150,150,150,150, };

// Call this function with
//    font: NULL or array length
//    data: NULL or specified size
//    height: STB_FONT_consolas_17_latin1_BITMAP_HEIGHT or STB_FONT_consolas_17_latin1_BITMAP_HEIGHT_POW2
//    return value: spacing between lines
static void stb_font_consolas_17_latin1(stb_fontchar font[STB_FONT_consolas_17_latin1_NUM_CHARS],
                unsigned char data[STB_FONT_consolas_17_latin1_BITMAP_HEIGHT][STB_FONT_consolas_17_latin1_BITMAP_WIDTH],
                int height)
{
    int i,j;
    if (data != 0) {
        unsigned int *bits = stb__consolas_17_latin1_pixels;
        unsigned int bitpack = *bits++, numbits = 32;
        for (i=0; i < STB_FONT_consolas_17_latin1_BITMAP_WIDTH*height; ++i)
            data[0][i] = 0;  // zero entire bitmap
        for (j=1; j < STB_FONT_consolas_17_latin1_BITMAP_HEIGHT-1; ++j) {
            for (i=1; i < STB_FONT_consolas_17_latin1_BITMAP_WIDTH-1; ++i) {
                unsigned int value;
                if (numbits==0) bitpack = *bits++, numbits=32;
                value = bitpack & 1;
                bitpack >>= 1, --numbits;
                if (value) {
                    if (numbits < 3) bitpack = *bits++, numbits = 32;
                    data[j][i] = (bitpack & 7) * 0x20 + 0x1f;
                    bitpack >>= 3, numbits -= 3;
                } else {
                    data[j][i] = 0;
                }
            }
        }
    }

    // build font description
    if (font != 0) {
        float recip_width = 1.0f / STB_FONT_consolas_17_latin1_BITMAP_WIDTH;
        float recip_height = 1.0f / height;
        for (i=0; i < STB_FONT_consolas_17_latin1_NUM_CHARS; ++i) {
            // pad characters so they bilerp from empty space around each character
            font[i].s0 = (stb__consolas_17_latin1_s[i]) * recip_width;
            font[i].t0 = (stb__consolas_17_latin1_t[i]) * recip_height;
            font[i].s1 = (stb__consolas_17_latin1_s[i] + stb__consolas_17_latin1_w[i]) * recip_width;
            font[i].t1 = (stb__consolas_17_latin1_t[i] + stb__consolas_17_latin1_h[i]) * recip_height;
            font[i].x0 = stb__consolas_17_latin1_x[i];
            font[i].y0 = stb__consolas_17_latin1_y[i];
            font[i].x1 = stb__consolas_17_latin1_x[i] + stb__consolas_17_latin1_w[i];
            font[i].y1 = stb__consolas_17_latin1_y[i] + stb__consolas_17_latin1_h[i];
            font[i].advance_int = (stb__consolas_17_latin1_a[i]+8)>>4;
            font[i].s0f = (stb__consolas_17_latin1_s[i] - 0.5f) * recip_width;
            font[i].t0f = (stb__consolas_17_latin1_t[i] - 0.5f) * recip_height;
            font[i].s1f = (stb__consolas_17_latin1_s[i] + stb__consolas_17_latin1_w[i] + 0.5f) * recip_width;
            font[i].t1f = (stb__consolas_17_latin1_t[i] + stb__consolas_17_latin1_h[i] + 0.5f) * recip_height;
            font[i].x0f = stb__consolas_17_latin1_x[i] - 0.5f;
            font[i].y0f = stb__consolas_17_latin1_y[i] - 0.5f;
            font[i].x1f = stb__consolas_17_latin1_x[i] + stb__consolas_17_latin1_w[i] + 0.5f;
            font[i].y1f = stb__consolas_17_latin1_y[i] + stb__consolas_17_latin1_h[i] + 0.5f;
            font[i].advance = stb__consolas_17_latin1_a[i]/16.0f;
        }
    }
}

#ifndef STB_SOMEFONT_CREATE
#define STB_SOMEFONT_CREATE              stb_font_consolas_17_latin1
#define STB_SOMEFONT_BITMAP_WIDTH        STB_FONT_consolas_17_latin1_BITMAP_WIDTH
#define STB_SOMEFONT_BITMAP_HEIGHT       STB_FONT_consolas_17_latin1_BITMAP_HEIGHT
#define STB_SOMEFONT_BITMAP_HEIGHT_POW2  STB_FONT_consolas_17_latin1_BITMAP_HEIGHT_POW2
#define STB_SOMEFONT_FIRST_CHAR          STB_FONT_consolas_17_latin1_FIRST_CHAR
#define STB_SOMEFONT_NUM_CHARS           STB_FONT_consolas_17_latin1_NUM_CHARS
#define STB_SOMEFONT_LINE_SPACING        STB_FONT_consolas_17_latin1_LINE_SPACING
#endif

