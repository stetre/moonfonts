// Font generated by stb_font_inl_generator.c (4/1 bpp)
//
// Following instructions show how to use the only included font, whatever it is, in
// a generic way so you can replace it with any other font by changing the include.
// To use multiple fonts, replace STB_SOMEFONT_* below with STB_FONT_courier_26_latin1_*,
// and separately install each font. Note that the CREATE function call has a
// totally different name; it's just 'stb_font_courier_26_latin1'.
//
/* // Example usage:

static stb_fontchar fontdata[STB_SOMEFONT_NUM_CHARS];

static void init(void)
{
    // optionally replace both STB_SOMEFONT_BITMAP_HEIGHT with STB_SOMEFONT_BITMAP_HEIGHT_POW2
    static unsigned char fontpixels[STB_SOMEFONT_BITMAP_HEIGHT][STB_SOMEFONT_BITMAP_WIDTH];
    STB_SOMEFONT_CREATE(fontdata, fontpixels, STB_SOMEFONT_BITMAP_HEIGHT);
    ... create texture ...
    // for best results rendering 1:1 pixels texels, use nearest-neighbor sampling
    // if allowed to scale up, use bilerp
}

// This function positions characters on integer coordinates, and assumes 1:1 texels to pixels
// Appropriate if nearest-neighbor sampling is used
static void draw_string_integer(int x, int y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0, cd->t0); glVertex2i(x + cd->x0, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t0); glVertex2i(x + cd->x1, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t1); glVertex2i(x + cd->x1, y + cd->y1);
        glTexCoord2f(cd->s0, cd->t1); glVertex2i(x + cd->x0, y + cd->y1);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance_int;
    }
    glEnd();
}

// This function positions characters on float coordinates, and doesn't require 1:1 texels to pixels
// Appropriate if bilinear filtering is used
static void draw_string_float(float x, float y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0f, cd->t0f); glVertex2f(x + cd->x0f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t0f); glVertex2f(x + cd->x1f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t1f); glVertex2f(x + cd->x1f, y + cd->y1f);
        glTexCoord2f(cd->s0f, cd->t1f); glVertex2f(x + cd->x0f, y + cd->y1f);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance;
    }
    glEnd();
}
*/

#ifndef STB_FONTCHAR__TYPEDEF
#define STB_FONTCHAR__TYPEDEF
typedef struct
{
    // coordinates if using integer positioning
    float s0,t0,s1,t1;
    signed short x0,y0,x1,y1;
    int   advance_int;
    // coordinates if using floating positioning
    float s0f,t0f,s1f,t1f;
    float x0f,y0f,x1f,y1f;
    float advance;
} stb_fontchar;
#endif

#define STB_FONT_courier_26_latin1_BITMAP_WIDTH         256
#define STB_FONT_courier_26_latin1_BITMAP_HEIGHT        148
#define STB_FONT_courier_26_latin1_BITMAP_HEIGHT_POW2   256

#define STB_FONT_courier_26_latin1_FIRST_CHAR            32
#define STB_FONT_courier_26_latin1_NUM_CHARS            224

#define STB_FONT_courier_26_latin1_LINE_SPACING          12

static unsigned int stb__courier_26_latin1_pixels[]={
    0x64001910,0x95000001,0x02b803b8,0x4c00b100,0x98002002,0x006a0004,
    0x00002c40,0x000e4000,0x54000730,0x0b722001,0x98000600,0x07e2000a,
    0x75413620,0x8d70002f,0x03e8805d,0xb80174c0,0x059004de,0x200075c0,
    0x4c003edc,0x571c801e,0xb9ecc1b8,0x0005d102,0x8001bbd5,0x17003edc,
    0x6eed802e,0x76c4003b,0x4068efdc,0x174401e8,0x00001640,0x2009b000,
    0x1bb001e9,0x19b003b2,0x40075400,0x00bb14e8,0x8e4007aa,0x8761642c,
    0x00fa202c,0x01d70dc8,0x17629d10,0x4005c2e0,0x6c00b568,0x0007ea82,
    0x0b200330,0x70000000,0x44002a00,0x9d901982,0x2600bbd9,0x0a819801,
    0x36000a80,0x222c8391,0x01401646,0x30033050,0xc8801503,0x74d1003d,
    0x2a03d800,0x80000007,0x3b62002c,0x06f7541d,0x22000a88,0x02a2000a,
    0x88b90b50,0x41998199,0x19981998,0x4cc0ccc4,0x90761d01,0x20b23445,
    0x20009999,0x88009999,0x99999999,0x13333009,0x04a9a200,0x32240344,
    0x10eeeeee,0xeea83bdb,0x7645640d,0x9ea80bdf,0x440fcc40,0x203edcee,
    0x03edcee8,0x0fb73ba2,0x360c4074,0x3bb23eef,0x8fbbf64e,0x3f64eeec,
    0x3bbb23ee,0x5903a684,0xd70b2344,0x2e00dfdd,0xd806feee,0xeeeeeefe,
    0xfeeeb83e,0x0e8d1006,0x22000ea0,0x21d99999,0x7cc409ea,0x51debc81,
    0x203b01db,0xd81e984a,0x3d81e983,0x83d81e98,0x8072001d,0x2e01c83b,
    0x0ee01c83,0x33d33f33,0x64688b21,0x0076ae02,0x1003b570,0x2e01dc0d,
    0x468801da,0x000ae04b,0x80ec1d80,0x205f904a,0x1d05985b,0x20ec03d0,
    0x3d07601e,0x2fa60ec0,0x2e01c800,0x0ee01c83,0x263b8072,0xeefeefed,
    0x322c4152,0x012a3a02,0x100951d0,0x3a01dc0d,0x868804a8,0x0005900e,
    0x41660ec0,0x440d900e,0x2541e80f,0xa9a60254,0x09534c04,0xedb88698,
    0x5c03901c,0x0ee01c83,0x883b8072,0x879101a6,0x034b302c,0x44034b30,
    0x59806606,0x2e1a201a,0x00005703,0x2a0f40ec,0x5900f204,0xd80e8b30,
    0x00765801,0x05801d96,0x0e41f544,0x40390770,0x2e01c83b,0x80d15883,
    0xc81640fe,0x16400b22,0x64688059,0x16459000,0x41a21a20,0x3600004a,
    0x00745981,0xd02d8099,0x007416a3,0xc800e8e4,0x039001d1,0xb80721a0,
    0x0ee01c83,0x263b8072,0x2aebaeba,0x20591320,0x46802cc6,0x4cf44059,
    0x98d000e9,0x2c834405,0x20000688,0x16a3d01d,0x3e601f90,0x407ab300,
    0x01e57007,0x5700795c,0x640e8066,0x0720ee01,0x201c83b8,0x33b72e3b,
    0x886e4ced,0x42541645,0x7425400e,0x3333e200,0xe84a800f,0x3441a200,
    0x006c04b8,0x3d5980ec,0x9904fc80,0x3a05be80,0x01d1c800,0x2003a390,
    0x16a0d71c,0xc83b8072,0x0720ee01,0x934a83b8,0x32344590,0xaaaacd82,
    0x5566c03d,0x1a203daa,0x559b001d,0x34407b55,0x037605b0,0x076007d1,
    0xac805be8,0x04fc9cfd,0x07601f98,0x5801d960,0xeb960076,0x81eda9bd,
    0x320ae01c,0x0720ae01,0x953b82b8,0x32344590,0x66667442,0x33a206cc,
    0x206ccccc,0x22060c68,0x6cccccce,0x06981a20,0x07bb37ee,0x3e601d80,
    0xb952c801,0x01660039,0x2a698095,0x09534c04,0x75422698,0xd812a01d,
    0x07604a81,0xb81d812a,0x44590772,0x80ee1646,0x6c07701d,0x8680d101,
    0x4407603b,0x2e00ec06,0x01d8000b,0x01640166,0x3a007600,0x03d07601,
    0xd807a0ec,0xf100b201,0x1e203e20,0x83c407c4,0x572c80f8,0x32344590,
    0x09500742,0x104a803a,0x00e8780d,0x2034412a,0x006cc059,0x007603c0,
    0xb3000164,0x360ba600,0x2d82e982,0x02d82e98,0x06640164,0x066407d1,
    0x066407d1,0x647207d1,0x916c2c82,0x43402cc5,0xd1068059,0x402cc780,
    0x3d00d106,0x000e62a0,0x002cc0b7,0x66440059,0x8800cdec,0x203edced,
    0x03edced8,0x0fb73b62,0x7e400720,0xfc803fdd,0xfc803fdd,0x88603fdd,
    0x9e441b80,0x0bfff91b,0x3f25fffd,0xfffe85ff,0x3fffffa2,0x3f27ffff,
    0xfffe85ff,0x300dffd2,0x80332a07,0x445fcccb,0x00cdeccc,0x03337b26,
    0x0aaaaaa0,0x40015100,0x2a2000a8,0x4c000000,0x04cc0009,0x00026600,
    0x00000000,0x00000000,0x00000000,0x02aaa600,0x01555554,0x00aaaaa2,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x20000000,0x1260001d,0x20c88000,0x00e60049,
    0x2a015000,0x0001d801,0x1d4001b1,0x00002e20,0x00498322,0xb9800000,
    0x01a8800a,0xb8800440,0x20c88000,0x03d30049,0x3e01d500,0x4c3b84ee,
    0x2003ea1f,0x007701ea,0x7db90688,0x4001e980,0x3ae003e8,0x33afaa00,
    0x006f41ea,0x807d43f3,0xcecdeec8,0xcccdd883,0xfcbeb80e,0xdb9db102,
    0x05977009,0xeacebea8,0x2a1f9801,0x05d1000f,0x0f006e40,0x000007c4,
    0x07c401d7,0x3e887700,0x2e880bb1,0x4005d300,0x6d40805c,0x00007702,
    0x494c5fd4,0x502e0360,0x7440f88b,0x92405c82,0x016d4080,0x0a200000,
    0x20780280,0x002a205c,0x009b0038,0x2a066074,0x98014400,0x2001c001,
    0x434400a8,0x19981998,0x412532f4,0x0e815038,0x9016c2c8,0x024c6c07,
    0x4004cccc,0x99999998,0x4ccc4099,0x40999999,0x99999998,0x7c41e099,
    0xedcee881,0x31013303,0x97007a83,0x33333310,0x99999881,0x13333009,
    0x33333100,0xb9dd1013,0x361a207d,0x3bb23eef,0x94c3f14e,0x2cc01604,
    0x101a63a8,0x02ee201d,0x0dfddd70,0xddddfdb0,0xfed87ddd,0x3eeeeeee,
    0x77777f6c,0x541e3eee,0x3d81e986,0x3a22f7e4,0x401743ef,0x7f774c0e,
    0xdd30eeee,0x81ddddfd,0x406feeeb,0xeeefeee9,0x3607a60e,0x03906883,
    0x298be1dc,0x01b99909,0x24da83a8,0x002c802b,0x00ed5c00,0x10770344,
    0x3441dc0d,0x4e83c770,0x307601e8,0x3603a20d,0x6402d405,0x40059002,
    0x32001dab,0x1d807a02,0x201c8344,0x2532ec3b,0x07b11cc4,0x999d5164,
    0x21dc00ec,0x00befeca,0x100951d0,0x3441dc0d,0x40d10770,0x21fc1e3b,
    0x6434c04a,0x0d702d83,0x02c801e8,0x47400590,0x40b2004a,0x2234c04a,
    0x1dc03906,0x8495576c,0x2c81da85,0x01d2543a,0x85644950,0x259806a8,
    0x26068806,0x06606881,0x1e1981a2,0x003b0be2,0x05a83a0b,0x005981ea,
    0x00b20059,0x6400d2cc,0x0b003b02,0x5c03907d,0x125b7303,0x90f20366,
    0x364a92a5,0x9003b801,0x0b22c805,0x400c8d10,0x22006468,0x88780646,
    0x6400741f,0x01d16981,0x01d807cc,0x0b200590,0x00591640,0x400740b2,
    0x3227d41c,0x5300ee01,0x541ec412,0x95344b24,0x01640164,0x263403a8,
    0x4ccf4405,0x4cf4400e,0x4f4400e9,0x10f00e99,0x5700785f,0x500b2f20,
    0xc801a60f,0x20059002,0x2c802cc6,0xd0ae00f0,0x1dc03903,0x2a024a60,
    0x6459241d,0x01a64cbd,0xfed981d1,0x12a03eef,0xccf8803a,0x67c400fc,
    0x7c400fcc,0x0f00fccc,0x9001d0fe,0x5c02f403,0x64005b06,0x50059002,
    0x59001d09,0x872003a0,0x5c039068,0x00494c03,0x25c95179,0x07b132e2,
    0x86faa1e4,0x2b3603b8,0x2203daaa,0x1a200746,0x7468801d,0xb1360f00,
    0x2c80b003,0x06885d80,0x2c801640,0xaaaacd80,0xb02c803d,0x0688b003,
    0x2015c039,0x75400929,0xd10034c1,0x01d0b907,0x667440ea,0x2206cccc,
    0x1a2060c6,0x0c688183,0xa8d50786,0x32034c04,0x2c81f802,0xc8016400,
    0x66674402,0x2c806ccc,0x46980950,0x6c095068,0x88494c01,0x007a0b00,
    0x3fddec88,0x40f20598,0x4407603b,0x03443406,0x4d01a21a,0x03d0be07,
    0x00b200ec,0x000d10d5,0x00b20059,0x200ec077,0xd807a02c,0x07883441,
    0x929801f1,0x54160350,0x37600985,0x3a207401,0x5401d03e,0x8780d104,
    0x3443c068,0x172079e0,0x005b05d3,0xb83e8059,0x002c8003,0x200e8059,
    0x3016404a,0xb105b05d,0x7d106640,0x9d9dccc0,0x2a666aa0,0x333ae01d,
    0xefe880ef,0x2a3dabce,0xfaaeecde,0x1a01661f,0x221e0344,0x03443c06,
    0x03e2079e,0x07db9db1,0x07980b20,0x0590001d,0x05980b20,0x20164068,
    0x03edced8,0xddfc8079,0x9555403f,0x2aaa22aa,0xaa8800aa,0x2266ea00,
    0x15102cb9,0x85fffc80,0x3fa2fffe,0xffffffff,0x7fffff47,0x7f47ffff,
    0xffffffff,0x2a13ffe7,0x70015102,0x83ffffff,0x3003982b,0xffffffff,
    0x3ffffe61,0xfff90fff,0x25fffd0b,0xfffffff9,0x4015100f,0x0266003d,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x10000000,0xc8824c19,
    0xb8801260,0x0006c000,0x254000d4,0x50003500,0x50001009,0x0006c003,
    0x06a004a8,0x1b000980,0x2a000000,0x00002604,0x9b100360,0x03ea1f98,
    0x00fa87e6,0xeacebea8,0x000f4c01,0x5c007db9,0x7db9000e,0x50075c00,
    0x32003979,0x3d3003ed,0x000eb800,0x64407db9,0x4c02edcd,0x59d1001e,
    0x0eb80993,0x351017e0,0x1e982cc1,0x0003fea0,0x54080000,0x05d1002d,
    0x0bb13e88,0xd1001b90,0x32017627,0x0122400d,0x017627d1,0xdc801744,
    0xb13e8800,0x3b107a0b,0x3002e880,0xdc805ffb,0xd882fc00,0x1e8cfdce,
    0x1a80ba20,0x4cccccc4,0x01333300,0x26601310,0x20144009,0x1400a819,
    0x01503300,0x5c298028,0x02a06601,0x02801440,0x002a0660,0x02880498,
    0x05b8e74c,0x885e801c,0x017ecc2e,0xdd300144,0x81ddddfd,0x406feeeb,
    0xeec86fea,0x0000004e,0x00000000,0x00912200,0x00000000,0xd1000000,
    0x3b800000,0xd84e8000,0x0007d902,0x40059000,0xec801dab,0x2f647704,
    0xbd91bb62,0x7646ed88,0x50376c45,0xa803bffb,0x9701dffd,0xeca80793,
    0x75c00bef,0x75c01def,0x75c01def,0x64001def,0x3bffb504,0xd2cdc980,
    0xbefeca81,0x06989d00,0xca81f3b5,0x3500befe,0x1d001640,0x1d590095,
    0x434c4770,0x434c4699,0x434c4699,0x17db0699,0x3b607f91,0x103fc88b,
    0x911e4c15,0x441aa215,0x07d712de,0x3ae25bd1,0x712de883,0xdda9807d,
    0xc88bed80,0x739fb03f,0x564459dd,0x0f60d510,0x3a1d3057,0x5442b222,
    0x16405906,0x201a5980,0x43b85aac,0x1a21a068,0x1a068868,0x5c1e816e,
    0xc9807a05,0x0b2000bd,0x207c40f6,0xd81f103d,0x2201f103,0x05b80ffd,
    0x2a09907a,0xb059004f,0x0f441c87,0x20b20079,0x400b203d,0x5900b22c,
    0x688770b6,0x681a21a0,0x3e1a0688,0x03f1ae01,0x2f72635c,0x98750000,
    0x0d325c06,0x701a64b8,0xf83d3009,0x0f99ae01,0x1d401b60,0x7b0361e4,
    0x075004a8,0x8016407b,0x4b202cc6,0x1a21dc68,0x1a068868,0x34c681a2,
    0x40699e20,0xb982f278,0xdffdb300,0xccceb87d,0x2e6ccccc,0xccccccce,
    0x3333ae6c,0x006ccccc,0x22034cd1,0x8f5016a7,0x3eeffed9,0x9716c2c8,
    0xfed98770,0x04d83eef,0x212a00b2,0x3c8b200e,0x340d10ee,0xd10d0344,
    0x20166340,0x1f00b30f,0x50b26f20,0x21dc437d,0xaaaaaadb,0x2ab6e2aa,
    0x22aaaaaa,0xaaaaaadb,0x472002aa,0x770f8059,0x2faa6880,0x5c00ee21,
    0xa8b20d35,0x20ee21be,0x200b204e,0x3daaaacd,0x2e1d0b20,0x10d03443,
    0x0344340d,0x2a00f88d,0x6a803e26,0x07448710,0x003cc3a8,0x0f3001e6,
    0xf12c8000,0x0b335401,0x5403a5a8,0x1d1f1003,0x80741d10,0x3205e83a,
    0x66674402,0x0b206ccc,0x41a0eeb5,0x1e60d079,0x3d879834,0x407b0f60,
    0x0c83503d,0x741e40b3,0x001f4003,0x440000fa,0x3d80f60f,0x265b00f4,
    0xd800f205,0x2cc7902f,0x40bf0790,0xb01dc02c,0x2760b203,0x7542c83b,
    0x7ea85907,0x87ea8590,0x1b260be8,0x6c982fa2,0x0e891220,0x7441f744,
    0x222dc40b,0x22dc40be,0x2dc40be8,0x43d985b9,0x1b260be8,0xd17607e6,
    0x4c3ee881,0x41cfd86e,0x7440e85c,0x3205f83e,0x95007402,0x2fa60b20,
    0xdfdde883,0x6f441fe8,0x41fe8dfd,0xe8dfdde8,0x76fec41f,0x37f6204f,
    0xbca804fe,0x766f541c,0x441ffaae,0x0cfecdfd,0xfecdfd88,0xcdfd880c,
    0x7f5c0cfe,0xfb103fed,0x74c09fdb,0xea83fdce,0xffaaeecd,0x6dc1ff51,
    0x03fddfd8,0x55dd9bd5,0x9004c3ff,0x3402cc05,0x07d902c8,0x066000cc,
    0x88003300,0x33100099,0x44008001,0x4cc4000a,0x01331000,0x20026620,
    0x33100198,0x00662001,0x026002a2,0x800cc41b,0xf98000a8,0x0fffffff,
    0xfd0bfff9,0x7fff45ff,0x0001fc43,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x51000000,
    0x22000003,0x10000019,0x26000035,0x00000000,0x00000000,0x00000006,
    0x01c80ff6,0x22000030,0x17b2009a,0x5c40ddb1,0x3baa0000,0x377aa00b,
    0x017f541e,0x0bb7be60,0x3bbbbbb2,0x7b9dd302,0x3bbbbbb2,0xdedeb87e,
    0x644f6cc2,0x9100bdfe,0x37aa9dfd,0x96ff6c40,0xee9803ed,0x00076643,
    0x17dffb30,0x40dff105,0x3b3201e9,0x33aa0000,0x9881ddba,0xd5079986,
    0x005d59d7,0x9835c32e,0x3203a20e,0xb10f4002,0x2e001c81,0x3c03901e,
    0x20e98366,0x51debd98,0x1df981db,0x98399db5,0xfbeb89cf,0x40ee0009,
    0x3b70000d,0xa982fe4c,0x20174400,0x07b0000d,0x81a20f62,0x02da8106,
    0xb03b03a0,0x05909705,0x23442540,0x80b5001c,0x03b12600,0x205f9077,
    0xfb81745b,0x0fd01e83,0x03607700,0x5c81a600,0x40388000,0x89c8000d,
    0x20e40999,0x0001a068,0x21d43440,0xc86880f8,0x6c076002,0x3a200720,
    0x88b20000,0x0d90d106,0x207987c4,0x703543f8,0x2077000f,0xb1e4400d,
    0x00014407,0x4c00d800,0x2ae2930e,0xd106c4a9,0xfeca8340,0x8d1000be,
    0xf034c1e8,0x3bfae590,0x43700e83,0x0ea0111c,0x03d0d000,0xc8079097,
    0x43c80772,0x441e203b,0x0773dfdb,0x43ea8036,0x0910000f,0x20177764,
    0xc87b200d,0x2a2982a0,0x88681a22,0x00d510ac,0x41fec5a2,0x5903a04a,
    0x83baa5bd,0x323f883c,0x641defed,0x598006a1,0x07aa1ea8,0x2e5b0132,
    0x12e1ec04,0x2de88798,0x36077bb5,0x780dd880,0x88166000,0x06c02c99,
    0x2a2c274c,0x223986e0,0x59001a06,0x754cd100,0x83b01dc4,0x4c9903fc,
    0x75266c0e,0x71d26cc3,0x7003bb9f,0x3ffbea05,0x2601f901,0x2201f30f,
    0xf903cc3f,0x0fee07b0,0x2a199d97,0x02e8533e,0x80176440,0x99d9702b,
    0x82a67b21,0x20f5dd45,0x3cc1e248,0x2200ea00,0x01dc9906,0x2207c83b,
    0x3af3ee0f,0x0f88049b,0x034c1b5d,0x56f44074,0x09f905da,0x3209b132,
    0xf883d83f,0x7f103c47,0x221bb100,0x2602dc6d,0xb8005d30,0x6cfaa002,
    0x0a8b1c9a,0x3e239875,0xd983f542,0x803eeffe,0x2543a068,0x404c81d0,
    0xa85dcc2d,0x3f25b003,0x16201d80,0x6425c0f4,0x4fc9cfda,0xfc9cfd88,
    0xbee883bc,0x25479fda,0x5d700f60,0x1ce868d8,0x00392ec4,0xbb100570,
    0x832b0661,0x22b86a0a,0x8cfddef8,0x86faa1fe,0x068803b8,0x7882ccb2,
    0x016403c8,0x73c800e4,0x3b812a07,0x90f10688,0x007372a5,0x0ee37b95,
    0x8f0bdca8,0x881e403b,0x869dc0ce,0x2ddcefc8,0x02b80034,0x4ea01f54,
    0x64179149,0x19b44589,0x07500e80,0x89dc0d10,0x0d90d506,0x07c401f8,
    0x20b51e80,0x2603603a,0x05903a04,0x003b8000,0x3e034c78,0x4b105703,
    0xc80ae206,0x015c0702,0x44a80191,0x220998ab,0x003441c8,0x401e40b3,
    0x6c1b1268,0x1fc83c82,0x45b00d50,0x7443e601,0x0d101d80,0x6424c074,
    0x1dc00002,0x07e16200,0x32001fd4,0x2a02fccd,0x883d100d,0x0005700e,
    0x209903c8,0x006882d8,0x0fba2074,0xd31c9a20,0x41a60e98,0x3ae22ecc,
    0xd70fa601,0x6cc2ea83,0x03a81aa0,0x81e9832a,0x5c00002c,0x4c174003,
    0x01e75c2e,0x98a81a00,0x373b6a03,0x000ae03e,0x36a00ec4,0x100ddcbd,
    0xcdea800d,0x01ffaaee,0x37a69ffd,0xeddfa81e,0x74d7fcc1,0x6e41efdf,
    0xdb301ded,0x3ae05fd9,0x07200eed,0x83bdbb50,0x00ccdec9,0x9bb99100,
    0x7fb99901,0x77eff4c0,0x4001ffb8,0x79502fc9,0xb0351001,0xffffffff,
    0x33376007,0x8004c06c,0x01510000,0x4c00c000,0x00544001,0x01980033,
    0x80000130,0x55551008,0xaaa80005,0x1355502a,0x0002a200,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x10024c00,0x85700135,
    0x800d401c,0x191000b8,0x4191024c,0x570ea049,0x2a203700,0xaaaa8001,
    0x0aaaaaaa,0x00001510,0x2a200100,0x83bdb100,0x0000deea,0xa98006a6,
    0x006a6000,0xd5001d50,0x403bb759,0xd901f45d,0xebea807d,0x3f301eac,
    0x1f9807d4,0x236403ea,0xa82c804e,0x22005aad,0xdd10a001,0x06807db9,
    0x2017ed40,0x81decfd8,0x7cc409ea,0x2e276c01,0x103edcde,0xd1dfb9db,
    0x3fb37b20,0x0075c06b,0x03d881ec,0x364d8800,0x05b50205,0x00000000,
    0xb802c800,0x40031002,0x0f607a62,0x59f30078,0x4c3e8059,0x9501d80e,
    0x7c4ad980,0x16c16c40,0x426c3f54,0x801c07e8,0x3908d41c,0xa8288000,
    0x00000000,0x20000000,0xb5100cd8,0x80062001,0x01d807a2,0x80b2000f,
    0xb307704a,0x53d003a0,0xd8b30489,0x0991ea03,0x4c0003c4,0x92e62ea4,
    0x77f6540d,0x2a00000b,0x5c01dffd,0x5401defe,0xec81dffd,0x44376c45,
    0x45edbcec,0x3b100cda,0x95280062,0x3b626980,0x02eeeeef,0x40130164,
    0x04a83d06,0x2004aa54,0xd1201a26,0x77640100,0x4241902e,0x0ac88aa2,
    0x3bb20d51,0x45f6c02e,0xde883fc8,0x3607d712,0x43fc88be,0x86998698,
    0x9505b83b,0x00c45d70,0x16007650,0x33333f33,0x0002c801,0x1d1660d1,
    0x04a87440,0x001d4d10,0x31000126,0x29960593,0x2c801cc0,0x202c9988,
    0x7b07a05b,0x0b703e20,0x681a20f4,0x1d406068,0x01881bb1,0x640074a0,
    0x59000781,0xe80b6000,0x23c80b51,0x21ea804a,0x015c002b,0x96057000,
    0x8024401a,0xf015c03a,0x0d335c03,0x700fc4b8,0x51a0688d,0x997b9009,
    0x2219975c,0x803ca001,0x9000782b,0x80990005,0x34403d59,0x0cea812a,
    0x0b200164,0xb02b8000,0x30e601cc,0x07ddffdb,0x80d302b8,0x3333ae78,
    0x266ccccc,0x1a23c406,0x3002c468,0x4bb3274c,0x074a0018,0x003c0e40,
    0x264002c8,0x6c05be80,0x05902542,0x057000ae,0x00bdddd9,0x44832057,
    0xbea8ae28,0x5700ee21,0x43e01660,0xaaaaaadb,0x201662aa,0x8681a20f,
    0x0f64001d,0x00189636,0x82c00eca,0x00590007,0x3f30026c,0x02542cc0,
    0x0012a037,0xf3331095,0x26057001,0x436ef624,0x3a807458,0x0f8815c0,
    0x00799aa0,0x8d5007c4,0x3aa1a068,0xe989910b,0x0c4b2b84,0x3012a500,
    0x64001e0d,0x8009b002,0x77764059,0x8005feee,0x03440068,0x202b803c,
    0x8720442b,0x700f2059,0x7b01ec05,0x1ec003e8,0x260d07b0,0x5bdf9107,
    0x2cb30390,0x3d140031,0x00680ec0,0x09b00590,0x20003b00,0x12e0004a,
    0x201ec1b0,0xc8057007,0x1d05b104,0x5c03ee88,0x982fa202,0x40be886c,
    0x05f445b8,0x50b20d93,0x002c80fd,0x11eccdd8,0x5d314003,0x415c05b0,
    0x880b2039,0x0598003e,0x7dc12a00,0x1037600e,0x103e887d,0x200ae00f,
    0x0ddcbdda,0x5dd9bd50,0x0ae03ff5,0x9fdbfb10,0x766fec40,0xdfd880cf,
    0x37a204fe,0x01fe8dfd,0x4b000059,0xb10a0018,0x8807db9d,0x02eedced,
    0x202e80b2,0x37b33225,0x04a8000c,0xfb805ff9,0x3201eecd,0x02eeccdf,
    0xfffffffb,0x0009807f,0xffb002a2,0x07ffffff,0x44002662,0x33100099,
    0x00066001,0x64c00037,0x5555711e,0x05555555,0x510002a2,0x3fffe603,
    0xff10ffff,0x8fffffff,0x002aaaaa,0xa837ffe4,0x002a6001,0x00009a88,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x4ccccc00,0x13000009,0x98807200,0x00199819,
    0x35000000,0x4404cc40,0x9804c419,0x26662099,0x40999999,0x40099998,
    0x99880999,0x4ccccc41,0x33331000,0x22033333,0x9998800b,0x10999999,
    0x91024c19,0x8001fb27,0xeeeeeeeb,0x80bfbb61,0xdbeddec8,0x7ec05f00,
    0x3bbb23ee,0xdffd9304,0x8002f6c3,0xc80eecea,0x77f445ef,0xd90dfd53,
    0x77f6c9dd,0x23eeeeee,0xeeeeefe8,0x2f77640c,0xd8bbfba2,0xadeeeefe,
    0xfdfdd100,0xa81fdddd,0x42eacebe,0xeeeefee8,0x43f35eee,0x7ffb00fa,
    0x9500003c,0x1e405900,0x01e807e4,0x207700e4,0x2c4042e8,0x12a0e800,
    0x80e8834c,0x107704ec,0x0741dc0d,0x0b303ae2,0x221a20d0,0x345d404c,
    0x5b502074,0x0b102540,0xf17fdc00,0x02540000,0x10688164,0x0e40001f,
    0x00ee0770,0x24c002c4,0x0b60f200,0x1dc07564,0xd0770344,0x03a16a01,
    0x40d104a8,0x1a27200e,0x2a00003a,0x00016204,0x00007813,0x40b2012a,
    0x0000a049,0xd81dc039,0x000b1001,0x41d00093,0x16ab205a,0x981a20ee,
    0x07600e81,0x880ec077,0x1680b206,0xbaeccb0d,0x12a02dfe,0x3bbb2388,
    0xed8f0002,0x0254005e,0x001b0164,0x9007bbb2,0xdb11dc03,0x01bddddf,
    0x0bbfb2b1,0x59800688,0xd96401d1,0x23441dc2,0x5007400c,0x0d106889,
    0x00e88344,0x40c5a2b3,0xd30cde98,0x40b12a05,0x0002c998,0x0019eb8f,
    0x01640254,0x440157b3,0x0e402c99,0xad998770,0xdd101999,0x310ba617,
    0x400333d3,0x96402dbc,0x7441dc68,0x7400e999,0x07216200,0x99e880ee,
    0x2e02eca9,0x20973d13,0x506983f8,0x200f333b,0x2155402b,0x40003ae7,
    0x802c804a,0x6404eeb8,0x7700e402,0x7c400760,0x66545982,0xaa804cde,
    0x902aaefb,0x10771e45,0x801f999f,0x2616200e,0x3e200e85,0x02fedccc,
    0x26e7c476,0x541e0688,0x7007ccce,0x21ffcc05,0x40900b97,0x002c804a,
    0x05900eb8,0x40ee01c8,0x40b1001d,0x9800ee07,0x0099bd99,0x0770e859,
    0x7400e8d1,0x07416600,0x206880b3,0xd755f04c,0xd03440e6,0x200f12a0,
    0x21bee02b,0x34400fdf,0x05900950,0x1640ae00,0x02b80720,0x8162003b,
    0x4000ae07,0x542c802c,0x18d10775,0x7700740c,0x402c8ee0,0x26074068,
    0x8806ccce,0x22541a06,0x74057001,0x0eaaf81f,0x02b81a20,0xa80902c8,
    0x4a805904,0x00ec0760,0xc81e0588,0x3fbb6001,0x05903eee,0x0d10773b,
    0x3600e868,0x01a2d101,0xc85901a2,0x88a61a22,0x02541a06,0x9f102b80,
    0x100ea9e0,0x2c802c0d,0x80ec07f0,0x883c402c,0x2003b00f,0x3441e058,
    0x802c8070,0x83be982c,0x0743c068,0x54ec04c8,0x74068804,0x50d10740,
    0x20d03449,0x0570004a,0x2a3c03ea,0x77037605,0x7fc0b200,0x5902dc41,
    0x74419900,0x44007603,0x81e41e05,0x40164059,0x107d902c,0x40e8780d,
    0xeca805c9,0xb1068800,0x43446889,0x0681a24a,0x0ae00095,0xb70f00c4,
    0x1ee6fd40,0x23605900,0x00dfddfe,0x6fe400b2,0x00ec03fd,0x3a1e0588,
    0xefffffff,0xfffff881,0x87fffd06,0x7fff43f8,0x27ffffff,0xdffffff8,
    0x201be002,0xfffffffe,0xdaffe43d,0x4fffffff,0x7c45fff9,0xffff11ff,
    0x3ff603ff,0x03ffffff,0x3fe23fe4,0x2006606f,0xfffffffd,0x8099883f,
    0xfffffffd,0x804cc03f,0xfffffffa,0x21fffc86,0x0003fffb,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x20662000,
    0x22000099,0x40999999,0x44019999,0x0cc40999,0x4c400d40,0x99800999,
    0x4c199999,0x44198809,0x41988099,0x99880999,0x31004cc0,0x09999981,
    0x01333300,0x99999988,0x26621999,0x4cc40199,0x08000999,0xd3030000,
    0x77f647df,0x43dfea80,0xeeefeee9,0xdddfdb0e,0x777f6c07,0x807ffd30,
    0xeefd802c,0xf880deee,0x27eeeeee,0x7f445efc,0x117bf23e,0x3bea7ffd,
    0x3fba60ee,0x409fd50e,0xfdd51efd,0xdd700ddd,0xeea80dfd,0xfeeeefee,
    0xddddfdb0,0xddfdb039,0x640039dd,0x13a60002,0x260f0344,0x2c80150e,
    0xd1001a20,0x32003aa0,0xd5059002,0x8b505883,0x501d1069,0x5703a20b,
    0xec983900,0xb01dd980,0x36ae0003,0x8590ea01,0x3661a20d,0x3d986883,
    0x10005900,0x034403db,0x9000b20f,0x55574405,0x2dc34401,0x32005900,
    0x8588d102,0xd83c80e8,0x0b60f202,0x0d8110ea,0x5641de4c,0x0003b01d,
    0x3a812a3a,0x68836164,0x40d10d10,0x40059006,0x68802ec8,0x0025c1e0,
    0xccf880b2,0x6880bedc,0x0b200264,0x47701640,0x3a02d858,0x87a016a0,
    0x7c49304c,0x46a4c345,0x07603b68,0x20696600,0x8361643a,0xd10b2068,
    0x16401640,0x2003eb80,0x3441e068,0x6880b200,0x6cd10970,0x66664404,
    0x903cccde,0x7022c405,0x1d169809,0x0d51d100,0x41d952cc,0x5c594986,
    0x007603b3,0x302c8b20,0x221c2c85,0x0d107606,0x01640074,0x100033aa,
    0xf333333d,0xc800fa20,0x0e81a202,0x40374744,0xacdaaaa8,0x5ecc42aa,
    0x26068199,0x05979006,0x10077540,0x6896564d,0x874d1498,0x0003b01d,
    0x3200598d,0x6a834402,0x83e98688,0xfffffff9,0x00bee7ff,0x66667c40,
    0xeae987cc,0x0b203d10,0x10ae0688,0x003d95dd,0x766402c8,0x03c0cccd,
    0x02f4003d,0xd3c02740,0x26166951,0x1d92a764,0x4a8003b0,0x059000e8,
    0xdbaaae88,0xeeef880e,0x0b2000df,0x80019d30,0x4761e068,0x16407759,
    0x20ec0d10,0x003aa1f8,0x059002c8,0x80079068,0x6de4002c,0x5a68b402,
    0x36649849,0x0ec0761d,0xaacd8088,0x59003daa,0xbcccf880,0x2667a202,
    0x0b2000ec,0x1001f540,0x36343c0d,0x80b200ea,0xd10bb068,0x16400b50,
    0x16602c80,0xc80aa16a,0x7456a002,0xd8ee3600,0x744983a8,0x01d80ec5,
    0xccce8877,0x59006ccc,0x44006880,0x9000ea86,0x02eb8005,0x3a1e0688,
    0x59013e20,0x6e667c40,0x360d103f,0x20059001,0xd10f202c,0x16407701,
    0x3a60e880,0x5c3b3900,0x804982bb,0x2e03b01d,0x03b01dc3,0x06880590,
    0x04b83440,0x91000590,0xf034405d,0x027cc970,0xaae880b2,0x41a2009a,
    0x00350059,0x6c2d40b2,0x16407702,0x05b81e80,0x1cd98d57,0x01d80498,
    0x1d0ee03b,0x16402540,0xd1001a20,0x164016c0,0x20bb3000,0x3221e068,
    0x01fd9ede,0x00344059,0x000e81a2,0x2e616400,0x77025c0e,0x1ec01640,
    0x0bb507b0,0x009301bd,0x5c07603b,0x01a01663,0x00d100b2,0x01a20688,
    0x40400002,0x3f23fffc,0x201883ff,0xfffffff9,0xfffffd0f,0x7ffff407,
    0xf987fdc0,0xffffffff,0xfffffe87,0xfffc80bd,0x5c3fffff,0x81ffffff,
    0x7fcc6fff,0x6417cc5f,0x86fffb87,0xff53fffe,0xffffffff,0x217fff27,
    0x7dc2fffe,0x741fffff,0x203fffff,0xc80ffffe,0x0000002f,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x0000000c,0x00000000,0x20000000,0x3b200019,0x00376c45,
    0x36200000,0x5eea81de,0x79101e40,0x44022004,0x44000b84,0x3aa1deed,
    0x37b625ee,0xb317baa1,0x21f6d49d,0xeb8001ec,0x03dd70df,0x02fbfb2a,
    0x39befdb8,0x17dffb30,0x37bfae05,0x5f7ed401,0xfda80e98,0x869881df,
    0xbaecc699,0xbeb82dfe,0x3bf92ed9,0x31013b50,0x203d803f,0x26b53ffd,
    0x881e88bb,0x5882ec3e,0x3106f260,0x0afa837b,0x53107ae2,0x3b13bb1b,
    0x3000de98,0x236faa17,0x856441e9,0x239706a8,0x1db87da8,0xbd117f26,
    0x6c0fae25,0x1fea88be,0xfc88bed8,0x11a06883,0x3a619bd3,0x446fdc42,
    0x1a0b34de,0x0002c411,0xdf717fdc,0xd303ff77,0xb1036c49,0x0d106980,
    0x01d3074c,0x50017744,0xfb00019d,0x59002d41,0x98d10688,0x07b17206,
    0x309903e2,0x205b87bd,0x0d03441e,0x50d307f1,0x40745c8d,0x04a97a0d,
    0x5a813000,0x127cc0e8,0x962081dd,0x3b81d808,0x074c74c0,0x40007e20,
    0x2e4003eb,0x83a8007c,0x03d8103e,0x5c0698a2,0x3d103e24,0x2e01f8f3,
    0x10d03446,0x22543c0d,0x96406c2b,0x00590ed9,0x5c0ec000,0xee897ea3,
    0xbebcfc80,0xe85a82ed,0x00ee9800,0x44000588,0xfdb882ec,0xeccccdee,
    0x77ff6cc1,0xcefd883e,0x2000f80a,0xcccccceb,0xd116a6cc,0x40698f43,
    0x0d034478,0x254340d1,0x9501b0ae,0x206cb2b2,0xfffffff9,0x80e806ff,
    0xfa8ff24a,0x0e7f5405,0x005a83a0,0xb1003dd5,0x93ea0000,0x5b911bea,
    0x75415555,0x100ee21b,0x00787d95,0x555556dc,0x892a2aaa,0x0598ec1e,
    0x681a20f8,0x2a1a0688,0x203615c4,0x03566d58,0x20ee0000,0xf31fdc1d,
    0x0267440b,0x5003b25c,0x8803d31d,0x76440005,0x02e40ec2,0x043a8074,
    0x01741f10,0x79800f30,0x10f983d1,0x3435401f,0x20688798,0x215c4a86,
    0x74b3d00d,0x91000059,0xc88bf987,0x262fa80f,0x0b65b04f,0x540345a0,
    0x8807a20e,0x0bae0005,0x007ec164,0x321e40b3,0x05b87202,0x8007d04c,
    0x45c82ebe,0x320f603d,0x3443f542,0x2b8950d0,0x22ed806c,0xb00003eb,
    0x32ba27ff,0xf505bbee,0x92a1f443,0x2cbc8068,0x1e882dc0,0xd5000b10,
    0x7e469807,0x0e87a64f,0x3b21f744,0x1ce86a80,0x2fa22ec4,0x3ea2dc40,
    0x220764c4,0x41b260be,0xe8dfdde8,0x8681a21f,0x03615c4a,0x007e63dc,
    0x5ff70274,0x301b806e,0x0400e88b,0x36037c40,0x3fee1fff,0x3ffffa3f,
    0x9d302fff,0x3b3aa001,0x1ededabc,0x57766f54,0xb9791ffa,0x9103dfb9,
    0x205bb9df,0xcfecdfd8,0x37b2fa20,0xfb100cfe,0x33009fdb,0x22fffc80,
    0xff91fff8,0x5fb27dcd,0x0b200000,0x00000130,0x00000000,0x6c000000,
    0x0150001d,0x00a88033,0x4400ccc0,0x26620019,0x09985900,0x00133100,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00080000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x440710aa,0x6eeeeeee,0x81101a88,0x00260601,0x00002aa8,
    0x0fba2bdb,0xcba81771,0x4400400a,0xdb8100bb,0xdddddddd,0x2200442d,
    0x540f223c,0x41910364,0x22222249,0x33208888,0xcccccccc,0xfff12ccc,
    0xffffffff,0x00000dff,0x413617c4,0xd99999e8,0x72d56d44,0xd84c83d9,
    0xb92eb263,0x93fe61ff,0xfffffffc,0x3fa0ffff,0xcfa93fe5,0x735710fd,
    0x3203d80b,0x1a82daad,0x26666662,0x3b209999,0xffc8c43e,0xeb87ff92,
    0x1f987a60,0x7fff43ea,0x264fffff,0x99999999,0x00009999,0x4c000000,
    0x2217a23f,0x2b805b85,0x7b26c0dc,0xffa8dc38,0x0003fee0,0x749fb06c,
    0x84c8ba3f,0x372e0689,0xa8684982,0x9320000c,0x3ee3d34d,0x643ff72f,
    0x002e880d,0x26666662,0x00000099,0x00000000,0x37a24f98,0x10075400,
    0xb01b81b5,0x21b007b9,0x01fec7f9,0x1fe41b00,0xa83e23fb,0x0f99db36,
    0x3207456a,0x262a1c81,0x55555532,0x20615555,0x20cc2eeb,0x0a201409,
    0x00000000,0x00000000,0xf327d400,0x003a601d,0x01b819b5,0x43b00df1,
    0x01fe26f8,0x17d41b00,0x7b1ec1f9,0x1d10b036,0x1a12634c,0x332a1795,
    0xcccccccc,0x00000001,0x00000000,0x00000000,0x3be60000,0x3a207fa0,
    0x370ea000,0x44136f60,0x3ea5f81d,0x306c0003,0x3a63dc3f,0x715b0efe,
    0xb81e83fd,0x1e4c5ec5,0x00000000,0x00000000,0x00000000,0x80000000,
    0x07f60ee8,0x750007a2,0x363d81b8,0x4e806cc4,0x360001b2,0x1a80c0c0,
    0x65c5edc4,0x205c0530,0x00001cda,0x00000000,0x00000000,0x00000000,
    0x8bd10000,0x705d00ec,0x5265ee41,0x0f639bd9,0x6667c4f6,0x00886a3d,
    0x00000800,0x00000000,0x00000000,0x00000000,0x00000000,0x40000000,
    0xd807645d,0x00303903,0x00002008,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x500d8897,0xffffffff,0x00000003,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,
};

static signed short stb__courier_26_latin1_x[224]={ 0,5,2,2,2,2,2,5,6,3,0,1,3,2,
5,2,2,2,1,2,2,2,3,2,2,3,5,3,0,1,0,0,2,0,0,1,1,0,1,1,1,2,1,0,
1,0,0,0,2,1,0,2,1,0,0,0,0,1,2,0,0,0,2,0,4,1,0,1,1,1,2,1,0,2,
2,2,2,0,1,1,0,1,1,2,1,1,0,0,1,1,2,0,6,0,2,2,2,2,2,2,2,2,2,2,
2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,5,2,1,2,1,
6,1,3,0,0,0,0,2,0,-1,3,1,3,3,4,1,1,5,4,4,3,1,0,0,0,0,0,0,0,0,
0,0,0,1,0,0,0,0,2,2,2,2,-1,0,0,0,0,0,0,3,0,0,0,0,0,1,2,0,1,1,
1,1,1,1,0,1,1,1,1,1,2,2,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,
 };
static signed short stb__courier_26_latin1_y[224]={ 19,4,5,3,3,4,6,4,4,4,4,6,15,11,
16,3,4,4,4,4,4,4,4,4,4,4,9,9,6,10,6,5,4,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,4,3,4,4,24,4,8,4,8,4,8,4,8,4,4,
4,4,4,8,8,8,8,8,9,8,5,9,9,9,9,9,9,4,4,4,10,4,4,4,4,4,4,4,4,4,
4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,19,9,4,5,7,5,
4,4,5,5,4,9,11,11,5,3,2,5,4,4,4,9,4,10,18,4,4,9,4,4,4,9,1,1,1,2,
2,1,5,5,1,1,1,2,1,1,1,2,5,2,1,1,1,2,2,8,4,1,1,1,2,1,5,4,4,4,
4,5,5,3,8,8,4,4,4,5,4,4,4,5,4,5,4,4,4,5,5,7,8,4,4,4,5,4,4,5,
 };
static unsigned short stb__courier_26_latin1_w[224]={ 0,4,9,10,10,10,10,4,5,5,9,12,6,10,
4,10,10,10,11,10,10,10,9,10,10,9,4,6,12,12,12,9,10,14,13,12,12,13,12,12,12,10,13,14,
12,14,13,12,11,12,14,10,12,13,14,14,13,12,10,4,9,4,10,15,5,12,13,12,13,12,11,12,13,10,
8,12,10,14,12,12,13,13,12,10,12,12,14,14,12,13,10,5,2,5,10,13,13,13,13,13,13,13,13,13,
13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,0,4,9,12,10,12,
2,12,8,14,8,12,13,10,14,16,7,12,7,7,5,12,11,4,5,6,8,12,14,14,14,9,14,14,14,14,
14,14,14,12,13,13,13,13,10,10,10,10,14,13,12,12,12,12,12,8,13,13,13,13,13,12,11,12,12,12,
12,12,12,12,14,12,12,12,12,12,10,10,10,10,11,12,12,12,12,12,12,12,12,12,12,12,12,13,13,13,
 };
static unsigned short stb__courier_26_latin1_h[224]={ 0,16,7,18,19,16,14,8,18,18,10,13,8,3,
4,18,16,15,15,16,15,16,16,16,16,16,11,13,13,5,13,15,17,14,14,15,14,14,14,15,14,14,15,14,
14,14,14,15,14,17,14,15,14,15,14,14,14,14,14,18,18,18,7,2,4,12,16,12,16,12,15,16,15,15,
20,15,15,11,11,12,16,16,10,12,15,11,10,11,10,15,10,18,18,18,5,15,15,15,15,15,15,15,15,15,
15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,0,15,15,14,10,14,
18,17,3,15,7,10,8,3,15,1,7,14,9,9,4,15,17,4,5,9,7,10,15,15,15,15,18,18,18,17,
17,18,14,18,18,18,18,17,18,18,18,17,14,17,19,19,19,18,18,9,16,19,19,19,18,18,14,16,16,16,
16,15,15,17,12,15,16,16,16,15,15,15,15,14,16,14,16,16,16,15,15,11,12,16,16,16,15,20,20,19,
 };
static unsigned short stb__courier_26_latin1_s[224]={ 254,218,96,144,91,106,14,70,34,66,203,
227,75,204,178,72,14,168,179,169,205,49,60,70,81,39,174,249,240,149,1,
216,189,172,183,226,155,141,225,239,1,25,14,48,159,144,127,142,200,200,212,
39,187,61,168,129,115,102,91,29,231,226,123,215,189,29,25,53,133,66,75,
120,87,50,1,1,28,131,118,92,92,106,241,42,155,105,213,146,228,191,27,
158,164,144,162,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,
128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,254,250,103,
101,179,114,155,176,195,12,114,190,82,204,211,231,106,63,62,38,183,226,164,
173,143,46,134,14,147,196,113,175,167,105,182,226,12,211,197,241,1,15,197,
241,94,120,83,1,76,27,52,65,78,131,40,53,223,102,130,116,150,53,36,
1,237,205,117,239,27,213,14,162,130,143,156,64,185,1,40,238,193,212,180,
93,80,51,77,161,79,41,67,54,90,10,24,38, };
static unsigned short stb__courier_26_latin1_t[224]={ 1,41,136,1,1,41,108,136,22,22,123,
108,136,136,136,22,59,76,76,41,76,59,59,59,59,59,123,92,108,136,123,
76,22,108,92,76,92,92,92,76,108,108,92,108,108,108,92,76,108,22,108,
92,108,92,92,108,108,108,108,22,1,1,136,136,136,123,59,123,59,123,92,
59,92,92,1,92,92,123,123,123,59,59,123,123,76,123,123,123,123,76,136,
1,1,22,136,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,
76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,1,41,76,
92,123,92,1,22,136,76,136,123,136,136,59,136,136,108,136,136,136,59,22,
136,136,136,136,136,59,59,76,59,1,22,1,22,41,1,92,1,22,22,1,
22,22,22,22,41,108,41,1,1,1,22,22,136,41,1,1,1,22,22,108,
59,41,41,41,59,76,22,123,59,41,41,41,76,59,76,76,92,41,92,41,
41,41,76,76,123,123,41,41,41,76,1,1,1, };
static unsigned short stb__courier_26_latin1_a[224]={ 220,220,220,220,220,220,220,220,
220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,
220,220,220,220,220,220,220,220, };

// Call this function with
//    font: NULL or array length
//    data: NULL or specified size
//    height: STB_FONT_courier_26_latin1_BITMAP_HEIGHT or STB_FONT_courier_26_latin1_BITMAP_HEIGHT_POW2
//    return value: spacing between lines
static void stb_font_courier_26_latin1(stb_fontchar font[STB_FONT_courier_26_latin1_NUM_CHARS],
                unsigned char data[STB_FONT_courier_26_latin1_BITMAP_HEIGHT][STB_FONT_courier_26_latin1_BITMAP_WIDTH],
                int height)
{
    int i,j;
    if (data != 0) {
        unsigned int *bits = stb__courier_26_latin1_pixels;
        unsigned int bitpack = *bits++, numbits = 32;
        for (i=0; i < STB_FONT_courier_26_latin1_BITMAP_WIDTH*height; ++i)
            data[0][i] = 0;  // zero entire bitmap
        for (j=1; j < STB_FONT_courier_26_latin1_BITMAP_HEIGHT-1; ++j) {
            for (i=1; i < STB_FONT_courier_26_latin1_BITMAP_WIDTH-1; ++i) {
                unsigned int value;
                if (numbits==0) bitpack = *bits++, numbits=32;
                value = bitpack & 1;
                bitpack >>= 1, --numbits;
                if (value) {
                    if (numbits < 3) bitpack = *bits++, numbits = 32;
                    data[j][i] = (bitpack & 7) * 0x20 + 0x1f;
                    bitpack >>= 3, numbits -= 3;
                } else {
                    data[j][i] = 0;
                }
            }
        }
    }

    // build font description
    if (font != 0) {
        float recip_width = 1.0f / STB_FONT_courier_26_latin1_BITMAP_WIDTH;
        float recip_height = 1.0f / height;
        for (i=0; i < STB_FONT_courier_26_latin1_NUM_CHARS; ++i) {
            // pad characters so they bilerp from empty space around each character
            font[i].s0 = (stb__courier_26_latin1_s[i]) * recip_width;
            font[i].t0 = (stb__courier_26_latin1_t[i]) * recip_height;
            font[i].s1 = (stb__courier_26_latin1_s[i] + stb__courier_26_latin1_w[i]) * recip_width;
            font[i].t1 = (stb__courier_26_latin1_t[i] + stb__courier_26_latin1_h[i]) * recip_height;
            font[i].x0 = stb__courier_26_latin1_x[i];
            font[i].y0 = stb__courier_26_latin1_y[i];
            font[i].x1 = stb__courier_26_latin1_x[i] + stb__courier_26_latin1_w[i];
            font[i].y1 = stb__courier_26_latin1_y[i] + stb__courier_26_latin1_h[i];
            font[i].advance_int = (stb__courier_26_latin1_a[i]+8)>>4;
            font[i].s0f = (stb__courier_26_latin1_s[i] - 0.5f) * recip_width;
            font[i].t0f = (stb__courier_26_latin1_t[i] - 0.5f) * recip_height;
            font[i].s1f = (stb__courier_26_latin1_s[i] + stb__courier_26_latin1_w[i] + 0.5f) * recip_width;
            font[i].t1f = (stb__courier_26_latin1_t[i] + stb__courier_26_latin1_h[i] + 0.5f) * recip_height;
            font[i].x0f = stb__courier_26_latin1_x[i] - 0.5f;
            font[i].y0f = stb__courier_26_latin1_y[i] - 0.5f;
            font[i].x1f = stb__courier_26_latin1_x[i] + stb__courier_26_latin1_w[i] + 0.5f;
            font[i].y1f = stb__courier_26_latin1_y[i] + stb__courier_26_latin1_h[i] + 0.5f;
            font[i].advance = stb__courier_26_latin1_a[i]/16.0f;
        }
    }
}

#ifndef STB_SOMEFONT_CREATE
#define STB_SOMEFONT_CREATE              stb_font_courier_26_latin1
#define STB_SOMEFONT_BITMAP_WIDTH        STB_FONT_courier_26_latin1_BITMAP_WIDTH
#define STB_SOMEFONT_BITMAP_HEIGHT       STB_FONT_courier_26_latin1_BITMAP_HEIGHT
#define STB_SOMEFONT_BITMAP_HEIGHT_POW2  STB_FONT_courier_26_latin1_BITMAP_HEIGHT_POW2
#define STB_SOMEFONT_FIRST_CHAR          STB_FONT_courier_26_latin1_FIRST_CHAR
#define STB_SOMEFONT_NUM_CHARS           STB_FONT_courier_26_latin1_NUM_CHARS
#define STB_SOMEFONT_LINE_SPACING        STB_FONT_courier_26_latin1_LINE_SPACING
#endif

