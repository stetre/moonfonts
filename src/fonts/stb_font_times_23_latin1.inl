// Font generated by stb_font_inl_generator.c (4/1 bpp)
//
// Following instructions show how to use the only included font, whatever it is, in
// a generic way so you can replace it with any other font by changing the include.
// To use multiple fonts, replace STB_SOMEFONT_* below with STB_FONT_times_23_latin1_*,
// and separately install each font. Note that the CREATE function call has a
// totally different name; it's just 'stb_font_times_23_latin1'.
//
/* // Example usage:

static stb_fontchar fontdata[STB_SOMEFONT_NUM_CHARS];

static void init(void)
{
    // optionally replace both STB_SOMEFONT_BITMAP_HEIGHT with STB_SOMEFONT_BITMAP_HEIGHT_POW2
    static unsigned char fontpixels[STB_SOMEFONT_BITMAP_HEIGHT][STB_SOMEFONT_BITMAP_WIDTH];
    STB_SOMEFONT_CREATE(fontdata, fontpixels, STB_SOMEFONT_BITMAP_HEIGHT);
    ... create texture ...
    // for best results rendering 1:1 pixels texels, use nearest-neighbor sampling
    // if allowed to scale up, use bilerp
}

// This function positions characters on integer coordinates, and assumes 1:1 texels to pixels
// Appropriate if nearest-neighbor sampling is used
static void draw_string_integer(int x, int y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0, cd->t0); glVertex2i(x + cd->x0, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t0); glVertex2i(x + cd->x1, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t1); glVertex2i(x + cd->x1, y + cd->y1);
        glTexCoord2f(cd->s0, cd->t1); glVertex2i(x + cd->x0, y + cd->y1);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance_int;
    }
    glEnd();
}

// This function positions characters on float coordinates, and doesn't require 1:1 texels to pixels
// Appropriate if bilinear filtering is used
static void draw_string_float(float x, float y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0f, cd->t0f); glVertex2f(x + cd->x0f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t0f); glVertex2f(x + cd->x1f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t1f); glVertex2f(x + cd->x1f, y + cd->y1f);
        glTexCoord2f(cd->s0f, cd->t1f); glVertex2f(x + cd->x0f, y + cd->y1f);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance;
    }
    glEnd();
}
*/

#ifndef STB_FONTCHAR__TYPEDEF
#define STB_FONTCHAR__TYPEDEF
typedef struct
{
    // coordinates if using integer positioning
    float s0,t0,s1,t1;
    signed short x0,y0,x1,y1;
    int   advance_int;
    // coordinates if using floating positioning
    float s0f,t0f,s1f,t1f;
    float x0f,y0f,x1f,y1f;
    float advance;
} stb_fontchar;
#endif

#define STB_FONT_times_23_latin1_BITMAP_WIDTH         256
#define STB_FONT_times_23_latin1_BITMAP_HEIGHT        148
#define STB_FONT_times_23_latin1_BITMAP_HEIGHT_POW2   256

#define STB_FONT_times_23_latin1_FIRST_CHAR            32
#define STB_FONT_times_23_latin1_NUM_CHARS            224

#define STB_FONT_times_23_latin1_LINE_SPACING          15

static unsigned int stb__times_23_latin1_pixels[]={
    0x0004c040,0x22000200,0x4c400009,0x00988000,0x80003300,0x80000098,
    0x0c400008,0x51000000,0x00330003,0x02600621,0xdcddca80,0x0010601c,
    0x3fae0c88,0x80ef8001,0x3e6000b8,0x07ec0004,0x002ff400,0x20000fd8,
    0x3be600fd,0xfddd30ee,0x530054c3,0x981d4175,0x001deedc,0x5ccde5d4,
    0x40ff002b,0xf500ea2a,0xffe8803f,0x7d40193f,0x26001fb4,0x8003f905,
    0x036200fa,0x20007a80,0xcb8001f8,0x7d0002e9,0x007e2000,0x1f9803f3,
    0x2dcb02cc,0xa83d7075,0x02e8803f,0x81540154,0x3a01d43b,0x7fec06c9,
    0x440193ff,0x2200b72d,0x003f700e,0x059801c8,0xa8000dc0,0x22388002,
    0x00910004,0x3e600aa0,0x7c0fcc01,0xa9ae5981,0xfb80fe43,0x4007e604,
    0x07a0002a,0x550d4075,0x9fffffc0,0x9000000c,0x000fdc0b,0x002d8002,
    0x00080004,0x08000010,0x26001000,0x20fcc01f,0x01f983f8,0x202fcc75,
    0x02f881fe,0x4c0005c0,0x0101d42f,0x7ffffc01,0x6ecc0193,0x7c401ddd,
    0x1547ee02,0x3104ccc4,0x9803ee03,0x001ddddd,0x03bbbbb3,0x37777660,
    0x7bddb501,0x2a5bdb70,0xdb83deed,0x803f32de,0x81fcc1f9,0x363a81fe,
    0x42fe402f,0x9359503d,0x83880661,0xda9d43f8,0xedb83dee,0x3ffff62d,
    0x07b20193,0x07dc07f3,0xfffb3f70,0x221ff4c5,0x205f303e,0x01fcc1ec,
    0x07f307b2,0x1fcc1ec8,0x2a01ff88,0x00ffc40f,0x00fcc1f5,0x05f507e6,
    0x4750bfea,0x37dc01ff,0xfd32d83c,0x06fc8838,0x3e23a89f,0x303ea01f,
    0x0327ffff,0x27cc07f2,0x6fdc07e8,0x7d41ff71,0x13e20683,0x27cc07f2,
    0x9f301fc8,0x7cc07f20,0x4401ff04,0x4401ff06,0x2600fcc6,0xa981f81f,
    0x44ea2fe8,0x7fcc00ff,0x89361660,0x0dd0244f,0xff8750ba,0x5c41a200,
    0xf98193ed,0x7c0ff405,0x3a0fdc07,0x0ea3f43f,0x05f98bf0,0x17e60ff4,
    0x5f983fd0,0x3f40ff40,0x03f41620,0x803f3162,0x583b81f9,0x88447fa2,
    0x7fc400ff,0x98d90ee0,0x0dd0242f,0x7e8750b1,0x9cc02c40,0x2017ec0c,
    0x037c45fb,0x89f907ee,0xf003a3fa,0x5c02fd8f,0x2017ec5f,0x017ec5fb,
    0x01fa17ee,0x101fa0b1,0x4c01f98b,0x2617301f,0xff827445,0x363fcc01,
    0x8f70be21,0x571ba029,0x80fd0ea0,0x19398058,0x7d401ff8,0x7dc06f87,
    0xb7427cc1,0x7c7e8049,0x23fd401f,0x3fd401ff,0xff5007fe,0x05880fd0,
    0x4c5880fd,0x80fcc01f,0xa83f30b9,0xa805fb05,0x21ee3c6f,0xdb005c5f,
    0xe87502b8,0x4c02c407,0x07fc4193,0xfd03fe60,0x7cc1fb80,0x01cafa83,
    0x03fe26f8,0x3e21ff30,0x87fcc00f,0x7cc00ff8,0x2203f40f,0x5880fd05,
    0x3e600fcc,0x1fe83b81,0x027dc0aa,0x6c1b0bf2,0x0911fdc5,0xa85986d8,
    0x16203f43,0xf3064e60,0x0ff8801f,0x07ee03e4,0x1bba01f9,0xff997e20,
    0x987fc400,0x7fc400ff,0x8801ff30,0x203f40ff,0x880fd058,0x2600fcc5,
    0xe881f81f,0xb0ea38af,0x217e201f,0xfba97a2b,0x0db00321,0x7e87507a,
    0x9cc02c40,0x200ffc0c,0x00fb87f9,0x409d0fee,0x3f9803fb,0x3e600ffc,
    0x2600ffc7,0x200ffc7f,0x407e87f9,0x880fd058,0x2600fcc5,0x880fcc1f,
    0x221d45fe,0x06ec40de,0x3bbf924c,0x223b35f3,0x13e0db02,0x4407e875,
    0x81939805,0x2fd402fe,0xbf7017c4,0x1f009d79,0xfe81f500,0x3a2fd402,
    0x22fd402f,0x2fd402fe,0x093007f4,0x449803fa,0x0fcc01f9,0xfe880fe6,
    0x675c0ea1,0x13403eca,0x20e5c177,0x3e21b604,0x03fa1d44,0x93980498,
    0x6404fb81,0x5c09702f,0x9800989f,0xf709d004,0x5c2fc809,0x217e404f,
    0x17e404fb,0x07500fec,0x43a807f6,0x0fcc01f9,0x9d100fe2,0xffb101d4,
    0x00077007,0x4c2ec073,0x3f61d42f,0x2600ea01,0x01fd0193,0x01d017e2,
    0x3b0007ee,0x7f40d300,0x3a0bf100,0x20bf100f,0x0bf100fe,0x02d80fee,
    0x216c07f7,0x0fcc01f9,0x9535c0fc,0x7fe401d4,0x2003b801,0xe827404a,
    0x0fee1d41,0x939802d8,0x881bd101,0x82cc00de,0x55c401fb,0x401b004b,
    0x6f440de8,0x881bd100,0x1bd100de,0x3600de88,0x6c04c81f,0xf984c81f,
    0x260fcc01,0x50dcd306,0x07f66007,0x0ee00ee0,0x7701e8a2,0x81fd83a8,
    0x3273004c,0x32f3b200,0x20e2003e,0x7fcc03fd,0x000c8806,0x07d979d9,
    0x3b2f3b20,0x979d9003,0xbd91007d,0x91007db9,0x207db9bd,0x910ccdf9,
    0x05cc3fb9,0x3a855570,0x01e64c00,0x2a66f32a,0x5bf700cb,0x0ea2a807,
    0x3b737b22,0x00c22003,0x20000988,0x00aaaaa0,0x00020035,0x880004c4,
    0x13100009,0x00262000,0x4c004c40,0x0cccc199,0x18800011,0x51000000,
    0x05300135,0x88031080,0x00000009,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x0214c000,
    0x40009880,0x00000098,0x22000131,0x02620009,0x44001310,0x01310009,
    0x80082a60,0x8800711a,0x06600009,0x00041100,0x82a60044,0x0c010600,
    0x3fa60011,0x260039bf,0x07ec004f,0x59bbb710,0x027cc073,0x2000ee80,
    0x2fcc05fe,0x200bfd00,0xfe9805fe,0x7cc039bf,0x6c005f95,0x7f50000f,
    0xf98fe800,0x30064005,0x20737ffd,0x503fb4f9,0x2003fa7f,0x001dfb32,
    0x3e2007a8,0x982bea01,0x035404fc,0x7000fc40,0x7a803f39,0x05d3b500,
    0x402e9da8,0x001df932,0x4002e637,0x360001f8,0xb15b8004,0x94058005,
    0xb100efc9,0x362036a5,0x10200b71,0x800dc000,0x80fea02a,0x001c804d,
    0x4710015c,0x401b8048,0x38812238,0x00810122,0x05500000,0x00005800,
    0x08055000,0x00000004,0xddddd980,0x20010001,0x1017e600,0x1000200b,
    0x20000800,0x02000400,0x409dd710,0x3311dedb,0x400cc413,0x50000000,
    0xb707bddb,0x1d7105bd,0x5cc02c00,0xd930ceee,0xdddddddd,0x3e60f640,
    0x4c02c003,0x2e0ceeeb,0x3261803f,0xeeeeeeee,0x777764c6,0x64c6eeee,
    0xeeeeeeee,0x67775cc6,0xb9805800,0x7cc0ceee,0xd31ea03f,0x003e887f,
    0xbddb500b,0x45bdd707,0x3ea01ff8,0x7fcdec40,0x001fa801,0x0bf609f9,
    0x07f203a6,0xfa8027cc,0xb09f9001,0x3f60005f,0xfd80e982,0xfd80e982,
    0xfc80e982,0x003f5004,0xffc813f2,0x7f50b101,0x07ea00d0,0xe813fe60,
    0x200ff80d,0xf774e868,0x00bfd00b,0x17e40fee,0x02fcc0b8,0x3fa007fa,
    0xf07f7005,0x3f20003f,0x5f901702,0x0bf202e0,0x01fdc05c,0xf7005fe8,
    0x07fee407,0x547e82c4,0x00bfd003,0x07441bea,0x22c407e8,0x006ab1fa,
    0x7001fdb3,0x00bf207f,0x7dc02fd8,0x07f6cc05,0x3e61fdc0,0x5f90000f,
    0x002fc800,0x2e0017e4,0xfed9803f,0x203fb800,0x5886fcac,0x00747f50,
    0x8007f6cc,0x202c83fd,0x2e2c407e,0x4e400917,0x3fb803fb,0x20305f90,
    0x3fd401ff,0x00fee720,0x3ff10fee,0x20bf2000,0x060bf201,0x20182fc8,
    0xb9c803fb,0x03fb803f,0x222fecb2,0x024dba05,0x003fb9c8,0x02cc3ff1,
    0xc8b101fa,0x5a200377,0x3fb806f8,0x10b05f90,0xff9801ff,0x1be2d100,
    0x3fe0fee0,0x05f90003,0x2c17e40b,0x40b05f90,0x8b4403fb,0x03fb806f,
    0x11ff44b2,0x0e57d40b,0x06f8b440,0x00e9bea0,0x716203f4,0x2e018b5f,
    0xf700bf62,0x3337f207,0x0ff986ec,0xb807fc40,0xf700bf62,0x100bf707,
    0xd999bf90,0x666fe40d,0x37f206ec,0x2e06eccc,0xfb15c03f,0x203fb805,
    0x44bfe22c,0x80377405,0x800bf62b,0xe803bbfd,0x3e62c407,0x98d0143e,
    0x81fdc05f,0x6a999bfc,0xf9803ff0,0x0bf31a07,0x5ff03fb8,0x5fe41440,
    0x3206a999,0x06a999bf,0x2a666ff2,0xd00fee06,0x7dc05f98,0xff50b203,
    0x3fb80b11,0x05f98d00,0x4017fe20,0x6c2c407e,0x2a05baef,0x0ffaaaad,
    0x7e40fee0,0x05fd0382,0x5b505fa8,0x401ff555,0x5fd103fb,0x0bf20730,
    0x382fc80e,0x80e0bf20,0x2b6a03fb,0x200ffaaa,0x20b203fb,0xf8059efb,
    0xaaada800,0x32000ffa,0x01fd002f,0x7ffc424c,0x2aaf601d,0x2e04fcaa,
    0x105f903f,0xf9013ee0,0x2aaaf605,0x3ee04fca,0x37fb2203,0x0bf203cc,
    0x082fc802,0x8020bf20,0x2af603fb,0x204fcaaa,0x40b203fb,0x24c05efd,
    0xaaaabd80,0x3f2004fc,0x403fb002,0x008aa83a,0x07f882cc,0x17e40fee,
    0x201fd010,0x20b305f8,0x0fee07f8,0xfc801d40,0x0bf20202,0x202fc808,
    0xb303fb80,0xfb81fe20,0xfe80b203,0x4c00ec05,0x400ff105,0x7f7002fc,
    0x002416c0,0x81fe403b,0x05f903fb,0x206f442c,0x03b00de8,0x3fb81fe4,
    0x9003f900,0x7e42c05f,0x0bf21602,0xb03fb858,0xb81fe403,0x880f603f,
    0x25d5c45f,0x3f201d80,0x005f9003,0x42640fec,0x80f30048,0x3fc80ffa,
    0x0f205fb0,0x3ecbcec8,0xff501e60,0x2007f901,0x2fd801f8,0x05fb0790,
    0x40bf60f2,0x983fc83c,0x407fd407,0xefc983fc,0xf98b300b,0x80f3006f,
    0xfd800ffa,0x37b22003,0x03503edc,0x3039fd50,0x3265dffb,0xf730bfff,
    0xffddddff,0x80131003,0xd981cfea,0xff932eff,0x1ed4017f,0x3bffee60,
    0x261ffeee,0xeeeefffb,0x3fee61ff,0x1ffeeeef,0x42ffff26,0xd981cfea,
    0xff932eff,0x0400017f,0xfea800d4,0xeffd981c,0x7fff9302,0x00988001,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00800000,0x50008300,0x00000005,
    0x00510000,0x00000000,0x00000000,0x50000000,0x00000001,0x00808000,
    0xd8806000,0xa7cc005b,0x3ae201fd,0x3ea00bee,0x03ff8804,0x6cc07fd0,
    0x99904dac,0x4c02c401,0x391dedcc,0x64013ea0,0x0d8b006f,0xf7017e20,
    0x01b5b007,0xfc805f70,0xfe81fa82,0x644ec400,0x201fd404,0x0dc6a039,
    0x36e5b100,0x3553f100,0x802e409b,0x5c00fbcc,0x4bb00fbd,0x7bae42f8,
    0x3d900360,0x5c03df98,0x3eae8806,0x501a24c0,0x80b9001d,0x7d007339,
    0x3f213600,0x8802e884,0x05d800ef,0x232200c8,0x5c000005,0x58126555,
    0x02547100,0x7c424c91,0x4cfe2f44,0x6402b81f,0x009f701f,0xb10c801b,
    0x0b115401,0x036000c8,0x8801b5b0,0x7e42c005,0xda809303,0x005802fa,
    0x003f300b,0xabf402c0,0x800440e2,0x02020080,0x4cbf0be6,0x4987f12f,
    0xd882fcc0,0x400801fe,0xa8720080,0x04000403,0x00400540,0x017dc040,
    0x07ea1801,0x03980088,0x50001fa8,0xacfc803f,0x4c433302,0x310ccc09,
    0x0dd44013,0x8be62f98,0xd85f12f8,0xd817ec00,0x86665fb8,0x2e600998,
    0xbeaa980a,0x5102cdaa,0x1ba88037,0x20055cc0,0x5cc00ab9,0xb981fa82,
    0xeda9800a,0xc8057300,0x005fe800,0xe880bfd0,0x3fb102ef,0xfb117ea2,
    0x5417ea23,0x4c0efa9d,0x7d05f92f,0xf00391ea,0x3e65903f,0x5447f627,
    0xd9af985f,0x575d4c0f,0xda82beaa,0xda80efa9,0x7cc0efa9,0xf980fd9a,
    0x9900fd9a,0x0fcc7f93,0x01fb35f3,0x13faab2a,0x40ff2732,0x0fed9805,
    0x07f6cc00,0x407ffa20,0x542f41fa,0x7d42f41f,0x5f317e20,0x3d307bee,
    0x44024c7b,0xf31dc0ff,0x3a0fd41f,0x0fea6d85,0x7d41a24c,0x1f517e20,
    0xa9b62fc4,0x3ea6d83f,0x13ec5a83,0x7f536c1f,0x3fc41f50,0x750fb16a,
    0x07f73900,0x03fb9c80,0xf507ff90,0x1fa85e83,0x642f42f4,0xe88be60f,
    0x5c58180f,0x83fe20bc,0x507fc459,0x2b85e83f,0x115c0fe2,0x3f217a0b,
    0x83f217a0,0x2e0fe22b,0x33a0fe22,0x1e2fdaaa,0x741fc457,0x33a0fe86,
    0x642fdaaa,0x6f8b4400,0x37c5a200,0x43ffca80,0x542f41fa,0x3e22f41f,
    0x3e62fa84,0x64017dc2,0x3e2ddae1,0xdf30b12f,0x02f41fa8,0x9889f971,
    0x19cb99ad,0x4bea13e2,0x82fa84f8,0x2204fcb8,0x5fc44fcb,0x1a099999,
    0x2227e5c4,0xf13fc84f,0x81333337,0x3f62b805,0x7ec57002,0x7e8aa802,
    0x217a0fd4,0x262f41fa,0x264f985f,0x2027d42f,0x1f9a7c4a,0x5406cffa,
    0x3a0fd45f,0x9f11b905,0xecccfca8,0x217e64cd,0x30bf34f9,0xf88dc89f,
    0x9f11b904,0x84804f98,0x4c4f88dc,0xf33fa85f,0xd0075009,0x8d005f98,
    0x954305f9,0xd07ea1fb,0x6e83f50d,0x22fa87f8,0x01fc42f9,0xf13f88b1,
    0x80eefd47,0x20fd42fc,0x3e25d86e,0xf00d8b04,0x3fc5f50f,0x44bb17d4,
    0x3e25d84f,0x21837c44,0x89f12ec0,0x12fa86f8,0x00c860df,0x7d5556d4,
    0x556d400f,0x2580ffaa,0x2fa8f52a,0x217d4374,0x641fc86e,0x462be60f,
    0x107600f8,0xfb0be27f,0x2a13e207,0x3e23742f,0x12613e23,0x320fe40d,
    0xf907f20f,0x4f88fe21,0x09f11fc4,0x101a87fd,0x7427c47f,0xfd07e40f,
    0x20161a87,0xfcaaaabd,0x5555ec04,0x52e84fca,0x1bf10f65,0xf881ff91,
    0x40ffc88d,0x2a1745f9,0x40d57baf,0x3ea9d03a,0x22077dc0,0x11bf105d,
    0x8ef81ff9,0x2e0adfd9,0x5f981222,0xd17e6174,0xfd98ef85,0x263be0ad,
    0x3ea0adfd,0x3aa4cbef,0x3f663be1,0xd17e60ad,0xcbeffa85,0x0b300ea4,
    0x05981fe2,0x9df90ff1,0x3ff20599,0xfc817dd5,0x9817dd5f,0x74c3dbdf,
    0x00dbe8af,0x6c74c0b1,0x6f5c6cc4,0x7e402ecb,0x5c17dd5f,0x42fe8dff,
    0xf300ea0c,0x3e607b7b,0xffb83dbd,0x7dc2fe8d,0x982fe8df,0x3ee0bffd,
    0x3a37fee2,0xdbefa82f,0x17ffb303,0x8076006c,0x403b03fc,0x057103fc,
    0x22004110,0x00220020,0x98015000,0x4c40881b,0x00822000,0x02204004,
    0x08800440,0x00200080,0x00804010,0x00800440,0x54079801,0x203cc0ff,
    0x03300ffa,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x3aa00000,0xffd981cf,0x039fd52e,0x005dffb3,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00050000,0x00000000,
    0x000000a8,0x00000000,0x05100000,0x00000000,0x1007fe60,0x7359bbb7,
    0x2601eeb8,0x5405c884,0x4405c883,0x5bbb5005,0xb3000c80,0xa803bbbb,
    0x503abded,0xfd7019bb,0xccb88001,0x2e200acc,0xc8801ccc,0x6fe4c0bc,
    0x0e664c01,0xc81bf220,0x5c400ded,0x400acccc,0xdb7b00ea,0x93057d40,
    0x05b9449f,0x2205b816,0x1b016e05,0x1e23f300,0x3d900750,0x19b03f98,
    0x9a60ff22,0x00fc80eb,0x32603260,0x07c45d00,0x36205d50,0xd303ffbb,
    0x86f8035c,0x403f23e8,0x80c980c9,0x2a80ffc8,0x80fea0ae,0x3201904d,
    0x1d816e02,0x03b816e0,0x401e8fb0,0x980fe405,0x6407cc4f,0x0fa1fc43,
    0x5d4003ee,0x06409999,0x5c1361e6,0xf882e00f,0x02c4bb06,0x447a86e8,
    0x2a23a84f,0x900c98ab,0x9810101f,0x222c405f,0x404983fd,0xb809505b,
    0x7400b105,0x03201e67,0x3fa02fcc,0x0e603f21,0x40fd81f9,0x539800fb,
    0x641db37f,0x0bb03ee0,0xbd0005f3,0x6c000fe0,0x0fd85d86,0x445e44e6,
    0xf90193ea,0x5c0ae601,0xf501803f,0x2dc00d81,0x82dc02c4,0x2bf6000d,
    0x039802d8,0x5fb805fb,0xb0603bee,0xfb85f90f,0x44902a88,0x14c9f12f,
    0x40fc4df3,0x03d0006e,0x2a2009f1,0x37c46d8b,0x1ec90fdc,0xfc829a4c,
    0x3fc9cc80,0x200017ec,0x2dc015c6,0x42dc00e4,0x77d4003a,0x05bdb10d,
    0x5007fe0b,0x1fff44ff,0x0fee1be0,0x5dffd3f7,0x4e8be248,0x367bf224,
    0xbb8bfb81,0xf103a800,0xb15d5009,0xb81ff0df,0x807d523f,0x503f2120,
    0x0ffc7d8b,0x8ae6e600,0x41d90058,0x41d90049,0xffa80058,0x0c807dc2,
    0x26007fc4,0x3ffa20ff,0xa86f881e,0xb867dc4f,0xaf88e26f,0x64240dc9,
    0x59f902ff,0x32605ff7,0x77e640ef,0x21f881cc,0x42fc86f8,0x1f2711fb,
    0x207e4240,0x2fdaaace,0x88001ff3,0x7c40d81a,0x25826620,0x4cc43dd9,
    0x01f10760,0x41df79b1,0xf30e603d,0x0ff8801f,0x444fffb8,0x5c4fa85f,
    0x2987ec0f,0x241bb3e2,0x740ffedc,0xa8837447,0x3eaa0ffe,0x87b80aae,
    0x51ef986e,0x07d94cfd,0x441f9090,0x099999bf,0x00003ff1,0x003f60ee,
    0x17cc6459,0x03f612a0,0x8a7f49d1,0x1ff85805,0x9103fcc0,0xa86f8bff,
    0x2a07dc2f,0x8af8923f,0xaa5c483f,0x6437c1ff,0x417e401f,0x6c27405f,
    0xf39d9106,0x001f748b,0x7cc1f909,0x003ff804,0xf9c85880,0x3d812600,
    0x3e721620,0xff307e40,0x819001b3,0x2fd402fe,0xd83fea01,0x7dc1fb87,
    0x44927c40,0x1c43f52f,0x22fd41f3,0x403fb86f,0x204e84f8,0x006d85f9,
    0x7f1487f7,0x7e41c460,0x70c1be20,0xd80100bf,0x200f95c0,0xc803a00d,
    0x7c0f95c1,0x003ffc87,0x404fb873,0x640322fc,0xf903ee2f,0x2fa81f70,
    0xd917ccaa,0xc86c8321,0x3e61f60f,0x2e81e801,0x1b61fe20,0x99542f40,
    0x321731ce,0x7f40fc80,0x0bfe0d43,0x30ea0288,0x2e03f339,0x49807202,
    0x10fcce4c,0x1dfd03ff,0xfe8580c4,0x2c8bf100,0x42f98f70,0x640fb84e,
    0x55555c0f,0xf70aeaa0,0x41fa8d50,0x5468806b,0x3f6382fc,0x36403ec1,
    0x332a2570,0x07e40ae2,0x132fbfea,0x0e60bfa2,0xccca8588,0x702cc0cf,
    0x6542c023,0x3f60cfcc,0xdfd9b12e,0x20e40957,0x6f440de8,0x1f40fe40,
    0x2e0d52e4,0x5c0ba22f,0x3e20ae02,0x236c1642,0x5b115c3e,0x677f454c,
    0x4bbea1ec,0xd9008ffa,0x2e02b801,0x2603f202,0x9100bffd,0x80799bfd,
    0xd80f801d,0x0b99bb00,0x881f0039,0x361efffd,0x0e602eff,0x1f65e764,
    0xddceecc8,0x076f3203,0x0e5e7e44,0x32ef32a0,0x2b3a601c,0xb7b9102b,
    0x3bbdfd07,0xfe88cc88,0xbffea83f,0x2ee60bfd,0x7995000b,0x2e203997,
    0x00102dff,0x05100188,0x4c0a60a0,0x1c41aaaa,0x804c0280,0x88010018,
    0x13104009,0x98002200,0x00098000,0x80100044,0x04404018,0x00804220,
    0x00009800,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x20000000,0x005eeed8,0x40351c40,
    0x8d4062da,0x3bbb6038,0x10262eee,0x1d980003,0x0003514c,0x88000000,
    0x86620999,0xb83deeda,0x17502ded,0x2003b300,0x776d40a8,0x2eed982d,
    0xa8306644,0x2200ceca,0x49cedddb,0x0ffffee0,0xc80b7ee2,0x3220ff2f,
    0xf884befe,0xff505f96,0x7c1fffff,0xc8007dc4,0x3f61fdc6,0x0b005f99,
    0x7d407f60,0xd30ffcc3,0x443e887f,0x03ea01ff,0x3ffa636e,0x9009f506,
    0xff887fb7,0x2e0be202,0x2a1ccffc,0x7cc17e23,0x8837dc43,0xfddf8805,
    0x2a19105f,0x06ed4302,0xb01712b8,0x44f8d503,0x6fa800fb,0x06e39818,
    0x74007ea0,0xb7d0bb03,0x0683fa8b,0x434401ff,0x007ee2f8,0x36c7b003,
    0x0b3027e4,0x3a1f5c46,0x3e607ec3,0x15c1e603,0x3fd105c0,0x00000000,
    0xf0f20310,0x4400fb89,0x000006ed,0x58802ff4,0x15c550b0,0x3a0751fa,
    0x7dc2c407,0x01013e61,0xf8802f88,0x8000b206,0xd10fdc5e,0x3fe0b00f,
    0x3ea0a03e,0x99886664,0x002ae600,0xf8001573,0x03ee27c0,0x070dd1b0,
    0x6cc00ae6,0x101000fe,0xfa810101,0x03f403a3,0x88fee162,0x2601c02f,
    0x05fb001f,0x0375101a,0x2e0fd831,0xd980805f,0x1000efff,0x88fec47f,
    0x9af985fa,0x9af980fd,0x0d5000fd,0x200fb89f,0x90b0dd3b,0xc807f939,
    0x39803fb9,0x80e60730,0x3f40936e,0x97a21620,0x2603807b,0x54009afb,
    0x2a03a85f,0x200efa9d,0x01ff43f8,0x037f4c00,0x0fd41f98,0xfa9b617a,
    0x0fea6d83,0x22fc1e40,0x74b100fb,0x362d4686,0x37c5a207,0xc88df910,
    0x037e446f,0x740395f5,0xe882c407,0x0e400bbd,0x1acfca88,0x0741fe80,
    0x17e20fa8,0x00ff85b8,0x80599995,0x84b803fd,0x5c2f41fa,0x8ae0fe22,
    0x01f003f8,0xb00fc8bf,0xd1e23741,0x05fb5559,0x402fd8ae,0x3e0df06f,
    0x20377406,0xd82c407e,0x201a6000,0x3ee001fa,0x85e81664,0x981d00fc,
    0x3fe200ff,0x404f8803,0xe83f5068,0x13f2e205,0x804fcb88,0xb33ff069,
    0x42c853fb,0xf887cc6e,0x0099999b,0x7405f98d,0x1ba0dd06,0x7e807f70,
    0x5fd42c40,0x7d101aaa,0x4003f500,0x20390ff8,0x82fa84f8,0x02ff881a,
    0x5d800ff4,0x1fa80ec0,0x88dc82f4,0xf11b904f,0x3a079009,0x3ff89fff,
    0xf51ba126,0xa8013e63,0x0ffaaaad,0x83741ba0,0x400f806e,0x212600fe,
    0xefffffe8,0x5400fe41,0x5fe4001f,0x217e6068,0x3a0384f9,0x007f404f,
    0x80ae03d8,0x6c3741fa,0x97613e25,0x80f804f8,0x640818e8,0xffffffff,
    0x1be25f54,0x5555ec0c,0x1ba04fca,0x406e8374,0x01fd8049,0x4c5220ea,
    0x237c5ba9,0x001fa86a,0x201df7c4,0x282fa87f,0xfd01bea0,0x201f1001,
    0x217d403a,0xf11fc46e,0x3e23f889,0x79834c04,0x2aaaa600,0x7f71aeea,
    0x306a1ff4,0xe81fe20b,0x1ba0dd06,0x7f7003b0,0x807416c0,0x3ea37c38,
    0x4000fd41,0x7e400ffd,0x40007e41,0x03fa04fe,0x40b66199,0x3e21883a,
    0x40ffc88d,0xadfd98ef,0x3f663be0,0x207900ad,0x740000fb,0xff527e46,
    0x03b0997d,0x06e81fe4,0x711ba0dd,0x7ec00975,0xcf984c81,0x3ee06440,
    0x07ea1a21,0x2013ea00,0x541745f9,0x81fec01e,0x77fe40fe,0x999f500d,
    0xffc81d99,0x7dc17dd5,0x5c2fe8df,0x02fe8dff,0x007e403e,0x7f71ba00,
    0x40bffd98,0x07fd4079,0xd06e8374,0x006ff98d,0x76e6f644,0x3bffae03,
    0xaed881ef,0x03fb82b9,0x26003d00,0xf703dbdf,0x59dd5007,0x00c05bd7,
    0x3fffffea,0x0041105f,0x40008002,0x0000a201,0x040511ba,0x981cfea8,
    0xf712effd,0x3fee217f,0x17ff710b,0x220000d4,0x2aa20009,0x701a8801,
    0x80017dfd,0x80088001,0x01988000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x88ceeda8,0x260bdeeb,0x004c1ded,0x0a2aea20,0x440550a8,0xdd7106a3,
    0x0ef6dc09,0x30f7bb6a,0x04c0a203,0x5ef764c0,0x819ddb30,0x764c2a29,
    0xdb710bde,0x3bae639d,0x1b8080ce,0x400bbb66,0x3b263ded,0xdd900bde,
    0x986f643b,0xccdeeeec,0xddd9300a,0x7cc0379b,0x982fe40f,0x00bfaa0f,
    0x6fd9bea8,0xffd9ffa8,0xff2fc82f,0xa80ffe60,0x203fe207,0x237e447e,
    0x3a002fea,0xd02fc82f,0xfe8bf31f,0x320bf702,0xf885504f,0xa806fe86,
    0x07fd01ff,0x0f885fb0,0xf730afe8,0x457f403f,0x3f603fe9,0x4a83fc41,
    0xf3002fb8,0xbf706f81,0x9103fee3,0xffc80aa1,0x7f80b101,0x21be0550,
    0x3f6002fa,0x750074c1,0x407f60dc,0x07f704fa,0xb05705d1,0xffe803ff,
    0x1003fb00,0xfb03a8bf,0x205fb103,0x07fa21fd,0x0ff427d4,0x017d40ec,
    0x706e86e8,0x003fe83f,0x407fee40,0x003fc058,0x017d4374,0x074c3fb0,
    0x80fe4000,0x87f704fa,0x8009bfe8,0x32a05fbd,0x9bfb00fe,0x83f60179,
    0x203f900e,0x1fd81ff8,0x7f8827e4,0x30684fc8,0x07f1005f,0x907ee0db,
    0x0375109f,0x886fcac8,0x4003fc05,0x002f986e,0x0074c7f6,0x07f20730,
    0x3fb827d4,0x00d67e54,0xd80ff4ec,0x5fb00fe9,0xf305fd53,0x1fc81267,
    0x3f60ff20,0xfb027e41,0x1d46fe83,0x03732f98,0x20db07f3,0x227cc1fb,
    0x00efa9da,0xb117f659,0x07307f80,0x98be61ba,0x99fd8199,0xdf91000e,
    0x7d407f20,0xf507f704,0x7d46c005,0x01fd5984,0x1ff887f6,0x640197e8,
    0x217ea01f,0x00ffc1fd,0x7ee549f5,0x57cc0361,0x7c41fedc,0x3f706d86,
    0x83ea3f98,0x225905f8,0xf01623fe,0xd06fc88f,0x7dc5f30d,0x3fcfd80a,
    0xf906f800,0xf9555559,0x2a0fee09,0x7436002f,0x0fe8ec0f,0x4fd83fb0,
    0x9505bfb8,0x41999bfd,0x11fd87f9,0x4ff00df9,0x0d14fa9d,0x5f886fcc,
    0x83740fd8,0xd07e41fb,0x5901f90b,0x05897fc4,0xd06f83fc,0x3625f30d,
    0x3ff3f600,0xc8374002,0xcaaaaacf,0x507f704f,0xb86c005f,0x0fe9a24f,
    0x4fd83fb0,0x9bff9999,0x3f662399,0x7fc4199a,0x6ee6fec0,0x9a5f9003,
    0x7cc0757f,0x7fdc2f42,0xf706eb9b,0x13e24e87,0x50b20bea,0xf80b11ff,
    0x1ba0dd07,0x00366be6,0x05ff53fb,0x1fc83740,0x3ee09f50,0x7cc2fa83,
    0x1ff10d84,0xb00fe8b2,0xb02ff83f,0x403f900f,0x01fd87f9,0x475bf300,
    0x2600dafd,0xfb83742f,0xf706d8ef,0xf989d79b,0x2c84f985,0x4059efb8,
    0x3a0dd07f,0x01fcf986,0x5ff51fd8,0x7e41ba00,0x2e09f501,0x542fa83f,
    0xf906c1ff,0x00fe8d17,0x97f623fb,0xaafeaaaa,0x00fe40aa,0x03fb0bf7,
    0x506ffc00,0x2f980bbf,0x6d820374,0x01313f70,0x20bea1fe,0x0bdfb02c,
    0x20dd06f8,0xefbf986e,0xf50fec00,0x20dd005f,0x09f501fc,0x0bea0fee,
    0x441b06e6,0x07f43bef,0x2deeefd8,0x57f55554,0x0fe40aaa,0xfd81ff88,
    0x1bf20001,0x5f300ffe,0x1b6006e8,0x7e400fdc,0x16407e41,0x7c30bfd0,
    0x1ba0dd05,0x017e6be6,0x2ffa83fb,0x1fd83740,0x3ee09f50,0x428cf983,
    0x3fe41d85,0x1fd807f4,0x6c03ec00,0x209f901f,0x260001fd,0x400fc83f,
    0x003742f9,0x007ee0dd,0x205d17e6,0x717e203d,0x37407e5f,0x72f986e8,
    0x417f409f,0x1ba04ffb,0x5fb817f4,0x3f607f90,0x0ba06e25,0x03ff09f3,
    0xfb000ffa,0x441fd801,0x0bfa03fd,0xb301d000,0x7e85f500,0xb01ff100,
    0x37e6007f,0xefc983db,0xf98b300b,0x41ba03cf,0x363fa86e,0x77fe4c2f,
    0xdfffb10b,0x2ffee219,0x17dff930,0x46fffee2,0x80bfffc9,0x77e4c040,
    0xffb506c3,0x77fecc7d,0x7fe4400b,0xfffc982d,0x300cddee,0x0017dff9,
    0x4c018060,0xffb8aefe,0x2aaa200b,0x0aaaaa0a,0x00000880,0xf7100c02,
    0x3fee217f,0x25dfd50b,0x0001cffc,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x44000000,0xd93060cc,0x7ddddddd,0x337bbb26,
    0x7764c02c,0x301ccdee,0xdddddddd,0x6f76d49d,0x32deeb83,0x445bdddb,
    0xd930ceec,0xdddddddd,0x2605dc40,0x401ceeec,0xeeeeeee8,0xc9806eee,
    0xeeeeeeee,0x3bbb263e,0x100accde,0x55555557,0x000c0375,0xab98004c,
    0x405dc400,0x9ff9701a,0x307fa039,0x932fe89b,0x2fe801df,0xa819f951,
    0x07fcc09e,0xde813fe6,0xf03ffb80,0x260bf607,0xfa9db80e,0x3003fe83,
    0x37fb333d,0x3e001f53,0xe85a82fd,0x3ff730bf,0x80600310,0x00e4000d,
    0x03f66be6,0x11fd4edc,0x75c460ff,0x2407f603,0x09fb07f6,0x3fd81fd8,
    0x02fe80d4,0x03a20df5,0x04b86fc8,0x205c0bf2,0x3207ec7a,0xc835002f,
    0x4c005c2f,0xb0702fbd,0x85fd103f,0x6c030018,0x200e4000,0x2a0fea6d,
    0x05707ec7,0x407f6000,0x3ea0fe40,0x4c0fe407,0x4fc80c6f,0x1641fec0,
    0x0b51fec0,0x3e002fc8,0x17e41c44,0x42fc8080,0x5f71b000,0x407f2020,
    0x00621ff8,0x8001b00c,0xf115c01c,0x03889f07,0x00dcc6a0,0xf90183fb,
    0x6406fb83,0x806f981f,0x7c400ef9,0x4401661f,0x400e89ff,0xf88182fc,
    0x005f9002,0x40017e40,0x0305f749,0x3fc807f2,0xb00c0062,0x001c8001,
    0xf889f971,0x5fd50002,0x3603ffd9,0x1fc82c1f,0x3f201ff4,0x4403fd81,
    0xdf5001ff,0xdf500074,0x05f9003d,0x2009f30b,0x320002fc,0x70d8002f,
    0xf904885f,0x312fd403,0x55554600,0x0aaaabea,0x57b55553,0x8dc81555,
    0x027cc4f8,0x225bf500,0x99bfb05f,0x267f20fd,0xfc802eeb,0x02fecbac,
    0x6c004fd8,0xd8003bbf,0x9bf9004f,0xdf10dd99,0x005f9060,0x20017e40,
    0x3337ee49,0x03f904fd,0x00313fcc,0x766665c6,0x950ccccc,0x999bd999,
    0x9f12ec19,0x00306f88,0xb06e85f5,0x20d5335f,0x006fcdfc,0x36ea73f2,
    0x1bea00cf,0x017fe200,0x400ffdc0,0x6a999bfc,0xc8385fd0,0x3f20002f,
    0xf7074002,0x20973337,0x3fe201fc,0x80600310,0x00e4000d,0x427c47f1,
    0xa801c2fe,0xfd836c2f,0x91fc81c1,0x07f2007f,0x7fc41fee,0x05f90001,
    0x0df5b300,0x20705f90,0x83daeffa,0x320002fc,0x336a002f,0x0382fecc,
    0x3fcc03f9,0xd8060031,0x200e4000,0xadfd98ef,0x36bbfea0,0x17d42743,
    0x20fec1b6,0x7f43f900,0xd01fc801,0x007fb05f,0x20017e40,0x809fb0e8,
    0x260082fc,0x5f903ffd,0x017e4000,0x82fb81d0,0x5c03f900,0x0c00625f,
    0x1c8001b0,0x746ffdc0,0x3ffd982f,0x17d437c4,0x00fec1b6,0x3be61fc8,
    0xd80fe400,0x302fdc4f,0x8005f900,0x807fe21d,0xd80202fc,0x980bf200,
    0x400bf200,0x202fb83a,0xfd00fe41,0x11800c43,0x333b3333,0x001c8033,
    0x22008001,0x36c2fa80,0xfb001fd8,0x6c05fb83,0x21ff881f,0x01600ff9,
    0x3c800bf2,0x3f206fa8,0x37441602,0x02405f90,0x1a200bf2,0x448817dc,
    0x89f901fd,0x32e30018,0xcccccccc,0x0002a00c,0xfa800000,0x2fe83f42,
    0xfb05fb00,0x260ff40b,0x817f44fd,0x3fd805b8,0x7f40d900,0x3205fb05,
    0xfd81aa03,0x6c03d883,0x904c803f,0xe83d107f,0x41fec41f,0xaaaaaab8,
    0x00001baa,0x66664400,0x02cccccc,0x577f5400,0x930bffb8,0x26017dff,
    0x220beffc,0x3f263efe,0x2ceeeeff,0x77777fe4,0x2603ffee,0x500bfffc,
    0xff707ffd,0x3fee65df,0x1ffeeeef,0xf9303b90,0xfffddfff,0x3bff2603,
    0x3efc880b,0x3bbfff26,0x3f267fee,0x0cddeeff,0x00000000,0x33333000,
    0x00133333,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x30057300,0x8000ae30,0x54401ba8,
    0x9bb8922b,0x99886662,0x104ccc40,0x88ccc433,0x42660999,0x10000c08,
    0x0aca8837,0x26620573,0x43509999,0x26a0e0a9,0x731a81b8,0x0005d443,
    0x26133310,0x2e635019,0x1d800001,0xfc9cc800,0x11c89303,0x540017d7,
    0xa80efa9d,0x30dee9ae,0x6c49d319,0x88bf511f,0x317444fd,0x37f225fd,
    0x20d8bea0,0x6e4c0049,0x76c4fd42,0x741ec9cc,0x14fdaaac,0xb9d7bf7d,
    0x7ed7f545,0x372bfaa7,0xffdd8bff,0x15982c40,0x0bee1ff9,0xffd95fd5,
    0x2002c803,0xa972201d,0x07443ec5,0x073aa0b7,0x2fc41f50,0x25f883e6,
    0x3f51262d,0x84f985e8,0x3e22fa85,0xb1aa1d44,0x039b5005,0x7c5fa97a,
    0x517e6244,0xfa85b81b,0x6fd4198d,0x3fa8ffa0,0x2074c5a8,0x2a03b2fd,
    0x40bf12df,0x400006d9,0x2aab3a6b,0xf52742fd,0x02dd9803,0x6c1f90bd,
    0xee87f646,0xe83f5060,0x02b8fb05,0x160fd8bf,0x103f32f4,0x2a8017d7,
    0x3aaab7e6,0x81fd1047,0xfa81900d,0xfb0be602,0x2b504f88,0xbef880e9,
    0xdd0bea03,0x541d46c0,0xaaaaaaaa,0x7c5aa0aa,0x2099999b,0x00bf30fd,
    0x9f11f644,0x72fc5f50,0x3fee7f55,0x741fa80c,0x02c7f505,0x4ffa21f9,
    0x6c7f5048,0x005d910f,0x337fb710,0x17ec0333,0x4c398162,0x90be602f,
    0x6d409f0f,0x01bea00e,0x506d85f5,0x332e06c9,0xcccccccc,0x027cdaa0,
    0x02fc9be2,0xf986ecc0,0xbf34f985,0xd327ccea,0x41fa83ff,0x1cdba05e,
    0x3a327f30,0x73fc0376,0x0073a67f,0x07f33b70,0x2c427dc0,0x02f98730,
    0xf0f90be6,0x402f4c09,0x0bea02fe,0x598d10db,0x22d50000,0x0fd4306f,
    0x33aa00dd,0x2fa87f80,0x2f9927be,0x3ea3fe41,0x3f703741,0x48ee8019,
    0x7dc0b3f7,0x3b6617a1,0x3e66d802,0x05f98086,0x2606c036,0x90be602f,
    0x3a609f0f,0x3a7205a8,0xd85f500f,0x02c82c86,0xe9aa005c,0x9ae0d43f,
    0x7d9102e8,0x320fe401,0xf717f60f,0x543f7121,0xf103742f,0x3bf7009b,
    0x2f80fbe2,0xec8803aa,0x7c3f880b,0x07f44387,0x85984a8a,0x0be602f9,
    0xd309f0f9,0x99d42d41,0xd85f505f,0x06882cc6,0x1d900fe2,0x132fbfea,
    0xd98d316c,0x8bf3002d,0x362fd42e,0x446987e2,0x0ffc88df,0x22007f20,
    0xb807ec5f,0xd7000744,0xa877c419,0x41dabffe,0xbb2441fd,0x83dbb57d,
    0x0fea03fa,0x445f81f9,0x1665a80e,0x85f507f9,0x0100447e,0x04cc4008,
    0x2017ffb3,0x1cb95458,0xdbdf9800,0x5ef56c43,0x65e7f43d,0xdd5ffc81,
    0x801a6017,0x4882d42d,0xda8000dc,0x64bbfee1,0x77d43eff,0x574edccc,
    0x52c42ee6,0xfb307dfd,0x273fee5d,0x0043ffc9,0x6c43bea1,0x3bfaa4ff,
    0x00bffb8a,0x10000000,0x00000000,0x1304c022,0x22004c20,0x00040020,
    0x00000201,0x06031000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00620000,0x00000000,
    0x3ae08000,0xeeeeeeee,0xddd7021e,0x3ddddddd,0x00000000,0x00000000,
    0x00000000,0x00000000,0x3ae00000,0x81775c1e,0x3b57307b,0x9817db50,
    0x0bae0bca,0x3643ea9d,0x000fec24,0x0027cc6e,0x0000ba60,0x00000000,
    0x00000000,0x00000000,0x00000000,0x2532dca2,0xd51930fa,0x8b91c8aa,
    0x3c4970ca,0xf137ec9b,0x23f47f2b,0x0017c5e8,0x000d50dc,0x00003fa8,
    0x00000000,0x00000000,0x00000000,0x00000000,0x261f00e4,0x45fbc9ef,
    0x206c6db8,0x447b96e6,0xb0fba7c5,0x01ccd70f,0xa8e41b80,0xcccccccc,
    0x000021cc,0x00000000,0x00000000,0x00000000,0x00000000,0x9503fc88,
    0x41beda88,0xd858d95a,0x223ccf70,0x32799f44,0x0010e5c5,0x33108040,
    0x33333333,0x00000000,0x00000000,0x00000000,0x00000000,0xf3000000,
    0xceb85881,0x64fe0ced,0x44951d46,0x05cc771f,0x09534472,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x80000000,0x3ea12446,
    0x325e8d9b,0x75c2fbbf,0x15ed40ce,0x4c705402,0x21555542,0xdd98510b,
    0x5d30980a,0x55555554,0x00001aaa,0x00000000,0x00000000,0x00000000,
    0x80000000,0x3e63b9b9,0xb5c23eee,0x00000008,0x7fc40000,0x6d3e67ff,
    0x3b26721f,0x3ea488ad,0x2eeeeee3,0x0001bbbb,0x00000000,0x00000000,
    0x00000000,0x00000000,0x99881a88,0x000b5019,0x00000000,0x5c088888,
    0x54054731,0x00040ced,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
};

static signed short stb__times_23_latin1_x[224]={ 0,2,1,0,1,0,0,0,0,0,1,0,1,0,
1,0,0,2,0,0,0,0,0,0,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,-1,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,-1,1,0,-1,0,0,0,0,0,0,0,
-2,0,0,0,0,0,-1,0,0,1,0,0,0,0,0,0,0,2,1,1,0,2,2,2,2,2,2,2,2,2,
2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,2,1,0,0,0,
1,1,0,0,-1,0,0,0,0,-1,0,0,0,0,2,1,-1,1,1,1,0,0,1,1,0,0,0,0,0,0,
0,0,-1,0,0,0,0,0,0,0,0,0,0,-1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,0,
 };
static signed short stb__times_23_latin1_y[224]={ 18,3,3,3,3,3,3,3,3,3,3,5,15,12,
16,3,3,3,3,3,3,4,3,4,3,3,8,8,6,9,6,3,3,3,4,3,4,4,4,3,4,4,4,4,
4,4,4,3,4,3,4,3,4,4,4,4,4,4,4,3,3,3,3,21,3,8,3,8,3,8,3,8,3,3,
3,3,3,8,8,8,8,8,8,8,5,8,8,8,8,8,8,3,3,3,11,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,18,8,4,3,6,4,
3,3,4,3,3,8,9,12,3,2,3,5,3,3,3,8,4,9,17,3,3,8,3,3,3,8,-1,-1,-1,0,
0,0,4,3,-1,-1,-1,0,-1,-1,-1,0,4,0,-1,-1,-1,0,0,6,3,-1,-1,-1,0,-1,4,3,3,3,
3,4,4,3,8,8,3,3,3,4,3,3,3,4,3,4,3,3,3,4,4,7,8,3,3,3,4,3,3,4,
 };
static unsigned short stb__times_23_latin1_w[224]={ 0,3,7,11,9,17,16,3,7,7,8,12,4,7,
3,6,10,6,10,9,10,10,10,10,9,10,4,4,12,12,12,9,19,15,13,14,15,13,11,15,15,7,8,16,
13,19,16,15,11,15,15,10,13,15,15,20,15,15,13,6,6,6,10,12,4,10,11,9,11,9,10,11,11,6,
7,11,6,17,11,10,11,11,8,7,6,11,11,15,11,11,9,7,2,7,12,12,12,12,12,12,12,12,12,12,
12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,0,3,9,10,11,11,
2,8,7,16,7,10,12,7,16,12,8,12,6,6,4,11,11,3,5,4,7,10,15,15,16,9,15,15,15,15,
15,15,19,14,13,13,13,13,7,7,7,7,15,16,15,15,15,15,15,9,15,15,15,15,15,15,11,10,10,10,
10,10,10,10,14,9,9,9,9,9,6,6,6,6,10,11,10,10,10,10,10,12,10,11,11,11,11,11,11,11,
 };
static unsigned short stb__times_23_latin1_h[224]={ 0,16,7,16,17,16,16,7,20,20,9,12,7,3,
3,16,16,15,15,16,15,15,16,15,16,16,11,14,11,5,11,16,20,15,14,16,14,14,14,16,14,14,15,14,
14,14,15,16,14,20,14,16,14,15,15,15,14,14,14,20,16,20,9,2,5,11,16,11,16,11,15,15,15,15,
20,15,15,10,10,11,15,15,10,11,14,11,11,11,10,15,10,20,20,20,3,13,13,13,13,13,13,13,13,13,
13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,0,15,18,16,10,14,
20,20,3,16,8,11,5,3,16,2,8,12,9,9,5,15,19,4,5,9,8,11,16,16,16,15,19,19,19,18,
18,18,14,19,19,19,19,18,19,19,19,18,14,19,20,20,20,19,19,10,16,20,20,20,19,19,14,16,16,16,
16,15,15,16,11,14,16,16,16,15,15,15,15,14,16,14,16,16,16,15,15,9,11,16,16,16,15,20,20,19,
 };
static unsigned short stb__times_23_latin1_s[224]={ 254,212,201,146,33,89,75,197,1,33,158,
215,192,209,238,248,126,248,38,187,106,27,176,83,166,220,249,176,116,238,22,
1,171,131,41,11,173,101,13,11,145,161,86,121,125,181,69,99,241,155,25,
115,139,180,229,1,85,69,55,121,92,128,227,242,233,228,137,239,208,1,218,
196,22,95,191,109,102,175,215,35,46,34,166,57,169,65,77,89,203,168,144,
199,207,135,225,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,
189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,254,117,207,
197,154,213,152,143,217,231,167,11,220,209,149,228,175,202,151,144,215,94,226,
251,209,251,184,105,59,43,26,208,17,159,106,217,17,1,153,41,56,70,84,
241,98,33,122,233,225,130,41,57,73,1,238,193,107,89,105,210,191,175,201,
78,216,191,135,61,72,180,129,115,202,238,1,121,147,154,161,138,227,1,169,
158,67,245,58,238,46,123,43,55,49,21,9,147, };
static unsigned short stb__times_23_latin1_t[224]={ 1,42,137,42,42,42,61,137,1,1,137,
111,137,143,143,42,61,61,78,61,78,78,61,78,61,61,111,95,126,137,126,
78,1,78,111,61,111,111,111,78,95,95,95,95,111,95,95,61,95,1,111,
61,111,78,78,95,111,111,111,1,61,1,126,143,137,111,61,111,61,126,78,
78,95,95,1,95,95,126,126,126,95,95,126,126,95,126,126,126,126,78,126,
1,1,1,143,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,
111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,1,78,22,
61,126,95,1,1,143,61,137,126,137,143,61,123,137,111,137,137,137,78,1,
137,137,126,137,126,61,61,61,78,22,22,22,22,42,42,111,22,22,22,22,
22,22,22,22,22,95,22,1,1,1,22,1,126,42,1,1,1,22,22,95,
42,42,42,42,78,78,42,126,111,42,42,61,78,78,78,78,95,42,111,42,
42,42,78,95,126,126,42,42,42,78,1,1,22, };
static unsigned short stb__times_23_latin1_a[224]={ 83,111,136,166,166,277,258,60,
111,111,166,187,83,111,83,92,166,166,166,166,166,166,166,166,
166,166,92,92,187,187,187,147,306,240,222,222,240,203,185,240,
240,111,129,240,203,295,240,240,185,240,222,185,203,240,240,314,
240,240,203,111,92,111,156,166,111,147,166,147,166,147,111,166,
166,92,92,166,92,258,166,166,166,166,111,129,92,166,166,240,
166,166,147,159,67,159,180,258,258,258,258,258,258,258,258,258,
258,258,258,258,258,258,258,258,258,258,258,258,258,258,258,258,
258,258,258,258,258,258,258,258,83,111,166,166,166,166,67,166,
111,252,92,166,187,111,252,166,133,182,100,100,111,191,151,83,
111,100,103,166,249,249,249,147,240,240,240,240,240,240,295,222,
203,203,203,203,111,111,111,111,240,240,240,240,240,240,240,187,
240,240,240,240,240,240,185,166,147,147,147,147,147,147,222,147,
147,147,147,147,92,92,92,92,166,166,166,166,166,166,166,182,
166,166,166,166,166,166,166,166, };

// Call this function with
//    font: NULL or array length
//    data: NULL or specified size
//    height: STB_FONT_times_23_latin1_BITMAP_HEIGHT or STB_FONT_times_23_latin1_BITMAP_HEIGHT_POW2
//    return value: spacing between lines
static void stb_font_times_23_latin1(stb_fontchar font[STB_FONT_times_23_latin1_NUM_CHARS],
                unsigned char data[STB_FONT_times_23_latin1_BITMAP_HEIGHT][STB_FONT_times_23_latin1_BITMAP_WIDTH],
                int height)
{
    int i,j;
    if (data != 0) {
        unsigned int *bits = stb__times_23_latin1_pixels;
        unsigned int bitpack = *bits++, numbits = 32;
        for (i=0; i < STB_FONT_times_23_latin1_BITMAP_WIDTH*height; ++i)
            data[0][i] = 0;  // zero entire bitmap
        for (j=1; j < STB_FONT_times_23_latin1_BITMAP_HEIGHT-1; ++j) {
            for (i=1; i < STB_FONT_times_23_latin1_BITMAP_WIDTH-1; ++i) {
                unsigned int value;
                if (numbits==0) bitpack = *bits++, numbits=32;
                value = bitpack & 1;
                bitpack >>= 1, --numbits;
                if (value) {
                    if (numbits < 3) bitpack = *bits++, numbits = 32;
                    data[j][i] = (bitpack & 7) * 0x20 + 0x1f;
                    bitpack >>= 3, numbits -= 3;
                } else {
                    data[j][i] = 0;
                }
            }
        }
    }

    // build font description
    if (font != 0) {
        float recip_width = 1.0f / STB_FONT_times_23_latin1_BITMAP_WIDTH;
        float recip_height = 1.0f / height;
        for (i=0; i < STB_FONT_times_23_latin1_NUM_CHARS; ++i) {
            // pad characters so they bilerp from empty space around each character
            font[i].s0 = (stb__times_23_latin1_s[i]) * recip_width;
            font[i].t0 = (stb__times_23_latin1_t[i]) * recip_height;
            font[i].s1 = (stb__times_23_latin1_s[i] + stb__times_23_latin1_w[i]) * recip_width;
            font[i].t1 = (stb__times_23_latin1_t[i] + stb__times_23_latin1_h[i]) * recip_height;
            font[i].x0 = stb__times_23_latin1_x[i];
            font[i].y0 = stb__times_23_latin1_y[i];
            font[i].x1 = stb__times_23_latin1_x[i] + stb__times_23_latin1_w[i];
            font[i].y1 = stb__times_23_latin1_y[i] + stb__times_23_latin1_h[i];
            font[i].advance_int = (stb__times_23_latin1_a[i]+8)>>4;
            font[i].s0f = (stb__times_23_latin1_s[i] - 0.5f) * recip_width;
            font[i].t0f = (stb__times_23_latin1_t[i] - 0.5f) * recip_height;
            font[i].s1f = (stb__times_23_latin1_s[i] + stb__times_23_latin1_w[i] + 0.5f) * recip_width;
            font[i].t1f = (stb__times_23_latin1_t[i] + stb__times_23_latin1_h[i] + 0.5f) * recip_height;
            font[i].x0f = stb__times_23_latin1_x[i] - 0.5f;
            font[i].y0f = stb__times_23_latin1_y[i] - 0.5f;
            font[i].x1f = stb__times_23_latin1_x[i] + stb__times_23_latin1_w[i] + 0.5f;
            font[i].y1f = stb__times_23_latin1_y[i] + stb__times_23_latin1_h[i] + 0.5f;
            font[i].advance = stb__times_23_latin1_a[i]/16.0f;
        }
    }
}

#ifndef STB_SOMEFONT_CREATE
#define STB_SOMEFONT_CREATE              stb_font_times_23_latin1
#define STB_SOMEFONT_BITMAP_WIDTH        STB_FONT_times_23_latin1_BITMAP_WIDTH
#define STB_SOMEFONT_BITMAP_HEIGHT       STB_FONT_times_23_latin1_BITMAP_HEIGHT
#define STB_SOMEFONT_BITMAP_HEIGHT_POW2  STB_FONT_times_23_latin1_BITMAP_HEIGHT_POW2
#define STB_SOMEFONT_FIRST_CHAR          STB_FONT_times_23_latin1_FIRST_CHAR
#define STB_SOMEFONT_NUM_CHARS           STB_FONT_times_23_latin1_NUM_CHARS
#define STB_SOMEFONT_LINE_SPACING        STB_FONT_times_23_latin1_LINE_SPACING
#endif

