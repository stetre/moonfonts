// Font generated by stb_font_inl_generator.c (4/1 bpp)
//
// Following instructions show how to use the only included font, whatever it is, in
// a generic way so you can replace it with any other font by changing the include.
// To use multiple fonts, replace STB_SOMEFONT_* below with STB_FONT_arial_bold_29_usascii_*,
// and separately install each font. Note that the CREATE function call has a
// totally different name; it's just 'stb_font_arial_bold_29_usascii'.
//
/* // Example usage:

static stb_fontchar fontdata[STB_SOMEFONT_NUM_CHARS];

static void init(void)
{
    // optionally replace both STB_SOMEFONT_BITMAP_HEIGHT with STB_SOMEFONT_BITMAP_HEIGHT_POW2
    static unsigned char fontpixels[STB_SOMEFONT_BITMAP_HEIGHT][STB_SOMEFONT_BITMAP_WIDTH];
    STB_SOMEFONT_CREATE(fontdata, fontpixels, STB_SOMEFONT_BITMAP_HEIGHT);
    ... create texture ...
    // for best results rendering 1:1 pixels texels, use nearest-neighbor sampling
    // if allowed to scale up, use bilerp
}

// This function positions characters on integer coordinates, and assumes 1:1 texels to pixels
// Appropriate if nearest-neighbor sampling is used
static void draw_string_integer(int x, int y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0, cd->t0); glVertex2i(x + cd->x0, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t0); glVertex2i(x + cd->x1, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t1); glVertex2i(x + cd->x1, y + cd->y1);
        glTexCoord2f(cd->s0, cd->t1); glVertex2i(x + cd->x0, y + cd->y1);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance_int;
    }
    glEnd();
}

// This function positions characters on float coordinates, and doesn't require 1:1 texels to pixels
// Appropriate if bilinear filtering is used
static void draw_string_float(float x, float y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0f, cd->t0f); glVertex2f(x + cd->x0f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t0f); glVertex2f(x + cd->x1f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t1f); glVertex2f(x + cd->x1f, y + cd->y1f);
        glTexCoord2f(cd->s0f, cd->t1f); glVertex2f(x + cd->x0f, y + cd->y1f);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance;
    }
    glEnd();
}
*/

#ifndef STB_FONTCHAR__TYPEDEF
#define STB_FONTCHAR__TYPEDEF
typedef struct
{
    // coordinates if using integer positioning
    float s0,t0,s1,t1;
    signed short x0,y0,x1,y1;
    int   advance_int;
    // coordinates if using floating positioning
    float s0f,t0f,s1f,t1f;
    float x0f,y0f,x1f,y1f;
    float advance;
} stb_fontchar;
#endif

#define STB_FONT_arial_bold_29_usascii_BITMAP_WIDTH         256
#define STB_FONT_arial_bold_29_usascii_BITMAP_HEIGHT        114
#define STB_FONT_arial_bold_29_usascii_BITMAP_HEIGHT_POW2   128

#define STB_FONT_arial_bold_29_usascii_FIRST_CHAR            32
#define STB_FONT_arial_bold_29_usascii_NUM_CHARS             95

#define STB_FONT_arial_bold_29_usascii_LINE_SPACING          19

static unsigned int stb__arial_bold_29_usascii_pixels[]={
    0x77540bb6,0x01bb201c,0x3605dd93,0x1ccc883e,0x27999995,0x0cccccc8,
    0x3bb32600,0x00002cde,0xdd973000,0xaa980579,0x00aaa602,0x459b7300,
    0x55510aaa,0x800dedcc,0x2bceeca9,0xedb98800,0x3b600bce,0x765cc004,
    0xff900bce,0x0ffffea0,0xff703fec,0x3ff505ff,0x2e5fff30,0xf15fffff,
    0x001fffff,0xffffffd7,0x0009ffff,0xfc8801f6,0xefffffff,0x03fff700,
    0x4c813ffe,0x3ffffee0,0xf31fff8e,0xffffb1ff,0x7fec407f,0x0dffffff,
    0xfffff900,0x3609ffff,0x3ff2006f,0x83ffffff,0xffa83ff8,0x7fd80fff,
    0x5fffff10,0x3e60dfd0,0xffff72ff,0x3fffe2bf,0x3fa600ff,0xdcacceff,
    0x001efffe,0x8039ff95,0xffffffe9,0x883fffff,0xff984fff,0x04ffa81f,
    0xfffffff7,0x3e63fffd,0xfffffeff,0xfff983ff,0xffffffff,0x3ffa202f,
    0xffffffff,0x00ffb85f,0x7fffff4c,0xd84fffff,0x7dcc40ff,0x07fd81ff,
    0x8135fff5,0xdd102ffa,0x3f66623d,0x35fff15f,0x67ffd403,0x7ffe4400,
    0x3fff6200,0xfd00dfff,0xd9579fff,0xfb03ffff,0x0dff90ff,0x3e213ffe,
    0xfea8cfff,0xfff31fff,0xfff935df,0x7fff441f,0xffecabcf,0xfffb01ff,
    0xffd9579f,0x2ff987ff,0x677fff40,0x1ffffeca,0xff01ffd4,0x20ffb05f,
    0x3fa06ffa,0x3f20000f,0x03fff15f,0x000eff98,0xd8077f4c,0xffffffff,
    0x0efffc85,0x50dfff90,0xfff83fff,0x709fff04,0xfff07fff,0x1fffe63f,
    0xfc8fffee,0xff900eff,0xdfff70bf,0x1ffff203,0xffb813fe,0xfffb80df,
    0x807ffc45,0x7fd82ffe,0x2a0dff70,0x2aa205ff,0x15ffc80a,0x74403fff,
    0x5e5cc0ef,0xff315551,0xb7fff305,0x443fff9f,0x7400ffff,0xfff82fff,
    0x307ffe64,0x455bfff5,0xff907ffc,0x17ffe63f,0x7c53ffe6,0x7f400fff,
    0x7ffec2ff,0x06fff401,0xfff81bf6,0x37ffa00f,0xe817ff40,0x07fd83ff,
    0x3f20bff7,0x3ffe603f,0xf15ffc82,0x7fe403ff,0x3ffffa20,0xf91fffaf,
    0x36bff709,0x7d45bdd7,0xff9804ff,0x27ffc84f,0xffc86ffc,0x3f67ffff,
    0x3fff506f,0x7c0fffe6,0x9fff35ff,0x89fff300,0x08804fff,0x2603fee0,
    0x0cc03fff,0x3607ff90,0x07fd83ff,0x3f60bff7,0x3ffe602f,0xf15ffc82,
    0x1ffc03ff,0xfd9fffd1,0x37c4ffff,0x07daffdc,0x800fffdc,0xff985fff,
    0x907fff1f,0x4fffffff,0xff306ffd,0x0bffe63f,0xffbb7fec,0xdfff001f,
    0x0017ffcc,0x5417fcc0,0x40002fff,0xffb05ffc,0x320ffb09,0x3fff04ff,
    0x417ffcc0,0xfff15ffc,0xe83fea03,0x3ff20dff,0x260ffc5f,0x407d9fff,
    0xd000fffd,0x3ffa0fff,0x980fff9c,0x22adfffa,0xff506ffc,0x0fffe63f,
    0xffcafff4,0xfffd000f,0x000fffdc,0xfc84ff80,0x5c0001ff,0xfff706ff,
    0xff07fd81,0x1fff107f,0x417ffcc0,0xfff15ffc,0xfa9bf603,0x7ffcc0ff,
    0x7f41fec4,0x7f407fff,0x3ff6007f,0xcfffb80f,0x7ffc05ff,0x80fffb84,
    0xff31fffd,0x9fff10bf,0xd801fff6,0xfffb0fff,0xfffff701,0x0dfb09ff,
    0x0001fffb,0xf107ffa8,0x3fec7dff,0x203fffaa,0x7cc07ffa,0x5ffc82ff,
    0x3e03fff1,0x40fffa4f,0x1ff42fff,0x77ffffdc,0x0fffd80b,0x20fffd00,
    0x2ffffff8,0x4c27ffc0,0x3ee0dfff,0xfff31fff,0x7ffec47f,0x001fffb1,
    0xffc9fffa,0xffffb81f,0xffb84fff,0x007ffe40,0x07ffe600,0xd8ffffd4,
    0x3fffe67f,0x80dff702,0xfc82fff9,0x03fff15f,0x7ffc4ffe,0x20fff880,
    0xff901ff8,0xc87fffff,0xff001fff,0x7ffec0df,0x4fff807f,0xd9ffffb0,
    0x263fffff,0xfcffffff,0x3ff25fff,0xdfff001f,0x5c17ffd4,0x4fffffff,
    0x7dc1ff98,0x440001ff,0x3f601fff,0x4cffb1ff,0x3f205fff,0x7ffcc05f,
    0xf15ffc82,0x3ff103ff,0x7cc1ffe6,0x007fd47f,0xffffff93,0x417ffdc5,
    0x02fffc40,0x009ffff5,0x3e209fff,0xfdffffff,0xbfff31ff,0x1dffffff,
    0x4017ffdc,0x3e25fff8,0x999883ff,0xf884fffa,0x17ffd43f,0x7c4072a0,
    0xfffb00ff,0xf99ff63f,0xff705fff,0x2fff980d,0xff15ffc8,0x21ff103f,
    0xff906ffa,0xb005fe8b,0x4c9fffbf,0x6fc46fff,0x807fff91,0xf801ffff,
    0x3f6204ff,0xfffaaeff,0xf35fff31,0xf981bfff,0xffc806ff,0x07fff44f,
    0x413ffe20,0x7ffcc5fe,0x0ffff406,0x7cc1ffe6,0x43fec2ff,0xf981fffb,
    0x7ffcc07f,0xf15ffc82,0x47fe03ff,0x7c40fffa,0x07ff23ff,0x7ffbbec0,
    0xf717fff4,0x1ffffbff,0x006ffe80,0x26009fff,0x4c7ffea0,0x00622fff,
    0x4c09fffd,0x7e40ffff,0x7fd405ff,0xb0ff904f,0x3ea05fff,0x5ffa86ff,
    0xfb0dff70,0x20fffa0f,0x7cc07ff8,0x5ffc82ff,0x3a03fff1,0x85fff12f,
    0xff72fffc,0x6c2ea609,0xf987ffe7,0xfd50cfff,0xa807ffff,0xfd003fff,
    0x3ea0009f,0x5fff31ff,0xffff9800,0x3ffee21d,0xffff883f,0xffb3109e,
    0x3fea09ff,0x5ffffc41,0x7ffff930,0x3609ff70,0x07fd84ff,0x3fe0bff9,
    0x3ffe600f,0xf15ffc82,0x9bf203ff,0xfdbcfffd,0x4ffedfff,0x3ed3ffa0,
    0xffc81fff,0xfffeefff,0xdab80fff,0xd000ffff,0x001dbfff,0xf98fffd4,
    0xfc8002ff,0xffffffff,0x3ea06fff,0xffffffff,0x102fffff,0xfff707ff,
    0xffffffff,0x40fff60b,0x7fd83ffd,0x3a0bff70,0x3fe602ff,0x15ffc82f,
    0x3e603fff,0xffffd11f,0xffffffdf,0xafffc807,0x20dff77d,0xfffffffa,
    0x43ffffff,0x04fffffe,0x3fffff20,0x3ffea000,0x005fff31,0x3ffffea0,
    0x804fffff,0xffffffe9,0x400dffff,0xfff505fe,0x1dffffff,0x7403ffa0,
    0x07fd83ff,0x3f20bff7,0x3ffe604f,0xf15ffc82,0x77f403ff,0x54f7fb20,
    0x2621bdfe,0x7ffffc41,0x202fffef,0xeffffec8,0x24ffffdd,0x004ffffd,
    0x0ffffec4,0x23fff500,0x0002fff9,0x3ffffb22,0x2e2001df,0xcdfffffe,
    0x40ff9001,0xeffffed8,0x813fe602,0x7fd82ffe,0x220dff50,0x3fe606ff,
    0x15ffc82f,0x7cc03fff,0x7dc0005f,0xffffa85f,0x4004ffff,0x7ff54099,
    0x002aaa20,0x80009880,0x4ccc1998,0x26600000,0x13300000,0x00aa6000,
    0xfb800cc4,0x0bffe01f,0x7fd41ff6,0x403ff207,0xfc81fffb,0x03fff15f,
    0x001effb8,0x807ffec4,0x2dffffb8,0x04b80000,0x00000000,0x00000000,
    0x00000000,0x3a000000,0xffec985f,0x307fd81f,0x8839dfff,0x7ff643ff,
    0xfd9950ff,0x37ffe2bf,0xfff700cc,0x4c41379d,0x00efffcb,0x00001fd0,
    0x00000000,0x00000000,0x00000000,0x00000000,0x2a07fe60,0xfb06ffff,
    0x7ffff40f,0x7f46fc82,0x3fee5fff,0xfff15fff,0x74c01fff,0xffffffff,
    0x04ffffff,0x00003ec0,0x00000000,0x00000000,0x00000000,0x00000000,
    0x3ea0dfb0,0xffb01eff,0x17fff4c0,0xff897fc4,0x3fee0eff,0xfff15fff,
    0x93001fff,0xfffffffd,0x700017df,0x00000009,0x00000000,0x00000000,
    0x00000000,0x54000000,0x0355101a,0xa9802aa8,0x4c35500a,0x999880aa,
    0x26666099,0xa9980019,0x00009aaa,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x70000000,0x3ba601dd,0x4407bae3,
    0x1000acba,0x30015995,0x555459b7,0x39993000,0x03799530,0x06664c00,
    0x009bca98,0x00019991,0x55555553,0x39db7055,0x80176c40,0x01ceedb8,
    0x00bca880,0xc8059991,0xb95102cc,0x644079dd,0x37ec01cc,0x7f45ff70,
    0xfffe980f,0x7fdc02ff,0x3203ffff,0xf9dfffff,0xff5000ff,0xffffc85f,
    0xa8000dff,0xffc81fff,0xf981efff,0xfd8001ff,0x6fffffff,0x0ffffff4,
    0xa800ffb8,0x3fffffff,0x3ffff200,0x7ffc41df,0x427ffc04,0xfffffff9,
    0xfff882ff,0x9027fc02,0x437fc3ff,0xfffffff9,0xffff902f,0xf905ffff,
    0xfdffffff,0x3ea001ff,0x3fff22ff,0x005fffff,0x6c1fffa8,0xffffffff,
    0x00fffcc2,0x7fffffc0,0x3fea6fff,0xf886ff9c,0xfff8803f,0x01fffedf,
    0xffffffd8,0x3ffe20ff,0x227ffc04,0xfffffffa,0x7c41ffff,0x3fe602ff,
    0xf99ffa02,0xbfffc85f,0xf886ffeb,0xfffbaeff,0x5ffffc46,0x0ffffea8,
    0x25fff500,0xd9aefff8,0x54002fff,0x3fea1fff,0x6fffdbef,0x000fffcc,
    0x3fffffe2,0x3ff66fff,0xfb81ffb0,0xfffa800f,0x7013ff61,0xff95dfff,
    0x27ffc4bf,0xfd13ffe0,0xfd737bff,0xeee88fff,0x803fee02,0x0ffea5ff,
    0x7d47fff1,0x7ffdc2ff,0xc87ffea0,0xfff82fff,0xfff5000f,0xf07ffea5,
    0xfa8007ff,0x1bffa1ff,0x7cc5fff7,0x7cc001ff,0x4ffd007f,0x3fe21ffc,
    0x3fff5003,0x3a02ffdc,0x3ffe45ff,0xf809fff1,0x3ffe24ff,0x03fffd03,
    0xfb1ff600,0xffffffff,0x3ee1ffff,0x2fff40ff,0xff30f2a2,0x07ffec5f,
    0x8007ffec,0xff52fffa,0x209ffb0f,0xff52cdb9,0x227ffc3f,0x3e65fff8,
    0x37b951ff,0x401bfee0,0x87ff27fe,0xf1000ffb,0x3ffe2bff,0x07ffea02,
    0xfff88331,0x527ffc04,0x3aa05fff,0x055542ee,0xffd8bff0,0xffffffff,
    0xfff90fff,0x400dffb0,0x3fa0fffc,0x1fff706f,0x4bffea00,0x3e21fff8,
    0xfffc81ff,0x1fffbdff,0xfd05fff1,0x57ffccdf,0x83fffffe,0x0aa8cffc,
    0x3f61ffb0,0x007ff10f,0xffcfffd8,0x3fee00ef,0x3ffe2007,0x127ffc04,
    0x0017ffff,0x9817ffc4,0x7f7643ff,0xfffeeeff,0x0dff90ee,0xb700dff9,
    0xffe87fff,0x01fff505,0xc8bffea0,0xffebcfff,0xfffffc86,0x21ffffff,
    0xfff83fff,0x3ffffe67,0x43ffffff,0xfffffffe,0x567fd40d,0x03fee6ff,
    0xfffff100,0xffc801df,0x82dffd8f,0x7c04fff8,0x7fff44ff,0x4401bdff,
    0xff702fff,0xf33ff403,0x0dffb09f,0xf880fff9,0xffd82fff,0x01fffb06,
    0x70bffea0,0x09ffffff,0x517ffff1,0x743ffffd,0x7ffcc6ff,0xbffff30f,
    0x1ffff913,0x7ffffffc,0x7ff40fff,0x7ff12fff,0xfffd1000,0x3ff600bf,
    0x4fffffff,0x2027ffc4,0x7fc44fff,0xcfffffff,0x02fff880,0x7fc40ffb,
    0x3a0ffea5,0xfffc86ff,0x3fffe600,0x81fffc84,0x5000ffff,0xffb85fff,
    0x640dffff,0xffe82fff,0x2fffee1f,0x1ffffd98,0xf50ffff3,0x3ffe67ff,
    0x5ffffbdf,0x321deeb8,0x7d4000ff,0x00efffff,0xdfffffe8,0x3e23ffff,
    0x7ffc04ff,0xffffd884,0x440effff,0xbff02fff,0xf927fcc0,0x0dffd03f,
    0x4c01fff9,0x21efffbb,0xb32efff9,0x2001ffff,0x3f22fffa,0xefffcdff,
    0x203fff60,0x7f41fffb,0xffffffff,0x09fff30f,0x65c53ffe,0x0fffec1d,
    0x2a3ff880,0x7dc0dffe,0x5fffefff,0xffe837b5,0xfffb10ef,0x813ffe21,
    0x2604fff8,0xffffffeb,0x0bffe20f,0x2aa0ffe2,0xfeaacffc,0x3ff62abf,
    0x007ffc86,0x3f627ff4,0xffffffff,0xff5000ff,0x87ffea5f,0x3fa4ffe8,
    0x3fff506f,0xeffffe88,0x3fe67ffd,0x0bffd02f,0x00bffea0,0xffb87fe4,
    0x3fe26fff,0xfffe88ef,0x7ec5ffdb,0x7ffd43ff,0x409fff11,0x1004fff8,
    0x47ffffb5,0xfa82fff8,0xffffd81f,0xffffffff,0x90dff90f,0xfc800dff,
    0xffffd87f,0x80fffbef,0x91fffa80,0xfff90dff,0xfa82fff4,0x799501ff,
    0x7ccfff91,0xdffd02ff,0x13ffe200,0xff93fe20,0xf53ffb8e,0x7ffc43ff,
    0x7e42ffff,0x7ffc40ff,0x409fff12,0x2624fff8,0x3ffe6019,0x20bffe25,
    0xfffb07fc,0xffffffff,0x1fff21ff,0x26217ff6,0x81fffa81,0xff53dfdb,
    0x03ffaa1f,0x3fa1fff7,0x1fffa84f,0x3f20fffb,0x3f6001ff,0x13ffe66f,
    0x40427ffc,0xc803fff9,0x29ff10ff,0xdffb5ff9,0xffffff50,0x42fffb81,
    0x3fe2fff8,0x3ffe605f,0x803fffa3,0x3fe27ffe,0x505fe82f,0xf955dff7,
    0x7d45559f,0x27ffc1ff,0x3f617ffa,0x3ee000ff,0x0bffea7f,0x7fecfff9,
    0x90fffc87,0xfff01fff,0x21e5543f,0x3e64fff8,0xfff885ff,0xf70fff93,
    0xff8805ff,0xff8ffe64,0x701fffb6,0xf509ffff,0xfffa89ff,0x40bfffa1,
    0x3f22fffc,0xfff103ff,0x217ffc4b,0x3e603ff8,0x807ff24f,0x3fee5fff,
    0x17ffe41f,0x7d4dfff3,0x6ffc83de,0x54bbffe6,0x3ff27fff,0x9bffa22f,
    0x7dc5fffa,0x3ff21fff,0x1fffb10f,0x117fffcc,0x3ee3fffb,0x3ffa23ff,
    0x07fe400f,0x3fe27ff3,0x889fff75,0x83fffffd,0x3f61fffe,0x3ffee0ff,
    0xfff710ae,0x7fffd41f,0xfffd511b,0x217ffc47,0x3ee01ffa,0x901ff62f,
    0xfffbdfff,0xdffff10b,0x4c3ffffd,0xcbabffff,0x7ff44fff,0x2fffffff,
    0x37bfffe6,0x7f43ffff,0xfffeceff,0x3ffe61ff,0x44ffffdf,0xcdfffff9,
    0x3e25ffff,0xfffcefff,0x27fc403f,0x7fcd7fe2,0x9fffff14,0xfffffffd,
    0x7ffd41bf,0x43ffffdf,0xfffffff8,0xd84fffff,0xffefffff,0x3e20ffff,
    0x07fe42ff,0x7fc1ff90,0x7fff4406,0xf501ffff,0x7fffffff,0xffffffb0,
    0xf981ffff,0x4fffffff,0xffffffa8,0xfff985ff,0xfffbffff,0x7ffffe41,
    0x7fcc0dff,0xffffffbf,0x7fffcc0e,0xc804ffff,0xbffe80ff,0x3fea2ffd,
    0xdfffffff,0xfc85fffc,0x05ffffff,0xffffffd3,0xd101bfff,0xffffffff,
    0xfff881df,0x3a037f42,0x013fe27f,0x06ffffe4,0x3ffffa60,0x3fff201e,
    0x100dffff,0x07bffffb,0x7ffffecc,0x3fff6203,0x81fff89e,0x03effffb,
    0x3faafff3,0xfb100dff,0x1005dfff,0x3fe609ff,0xfd885fff,0x262effff,
    0xffd500ef,0xfd8807ff,0x03efffff,0xfffffea8,0xfff880ce,0x2a00d542,
    0x006aa22a,0x26000310,0x2aa60009,0x0660009a,0x00133100,0x33000098,
    0x00c40001,0xd5000660,0x66dc401d,0x20198802,0x00988008,0x00099980,
    0x00006660,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x8337b6e2,0xccccccca,0x224ccccc,
    0x2e000ccc,0x333204cc,0x3999302c,0x4006665c,0x32e0cccb,0x664402cc,
    0x999930cc,0x99999999,0x33322399,0x3332e00c,0x00733222,0x321ccc88,
    0xcccccccc,0x332e001a,0x700f3320,0x33322599,0x332e02cc,0x06aaa3cc,
    0x01999500,0x3fffffa2,0x3fffff21,0x7fffffff,0x8007ffe6,0xf880fffc,
    0xff706fff,0x17ffe43f,0x51bffe20,0x6401ffff,0x3fee4fff,0xffffffff,
    0x3f62ffff,0xfff304ff,0x17ffc41f,0x25fff100,0xfffffff8,0xb803ffff,
    0x3ffe1fff,0x53ffa01f,0x05fffff8,0x4bfffff1,0x64005fff,0xff500fff,
    0xffc8fdff,0xffffffff,0x3ffe67ff,0x3ffea001,0xfffffa82,0x4c7ffd80,
    0x7d405fff,0xfffd83ff,0x1ffff304,0x7fffffdc,0xffffffff,0x07fffe22,
    0xf10bfffa,0x7c4005ff,0xffff12ff,0xffffffff,0x7fffcc0d,0x81bfffe1,
    0xfff14ffe,0x3fea0fff,0x3ffe5fff,0x7ffe4005,0x01fff900,0x3333332a,
    0x26ffffcc,0x2001fff9,0xfd84fff8,0xff82ffff,0x0fffe85f,0x203fff60,
    0xd81ffff8,0x664c2fff,0xcffffccc,0x7d41cccc,0x7ffdc6ff,0x02fff885,
    0x44bffe20,0xccccefff,0xa82ffffe,0x3e1fffff,0xfd03ffff,0x3fffe29f,
    0xfffc81ff,0x17ffe5ff,0x01fff900,0x8001bff6,0x260ffffd,0x7c001fff,
    0xffff86ff,0x7ffcc4ff,0x03fffc83,0xfb81bffe,0x7ffd45ff,0x1bffe005,
    0x13fffd80,0xf101ffff,0x7c4005ff,0x9fff12ff,0x993ffee0,0x1ffffffd,
    0x03fffffe,0x7fc53ffa,0xfe83ffff,0x3fe5ffff,0x7fe4005f,0x7ff54c0f,
    0x2e001aae,0x7cc1ffff,0x5554c1ff,0x263ffec1,0x46ffdfff,0xf981fffa,
    0xfff505ff,0x2fffe807,0x8003fffa,0x22006fff,0xffd8ffff,0x5fff103f,
    0x220b36e6,0xfff12fff,0xf3fffc09,0x3fffdfff,0x2ffffffc,0xff8a7ff4,
    0x7c45ffdf,0x3e5ffdff,0x7e4005ff,0x7ffec0ff,0x5003ffff,0xf305ffff,
    0x7ffd43ff,0x0fffdc0e,0xfff5dff7,0xd03ffe41,0xffb01fff,0xfff9801f,
    0x007fff76,0x4006fff8,0xfffefffb,0x2fffe206,0x45fffffc,0xff12fff8,
    0x3fff409f,0xfff53dff,0x7fffffc3,0x8a7ff41f,0x47ffbfff,0x5ffddffa,
    0x70017ffe,0xfffb0fff,0x1007ffff,0x2609ffff,0xfff31fff,0x7fff301d,
    0x7fc67fec,0x817ffa2f,0xff83fffb,0xfff9005f,0x000dfff9,0xd000dfff,
    0x03ffffff,0x7fffffc4,0x223fffff,0xfff12fff,0x9bffe609,0x87ffea2e,
    0x6fffcfff,0xff8a7ff4,0x322ffeaf,0x25ffdbff,0x54005fff,0xfea987ff,
    0x4401aaef,0x2605fffe,0xfff89fff,0x93ffe00f,0x9ffd2fff,0x880fffe2,
    0x7fd46fff,0x3ffa002f,0x8001ffff,0x98006fff,0x403fffff,0x50dffff8,
    0x7fc4dfff,0x3bfff12f,0xffff7333,0x0fffd409,0xfff95fff,0xf8a7ff47,
    0x24ffcaff,0x5ffd9fff,0x30017ffe,0x7fec0dff,0x3fff6006,0x3ffe600e,
    0x401fffea,0xfff36ffd,0x7cdbff21,0x7fec01ff,0x03fff20f,0xfffffa80,
    0xdfff0004,0x3fffa000,0x7ffc400f,0x227ffc86,0xfff12fff,0xffffffff,
    0x7fd401ff,0x22bffe1f,0xffd0fffe,0x2abffe29,0x2fff36ff,0x3ffe5ffd,
    0x2ffcc005,0x200dffb0,0x401ffffb,0xfffffff9,0x8fffb803,0x3fe66ffb,
    0x00fffb8f,0xff1fffd4,0xffb000bf,0x3e0001df,0xfa8006ff,0x4404ffff,
    0xffb84fff,0x44bffe27,0xffffffff,0x5401ffff,0x3ffe1fff,0x3abfff52,
    0x5fff14ff,0xff71fff1,0xff97ff6b,0x7fc4005f,0x01bff604,0x00bfffea,
    0x3fffffe6,0xfffa806f,0x7fc4ffd9,0x806ffdaf,0xff56fff8,0xff30005f,
    0x7fc0007f,0x7fc4006f,0x201fffff,0xfb83fff8,0x5fff10ff,0x3fffffe2,
    0x800beeef,0x3fe1fffa,0x2bfff62f,0xfff14ffe,0x3f6bffa5,0x7cbffb3f,
    0xff8005ff,0x01bff604,0x007ffff3,0x3fffffe6,0x7fc402ff,0x6c2fffcf,
    0x04fffcff,0xf91fffb0,0x3e6000ff,0x3e0003ff,0x7ec006ff,0x06fffeff,
    0x2e0bffe2,0xfff10fff,0x013ffe25,0x87ffea00,0x3fe22fff,0xf14ffeef,
    0x33ff25ff,0xbffb1fff,0x4002fffc,0x3ff603fe,0x3fffa206,0x3ffe6005,
    0x00fffdbf,0x7ffffff4,0x7ffffdc0,0xfff5002f,0x0009fff7,0x000fffe6,
    0x2006fff8,0xfd8ffffa,0xfff104ff,0x21fff705,0xff12fff8,0xf500009f,
    0x17ffc3ff,0x3fffffee,0x2a5fff14,0x367fffff,0x17ffe5ff,0xd80bfa00,
    0x3ff606ff,0x3e6000ef,0x9fff13ff,0xfffffc80,0xfffff986,0x3ffe000f,
    0x0001ffff,0x0007fff3,0x88037ffc,0xff12ffff,0xfff103ff,0x21fff705,
    0xff12fff8,0xf500009f,0x17ffc3ff,0xa7fffff4,0xff12fff8,0x7fecbfff,
    0x0017ffe5,0xffd80262,0x5ffff706,0x33333333,0x87ffe613,0x2a00fffc,
    0xf03fffff,0x800dffff,0x06fffffc,0x0fffe600,0x06fff800,0xb8bfffb0,
    0xff886fff,0x0fffb82f,0x3e25fff1,0xa80004ff,0x3ffe1fff,0xfffff982,
    0x745fff14,0x3f63ffff,0x277ffe5f,0x19999999,0xfd81332a,0xffffb06f,
    0xffffffff,0x3ffe65ff,0x817ffe21,0x01fffff8,0x009ffffb,0x3fffff98,
    0x3ffe6000,0x3ffe0003,0xffffa806,0x44fffe80,0xfb82fff8,0x5fff10ff,
    0x0013ffe2,0xf87ffea0,0xfff902ff,0x8bffe29f,0x361ffffc,0x3fffe5ff,
    0xffffffff,0xd81ffee7,0xfffb06ff,0xffffffff,0x3fe65fff,0x0fffdc1f,
    0x40ffffd0,0x002ffffb,0x01ffffe8,0x0fffe600,0x06fff800,0x81ffffc4,
    0x221ffff9,0xffb82fff,0x25fff10f,0x0004fff8,0x3e1fffa8,0xfff102ff,
    0x8bffe29f,0x7ec7fffa,0x3ffffe5f,0x7fffffff,0xfd81ffee,0xffffb06f,
    0xffffffff,0x3ffe65ff,0x206ffe81,0x2205fffc,0x8000ffff,0x0006fffc,
    0x001fffcc,0xc80dfff0,0x7e406fff,0x3ffe26ff,0x10fffb82,0x3fe25fff,
    0xfa80004f,0x0bffe1ff,0xf14fffb8,0x7ffc45ff,0xff2ffec5,0xffffffff,
    0x3ffdcfff,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x9900b332,0x66644999,0x900b3322,
    0x32a20799,0x333202bc,0xcccccccc,0x3333322c,0xcccccccc,0x33333222,
    0x400aabcc,0xcccccccc,0x66401abc,0xabcccccc,0xccb8000a,0xca80001c,
    0x6ee5402c,0x4555302c,0xaaaaaaaa,0x0000aaaa,0x4c055544,0x8aaa22aa,
    0xfff1ccc8,0x7fffec0b,0x44fffe61,0x7fc04fff,0xffffc85f,0x7fc41eff,
    0xffffffff,0xffff14ff,0xffffffff,0x7fffc49f,0x3fffffff,0xffffff10,
    0x1bffffff,0xffffff10,0x09ffffff,0x27fffc40,0x3ffe6000,0xffffd303,
    0xffc85dff,0x3fffffa7,0xb1ffffff,0xff980039,0x27ffb82f,0xff30fffb,
    0x417ffe5f,0x4c2ffffc,0xfff13fff,0x45fff809,0xfffffffc,0x3ffe20ff,
    0xffffffff,0xfffff14f,0xffffffff,0x7ffffc49,0xefffffff,0x7ffffc40,
    0xffffffff,0x7fffc40e,0xffffffff,0xfff9004f,0x740001ff,0xff983fff,
    0xffffffff,0xfe9fff22,0xffffffff,0x5bffb1ff,0x0bffe600,0xffb9ffee,
    0x25fff30f,0xffc85fff,0xfff982ff,0x809fff13,0x3fe65fff,0xfffdbbef,
    0x33bffe24,0x2ccccccc,0x999dfff1,0x45999999,0xcccefff8,0x44ffffec,
    0xcccefff8,0x3ffffdcc,0x6677ffc4,0xffffeccc,0xfffff800,0xff90003f,
    0xfff887ff,0xffea88bf,0x74fff90f,0xffffffff,0xfffb0fff,0x7cc017df,
    0x7ffb82ff,0x7cc3ffee,0x8bfff1ff,0x302ffffb,0x3fe27fff,0x2fffc04f,
    0xfe81fff9,0x13ffe27f,0x04fff880,0x04fff880,0x443fffd3,0x3ea04fff,
    0x7ffc45ff,0x0bffee04,0xffffff50,0xfff3000d,0xfffa87ff,0x12fff983,
    0x3e200333,0x3ffaa2ff,0x981cffff,0xffb82fff,0x32066627,0x54bfff0f,
    0x2602ffff,0xfff13fff,0x25fff809,0xffc86ffd,0x09fff10f,0x027ffc40,
    0x027ffc40,0x7c4bfff5,0x7ff404ff,0x027ffc47,0xd807fff3,0x1fffbeff,
    0x7ffff400,0x037f543f,0x40009ffd,0xf9304ffc,0x45bfffff,0xfb82fff9,
    0xf9fe007f,0xffff55ff,0x3fff9807,0xf809fff1,0xd80885ff,0x3ffe27ff,
    0x3ffe2004,0xfff88004,0x13fff404,0xff809fff,0x27ffc47f,0x401fff50,
    0xff8bfff8,0x3ff2004f,0x8003ffec,0x0002fff8,0x5001dff3,0x2dfffffd,
    0xfb82fff9,0x2fe9807f,0x3fe77ffe,0xff9804ff,0x3bfff13f,0xff333333,
    0x7ffc00bf,0x013ffe25,0xaadfff88,0x42aaaaaa,0x6c04fff8,0xfff10fff,
    0x2fffdc09,0x2677ffe2,0x5fffb999,0xe87ffdc0,0xfa800fff,0x007ffd6f,
    0x00fffe88,0x003ffb00,0x37fffc98,0xff905fff,0xf85d100f,0xfffffeff,
    0x3fff9806,0xfffffff1,0xbfffffff,0x8bfff200,0xfffffff8,0x3e22ffff,
    0xffffffff,0x7fc47fff,0x7ffe404f,0xddffff11,0xffffdddd,0xfffff883,
    0x4fffffff,0x2a6ffe80,0x74403fff,0x07ffd1ff,0x17fff4c0,0x06ffa800,
    0x7fffe440,0x905fff37,0x7c000fff,0xffffffff,0x7ffcc03f,0xffffff13,
    0xffffffff,0xbfff900b,0xffffff88,0x222fffff,0xffffffff,0x7c47ffff,
    0x7fdc04ff,0xfffff12f,0xffffffff,0xfffff105,0x7fffffff,0x23fff980,
    0x6406fff8,0x0fffa4ff,0x1ffff440,0x05ffd000,0x3ffff6a0,0x7fff13ff,
    0x000fffb0,0x67fffffc,0x2600ffff,0xfff13fff,0xdddddddf,0xfc80bfff,
    0x7fc40eff,0xffffffff,0x3fffe22f,0xeeeeeeee,0x027ffc45,0x7c4bffee,
    0xffffffff,0xff100bdf,0xffffffff,0x3203dfff,0x7fec0fff,0x8dff501f,
    0xe8803ffe,0xcca82fff,0x01ffea04,0xffffff93,0x8bfff05d,0x3267fff9,
    0x46eee24c,0xf93fffff,0x7fcc0dff,0x09fff13f,0x3205fff8,0xf880efff,
    0x99999dff,0x3ffe2099,0xfff88004,0x8fffe404,0xca9dfff8,0x2201efff,
    0xf7104fff,0x3ffe0bff,0xffcaaaae,0x1fff884f,0x5401fff4,0xff902fff,
    0x027ff40f,0xbffffff9,0x6ffff403,0x27ffffdb,0xff10fffb,0x13fffe5f,
    0x2607fffd,0xfff13fff,0x05fff809,0x201dfff9,0x2004fff8,0x8004fff8,
    0x6c04fff8,0xfff10fff,0x1ffffa89,0x809fff10,0x7d40fffc,0xffffffff,
    0x7dc0ffff,0xffeeeeff,0x3f204eef,0x1fff205f,0xb00fffcc,0x0019ffff,
    0xfffffff5,0x7fdcfff7,0x25fff10f,0xffa85fff,0xfff980ff,0x809fff13,
    0xffc85fff,0x3fe200ef,0x3fe2004f,0xff88004f,0x3ffe204f,0x213ffe27,
    0x880ffffc,0x7dc04fff,0x7fff42ff,0xffffffff,0x7ffdc3ff,0xffffffff,
    0x13ff606f,0xf707ffc8,0xbefd80df,0x7ff54000,0x27ff98df,0xff10fffb,
    0x417ffe5f,0xf985fffe,0x9fff13ff,0x545fff80,0x4400efff,0x22004fff,
    0x88004fff,0x3f204fff,0x3ffe23ff,0x0bfffd04,0xd809fff1,0x3fe61fff,
    0xeeeeeeef,0x7dc6fffe,0xffffffff,0x26206fff,0xb06f8009,0x02c80bff,
    0x00018800,0x20bfff00,0x4c2ffff9,0xfff13fff,0x25fff809,0xaacffff8,
    0x3fe22aaa,0x3fe2004f,0x999999df,0x3fe21999,0xd99999df,0x7fc46fff,
    0xffff304f,0x9dfff885,0xffd99999,0x0fffe47f,0x887fff60,0xf9999999,
    0x2a009cff,0x27d403cc,0x0003fff8,0x00000000,0x3205fff8,0x3e60ffff,
    0x9fff13ff,0x2e5fff80,0xffffffff,0xfff10fff,0x7ffc4009,0xffffffff,
    0x3ffe27ff,0xffffffff,0x7ffc41ff,0x3ffff204,0x3ffffe20,0xffffffff,
    0x037ffc3f,0x0027ffd4,0xfb007ffd,0x07fdc0df,0x0017ffc4,0x00000000,
    0x102fffc0,0x7ccbffff,0x9fff13ff,0x3a5fff80,0xffffffff,0xfff10fff,
    0x7ffc4009,0xffffffff,0x3ffe27ff,0xffffffff,0x4fff882e,0x127fff40,
    0xffffffff,0xa8bfffff,0xff003fff,0x3fa001ff,0x6ffd803f,0x7cc036e0,
    0x000001ff,0xf8000000,0x7fdc05ff,0x7fff32ff,0xf013ffe2,0x3ffe2bff,
    0xffffffff,0x09fff10f,0x7ffffc40,0xffffffff,0x3ffffe27,0x203defff,
    0x4c04fff8,0xff11ffff,0xffffffff,0xfffb039d,0x3fff2001,0x07ffd003,
    0x000dffb0,0x0007ffd4,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x66ee5c40,
    0x9bb95002,0xdca88015,0xcb9800cc,0x100001bc,0x0af32a20,0x54c0d554,
    0x22aa882a,0x36e62aa8,0x12aa882c,0x54417995,0xcc800acc,0x2aaa200c,
    0x21aaa982,0x59932aa8,0x55555541,0x2a62aaaa,0x0aaa602a,0x3203ddb0,
    0xcccccccc,0x332e4ccc,0xfffffb84,0xfd100fff,0x07ffffff,0x3fffffea,
    0x3ffee04f,0x20005fff,0x7ff446c8,0x640dffff,0xfffe86ff,0xf137fe40,
    0xffff91ff,0x77fd41bf,0x8effffe8,0x0fffffe9,0x1007ffc0,0x7c45fffd,
    0x3fe60fff,0x21ffff9f,0xffffffff,0x3ffee7ff,0x40bffd01,0xff05fffa,
    0xffffffff,0x3fff4fff,0x3fbfffea,0xffb05fff,0x5fffffff,0xffffffa8,
    0xffc81fff,0x06ffffff,0x13ffed40,0xfffffffd,0x7ffcc1ff,0x0bfffe20,
    0x7fc47ffd,0xffffffef,0x3fffea3f,0xfeffffff,0x06ffffff,0x26007ffc,
    0x3ff66fff,0x77ffcc2f,0x7ffc6fff,0x7fffffff,0x2613ffe2,0x3fa02fff,
    0xfff80fff,0xffffffff,0xb1fffa7f,0xfffa89ff,0x457ffd42,0x224fffa8,
    0xea8bffff,0x7ffcc6ff,0x2fffb89d,0xffffeb80,0x2bbfffa7,0x7c5fffea,
    0x3ffea2ff,0x87ffe24f,0x51dffff8,0x7fd4dfff,0xffe88bff,0xffe98cff,
    0x03ffe00f,0x2b3ffee0,0xff984fff,0x543dbeff,0xfffaaaaa,0x43ffe44f,
    0x3ea07ffc,0xcc84ffff,0xcccccccc,0x1fffa4cc,0x1a81bffd,0xfd077310,
    0x0fffdcbf,0xfd877be6,0x37fec0ff,0xfffffc88,0x9fff33ff,0x645fff90,
    0x3fff25ff,0x11bfee6f,0xffb0dfff,0x227ffd4f,0x7d45fffa,0x3ffe01ff,
    0xffffd000,0xff301dff,0xfc8001ff,0xfff985ff,0xd027ffc2,0x01fff9ff,
    0x37fe4000,0x33bffff2,0xff730002,0x837fe4bf,0x50bffd00,0x7ecc1fff,
    0x41dfffff,0xf981fffc,0x9ffea4ff,0xb0ffeffe,0xfff889ff,0x50fffb83,
    0xff985fff,0x97ffcc3f,0xfffeeeed,0xf106eeee,0x203fffff,0x4004fff9,
    0xd00efffc,0x7ffd4bff,0x3afff300,0x200003ff,0x7fc45ffb,0x0dffffff,
    0x3fffae60,0x3ff65fff,0x77ffc005,0xfffeeeee,0xdfffffb1,0x1fffa017,
    0x7fc5fff8,0xfceff89f,0x883fff2f,0xffb83fff,0x83fff50f,0x7c42fff9,
    0xfffff2ff,0xffffffff,0x1ffffd40,0x005fff30,0x007fffdc,0x3f61fff7,
    0x53ff605f,0x7ffc7ffa,0xffffffff,0x20ffe67f,0xffffffd9,0xfffc81ff,
    0x25ffedff,0x22005ffe,0xffffffff,0xffb1ffff,0xffd003bf,0x237ff40b,
    0xbffabffd,0x7ffacffa,0xb82fff88,0xfff50fff,0x42fff981,0xfff2fff8,
    0xffffffff,0x7ffcc0ff,0x3ffe604f,0xffff5002,0xafff8803,0xf302fff8,
    0x17ffc1ff,0xffffffff,0x000fffff,0xfffffb71,0x1cfffb89,0xffd97ff6,
    0x3ffe0106,0x9999999c,0x9ffffb09,0x0fffc803,0x545fff88,0xf1ffceff,
    0x109ff9df,0xff705fff,0x03ffea1f,0xf883fff3,0x555552ff,0x55557fff,
    0x3ffffa20,0x3fff302f,0x5ffff300,0x2f7ff200,0x3ff607ff,0xff37fe45,
    0xffffffff,0x4c400fff,0x07fff4c0,0xffd0bffd,0x207ffe4b,0x3fa2eff8,
    0xea80886f,0x0befffff,0xa82fffa8,0x7fc43fff,0x3ff67fff,0xff882fff,
    0x0fffb82f,0xf981fff5,0x7ffc41ff,0x003ffe02,0x7fffffec,0x1fff980f,
    0x1ffffc40,0xfdfff300,0x3ffe209f,0x997ffcc2,0x99999999,0xf8801999,
    0x7ffb85ff,0x3e62fffc,0x3ffea6ff,0x8bffee0d,0x7ec1fffc,0xfffda85f,
    0x3e61cfff,0x3fa61eff,0xfffd80ff,0x3fffee5f,0x05fff107,0x3ea1fff7,
    0x7ffcc0ff,0x017ffc41,0xf5001fff,0xbfff79ff,0x403fff30,0x98bfffe8,
    0xfd009999,0x2201ffff,0x13330199,0xfb800000,0xffcabdff,0x67ffe45f,
    0x46ffffc9,0xfedffffd,0x7ffc46ff,0x2fffdbdf,0x3ffff260,0x3fff26ff,
    0x3ffffeef,0x47ffff70,0x105ffff9,0xff705fff,0x03ffea1f,0xf883fff3,
    0x3ffe02ff,0x77ffc400,0x985fffd0,0x3ee01fff,0xffffffff,0xfff703ff,
    0x000000bf,0xffd80000,0x0effffff,0x7fffffc4,0x7447ffef,0xffffffff,
    0xfffff981,0x71004fff,0xfb8fffff,0x4fffffff,0x07fffe20,0x2205ffff,
    0xffb82fff,0x81fff50f,0x7c41fff9,0x3ffe02ff,0x17ffec00,0x4c1ffff1,
    0x3f201fff,0xffffffff,0xfff103ff,0x0000005f,0xfb880000,0x00cfffff,
    0x13dffff5,0xff905fff,0x4401bfff,0x03dffffd,0x50ffd500,0x03dffffb,
    0xfb0fffd0,0x3fe201ff,0x0fffb82f,0xf981fff5,0x7ffc41ff,0x802aaa02,
    0xfb84fffb,0x3ffe65ff,0x3ffff201,0x3fffffff,0x001fff20,0x00000000,
    0x40013310,0x31000099,0x00310003,0x22024c00,0x00000001,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x505e8800,0x332e1999,0x01bca884,0x5dddc422,0x9ddb12bb,0x33333330,
    0x13333333,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x22000000,0x3fff906f,0xff51fffa,0x2239dfff,0xffff11fa,0x7ffccbff,
    0x3ffffe60,0xffffffff,0x0000003f,0x00000000,0x00000000,0x00000000,
    0x00000000,0x20000000,0x966df2e8,0xffd1fffc,0x7ffffc4f,0xffffffff,
    0xffffff11,0x264ff98b,0xffffffff,0x03ffffff,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x3fea0000,0x91ffeefe,0x3ffa3fff,
    0x3f7bfe27,0xffffffff,0xffffff11,0x888dd50b,0x88888888,0x00008888,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x3ff6e600,
    0xff51ceff,0x89bff61f,0x7ffe4c1e,0x444441ef,0x00000008,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x22000000,0xff985ffe,
    0x0017fee7,0x00000153,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x3fb3fa00,0x3e66ff84,0x0000003f,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x3fee0000,
    0x0001ff98,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x03715c00,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,
};

static signed short stb__arial_bold_29_usascii_x[95]={ 0,2,1,0,0,1,1,1,1,0,0,1,1,0,
1,-1,1,2,0,0,0,1,1,1,1,0,2,2,1,1,1,1,0,0,1,1,1,1,1,1,1,1,0,1,
1,1,1,1,1,1,1,0,0,1,-1,0,0,-1,0,1,-1,0,1,-1,0,0,1,1,1,0,0,1,1,1,
-2,1,1,1,1,1,1,1,1,0,0,1,0,0,0,0,0,0,2,0,0, };
static signed short stb__arial_bold_29_usascii_y[95]={ 23,4,4,4,2,4,4,4,4,4,4,7,19,14,
19,4,4,4,4,4,4,4,4,4,4,4,9,9,6,9,6,4,4,4,4,4,4,4,4,4,4,4,4,4,
4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,25,4,9,4,9,4,9,4,9,4,4,
4,4,4,9,9,9,9,9,9,9,4,9,9,9,9,9,9,4,4,4,11, };
static unsigned short stb__arial_bold_29_usascii_w[95]={ 0,5,11,15,14,21,18,5,7,8,10,14,5,8,
5,9,13,9,14,14,14,13,13,13,13,14,5,5,13,14,13,14,26,19,17,17,17,16,14,18,16,5,13,18,
15,19,16,19,16,19,18,17,16,16,19,25,18,19,16,8,9,7,13,16,7,14,14,13,14,14,10,14,14,5,
8,14,5,21,14,14,14,14,10,14,9,14,15,21,15,15,13,10,4,10,15, };
static unsigned short stb__arial_bold_29_usascii_h[95]={ 0,19,8,20,24,20,20,8,25,25,9,14,9,5,
4,20,20,19,19,20,19,20,20,19,20,20,14,19,15,10,15,19,25,19,19,20,19,19,19,20,19,19,20,19,
19,19,19,20,19,21,19,20,19,20,19,19,19,19,19,25,20,25,11,4,4,15,20,15,20,15,19,20,19,19,
25,19,19,14,14,15,20,20,14,15,20,15,14,14,14,20,14,25,25,25,6, };
static unsigned short stb__arial_bold_29_usascii_s[95]={ 133,247,100,11,98,158,180,249,37,1,89,
148,250,128,250,1,27,184,43,41,165,144,199,201,85,114,244,195,60,234,215,
180,71,145,127,238,90,73,58,209,26,20,71,1,231,211,194,189,167,113,108,
230,110,213,70,44,127,90,12,62,228,54,220,145,137,16,129,31,99,45,1,
56,146,248,45,29,161,126,111,74,174,159,179,1,149,229,204,89,163,133,190,
26,21,10,112, };
static unsigned short stb__arial_bold_29_usascii_t[95]={ 22,48,103,27,1,27,27,88,1,1,103,
88,68,103,78,27,27,48,68,27,68,27,27,68,27,27,68,68,88,88,68,
68,1,68,68,1,68,68,68,1,68,68,27,68,48,48,48,1,48,1,68,
27,48,27,48,48,48,48,48,1,1,1,88,103,103,88,27,88,27,88,48,
27,48,27,1,48,48,88,88,88,1,1,88,88,1,68,88,88,88,1,88,
1,1,1,103, };
static unsigned short stb__arial_bold_29_usascii_a[95]={ 115,138,197,231,231,369,300,99,
138,138,162,243,115,138,115,115,231,231,231,231,231,231,231,231,
231,231,138,138,243,243,243,254,405,300,300,300,300,277,254,323,
300,115,231,300,254,346,300,323,277,323,300,277,254,300,277,392,
277,277,254,138,115,138,243,231,138,231,254,231,254,231,138,254,
254,115,115,231,115,369,254,254,254,254,162,231,138,254,231,323,
231,231,208,162,116,162,243, };

// Call this function with
//    font: NULL or array length
//    data: NULL or specified size
//    height: STB_FONT_arial_bold_29_usascii_BITMAP_HEIGHT or STB_FONT_arial_bold_29_usascii_BITMAP_HEIGHT_POW2
//    return value: spacing between lines
static void stb_font_arial_bold_29_usascii(stb_fontchar font[STB_FONT_arial_bold_29_usascii_NUM_CHARS],
                unsigned char data[STB_FONT_arial_bold_29_usascii_BITMAP_HEIGHT][STB_FONT_arial_bold_29_usascii_BITMAP_WIDTH],
                int height)
{
    int i,j;
    if (data != 0) {
        unsigned int *bits = stb__arial_bold_29_usascii_pixels;
        unsigned int bitpack = *bits++, numbits = 32;
        for (i=0; i < STB_FONT_arial_bold_29_usascii_BITMAP_WIDTH*height; ++i)
            data[0][i] = 0;  // zero entire bitmap
        for (j=1; j < STB_FONT_arial_bold_29_usascii_BITMAP_HEIGHT-1; ++j) {
            for (i=1; i < STB_FONT_arial_bold_29_usascii_BITMAP_WIDTH-1; ++i) {
                unsigned int value;
                if (numbits==0) bitpack = *bits++, numbits=32;
                value = bitpack & 1;
                bitpack >>= 1, --numbits;
                if (value) {
                    if (numbits < 3) bitpack = *bits++, numbits = 32;
                    data[j][i] = (bitpack & 7) * 0x20 + 0x1f;
                    bitpack >>= 3, numbits -= 3;
                } else {
                    data[j][i] = 0;
                }
            }
        }
    }

    // build font description
    if (font != 0) {
        float recip_width = 1.0f / STB_FONT_arial_bold_29_usascii_BITMAP_WIDTH;
        float recip_height = 1.0f / height;
        for (i=0; i < STB_FONT_arial_bold_29_usascii_NUM_CHARS; ++i) {
            // pad characters so they bilerp from empty space around each character
            font[i].s0 = (stb__arial_bold_29_usascii_s[i]) * recip_width;
            font[i].t0 = (stb__arial_bold_29_usascii_t[i]) * recip_height;
            font[i].s1 = (stb__arial_bold_29_usascii_s[i] + stb__arial_bold_29_usascii_w[i]) * recip_width;
            font[i].t1 = (stb__arial_bold_29_usascii_t[i] + stb__arial_bold_29_usascii_h[i]) * recip_height;
            font[i].x0 = stb__arial_bold_29_usascii_x[i];
            font[i].y0 = stb__arial_bold_29_usascii_y[i];
            font[i].x1 = stb__arial_bold_29_usascii_x[i] + stb__arial_bold_29_usascii_w[i];
            font[i].y1 = stb__arial_bold_29_usascii_y[i] + stb__arial_bold_29_usascii_h[i];
            font[i].advance_int = (stb__arial_bold_29_usascii_a[i]+8)>>4;
            font[i].s0f = (stb__arial_bold_29_usascii_s[i] - 0.5f) * recip_width;
            font[i].t0f = (stb__arial_bold_29_usascii_t[i] - 0.5f) * recip_height;
            font[i].s1f = (stb__arial_bold_29_usascii_s[i] + stb__arial_bold_29_usascii_w[i] + 0.5f) * recip_width;
            font[i].t1f = (stb__arial_bold_29_usascii_t[i] + stb__arial_bold_29_usascii_h[i] + 0.5f) * recip_height;
            font[i].x0f = stb__arial_bold_29_usascii_x[i] - 0.5f;
            font[i].y0f = stb__arial_bold_29_usascii_y[i] - 0.5f;
            font[i].x1f = stb__arial_bold_29_usascii_x[i] + stb__arial_bold_29_usascii_w[i] + 0.5f;
            font[i].y1f = stb__arial_bold_29_usascii_y[i] + stb__arial_bold_29_usascii_h[i] + 0.5f;
            font[i].advance = stb__arial_bold_29_usascii_a[i]/16.0f;
        }
    }
}

#ifndef STB_SOMEFONT_CREATE
#define STB_SOMEFONT_CREATE              stb_font_arial_bold_29_usascii
#define STB_SOMEFONT_BITMAP_WIDTH        STB_FONT_arial_bold_29_usascii_BITMAP_WIDTH
#define STB_SOMEFONT_BITMAP_HEIGHT       STB_FONT_arial_bold_29_usascii_BITMAP_HEIGHT
#define STB_SOMEFONT_BITMAP_HEIGHT_POW2  STB_FONT_arial_bold_29_usascii_BITMAP_HEIGHT_POW2
#define STB_SOMEFONT_FIRST_CHAR          STB_FONT_arial_bold_29_usascii_FIRST_CHAR
#define STB_SOMEFONT_NUM_CHARS           STB_FONT_arial_bold_29_usascii_NUM_CHARS
#define STB_SOMEFONT_LINE_SPACING        STB_FONT_arial_bold_29_usascii_LINE_SPACING
#endif

