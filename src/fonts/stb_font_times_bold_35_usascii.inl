// Font generated by stb_font_inl_generator.c (4/1 bpp)
//
// Following instructions show how to use the only included font, whatever it is, in
// a generic way so you can replace it with any other font by changing the include.
// To use multiple fonts, replace STB_SOMEFONT_* below with STB_FONT_times_bold_35_usascii_*,
// and separately install each font. Note that the CREATE function call has a
// totally different name; it's just 'stb_font_times_bold_35_usascii'.
//
/* // Example usage:

static stb_fontchar fontdata[STB_SOMEFONT_NUM_CHARS];

static void init(void)
{
    // optionally replace both STB_SOMEFONT_BITMAP_HEIGHT with STB_SOMEFONT_BITMAP_HEIGHT_POW2
    static unsigned char fontpixels[STB_SOMEFONT_BITMAP_HEIGHT][STB_SOMEFONT_BITMAP_WIDTH];
    STB_SOMEFONT_CREATE(fontdata, fontpixels, STB_SOMEFONT_BITMAP_HEIGHT);
    ... create texture ...
    // for best results rendering 1:1 pixels texels, use nearest-neighbor sampling
    // if allowed to scale up, use bilerp
}

// This function positions characters on integer coordinates, and assumes 1:1 texels to pixels
// Appropriate if nearest-neighbor sampling is used
static void draw_string_integer(int x, int y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0, cd->t0); glVertex2i(x + cd->x0, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t0); glVertex2i(x + cd->x1, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t1); glVertex2i(x + cd->x1, y + cd->y1);
        glTexCoord2f(cd->s0, cd->t1); glVertex2i(x + cd->x0, y + cd->y1);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance_int;
    }
    glEnd();
}

// This function positions characters on float coordinates, and doesn't require 1:1 texels to pixels
// Appropriate if bilinear filtering is used
static void draw_string_float(float x, float y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0f, cd->t0f); glVertex2f(x + cd->x0f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t0f); glVertex2f(x + cd->x1f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t1f); glVertex2f(x + cd->x1f, y + cd->y1f);
        glTexCoord2f(cd->s0f, cd->t1f); glVertex2f(x + cd->x0f, y + cd->y1f);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance;
    }
    glEnd();
}
*/

#ifndef STB_FONTCHAR__TYPEDEF
#define STB_FONTCHAR__TYPEDEF
typedef struct
{
    // coordinates if using integer positioning
    float s0,t0,s1,t1;
    signed short x0,y0,x1,y1;
    int   advance_int;
    // coordinates if using floating positioning
    float s0f,t0f,s1f,t1f;
    float x0f,y0f,x1f,y1f;
    float advance;
} stb_fontchar;
#endif

#define STB_FONT_times_bold_35_usascii_BITMAP_WIDTH         256
#define STB_FONT_times_bold_35_usascii_BITMAP_HEIGHT        150
#define STB_FONT_times_bold_35_usascii_BITMAP_HEIGHT_POW2   256

#define STB_FONT_times_bold_35_usascii_FIRST_CHAR            32
#define STB_FONT_times_bold_35_usascii_NUM_CHARS             95

#define STB_FONT_times_bold_35_usascii_LINE_SPACING          23

static unsigned int stb__times_bold_35_usascii_pixels[]={
    0x400cc001,0x029800a9,0x00060020,0x0066aa60,0x06a62000,0xffffd900,
    0x3bffff63,0x0000cc02,0x22000188,0x0d54c401,0x80009800,0x00a982a8,
    0x540006a6,0x0ed43002,0x80eff4c0,0x3fee03fb,0x4c0b7004,0x26001fff,
    0xedcdeffc,0x2a0002df,0xeffeffed,0xfff7000c,0x003fff63,0x0037fd73,
    0xfeffec98,0xfb800cde,0x6fe440ef,0xa803ffff,0x00bdfefd,0x3fd09f50,
    0x3df7df50,0x2027d400,0x9f50fff9,0x207fea00,0x1dfb03fb,0xd80bd300,
    0xea804fff,0x774c01cf,0x3ff22000,0x3ffea22e,0x1fff9803,0x7540dffb,
    0xcffcedcf,0x3bff2201,0x0fffaa22,0xe89ffff0,0xbfffb10f,0xfb87fdc0,
    0x07f9005f,0x25ff70ff,0xf8801ffc,0x7ffe400f,0x74017e64,0x41fdc0ff,
    0xf9802ffc,0x4fffc805,0x00067e40,0x3ea00bee,0xff300fff,0x7fcc01df,
    0x20bffb1f,0x22b91ffb,0xfff507fe,0x3ffe601d,0xffff980e,0xf983ff25,
    0xffa83fff,0x4027ff44,0x22fcc1fd,0xff70fff8,0x005fb00d,0xfe89fffb,
    0x43ffc804,0x0fff83fb,0x400ffc40,0xd100efe8,0x7c40005f,0x3fffe201,
    0x37ffd401,0x363fff30,0x5ff885ff,0x887e8972,0x6401ffff,0xff886fff,
    0x0bffa5ff,0xf88dffff,0x7ffe43ff,0x7d43fc03,0xa87ffdc4,0x3ea01fff,
    0x7fff9005,0x6c03ffa8,0x21fdc5ff,0x2201fff8,0x00c006fe,0x00001fd1,
    0x7fff40d5,0x7ffff005,0x6c7ffe60,0x5ffb85ff,0xfb0f5172,0x3fa00bff,
    0xffff83ff,0xfb17ffe3,0xfffa8fff,0x037ffdc3,0x85f90df3,0x3fea7ffc,
    0x01ff103f,0x207ffea0,0x3fe00ffe,0x221fdc4f,0x3f202fff,0x3600002f,
    0x3600002f,0x3ffffb82,0x3ffffb00,0x363fff30,0xfffd85ff,0xfb8d0b91,
    0xf9003fff,0xffe83fff,0xb0bfee1f,0xffc8bfff,0x7fffd43f,0xfd09f500,
    0x267ffd81,0x5fb03fff,0x83ffc400,0xff103ffb,0xe83fb87f,0xfff104ff,
    0x55555100,0x4404fb83,0x855533dc,0xfffff848,0xffff5000,0x23fff30b,
    0xffb85ffd,0x4185caff,0x000fffff,0xc8bffff7,0x404c0fff,0x7f43fffe,
    0x7ffcc3ff,0xfd99931f,0x9ff9999d,0x43fff219,0xfa82fffa,0x05fe8005,
    0x3e60fff5,0x41fdc1ff,0xff705ffd,0xfff7100d,0x5406f89f,0xfff9dbff,
    0x7ffcc585,0x3fea007f,0xfff986ff,0xf10bffb1,0x80bfffff,0x007ffff9,
    0x51bfffe6,0x3e200dff,0x7ff40eff,0x7fffc44f,0xffffff53,0xffffffff,
    0x5c7ffea1,0x7fc40fff,0x03fc8000,0xf307fff3,0x83fb81ff,0xfff05ffc,
    0x7ffec00b,0xfc80fea4,0x5fffd32f,0x7ffd41b0,0x3fe6007f,0x7fcc0fff,
    0x20bffb1f,0x2ffffffd,0x1ffffea0,0xfffff980,0x4013fe20,0xfd80effc,
    0xffff85ff,0x5ff55514,0x55bfb555,0xfb8fff41,0x002fd83f,0x7fc03f30,
    0x87ff885f,0x3ffb83fb,0x004fff98,0xfd93fff2,0x44dff500,0x1c80ffff,
    0x01bffff2,0x1fffff88,0xfd8fffcc,0xfffd105f,0xf901bfff,0x4400dfff,
    0x741fffff,0x4ff8802f,0x11ffff20,0xf307ffff,0x2205f90d,0x509fd5fe,
    0x058000bf,0xfd837ffc,0x6c1fdc0f,0xfffa81ff,0x3fff2003,0x3e60bf14,
    0x3ffe61ff,0x7fec5706,0x3e2006ff,0x7cc2ffff,0x0bffb1ff,0xffffffd8,
    0x7fffec1e,0x3ffe2006,0x007e42ff,0x3e201fdc,0x3fe22fff,0x84fa82ff,
    0x6e5c00fe,0x00ff881c,0xf8000133,0x0ffa07ff,0x2ff887f7,0x007fff70,
    0xf9a7ffe4,0xa8dffd03,0x43b03fff,0x006ffffc,0x0bffffe2,0x3f63fff3,
    0xfffa805f,0x3f21ffff,0x22006fff,0x5c1fffff,0x2005d007,0xcacffffb,
    0xfc81ffff,0x00007f83,0x9df705fb,0x3e0001bf,0xf9100fff,0xfb8fee3b,
    0x3fff202d,0x3fff2003,0xff305f54,0x1fffc87f,0x7ffdc1f0,0x3fe6007f,
    0x7fcc0fff,0x00bffb1f,0x3fffffa2,0x1ffffee6,0xfffff980,0x06803540,
    0x7ffffd40,0x2626fffe,0xa999afe9,0x000199ef,0x3ff90bf5,0x20003ffa,
    0x4401fffe,0x3ee7f77d,0x2fffd802,0x53fff200,0xfffd81fb,0x41fffe20,
    0x7fffcc68,0xfff5000f,0x3fff30ff,0xc8017ff6,0x33ffffff,0x001fffff,
    0x21ffffe6,0x00488058,0xffb15530,0x7fffd47f,0xffffffff,0x7c4000ff,
    0x93ffcc0f,0xfd000bff,0x3f2201ff,0x7547f71d,0x3fff202e,0x3fff2003,
    0xfff01f74,0x04fffb8d,0xffff8895,0xfff7000f,0x3fff30bf,0xc8017ff6,
    0x14ffffad,0x001fffff,0x417fffee,0x00001000,0x4c1ffff1,0xeeeeffee,
    0x00eeeeff,0x7e417ec0,0x03fff27f,0x40ffff00,0x41fdc4fd,0xfff702ff,
    0x7ffe4007,0xff881f54,0x17fffc5f,0xfffb80d8,0xfff9002f,0x3fff303f,
    0x06617ff6,0x2fffd572,0x005ffff7,0x003ffff2,0x2e000000,0x9f502fff,
    0x40001fd0,0xfffd05fa,0x000fffdc,0x7ec1bffe,0x641fdc1f,0xfffa81ff,
    0x3fff2003,0xffa85f14,0x3fffb63f,0x3fe04c80,0xff8806ff,0xfff304ff,
    0x2a17ff63,0x3ffe5c84,0x037fff44,0x304fffe8,0x00b98017,0x17ffa200,
    0x3fc42fc8,0x01ff1000,0xffb9fffa,0x7ffc002f,0xf70fff05,0x309ff707,
    0x64009fff,0x70fe4fff,0x3af2bfff,0x406a86ff,0x401ffffa,0x300efffb,
    0x3ff63fff,0x25c87a85,0x7fd42ffd,0x7fe401ff,0xfffc80ef,0x03fff701,
    0x1bffd100,0x3e60ff40,0x0bf60005,0x3ee7ffd8,0x3e2001ff,0xfff983ff,
    0x7e41fdc0,0x0bffd06f,0xd27ffe40,0xfffff989,0xe98bffd6,0x3fea0a61,
    0x3ffe205f,0x3ffe600e,0xf50bffb1,0xdff15c89,0x817ffe60,0xf00dfff9,
    0x3fe09fff,0x744004ff,0x87f804ff,0xf50004fb,0x27ffb80b,0x54007ffc,
    0xfff307ff,0xfd83fb83,0x0dff705f,0x927ffe40,0x1dffff0d,0x3aa7ffee,
    0xe9806c0d,0x7f4c0dff,0x7fcc00df,0x50bffb1f,0x23723bff,0x3a200efd,
    0x7f4c0dff,0x7fffc04f,0x09fffd03,0x0177f540,0x17e42fcc,0x007fc400,
    0xffd87ff4,0x1ffdc002,0xfb85fff0,0x204fff83,0xf9000fff,0x217c49ff,
    0xedb84ed9,0x803a80ac,0xffdeffda,0xff3001df,0x217ff63f,0xfffffec8,
    0x36e004ef,0xceffdeff,0x0effb802,0x801fff70,0x001cffc9,0x03fa13ea,
    0x400bf600,0x3ff8cfe9,0x00ffe800,0x7f713ffa,0x202fff88,0xf9003ffb,
    0x00fa89ff,0x40068000,0x02fffff9,0xd8fffcc0,0x54c405ff,0x440000ed,
    0x510001a9,0x2a005100,0x02a60001,0x3a6000aa,0x76dc4004,0xff98001c,
    0x22ffec03,0x7ffcc3fb,0x01bfa201,0x6c27ffe4,0x16c00005,0x7fffdc00,
    0x3fe6000f,0x00bffb1f,0x000002e4,0x00000000,0x00000000,0x00000000,
    0x32013f60,0x41fdc3ff,0x74400fff,0x3ee1502f,0x03f883ff,0x002d8800,
    0x17ffffa0,0xb1fff980,0x04400bff,0x00000000,0x00000000,0x00000000,
    0xf3000000,0x03ffa009,0x5ff907f7,0xf90df100,0x40bffead,0x30000dd8,
    0xd880003d,0x00adffff,0xfd8fffdc,0x000000ff,0x00000000,0x00000000,
    0x00000000,0x04fa8000,0xf703ff50,0x003bf607,0x7fd83ba6,0xf700bff5,
    0x0eecc005,0xffd70000,0x643bdfff,0xd91eeeed,0x00039ddd,0x00000000,
    0x00000000,0x00000000,0x36a00000,0x1dfe9800,0x75c07f70,0x21d5004f,
    0x0ffdaff9,0x57bdb100,0x3bb75311,0x5d400000,0x0009abcc,0x00000000,
    0x00000000,0x00000000,0x00000000,0x99800200,0x40175400,0x2e200028,
    0x260002cd,0x0abcedba,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x22000000,0x800001aa,0x00601a98,
    0x4066aa20,0x00266001,0xa8019800,0x00004c02,0x00aa0133,0x0c0d4c40,
    0x3a6000a0,0x260fffff,0x004ffffe,0x98002600,0x0070000a,0xdffffd30,
    0xeb880003,0xacefffff,0x64400e88,0xfffefffe,0xea80d51c,0x003ffeef,
    0x01cffd98,0x75c427d4,0x71002dfe,0xd81bfffd,0x3fa6001f,0x589cffef,
    0x003fff30,0x01ffff70,0x0009fffd,0x5003fb50,0x007dffff,0x3ee002e4,
    0x06ffc89f,0x3fffee00,0xffc988ad,0x3fea00ff,0x7fdc40df,0x3ff606ff,
    0x003bfea3,0x002fbfaa,0x27f40fe4,0xffa80bfb,0x20efffff,0xff9004fa,
    0x37ff4c15,0x005fffc8,0x80ffff98,0x0004fffc,0x007fffaa,0xfffffffb,
    0x00bf3009,0xff127fcc,0xfd88007f,0x7f4c06ff,0xfffd880f,0x37fec403,
    0xfe86ffc8,0x2ffe405f,0x7e43fc00,0x40bfea1f,0xffffeffa,0x01be24ff,
    0xfd80ffea,0x0bfff906,0x1ffff300,0x009fff90,0xfffffb88,0x3ffee01f,
    0x03ffffff,0xd8017fa2,0x2ffec3ff,0x3ffffa00,0x80ff9800,0x2006fffe,
    0xfff986fd,0x80fffc85,0x8005ffe8,0x3ffcc4f9,0x3a03ffe6,0x3fffee22,
    0x3a00fec6,0x1fa200ff,0x000fff44,0x407fffcc,0x4004fffc,0xffffe9bb,
    0xb57df101,0x20dfffff,0x2005ffe8,0x7fdc4fff,0x3fff2003,0x03ee001f,
    0x003ffff7,0x7fd437c4,0x1fffa87f,0x0006ffd8,0x6ffe85f9,0x2e27ffc4,
    0x8dfffd02,0x3fe203fb,0x203cc01f,0x3fe60001,0xfffc80ff,0x3fe60004,
    0x30b701ff,0x981fffff,0xaaaeffff,0xb1fffe00,0x3e6001ff,0xf8005fff,
    0x17fffe60,0x3ea1ae00,0x7fd42fff,0x02fffb87,0xfff0fd00,0x06fff88d,
    0x113ffea0,0x7ffcc0df,0x0003400e,0xf98cdca8,0xffc80fff,0x039d934f,
    0x03ffff30,0xffffd80a,0x3ffffe60,0x3e01ffff,0x3df52fff,0x7fffec00,
    0x3a0b8003,0x0002ffff,0xfffff10b,0x262ffdc3,0x30007fff,0x6fff98bf,
    0x003fffc4,0xfd01fff5,0x3fffe201,0x5510a02e,0x3e203555,0xffbfeeff,
    0xfffc80ff,0x5fffffcd,0x0ffffcc0,0x37ffd400,0x005fffb8,0x3fbbfff6,
    0x7ffc4003,0x440002ff,0x001fffff,0x7ffff400,0xc81dff2f,0x01334fff,
    0xff50bee0,0xffff88df,0x01dfb000,0xffe80fee,0x8801efff,0xd05ffffb,
    0x7ffd4bff,0xfffc80ff,0xfffc88cf,0x3fffe604,0xfff98001,0x0bfff703,
    0x27fffdc0,0x1cccccc8,0x01fffff5,0xffff9800,0x4c00000f,0xfeffffff,
    0xfbffff04,0xe801dfff,0x37ffdc0f,0x007fffe2,0xf8813fea,0x3fffee05,
    0xe801dfff,0xffc85fff,0x7fffdc1f,0x85fffc80,0xf302ffff,0x70003fff,
    0x3ee03fff,0xfb3005ff,0xd301ffff,0x3f217dff,0x80007fff,0x007ffffb,
    0xffff5000,0xff501fff,0xfffd5bff,0x217e203f,0x7c46fffc,0x36a03fff,
    0xd00effff,0x7ffe401f,0x00cfffff,0xf117fff2,0xfff30fff,0x9fff901f,
    0x209fff90,0x001ffff9,0x2e05ffd8,0x6c405fff,0x5ffffccf,0xfd83ff50,
    0x80006fff,0x006ffffc,0x3ffa6000,0x7dc0ffff,0x7ffe47ff,0xfd07f706,
    0xfff88dff,0xfffd304f,0xf901ffff,0xffffc805,0x900effff,0xff98bfff,
    0xffff987f,0x84fffc80,0xf306fffb,0xf0003fff,0x7fdc01ff,0x4bfea05f,
    0x82fffff8,0xfffc83fb,0xfc80007f,0x00007fff,0x3fffbee0,0x3ff20fff,
    0x7fffcc6f,0xfd80fd82,0x7ffc46ff,0x7fecc03f,0x5f982fff,0xffffea80,
    0xfc80ffff,0x7ffdc5ff,0x0ffff986,0xa84fffc8,0xf980ffff,0x54001fff,
    0x7fdc02ff,0x8fff505f,0x41fffffb,0xffff705d,0xfa80001f,0x2e00ffff,
    0xeeeeeeed,0x65bf620d,0x366fffff,0xffe86fff,0xc837c44f,0x7fc46fff,
    0xff7002ff,0x01fe09ff,0xffffffb8,0x5fffc82f,0x4c2fffe4,0xfc80ffff,
    0xfffa84ff,0xffff980f,0x027f4001,0x442fffdc,0xffe85fff,0x01f50fff,
    0x07ffffea,0xffff1000,0xfff9003f,0x7fff05ff,0x87ffffdc,0xfe86fffd,
    0x81fd45ff,0x7c46fffb,0x32001fff,0x5f906fff,0x3ff20088,0xffc85fff,
    0x2fffec5f,0x407fffcc,0xfa84fffc,0xfff307ff,0x27e4003f,0x85fffb80,
    0xf987fffa,0x2f9effff,0x3ffffe20,0xffe80002,0xff9802ff,0xfffa86ff,
    0x9ffffdc1,0xfd87fffb,0x80fec5ff,0x7c46fffa,0x7c4007ff,0x89f305ff,
    0x7ff4403a,0x7ffe40ff,0x437ffe45,0xc80ffff9,0xffa84fff,0xffff305f,
    0x013e6003,0xc85fffb8,0xfa82ffff,0x804fffff,0x004ffffc,0x3ffffc80,
    0x6ffff980,0x440fffc8,0xff34ffff,0xfffc81ff,0xff3037c3,0x6fff88df,
    0x04ffd800,0x100d51fe,0xfc83fffd,0x7ffdc5ff,0x0ffff987,0xb84fffc8,
    0xff303fff,0xbf1003ff,0x3fee0640,0xffffc86f,0xffffb80e,0x7fc400ef,
    0x14001fff,0x4037fff4,0xe86ffff9,0xffd80fff,0x1ffff13f,0x2a1fffc8,
    0x3fff404f,0x0017ffe2,0xfd80bff2,0x2e007ea1,0xfffc87ff,0x0ffffc45,
    0x203fffea,0xfc85fffc,0xfff301ff,0x20bd003f,0xfffa87b9,0x7fffdd26,
    0xffff905f,0x2a2cc5ff,0x2006ffff,0xffff885d,0x7fffcc01,0x81fffc86,
    0x3f61fffb,0x3ffe42ff,0xff5007f2,0x41fff98f,0x17f601cb,0x37d49f50,
    0x642ffd40,0xffd85fff,0x3fffe25f,0x6fffc81f,0x2602ffe8,0x6402ffff,
    0xffffffff,0xbfffd05f,0x3fffe23d,0xfb30adff,0xddffffff,0xffff901f,
    0x01ee8807,0x401ffff5,0x986ffff9,0xffe82fff,0x746ffe84,0x803fc2ff,
    0x3fee0ffe,0x41fffcc4,0x7c400ff8,0xb017fea6,0xfffb01ff,0x9fffd10b,
    0xbffff9d7,0x2ffffc85,0xf3013fee,0x7dc05fff,0xffffffff,0xbffb104f,
    0xfffff985,0xb9dfffff,0x2fffffff,0x37fffe60,0x09f95109,0x37fff910,
    0x09ffff50,0xfa83ffee,0x3fff106f,0x9f30ffe6,0xe93fa200,0x7ffcc0df,
    0x1ed98bef,0x3ea3fb00,0x7dc41eff,0xffffd02f,0x3ffff620,0x1bdeff9a,
    0x77ec57e4,0xfc803dfe,0xff305fff,0xffffffff,0x4c01005f,0xdffffffd,
    0x7ffff4c1,0xffeb8802,0x02dfffff,0x7fff6cc0,0x0bdfffed,0x76fff4c0,
    0x7e4c03ff,0xfc82dfdf,0x3bf62002,0x3fee04ff,0x003fffff,0xaaea9fdc,
    0xdffddefd,0xffffe980,0x435101ef,0x204c0098,0x65400aa8,0xeffffffe,
    0xfffff11c,0x3fffffff,0x2a620000,0x01a9801a,0x15553100,0x554c0000,
    0x3100019a,0x53000135,0x00015401,0x2a620035,0x5100009a,0x55510223,
    0x00000013,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x379db930,
    0x10003333,0x2aa20035,0x3fffea00,0x533fffff,0x44555555,0x8001aaaa,
    0xaaa88000,0x39b731aa,0x3fffff20,0xffd71eff,0x03dfffff,0x323dfffb,
    0xefffffff,0xfffe980d,0xffdb12ff,0x85bdffff,0x0dffffed,0x88b3b2a0,
    0x7ff6cc05,0x22dfffff,0xfffffffb,0x4406ffff,0xffc9dffc,0x4000ffff,
    0x7f5404fe,0xfd80effc,0xffffffff,0xdffffd30,0x067fd443,0x20007400,
    0xacffffb8,0x305fffff,0x209fffff,0x02fffffc,0x7fc437cc,0xd1006fff,
    0x3ffa03df,0xefc806ff,0x277fee00,0x007fbcfc,0x03fffff6,0x3ffffff6,
    0x404fffff,0x7fec7ffd,0x32000aad,0x3ff204ff,0xff09ffd3,0x9fffffff,
    0x05ffff88,0x3ee000d9,0xfffd0003,0xfffb33dd,0x3ffff207,0x3ffffe05,
    0xb817c403,0x2007ffff,0x3ff200fd,0x3f8804ff,0xfb13fea0,0x7dc00fff,
    0xfff05fff,0xffffffff,0x7ffd403f,0x00fffd45,0x413ffea0,0xffd2fff9,
    0xfffffa89,0xfc81ffff,0x005d07ff,0x4001bfa0,0x7c1ffffd,0xff981fff,
    0x3fee07ff,0x035406ff,0x00bffffe,0x3ff201f4,0x05f003ff,0xf507ffe6,
    0x7d400fff,0xff985fff,0xffffffff,0x7ffe406f,0x027ffd44,0x09ffff10,
    0x5c4bfff2,0x10004d82,0x7885ffff,0x5fff5000,0xbfff9000,0x209fffb0,
    0x102ffffe,0x401fffff,0x7ffdc03c,0x8079805f,0x003ffffb,0x1fffa05f,
    0x801fffe6,0xb84ffffa,0x99999bdf,0x7ec04fe9,0x7ffcc3ff,0x3fffa005,
    0x5fffd04f,0x0001f880,0x971bfff6,0x3fff6000,0xfffc8005,0x06fffb84,
    0x40dffff5,0x104ffffd,0xfff8801f,0x01ec00ff,0x01ffffdc,0xfff882f8,
    0x07fff986,0x13fffea0,0x3ff10132,0x44fffb80,0x9003fffa,0x209fffbd,
    0x5c02fffe,0x0009bcef,0xe87fffe6,0xfff98001,0x7e4001ff,0xfffb84ff,
    0x3ffffe07,0xfffff501,0x7e4016a0,0x3e204fff,0xffffb800,0xf505f003,
    0xfff30dff,0x7ffd400f,0xfb80384f,0x4fff8807,0x400fffd4,0x4fffc8fa,
    0x67fffd54,0xffffb01a,0x3a001bff,0x00d35fff,0x3fffff20,0x7ffe4005,
    0x0ffffa84,0x09ffff90,0x0bfffff6,0x7fcc00b6,0x09900fff,0x0ffffee0,
    0x7fe417c0,0x7fff985f,0x3fffea00,0x09fb0004,0xfb1ffee0,0x25f1009f,
    0x7fc4fffc,0x83ffffff,0xfffffff8,0x7d400cff,0x003c8fff,0xffff9f88,
    0x3ff2000f,0x7fffa84f,0x1ffffe60,0x3ffff3e2,0xb0007c45,0xf107ffff,
    0x3ffee001,0xb05f003f,0xff30bfff,0x7fd400ff,0xf88004ff,0x3f62001f,
    0x002ffdae,0x27ffe4bb,0x202fffe8,0xfffffffb,0xff805fff,0x8000fcff,
    0x9ffffb5c,0x27ffe400,0x2037ffd4,0x642ffffe,0x0fffff8c,0xff50012e,
    0x00b70dff,0x01ffffdc,0xfffc82f8,0x07fff986,0x13fffea0,0x001fee00,
    0x006f33aa,0x3ff20eb8,0x5fffd04f,0x7ff6e5c0,0x03ffffff,0x02ffffdc,
    0xfff31f80,0x7fe400ff,0x5fffb84f,0x37fffd40,0x7fffec7e,0x3a0007a3,
    0x0f41ffff,0x7ffff700,0x3ee0be00,0xfff986ff,0x3ffea007,0x4fd8004f,
    0x001b6200,0x7fe41f98,0x5fffd04f,0xfffc9800,0x3e200fff,0xb8002fff,
    0x1fffff46,0x84fffc80,0xf803fffc,0x4d51ffff,0xd36ffffa,0x3ffee000,
    0x7001aa5f,0x2007ffff,0xffff982f,0x03fffcc0,0x09ffff50,0x001ff880,
    0x440017f6,0x4fffc83f,0x005fffd0,0x3ffff220,0x03ffe401,0x7fd42e80,
    0xff9006ff,0x6fff83ff,0x9ffff900,0xfffff0ba,0x22000793,0x5d0fffff,
    0xffffb800,0x3603f003,0x7fec3fff,0x3fea007f,0x7d4004ff,0x3ffe2007,
    0x1bccccce,0x3ff20bb0,0x5fffd04f,0xfffc8000,0x027fcc03,0xfff83540,
    0xffc802ff,0xffd9beef,0xfff3001f,0xff90f3ff,0x0001fbff,0x4e7fffe4,
    0xfffb8006,0x203f003f,0xebdfffe8,0x2007fffe,0x004ffffa,0xf10027ec,
    0xffffffff,0x77cc1dff,0xfffeeeee,0x7ff42eff,0xfd80002f,0x01fd802f,
    0xff903d80,0xff900bff,0xbffff39f,0xfffe8005,0xfff984ef,0x4c0005ff,
    0x03dfffff,0x3ffffb80,0x74403f00,0xff9bffff,0xfa81307f,0x22004fff,
    0x7ec002ff,0xffffffff,0x3ffe66ff,0xffffffff,0x7fff43ff,0xffb80002,
    0x8005a800,0xfffffff9,0x00ffffff,0x5327ffe4,0x3fea0001,0xffd00fff,
    0xb00005ff,0x001fffff,0x07ffff30,0x51001f10,0x23fffcc3,0x3ea1fff8,
    0x2a004fff,0xffb0007f,0xffffffff,0x3fffe61f,0xffffffff,0x17fff43f,
    0x037cc000,0x4c8002c8,0x27fffe40,0x013fff20,0xbffff000,0x03fffdc0,
    0xffffa800,0xfff10004,0x00f5009f,0x23fffcc0,0x3ea5fffb,0x36003fff,
    0x7e44004f,0xb999999c,0x55510ffe,0xfffb5555,0xfffe835b,0x80732202,
    0x11e443fa,0x01f1000d,0x0fffff98,0x013fff20,0x5fff9000,0x027ffc40,
    0x1fffd000,0x7fff4000,0x00274406,0xb8ffff30,0x3fea4fff,0xff1001ff,
    0x07fc8005,0x32005fa8,0xffd04fff,0x7ffe405f,0xfe83e80c,0x9000771f,
    0x3fffa00b,0x3fff204f,0x7cc00004,0x1ffd806f,0x3fee0000,0x7fd40005,
    0x03f603ff,0xffff9800,0xb83ffe60,0x2a006fff,0xffc8007f,0x00bfa201,
    0xf04fffc8,0x7dc07fff,0xea9bffff,0xd17fff03,0x03f98001,0x1fffff50,
    0x017fff60,0x00ffa000,0x00001be6,0x00003ff1,0x15bffff5,0x0003fd73,
    0x40ffff98,0x3ffa0ffb,0x17f6000e,0x33ff6200,0x1eecba9a,0x27ffe400,
    0x027fffc4,0x3bfffff2,0x3fff201c,0x7f4c002f,0xffff3006,0xffff10bf,
    0xa800001d,0x007d000f,0x000b9000,0x7ffff4c0,0x0000cfff,0x83ffffc8,
    0xdfffefea,0x0bfe2000,0xedcb8800,0x90001abd,0xfec89fff,0x202effff,
    0x1000aa98,0xc80039b5,0x80deffff,0xffffffda,0xdddd31ff,0x00007ddd,
    0x00260018,0x00062000,0x2aaaa200,0xd9800009,0x05eeeeee,0x20001553,
    0x000002a8,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x75400000,0x01ffffff,0x97fffff2,0xfffffee9,
    0x3ceeefff,0xfffdb100,0x99ddffff,0x3ffff603,0x7f6cc007,0x002fffff,
    0x3fffffea,0xfffb30ce,0x07bfffff,0x3fffb220,0x440dffff,0x4fffffed,
    0xffffff98,0xffffffff,0x3fb660ff,0x2dffffff,0xffffffd7,0x7fff49df,
    0xec88007f,0xffffffff,0x2fffffff,0x7ffffdc0,0x3bf2200e,0x3ffffa00,
    0xfffca99b,0x3ff6001e,0xffebacff,0xfffc81df,0x3ff60007,0x3a005fff,
    0x405fffff,0x00effffe,0x3ffff600,0x7ffc400f,0x33ffea03,0xffb9999a,
    0x3f602fff,0xf500ffff,0x3607ffff,0x40007fff,0x99dffffd,0x2fffdaaa,
    0xfffffc80,0x201fc405,0xa82ffffc,0x5003ffff,0xfd87ffff,0x7fdc0fff,
    0x3ae0007f,0x801fffff,0x2ffffdf9,0x27fffe40,0x3ffee000,0x1ef9805f,
    0xd0077dc0,0xb80bffff,0x7c05ffff,0xf700ffff,0xb8000fff,0x2a05ffff,
    0xffb802fe,0x7c04ffff,0x7fffdc02,0x1ffffb02,0x7ffff500,0x45ffff88,
    0x0007fffa,0x3ffff36e,0xffdcc804,0x7fdc02ff,0x540004ff,0x4c05ffff,
    0x0ec800df,0x3fffff20,0x7fffd400,0x7ffffc04,0x0ffff500,0xffffa800,
    0x4017c405,0xfffffedb,0xf700ba02,0x3ea05fff,0xf9802fff,0xfff83fff,
    0x3ffea0ff,0x276e0007,0x200fffff,0xffffd9f8,0x7fffdc01,0x7fd40004,
    0x13ea05ff,0x3e602c80,0xa803ffff,0x7c04ffff,0x3ea07fff,0x540007ff,
    0xe805ffff,0xff9cb802,0x5d01ffff,0x2ffffb80,0x0bffff30,0x07ffff30,
    0x543ffffd,0x20007fff,0x7ffffb5b,0xfffdadc0,0x7ffdc01f,0x7d40004f,
    0x5f705fff,0x7f405800,0xf5006fff,0xff809fff,0x3fea07ff,0x7d40007f,
    0x21885fff,0xf54b802b,0xd01dffff,0xffffb805,0xbffff502,0x7ffff300,
    0x41ffffd0,0x36a7fffa,0xaadc00ad,0x3a06ffff,0x03ffffb2,0x04ffffb8,
    0x7fffd400,0x8001ed85,0x3fffee00,0xfff5001f,0xffff809f,0x1fffea07,
    0x03555555,0x217fffea,0x24b8002b,0x85fffffb,0x7ffdc02e,0xffff902f,
    0xffff3007,0x8bffff07,0xfd8ffffa,0x2dc06fff,0x305ffffd,0x0ffffecd,
    0x13fffee0,0xffff5000,0x0006f44b,0x3fffe200,0x3fea005f,0x7ffc04ff,
    0x3ffea07f,0x5f7fecc7,0xbffff500,0x970005b0,0x3fffffd8,0x3fee0174,
    0xfffd02ff,0xfff3001f,0xffffa87f,0x77fffd42,0x04fffeac,0xffffb96e,
    0x3ff63d85,0x7fdc01ff,0x540004ff,0xff35ffff,0xfb000007,0x4001ffff,
    0x404ffffa,0x2a07ffff,0xdf987fff,0x7fffd400,0x40017d45,0x7fff444b,
    0x700ba2ff,0xe885ffff,0x3001ffff,0x7cc7ffff,0xffa83fff,0x3ffea3ff,
    0xff896e06,0x83e20fff,0x401ffffd,0x004ffffb,0x6ffffd40,0x001ffffb,
    0x3fffe600,0x7fd4003f,0xaaaaadff,0x07ffffaa,0x361fffea,0xffff5005,
    0x05ff953b,0xff109700,0x0ba1ffff,0x9bffff70,0x07ffffdd,0xeffff980,
    0x00cfffed,0xf98ffff5,0x916e07ff,0x25c9ffff,0x007ffff6,0x009ffff7,
    0xfffffa80,0x00ffffff,0xffffd000,0xfff5000d,0xffffffff,0x40ffffff,
    0x2e47fffa,0xfffff500,0x005fffff,0x3fe60970,0x805d6fff,0xfbcffffb,
    0x8003ffff,0xabeffff9,0x7fd400aa,0x7fffcc7f,0xff98b700,0xd83f0fff,
    0x5c01ffff,0x0004ffff,0x577fffd4,0x006fffff,0xfffffb80,0xfffa8001,
    0x7fffc04f,0x9fffea07,0x7fd4006c,0xffda8dff,0x204b8002,0xedfffffb,
    0x7fffdc02,0x3fffff72,0xffff9800,0xfffa8003,0x07fffcc7,0xfffd85b8,
    0xffd86abf,0x7fdc01ff,0x540004ff,0xff55ffff,0x40009fff,0x04fffff8,
    0x9ffff500,0x07ffff80,0x7edfffea,0x3fea002f,0x017d45ff,0x3f6025c0,
    0x402fffff,0x362ffffb,0x4006ffff,0x003ffff9,0x4c7fffa8,0xb700ffff,
    0xbdffff50,0x3ffffb05,0x4ffffb80,0x3fea0600,0x3fff25ff,0xfb0003ff,
    0x3100dfff,0x09ffff50,0x207ffff8,0xffdffffa,0xff5000ff,0x005b0bff,
    0xffd00970,0xfb805fff,0x3fe22fff,0x26004fff,0x8003ffff,0x7cc7fffa,
    0x0b700fff,0x41fffffa,0x401ffffd,0x004ffffb,0x3fffea1a,0x7ffffec5,
    0x7ffd4001,0x82c802ff,0x404ffffa,0x2a07ffff,0xfffdffff,0xfff5005f,
    0x000570bf,0xfff10097,0xffb805ff,0x7ffd42ff,0xff3001ff,0xf50007ff,
    0xfff98fff,0x2e0b700f,0xfb04ffff,0xfb803fff,0xb7004fff,0x8bffff50,
    0x0ffffff8,0xfffff100,0x503f100b,0xf809ffff,0x3ea07fff,0xffff57ff,
    0xffff5005,0x7000330b,0x3ffe6009,0x7ffdc02f,0xffffd82f,0xfff9800f,
    0xffa8003f,0x7fffcc7f,0x3e20b700,0xffb00fff,0xffb803ff,0x09d004ff,
    0x30bffff5,0x00dfffff,0x03fffff2,0x3ea07ee0,0x7fc04fff,0x3fea07ff,
    0x3ffff67f,0x7fffd400,0x16e00005,0x02fffb80,0x417fffdc,0x05ffffe8,
    0x03ffffa8,0x47fffa80,0x700ffff9,0x02ffe40b,0x805ffffb,0x804ffffb,
    0xfffa84fa,0xffff705f,0xfff980bf,0xff9803ff,0x4ffffa80,0x07ffffc0,
    0x227fffa8,0x5405ffff,0x0005ffff,0xf9001b60,0xfffc805f,0xffff303f,
    0xfffa807f,0xffb8004f,0x7fffcc7f,0x7cc0d701,0x3fffa02f,0x7ffe402f,
    0x1ffd405f,0x02ffffd4,0x0bfffffb,0x037ffff4,0xfb83ffdc,0x7fc05fff,
    0xff700fff,0xffffa8ff,0x3fffea03,0xff300005,0x02fd8005,0x02fffff4,
    0x03fffff9,0x037fffe4,0x07fffe40,0x105ffff7,0x036c05fd,0x09fffff1,
    0xafffffd8,0xffdb9999,0xffffc82f,0xffff500f,0xfff70bff,0x333337ff,
    0x0dfffd73,0x03bffff6,0x17ffffcc,0x40ffffc8,0x901ffffe,0x001fffff,
    0x7ffff540,0x05d1003e,0xfffffdb3,0xffd019df,0x7644bfff,0xdeffffff,
    0xffffd801,0xffffb9ff,0xfffb33ff,0x507507df,0xffffffdb,0x3fb2619d,
    0xffffffff,0x1fffffff,0xfffffd91,0x7fe41bdf,0x4fffffff,0xfffffff1,
    0xffffffff,0x764cbfff,0xceffffff,0xfffffb72,0x7fec9bff,0xff52ffff,
    0x3229ffff,0xeffffffe,0x0000002c,0x00000220,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x36600000,0xffffffff,0xffffffff,0x3ffff6a0,0xcdeeffff,0xffff9801,
    0x7ff6cc5f,0xeeffffff,0xfffd02ce,0xffffffff,0x2fffffff,0xffffffe9,
    0x7ff5c4ef,0x3fee5eff,0x0dffffff,0x5fffffb0,0x3ffffb66,0x2e22dfff,
    0x036c002d,0x15c40000,0x5cc05b71,0x32602ced,0x540c8ade,0x2aa2aaaa,
    0x7ec02aaa,0xaa99dfff,0x880fffeb,0xaabffffe,0x803ffffc,0x3a05fffe,
    0xcbacffff,0xfe85ffff,0xfff99acf,0xffca99ff,0x7ffffe47,0x01ffec07,
    0x05fffffb,0xfd813f60,0xfe80efff,0x1fe002ff,0xfd980000,0x0bfff63f,
    0x3ffabbf6,0xebbffb84,0x7ff541ff,0x3fffa66f,0x7fffdc07,0x403fee04,
    0x4c2ffffd,0x200effff,0x3205fffd,0x7d43ffff,0x3fa0efff,0x87ffff81,
    0xfffe87f9,0x0fee01ff,0x9fffff10,0xf701b600,0xff10bfff,0x3fc00bff,
    0x3ae20000,0xff10cfff,0x27fd8bff,0x7fc1fffa,0x7e40fec3,0x7ffdc6ff,
    0x7fffd407,0xc807dc04,0xf982ffff,0xf900efff,0x7fdc0bff,0xfffc83ff,
    0x7fc0fa2f,0x10f707ff,0x20dfffff,0xff7005e8,0xf9801fff,0x7fffdc01,
    0x07ffff04,0x80003fc0,0x02efffc9,0x7dc7ffff,0x97ffe24f,0x17c45ffa,
    0x2a37ffdc,0x7d407fff,0x22084fff,0xffff900f,0x3fffe605,0x0bfff905,
    0x41ffffdc,0x3a5ffffa,0x0fffff00,0x7ffdc1e2,0x006d83ff,0x027ffff4,
    0x3fea0136,0xbff504ff,0x003fc001,0x37fffaa0,0x86ffd401,0x7ec3fff8,
    0x37fff24f,0x3fee0ae0,0x3fffd46f,0x13fffea0,0xf900d891,0x7f405fff,
    0xffc81fff,0x3ffee05f,0xffff983f,0xffff80e6,0xffd81207,0x03ae1fff,
    0xfffff500,0x2003ea01,0x404ffffa,0x007f8000,0xbffffc88,0x3ea04000,
    0x05dc42ff,0x03fffff5,0x546fffb8,0x7d407fff,0x225c4fff,0x3ffff200,
    0x3ffff202,0x05fffc85,0x20ffffee,0x003ffffb,0x000fffff,0x5bffffe2,
    0xfd0001f9,0x0ba09fff,0x27fffd40,0x03fc0000,0x5bfffb50,0x7fe40000,
    0x3ffe003f,0x3ee03fff,0x7ffd46ff,0x7fffd407,0xf90026c4,0x7d405fff,
    0x7e40ffff,0x3fee05ff,0xfffd83ff,0xffff000f,0x7fd4000f,0x002fcfff,
    0x3ffffe60,0xf5003641,0x10009fff,0xf5555555,0x5555557f,0x07bffea3,
    0x3ff60000,0x3fee004f,0xf705ffff,0xfffa8dff,0x7fffd407,0xc8013e24,
    0x2602ffff,0x641fffff,0x3ee05fff,0x7fec3fff,0x3fe002ff,0x6c0007ff,
    0x004fffff,0x5ffffd80,0xfa8007e2,0xa8004fff,0xffffffff,0xffffffff,
    0x7ffff913,0x7ec00001,0x7d4006ff,0xb83fffff,0x7fd46fff,0x7ffd407f,
    0x04ffb9df,0x0bffff20,0x2fffff88,0x702fffe4,0xfd9bffff,0x80015bff,
    0x0007ffff,0x37ffffc4,0x7ffc4000,0x8009b1ff,0x004ffffa,0xcccccc98,
    0xcccccffc,0x7f5c41cc,0x80001dff,0x000ffffc,0x37ffff4c,0x2a37ffdc,
    0x7d407fff,0xffffffff,0x3fff2004,0x3ffe202f,0x7ffe43ff,0x3fffee05,
    0xdfffffee,0x7fffc002,0xffa80007,0x80003fff,0xfaeffffc,0x7ffd4000,
    0x0177104f,0x20007f80,0x0befffc9,0x3ea1cb80,0x0a804fff,0x03ffff62,
    0xfa8dfff5,0x7fd407ff,0x4fe98cff,0x3ffff200,0x3fffe202,0x2fffe42f,
    0x47ffff70,0x0effffc8,0x0fffff00,0x3fff6000,0x440001ff,0x03ffffff,
    0x4ffffa80,0x01ffff88,0x20001fe0,0x1cfffeb8,0x223fffb0,0xa81fffff,
    0xfff90b70,0xb8ffff50,0x7d407fff,0x13e24fff,0x2ffffc80,0x3ffffe60,
    0x02fffe40,0x707ffff7,0x001dffff,0x000fffff,0xffffff30,0xff70000d,
    0x2a000fff,0xfb84ffff,0x3e004fff,0x6cc00007,0x3e22efff,0x3fee5fff,
    0x4c98beff,0xbff30bee,0x21ffff30,0x00fffffa,0x913fffea,0x7ffe4009,
    0x3ffea02f,0x5fffc87f,0x0ffffee0,0x027ffffc,0x003ffffc,0x3feabe20,
    0x40004fff,0x006ffff8,0x09ffff50,0x00fffff5,0x800003fc,0x3e3fffb8,
    0x7fec4fff,0x544fffff,0x3ff70bff,0x37bfff60,0x01ffffcf,0x313fffea,
    0x3ff20a09,0x3fee02ff,0xfffc86ff,0x3fffee05,0xdffffb03,0x0fffff00,
    0x3f24e800,0x0001ffff,0x01bfffe2,0x27fffd40,0x00ffffd8,0x00000ff0,
    0x7fdc7b50,0xffffb80e,0xffdfa84e,0x3a201efe,0xffa8efff,0xff502fff,
    0x750709ff,0x05ffff90,0x40ffffec,0x2e05fffc,0xf703ffff,0xff00dfff,
    0x6c000fff,0x7ffff445,0x3fe20006,0xf50006ff,0xd8409fff,0x001fe007,
    0x01880000,0x82200a98,0x2a2000a9,0x3fea0000,0x05d004ff,0x205ffff9,
    0x905ffff8,0x7dc0bfff,0xffb03fff,0xfff00bff,0x3ae000ff,0xfffff980,
    0xfff10004,0x3ea000df,0x7c404fff,0x001fe005,0x00000000,0x00000000,
    0x9ffff500,0xf903f900,0x3f205fff,0xff900fff,0x7ffdc0bf,0xfffff03f,
    0xfffff005,0x403f5000,0x01fffffc,0x7ffff880,0xffff5000,0x000fa809,
    0x00000000,0x00000000,0x7dc00000,0x7dc05fff,0xffffd80f,0x0efffb83,
    0x81bfff60,0xd83ffffc,0x8804ffff,0x000fffff,0xff1013ea,0x8001dfff,
    0x007ffff9,0x0bffff70,0x4ccc17d4,0x99999999,0x00019999,0x00000000,
    0x80000000,0x9afffffd,0x7fffba99,0xdffffe88,0x4fffda99,0x07fffe80,
    0x2bbffff6,0x2efffeb9,0xfffff500,0x17fee005,0x3fffff60,0x7ffdc005,
    0xfd8001ff,0x3d906fff,0xffffff30,0xffffffff,0x000000ff,0x00000000,
    0x3b260000,0xffffffff,0x6fffffff,0x3ffffb2a,0x1ceeffff,0xffffe980,
    0xffdb31ef,0xdfffffff,0x3720059b,0xdfffffff,0xfffff704,0xffea819d,
    0x02ffffff,0x3ffff726,0x200cdfff,0xfffffec9,0x98062cef,0xeeeeeeee,
    0x6eeeeeee,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x0000e4c0,
    0x5555554c,0x55555551,0x4c6aaaa1,0x22aaaaaa,0x501aaaa8,0x40037bb9,
    0x5003deca,0x2a015bb9,0x2e22aaaa,0x2aaaaa3d,0x202f76a2,0xaaaaaaa8,
    0x21aaaa89,0x2a2aaaaa,0x6dc41cec,0x555300ad,0x55555555,0x00009803,
    0x0b260053,0x910300cc,0x2dffa817,0x3ffa6000,0xfff50cff,0x67ecc5ff,
    0xdffffd30,0x40cffa83,0xffebbdea,0x37f6200e,0xb100efc9,0x0bff55df,
    0x22ffffb3,0xfd31fffe,0xfffb1fff,0xfff701df,0xff9119ff,0x7fff4c37,
    0xfffffd8f,0xdfffff32,0x3337ff20,0x01fffffc,0x20003fea,0x7fd402fe,
    0x227fe46f,0xff10fff9,0xfffc88ff,0xf98000cf,0x7fe43fff,0x443540ff,
    0xdb05ffff,0x7cc1ff70,0x3ffa05ff,0xd10dff10,0x27fdc5ff,0x747fffd4,
    0x3ee2ffff,0xfeacefff,0xfff304ff,0xb80fd49f,0xc9ceffff,0x9aebffff,
    0xec83fffe,0x27fffd40,0x000fff20,0xfe80dff7,0xfff12fff,0xa7ffec1f,
    0x502ffffa,0x005bfffd,0x4c5fffd8,0x1e42ffff,0xd07fffc8,0xf89ffd05,
    0xffb81fff,0x3217fec6,0x3fe20fff,0x7fffcc3f,0x20ffe9cd,0x2a3ffffa,
    0x3f207fff,0x405d0fff,0x7c4ffff9,0x3ee0efff,0xe82c85ff,0x5400ffff,
    0x3e2001ff,0x3f603fff,0xfff14fff,0xa7ffec1f,0x401ffffa,0x0befffc9,
    0x0ffff980,0xf17fffee,0x3fffe201,0x7fc43cc2,0x0ffffc7f,0xf913ffe2,
    0x37ffc4df,0x3e63fffc,0x204c6fff,0x7cc7fffa,0x3fe207ff,0x4c05bcff,
    0xffe87fff,0x2fffd43f,0x7fffdc1c,0x9ba2ec82,0x37f203eb,0xfd300ffb,
    0x3fffcbff,0xfd8bfff2,0x3ae2005f,0x7401dfff,0x3efa3fff,0x80b50fff,
    0x1e45fffd,0x7fc3ffc8,0x7ffd42ff,0xf73ffdc2,0xfffd0bff,0x1ffffcc1,
    0x23fffd40,0x6407fff9,0x400fffff,0xfe87fff9,0x7ffd43ff,0xffff8806,
    0x95fff886,0x20fffd15,0x09fd0ff8,0x3fa4f888,0x07ffd45f,0xd9800026,
    0xb80befff,0x3ed36fff,0x80593fff,0x3e1ffffa,0xfea82200,0x7fdc2fff,
    0xffeeeeef,0x0bfff90f,0x7cc5fffd,0xfa802fff,0x7ffcc7ff,0x3ffe200f,
    0xfff9805f,0x43fffe87,0xd807fffa,0xfb01ffff,0xffd9bdff,0xa93f607f,
    0x17d400ff,0xff887ff7,0x22000007,0xf883fffe,0xf93c9fff,0x2003edff,
    0x0954fffe,0x3febfaa0,0x7ffec2ff,0x1999999b,0x3a17fff6,0x3fe64fff,
    0xffa800ff,0x7fffcc7f,0x7fffdc00,0x3fffcc01,0x2a1ffff4,0x7d407fff,
    0x4c404fff,0x0199de99,0xbfb03fe6,0x7fcc6d80,0x0005fe81,0xffffb880,
    0x9fffd00c,0x3fffe61d,0xfff7005c,0xd8803d1f,0x5ffff1ff,0x004fffd8,
    0xfd0bfffb,0x7ffcc9ff,0xffff5007,0x00ffff98,0x406fffe8,0xfe87fff9,
    0x7ffd43ff,0x7ffff407,0xb95d3000,0x983fe801,0x01d901ff,0x00ff20ff,
    0xfffd9800,0xfffb802e,0x7ffff45f,0xffff1002,0xfff980db,0x90bfffe1,
    0x3200bfff,0xffe85fff,0x1fffe63f,0x23fffd40,0x800ffff9,0x202ffffe,
    0xfe87fff9,0x7ffd43ff,0x3fffee07,0x31ff9002,0x1bee05ff,0x67446fc8,
    0x3e60bb00,0x75c40000,0x2001cfff,0x5c2ffff8,0x64007fff,0x2202ffff,
    0x7ffc6ffe,0x7fffdc2f,0x7ffd4100,0x21ffff85,0x5007fff9,0xff98ffff,
    0x766400ff,0x3e606fff,0xfffe87ff,0x83fffd43,0x985ffff8,0xff2ffd41,
    0x02ff881f,0x0088bfe2,0x000b0154,0x5f7ffe4c,0xfffb0000,0x009fff10,
    0x407fff88,0x7fc6fffa,0x7ffc42ff,0x3e0d885f,0x6fff86ff,0x803fffcc,
    0x7cc7fffa,0x5a600fff,0x303ffffa,0xffd0ffff,0x7fffa87f,0x03ffffb0,
    0x22ff983b,0x27540ffc,0x0002f5c0,0x7ed40000,0x80002dff,0xffb04ffa,
    0x7ffb0003,0xdffffb80,0x0afffffb,0x977fffe4,0x7ffdc2d9,0x30bffe60,
    0x7001ffff,0xff98ffff,0x43f100ff,0xa80ffffe,0x7f40ffff,0x7ffdc4ff,
    0x4ffffa87,0x81980fb8,0x0000001a,0xf5000000,0x000019ff,0xff501ff8,
    0x03fe6000,0xdfffff10,0x8bffff93,0xffffffd8,0x47ff904f,0xffb83ffd,
    0xffc801ff,0x3ffee0ff,0x5c7e882f,0xfb85ffff,0x7ffc1fff,0x7fffe45f,
    0x87ffff40,0x0007fda9,0x00000000,0x0baa0000,0x06c80000,0xbd00027c,
    0x93bfae00,0x3205ffe8,0x403effff,0x1efeeffa,0xffffffc8,0x3ffff604,
    0xffffb9ff,0xfffb13ff,0xffffd73b,0x3fff21df,0xffe9afff,0xfffb6fff,
    0x3fee5fff,0xffffffff,0x0000007f,0x00000000,0x40000000,0x0004c018,
    0x00800130,0x00a98002,0x00055440,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0xfffa8000,0xffffffff,0x913fffff,
    0x75c03999,0x11c801ce,0xdddddddd,0x00000009,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x3fffea00,0xffffffff,0x3ea3ffff,
    0xfff984ff,0x880befff,0xfffff10f,0x0000bfff,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x437fd400,0xffebabee,
    0x6ea8adff,0x3fffffe2,0x000005ff,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0xf10ffd40,0xffff9301,0xaaa83fff,
    0x001aaaaa,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x3fb80000,0xfb510166,0x0000017d,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x40000000,0xfffffffa,0xffffffff,
    0x0012e03f,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x2a000000,0xffffffff,0xffffffff,0x00000003,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x99988000,
    0x99999999,0x00099999,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
};

static signed short stb__times_bold_35_usascii_x[95]={ 0,2,2,0,1,2,1,2,1,0,1,0,1,0,
1,0,1,2,0,0,0,1,1,1,1,0,2,2,0,0,0,1,1,0,0,1,0,0,0,1,0,0,0,0,
0,0,0,1,0,1,0,1,1,0,0,0,0,0,0,3,0,1,2,-1,0,1,0,1,1,1,1,1,1,0,
-1,1,0,1,1,1,0,1,1,1,0,0,0,0,0,0,0,2,2,1,0, };
static signed short stb__times_bold_35_usascii_y[95]={ 28,6,6,6,6,6,6,6,6,6,6,9,23,19,
23,6,6,6,6,6,6,7,6,7,6,6,13,13,10,14,10,6,6,6,7,6,7,7,7,6,7,7,7,7,
7,7,7,6,7,6,7,6,7,7,7,7,7,7,7,7,6,7,6,32,6,13,7,13,7,13,6,13,7,6,
6,7,7,13,13,13,13,13,13,13,8,13,13,13,13,13,13,6,6,6,17, };
static unsigned short stb__times_bold_35_usascii_w[95]={ 0,6,13,16,14,28,24,5,10,10,14,18,6,10,
6,9,14,12,15,14,15,14,14,15,14,15,6,7,18,18,18,14,28,23,20,21,22,20,19,24,25,12,16,25,
20,30,23,23,19,23,24,16,19,23,23,32,23,23,21,7,9,7,15,18,8,15,17,13,16,13,12,15,16,9,
9,17,9,25,16,14,17,16,13,11,11,17,16,23,16,16,14,10,3,9,18, };
static unsigned short stb__times_bold_35_usascii_h[95]={ 0,23,11,23,25,23,23,11,29,29,13,17,11,4,
6,23,23,22,22,23,22,22,23,22,23,23,16,21,16,8,16,23,29,22,21,23,21,21,21,23,21,21,22,21,
21,21,22,23,21,28,21,23,21,22,22,22,21,21,21,27,23,27,12,3,6,16,22,16,22,16,22,22,21,22,
29,21,21,15,15,16,22,22,15,16,21,16,16,16,15,22,15,29,29,29,6, };
static unsigned short stb__times_bold_35_usascii_s[95]={ 250,166,233,204,127,221,1,250,37,1,195,
165,226,48,247,103,113,215,228,128,17,46,88,235,73,188,203,157,184,1,1,
173,58,78,55,26,22,1,231,48,187,144,218,139,118,87,1,142,50,87,25,
153,76,177,153,120,96,120,165,119,143,111,210,165,20,61,197,210,180,77,33,
1,70,170,48,213,45,154,120,91,102,201,106,224,244,236,44,20,137,61,180,
26,22,12,29, };
static unsigned short stb__times_bold_35_usascii_t[95]={ 13,1,123,1,1,1,31,1,1,1,123,
101,123,140,123,31,31,31,31,31,55,55,31,55,31,1,101,101,101,140,123,
1,1,55,101,31,101,101,78,31,78,101,55,78,78,78,78,1,78,1,78,
31,101,55,55,55,101,101,78,1,31,1,123,119,140,123,31,101,31,123,55,
55,78,31,1,78,101,123,123,123,55,55,123,101,31,101,123,123,123,55,123,
1,1,1,140, };
static unsigned short stb__times_bold_35_usascii_a[95]={ 126,168,281,253,253,506,421,140,
168,168,253,288,126,168,126,140,253,253,253,253,253,253,253,253,
253,253,168,168,288,288,288,253,470,365,337,365,365,337,309,393,
393,197,253,393,337,477,365,393,309,393,365,281,337,365,365,506,
365,365,337,168,140,168,294,253,168,253,281,224,281,224,168,253,
281,140,168,281,140,421,281,253,281,281,224,197,168,281,253,365,
253,253,224,199,111,199,263, };

// Call this function with
//    font: NULL or array length
//    data: NULL or specified size
//    height: STB_FONT_times_bold_35_usascii_BITMAP_HEIGHT or STB_FONT_times_bold_35_usascii_BITMAP_HEIGHT_POW2
//    return value: spacing between lines
static void stb_font_times_bold_35_usascii(stb_fontchar font[STB_FONT_times_bold_35_usascii_NUM_CHARS],
                unsigned char data[STB_FONT_times_bold_35_usascii_BITMAP_HEIGHT][STB_FONT_times_bold_35_usascii_BITMAP_WIDTH],
                int height)
{
    int i,j;
    if (data != 0) {
        unsigned int *bits = stb__times_bold_35_usascii_pixels;
        unsigned int bitpack = *bits++, numbits = 32;
        for (i=0; i < STB_FONT_times_bold_35_usascii_BITMAP_WIDTH*height; ++i)
            data[0][i] = 0;  // zero entire bitmap
        for (j=1; j < STB_FONT_times_bold_35_usascii_BITMAP_HEIGHT-1; ++j) {
            for (i=1; i < STB_FONT_times_bold_35_usascii_BITMAP_WIDTH-1; ++i) {
                unsigned int value;
                if (numbits==0) bitpack = *bits++, numbits=32;
                value = bitpack & 1;
                bitpack >>= 1, --numbits;
                if (value) {
                    if (numbits < 3) bitpack = *bits++, numbits = 32;
                    data[j][i] = (bitpack & 7) * 0x20 + 0x1f;
                    bitpack >>= 3, numbits -= 3;
                } else {
                    data[j][i] = 0;
                }
            }
        }
    }

    // build font description
    if (font != 0) {
        float recip_width = 1.0f / STB_FONT_times_bold_35_usascii_BITMAP_WIDTH;
        float recip_height = 1.0f / height;
        for (i=0; i < STB_FONT_times_bold_35_usascii_NUM_CHARS; ++i) {
            // pad characters so they bilerp from empty space around each character
            font[i].s0 = (stb__times_bold_35_usascii_s[i]) * recip_width;
            font[i].t0 = (stb__times_bold_35_usascii_t[i]) * recip_height;
            font[i].s1 = (stb__times_bold_35_usascii_s[i] + stb__times_bold_35_usascii_w[i]) * recip_width;
            font[i].t1 = (stb__times_bold_35_usascii_t[i] + stb__times_bold_35_usascii_h[i]) * recip_height;
            font[i].x0 = stb__times_bold_35_usascii_x[i];
            font[i].y0 = stb__times_bold_35_usascii_y[i];
            font[i].x1 = stb__times_bold_35_usascii_x[i] + stb__times_bold_35_usascii_w[i];
            font[i].y1 = stb__times_bold_35_usascii_y[i] + stb__times_bold_35_usascii_h[i];
            font[i].advance_int = (stb__times_bold_35_usascii_a[i]+8)>>4;
            font[i].s0f = (stb__times_bold_35_usascii_s[i] - 0.5f) * recip_width;
            font[i].t0f = (stb__times_bold_35_usascii_t[i] - 0.5f) * recip_height;
            font[i].s1f = (stb__times_bold_35_usascii_s[i] + stb__times_bold_35_usascii_w[i] + 0.5f) * recip_width;
            font[i].t1f = (stb__times_bold_35_usascii_t[i] + stb__times_bold_35_usascii_h[i] + 0.5f) * recip_height;
            font[i].x0f = stb__times_bold_35_usascii_x[i] - 0.5f;
            font[i].y0f = stb__times_bold_35_usascii_y[i] - 0.5f;
            font[i].x1f = stb__times_bold_35_usascii_x[i] + stb__times_bold_35_usascii_w[i] + 0.5f;
            font[i].y1f = stb__times_bold_35_usascii_y[i] + stb__times_bold_35_usascii_h[i] + 0.5f;
            font[i].advance = stb__times_bold_35_usascii_a[i]/16.0f;
        }
    }
}

#ifndef STB_SOMEFONT_CREATE
#define STB_SOMEFONT_CREATE              stb_font_times_bold_35_usascii
#define STB_SOMEFONT_BITMAP_WIDTH        STB_FONT_times_bold_35_usascii_BITMAP_WIDTH
#define STB_SOMEFONT_BITMAP_HEIGHT       STB_FONT_times_bold_35_usascii_BITMAP_HEIGHT
#define STB_SOMEFONT_BITMAP_HEIGHT_POW2  STB_FONT_times_bold_35_usascii_BITMAP_HEIGHT_POW2
#define STB_SOMEFONT_FIRST_CHAR          STB_FONT_times_bold_35_usascii_FIRST_CHAR
#define STB_SOMEFONT_NUM_CHARS           STB_FONT_times_bold_35_usascii_NUM_CHARS
#define STB_SOMEFONT_LINE_SPACING        STB_FONT_times_bold_35_usascii_LINE_SPACING
#endif

