// Font generated by stb_font_inl_generator.c (4/1 bpp)
//
// Following instructions show how to use the only included font, whatever it is, in
// a generic way so you can replace it with any other font by changing the include.
// To use multiple fonts, replace STB_SOMEFONT_* below with STB_FONT_times_22_latin1_*,
// and separately install each font. Note that the CREATE function call has a
// totally different name; it's just 'stb_font_times_22_latin1'.
//
/* // Example usage:

static stb_fontchar fontdata[STB_SOMEFONT_NUM_CHARS];

static void init(void)
{
    // optionally replace both STB_SOMEFONT_BITMAP_HEIGHT with STB_SOMEFONT_BITMAP_HEIGHT_POW2
    static unsigned char fontpixels[STB_SOMEFONT_BITMAP_HEIGHT][STB_SOMEFONT_BITMAP_WIDTH];
    STB_SOMEFONT_CREATE(fontdata, fontpixels, STB_SOMEFONT_BITMAP_HEIGHT);
    ... create texture ...
    // for best results rendering 1:1 pixels texels, use nearest-neighbor sampling
    // if allowed to scale up, use bilerp
}

// This function positions characters on integer coordinates, and assumes 1:1 texels to pixels
// Appropriate if nearest-neighbor sampling is used
static void draw_string_integer(int x, int y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0, cd->t0); glVertex2i(x + cd->x0, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t0); glVertex2i(x + cd->x1, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t1); glVertex2i(x + cd->x1, y + cd->y1);
        glTexCoord2f(cd->s0, cd->t1); glVertex2i(x + cd->x0, y + cd->y1);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance_int;
    }
    glEnd();
}

// This function positions characters on float coordinates, and doesn't require 1:1 texels to pixels
// Appropriate if bilinear filtering is used
static void draw_string_float(float x, float y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0f, cd->t0f); glVertex2f(x + cd->x0f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t0f); glVertex2f(x + cd->x1f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t1f); glVertex2f(x + cd->x1f, y + cd->y1f);
        glTexCoord2f(cd->s0f, cd->t1f); glVertex2f(x + cd->x0f, y + cd->y1f);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance;
    }
    glEnd();
}
*/

#ifndef STB_FONTCHAR__TYPEDEF
#define STB_FONTCHAR__TYPEDEF
typedef struct
{
    // coordinates if using integer positioning
    float s0,t0,s1,t1;
    signed short x0,y0,x1,y1;
    int   advance_int;
    // coordinates if using floating positioning
    float s0f,t0f,s1f,t1f;
    float x0f,y0f,x1f,y1f;
    float advance;
} stb_fontchar;
#endif

#define STB_FONT_times_22_latin1_BITMAP_WIDTH         256
#define STB_FONT_times_22_latin1_BITMAP_HEIGHT        138
#define STB_FONT_times_22_latin1_BITMAP_HEIGHT_POW2   256

#define STB_FONT_times_22_latin1_FIRST_CHAR            32
#define STB_FONT_times_22_latin1_NUM_CHARS            224

#define STB_FONT_times_22_latin1_LINE_SPACING          14

static unsigned int stb__times_22_latin1_pixels[]={
    0x01b302a0,0x01305500,0x0001a880,0x266000aa,0x05540199,0x54055000,
    0x2a805901,0x801a8800,0xbba8801a,0x8854001b,0x0d544002,0x22555510,
    0xa9802aaa,0x42f22000,0x64028808,0x0007f5c1,0x015c07ea,0x0001ffb0,
    0x3aa007f1,0x402eabff,0xf10002f9,0x5f815c07,0x000ffe60,0x80ae01b6,
    0x0e4c0bcb,0x00e40ea0,0x3b6ab7a2,0x12abfa82,0xdb00fb55,0xcffcb800,
    0x3603f904,0x8001f901,0x400ec02c,0x7000994a,0x3ffee009,0x16a00b1f,
    0x2e025c00,0x98d80102,0x01e8000e,0x803b815c,0x4c03a01b,0x2a0bea05,
    0x7007d44f,0x000e880f,0xb01db88c,0x5c0b705f,0x401c000f,0x05428068,
    0xfe800e00,0x400b1fff,0x70070003,0x44130005,0x40288002,0x2004b82b,
    0x2607980b,0x205f880f,0x803ea2fb,0x000d407b,0x3201aa88,0x2e02f81f,
    0xb000000f,0x04cccc47,0x98866662,0x4cc40999,0x3fffe219,0x55100b1f,
    0x1aa88003,0x20080ae0,0x26201aa8,0x4cc40999,0x0b70ae19,0x83884462,
    0x03f501fa,0x37cc05f9,0x8bdc01f5,0x4c409999,0x59b10199,0x1f705f95,
    0x47dc07b8,0x77542efc,0x7dc175c3,0x819ff930,0x3262efa8,0x7d440cff,
    0x7ffff42e,0x566c40b1,0x6c402fca,0xb82fcaac,0xd885ea82,0x982fcaac,
    0x5440cffc,0x0d0ae2ef,0x48bee6f2,0x1f702f98,0xff801ff0,0xbdc01f51,
    0x441dffd9,0x2fa81efc,0x43d44f98,0x5e7dc07e,0x0fe42ffa,0x10fd4126,
    0x882d80ff,0x5c16c07f,0x20b1ffff,0x04f982fa,0x89f305f5,0x22fcc42b,
    0x84f982fa,0x216c07f8,0x8b61662b,0x3e2120fc,0xff10f300,0x3ea5fd00,
    0x7fd1ee00,0x2fc41aa0,0x43d45f70,0x30fdc06f,0x644f88bf,0x6f87f301,
    0x06f80e40,0xffeb80e4,0x40bf10b1,0x02fc42fb,0xf80445f7,0xfb817e25,
    0x0e406f82,0x2e43b8ae,0x0b3091b6,0x03fcc0e8,0x00fa9fe4,0x01ff31ee,
    0x80bf601b,0xf11a66f8,0x7c0fb80b,0x0b10fc87,0x01be27c4,0x901be039,
    0x21639003,0x1be202fd,0x37c405fb,0x0bf65e80,0x06f86f88,0x1d8ae0e4,
    0x487f03ea,0x0dc4014c,0x7fb00ff1,0x87b803ea,0xf01d44fb,0x11fe801f,
    0x5c05f88b,0x220fe40f,0x7c40574f,0x072037c5,0x0072037c,0x07fc2c6e,
    0x0ff87fa0,0x7400ff40,0xfd003fe5,0x0e406f83,0x22e468ae,0xc88e21fa,
    0xfe893000,0xfa8ff400,0x7f41ee00,0x3fc40d11,0xf0917ec0,0x640fb80d,
    0x80d1f907,0x2037c4f8,0xc80df01c,0x88b1b801,0x12fd807f,0x05fb00ff,
    0x01fe2bd0,0x80df0bf6,0xe8d15c1c,0x20323f43,0x6415c02b,0xa9be202f,
    0x4c1ee00f,0x7cc03b6f,0x063fc807,0x81f701b6,0x09bf106e,0x037c3f98,
    0x2037c072,0x8b1b801c,0x3fc807f9,0x7f900ff3,0xf9af40ae,0x7c3fc807,
    0x8ae0e406,0x6dc7f11c,0x03c40aa5,0x81ba20f1,0x803ea1fb,0x137f207b,
    0xfb00ff10,0x5c07c805,0xc807e22f,0x20fd401f,0xf80e406f,0x5c00e406,
    0x807f88b1,0x00ff12fd,0x740ae5fb,0xfb00ff15,0x0e406f85,0x3fa3a8ae,
    0x4771bb4c,0xfb817cc2,0xf309f300,0x2e00fa85,0x4007f407,0x8ff400ff,
    0x00fcc0da,0x03977bf7,0x86c80598,0xf806c07f,0x5c006c07,0x801ff0b1,
    0x003fe1fe,0x740ae3fd,0xfd003fe5,0x06c07f83,0x322588ae,0x1b82f262,
    0x1fa80fd4,0x32ef7220,0x200fa81d,0x803f407b,0x9be202fc,0x203c81fc,
    0x700088fb,0xfd05f005,0x01fa0680,0x42c6e00d,0x1be202fc,0x37c405f9,
    0xfc93a057,0x3a1be202,0x215c3407,0x4244002c,0x03f300fa,0x201ffd30,
    0x01ee00fa,0x1be200fd,0xd0041fb8,0x0003ee01,0x320b500d,0x640d101f,
    0x200d101f,0x0df10b1b,0x1be20fdc,0x40ae1fb8,0xb81be23f,0x101fc81f,
    0x0590570d,0x03c41220,0x7ec400f1,0x5c01f506,0x3003f407,0x005f509f,
    0x01f90498,0x401dbc88,0x03ba2058,0x774403d1,0xb800f440,0x213e60b1,
    0x09f302fa,0x512b85f5,0x213e607c,0x1dd102fa,0x02b81e88,0x404a8059,
    0x0007501d,0x0fa81bd5,0x1ff01ee0,0x5deec400,0x710000dd,0x200bfe98,
    0x1cc03ff9,0x766f6c40,0xded8801d,0x2e001dec,0x5eec40b1,0x6c400ddb,
    0xb80ddbbd,0x2035df52,0x0ddbbdd8,0x766f6c40,0x4c05701d,0x1ccbabcb,
    0x02a85500,0xa85dcc00,0xddd35eef,0x37ff260f,0x00198002,0x13333000,
    0x00000880,0x44000310,0x00410001,0x33000198,0x00220880,0x31000198,
    0x22001100,0x00000009,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x4000d471,0x0550002a,0x98002a60,0x054c060a,0x50001550,0x00154005,
    0x00443322,0x028802a6,0x402e4ba2,0x350000aa,0x000400e2,0x10cc8812,
    0x00298001,0x0288aa17,0x00bf15f7,0x98003f88,0x4f8803ff,0x5d5eec40,
    0x80bf06de,0x7c4002f9,0x07ff3003,0x267fe5c0,0x6417fe20,0x3f980e89,
    0x05f300dd,0x0fe5be00,0x44005640,0x33ff2e04,0x255d4004,0x93fcfea0,
    0x0d47103f,0x40012e00,0x9800e99d,0x5c17a206,0xa802cc0f,0x0025c005,
    0x2001d31b,0xc803b711,0xd24c1e8a,0x5a800007,0x0a235000,0x1dd7b970,
    0x22300dc0,0x924001db,0x98661700,0x006aa204,0x04c000e0,0x206a0051,
    0x03a00ee8,0x001c0017,0x2209800e,0x20133302,0x06219998,0x006a5b87,
    0x2200e000,0x4c409999,0x85daa199,0x200b101d,0x9b300008,0x99998805,
    0xaacd8801,0x022002fc,0x88008800,0x7dc19999,0x9988d403,0x26662199,
    0x20999999,0x99999998,0x26662099,0x40999999,0xf5106fd9,0x4cccc43b,
    0xea827cc1,0x20175c3e,0xffc98008,0x177d440c,0x20d42ebb,0xb803fdcb,
    0x016e0005,0x3077fea2,0x4f982fa8,0x4000b700,0xffa8805b,0x000fec1d,
    0x443bff51,0xcccccffa,0x33fea24f,0x224fcccc,0xcccccffa,0x409fd04f,
    0x6ffd441d,0xf904fc81,0x5b804983,0xd80ff100,0x105c7ec2,0x01fdc9ec,
    0xe80007f4,0x05fb000f,0xf702fc49,0x001fd005,0x6c003fa0,0x000ff82f,
    0x1fd02fd8,0x01fd0910,0x101fd091,0x40fff209,0x105fb01c,0x9f109f97,
    0x0fe801c8,0x1c80df00,0x5406ffd4,0x403b1b1f,0x98003fe9,0x3f9003fe,
    0x80bf6588,0x7f4c06f8,0x3fe98003,0xf983f900,0x03f90007,0x6c1403f6,
    0x1fb0500f,0x7fd640a0,0x3f901c81,0x642fd490,0xd300b10f,0x01be007f,
    0x07ff7039,0x6c00a6d7,0x9d8006f9,0x83f9006f,0xd003fe69,0x37cec03f,
    0x037cec00,0x7fc41fc8,0x01fc8000,0x360101fb,0x1fb0080f,0x7cc64010,
    0xfc80e40f,0x03ea24c1,0x200ae9f1,0xdf006f9d,0xfd301c80,0x00cb6c1b,
    0x005f9588,0x802fcac4,0xf8bd41fc,0x102fd807,0x8800bf2b,0xf9005f95,
    0x0003ff03,0x03f603f9,0x103f6071,0x7103f607,0x46fb8640,0xa83f901c,
    0x8fc82e86,0x5f958806,0x1c80df00,0x643bf6e0,0x2c80448f,0x96400bf3,
    0x1fc805f9,0x807f9bdc,0x265903fc,0x4cb2005f,0x81fc805f,0x640803fc,
    0x335fb01f,0x2bf607b5,0xfb03da99,0x407b5335,0x1c97f20c,0xdf883f90,
    0x37e20320,0xbf32c804,0x1c80df00,0x54ff22e0,0x340622ef,0x234003f6,
    0x0fe400fd,0x01fe23ee,0x36340bf6,0xfd8d000f,0x440fe400,0x902a01ff,
    0x2aff603f,0x7fb03eca,0x3607d955,0x03ecaabf,0x327fd032,0xf303f901,
    0x7e40511d,0x07ec6801,0x83901be0,0xfd3742e0,0x32a09759,0x804fb999,
    0x4fb999ca,0x3f20fe40,0xfe801ff1,0xb999ca81,0x99ca804f,0x7e404fb9,
    0x703df301,0x3603f903,0xfd81c40f,0x0fd81c40,0x881901c4,0xf901cafe,
    0x00fbe603,0x339500b3,0x7f809f73,0x0b9606c0,0x6fffcc9b,0x99999d00,
    0x999d00ff,0xfc80ff99,0x2fc97ec1,0x6741be20,0x807fcccc,0x7fccccce,
    0xb100fe40,0x203999df,0x01fb01fc,0x0203f601,0x900407ec,0x03dff301,
    0x6f9807f2,0x674015c0,0x407fcccc,0x8fc3407e,0x26e0f88b,0x5c126008,
    0x5c12602f,0x907f202f,0xb81be23f,0xf704981f,0xfb824c05,0x4007f202,
    0x01fc801d,0x360401fb,0x1fb0200f,0xa806c040,0x03f901ff,0x01a02f98,
    0x017dc126,0x21a203f9,0x41cbddfc,0x2201b004,0x4403606f,0x207f206f,
    0x7d427cc0,0x3e201b02,0x7c403606,0x2007f206,0x1fc806e8,0x0a601fb0,
    0xb0a601fb,0x360a601f,0x6407f202,0x8724c81f,0xd801dbc8,0x440df100,
    0x00f440ee,0x00730193,0x83fe80d5,0x81ff406a,0xbb1002fd,0x2a01bb77,
    0x541ff406,0xd81ff406,0x00d5002f,0x07f605fb,0x03fb03a2,0x81fd81d1,
    0x3bf260e8,0x7ec07603,0xf3164a82,0x80d5007f,0x3b6203fe,0x2801decd,
    0xfea80130,0x4fffb80b,0x2e02ffaa,0x3f264fff,0x0cc002ef,0x202ffaa0,
    0x3aa4fffb,0xfffb80bf,0x0bbff264,0x64c03970,0x3ee62eff,0x5feeeeef,
    0x3bbbfee6,0x3ee65fee,0x5feeeeef,0x7e4c0000,0x0aaa82ef,0xfea80088,
    0x4fffb80b,0x00001880,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x8e200000,
    0x2a38801b,0x98028801,0xaa800200,0x00353000,0x39710283,0xa800d440,
    0x40153002,0x800401a9,0x055402cb,0x28355100,0x55006a20,0x8806a600,
    0x2886a02a,0x90040a20,0x700bf15f,0x980bf15f,0x0b101d9e,0x20297fdc,
    0x1db002f9,0x21223980,0x205d88ec,0x3ffa807c,0x77c05e80,0x21bfd106,
    0x40193982,0xce8803f9,0x03baecaa,0x3f5007ee,0xec80db00,0x3333201f,
    0xf10bf200,0x01a8e209,0xf006a388,0x00641b27,0x809ffb15,0x001d005a,
    0x3e21d457,0x1d803ea3,0x0074c6c0,0xd95c01d1,0xefea8983,0x80193980,
    0x417d405a,0x016c06f9,0x00e803b8,0xd702d566,0x8819300b,0x2666623e,
    0x80099999,0x52f88008,0x0403a81f,0x200e0031,0x64190019,0x5f317cc1,
    0x41301440,0x8802a028,0x02a04141,0x07002db8,0xfe8837c4,0x07000a02,
    0x26140198,0x007d1c81,0x67fd4400,0x804fcccc,0x31f9805b,0x0002c41f,
    0xd0000000,0x2e1fa858,0x0000200f,0x80040020,0x00001000,0x7cec0bf2,
    0x00100007,0x30004002,0x4002805f,0x804880fe,0x72f800fe,0xc9800d8d,
    0x99301eec,0x0eda83dd,0x775c5d93,0x23efeeef,0x107d51fa,0x2607d979,
    0xc881eecc,0xbc883ecb,0xcbc883ec,0xecbc883e,0xc9876d43,0x6c07fc2e,
    0xcc983fd1,0xd9b501ee,0x7d9b5017,0x17d9b501,0x1ffd9710,0x3f6001c0,
    0xfe980500,0x47b4b803,0x20e8802a,0x907441fc,0x260fb83f,0x1223982f,
    0x0bfa27ea,0x440fc972,0xb907f20e,0xc97207e4,0x1f92e40f,0x703f25c8,
    0xf117cc1f,0x1fec570f,0x20fe41d1,0xb30fe659,0x99661fcc,0xd887cc3f,
    0x8001903f,0xd80080fd,0x375006f9,0xb02aa2c4,0x2ec4f88b,0x41f713e2,
    0x2a1b82f8,0x3ee1fa82,0x83f51ec4,0x3627c45d,0x47b07ea3,0xf51ec1fa,
    0x07ea3d83,0x317c41f7,0x7e44a8ff,0x89f11763,0x46e999be,0x46e999be,
    0x46e999be,0x542fcc6d,0x40fd8005,0xfcac4038,0x6c1b0002,0x20fe0e9a,
    0x36c1fc6d,0x82f883ee,0x3ea0720d,0xfb503741,0x06d83f83,0xda807f6a,
    0x07f6a01f,0x7dc1fda8,0xff88be20,0x45fb0b30,0x3e26d83f,0x222aaaab,
    0x22aaaabf,0x2aaaabf8,0x11fe13e2,0x20fa605f,0x3da99afd,0x05f99640,
    0x43ea2b80,0xf909f33f,0x3f213e61,0x2f883ee0,0x3fbbbfae,0xb07ea3ee,
    0xfa9cb81f,0x3f213e61,0x0fd4e5c0,0x40fd4e5c,0xb81fa9cb,0x7dc1fa9c,
    0x5fd0be20,0x21fd01b1,0x30fc84f9,0x02f9805f,0x3e6017cc,0x3f60fd83,
    0xd81ff700,0x03ecaabf,0x8003f634,0x2bb3e448,0x227c86f8,0x7dc7c86f,
    0x8b10be20,0xfb83f505,0x21fa9720,0x647c86f8,0x4b907ea5,0xf52e41fa,
    0x07ea5c83,0x217c41f7,0xf881dbfc,0x9f21be26,0xf10885f8,0x17e2110b,
    0x642fc422,0x99362fc7,0x2207ec0c,0x26672a03,0x036004fb,0x1fb2ecd9,
    0x207ec5e8,0xf30fd45e,0x41223987,0x4d7089fa,0xb07ea2f8,0x3e25e81f,
    0x2f887ea2,0x22f887ea,0xa8be21fa,0xf30fd41f,0x3205fd07,0x3a07ec0f,
    0xf0e0ffc5,0x0ffc383f,0x8bd0db0e,0x2123645f,0x3a0080fd,0x07fccccc,
    0x21f50570,0xf88fea2f,0x1f11fd40,0x9f934f98,0x5c0aa1b8,0x447b5d9f,
    0x2afda8df,0x20f88fea,0xafda8df8,0xfb51bf12,0x2a37e255,0x1bf12afd,
    0x7cc55fb5,0xf709f934,0xf505f309,0x3ee07c47,0x7dc2dadf,0x7dc2dadf,
    0x7cc2dadf,0x1f903e23,0xd80b99d4,0x0930200f,0x09300bee,0x2a07556c,
    0xf501dbdf,0x3f603b7b,0x362df8cf,0x3fa60720,0xfb82bda9,0x540ef8bf,
    0xfb81dbdf,0x2e0ef8bf,0x20ef8bff,0x0ef8bffb,0x3be2ffee,0x7c67fec0,
    0x3b23662d,0x2a00dcbb,0xb501dbdf,0x3f6a07df,0x7dfb503e,0x076f7660,
    0x42eafb22,0x4c03f600,0x6f8806c2,0x0aa005c0,0x02200110,0x40808220,
    0x10200000,0x20400880,0x81008100,0x22008100,0x06602020,0x02001100,
    0x00080040,0x00060011,0x41d103fb,0x01ff406a,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x40000000,0xeeeeffb9,
    0x2ffaa5fe,0x24fffb80,0xeeeeeee8,0x000006ee,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x1013002a,0x03101803,0x05300098,0x26005500,0x44026662,0x06601999,
    0x22000b50,0x266201aa,0x4ccc4099,0x4c015101,0x33009999,0x29880133,
    0x3001a880,0x20333333,0x04d44019,0x88035100,0x0b102fbd,0x42c409d3,
    0x402c04e9,0x001eace8,0x19005ff5,0xa8837ecc,0xabe881df,0x007eb80e,
    0x7e5566c4,0x0cffc982,0x64177d44,0xf9304fff,0xfff5017f,0x00ee405f,
    0x99535991,0x3fffe601,0x54e5c7ff,0xecaea82d,0x26b32201,0x32080cca,
    0x13201902,0x409900d8,0x2a6d801c,0xe98d8805,0x4fe82c00,0x726c0760,
    0xa801f20d,0x884f982f,0x5416c07f,0x2605fb12,0x2aab606f,0x8805d302,
    0x3203200c,0x24daaabd,0xf307c478,0x0c880fc8,0x83540320,0x5c13203a,
    0x24c13202,0x016a5f80,0x2a028826,0x207ff903,0x221fb81c,0x1007c82f,
    0x417dc0bf,0x0c0e406f,0x2fc40fe6,0x3f8802a8,0x5f646440,0x388320bc,
    0x7c35c3d0,0x89f11722,0x997950c8,0x17ae032d,0x884c80b1,0x0d826405,
    0x07a2ff00,0x40320000,0x1c81ffac,0xb86f86d8,0x405fb007,0x406f86f8,
    0x01f8801c,0x0b3a0bf1,0x21700db0,0x0091b27a,0x222fa8f1,0x1be13e0f,
    0x4f113217,0x01c8d304,0x2006c264,0x2002b84c,0x5551dbfd,0x4c3b6a15,
    0x640b02ec,0x0e40ff98,0x5c3f42fc,0xf82efd8f,0x20ff400f,0x400e406f,
    0x217e203a,0xa81efffa,0xf524013f,0x70090fcc,0xd8afe889,0x1f61be21,
    0x48541ea9,0x0931d422,0x803a8990,0x20024c4c,0x06fc47fa,0x82f983ee,
    0x7dc3203a,0x17e20e46,0x59f703f6,0x3fc45ff7,0x1be17ec0,0x1fa80390,
    0x54417e20,0x5fe41ffc,0x51c43feb,0x002a364f,0x1dfd103d,0x27e81fb0,
    0x1500db38,0x50b06f26,0x588e5cc5,0x39730ae6,0x640aa06c,0x03e23fed,
    0x82f883ee,0xfc83200c,0x09f30725,0x20fb81fb,0x01fe65f8,0x80df0ff2,
    0x3ff6e01c,0x500bf103,0x320ee89f,0xbfa8a62f,0x2202983f,0x213fee07,
    0x997e23fb,0x05300dd2,0x01fcc1c8,0x27564c36,0x07f30ae0,0x543fe69b,
    0x7c41f703,0x20640582,0xbf0393fe,0xd0f70fb0,0x6c03fc4f,0x32037c2f,
    0x107f9801,0x83ee00bf,0x51c5f85f,0x802e1b2f,0xfb19504b,0xf97dd70b,
    0x801f7385,0x9112600b,0x431d4079,0x9116206a,0x360fc879,0x3ee058df,
    0x0750be20,0x57f440c8,0x6d86e81c,0x20fb87b8,0x0ff400ff,0x001b01fe,
    0x17e207ee,0x0bf17c40,0x4f5241fd,0x07a0244e,0x203fb1e6,0xf1481f90,
    0x36024105,0x881e4640,0x0d80ee05,0x1be1e464,0x5c01dff1,0x190be20f,
    0xff980c80,0x5f87c81e,0x647c87b8,0x21be202f,0x3003407e,0x8013e20f,
    0x1b21ba0f,0x7cc3ea17,0x83c40912,0x2204f85c,0x5d70b84f,0x2e0489cc,
    0x066cd642,0x204880e4,0x66cd643a,0xfa81ff10,0x43f50c2f,0x6c02c3f9,
    0x503ff500,0x5c17c41f,0x37c45e87,0x3f903f70,0x4a801a20,0x5003f884,
    0x1f40fb8b,0xa85e5ce4,0x12e00c9c,0xb01e4364,0xdc986409,0x2601912b,
    0x2eeccc85,0x204881cc,0xeeccc858,0x6cc37f62,0x22b9cffc,0x49f934f9,
    0x202d802a,0x647b01fc,0x7cc1f704,0xfa84f980,0x881dd102,0x7443501e,
    0x03e67ee1,0x406cc2f2,0x6403e24e,0xd8019100,0x0e83f101,0x01900bb0,
    0x00d80322,0xe982c1e4,0x006c1dcc,0xfffb30f2,0x13ffe61b,0x37e33ff6,
    0x7e4c01b2,0x4407603e,0x36204cbd,0x2200bbcf,0x00ddbbdd,0x6f66f6c4,
    0x377bfa01,0x81677cc0,0x100ceffc,0xb803b799,0x00bcbabc,0x33aa03c4,
    0x15d4c1ba,0x97579700,0x4014c017,0xaa80cc19,0x401442aa,0x44031019,
    0x04082200,0x02000000,0x33000300,0x80062000,0x88018008,0x00022000,
    0x40020006,0x00003008,0x00000003,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x5302c880,
    0x00d44021,0x99988298,0x01999809,0x55100104,0x54c00221,0x26204860,
    0x33331199,0x004ccc41,0x5cfa2066,0x33330606,0x2200ccc4,0x99998800,
    0x3d35c801,0x004cccc4,0xc9800a80,0x302efc8f,0x0399bb57,0x36a1fecc,
    0x260eedbb,0x200eea9b,0x3661f9ad,0xfea80cff,0xdeddd883,0x2e6f7203,
    0x36201dee,0x26debabd,0x5ffb301b,0x8833fee2,0x3e600dfa,0x0fb4f883,
    0x3ffa8dd5,0xb700bf22,0x39ff7100,0x8beadb00,0xfecdffb8,0x7ffe400c,
    0x33f6600d,0x2f82ffab,0xf1006bfa,0x3ea07c47,0x04f98760,0x7fc26c9b,
    0x3e20f201,0x2ec0fea1,0xbd102f98,0x024c3ee0,0x05fb0ff1,0x00ffa01a,
    0x5c37ccc0,0x74015c2f,0x01fd000f,0x20fe8000,0x272a06fb,0x7dc04fd9,
    0x1f717e61,0x7c4007e4,0xf06c1ae3,0x45f07e87,0x203fb808,0x3f88bb06,
    0x415c07d8,0x83a00ee8,0x2a0fec05,0x6404984f,0x200403fa,0x068bf06e,
    0xb003fe98,0x0040033f,0x05fd03f6,0xb803fa0e,0x3f23fc0f,0x22003ee1,
    0x2e0bf23f,0x30dd0ee0,0x0df1005f,0x10fe212a,0x804fb87f,0x5403fb81,
    0x4fa806e1,0x201c86f8,0xc883f8ca,0x0db03ecb,0x401d43f2,0xfb006f9d,
    0x2a07df99,0xfd80becd,0x7001fec0,0x207dc03f,0xd8fe61fc,0xf999b105,
    0x001ffd47,0x0be60be2,0x06c17e40,0x0fe217cc,0x360005fb,0x0244001f,
    0x83ff31fe,0x1fc56206,0xb01f92e4,0x06d3e20d,0x017e5620,0x313f63ec,
    0x7ec1fccb,0x8003fe20,0x207dc07b,0xbbcfa87c,0x3f21f880,0x0177fdc3,
    0xdfba85c8,0x22fcc02a,0x889f1058,0x9807fc3f,0x07fc1999,0x3f202c00,
    0x4993f321,0x41fc4360,0x3607ea3d,0x0127f606,0x402fccb2,0x3a3fc47d,
    0xd86e999b,0x007fb30f,0x07dc03d8,0x002321ba,0x983f88f7,0x2200dffe,
    0xcefcc80e,0x2e1fd804,0x7f11fa02,0xfb303fcc,0x003fcc5d,0x93e601b8,
    0xa80e4ff6,0xb500fe23,0xcc8db03f,0x4ccdefdc,0x400fd8d0,0xf11ff87d,
    0xb0555557,0x001bfd9f,0x2fb80588,0x57f507e2,0x889d0135,0x3ffee03f,
    0x7c401700,0x693ea003,0x64d77dc0,0x807fe23f,0x07fc44fa,0x3a024400,
    0x34bf2937,0x81fc4588,0xd81fa9cb,0x774cccc6,0x9ca81999,0x6c04fb99,
    0xf987fcc7,0xf11fb002,0x00d8001f,0x1cbbdfb8,0xffffff98,0x7f10fe25,
    0x82fec404,0x4002f803,0x4403a8fe,0x43f8dffb,0x13e602ff,0x2c0007fe,
    0x4c72bf20,0xdd9039cf,0x43ddfddd,0x3607ea5c,0x774cccc6,0xcce81999,
    0x6c07fccc,0xf88ffa27,0x87ec0885,0x0b2005fa,0x00447dc0,0x36a66273,
    0x3f88df11,0x2837c412,0x5c001f80,0x11000dbf,0x09f90fe2,0x1fe427cc,
    0x300dc040,0x1dfe8dbf,0xf9999950,0xa8be219b,0x6646d81f,0x4cccffcc,
    0x02fb824c,0x0b7fb3f6,0xfb0707fe,0x5401fe41,0x003ee003,0xd82e01d1,
    0x1c8fe20f,0x730009d0,0x2201981f,0xf10005ff,0x302ff887,0x03ff109f,
    0x20244054,0x037dc3fe,0xbf10fe20,0xd855fb51,0x3602f406,0x740df100,
    0xdffb800f,0x40fd82da,0x20ea01fe,0x3003f201,0x2254439f,0x49f70dfb,
    0x407cc0ec,0xeaa980da,0xc805ccdf,0x7f10002f,0xf303fd10,0x207be609,
    0xf701601b,0x4003f881,0xbffb83f8,0x03740ef8,0x406a81ba,0x03fd03fe,
    0x40fbf6a0,0x07fcc1fe,0x65d55754,0x017fb305,0x3ffffdb8,0xbf5dfd50,
    0x36f7b325,0x303f901d,0x07bfea99,0x44001a60,0xdd901dfb,0x4019d957,
    0x1cccefd8,0x0d100dc0,0x7f10003a,0xfb881020,0x7fe4c1bf,0x05ff540c,
    0xb327ffdc,0x04005bff,0x42dffc98,0xff50cffb,0x205fffff,0x20009999,
    0x20430009,0x02002620,0x0c001808,0x19998800,0x80009980,0x20040008,
    0x00000300,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x44000000,
    0x26219999,0x33311999,0x33100133,0x31000333,0x4ccc3333,0x983b8809,
    0x0551001c,0x003660b2,0x0174475c,0x9988b726,0x88000999,0x99999999,
    0x00ccc409,0x3a219988,0x01542642,0x4ccc4351,0x26662009,0x00200099,
    0x2eb87dd5,0x4439ff51,0xf711cffb,0x39fd99df,0x03bff510,0x4419b971,
    0x3e61cffa,0x27e440cf,0x64007faa,0x545f81fe,0x1f9001fe,0xb9d407f3,
    0x5bff712f,0xff930001,0x8fb9999f,0xd802ffb8,0xd0fe22ef,0x3203f50b,
    0x37fee20e,0x7dc42efd,0x02efdccf,0x6414bfee,0x7f424c1f,0xfd01fd00,
    0xb01fe881,0x7c4d305f,0x7cc0fe84,0x7d427c01,0x0d558801,0x0000fdc0,
    0x83707c40,0x540001fe,0x3a0b07ec,0x1ffcc06f,0x20bd0fe2,0x3a01d03c,
    0x7f427ec7,0x8a82fd40,0x4f884ffc,0x807ec0e4,0x201fb07e,0x81fc82fe,
    0x7ec1e44e,0x3e007a20,0x2801fa84,0x1fa800cc,0x0f980000,0x00007ec0,
    0x80c1fa36,0x37601fde,0x3a1fc42f,0x80620e05,0x6c3fc47d,0x081fe80f,
    0x10fc80a2,0x7403f60b,0x2601fb07,0x441fc86f,0x44fb002f,0x509f001e,
    0x2008003f,0x2021fa80,0x5d930eda,0xfd801f70,0x75260000,0x3e7a0087,
    0x85f7b105,0x102f43f8,0xf87d8040,0x6407ec1f,0x2200083f,0x3f60574f,
    0x3f60fd00,0xf903fa00,0xb003f983,0xf8007a6f,0x3721fa84,0x113ae20b,
    0x53f509d7,0x41f709ff,0x3fb222f9,0x01fb01cc,0x87e86c00,0x40feda04,
    0x7c42fbac,0x3ae22f43,0xd8275c44,0x7ec37c47,0x3260fe80,0x204ffb9f,
    0x3f6068fc,0xe988fd00,0x7ec0999f,0x3e20fe42,0xf9fd8085,0x5427c001,
    0x3103b11f,0x84f9889f,0x1fc8acfa,0x05f107dc,0x0fd801f7,0x7f475000,
    0x5a06b999,0xfbb444fa,0x17a27c42,0xf9889f31,0x3fc8fb04,0xda999fd8,
    0x66fe442f,0xbf101fd8,0x6667ec09,0x54c7fccc,0x642aabfe,0x7c0fe43f,
    0x77ec1c1f,0x427c005f,0x400d89fa,0xf509f04f,0x3ee17cc3,0x3ee0be20,
    0x0007ec00,0x2abfa0d8,0xfe9a06cb,0x217dcee0,0x6ed98ef8,0x09f04f85,
    0x0b7b33f6,0x7f6e67ec,0x261fb80c,0x807f202f,0x20fd00fd,0x0bf600fd,
    0x9ff703f9,0xb1fb03b5,0x427c00bf,0xf800ebfa,0x3f509f04,0x83ee1fc4,
    0x00fb82f8,0x540007ec,0x487feeef,0x9a4fa9a0,0x7ff442fb,0x7c0efb8e,
    0x1f609f04,0x7cc0fd80,0xf10fd41f,0x3602cc07,0x360fd00f,0x907fe00f,
    0x3bfaa03f,0x2fecfb02,0xcfa84f80,0xf04f804f,0x7c43f509,0x5f107dc3,
    0xfd801f70,0x7e858000,0x1fd1a008,0x2617dc75,0x4f80408d,0x01f609f0,
    0x5fa80fd8,0x07f10fd4,0x03f6015c,0x00fd83f4,0x03f90bf5,0x363ec058,
    0xa84f805f,0x7c02fc9f,0x3f509f04,0x87ea1fc4,0x00fb83f9,0x703007ec,
    0x4040fd05,0x7075fdc6,0x4006a85f,0x3609f04f,0x203f6007,0x10fd47f8,
    0x6c03407f,0x360fd00f,0x80fe880f,0x17a601fc,0x2fec0fd8,0x47ea13e0,
    0x413e01fe,0x221fa84f,0xc9a7cc3f,0x400fb84f,0x885300fd,0x4240fd06,
    0x2e27fc46,0x2003e42f,0x3609f04f,0x01fb000f,0x21fa8df7,0x36f223f8,
    0xf00fe801,0x981fd01f,0x05fb01ee,0x03fa04c8,0x2fc03bfa,0x0ef88fd4,
    0x217e0bf0,0x20fe21fb,0x2df8cffd,0x3fa00fe4,0x1e40e981,0xf07907f8,
    0x7e40fc81,0x3e003e43,0x3fa0bf05,0xa81fd001,0x10fdc1ff,0x01ffcc7f,
    0x98b7ff26,0xf932dffc,0x079bbdff,0x40bbff26,0xffc980bb,0x3fffea2d,
    0x47ff711c,0xfe89dfea,0x8ffee22e,0x3a63ffb8,0x2efc99df,0xf7102088,
    0xff9305bf,0x4bffdddf,0x36a2efc8,0xfeeeeeff,0x88b7f261,0x2fbfee25,
    0x7dc40020,0x8ffee23f,0x202dffc9,0xedeeffc9,0x6ff540ce,0x222efc99,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0xe88eb800,0x33333302,0x26621333,0x4ccc4099,
    0x26666621,0x88266620,0x80099999,0x99999998,0x26662099,0x4c199999,
    0x99999999,0x07a6b909,0x99998813,0x00199999,0x01008100,0x08008000,
    0x00009002,0x02002020,0x3f206200,0xefa83f98,0x0efdcccc,0x883bffb3,
    0x3ee21efc,0x3f620cff,0x3bfee21c,0x881dfecc,0xcccccffa,0x33fee24f,
    0xf30feccc,0xd99ff99d,0x17d5b67f,0x06003076,0xd9819122,0x220c9edc,
    0x7103ecbc,0x9b5019b9,0xdbc8817d,0x4c02c02e,0xd881eecc,0xdddbaecc,
    0x17553e21,0x0004e980,0x40ff40aa,0x40d503fe,0x03d82ff9,0x3fd303fa,
    0x12203fa0,0x3a86c1fa,0x401263f4,0x1800c1fb,0xd10ee0e8,0x97217e41,
    0xf134c0fc,0x0fe65989,0x16016439,0x0fe41d10,0x324fd976,0x9d70fa27,
    0x0004b801,0x9827e40e,0x400d80ff,0x202546fa,0x05fd00fd,0x360a01fb,
    0xd02a1307,0xeb81070f,0x20030cdf,0xb0f526c1,0x1ec4fc8d,0x644e83f5,
    0x74ccdf43,0x80311fc6,0x3e22ec05,0x35f71ec4,0x2a005f73,0x309701dd,
    0x0103dd99,0x4fb80df3,0x4fc801d4,0x01fb00b3,0x03f61be6,0x8003ec02,
    0x13ae207e,0x200307ea,0x1fcc3ee1,0x0fb5727c,0x5f10fed4,0xaaabf880,
    0x00efe42a,0x6c1fc058,0x2affaa06,0x4c001aaa,0x2225c2dc,0x1007f20e,
    0x3fd003ff,0x5fd001a2,0x01fb001d,0x03f607f4,0x0e1f6071,0xf9881fa0,
    0x00c1fa84,0x7f4bf118,0x93aa7cc0,0xfa9cb83f,0xf300fe61,0x13ff2005,
    0xddfdddd7,0x213e69dd,0x5d6d40fc,0x2600000f,0x8bb12e4f,0x1fec04f8,
    0x03b6f980,0x002ff980,0x17ec01fb,0x36a66bf6,0x9333fb03,0xf00fd007,
    0x0183f509,0xf987e430,0x91cefc43,0x87ea5c8f,0x3e2085f8,0xfe980885,
    0xdf102c04,0x2e6c8f90,0x5400082f,0x3e25c1cd,0x3ea06d83,0x26fe4005,
    0x004fd800,0x1fe401fb,0x3b2aaff6,0xd999fb03,0xf00fd007,0x0183f509,
    0x1ea4d830,0x44bd13fa,0xff07ea2f,0x20ffc383,0xb01f6243,0x2f40fd80,
    0x22fcc7f1,0x17d70019,0x3e639730,0xf880fc84,0x0fe8000f,0x1fed9800,
    0x3600fd80,0x2207ec2f,0x0070fb03,0x509f00fd,0x8300183f,0xf50f20e8,
    0xbf107c49,0x5c55fb51,0x5c1dacff,0x7c2dadff,0x80b012e0,0x883e23fa,
    0x277fee5f,0xb911ec4b,0x0df10005,0x00bf60f9,0x44003f40,0xd801df35,
    0xb07fe00f,0x1f60101f,0x201fa002,0x0c1fa84f,0x24488180,0x3b79f5b1,
    0xdf17ff70,0x02efea81,0xff07dfb5,0x05801977,0x81dbdfa8,0xfe89dffc,
    0x5d7e20df,0x7ec0001d,0x2fdc2f40,0x007e8030,0x013f20d8,0x17ea01fb,
    0x6c0803f6,0x00fd0007,0x317f309f,0x4000c006,0x81002609,0x00800400,
    0x038004c2,0x03100220,0x00002011,0x0f88fea0,0x298077cc,0x32003f40,
    0x3602fe82,0x81fe880f,0xe85300fd,0x07e8000f,0x49fd05f8,0x00003001,
    0x00000000,0x00000000,0x00000000,0x6defd400,0xd101fe81,0x000ff803,
    0x03fea0b9,0x3ba607f4,0xd103fb01,0x8000ff81,0xff7100ff,0x2aae6007,
    0x03aaaaaa,0x00000000,0x00000000,0x00000000,0x08800000,0xddddff90,
    0x64c0ffdd,0x3aa02dff,0x7fecc2ef,0x3bff264f,0x7303cdde,0xfdddddff,
    0x16ffe4cb,0x2dffd980,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x10000000,0x80001000,0x3b6a0004,0x01076e0c,
    0xa8040400,0x45d930ed,0x7db52eea,0x01897661,0x36014011,0x81edcccc,
    0x8ded982a,0x00601dc8,0x4402a035,0x41314419,0x3300c40a,0x77751eb8,
    0x87777777,0x2a007660,0x80c8913d,0x8bddb8cb,0xc981602c,0x3ee3fc9f,
    0x3f931cc2,0xfc989ff7,0xfd15ffa9,0x4c1f701d,0xf707e42f,0x07620d83,
    0x03e601b1,0xd82fcc58,0x0f4ff105,0x7b105f10,0x2766c45d,0x1f9174ae,
    0x1b27c57e,0x65ec41d5,0x262bfb0d,0x99999999,0x205f5240,0x1e40beb8,
    0x22fb20b3,0x02c03fa8,0x85939f91,0xf910645f,0x443fb19b,0xcfc8acfc,
    0xfb85f98b,0x7f30be20,0x109127c4,0x1003623b,0x83ba2180,0x2fabb9fb,
    0x2015e7d4,0x8b2086ac,0xd1131e61,0xafc47e49,0x1f4b34f8,0x5889d419,
    0x093e6000,0x2202dc98,0x0721362f,0xa80b00e6,0x443f202f,0x3e61fb84,
    0xbf10fd42,0x20fb87d8,0x2a6e82f8,0x6c402e7f,0x400000ea,0x676441fd,
    0x4fc80bec,0x504aa4c0,0x55c2d40d,0x23e9ee4c,0xb2e4d93f,0xaa994cb0,
    0x2aaaaaaa,0x1cda8264,0x3e21f700,0x580b02c3,0xf100fd40,0x87ea06e9,
    0x20fd43f8,0x7dc3e44f,0x3ee0be20,0x0165f5b0,0xddd905f3,0x07dddddd,
    0x3ae207f7,0x0df100ad,0x2a0360d8,0x2d81b05d,0x45b2cc99,0x8ee1f51d,
    0x3154e60c,0x55555555,0x202ee255,0x7c4003fb,0x024c3f65,0x3bbbb219,
    0x2a3eeeef,0x05bec01f,0x21fc43f5,0x3227c1fa,0x3e20fb87,0xd39bf882,
    0x4f44053b,0xf300001d,0x2ab7ea0b,0x4fac81fd,0x10588750,0x7dd0190f,
    0x0b9223db,0x0c9cd832,0x0436ef66,0x64400000,0x23f7003e,0x0b0343f8,
    0x00fd4058,0x7d40f3e6,0x3f50fe21,0x543e44f8,0x640fe61f,0x8817ee5e,
    0x2803b10e,0x46077440,0x702e9938,0x0b107f25,0x23a8c4b2,0x222babd8,
    0x10208311,0x00d40110,0x2a000000,0x45f100ce,0x3a82c85c,0x07ea02c0,
    0x7d403fa0,0x3f50fe21,0x4c3e44f8,0x209f934f,0x413e24f9,0x80ec40e8,
    0x07f601f9,0x2609b033,0x03307f44,0x5c1bc99c,0x00004ccc,0x00000000,
    0x37660000,0x20d11dc1,0x4eda9ded,0x07ea02c0,0x1fb812e0,0x83f50fe2,
    0x6c07e45f,0x02df8cff,0x0201d81d,0x54010044,0x1fdcccef,0x0dfa8088,
    0x0005dfd3,0x00000000,0x00000000,0x15c88000,0x52b80c89,0x4c4ae179,
    0x9999e999,0x005dfd50,0x277faa01,0xfb32efc9,0x25ff913b,0x0880cffb,
    0x00101002,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x666665c0,0x0002cccc,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x5dd40000,0x3bbbbbbb,0x50c02ae2,
    0xe882e617,0x99998b92,0x2ee21710,0x3bbbbbbb,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x20000000,0x99999998,0x3b2f6599,
    0x27c510ad,0xe9fcc9d1,0x57fffe26,0x266663fb,0x00199999,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x80000000,0xdfc98135,
    0x01a21664,0x22333330,0x00000002,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x0b000000,0x05405020,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x000000a0,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,
};

static signed short stb__times_22_latin1_x[224]={ 0,2,1,0,1,0,0,0,0,0,1,0,1,0,
1,0,0,2,0,0,0,0,0,0,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,-1,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,-1,1,0,-1,0,0,0,0,0,0,0,
-2,0,0,0,0,0,-1,0,0,0,0,0,0,0,0,0,0,2,1,1,0,2,2,2,2,2,2,2,2,2,
2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,2,1,0,0,0,
1,1,0,0,-1,0,0,0,0,-1,0,0,0,0,2,1,-1,1,1,1,0,0,1,1,0,0,0,0,0,0,
0,0,-1,0,0,0,0,0,0,0,0,0,0,-1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,0,
 };
static signed short stb__times_22_latin1_y[224]={ 17,3,3,3,2,3,3,3,3,3,3,5,15,11,
15,3,3,3,3,3,3,3,3,3,3,3,7,7,5,8,5,3,3,3,3,3,3,3,3,3,3,3,3,3,
3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,20,3,7,3,7,3,7,3,7,3,3,
3,3,3,7,7,7,7,7,7,7,5,8,8,8,8,8,8,3,3,3,10,4,4,4,4,4,4,4,4,4,
4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,17,7,4,3,5,3,
3,3,4,3,3,7,8,11,3,2,3,5,3,3,3,8,3,9,16,3,3,7,3,3,3,7,-1,-1,-1,0,
0,0,3,3,-1,-1,-1,0,-1,-1,-1,0,3,0,-1,-1,-1,0,0,6,3,-1,-1,-1,0,-1,3,3,3,3,
3,3,4,3,7,7,3,3,3,4,3,3,3,4,3,3,3,3,3,3,4,6,7,3,3,3,4,3,3,4,
 };
static unsigned short stb__times_22_latin1_w[224]={ 0,3,6,10,8,16,15,3,7,6,8,11,3,6,
3,6,10,6,10,9,10,9,10,10,8,10,3,4,11,11,11,9,18,15,13,13,14,12,11,15,14,7,8,15,
12,18,16,14,11,14,14,9,12,15,15,19,15,15,12,5,6,5,9,12,4,9,11,9,10,9,9,10,10,6,
6,11,6,16,10,10,11,10,7,8,6,10,10,15,10,10,9,7,2,7,11,11,11,11,11,11,11,11,11,11,
11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,3,8,10,10,10,
2,8,7,15,7,10,11,6,15,12,7,11,6,6,4,10,11,3,4,4,6,10,14,14,15,8,15,15,15,15,
15,15,19,13,12,12,12,12,7,7,7,7,14,16,14,14,14,14,14,9,14,15,15,15,15,15,11,10,9,9,
9,9,9,9,13,9,9,9,9,9,6,6,6,6,10,10,10,10,10,10,10,11,10,10,10,10,10,10,11,10,
 };
static unsigned short stb__times_22_latin1_h[224]={ 0,15,7,15,17,15,15,7,19,19,9,11,6,3,
3,15,15,14,14,15,14,15,15,15,15,15,11,14,11,5,11,15,19,14,14,15,14,14,14,15,14,14,15,14,
14,14,15,15,14,18,14,15,14,15,15,15,14,14,14,18,15,18,8,2,4,11,15,11,15,11,14,15,14,14,
19,14,14,10,10,11,15,15,10,11,13,10,10,10,9,14,9,19,19,19,4,13,13,13,13,13,13,13,13,13,
13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,0,15,17,15,11,14,
19,18,3,15,7,11,5,3,15,1,7,11,8,8,4,14,19,3,5,8,7,11,15,15,15,15,18,18,18,17,
17,17,14,18,18,18,18,17,18,18,18,17,14,18,19,19,19,18,18,9,15,19,19,19,18,18,14,15,15,15,
15,15,14,15,11,14,15,15,15,14,14,14,14,13,15,14,15,15,15,15,14,9,11,15,15,15,14,19,19,18,
 };
static unsigned short stb__times_22_latin1_s[224]={ 254,250,205,80,194,30,47,212,1,32,153,
197,231,89,252,74,98,171,242,152,150,171,181,208,219,228,234,250,1,235,238,
45,157,189,219,109,57,72,85,93,1,31,162,49,130,163,81,121,207,192,227,
35,97,136,66,130,41,25,12,207,123,213,173,100,76,158,109,168,24,178,120,
13,98,91,116,72,65,77,66,209,1,82,47,188,117,94,55,105,162,244,143,
176,154,184,59,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,
124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,254,252,203,
55,24,178,113,142,81,239,197,136,47,89,192,30,223,35,190,183,71,182,71,
96,247,250,216,13,32,17,1,241,162,16,32,212,14,228,143,56,78,91,104,
1,48,70,134,244,16,117,83,98,123,235,1,121,174,138,55,39,178,219,205,
91,102,123,133,143,161,153,220,39,200,210,220,217,193,200,84,110,230,233,58,
189,112,47,1,131,147,163,69,63,109,21,9,151, };
static unsigned short stb__times_22_latin1_t[224]={ 1,1,120,40,21,40,58,120,1,1,120,
105,120,131,120,58,58,74,74,58,74,58,58,58,58,58,105,40,120,120,105,
74,1,74,90,74,105,105,105,74,90,90,58,90,90,90,58,58,90,1,74,
74,105,58,74,74,105,105,105,1,74,1,120,131,131,105,58,105,74,105,90,
74,90,90,1,90,90,120,120,105,74,74,120,105,105,120,120,120,120,90,120,
1,1,1,131,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,
105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,1,21,21,
74,120,74,1,21,131,58,120,105,131,131,58,56,120,120,120,120,131,90,1,
131,120,105,120,120,58,58,58,40,21,21,21,21,40,21,90,21,21,21,21,
40,21,21,21,21,90,21,1,1,1,1,21,120,40,1,1,1,21,1,74,
40,40,40,40,40,74,40,105,90,40,40,40,74,90,90,90,105,40,90,40,
40,40,40,105,120,105,40,40,58,90,1,1,21, };
static unsigned short stb__times_22_latin1_a[224]={ 79,106,130,159,159,265,247,57,
106,106,159,179,79,106,79,88,159,159,159,159,159,159,159,159,
159,159,88,88,179,179,179,141,293,230,212,212,230,194,177,230,
230,106,124,230,194,283,230,230,177,230,212,177,194,230,230,300,
230,230,194,106,88,106,149,159,106,141,159,141,159,141,106,159,
159,88,88,159,88,247,159,159,159,159,106,124,88,159,159,230,
159,159,141,153,64,153,172,247,247,247,247,247,247,247,247,247,
247,247,247,247,247,247,247,247,247,247,247,247,247,247,247,247,
247,247,247,247,247,247,247,247,79,106,159,159,159,159,64,159,
106,241,88,159,179,106,241,159,127,174,95,95,106,183,144,79,
106,95,99,159,238,238,238,141,230,230,230,230,230,230,283,212,
194,194,194,194,106,106,106,106,230,230,230,230,230,230,230,179,
230,230,230,230,230,230,177,159,141,141,141,141,141,141,212,141,
141,141,141,141,88,88,88,88,159,159,159,159,159,159,159,174,
159,159,159,159,159,159,159,159, };

// Call this function with
//    font: NULL or array length
//    data: NULL or specified size
//    height: STB_FONT_times_22_latin1_BITMAP_HEIGHT or STB_FONT_times_22_latin1_BITMAP_HEIGHT_POW2
//    return value: spacing between lines
static void stb_font_times_22_latin1(stb_fontchar font[STB_FONT_times_22_latin1_NUM_CHARS],
                unsigned char data[STB_FONT_times_22_latin1_BITMAP_HEIGHT][STB_FONT_times_22_latin1_BITMAP_WIDTH],
                int height)
{
    int i,j;
    if (data != 0) {
        unsigned int *bits = stb__times_22_latin1_pixels;
        unsigned int bitpack = *bits++, numbits = 32;
        for (i=0; i < STB_FONT_times_22_latin1_BITMAP_WIDTH*height; ++i)
            data[0][i] = 0;  // zero entire bitmap
        for (j=1; j < STB_FONT_times_22_latin1_BITMAP_HEIGHT-1; ++j) {
            for (i=1; i < STB_FONT_times_22_latin1_BITMAP_WIDTH-1; ++i) {
                unsigned int value;
                if (numbits==0) bitpack = *bits++, numbits=32;
                value = bitpack & 1;
                bitpack >>= 1, --numbits;
                if (value) {
                    if (numbits < 3) bitpack = *bits++, numbits = 32;
                    data[j][i] = (bitpack & 7) * 0x20 + 0x1f;
                    bitpack >>= 3, numbits -= 3;
                } else {
                    data[j][i] = 0;
                }
            }
        }
    }

    // build font description
    if (font != 0) {
        float recip_width = 1.0f / STB_FONT_times_22_latin1_BITMAP_WIDTH;
        float recip_height = 1.0f / height;
        for (i=0; i < STB_FONT_times_22_latin1_NUM_CHARS; ++i) {
            // pad characters so they bilerp from empty space around each character
            font[i].s0 = (stb__times_22_latin1_s[i]) * recip_width;
            font[i].t0 = (stb__times_22_latin1_t[i]) * recip_height;
            font[i].s1 = (stb__times_22_latin1_s[i] + stb__times_22_latin1_w[i]) * recip_width;
            font[i].t1 = (stb__times_22_latin1_t[i] + stb__times_22_latin1_h[i]) * recip_height;
            font[i].x0 = stb__times_22_latin1_x[i];
            font[i].y0 = stb__times_22_latin1_y[i];
            font[i].x1 = stb__times_22_latin1_x[i] + stb__times_22_latin1_w[i];
            font[i].y1 = stb__times_22_latin1_y[i] + stb__times_22_latin1_h[i];
            font[i].advance_int = (stb__times_22_latin1_a[i]+8)>>4;
            font[i].s0f = (stb__times_22_latin1_s[i] - 0.5f) * recip_width;
            font[i].t0f = (stb__times_22_latin1_t[i] - 0.5f) * recip_height;
            font[i].s1f = (stb__times_22_latin1_s[i] + stb__times_22_latin1_w[i] + 0.5f) * recip_width;
            font[i].t1f = (stb__times_22_latin1_t[i] + stb__times_22_latin1_h[i] + 0.5f) * recip_height;
            font[i].x0f = stb__times_22_latin1_x[i] - 0.5f;
            font[i].y0f = stb__times_22_latin1_y[i] - 0.5f;
            font[i].x1f = stb__times_22_latin1_x[i] + stb__times_22_latin1_w[i] + 0.5f;
            font[i].y1f = stb__times_22_latin1_y[i] + stb__times_22_latin1_h[i] + 0.5f;
            font[i].advance = stb__times_22_latin1_a[i]/16.0f;
        }
    }
}

#ifndef STB_SOMEFONT_CREATE
#define STB_SOMEFONT_CREATE              stb_font_times_22_latin1
#define STB_SOMEFONT_BITMAP_WIDTH        STB_FONT_times_22_latin1_BITMAP_WIDTH
#define STB_SOMEFONT_BITMAP_HEIGHT       STB_FONT_times_22_latin1_BITMAP_HEIGHT
#define STB_SOMEFONT_BITMAP_HEIGHT_POW2  STB_FONT_times_22_latin1_BITMAP_HEIGHT_POW2
#define STB_SOMEFONT_FIRST_CHAR          STB_FONT_times_22_latin1_FIRST_CHAR
#define STB_SOMEFONT_NUM_CHARS           STB_FONT_times_22_latin1_NUM_CHARS
#define STB_SOMEFONT_LINE_SPACING        STB_FONT_times_22_latin1_LINE_SPACING
#endif

