// Font generated by stb_font_inl_generator.c (4/1 bpp)
//
// Following instructions show how to use the only included font, whatever it is, in
// a generic way so you can replace it with any other font by changing the include.
// To use multiple fonts, replace STB_SOMEFONT_* below with STB_FONT_arial_bold_33_usascii_*,
// and separately install each font. Note that the CREATE function call has a
// totally different name; it's just 'stb_font_arial_bold_33_usascii'.
//
/* // Example usage:

static stb_fontchar fontdata[STB_SOMEFONT_NUM_CHARS];

static void init(void)
{
    // optionally replace both STB_SOMEFONT_BITMAP_HEIGHT with STB_SOMEFONT_BITMAP_HEIGHT_POW2
    static unsigned char fontpixels[STB_SOMEFONT_BITMAP_HEIGHT][STB_SOMEFONT_BITMAP_WIDTH];
    STB_SOMEFONT_CREATE(fontdata, fontpixels, STB_SOMEFONT_BITMAP_HEIGHT);
    ... create texture ...
    // for best results rendering 1:1 pixels texels, use nearest-neighbor sampling
    // if allowed to scale up, use bilerp
}

// This function positions characters on integer coordinates, and assumes 1:1 texels to pixels
// Appropriate if nearest-neighbor sampling is used
static void draw_string_integer(int x, int y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0, cd->t0); glVertex2i(x + cd->x0, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t0); glVertex2i(x + cd->x1, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t1); glVertex2i(x + cd->x1, y + cd->y1);
        glTexCoord2f(cd->s0, cd->t1); glVertex2i(x + cd->x0, y + cd->y1);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance_int;
    }
    glEnd();
}

// This function positions characters on float coordinates, and doesn't require 1:1 texels to pixels
// Appropriate if bilinear filtering is used
static void draw_string_float(float x, float y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0f, cd->t0f); glVertex2f(x + cd->x0f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t0f); glVertex2f(x + cd->x1f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t1f); glVertex2f(x + cd->x1f, y + cd->y1f);
        glTexCoord2f(cd->s0f, cd->t1f); glVertex2f(x + cd->x0f, y + cd->y1f);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance;
    }
    glEnd();
}
*/

#ifndef STB_FONTCHAR__TYPEDEF
#define STB_FONTCHAR__TYPEDEF
typedef struct
{
    // coordinates if using integer positioning
    float s0,t0,s1,t1;
    signed short x0,y0,x1,y1;
    int   advance_int;
    // coordinates if using floating positioning
    float s0f,t0f,s1f,t1f;
    float x0f,y0f,x1f,y1f;
    float advance;
} stb_fontchar;
#endif

#define STB_FONT_arial_bold_33_usascii_BITMAP_WIDTH         256
#define STB_FONT_arial_bold_33_usascii_BITMAP_HEIGHT        138
#define STB_FONT_arial_bold_33_usascii_BITMAP_HEIGHT_POW2   256

#define STB_FONT_arial_bold_33_usascii_FIRST_CHAR            32
#define STB_FONT_arial_bold_33_usascii_NUM_CHARS             95

#define STB_FONT_arial_bold_33_usascii_LINE_SPACING          21

static unsigned int stb__arial_bold_33_usascii_pixels[]={
    0xcc833330,0x026ae603,0x30079930,0x1e640755,0xaba99800,0x4cc4001a,
    0x33109999,0xdb003333,0xaa880001,0x2aa6001a,0x2aaa201a,0x15551002,
    0x00110000,0x00666600,0x66445995,0xaaa8800c,0xfff80009,0x407ff20f,
    0x203ffffa,0x3aa05ffb,0xff505fff,0x7fe4c007,0xdfffffff,0xffffb802,
    0xffffd5ff,0x7fcc03ff,0xffd98002,0x01efffff,0x702fffdc,0x6d409fff,
    0xdfffffff,0x3ff66001,0x30000dff,0xfd80ffff,0x01ffe63f,0xffffffb1,
    0xffff8007,0x5417fe60,0x703fffff,0x3fe20bff,0xffd05fff,0xfffd5001,
    0xffffffff,0x7dc01dff,0xfd5fffff,0x903fffff,0x05dfffff,0x3fffff20,
    0x04ffffff,0x403fffe2,0xf901fffe,0xffffffff,0xff7009ff,0x03ffffff,
    0x0ffff300,0x3ee2ffe8,0x3ffe206f,0x04ffffff,0xd03fffe0,0xfff503ff,
    0x3fee0fff,0xfffff905,0x009ff70b,0x57bffff9,0xffb95333,0x3fee07ff,
    0xffd5ffff,0xfe83ffff,0x6fffffff,0x3ffffa20,0xffffffff,0xfffb00ef,
    0x0dfff107,0xffffffd1,0xdfffffff,0x3ffff201,0x00ffffff,0x03fffcc0,
    0x7ec1fff1,0x3fff604f,0x1fffebbe,0x50999900,0x7f440bff,0x5ffb80ff,
    0x405fffd0,0x3a201fff,0x3000bfff,0x8805fffb,0xfffd5fff,0x7ffffe40,
    0x903fffff,0x357fffff,0xbfffff75,0x217ffea0,0xfc83fffb,0xa9abffff,
    0x84ffffeb,0xa9dffff8,0x4003fffe,0x2607fff9,0x17ff47ff,0x4c1ffff0,
    0x00003fff,0x5c03fff1,0xffb81fff,0x40dfff05,0x7ec06ffb,0xf50000ef,
    0x7fc401ff,0x20fffd5f,0xff8efff8,0xf986ffe9,0xb100dfff,0x3e03ffff,
    0x7ff40fff,0x7fffd40f,0xfffb100d,0x3fffc83f,0x0037ffd4,0xb81fffe6,
    0x3ffe25ff,0x83fffe01,0x5004fff8,0x3ff60555,0x07ffea05,0x7fc17fee,
    0x13ffe05f,0x7305ffb8,0x46662157,0x3e204ffb,0x0fffd5ff,0x7fcbffe6,
    0x741defa8,0xe800ffff,0xff906fff,0x37ffc47f,0x007ffff4,0xf137fff4,
    0x35501fff,0xfff98001,0x3ffbbb27,0xfffeeeff,0xfffd80ee,0x00bfff65,
    0x5c07fffc,0xff500fff,0x0bff705f,0x7d417ffe,0xfff101ff,0xfffffb81,
    0x366ffe8e,0xfff100ff,0x541fffab,0x01ff1fff,0x03ffff88,0x01ffff50,
    0x7dcbfff3,0x7ffc43ff,0xfff5003f,0x17ffe61f,0x3fe60000,0x3ffff67f,
    0xffffffff,0xffa80fff,0x7fffcbff,0x03fffe00,0x540bffe6,0xffb82fff,
    0x20bfff05,0xf900fffc,0xffffb85f,0x5fffffff,0x7c40ffe6,0x0fffd5ff,
    0x7fd3ffe6,0x3fffcc00,0x0bfffe00,0xfe87fff4,0x7ffd40ff,0x7fffc007,
    0x2a9fff52,0x20001bcc,0x3f67fff9,0xffffffff,0x00ffffff,0xfffffffb,
    0x7ffc003f,0x3fff880f,0x707fff30,0x3ffe0bff,0x40fffd04,0x7ffdc6ff,
    0xfffeb8ad,0x8827fc3f,0xfffd5fff,0x37fffe20,0x7fd400ff,0x7ff4007f,
    0x7fff703f,0xf70bfff1,0xfe800fff,0x9fff73ff,0x09fffffb,0x9fffe600,
    0xafffcaa9,0x2acfffaa,0x3ffffe20,0x7fc001ef,0xbfff00ff,0x213ffe20,
    0xff985ffb,0x6fff883f,0x7c49ff50,0xfffb86ff,0x882ff41f,0xfffd5fff,
    0x7ffffe40,0x3ff200bf,0x7fec006f,0xbfff104f,0xf905fff7,0xfd800dff,
    0xffff94ff,0xbfffffff,0xffff3000,0xf897fee0,0x7ec401ff,0x000fffff,
    0xf00ffff8,0x7ff40dff,0x42ffdc1f,0xf981fffd,0x5ffb05ff,0x440fffe4,
    0x7ec0ffff,0x2bfff106,0x3a207ffe,0xdfffffff,0x05fffc81,0x02fffe40,
    0xfffdfffb,0x017fff60,0x36bfff90,0xdadfffff,0x4002ffff,0xfb07fff9,
    0x03ffcc7f,0x3fffffa6,0x7c0025ff,0xffd00fff,0x7fffdc0f,0x5cbff71d,
    0xf306fffd,0x3ffa09ff,0x40bfff10,0x5fe86fff,0x3abfff10,0xffd807ff,
    0x42ffffff,0x4006fffc,0x2a04fffd,0x04ffffff,0x800dfff9,0xff94fffd,
    0xfffa87ff,0x7ffcc006,0x5c5ffd07,0x3fea05ff,0xffffdeff,0x2017bf93,
    0xfb00ffff,0x7fe403ff,0x2bff73ff,0x01effff8,0x3e07fff5,0x0bffea6f,
    0x2227ffc4,0xfff104ff,0x401fffab,0xffffffc9,0x1fffea1f,0x07fffd00,
    0x1ffffff8,0x00ffff50,0xf93fffe8,0xff883fff,0x3e6000ff,0x3eea67ff,
    0xffdaabff,0x7ff42aad,0x3ffff65f,0xf00ffff9,0x3f201fff,0x3fe201ff,
    0x2bff73ff,0x202ffff8,0xff03fffa,0x80fffdcb,0x7d43fff9,0xbfff103f,
    0xf001fffa,0x4bffffbf,0x080ffff9,0x01ffff88,0x037fffe4,0x001ffff3,
    0xfb97fffc,0xfffd06ff,0x7ffcc003,0x3fffff67,0xffffffff,0xffff10ff,
    0xfffffe88,0x3ffe05ff,0x1fff900f,0x3ffffa20,0x3e2bff73,0xf302ffff,
    0x8ffe07ff,0xf700fffc,0x0ffd83ff,0x3abfff10,0x7fc007ff,0x227fff98,
    0xec83ffff,0x03fffee1,0x07ffff30,0x027fffc4,0x50ffffb8,0x3f20ffff,
    0x9dd932ff,0x6cdfff30,0xffffffff,0x0fffffff,0xf309fff7,0x05ffffff,
    0xd807fffc,0x3ff207ff,0xbff709df,0x83fffe4c,0xff04fff8,0x80fffe49,
    0x7fdc7ffe,0x57ffe204,0x26207ffe,0x7fe43fe1,0x07fffec7,0xff3bfff1,
    0xff100dff,0xffd801ff,0x7fc400ff,0x3ffe66ff,0x0fffe81f,0xf50dfff5,
    0x7ff64bff,0xfffeeeef,0xff90eeee,0x3ffea09f,0x7ffc06ff,0x0dffb00f,
    0x7dc37ffc,0x2fffc85f,0x3a0bfff0,0x0fffee5f,0xfa9bffee,0x3fe200ff,
    0x20fffd5f,0x1ff0fffe,0xff11ffee,0x3f621dff,0x1fffffff,0x05fffc80,
    0x1fffff88,0x3ffffd30,0x444fffe8,0x3fe67fff,0x7ffe41ff,0x2e2fff84,
    0x3fee05ff,0xfffd107f,0x7ffc03df,0x09fff00f,0x2e13ffe2,0xfff985ff,
    0x20bffb03,0xfff30ffd,0x7fffd41d,0x02fffb8d,0xfeafffc4,0x9fff907f,
    0x37ff43fe,0x67ffffe4,0xfffffc9a,0x3f26104f,0xf7002fff,0x757bffff,
    0x09fffffb,0x519ffff5,0xff89fffd,0xffebcfff,0x7ffc42ff,0x9813ff20,
    0x512dffff,0xffffffff,0x03fffe07,0x4c0fffe2,0xffb83fff,0x209fff05,
    0xff506ffc,0x6ffffe47,0xfffffffe,0xf8801fff,0x0fffd5ff,0x3f3fffe6,
    0x03fffd9f,0xfffffffb,0x9fffffff,0x3fffff60,0x7fec006f,0xffffffff,
    0xfd00efff,0xffffffff,0xffffb81f,0x84ffffff,0x7ff47ffa,0x7fffe402,
    0xffffffff,0xf84fffff,0xff980fff,0x5fff502f,0x3e0bff70,0xfff705ff,
    0xd89bfe01,0xfcffffff,0x00efffff,0x3abfff10,0x3ff207ff,0xffffffff,
    0x7fffdc06,0xffffffff,0x7fe43fff,0x8001ffff,0xfffffffb,0x4403ffff,
    0xfffffffd,0xffffb01f,0x2e0dffff,0x07ffc5ff,0x7ffffe40,0xfbafffff,
    0xfff80eff,0x07ffb80f,0x2e0bffea,0xbfff05ff,0x40bffe60,0x7edc4ffc,
    0x7bfb51de,0x88099883,0xfffd5fff,0x7ffff440,0x800effff,0xfffffec8,
    0xfffffcce,0x37fffee2,0x3b220001,0x0defffff,0x3ffff200,0x7fdc00df,
    0xb00cffff,0x3ffcc7ff,0xffffd300,0x7f4c19ff,0x20ffff01,0x3ea04ffd,
    0x5ffb82ff,0x6c0bfff0,0xffd104ff,0x3ee00007,0xfff880ff,0x700fffd5,
    0x07dffffd,0x4c0d4400,0x01306ffe,0x06a60000,0x006a2000,0x2006a620,
    0x2aa20aaa,0x13530002,0xfff10180,0x03fff10f,0x5c0fffdc,0xdffd05ff,
    0x303ffcc0,0x0001bfff,0x40ffff62,0xffd5fff8,0x0ffc400f,0xeb800000,
    0x00000002,0x00000000,0x00000000,0xecb80000,0xffa86fff,0xfffba886,
    0x05ffb80f,0x0159fffb,0x7d403ffb,0x801acfff,0x44ffffa9,0x5fff9998,
    0x0333fffd,0x00001ff0,0x00000000,0x00000000,0x00000000,0xd0000000,
    0xd0bfffff,0xfff505ff,0x3fee0dff,0xfffff705,0x809ff30b,0xffffffe8,
    0xffedcbce,0xfb82ffff,0xfd5fffff,0x803fffff,0x000000ff,0x00000000,
    0x00000000,0x00000000,0x7c400000,0x4c0fffff,0xfff505ff,0x3fee05ff,
    0x3ffffe05,0x001ffb05,0xffffffd7,0xffffffff,0x3ffee019,0xfffd5fff,
    0x00003fff,0x00000000,0x00000000,0x00000000,0x00000000,0x37fffe60,
    0x501ffd81,0x5c03bfff,0x3f2205ff,0x7ff305ff,0x7f6dc400,0x2defffff,
    0xfffffb80,0xfffffd5f,0x0000003f,0x00000000,0x00000000,0x00000000,
    0x80000000,0x004cc019,0x26200131,0x80260009,0x44000099,0x00000019,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x98000000,0x997001aa,0x00031000,0x00155530,0x200332e0,0x2a200009,
    0x4c0009aa,0x2aa61bcb,0x000cccc2,0x00001100,0x4400ccc4,0x00999000,
    0x9aaaa980,0x04ccc400,0x100cccc0,0xfd103555,0x4c01bfff,0xfd5004ff,
    0x4005dfff,0xffffffd9,0x3ffc003f,0x9dfffd50,0x3fff6200,0x401effff,
    0xdfffffd8,0x3e0fffc8,0x440007ff,0x01dfffed,0x07fff400,0x6ffffed4,
    0x003ffa00,0xfffffb30,0x3a019fff,0x7cc02fff,0xffe887ff,0x7ff44fff,
    0x3605ffff,0xffd800ff,0x06ffffff,0xffffffb8,0x801effff,0xfd885ff9,
    0x0effffff,0x3ffffe60,0x05ffffff,0xffffffd1,0x41fffbdf,0x20007fff,
    0xffffffe9,0x3fa0002f,0x7ffdc0ff,0x903fffff,0x7dc005ff,0xffffffff,
    0xffe82fff,0x7ffcc02f,0xfffffd87,0x45bfea2f,0xff981fff,0xffffb804,
    0x04ffffff,0x3ffffffa,0x07ffffff,0xfc83ffb8,0xffffffff,0xffff980f,
    0xffffffff,0xffffc83f,0xfffffecf,0x01fffe0f,0xfffffe80,0x0000ffff,
    0x7dc1fffd,0xffffffff,0x04ffa81f,0xffffffb0,0xffffffff,0x02fffe85,
    0x223fffcc,0x1eceffff,0xffd93fee,0x800ffd82,0xb89cffff,0xfb80ffff,
    0xc99befff,0x403fffff,0x7fcc1ffd,0xfffc9cff,0xefffc84f,0xfffb989b,
    0x3ffe20ff,0x7fff4c3f,0x01fffe0f,0x577ffd40,0x004fffd9,0x741fffd0,
    0xfea9cfff,0x6ff886ff,0xfffffb80,0xffeca9ac,0x7fff47ff,0x3fffcc02,
    0xc81bffe6,0x0fff23ff,0xf100bff3,0xfffb0fff,0x4ffff883,0x03ffff60,
    0xffc87ff8,0x7fffd43f,0x80ffff40,0x2a2ffffa,0xff506fff,0x3fffc1ff,
    0x2fffe800,0x003fffe2,0x4c3fffa0,0x7fcc5fff,0x0ffe80ff,0x3bfffe20,
    0x3ffff601,0x00bfffa2,0xfa8ffff3,0x3ff205ff,0xfb13ff23,0xfff1001f,
    0x85fff709,0x4c06fffc,0xf303ffff,0x3fffd0bf,0x447ffff0,0x3a00ffff,
    0x3fee4fff,0x3fffe03f,0xb99fffe0,0xfff301bc,0x05fffb0d,0xfe86f2e6,
    0x5d9730ff,0x901ffff0,0x7fe405ff,0x7fc400ff,0x3fffa4ff,0xbfffcc02,
    0xadfffca9,0xb1ffdc1a,0x2ffcc7ff,0xb0dffd00,0xffff0fff,0x80375005,
    0xfff84ffb,0x89fffb07,0x000dffff,0x202fffc8,0x3fe0fffe,0xfffffb7f,
    0x5fffa81b,0x444fffb8,0x8dfffffd,0x3000fffe,0x3ea0dfff,0x3fffe04f,
    0xd0153004,0xf9805fff,0xffff97ff,0xfa89ffff,0xd87ffe6f,0x3f2000ff,
    0xffb88cff,0x7fffc45f,0x3f600000,0x0ffff82f,0x6c5fffc8,0x0bdfffff,
    0x05fffb00,0xff07fff4,0xfffffdff,0x7fdc1fff,0x4fffa84f,0x3fffffa2,
    0x0ffffeff,0x3fffea80,0x260dff10,0x0000ffff,0x402fffe8,0xff97fff9,
    0x09ffffff,0xbfffdffd,0x4002ffcc,0xfffffffc,0x7ffcc0df,0x7fc00007,
    0x2fffe80f,0x446fffe8,0xffffffff,0x3ff202ce,0x3fffe03f,0x3fffffe0,
    0x5fffffce,0x2a0fffee,0x3ff25fff,0xfffecfff,0x3e600fff,0x7403ffff,
    0xfffa80ff,0xffd00007,0xfff9805f,0xffffdd77,0xffd307dd,0x7fec1dff,
    0xfff90001,0x3ea0dfff,0x200006ff,0xff906ff9,0xffff889f,0xfffffa87,
    0x81efffff,0xf305fffb,0x7ffc1fff,0x7ffdc2ff,0x07fff91f,0x3e2dfff3,
    0x3a60cfff,0x2a00ffff,0xc803ffff,0xfffb82ff,0x2aaaaa06,0xffd0aaaa,
    0xfff9805f,0x027ffd47,0x7cc2cca8,0x2009985f,0xfffffffa,0x6fffb84f,
    0x3fee0000,0xbffff104,0xffffff73,0x3ffff220,0x42ffffff,0x442ffff9,
    0x3e0ffffe,0xffb03fff,0x0ffff67f,0x7d5fffe6,0xfff506ff,0x7ffdc01f,
    0x7fd404ff,0x06fffb84,0x3ffffffe,0x5fffd0ff,0x47fff980,0x0004fffa,
    0x3ee1ffd8,0x7dc0dfff,0xffebcfff,0x3ffee0ef,0x3f600006,0x3ffee02f,
    0xffffffff,0x7fed4407,0x42ffffff,0xcaeffffd,0x20ffffff,0xf700ffff,
    0x3fff29ff,0x76fff983,0x3e207fff,0x26600fff,0x00efffda,0xff50dff1,
    0x7fffc0ff,0xfd0fffff,0xff9805ff,0x27ffd47f,0x97fe6000,0x6ffffffb,
    0xb03bffe2,0x7fd45fff,0x3a00007f,0x7fdc00ff,0xfffbffff,0x7f5cc006,
    0x7fcc4fff,0xfeffffff,0x3ffe0fff,0x5bffea07,0xfa83fffc,0x5fffb5ff,
    0x007fffc0,0x405fff90,0xfff887ff,0xfffff00f,0x3fa1ffff,0x7fcc02ff,
    0x27ffd47f,0x87ff6000,0xffe8afff,0x307fff52,0x7fc4bfff,0x1ba800ff,
    0x200dff10,0xf98cddb9,0x801885ff,0xf986fffc,0xe8efffff,0x3ffe0fff,
    0x5bffe607,0xfa84fffb,0x5fffb4ff,0x007fff40,0x40bfff50,0xffe81ffd,
    0x3333301f,0x3fa1ffff,0x7fd402ff,0x27ffd46f,0x4bff3000,0x3fee6ff9,
    0x203fff94,0x7ffc7fff,0xeffd803f,0x0027fd43,0xd93ffee0,0x7c404fff,
    0xdb880fff,0xfffd0bdf,0x807fffc1,0xff55fffa,0x9fff70bf,0xf80ffff2,
    0x22000fff,0xf700ffff,0xbfff907f,0x3fffe200,0x807fffb0,0x7d46fffa,
    0x360004ff,0x97fea1ff,0xfffb5ffa,0x8ffff107,0x4c07fffc,0x7e42ffff,
    0x8098802f,0x3f23fffd,0x3ea00fff,0xf8000fff,0x7fffc7ff,0x29fff702,
    0xfc86fff9,0x9fff73ff,0x43fffe20,0xfa81feeb,0x3fe607ff,0x1ffffb85,
    0x0ffff880,0xd80dfff9,0x7fd45fff,0xff30004f,0x2a5ffa8b,0xdfff76ff,
    0x88bfff70,0x980dffff,0xfe87fffe,0x3ffee00f,0x23fffc44,0x204ffff9,
    0x3a65fffe,0xff881cce,0x2ffffc6f,0x3a3fffe8,0x3fe21fff,0xffff50ff,
    0x1ffff901,0x3217fff2,0x7fc05fff,0xfffff887,0x3fffaa02,0x9ffff50f,
    0x0ffffe60,0x0009fff5,0xff307ff6,0xf9affdcb,0xff71cfff,0xfff707ff,
    0xffd759ff,0xff887fff,0x7fffcc07,0x3ffffb8a,0xcfffffe8,0xfffffdaa,
    0x077fffc3,0xf89fffb3,0xd50dffff,0xffb8ffff,0xfffc89df,0x8f7fff44,
    0x0fffffd9,0x339ffff3,0x807ffff9,0xffa81ffd,0xcaacdfff,0x0ffffffe,
    0x33bffffa,0xfffffdba,0x027ffd40,0x442ffcc0,0x93ff27ff,0xfffffffc,
    0x3f606fff,0xffffffff,0xffa85fff,0xffffe805,0x80ffffff,0xfffffff8,
    0x0effffff,0x7fffffec,0x40ffffff,0xffffffff,0x442fffff,0xffffffff,
    0x7ffd41ff,0xffffffff,0x3fff20ff,0x5fffffff,0x703ffb80,0xffffffff,
    0x7fffffff,0xffffffb8,0x4fffffff,0x004fffa8,0xfb01ffd8,0x81fff9df,
    0xfffffffd,0x7fdc01ff,0xffffffff,0x007ff905,0xfffffff1,0x7fd401df,
    0xffffffff,0xfffd105f,0x5fffffff,0xff7bfff0,0x209fffff,0xfffffff9,
    0xffff703f,0xfff97fff,0xfffffd81,0x9800dfff,0x3fe605ff,0xffffffff,
    0xff500cff,0xffffffff,0x3ffea09f,0x2ffcc004,0xfffffd10,0x3fffaa07,
    0xb1000cff,0x3bfffffd,0x800fff40,0x4fffffd8,0x3fffee00,0xa803dfff,
    0xcefffffe,0x2abfff00,0x402ffffe,0x1effffd8,0x77fff4c0,0x501fff92,
    0x07ffffff,0x4407ff80,0xefffffea,0xfd8801bd,0x1dffffff,0x013ffea0,
    0x8803dd90,0x8801cedb,0x440001a9,0x55500199,0x01531000,0x04d4c400,
    0x00026000,0x20002620,0x4c400099,0x26620000,0x05550000,0x00099980,
    0x004d4cc0,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x45555000,0x3101bca8,0x26000033,
    0x1bca8801,0x9882aaa6,0x99999999,0x4c199999,0x26001999,0x26660999,
    0x99998009,0x80266621,0x20099998,0x26609998,0x26200099,0x43331099,
    0x99999998,0x99999999,0x00666609,0x26666620,0x44001999,0x86666199,
    0xfff19998,0x3fffff2b,0x07fff40d,0x05f91000,0xefffffc8,0x2a0fffc8,
    0xffffffff,0x47ffffff,0x802ffffc,0x3a2ffffc,0x2a00ffff,0x3f64ffff,
    0x3ff204ff,0x3ff205ff,0x1bfff65f,0x9ffffc40,0xff50fffe,0xffffffff,
    0x47ffffff,0xe8007fff,0xffffffff,0x201defff,0xfff0fffe,0x5fffea3f,
    0xfffdefff,0x3a0effff,0x50000fff,0x7ec05fff,0xceffffff,0x3fea0fff,
    0xffffffff,0x7c47ffff,0x7c406fff,0x7fcc5fff,0x3ffa05ff,0x37ffdc6f,
    0x0fffffd0,0xf51ffff4,0xf5001fff,0x3ffa1fff,0xfffff50f,0xffffffff,
    0x7ffc7fff,0xfffe8007,0xffffffff,0xffd02fff,0x47fffe1f,0xfff7fffa,
    0xfff9ffff,0x7fff4bff,0xfffb0000,0x3fffee05,0xfffffedf,0x3fffea0f,
    0xffffffff,0xfffa87ff,0x3fff603f,0xffffc80f,0x2ffffb81,0x883fffcc,
    0x01ffffff,0x7c43ffff,0xfd803fff,0x3fffa5ff,0xffffff50,0xffffffff,
    0x3fffc7ff,0x7ffff400,0xffffffff,0xffe83fff,0x23ffff0f,0xfff7fffa,
    0x7fe447ff,0x1fffd1ff,0x3fff6000,0xdffff882,0x3ffffa60,0x2aaaaa20,
    0xfffeaaaa,0xffffb05f,0x7ffff301,0x1bfffa20,0x20bffff1,0xfb81ffff,
    0x983fffff,0xffd87fff,0x7ffc406f,0x43332e2f,0xfbaaaaa8,0xaaaabfff,
    0x01fffe0a,0x2b3fffa0,0xffebaaaa,0xfffe86ff,0x2a3ffff0,0xffff7fff,
    0x53fff609,0x4000fffe,0xacfffea9,0x03fffe62,0x003fffe6,0x1dffff70,
    0x17fffe20,0x5017fffa,0x7ec7ffff,0xffd00fff,0xffffb07f,0xfff70bff,
    0x3ffff50b,0x03fffd40,0x3fffe200,0x07fff800,0x03fffe80,0x207fffe4,
    0xfff0fffe,0x5fffea3f,0xf501ffff,0x3fffabff,0x01579510,0xfffffff9,
    0x13ffee1f,0x000ffff8,0x07ffffe6,0x43ffff70,0x800ffffb,0xfa8ffffd,
    0x3f202fff,0xefff85ff,0xffd87fff,0x7ffff03f,0x227ffec0,0x4400aaaa,
    0xf800ffff,0xaaa887ff,0x0ffffa1a,0x85ffff10,0xfff0fffe,0x5fffe63f,
    0xf300ffff,0x3fffadff,0xffffffb8,0x7ffffe41,0xfff90fff,0x07fff409,
    0xfffff880,0xdfffd002,0x00ffffe2,0x7f7fffc4,0x7d405fff,0x7ffcc6ff,
    0x741fffdc,0xff901fff,0x7fffc0df,0x007fff41,0x003fffe2,0xfd11fffe,
    0x7ff41dff,0x7ffc403f,0x87fff42f,0xff11ffff,0x81fffedf,0xffd6fff9,
    0xffffffbf,0x7ffe41ff,0xf90fffff,0x7fec07ff,0xfffd000f,0x7fcc007f,
    0x6fffcbff,0x7fffd400,0x4400ffff,0x3ee0ffff,0x3fffaaff,0x981fffe2,
    0xfa81ffff,0xfffe87ff,0x7fffc400,0x47fff800,0x740ffffd,0x7d403fff,
    0x7ff40fff,0x23ffff0f,0xfff5fff8,0x3ffe601f,0xbfffffd5,0x09ffffb7,
    0xf705fffb,0x7ff409ff,0xfffc800f,0xffc8005f,0x01ffffff,0xfffffd80,
    0xfffd003f,0x447ffec5,0x3fea5fff,0x7fff405f,0x84fffd84,0x4400fffe,
    0xf800ffff,0x3fff67ff,0xbfffe81f,0xfca99999,0xffe85fff,0x43ffff0f,
    0xffff5fff,0x53ffee05,0x5c1ffffe,0xffd86fff,0x5fffa82f,0x01ffff10,
    0x0effffb8,0xffffd000,0x220009ff,0x006fffff,0xff8ffff2,0xc9fffa6f,
    0x7e403fff,0xffff86ff,0x00fffe81,0x007fffc4,0xffcbfffc,0xfffd01ff,
    0xffffffff,0xfd03ffff,0x3fffe1ff,0x7fd3ffa1,0xfffd06ff,0x213fffa7,
    0xfd87fff8,0xfff982ff,0xffffc80f,0x3fffe600,0x3ea0000f,0x000fffff,
    0xbfffff10,0xafffd400,0x3f24fff9,0x3fffb1ff,0x1ffff980,0x741bffea,
    0x7c400fff,0xff800fff,0x1ffffbff,0x3fffffa0,0xffffffff,0x1fffd00e,
    0xfd87fffe,0xdfffff3f,0x3ffffaa5,0x205fffd0,0xffd87fff,0xdfffb02f,
    0x3ffff667,0xffff100f,0xfb00003f,0x40005fff,0x2ffffffd,0x2ffff100,
    0x3ea1fffb,0x1ffff3ff,0x49fffd00,0xfd03fffc,0xff8801ff,0xfff800ff,
    0x405fffff,0xfffffffe,0x401bffff,0xfff0fffe,0xf97fec3f,0xffffffff,
    0x3fa3ffff,0xffff01ff,0x205fffb0,0xfffffff9,0x00ffffff,0x007ffffd,
    0x1fffe600,0xffffa800,0xf000ffff,0xfffd1fff,0xf9dfff88,0xff7006ff,
    0x07fffcff,0x400fffe8,0x800ffff8,0xffffffff,0x3fffa01f,0xffffba9b,
    0x7fff400e,0x643ffff0,0x7ffff2ff,0x9fffffff,0xf00fffe8,0xfffb0fff,
    0x7fffdc05,0xfffecfff,0x4ffffd80,0x3fe60000,0xff10007f,0x9fffffff,
    0x2ffff600,0xffe85fff,0x004fffbf,0xf53ffff1,0x7ff40dff,0x7ffc400f,
    0xffff800f,0x206fffff,0x7c43fffe,0x3a01ffff,0xffff0fff,0xff8ffdc3,
    0xffffd37f,0x01fffd05,0x3f61fffe,0x7f4c02ff,0xfffd3eff,0x6ffffb81,
    0x7fcc0000,0xffb0007f,0xffff93ff,0xffff7005,0xff907fff,0x005fffdf,
    0x7e67ffec,0x3ffa03ff,0x7ffc400f,0xffff800f,0x02fffecf,0xf507fffd,
    0x3a01dfff,0xffff0fff,0xff87fd43,0xd004c47f,0x3fe01fff,0x2fffc87f,
    0xfe813100,0x3ffe60ff,0x400000ff,0x8007fff9,0xf14ffffa,0x9801ffff,
    0x1fffffff,0xffffff98,0x3fee000f,0x00ffffff,0x1003fffa,0xf001ffff,
    0x3fe69fff,0x7fffd06f,0x17ffff20,0xff87fff4,0xf93261ff,0xfe8007ff,
    0xffff00ff,0x319fff90,0x3fffa000,0x3fffff10,0xff300000,0xff8800ff,
    0x3fea0fff,0xfff804ff,0x3fe07fff,0x4006ffff,0xfffffff8,0x07fff405,
    0x03fffe20,0xfb1fffe0,0xfffd07ff,0x7ffff407,0xf0fffe82,0xff803fff,
    0xffe8007f,0x0ffff00f,0x3ffffff7,0x1fffd000,0x33bffff2,0xcccccccc,
    0xff3001cc,0xffd800ff,0xfffd82ff,0x7ffec02f,0x3ff605ff,0xd8004fff,
    0x02ffffff,0x2007fff4,0x800ffff8,0x7fcc7fff,0x7fff40ff,0x3fffe603,
    0x87fff40e,0xff11ffff,0x01fffedf,0x403fffa0,0xff887fff,0x8002ffff,
    0xff90fffe,0xffffffff,0x07ffffff,0x01fffe60,0x05ffffa8,0x01dffff1,
    0x1fffffdc,0x5fffff70,0xffff5000,0xfffd00ff,0xffff8801,0x87fff800,
    0x7f45fffc,0x7fe403ff,0x7fff44ff,0x223ffff0,0xffff6fff,0x1fffd000,
    0x541fffe0,0x002fffff,0xf90fffe8,0xffffffff,0x7fffffff,0x1fffe600,
    0x7ffffc40,0x3fffee00,0x3fffe604,0x3ffe601f,0xff0000ff,0xfd009fff,
    0xff8801ff,0xfff800ff,0x1ffff887,0x200ffffa,0x3a1ffffe,0xffff0fff,
    0x6dbffe23,0xfe8006ee,0xffff00ff,0x00009980,0x7e43bbb6,0xffffffff,
    0x3fffffff,0x0ffff300,0x0fffff20,0x0bffffa0,0x807ffff8,0x0006ffff,
    0x00bffff2,0x1003fffa,0xf001ffff,0x3fee0fff,0x0ffffa6f,0x9bfffe60,
    0xfff0fffe,0x1bffe23f,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x10000000,0x13333333,0x02666200,
    0x4c466660,0x44009999,0x80099999,0x4ccc4018,0x99999800,0x10998800,
    0x33001333,0x13310033,0x99999880,0x99999999,0x33333310,0x33333333,
    0xddddd101,0x447ddddd,0x09999999,0x4cc40000,0x99999881,0x51000999,
    0x7fff4555,0xefffffff,0x0bfffd03,0x3faffff0,0x7c04ffff,0x303fffff,
    0x07dffffb,0xb807fffb,0x401fffff,0xffd4fff9,0xfff9807f,0xffff9107,
    0xffd01bff,0xffffffff,0x3ffa9fff,0xffffffff,0xfa86ffff,0xffffffff,
    0x3ffffa4f,0x2eefffff,0x7ffec000,0x7fffff40,0xbeffffff,0x26fff980,
    0xfffffffe,0x40efffff,0x402ffffe,0xfffd7fff,0x7fd40dff,0xfd83ffff,
    0xefffffff,0x80ffff61,0x01fffffa,0xea7fff44,0x7cc03fff,0xfff987ff,
    0x3fffffff,0x7ffffff4,0x4fffffff,0xfffffffd,0xdfffffff,0xffffff90,
    0x7f49ffff,0xffffffff,0x8001efff,0x740ffffb,0xffffffff,0x40ffffff,
    0x3fa6fff9,0xffffffff,0x3a1fffff,0x7c06ffff,0xffffd7ff,0x3ff201ff,
    0x7dc3ffff,0xffffffff,0x0ffff66f,0x17ffffd4,0xa7fffec0,0x4c03fffe,
    0x7fc47fff,0xfffeffff,0x3fffa3ff,0xffffffff,0xffffd4ff,0xffffffff,
    0xfffb0dff,0x9fffffff,0x7ffffff4,0xffffffff,0x3ffe2001,0x7fff40ff,
    0xffffffff,0x3e60efff,0x3fffa6ff,0xffcbaaac,0x3ffa5fff,0x3fe04fff,
    0xfffffd7f,0x3fffa07f,0x3fe23fff,0xffc9adff,0x7fffb3ff,0x5fffff30,
    0xffffd880,0x07fffd4f,0x747fff98,0x2e22efff,0xffd0ffff,0x5555559f,
    0x3ffa3555,0xaaaaaacf,0xff82aaaa,0x3ffa006f,0xfcbaaacf,0x2006ffff,
    0x40fffffd,0xaaacfffe,0xffffebaa,0xe93bba22,0xfd102fff,0x3ffa1fff,
    0xff01ffff,0x3ffffaff,0xfff885ff,0x3ea3ffff,0xfffc86ff,0x987fffb5,
    0x402fffff,0xfffffffb,0x807fffd4,0x3e27fff9,0xffb01fff,0x0ffffa5f,
    0x05fffd00,0x27ffc400,0x05fffd00,0x01ffffdc,0x7fffffdc,0x01ffff40,
    0x4013fff6,0x2a02fffe,0xffd1ffff,0x3e0bffff,0xbfffd7ff,0xfff50fff,
    0x7e47fffb,0xfff984ff,0x447fffb6,0x402fffff,0xfffffffc,0x07fffd4f,
    0x267fff98,0x3ea04fff,0x7fffd4ff,0x2fffe800,0x3ffe6000,0xfffd0023,
    0xffffc805,0x3fffe200,0x7ff40fff,0x7ffd403f,0x5fffd005,0x8ffffc40,
    0xfffffffe,0xfd7fff82,0x83fff7ff,0xfffbfffc,0x4c054cc3,0xfffb5fff,
    0x3ffffa27,0xaeffc803,0xffd4fffa,0xfff9807f,0x7e401307,0x7fffd3ff,
    0x2fffe800,0x3ffee000,0x80ceffdd,0x4402fffe,0x3a01ffff,0x0fffeeff,
    0x201ffff4,0xd003fffc,0x7d405fff,0xfffd0fff,0xf81ffffd,0x3fffd7ff,
    0xffe87fff,0x003fffbd,0xfda7ffe4,0xfffe8bff,0x47f9003f,0xffd4fffa,
    0xfff9807f,0xfff98007,0x07fffd0f,0x02fffe80,0x3ffff200,0x41ffffff,
    0xe802fffe,0xff702fff,0x81fffb1f,0x2a03fffe,0xd000ffff,0x3a605fff,
    0x3ffa6fff,0x44ffff9f,0xfffd7fff,0xff897ffa,0x03fffbbf,0x4bfffe20,
    0xffdbfffd,0x15000fff,0xfd4fffa8,0xddddddff,0x0ffffddd,0x5ffff980,
    0x3337fffa,0x20cccccc,0xeeeefffe,0x86eeeeee,0xfffffffe,0x3fa0ffff,
    0xffd802ff,0x3fff984f,0xfe81fffb,0xeeeeeeff,0x002ffffe,0x3337fffa,
    0xfffffdcc,0x2a3fffa4,0x3fe1ffff,0x32fffd7f,0x3ffea7ff,0x003fffb9,
    0x6cbfffd1,0xffffffff,0x2a0005ff,0xfffd4fff,0xffffffff,0x400fffff,
    0x746ffffa,0xffffffff,0x3fa1ffff,0xffffffff,0xff87ffff,0xffc99cff,
    0x3fffa5ff,0x5fffc802,0x3f66ffe8,0x7fff40ff,0xffffffff,0x7f4001ff,
    0xffffffff,0x7f46ffff,0xdfffd0ff,0xffebfffc,0x323fff57,0x7fff77ff,
    0xffffd100,0x7ffffec1,0x03ffffff,0x29fff500,0xfffffffe,0xffffffff,
    0xffff3007,0xfffffd0b,0x3fffffff,0x7ffffff4,0x7fffffff,0xfa81ca98,
    0xfffd0fff,0xdfff9005,0x360fffc8,0x7ff40fff,0xffffffff,0x2000efff,
    0xfffffffe,0x40efffff,0xff30fffe,0x5fffe7ff,0xfff17ffe,0x7dd7ffa7,
    0x7f4403ff,0x7fec2fff,0xffebffff,0xfa8000ff,0xdfffd4ff,0xdddddddd,
    0xf100ffff,0x3fa0bfff,0xffffffff,0x3ffa1fff,0xccccccdf,0x88004ccc,
    0xffd1ffff,0xfff9005f,0x21fffccb,0x7f40fffd,0xeeeeeeff,0x23fffffe,
    0x3fa6fff9,0xffffffff,0xfffd02de,0x47fffe41,0xfffd7fff,0x7fc77ff4,
    0x07fff73f,0x1fffff44,0x9fffffec,0x005ffff9,0xfd4fffa8,0xff9807ff,
    0xfffb807f,0x0ffffa05,0x05fffd00,0xffd80000,0x05fffd3f,0x749fffb0,
    0xfffd86ff,0x01ffff40,0x21ffffb1,0x3fa6fff9,0xfd0002ff,0xfffe81ff,
    0xffd7fffc,0x7dfffe4f,0x7fff71ff,0x3ffffa20,0x9ffffb03,0x02ffffc8,
    0xea7ffd40,0x7cc03fff,0xffc807ff,0x3fffa00f,0x7fff4003,0x6c000002,
    0xfffd3fff,0x7fffd005,0x3bbbffea,0xeeffffee,0x007fffd4,0x3e65fffd,
    0x3fffa6ff,0xfffd0002,0xfffffa81,0x4fffd7ff,0x7ffffffa,0x220fffee,
    0x202ffffe,0xf884fffd,0x2000ffff,0xffd4fffa,0xfff9807f,0x07ffe807,
    0x001ffff4,0x000bfffa,0x441f664c,0xffd1ffff,0xfff8805f,0xfffff71f,
    0xffffffff,0x0ffffabf,0x4d7fff20,0x3ffa5fff,0xffd0002f,0xffffb01f,
    0x9fffafff,0x5ffffff8,0x360fffee,0x6c02ffff,0xff703fff,0x7d400bff,
    0x7fffd4ff,0x07fff980,0x7403ccb8,0x74003fff,0x50002fff,0xff50ffff,
    0x3fffa1ff,0x7fffe402,0xffffff70,0xffffffff,0x00ffffab,0xf517fffa,
    0x017fff49,0x80fffe80,0x7ffffff8,0xffe8fffd,0x3fee3fff,0x7fffdc3f,
    0x3fffd803,0x0bffffa0,0xea7ffd40,0x7cc03fff,0x400007ff,0x4003fffe,
    0x0002fffe,0x23bffff1,0x3a4fffeb,0x3ee02fff,0x3baa2fff,0xffeeeeee,
    0xffd4eeff,0xfffa807f,0xfd1fe43f,0x3a0005ff,0xff700fff,0x3ffaffff,
    0x7ffffe47,0x88fffee1,0xeeefffff,0xffb5eeee,0x7ffd407f,0xffa800ef,
    0x07fffd4f,0x807fff98,0x3a01fffe,0x74003fff,0xccccdfff,0x0ccccccc,
    0x3fffffee,0x3a0effff,0xccccdfff,0x05ffffed,0x40fffd80,0xcccdfffe,
    0xffffeccc,0x41df911f,0x0002fffe,0x7401fffd,0xffd7ffff,0x7ffffa8f,
    0xf51fffdc,0xffffffff,0x3ff6ffff,0x7ffec03f,0xfffa804f,0x807fffd4,
    0xe807fff9,0x3fa01fff,0x7f4003ff,0xffffffff,0x41ffffff,0xfffffffd,
    0x7fff40ef,0xffffffff,0xd8000fff,0x7ff40fff,0xffffffff,0x2a3fffff,
    0x7fff41ef,0xfffd0002,0x7fffcc01,0xf88fffd7,0x7fdc5fff,0x3ffff63f,
    0xffffffff,0x807fffb7,0x01fffff8,0xfea7ffd4,0x7fcc03ff,0xfffe807f,
    0x0ffffa01,0xfffffd00,0xffffffff,0xffd503ff,0x3fa09dff,0xffffffff,
    0x0000dfff,0xfe81fffb,0xffffffff,0x384fffff,0x005fffd0,0x003fffa0,
    0x3faffff9,0x3fffe87f,0xf89fffdc,0xffffffff,0xffb7ffff,0xfff9007f,
    0xfffa80df,0x807fffd4,0xe807fff9,0x3fa01fff,0x7f4003ff,0xffffffff,
    0x01ffffff,0xfd002a62,0xdfffffff,0xd800039b,0x7ff40fff,0xffffffff,
    0x00000bdf,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x40013331,0x8003fffd,0xeeeeeeec,
    0x00eeeeee,0xba880c00,0x00602bcc,0x565cc000,0x32e62001,0x2a2001ac,
    0x2aa01acc,0x0aaaa02a,0x0de665d4,0x5102aaa8,0x2aaa0355,0x54caaaa2,
    0x55500aaa,0x11555435,0x00015795,0x00fffff0,0x001fffec,0x7fffffec,
    0x0fffffff,0x88dd7000,0xfffffffc,0x00bfc82f,0x7ffecc00,0x5401efff,
    0xdfffffff,0x7fffe400,0xfff80dff,0x7fff880f,0x7fffffdc,0xfffc85ff,
    0x85fffc81,0xff15fff9,0x3fffe2ff,0x0ffffc86,0x7fddbffa,0x0002ffff,
    0x0bffffea,0x01fffec0,0x7ffffec0,0xffffffff,0x3ff22000,0x7fffec6f,
    0x40ffffff,0x001cfffc,0xffffff98,0xfb03ffff,0xffffffff,0xfffd101d,
    0x83ffffff,0xf880ffff,0x3ffea7ff,0x5fffffff,0x7427ffcc,0xffc87fff,
    0x4ffff12f,0x263ffff9,0x7f42ffff,0xfffffcef,0xb0001fff,0x00dfffff,
    0x000ffff6,0x3ffffff6,0x05ffffff,0xfffffb30,0x5efffd4d,0x46fffdba,
    0x2dfffffc,0xfffff100,0x5fffffdd,0xcfffffa8,0xc85ffffd,0xffcdffff,
    0x7fffc6ff,0x27fff880,0xecbdffff,0x7fc1ffff,0x7fffc46f,0x87fff41f,
    0x7e47fff8,0xffe88fff,0xffffe84f,0xffffdbdf,0xfff88005,0xd801ffff,
    0x00003fff,0x801dffd0,0xffffffea,0x03fff25f,0xfb8337f6,0xbeffffff,
    0x3bfffa00,0x3ffff662,0x82ffffa0,0x260ffff9,0x7ec1ffff,0x3fffe2ff,
    0x37fff880,0xffd0bffd,0x0fffc87f,0x8fffffea,0x3a25fff8,0xfffe85ee,
    0x80efffcd,0x641ffffe,0xc8006fff,0x4fffffff,0x03fffd80,0xfffc8000,
    0xffff9100,0xc817dfff,0x4002dfff,0xfffffeb8,0x7fc41cff,0xfffd00ff,
    0x41bffea7,0x3f20acdd,0xfff984ff,0x203fffe5,0x0987fff8,0x543fffb8,
    0x3ff22fff,0x3fea5fff,0x7fcc002f,0x01ffffff,0xf107fffd,0xff000fff,
    0x0ffff7ff,0x007fffb0,0x3fff9800,0xfffffd98,0x3ea01dff,0x1bdfffff,
    0x3fff2600,0xf51dffff,0x7fdc09ff,0x09fff74f,0x05fffb00,0xfff9fffe,
    0x7fff880f,0x7ffed440,0x2fffc43f,0x4fffdfff,0x8000fffd,0x3ffffffb,
    0x407fffa0,0x54007fff,0xfffd6fff,0x3fffd805,0x7ff40000,0xfffff906,
    0x3f60017d,0xffffffff,0x7fed4003,0xfff96fff,0xb7ffcc07,0x8003fffc,
    0xffffffff,0x3e7fffff,0xff880fff,0x7fed447f,0x83ffffff,0xfff17ffd,
    0x3fe3fff3,0x3f60005f,0x7f405fff,0xffff01ff,0x3fffd800,0xd80dfff7,
    0x00003fff,0x640bffee,0x8002ffff,0xffffffc8,0x4000efff,0xfb6fffe9,
    0x7fcc05ff,0x07fffb7f,0xffffff00,0xffffffff,0x203fffe1,0x3e67fff8,
    0xfeefffff,0xfffa83ff,0xffd6ffb9,0x007fff37,0x37fffe40,0x403fffa0,
    0x22007fff,0xff10ffff,0x7fec03ff,0x3a00003f,0x3ff207ff,0x8002efff,
    0xfffffdb8,0xf93004ff,0x3eedffff,0x3fea03ff,0x07fff95f,0x9bffff00,
    0x99999999,0x203fffe1,0xff37fff8,0x3ee17bff,0xfff883ff,0xff94ffdc,
    0x001fff9b,0x3ffffe60,0x3fffa04f,0x00ffff00,0x3a2fffdc,0x3f604fff,
    0x500003ff,0x6cc09fff,0xcfffffff,0xff730001,0x75c40dff,0x2effffff,
    0x640bfff3,0xfff74fff,0x82b36a0b,0x4003fffe,0xf980ffff,0x9fff97ff,
    0x207fff70,0x2fffeffe,0xdffdfff5,0x3ffa2000,0xd01fffff,0x3fe01fff,
    0x3ffa007f,0x3fffdc2f,0x007fffb0,0x07fffa00,0x3ffff260,0x220aefff,
    0xf880eecb,0xffd987ff,0x42dfffff,0x881ffff8,0xff32ffff,0xfffd01ff,
    0x42fffe45,0x3f61bce9,0xfffc81ff,0xb03fffd7,0x3ee07fff,0xf10fffff,
    0x007fffff,0x37bfff20,0xfe80efff,0xffff00ff,0x1fffe600,0x40bfffe2,
    0x0003fffd,0x005fff98,0x7ffffdc4,0x3ffa4fff,0x5fffb84f,0x3fffffaa,
    0x3f601cff,0xfc89cfff,0x7ff45fff,0xffc98bff,0x3ffe20ff,0x3fffa0bf,
    0x83bfff23,0xfd7ffffa,0xfffa89ff,0xffff104f,0xffffe8df,0x7fff881f,
    0x44ffffd4,0xfe84ffff,0xffff00ff,0x3bfff200,0xffeaaaaa,0x7fffb06f,
    0xfff70000,0x7f540005,0x3ea6ffff,0xffddffff,0x3ff21fff,0x800bffff,
    0xffffffe8,0x4c0fffff,0xffffffff,0xffc83fff,0xffffdfff,0x7ffffdc5,
    0x7ffffffe,0xd9dffff9,0x409fffff,0x5c4ffffe,0xf106ffff,0x7ffc4fff,
    0x3fffee4f,0x807fff42,0xff007fff,0xffffffff,0xb03fffff,0x00007fff,
    0x0000fffd,0x71bfff66,0xffffffff,0xfffc87ff,0xfd88002e,0xefffffff,
    0xfffff501,0x6409ffff,0xffffffff,0xffffd80f,0x7ffdafff,0xffffffd1,
    0x40dfff9f,0x4c2ffffb,0xf104ffff,0x7ffecfff,0x0ffffe86,0x7c03fffa,
    0xffa807ff,0xffffffff,0xd84fffff,0x40003fff,0x0005fff8,0x4c37e440,
    0xdffffffd,0x001dfc81,0xffffdb80,0xffd8804e,0xa802efff,0x1dfffffe,
    0x37ffff20,0x6c4fffb1,0xfb1effff,0x3fe603ff,0xffff80ff,0x2ffff101,
    0x881ffffb,0x3fa5ffff,0xffff00ff,0xfffffb00,0xffffffff,0xfffb0fff,
    0xffa80007,0x2000004f,0x00cccc02,0x40000026,0x51000099,0x2a600013,
    0x00660009,0x00026620,0x00000000,0x00000000,0x99ffff88,0xf9999999,
    0x7fec2fff,0xccccccef,0xfb80cccc,0x000003ff,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x64000000,0xfb006fff,0xfffd8dff,
    0xffffffff,0xffc80fff,0x3555002f,0xaa8872e2,0x02b2e61a,0x5402b2e6,
    0xaaaaaaaa,0x2aaa1aaa,0x1555400a,0x00bbba60,0x500e6640,0x55555555,
    0x40555555,0x988003ca,0x26662199,0x40133310,0x5dc40008,0x008880bb,
    0x007ffff0,0xd87fffea,0xffffffff,0x80ffffff,0xf001fffd,0xffff1bff,
    0x233ffe2b,0x12fffffe,0x09fffffb,0xffffffff,0x7dcbffff,0x3fea05ff,
    0x7ffcc05f,0xfffa8003,0x3ffff605,0xffffffff,0x817f207f,0x3fea7fff,
    0x4ffffa7f,0x7545fffc,0x880befff,0x13ffee1d,0xa801fffd,0x2000ffff,
    0x3f64ffff,0xffffffff,0xe80fffff,0xff000fff,0x5ffffddf,0x3fb7ffe2,
    0xebffffff,0x3fffffff,0x7ffffffc,0x225fffff,0xfb00ffff,0xff9805ff,
    0xffe8003f,0xfffb01ff,0xffffffff,0x3ee08fff,0xa9fffe05,0x3ffa7fff,
    0x4bfff93f,0xfffffffc,0x1fecaadf,0xfd07ffdc,0xffd801ff,0x7fe4005f,
    0x0000007f,0xfffff800,0x3fe27fff,0xffccefff,0xfccfffff,0x7ffc7fff,
    0xffffffff,0x1fffec4f,0x403fffc4,0x4003fff9,0x04fffffa,0xfffffffb,
    0x8fffffff,0xb8cfb9df,0xa9fffe1f,0x3ffa7fff,0x4bfff93f,0xffffffff,
    0x1fffffff,0x3fa3ffc8,0x000000ff,0x00000000,0xfffff800,0x3fe2298a,
    0x7ffd46ff,0x3ffe20ff,0xfff9800f,0x6fff986f,0x804fffb8,0x4003fff9,
    0x0ffffffd,0x99999988,0x19999999,0x3bfbffea,0x3ffe4fff,0xe9fffea7,
    0xfff93fff,0x7e677fcb,0xffffffff,0x74bd900f,0x00000fff,0x00000000,
    0xffff8000,0x3fffe205,0x83ffff81,0x4401fffe,0xd00effff,0xffe81fff,
    0x5555540f,0xaaadfffb,0x9fff302a,0x00009fff,0x3fff6e20,0x7c42ceff,
    0xc9bffe26,0xfff72fff,0x75cc17c9,0x000dffff,0x00000000,0x00000000,
    0x01ffff80,0x203fffe2,0xfd82ffff,0x3fa202ff,0x3ee01fff,0x3ffe63ff,
    0xfffffd85,0xffffffff,0x36fffb07,0x4cc40fff,0x99999999,0xff501999,
    0x22fdc07f,0x3fee5fff,0x45fff30f,0x00aa9800,0x99999999,0x00000000,
    0x00000000,0x803fffe0,0xff07fff8,0xfffb03ff,0x7ffff405,0x37ffc402,
    0xfb05fff9,0xffffffff,0xf30fffff,0x3ffea9ff,0x7ffffec3,0xffffffff,
    0xffcffa87,0x6c1ffb82,0x9ffe63ff,0x0001fff8,0xffffff80,0x0000006f,
    0x00000000,0x1ffff000,0x837ffc40,0xfd80ffff,0xfffb02ff,0x3ff6007f,
    0x20ffff1f,0xfffffffd,0x87ffffff,0x3fe1fffc,0x7fffec6f,0xffffffff,
    0xdaffcc7f,0x0ffe21ff,0xaa882aa6,0x00015542,0xffffff80,0x0000006f,
    0x00000000,0x0ffff000,0xf06fff88,0xffb01fff,0xffff905f,0x7ffcc009,
    0x504fffac,0xfff75555,0x8855555b,0x7fe46fff,0x3ffff62f,0xffffffff,
    0x88fec47f,0x000540ef,0x00000000,0xdfffffff,0x00000000,0x00000000,
    0x101fffe0,0x3fe0dfff,0xfffd80ff,0x27fffdc2,0x6ffff400,0x26000fff,
    0xfc803fff,0x7ffc42ff,0x333332e6,0xcccccccc,0x00018304,0x00000000,
    0x55555550,0x00000003,0x00000000,0x01fffe00,0x3e0dfff1,0xffd80fff,
    0x3fffea2f,0xfff70005,0x9800bfff,0x7c403fff,0xfffb07ff,0x00000003,
    0x00000000,0x00000000,0x00000000,0xf0000000,0xff880fff,0x1ffff06f,
    0x265fffb0,0xccbfffff,0x100ccccc,0x05ffffff,0x03fff980,0x774c0000,
    0xeeeeeeee,0x02eeeeee,0x00000000,0x00000000,0x00000000,0x00000000,
    0xf880ffff,0xffff06ff,0x25fffb01,0xfffffffb,0x00ffffff,0x01fffff6,
    0x00fffe60,0xfff30000,0xffffffff,0x007fffff,0x00000000,0x00000000,
    0x00000000,0x20000000,0x7c407fff,0xffff06ff,0x25fffb01,0xfffffffb,
    0x00ffffff,0x013fffe6,0x00fffe60,0xddd30000,0xdddddddd,0x007ddddd,
    0x00000000,0x00000000,0x00000000,0x20000000,0x7c407fff,0xffff06ff,
    0x25fffb01,0xfffffffb,0x00ffffff,0x000ffff4,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
};

static signed short stb__arial_bold_33_usascii_x[95]={ 0,2,1,0,1,1,1,1,1,0,0,1,1,0,
2,-1,1,2,0,1,0,1,1,1,1,0,2,2,1,1,1,1,0,0,2,1,2,2,2,1,2,2,0,2,
2,2,2,1,2,1,2,1,0,2,-1,0,0,-1,0,2,-1,0,1,-1,0,1,1,1,1,0,0,1,2,2,
-2,1,2,1,2,1,2,1,1,0,0,2,0,0,0,0,0,0,2,0,0, };
static signed short stb__arial_bold_33_usascii_y[95]={ 26,4,4,4,3,4,4,4,4,4,4,8,21,16,
21,4,4,4,4,4,4,5,4,5,4,4,10,10,7,10,7,4,4,4,4,4,4,4,4,4,4,4,4,4,
5,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,29,4,10,4,10,4,10,4,10,4,4,
4,4,4,10,10,10,10,10,10,10,5,10,10,10,10,10,10,4,4,4,12, };
static unsigned short stb__arial_bold_33_usascii_w[95]={ 0,6,12,17,15,24,20,5,8,9,11,16,6,9,
5,10,14,10,15,15,16,15,15,15,15,16,5,5,15,16,15,16,29,22,18,19,18,17,15,21,18,5,15,20,
16,21,17,21,17,22,20,18,18,17,21,28,20,21,18,8,10,8,15,18,8,15,16,15,16,16,11,16,15,5,
9,16,5,24,15,16,15,16,11,16,10,14,17,23,17,16,15,11,4,11,17, };
static unsigned short stb__arial_bold_33_usascii_h[95]={ 0,22,9,23,26,23,23,9,29,29,11,15,10,5,
5,23,23,22,22,23,22,22,23,21,23,23,16,21,17,11,17,22,29,22,22,23,22,22,22,23,22,22,23,22,
21,22,22,23,22,25,22,23,22,23,22,22,22,22,22,28,23,28,13,3,5,17,23,17,23,17,22,23,22,22,
29,22,22,16,16,17,22,22,16,17,22,17,16,16,16,23,16,29,29,29,7, };
static unsigned short stb__arial_bold_33_usascii_s[95]={ 146,249,197,217,107,1,235,210,50,11,178,
128,190,234,243,62,143,96,59,175,212,177,185,41,26,73,211,248,57,161,90,
126,59,1,229,42,193,159,143,202,107,243,201,75,24,37,19,163,1,123,216,
90,180,224,152,123,102,80,61,98,191,89,145,161,234,171,126,123,158,139,242,
109,17,174,1,199,237,69,235,106,1,44,57,73,33,156,110,187,217,146,94,
38,33,21,216, };
static unsigned short stb__arial_bold_33_usascii_t[95]={ 25,55,119,1,1,31,1,119,1,1,119,
119,119,125,119,31,31,78,78,31,78,78,1,101,31,31,101,78,101,119,101,
78,1,101,78,31,78,78,78,31,78,55,1,78,101,78,78,1,78,1,55,
31,55,31,55,55,55,55,55,1,31,1,119,131,119,101,31,101,31,101,31,
31,55,55,1,55,55,119,101,101,55,55,119,101,55,101,119,101,101,1,119,
1,1,1,119, };
static unsigned short stb__arial_bold_33_usascii_a[95]={ 131,157,224,263,263,420,341,112,
157,157,184,276,131,157,131,131,263,263,263,263,263,263,263,263,
263,263,157,157,276,276,276,289,461,341,341,341,341,315,289,368,
341,131,263,341,289,394,341,368,315,368,341,315,289,341,315,446,
315,315,289,157,131,157,276,263,157,263,289,263,289,263,157,289,
289,131,131,263,131,420,289,289,289,289,184,263,157,289,263,368,
263,263,236,184,132,184,276, };

// Call this function with
//    font: NULL or array length
//    data: NULL or specified size
//    height: STB_FONT_arial_bold_33_usascii_BITMAP_HEIGHT or STB_FONT_arial_bold_33_usascii_BITMAP_HEIGHT_POW2
//    return value: spacing between lines
static void stb_font_arial_bold_33_usascii(stb_fontchar font[STB_FONT_arial_bold_33_usascii_NUM_CHARS],
                unsigned char data[STB_FONT_arial_bold_33_usascii_BITMAP_HEIGHT][STB_FONT_arial_bold_33_usascii_BITMAP_WIDTH],
                int height)
{
    int i,j;
    if (data != 0) {
        unsigned int *bits = stb__arial_bold_33_usascii_pixels;
        unsigned int bitpack = *bits++, numbits = 32;
        for (i=0; i < STB_FONT_arial_bold_33_usascii_BITMAP_WIDTH*height; ++i)
            data[0][i] = 0;  // zero entire bitmap
        for (j=1; j < STB_FONT_arial_bold_33_usascii_BITMAP_HEIGHT-1; ++j) {
            for (i=1; i < STB_FONT_arial_bold_33_usascii_BITMAP_WIDTH-1; ++i) {
                unsigned int value;
                if (numbits==0) bitpack = *bits++, numbits=32;
                value = bitpack & 1;
                bitpack >>= 1, --numbits;
                if (value) {
                    if (numbits < 3) bitpack = *bits++, numbits = 32;
                    data[j][i] = (bitpack & 7) * 0x20 + 0x1f;
                    bitpack >>= 3, numbits -= 3;
                } else {
                    data[j][i] = 0;
                }
            }
        }
    }

    // build font description
    if (font != 0) {
        float recip_width = 1.0f / STB_FONT_arial_bold_33_usascii_BITMAP_WIDTH;
        float recip_height = 1.0f / height;
        for (i=0; i < STB_FONT_arial_bold_33_usascii_NUM_CHARS; ++i) {
            // pad characters so they bilerp from empty space around each character
            font[i].s0 = (stb__arial_bold_33_usascii_s[i]) * recip_width;
            font[i].t0 = (stb__arial_bold_33_usascii_t[i]) * recip_height;
            font[i].s1 = (stb__arial_bold_33_usascii_s[i] + stb__arial_bold_33_usascii_w[i]) * recip_width;
            font[i].t1 = (stb__arial_bold_33_usascii_t[i] + stb__arial_bold_33_usascii_h[i]) * recip_height;
            font[i].x0 = stb__arial_bold_33_usascii_x[i];
            font[i].y0 = stb__arial_bold_33_usascii_y[i];
            font[i].x1 = stb__arial_bold_33_usascii_x[i] + stb__arial_bold_33_usascii_w[i];
            font[i].y1 = stb__arial_bold_33_usascii_y[i] + stb__arial_bold_33_usascii_h[i];
            font[i].advance_int = (stb__arial_bold_33_usascii_a[i]+8)>>4;
            font[i].s0f = (stb__arial_bold_33_usascii_s[i] - 0.5f) * recip_width;
            font[i].t0f = (stb__arial_bold_33_usascii_t[i] - 0.5f) * recip_height;
            font[i].s1f = (stb__arial_bold_33_usascii_s[i] + stb__arial_bold_33_usascii_w[i] + 0.5f) * recip_width;
            font[i].t1f = (stb__arial_bold_33_usascii_t[i] + stb__arial_bold_33_usascii_h[i] + 0.5f) * recip_height;
            font[i].x0f = stb__arial_bold_33_usascii_x[i] - 0.5f;
            font[i].y0f = stb__arial_bold_33_usascii_y[i] - 0.5f;
            font[i].x1f = stb__arial_bold_33_usascii_x[i] + stb__arial_bold_33_usascii_w[i] + 0.5f;
            font[i].y1f = stb__arial_bold_33_usascii_y[i] + stb__arial_bold_33_usascii_h[i] + 0.5f;
            font[i].advance = stb__arial_bold_33_usascii_a[i]/16.0f;
        }
    }
}

#ifndef STB_SOMEFONT_CREATE
#define STB_SOMEFONT_CREATE              stb_font_arial_bold_33_usascii
#define STB_SOMEFONT_BITMAP_WIDTH        STB_FONT_arial_bold_33_usascii_BITMAP_WIDTH
#define STB_SOMEFONT_BITMAP_HEIGHT       STB_FONT_arial_bold_33_usascii_BITMAP_HEIGHT
#define STB_SOMEFONT_BITMAP_HEIGHT_POW2  STB_FONT_arial_bold_33_usascii_BITMAP_HEIGHT_POW2
#define STB_SOMEFONT_FIRST_CHAR          STB_FONT_arial_bold_33_usascii_FIRST_CHAR
#define STB_SOMEFONT_NUM_CHARS           STB_FONT_arial_bold_33_usascii_NUM_CHARS
#define STB_SOMEFONT_LINE_SPACING        STB_FONT_arial_bold_33_usascii_LINE_SPACING
#endif

