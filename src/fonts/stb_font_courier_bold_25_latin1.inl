// Font generated by stb_font_inl_generator.c (4/1 bpp)
//
// Following instructions show how to use the only included font, whatever it is, in
// a generic way so you can replace it with any other font by changing the include.
// To use multiple fonts, replace STB_SOMEFONT_* below with STB_FONT_courier_bold_25_latin1_*,
// and separately install each font. Note that the CREATE function call has a
// totally different name; it's just 'stb_font_courier_bold_25_latin1'.
//
/* // Example usage:

static stb_fontchar fontdata[STB_SOMEFONT_NUM_CHARS];

static void init(void)
{
    // optionally replace both STB_SOMEFONT_BITMAP_HEIGHT with STB_SOMEFONT_BITMAP_HEIGHT_POW2
    static unsigned char fontpixels[STB_SOMEFONT_BITMAP_HEIGHT][STB_SOMEFONT_BITMAP_WIDTH];
    STB_SOMEFONT_CREATE(fontdata, fontpixels, STB_SOMEFONT_BITMAP_HEIGHT);
    ... create texture ...
    // for best results rendering 1:1 pixels texels, use nearest-neighbor sampling
    // if allowed to scale up, use bilerp
}

// This function positions characters on integer coordinates, and assumes 1:1 texels to pixels
// Appropriate if nearest-neighbor sampling is used
static void draw_string_integer(int x, int y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0, cd->t0); glVertex2i(x + cd->x0, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t0); glVertex2i(x + cd->x1, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t1); glVertex2i(x + cd->x1, y + cd->y1);
        glTexCoord2f(cd->s0, cd->t1); glVertex2i(x + cd->x0, y + cd->y1);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance_int;
    }
    glEnd();
}

// This function positions characters on float coordinates, and doesn't require 1:1 texels to pixels
// Appropriate if bilinear filtering is used
static void draw_string_float(float x, float y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0f, cd->t0f); glVertex2f(x + cd->x0f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t0f); glVertex2f(x + cd->x1f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t1f); glVertex2f(x + cd->x1f, y + cd->y1f);
        glTexCoord2f(cd->s0f, cd->t1f); glVertex2f(x + cd->x0f, y + cd->y1f);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance;
    }
    glEnd();
}
*/

#ifndef STB_FONTCHAR__TYPEDEF
#define STB_FONTCHAR__TYPEDEF
typedef struct
{
    // coordinates if using integer positioning
    float s0,t0,s1,t1;
    signed short x0,y0,x1,y1;
    int   advance_int;
    // coordinates if using floating positioning
    float s0f,t0f,s1f,t1f;
    float x0f,y0f,x1f,y1f;
    float advance;
} stb_fontchar;
#endif

#define STB_FONT_courier_bold_25_latin1_BITMAP_WIDTH         256
#define STB_FONT_courier_bold_25_latin1_BITMAP_HEIGHT        160
#define STB_FONT_courier_bold_25_latin1_BITMAP_HEIGHT_POW2   256

#define STB_FONT_courier_bold_25_latin1_FIRST_CHAR            32
#define STB_FONT_courier_bold_25_latin1_NUM_CHARS            224

#define STB_FONT_courier_bold_25_latin1_LINE_SPACING          12

static unsigned int stb__courier_bold_25_latin1_pixels[]={
    0x00000000,0x03a80000,0x99320000,0x0dffb01d,0x009a8800,0x000aa000,
    0x40021c40,0x00000000,0x00008800,0x00000dfb,0x6d880000,0x0003b200,
    0x5c005d88,0x03f5004f,0x4fb9fe20,0x000dfff0,0x37ffff6a,0x361fb06e,
    0x0007fc46,0x5f997f40,0x9f027d40,0x03ee0000,0x004eeb80,0xd1006fd8,
    0x04e88009,0x001fe880,0x20007fa2,0x36001fe9,0x1fec003f,0x02a21980,
    0xa8006fb8,0xffffefff,0xf89ff80f,0x0027f40f,0x7c43fea0,0x09ff102f,
    0x00006fd4,0x278007fb,0x02aa8007,0x2000efa8,0x44000efa,0xd88000ef,
    0x3be2001f,0x007a2000,0x0001fdc0,0x4006fa80,0x3620dff9,0x89ff80ff,
    0x00ffa87f,0xfb13fa00,0x003fee0d,0x36000df3,0xbbd8001f,0x26000005,
    0x2fcc005f,0x00005000,0x00280015,0x03300000,0xb833bb62,0x77d42dee,
    0x80bdffda,0x1ff105fd,0x0ff31ff0,0x4c000ffa,0x17fcc0ff,0x288027f4,
    0x00015000,0x2e003322,0x0eeeeeed,0x51000510,0x00000000,0x806a2000,
    0x2e0ceed8,0x2a202dee,0x3fffea01,0x8bffff11,0xfffffffa,0x00ffc0ef,
    0x31ff1077,0x01fea0ff,0xfe82fec0,0x0007fd45,0x00000000,0x3ffffa00,
    0x00000fff,0x7ffdc000,0xbffff75f,0xbaffffdc,0xd505ffff,0xf507ffff,
    0x3fe23fff,0xffea85ff,0x5ff703ff,0x540dff98,0xfc9adfff,0x001fe26f,
    0x3ffffff6,0x03ff83ef,0xa80ffcc0,0x8837e47f,0x00fffffe,0xfffffe88,
    0xfffe8800,0x554400ff,0xf30ffaaa,0x7ff41dff,0xfffff53f,0x70bfffff,
    0x3f2dffff,0x3fee6fff,0xffff96ff,0xfffff70d,0x5ff70bff,0x5c0dff98,
    0x5fffffff,0xffa89fd0,0x983ffa80,0x00df31ff,0xffffff88,0x6fb85fff,
    0x302fe400,0x827f43ff,0x3ffffff9,0xfffff980,0xfff9803f,0xf0003fff,
    0x3fffe61f,0x29ffff10,0xfffffffb,0xdf505fff,0xa85fc881,0x2fe440ef,
    0xd9977fcc,0x44fe83ff,0x7fcc0ffa,0x07ffb32e,0x27f41ff5,0xfb00ffa8,
    0x2001fe67,0xdfc9efb8,0x005ff101,0xf8807fe2,0x300ffe2f,0x400dfffb,
    0x006fffd9,0x01bfff66,0x3fa07fc0,0x2207fe45,0xc9999bfe,0x20df505f,
    0x06fa84fb,0x0bfd09f7,0xff503fea,0x7f427f41,0xd01ff505,0x403fea9f,
    0x7fb01ffa,0x540017fc,0xc809f95f,0x0df9006f,0x3fe27ff0,0x7dffc402,
    0x7ff1001f,0x3e2003ff,0x8001ffbf,0x9ffcc0ff,0x5fd03ff9,0xf504fa84,
    0x2a13ee0d,0x889f706f,0x0ff602ff,0x07fd53fa,0xfd80bfe2,0xfe8ffa83,
    0x217fea04,0x1bf61ffa,0x77ecc388,0x2200dfda,0x7fc402ff,0x3e2ff802,
    0xdbfdc02f,0x2ff7004f,0xff7004fd,0x3e0013f6,0xe8ffb80f,0x5cbfa05f,
    0xf501c89f,0x2a13ee0d,0xa89f706f,0x427dc07f,0x84fe8ffa,0x27dc07fa,
    0x00ffefe8,0x2f3fffea,0x7fd45ffd,0x5ff510be,0x3fffffee,0x3f201fff,
    0x4037dc05,0x13fa1ff9,0x3fe69fd0,0xf34fe800,0x29fd001f,0x7c000ff9,
    0xffffd00f,0x766ff401,0x06fa803f,0x0df509f7,0x0bf713ee,0xdfd05fa8,
    0x0bf701ff,0xff505fa8,0xfffa809f,0x80dfffff,0xfffffffa,0xdffb30ef,
    0x401bdffd,0x3fe01ff8,0x20ffa803,0x3fe605fd,0xf300ffa0,0x201ff41f,
    0x0ffa0ff9,0x2201ff00,0x7f402fff,0xa803ffff,0x509f706f,0x513ee0df,
    0x04fb80ff,0x2a09fff5,0x027dc07f,0xfa801ffd,0x01bdcb8e,0x77fff6cc,
    0x3fa7fb04,0x20bfb002,0xdf9007fb,0xf900ffb8,0x0dffdddf,0xfeeeffc8,
    0x77fe406f,0x4006ffee,0x1bf200ff,0x3fb37fa0,0x906fa803,0x20df509f,
    0x17fc44fc,0x7f407fd0,0x05ff100f,0x9fd01ff4,0x000df500,0xfd8019f0,
    0x26003fd3,0x03fe80ff,0x7c43ff88,0xffff883f,0x101fffff,0xffffffff,
    0x3ffe203f,0x01ffffff,0x5c01ff10,0x72fe805f,0x7c412e3f,0x883fd81f,
    0x83fd81ff,0x1ff705fe,0x3a027f40,0x01ff705f,0x2a003fea,0xff80006f,
    0xff97f401,0x513f6001,0xff9001ff,0xf70ff901,0xfb55555d,0x2abbee09,
    0x704fdaaa,0xb55555df,0x1bee009f,0xfd00bf70,0x201ff045,0xff912efe,
    0x44bbfa01,0xff980ffc,0x07ffb32e,0x26007fd4,0xffb32eff,0x7f665c47,
    0x7fed402e,0x6cc000bc,0x8ff404fc,0x3ea000ff,0x2013fa0f,0xff103ff8,
    0x4067f447,0x7f441ffb,0x41ffb80c,0xfb80cfe8,0x7666541f,0xf93104ff,
    0x3fa2013b,0xff99999b,0xfffff301,0x7fcc07ff,0x203fffff,0xfffffffb,
    0x7f665c45,0xfffb802e,0x7d45ffff,0x00ffffff,0x9ffffff1,0x1efd8800,
    0x06d87e40,0xff12fe80,0x80df3001,0xffff54fb,0x7ffffc3f,0x3fffff53,
    0xa9fffffc,0x3e1fffff,0x3fe3ffff,0xf304ffff,0x87ffffff,0xfffffffb,
    0x2201ffff,0x802ffffe,0x02ffffe8,0x2ffffe98,0xffffffa8,0xffe9800f,
    0xccb882ff,0x65402ccc,0x0000bccc,0x10000000,0x2a001a85,0xfd30a800,
    0x7fec1dff,0xfffd32ff,0x7fffec1d,0x1dfffd32,0x517fffec,0x44017999,
    0x2ffffffe,0x7fffffd4,0x801fffff,0x98800098,0x00988000,0x333332e2,
    0x004c4002,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x0b620000,0x10200000,0x00762001,
    0x44080060,0x00000000,0x002d8800,0x020bfffb,0x0ef44011,0x9877ffdc,
    0x00b6202e,0x22004408,0x03b101ec,0x54030ba6,0x2744002f,0x067ffdc0,
    0x0b8ff660,0x37c4bf60,0x067ffdc0,0xd803f980,0x200df12f,0x362002fa,
    0x5c002e4f,0x2200dfff,0xfc85ffff,0xff981fe2,0x7fffdc1f,0x3ee0bf72,
    0x7ec00cff,0xfe80df12,0xcfffb82f,0xdfb2fdc0,0xa801fec0,0xa7e400ef,
    0x677c06fb,0x2e00feef,0xf9017a1f,0x5c01bee9,0x21fb805f,0x0ff6005e,
    0x77fe7740,0x54fc800f,0xfc9880df,0x1ba1fb85,0xfb87fd30,0x217ee09d,
    0x80df74fc,0x9817a1fb,0x74fc81ff,0xf15fb8df,0x1fdc03ff,0x54017e60,
    0x88601c41,0x000000cc,0x4c038835,0x04fffffd,0x1fdc0000,0x039910c0,
    0x007106a0,0x000017ee,0x85fb89f7,0x441a85fb,0xfb800003,0x43883505,
    0x3fff15fb,0x14401980,0x000d4400,0x510006a2,0x44000003,0x7fffffff,
    0x19800000,0x00000000,0x0005fb80,0x3ee27dc0,0x0005fb85,0x2fdc0000,
    0xf97ee000,0x000000ff,0xffffea80,0x7fff5403,0x7ff5403f,0xfffb83ff,
    0xbffff75f,0xf711efa8,0xaffffdcd,0x005ffffb,0x3fffa200,0xfe8800ff,
    0x7000ffff,0xfffe88bf,0x4fb800ff,0xafdc2fdc,0xfffffffa,0x3fea5fff,
    0xffffffff,0xfe85fb85,0x1effffff,0x23ffcbf7,0xfffffffe,0x3ffffa1e,
    0x7dc1efff,0x05ffffff,0xfffffff7,0x3fffee0b,0x7fdc5fff,0xffff96ff,
    0x2b84fc8d,0x65bfffee,0x3ea6ffff,0xffffffff,0xffff985f,0xff9803ff,
    0x7003ffff,0xffff98bf,0x4fb803ff,0xafdc2fdc,0xfffffffb,0x3fee5fff,
    0xffffffff,0xfe85fb85,0x1fffffff,0x23ff4bf7,0xfffffffe,0x3ffffa1f,
    0x3e61ffff,0x7ffb32ef,0xb32eff98,0xeff987ff,0xa87ffb32,0x2fe440ef,
    0x0056ffcc,0xfc881df5,0x7ffffdc5,0x205fffff,0x006fffd9,0x01bfff66,
    0xfd982fdc,0xefa806ff,0x3ee17ee3,0x266ffa25,0x7445fc99,0xfc9999bf,
    0x8827f545,0x4419dfc9,0x221bf61c,0x1019dfc9,0xd033bf93,0x83fea0bf,
    0x1ff505fe,0xffa82ff4,0x7dc1bea0,0xbffff904,0x2e0df505,0x9bfe884f,
    0x205fc999,0x01ffbff8,0x3ff7ff10,0x220bf700,0x401ffbff,0xbf72fff8,
    0x2fe8bf70,0x7f427d42,0xf327d422,0x5fb803ff,0xb817f200,0x0bf7005f,
    0xfd80bfe2,0x6c05ff13,0x405ff13f,0x41bea3fd,0x3b2204fb,0x37d44fff,
    0x5fd04fb8,0x2e04fa84,0x2009fb7f,0x009fb7fb,0x5fee0bf7,0x7fd404fd,
    0xf70bf70d,0x3f72fe8b,0x25fd0391,0x641c89fb,0x2fdc03ff,0x205fc810,
    0xbf7005fb,0xf701fea0,0xf701fea9,0xf701fea9,0xfb837d49,0x8ff71004,
    0x09f706fa,0x44fdcbfa,0x4d3fa01c,0x4fe800ff,0xfb801ff3,0x3e69fd05,
    0x717ee00f,0xe8bf70bf,0x403fecdf,0x03fecdfe,0x3ee02fdc,0x74c9f305,
    0x4017ee02,0x0bf705fb,0x0bf75fa8,0x0bf75fa8,0x1bea5fa8,0x82f427dc,
    0x41bea2fe,0x9bfd04fb,0xff3007fd,0x2601ff41,0x00ffa0ff,0x1ff30bf7,
    0x9f701ff4,0x5fb85fb8,0x1ffffff4,0x3fffffa0,0x202fdc03,0x0bf705fb,
    0x7005fb80,0x01fea0bf,0x01fea9f7,0x01fea9f7,0x837d49f7,0x1ffc44fb,
    0x6fa83fea,0x3fa09f70,0xc803ffff,0x6ffeeeff,0x7777fe40,0x2fdc06ff,
    0x7f777fe4,0x713ee06f,0xe8bf70bf,0x403fecdf,0x03fecdfe,0x3ee02fdc,
    0x800bf705,0xbf7005fb,0xe80bfe20,0x405ff13f,0x05ff13fe,0x0df51ff4,
    0xfff313f2,0xa89fffdf,0x209f906f,0x03fecdfe,0x7fffffc4,0xff101fff,
    0x3fffffff,0x3e22fdc0,0xffffffff,0xfb89f701,0x7f45fb85,0x212e3f72,
    0x2e3f72fe,0x5c05fb84,0x54bf705f,0x017ee03e,0xbfd02fdc,0xfe83fee0,
    0x741ff705,0x41ff705f,0x3fd81ff8,0xfffffff8,0xd81ff883,0x2e5fd03f,
    0xdf70971f,0x9fb55555,0x2aabbee0,0x2e04fdaa,0x5577dc5f,0x904fdaaa,
    0xb85fb89f,0x4117f45f,0x117f40ff,0x17ee07fc,0x3ee0bf70,0xfb817f25,
    0x40bf7005,0xfb32eff9,0x2eff987f,0xf987ffb3,0x7ffb32ef,0x3225dfd0,
    0xf91080ff,0x977f401d,0xfd00ffc8,0x441ff045,0xffb80cfe,0x4067f441,
    0x775c1ffb,0x033fa25f,0xfd887fee,0x677fdc1f,0x7f44bf70,0xff99999b,
    0x266ffa21,0x4c1ff999,0x64cc0dff,0x3ee099df,0xfc9980c5,0xc998099d,
    0xfb8099df,0x05ffffff,0xfffffff7,0x3fffee0b,0xff305fff,0x007fffff,
    0xff980bf7,0x103fffff,0x333337fd,0x3ffea3ff,0x3fffe1ff,0xfffff53f,
    0x9fffffc3,0xf55ffff8,0x7fc3ffff,0x9ff33fff,0x25ffff70,0xffff74fa,
    0x3fffffff,0x3fffffee,0xb81fffff,0x3fffe3ff,0xf51fffff,0xfffff009,
    0x7fc3ffff,0x1fffffff,0x2ffffe98,0x7ffff4c0,0x7fff4c02,0x7ff4402f,
    0x9f5002ff,0xffffd100,0x3fffee05,0x1fffffff,0x41dfffd3,0xd32ffffd,
    0x7ec1dfff,0x2aa62fff,0xdfffd31a,0x17fffec1,0x2aaa6015,0xfffa8542,
    0xffffffff,0xffffff51,0x203fffff,0x7fffec29,0x02a0efff,0x3fffff60,
    0x3ff60eff,0x00efffff,0x31000262,0x00988001,0x20004c40,0x262001c8,
    0x7fffd400,0x1fffffff,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x10011020,0x00000035,0x00000200,0x00098000,
    0x001b8000,0x0c8802a8,0x64000000,0x40000001,0x00600049,0x15c00000,
    0x97ec3ba8,0x3faa06f8,0xd9803fff,0x44002e3f,0x881be20a,0x3e6003fd,
    0xdfffc803,0xffffd500,0x1fd8803f,0x8017ec00,0x366001fe,0xdeebbeff,
    0x7005fb00,0xdffb5bdd,0x01df1007,0x00f7ec40,0x6d77ff5c,0x2fd803de,
    0x1fb8df90,0x7ffdc17a,0x7c05ffff,0x00feefce,0x5effff54,0x6cf205fe,
    0x80bf7001,0x86fcbdfd,0xfdcccffa,0x007fa201,0x2002fe88,0xfc802fd8,
    0xffffffff,0x80ff203f,0xfffffff8,0x4400efff,0xff9801fe,0x3f604feb,
    0xffffffff,0x80bfa207,0x260005fb,0xffb32eff,0x19910c07,0xfefffb80,
    0x3200ffff,0x3ee003b3,0xf717e605,0x1fa87d81,0x300036a0,0x16e0003d,
    0x733bff50,0x7005dfff,0xfffc980b,0x05ffb99c,0xdc803c88,0x3ee03ae0,
    0xfffda9df,0x007a600c,0x740009f5,0x01ff505f,0x77fcc000,0x80bffb12,
    0x36004fd8,0x7ec0abff,0x1fa1fcc0,0x00000122,0xfe800000,0x005ff984,
    0x41ffd400,0x00002ff9,0x213fe000,0x00001ffc,0x7fff47f3,0xf11effff,
    0xd1ff405f,0x7fdc3fff,0x22ff45ff,0x000ffff9,0x3fffa600,0x223745ff,
    0xdffd33fb,0x7fecc003,0xeed981ce,0x987bbae1,0x3bae1eed,0x403fe21e,
    0x3f6605fc,0x3ea01cef,0x987fb00f,0x01bdffec,0x2f7ffb26,0x980ff881,
    0xfd9301ff,0x5f1037bf,0x7ffffff4,0x80ff51ff,0x3fffa4fc,0x9bfffee6,
    0x3fe22ff8,0xec983fed,0xf301bdff,0x8ffd79ff,0x4ffff65f,0x03ffbbfd,
    0xffffffc8,0x17ffe43f,0x7e45ffff,0x3fffe2ff,0x6c07fe22,0xffff905f,
    0x3ea07fff,0xe87fd00f,0x07ffffff,0x3ffffffa,0x880ff987,0xfffd01ff,
    0x07a0ffff,0x833bf931,0x2fdc05fb,0xc88fffee,0x363fd45f,0xe84fc8ef,
    0x07ffffff,0x46f98bf9,0x7f39f74f,0x7ff443f6,0x35bff502,0x5443ffb5,
    0x3fea62fe,0x98bfaa22,0x6ff42ffa,0x542ffd40,0xfda9adff,0x85ffa81f,
    0x5e541ffb,0x503fea99,0x7fd53379,0xff707ff0,0x266f2a03,0x5c003fea,
    0x80ff305f,0x7ffd44fc,0xf717ee0f,0xfb8ffe4b,0xa99bca85,0x81ff83fe,
    0x15ea7c1a,0xa8bbe67f,0x04ff84ff,0x05fd0dfb,0x05fd05fd,0xfff985fd,
    0x85fffebd,0x0dfb04ff,0xd9bffff5,0x554c0bff,0x54c06fba,0xfc86fbaa,
    0xfffb88bf,0x5d554c01,0x2fdc006f,0x7f405ff0,0x2ff77d43,0x57fa8bf7,
    0x027ec7ff,0x0df75553,0x53e003ff,0x74c7f15e,0x49f910df,0xfffffff8,
    0x2fe87fff,0x2fe82fe8,0xfea82fe8,0x45ffffff,0xfffffff8,0xffa87fff,
    0x04ffffff,0xffffffd3,0x3fffa60d,0xfe886fff,0x1fffffff,0xfffffd30,
    0x5fb800df,0x7dc17f60,0x7cf7d40f,0xf98bf72f,0x3e24ffaf,0xfffe983f,
    0x4fc86fff,0xfaa7c198,0x7e444fce,0x7cc3f23f,0xffffffff,0x417f40ff,
    0x82fe82fe,0x36e602fe,0x7cc5fb9c,0xffffffff,0x477d40ff,0x3e602dcb,
    0x6fffefff,0xfeffff98,0xffb106ff,0x303ff9ff,0xfffdffff,0x05fb800d,
    0x6ccbbfe6,0x96fa83ff,0xd0bf71ff,0xffb8dfff,0x77fffcc0,0xffa86fff,
    0x747ffcbe,0x41bffae5,0x47fcefe9,0x99999bff,0x82fe8199,0x82fe82fe,
    0x7dc002fe,0x999bff85,0xfa819999,0x0f7f4006,0x3bfa1bea,0x4c037d41,
    0xfd03ff09,0x006fa83d,0x3e602fdc,0x05ffffff,0x33fe2df5,0xfff985fb,
    0xd07ffb32,0x06fa83df,0x7ffffff7,0x801886d8,0x7e41effb,0x0aea20af,
    0xffd993f6,0x3664fd82,0x7dc002ff,0x20affc85,0x6fa82ba8,0x711ff400,
    0x3fe81dff,0x003bfee2,0x7fd07fa8,0x0077fdc4,0xd100bf70,0x5407dfff,
    0x3f7fea6f,0xfffffb85,0x7fd05fff,0x8077fdc4,0xb80bffd8,0xc82c801f,
    0xfffe880f,0x40fffffe,0xfffffffb,0x7ffdc3ff,0x03ffffff,0x0befdca8,
    0x3fbfffa2,0x36a0ffff,0xa800bcff,0xffffffff,0x3ffea3ff,0x3fffffff,
    0xffeccc98,0xfffff504,0x007fffff,0x3ea017ee,0x1b889dff,0x3ff637d4,
    0x6e7fcc5f,0x2a03ffff,0xffffffff,0x0bf703ff,0x83662ee8,0x6407d84f,
    0x2dffffff,0xfbffff90,0xfff905ff,0x805fffbf,0x3ffffff8,0xffffffc8,
    0x3fffe22d,0xfd9004ff,0x5fffbdff,0xdefffec8,0xffe82fff,0x76405fff,
    0xfffdefff,0x6fe4cc02,0xfff88099,0x45ffffff,0x3fe21efa,0x262fe45f,
    0xfffd9000,0x205fffbd,0x7fcc04fa,0x3fe0ffee,0x004ffeee,0x22001353,
    0x2a20009a,0x99500009,0x54c01799,0x3332a009,0x4cc000bc,0x004cc000,
    0x03799930,0x40004cc0,0xffffffff,0x6f7fcc1f,0x2e0dfffd,0x3ee7ffff,
    0x0001c45f,0x44000998,0xcdb9801c,0x77776c0a,0x0000003e,0x00000000,
    0x00000000,0x00000000,0x00000000,0xfffffffb,0x1301101d,0x8bffff50,
    0x000005fe,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x80c40000,0xffffedb8,0x4c001304,0x0005c000,
    0x04c40066,0x20015c00,0x105cc001,0x10000100,0x01a88000,0x04400988,
    0x7fffdc00,0x0c002eff,0x4000c400,0x7edc002b,0x3ffea3ff,0x643cfdef,
    0x3201dfff,0xa800efff,0xffda804f,0xffd303ff,0x3f6005ff,0x3dfb1002,
    0x77fffb00,0x0bfd703f,0x017f6a00,0x540ffd00,0x4c1efffe,0x2002effe,
    0xfffffffb,0x3dfb1004,0x013fea00,0x36007f90,0xf35fffff,0x1f79f17f,
    0xffffffc8,0xfffffd80,0x405fb806,0xfffffffa,0xfffffe81,0x0bfa201f,
    0x7f5ffcc0,0xffc8e403,0x00bd7703,0x0017aea0,0x3ea07b50,0x21ffffff,
    0x006d88b9,0x26667bee,0xd7ff3001,0xbdfd807f,0x3ee000ef,0x85ffec05,
    0xbcf9bee0,0x4c5ffc0f,0x9ffc45fd,0x7dc04fea,0x88efec05,0x8f7d45fc,
    0x3a604fd9,0xb8376001,0xe8004006,0x02ec0005,0x37fe0000,0x730dfb31,
    0x2fdc00dd,0x5c1bb000,0xe98ba606,0x80754003,0x3f201ffd,0xa83ef3e5,
    0x717fc46f,0x406fb8bf,0x880805fb,0x30bfa0ff,0x000001ff,0xffec9800,
    0x02f401bd,0x405d8026,0xdf300802,0xfd81ff30,0xfb82883f,0x0001aa9e,
    0x00000000,0xb805ff10,0x1f79f0ff,0x1fec27e4,0x0ff985fb,0x3bf6aaa2,
    0xf5001aaa,0x7cc3fe8f,0xefdb880f,0x7edc401c,0x3ffa01ce,0x7407ffff,
    0x40bfb105,0x05fd305d,0x81a81fcc,0x1fb00ff9,0x3ee07fd4,0x00dfffff,
    0x1ceffd98,0x2e1eed98,0xb7101eee,0xdf7039df,0xfb039d91,0x41f79f7f,
    0xaffc46fb,0x2fe80ff8,0x3ffffffe,0x9501ffff,0xffb89ffb,0x986feb9b,
    0x2fffffff,0xffffff30,0x26f2a05f,0xd303fea9,0x0dffa83b,0xfc81dd10,
    0x02fe404f,0x1199bf60,0x5ffb11f7,0xfddfff50,0xfffc80bf,0x7e43ffff,
    0x3fffe2ff,0xfffff982,0x7f7e42ff,0xfc83ffff,0x260fbcff,0xdffb12ff,
    0x1fec1fe2,0xdffdddd7,0x7ffc09dd,0xffffb07f,0xfff881ff,0x42fffb9c,
    0xfb9cfff8,0x2aa602ff,0xffe86fba,0xbffd8dff,0xffffe81a,0x09aefeac,
    0x005ffe98,0xffd87ff6,0x9dffbbef,0x2a0bb881,0xbff502ff,0x43ffb535,
    0x2a62fea8,0x7ffc42ff,0x22fffb9c,0xfebefffc,0xf79f301f,0xffeffd81,
    0x20ff16ff,0x17ee03fd,0x4ffeda80,0x7fffff44,0xc83fe41f,0xc83fe46f,
    0xfffe986f,0x33306fff,0xff5bff73,0x999985ff,0x3ff8bffd,0x005fffd4,
    0x9817ff44,0xf8affe98,0x0ffa001f,0x6fd827fc,0x2fe82fe8,0x6fc83fe4,
    0xbfd17fee,0x207de7c0,0xfdffffd8,0xfd01ff15,0x002fdc05,0x3f61ffb8,
    0x47fea9bf,0x1ff103fe,0xff881ff4,0x3bfffe60,0x74406fff,0x36cbb2ff,
    0xfb0dffa8,0x004fe87f,0x700bffa2,0x3ffa19ff,0x217f2001,0xfffffff8,
    0x2fe87fff,0x1ff42fe8,0xff50ff88,0x3e06fb81,0x55300fbc,0x17f47ff3,
    0xfb803fe2,0x93f60005,0x0ffc43ff,0x0ffc03ff,0x0ffc03ff,0x6fa83dfd,
    0x88067fc0,0x23ff986e,0x3e23fbfa,0x7cc2b80f,0x77dc01ff,0x007efee1,
    0xff983fe8,0xffffffff,0x7417f40f,0xf00ffc2f,0x707fe23f,0x7de7c0df,
    0x21ffd800,0x02fdc5fc,0xd80017ee,0xd01ff14f,0xb82fec5f,0xb82fec7f,
    0x711ff47f,0x0d401dff,0x7101dd30,0x1fc6fc41,0x4df10ff6,0x8800effa,
    0x0fce7cc3,0x5ff707d3,0x2666ffe0,0xfe819999,0x7ec2fe82,0xfd8ff705,
    0x40bfd30d,0x88c0fbcf,0x7d42ffeb,0x807fd52f,0x0b2202e8,0x7f45ff73,
    0x41ff710d,0xf711cffa,0x1cffa8bf,0xfa8bff71,0xffffffff,0xdfb8003f,
    0x3bbf2000,0x3bfea0ef,0xff77ffec,0x0533333f,0x9bfbbf60,0xfffffffa,
    0x2bff205f,0x360aea20,0x0bff664f,0x2e239ff5,0x7ffc45ff,0x3e00ffff,
    0x3fee0fbc,0xf903ffff,0x881dffff,0x99999999,0x3fffea09,0x7d45ffff,
    0x84ffffff,0xfffffffb,0xfffff705,0x3fb20bff,0x2fffdeff,0x4cefec00,
    0xf9753001,0xfffffb0b,0x3ffffa7d,0x800fffff,0x544fdbaa,0x03fffffd,
    0x7f7fff44,0x7dc0ffff,0xffffffff,0x7ffffdc3,0xffb505ff,0xfbb503df,
    0x3e679fbb,0x6c01dfff,0xff80efff,0xffffffff,0x3ffff21f,0xffd504ff,
    0x7f5407ff,0x75404eff,0x9804efff,0xf8800009,0x4007ffff,0xb980fffa,
    0x7fff42bc,0x01ffffff,0x881bfee0,0x7fe40009,0x902dffff,0xfffbffff,
    0xdfffd505,0x40131009,0xffddfffb,0x4c000cc5,0x3ffffa00,0x80efffff,
    0x31000999,0x004c4001,0x00002620,0x00000000,0x00000000,0x00000000,
    0x22001353,0x4c40009a,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x96f6c002,
    0x00006028,0x4c0ae000,0x3bae1eed,0x0135301e,0x06440000,0x2641b500,
    0x01d99320,0x10007722,0x00000135,0x104c836a,0x1a988017,0x5c400000,
    0x164c02de,0x802fedcc,0x87fffffc,0x3000dfe8,0x0037dfb7,0x7fe40bf6,
    0x3ffff12f,0x7ffffe44,0x77edcc04,0x0f7c401b,0xff12fd80,0x9f73fc40,
    0x13f7be20,0x3ffff6a0,0xffd906ed,0x3f60599f,0x3f20ff12,0xffffd305,
    0x7fd40ddd,0x41ffffff,0x06fffff8,0xffe83ffa,0xfd7005ff,0xefa81fff,
    0x7d402feb,0x04fdbabd,0xa880bfa2,0x3fea62fe,0x3fbfff61,0x7bf504ff,
    0x8809fb75,0x428801fe,0x510cc019,0x07a97201,0x7ff7ffd4,0x3fa60fff,
    0x06ffffff,0x93019851,0xdffff503,0x2a01ffff,0xffffffff,0x75577dc2,
    0xf8df902f,0xf005feef,0xe89fd15b,0xfa81b224,0x2609f302,0x05fd000e,
    0x067ec3fd,0x2fa81ff7,0x99009f30,0x00000000,0x203f126c,0x3620dff9,
    0x33ffa0ff,0x007feb99,0x67fcc000,0x2007fdc0,0xd01efb99,0x102fdc5f,
    0x017ee110,0x0ff98988,0x32be6000,0x7f31ceee,0x05fd0000,0x40fdc3fd,
    0x44be62fe,0x3f99defc,0xffb30000,0xddb3039d,0x20f775c3,0x206c89fa,
    0x1ff105fd,0x3ea03fea,0xdffec986,0x3f60601b,0xb801fa05,0x44bfa05f,
    0x2e0005fe,0xfffc805f,0x3663feef,0x56e04eee,0x2e6cacf8,0x27776cc5,
    0x3fa0bfa0,0x21ff8801,0x3ee73e5b,0xeed98b73,0x7ffe404e,0x7e43ffff,
    0x3fffe2ff,0x89effd82,0x807fe2da,0xb817f23b,0xfffffe81,0x447f507f,
    0x002201ff,0x3fa05fb8,0x002fffda,0xfd017ee0,0x9ffffdff,0x02ffffe4,
    0x1f88f47b,0xffffc8f3,0x7417f405,0x3fee201f,0x5c6a9ec6,0xfffc8f31,
    0x37fea05f,0x21ffda9a,0x2a62fea8,0xb75102ff,0x1fe23bff,0x0009fb00,
    0xfd533795,0x7ccbf907,0x7dc00007,0x3fabfa05,0x013305ff,0xff702fdc,
    0x97ff2217,0x205fdaa8,0x17fbba1f,0x7ed5443f,0xb327f405,0x3fea05ff,
    0x3d8fc1ef,0xb5510fc0,0x827fc0bf,0x82fe86fd,0x7edc42fe,0x06f982df,
    0x00037dc0,0x0df75553,0x437ccdfb,0x00819998,0x97f40bf7,0x7d45ffda,
    0x817ee01f,0x6ff886fe,0x1740bf70,0x7cc3f99d,0xe80bf700,0xffffffff,
    0x03ffb83f,0xf981325d,0x220bf700,0xffffffff,0x82fe87ff,0x33fe22fe,
    0x7cc1ddaa,0x67fcc007,0x260fe440,0x6ffffffe,0x1fe67fe8,0x4ffffff9,
    0x05fb81fc,0x3ff50bfa,0x3ee027e4,0x640ffe05,0x40bf705f,0x87d47a4c,
    0x017ee06b,0xfbfffffd,0x07f305ff,0x2a1f8a64,0x2fdc0d72,0xffffff98,
    0x740fffff,0x0c2fe82f,0xf85f99f5,0x7fdc002f,0x1ffffeff,0x3fbfffe6,
    0x27ff86ff,0x3faa1ff8,0x0bfa5fff,0x2fe817ee,0x03fe3fe8,0x7f40bf70,
    0x2e09ff05,0x367e605f,0x9d5f92ff,0x3a02fdc0,0x00009abf,0x77dc7e60,
    0x204e89fe,0x2ffe05fb,0x19999999,0x2fe82fe8,0x6c6b8fa0,0x2e0e206f,
    0x2efffffe,0x3ea0f7f4,0x3a0fff86,0xe83fe04f,0x204fb82f,0x3f228afe,
    0xf7005f34,0x85ffdc0b,0xf701ffc8,0x199ec80b,0xf700774c,0x002fe80b,
    0x983b2000,0x5c01dd11,0x2bff205f,0x360aea20,0x0bff664f,0xf51ea2f8,
    0x3ea217df,0x13bf302f,0xfb88ffa0,0x3ffe20ef,0x882ffee1,0x37fa0ffa,
    0x440bfea1,0xfd2fdafe,0x93301725,0xfb0133df,0x89fffdff,0x99dfc998,
    0x2637f900,0x99880eeb,0xe8099dfc,0x5eb8002f,0x731bfc80,0x933101dd,
    0xe88133bf,0xffffefff,0x7fffdc0f,0x903fffff,0xf509d33d,0xdfffffff,
    0x5017fc01,0xffffffff,0x3ffe27ff,0x7ffffec1,0x3f60ffff,0x04ffffff,
    0xffbffff9,0xf0044fff,0xffffffff,0xfffff703,0xfffffb87,0xb704ffff,
    0x7017dfff,0xffffffff,0x001fd89f,0xb800ffd8,0x80befffd,0xfffffffb,
    0xfffc84ff,0xf902dfff,0x5fffbfff,0x037ff620,0x77fff6cc,0x13f7aa04,
    0xbdfffd90,0x3ff45fff,0xfffffea8,0xfffea81c,0x3ffea04e,0x02dffe9e,
    0x3fffff60,0x2a601eff,0xffffd501,0x3007ffff,0xfffea801,0x4c3fffff,
    0x00260003,0xfd500260,0x7fffffff,0x8004d4c0,0x880009a8,0x00262000,
    0x40037b22,0x0b880099,0x10019980,0x08800013,0x00007b30,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x20ffe800,0xfffffffa,0x417301ff,0x40351000,0x2e0ceed8,0x00882dee,
    0x00135300,0x906d4000,0x01bff609,0x2fff4400,0x00085710,0x00000000,
    0x4c009800,0x7541320d,0x3f605fff,0x1bf2006f,0xfffffff5,0xfffb03ff,
    0x75403f77,0xfa83ffff,0xfff11fff,0x800df0bf,0xfdfffffa,0x2bffff70,
    0xb05ffffb,0x221fe25f,0x00006fff,0x220bfff3,0x85daefff,0x361efff9,
    0x3fea3fff,0x80ceffff,0x5ffffffa,0xdfffc880,0x7fc7f901,0x5ffffc80,
    0x00dfff10,0x99df9808,0xc80ffa99,0x5c07ff91,0x5fffffff,0x7cc2ffb8,
    0x03fc40df,0xffdfff30,0x3ffee5ff,0xdffff96f,0x40330a20,0x200006fb,
    0x19305fc8,0xf503dfd3,0x7ffc5fff,0x3fffee4f,0x5c1fffff,0x06ffffff,
    0x6ffeffb8,0x20198510,0x5c05fc98,0x1500006f,0x0200df70,0x265dff30,
    0x4fe83ffd,0x7c407fd4,0x837f2007,0x3bea3ffb,0x002fe440,0x001bea00,
    0x400bf700,0x237f4400,0xffa81ffb,0x0ffeb999,0x0d567f44,0x6d897f40,
    0x5fb80000,0x00037d40,0x440ffa00,0xd01cefdb,0x03fea0bf,0x27f41ff5,
    0x3bbffb22,0x7fc41dee,0x3ea2fd80,0x4409f706,0x201cefdb,0xeffdaefa,
    0x77fed403,0xeeb85fcb,0x203effcb,0x7ff13ff9,0x3e21be60,0xffffe84f,
    0x7f882fff,0x3bbb6600,0x80bf7004,0xbddb36fa,0xff880003,0xfffff980,
    0x17fc42ff,0x9fd07fb0,0xff303fea,0x7fffffff,0x87109ff0,0x09f706fa,
    0x3fffffe6,0xffff502f,0x901dffff,0xffffffff,0xfffff88b,0x2e03ffff,
    0x205fe9ff,0x0ff506f9,0xffb99bfd,0x003ff03f,0x017ffff2,0x3ea02fdc,
    0x89ffff96,0xdf7001b8,0x739fff10,0x3fd45fff,0x3ea13ee0,0x7304fe8f,
    0x055557ff,0x06f7ffee,0x4fb837d4,0xb9cfff88,0xffa82fff,0x5ffd9aef,
    0x64d77fd4,0xfe985fff,0x06fc99df,0x807ffff4,0x23deffec,0x17f40ff8,
    0xff971ff4,0x5440179b,0xf7005fda,0xe8efa80b,0x7f40acff,0x83fe800f,
    0x4df907fc,0x2fd405fb,0x00ffefe8,0xf7001fe2,0xa83fffff,0x909f706f,
    0x21bf20ff,0xffa84ffa,0x3e613fe1,0xf09fd05f,0x3fea603f,0x7fcc09cf,
    0x3e0fffff,0x6417f41f,0xfffff34f,0x3ee005ff,0x80bf7005,0x02fffffa,
    0xf3003ff6,0x207fd01f,0x0ff50ff8,0xff504fb8,0x07f8809f,0xfffd7300,
    0xfb837d43,0xf103fe84,0x01ffa81f,0x07fe27fd,0x2fe82ff4,0xcc881fe8,
    0xa81ccefd,0x221bcffc,0x217f40ff,0x372a3ff8,0x2e002cff,0x0bf7005f,
    0x01ffffa8,0x6fb80098,0x7fc03ff0,0x7405ff11,0x03ffa03f,0x2200ff10,
    0x549fb102,0xf09f906f,0x20ffc03f,0x53f207fa,0x17f207f9,0x0ff417f4,
    0x26017ee0,0xd0ff306f,0xdffd99bf,0x000ff501,0x3ee00bf7,0x7fffd405,
    0xfd00000e,0x5c17f607,0xb82ff47f,0x13fa00ff,0x2003fe20,0x4df504fb,
    0x3fd81ff8,0xff705fd8,0xf105ff50,0x40bfe25f,0x05fd05ff,0xfff103fd,
    0x2605ffff,0xd0bfb06f,0x1bdfffff,0x0221bf20,0xf7005fb8,0xf9efa80b,
    0x004981ef,0x3ea01ff3,0xbff711cf,0xb32eff98,0x7fd407ff,0x4c5ff000,
    0x2fff23db,0xe87fd510,0x1ff912ef,0x2239ff50,0xffb85ffb,0x1ffb30ae,
    0xd98577ec,0x7f440dff,0x2202ff83,0x7d401efc,0xffeb999f,0x1567f441,
    0x4ce7fd40,0x4cc47e99,0x44099dfc,0x099dfc99,0xffd16fb8,0x0077c415,
    0xff701bee,0x20bfffff,0xfffffffb,0x7f665c45,0xfff9002e,0x7e4dffff,
    0x7fffffff,0xffffff98,0x3ffee03f,0x7c45ffff,0xffffffff,0x7ffc42ff,
    0xffffffff,0x2bffff32,0xe83ffff8,0x80ffffff,0xfffffffb,0x7ffdc2ff,
    0x3f206fff,0xffffffff,0x3ffffee7,0xff74ffff,0x9fffffff,0xfc9bffe2,
    0x3fa23fff,0x2007ea01,0x04efffea,0x17ffff4c,0x7fffffd4,0xffc8800f,
    0x3a60bfff,0x0dffffec,0x5ffffd10,0xdfffd500,0x37bffa09,0x101effff,
    0xfbdffffb,0x3ffa63df,0x0bfffa4f,0x3bfffff2,0xfffffa80,0xffa80cdf,
    0x2e04ffff,0xffffffff,0x3fffaa2e,0xd53fffff,0xffffffff,0xf737ff47,
    0x07905fff,0x00988000,0x71004c40,0x00599999,0x26001330,0x13100099,
    0x00131000,0x20013310,0x00001a98,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x4c000000,0xffd502ff,0x2aae6005,0x3aaaaaaa,
    0x33bbf2a0,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x3ffffff6,0xf981ffff,0x5fff902f,0x14002600,0xffffffd8,
    0xffffff13,0x2a5fffff,0xcfffffff,0xfffffa81,0xffa80cef,0xffffffff,
    0x3fffff25,0xf37fffff,0x7ff41dff,0x3ffffa3f,0x3ffffd12,0xfbafffec,
    0x3ffa0eff,0x51efffff,0xd15fffff,0x7f447fff,0x201fffff,0xfffffffe,
    0x87fffa1f,0x005ffffb,0xffffdffd,0x55103fff,0x017f4401,0x30500098,
    0x195537ff,0x3fffffe2,0xf72fffff,0xffffffff,0xfffffb8b,0x7dc1ffff,
    0xffffffff,0x3ffff65f,0x37ffffff,0x3e21ffff,0xfff14fff,0x3ffe25ff,
    0x3fffa1ff,0x43ffff76,0xfffffffe,0xfffff71f,0x49ffff35,0xfffffff8,
    0x3ffffa01,0x3fa1ffff,0x3ffee6ff,0x2fee006f,0x1ff99aff,0x017f4000,
    0x90500098,0x9ff8809f,0xfe99dfc9,0x266ffa22,0x7d40ffb9,0xffeb999e,
    0x4cdff440,0x7cc5fc99,0xfa99999f,0x3f22ff47,0x04ffc40f,0x7f41ff4c,
    0x440ffc42,0x8819dfc9,0x3bfea3fe,0x03bf9300,0xf3335fd0,0x7fff70df,
    0x2002fe44,0x3a1ff9fc,0x3bbb661f,0x7ee7f404,0x000982ef,0x77fff5c5,
    0x3fe20cee,0x17f4bf70,0x13f20bfa,0x9ff10df5,0xfa845fd0,0x2107fc44,
    0x9ffcc6f9,0x1ff03ff9,0x81fe97ae,0x01ff82fe,0x5fd017ee,0x7003bfee,
    0x87fa00bf,0xffa80ffd,0x017ee0ff,0x367fedf0,0x7ffe47ca,0x7fff405f,
    0x04c3ffff,0x3fffe280,0x7c2fffff,0x1fe97ee7,0x3fe217f4,0xfa837d43,
    0x3f72fe87,0x0ff88391,0x2e0b21fb,0x205fe8ff,0x23fff1ff,0x82fe80ff,
    0x17ee01ff,0xbff95fd0,0x4017ee00,0x05ff70fd,0xb97fbbea,0x53e6005f,
    0x5106feff,0xfe80bfb5,0x47fc99df,0x54c50009,0x81aaadfd,0x4a97ee3b,
    0xfeccdfe8,0x837d40ff,0x6ff40ff8,0x3e203fec,0x801ffccf,0x200ffffe,
    0xcfff9afe,0xdfe80ff8,0x01ffcccc,0xdfd017ee,0x7dc00bff,0x7fcc2005,
    0x3e7bea04,0x400bf72f,0xdffff2fb,0xe80bf700,0x261ff84f,0x9f905000,
    0x00bf7000,0xfffffffd,0x206fa81d,0x7fff40ff,0x3fe203ff,0x8801ffff,
    0x7ec02fff,0xf9efffcb,0xfffffd07,0x7dc03fff,0x7ffff405,0x0bf7002f,
    0x405fe880,0x71ff96fa,0x77f400bf,0x806fdffe,0x17f405fb,0x00130ffc,
    0x0013f20a,0x3fa017ee,0xeffecccd,0x7c41bea0,0x766ff40f,0x33fe203f,
    0xf9001ffc,0xff9f900d,0x20df9ff7,0xfccccdfe,0x017ee01f,0x7ffb5ffd,
    0x910bf700,0x0c1ffb03,0xcff8b7d4,0xff1005fb,0x2593ffff,0xd017ee00,
    0x4c3ff05f,0x9f905000,0x00bf7000,0x5ff305fd,0x7fa837d4,0x23f72fe8,
    0xd87fc44b,0x017ee007,0x363fffee,0x5fd05fff,0x7dc03ff0,0xf917f405,
    0x85fb801f,0x0ffe44fb,0x26fa87f5,0x005fdffa,0x30ffc7f5,0x017ee07f,
    0x43ff05fd,0xf9050009,0x0bf70009,0x3f605fd0,0x7ec1bea4,0xf822fe85,
    0x083fe20f,0x2017ee00,0xff75fffa,0x20bfa09f,0x17ee01ff,0x4fe85fd0,
    0x7dc2fdc0,0xf70ffea4,0x7ec6fa89,0xfd8805ff,0x9335ff32,0x7e4cc4bf,
    0x7f44099d,0x1317fc43,0xfd988a00,0x4c40199d,0xd1009dfc,0xf733337f,
    0x4cf7d45f,0x440ffeb9,0x99999bfe,0x27fe61ff,0xf9310009,0x7fcc013b,
    0x07fff12f,0xff887fd1,0x9dfc9982,0x05ff4409,0x32603ff5,0xfc9999df,
    0x333dff14,0xefa89f93,0x017ffe21,0xffdffff3,0x2bffffff,0xfffffffb,
    0xffff34ff,0x53fffeab,0x3e650009,0xffffffff,0xfffff980,0x7ffdc3ff,
    0xefffffff,0xffffff70,0xffb85fff,0xffffffff,0xfffffb1f,0xfff9809f,
    0xf103ffff,0x17fec1ff,0x65ffffe6,0x3fe4ffff,0x1fffffff,0x45fffff7,
    0xff10fffe,0xffffffff,0x3fffea9f,0x2e4fffff,0x3ee7ffff,0x7ff4405f,
    0xffffffcf,0xfffd55ff,0x267fffff,0xfd34fffe,0x2aae67ff,0x3aaaaaaa,
    0xffffffd1,0x3ffa60bf,0x7d42efff,0xefffffff,0x3fffea0c,0xfa80cdff,
    0xffffffff,0xffff91ff,0xfe8807ff,0x202fffff,0x0ffd45ff,0x5d7fffa6,
    0x3f63ffff,0x0effffff,0x43dffff5,0x3fa0effa,0xffffffff,0xfffff54f,
    0x7d49ffff,0x2ff45fff,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000018,0x7fd40000,0x00015006,0x0b803d50,0x000014c0,0x00000a60,
    0x00000000,0x7fcc0000,0x3fffa1ef,0x3bfffe63,0x4fffffa0,0xfffffffa,
    0xffff502e,0x2205dfff,0x101ffffc,0x01fffffd,0xf906ffe8,0x7ff403ff,
    0x004fa806,0xf79dfd93,0x027d407f,0x0000bbfe,0x883ffb10,0x84cdffdb,
    0x1bdffec9,0x67fff640,0xeffda82c,0xc81efb89,0xefd98eee,0x43ffff53,
    0x3e64ffff,0x3fa1ffff,0xfff73fff,0x09ffffff,0xfffffff7,0xfff709ff,
    0x3fe603ff,0x2203ffff,0x7c42ffff,0xff702fff,0x039100df,0xffffff50,
    0x5fb80bff,0x0efffdc0,0x3ff22000,0x7fffcc5f,0x7f40ffff,0x307fffff,
    0xfffffffd,0xffffff0d,0x4c3fffff,0xfffdffff,0x8dfd12ff,0xbfd01ffc,
    0xd103fee0,0xff95337f,0x337fd101,0xfe85ff95,0xfb300372,0xff880dff,
    0x17ffdc6f,0x06feff88,0x3bfea000,0x04fffb9b,0x6c402fdc,0x8000cfff,
    0xd81efffb,0xffc99adf,0x54cde540,0xcffe83fe,0xb87feb99,0x9dffe9ac,
    0x7fd4c5fd,0x21eb9dff,0x5ff75ff9,0xfd83fd40,0xfb05fd04,0x360bfa07,
    0x007fe24f,0x3ff7ff10,0x21ffff80,0xf902fffe,0x0000df5d,0xfff32fec,
    0x2fdc01ff,0x7fffd300,0x3bffaa00,0x82bbf602,0x2aaa603a,0x07fd46fb,
    0xa98837d4,0x3ff31ffc,0x5007fff0,0x009ffbff,0x1ff885ff,0x7fb05fd0,
    0x3f60bfa0,0x2002fec4,0x809fb7fb,0xff55feff,0x5ff305fd,0x55530df5,
    0x83555555,0x1dff31ff,0x555445ff,0x01aaaefd,0x02fffea8,0x007fffd3,
    0x7bfffff3,0x3ffffa60,0x02fe46ff,0xfffd8837,0xffffffff,0x2001ff82,
    0x9005fffb,0x206fc8df,0xfeb99bfe,0xa85fd00f,0x9ffec2ff,0x53fa0098,
    0x3fe00ff9,0xecfe8ffa,0xf55fe82f,0xffffff0d,0x223fffff,0x21dff37f,
    0x3fffe2fe,0x1fffffff,0x1dfff700,0x006fffec,0xffffd930,0xeffff98d,
    0x27ec6fff,0xdffff100,0xffffffff,0x4001ff07,0x1001fff8,0x017fc3ff,
    0xfffffffd,0x6e6ff403,0x7fec5fff,0x306fd8ff,0x01ff41ff,0xffdfd1ff,
    0xffa85fd1,0xdd90df50,0xbddddddd,0x77fe7ec1,0x75c1ff50,0xeeeffeee,
    0xfffb800d,0x7ffec41e,0x4c1c800c,0x3bfa2ffa,0x3ee37d41,0x87fea006,
    0x99999ffb,0x2000ff80,0x000efffd,0x01fea9fb,0x7ffffffd,0xfffffe80,
    0x33fe60cf,0x905ffefe,0xdffdddff,0x7fd47fc0,0x7c45fd5f,0x0efcaaef,
    0xfff50000,0x0bff711d,0x54005fb8,0x4c02effe,0x2603fffe,0x1ff4c2ff,
    0x7fdc47fd,0x033fe60e,0x3fe63f91,0x227ffd31,0x3fe620ba,0x3f20099a,
    0x5006feaf,0x809fd1ff,0x5ffb12fe,0x55e6ff40,0xff16fb80,0x3ffe20df,
    0x01ffffff,0x47ffa1ff,0x3ffea2fe,0x00ffffff,0xffff8800,0x400dffff,
    0xfd3005fb,0xea8007ff,0xffa82fff,0x0ffffeff,0x3fffffea,0x3ee3ffff,
    0xffffefff,0x3fffff61,0x2fffffff,0xfffffff9,0x27ff509f,0xfd005ff9,
    0xfe801ffb,0xe80ffec2,0x0ef9802f,0x3ee09ff9,0xfdaaaaae,0x3aa1ff04,
    0xffa8bfa5,0x05ffffff,0x7ff44018,0x004efffe,0xfd880bf7,0x20000cff,
    0x221efffb,0xdfffffee,0xefffec81,0x75c2fffd,0x82efffff,0xfdedfffd,
    0xff70cfff,0x87ffffff,0x7fd45ff9,0x5fffb803,0x205ff440,0x7f440efe,
    0x7ff4019b,0x446fffff,0xffb80cfe,0x4057fc41,0x5c403fe9,0x04f9806f,
    0x04c43fea,0xf017ee00,0x00003bff,0x207fff22,0x98009a98,0x54cc0009,
    0x40544009,0xfc800009,0xfff33fff,0xfff880df,0x3fffee02,0x4fffe23f,
    0x6ffffffb,0x3bfff660,0x3ffea5ff,0x3fffe1ff,0xfffff33f,0x27ffff43,
    0x0fffffb8,0xb880b620,0x2e880000,0x0000ee40,0x000ec880,0x00000000,
    0xb8000000,0xfd12efff,0xdf900bff,0xeffffa80,0xfa97fd42,0x004fffff,
    0x7ff4c033,0x3fff60ef,0xdfffd12f,0x17fffec1,0x05ffffa8,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0xd70f76cc,0x000003dd,0x4406e000,0x0b7b6e0b,0x40c9ddb3,0x3bb6a008,
    0x9dddb32d,0x015c064c,0x808005d1,0x996f6dc0,0x776c4eed,0x41eeeeee,
    0x30044018,0x2aa60001,0xaaaaaaaa,0x2000600a,0x01ceffd9,0x0e77edc4,
    0xff17ffe4,0xbeec85ff,0x1dfeacff,0xffcbeeb8,0xdbffa83e,0x3e4febde,
    0x7fe46fff,0x641db0ff,0xffffd01f,0x3ffffeeb,0x7ec1df91,0x8013ee07,
    0xff07dc7c,0x3ffeebff,0x3ffffa1f,0x3f21ffff,0x3fb624ff,0x44fffc82,
    0x7cc1dfc9,0xffffffff,0x7f502fff,0x7fffe400,0xff303fff,0x885fffff,
    0x3ea62fea,0x3fffe62f,0x6fffffff,0x7fffffc4,0xffe83fff,0x21ffffff,
    0xbc98dfe8,0x3a21ffb8,0x220bfa1f,0x3ee0cffb,0x3bfe61cf,0x8442ffc8,
    0xfd8025fb,0xfb30ff22,0x0bbfea9f,0xffb559fd,0x1fa97d4b,0x5905f791,
    0x77fc4bea,0x3bb621ff,0xfeeeeeee,0x2fff882f,0x9adffa80,0x7c41ffda,
    0xfffb9cff,0xfe82fe82,0x64f7fcc2,0x41fe9cff,0xc99dffe9,0xadff986f,
    0x5fc83ffc,0x0df51ffb,0x3fa25fd1,0xfb8bfb03,0xfffff307,0xfddff885,
    0x7441ffde,0x407fb12f,0x0effdffc,0xbff50fc8,0x220fd410,0x3f95102f,
    0x02fc4bee,0x7442fe80,0x7c01ffff,0xc8dfb04f,0xd0df907f,0xf05fd05f,
    0xfd9bea3f,0xff84fe83,0x3f237dc1,0xff8ffa85,0xd104fcaf,0x213fa27f,
    0x0ffe1ff9,0xd03fff98,0xdfffffff,0xe89ffcc1,0xfffb803f,0x0bff5005,
    0x2f884fb8,0x361dff50,0x4001fa0f,0x4ffec2fe,0xff100efe,0xffffffff,
    0xf103fe8f,0xe82fe81f,0xf51ff82f,0x7f41fecd,0x7e41fe82,0x7c437d44,
    0xfeefffdf,0x647ff602,0x75fd81ff,0xfffd80ff,0xfff9300e,0x74dfd03b,
    0xffd800ff,0x7fd400ef,0x40ff6205,0xa7cc02f8,0x04fa8cfa,0x7e45fd00,
    0x20dff11f,0xfffffff9,0x3fe0ffff,0xfd07fe01,0xff05fd05,0x3fd9bea3,
    0x1fe82fe8,0x17f637d4,0x7fdffff4,0x1bfb00ff,0x7cc03bf2,0x3603fe9f,
    0x00effcff,0x101ffffb,0x3bf21dfb,0xf9ffb100,0x3fea03df,0xbff98a25,
    0x05fd4419,0xe8fe6131,0x0000ffff,0x0bfe25fd,0x3fe05ff3,0x9999999b,
    0xfb82fec1,0x3664fd87,0x51ff82ff,0x741fecdf,0x4c1fe82f,0x3ffdbeff,
    0xfb1fff90,0xc93f60ff,0xfffd804f,0x25ff900f,0xffb86ff9,0x3ee04fe9,
    0x881df70e,0xfff12ffe,0x99effa85,0xfffb2fc9,0x3ffe67ff,0xffff53ff,
    0x00bda81b,0x2b83ae00,0x3f201930,0x0aea20af,0x2e239ff5,0xfffb85ff,
    0x23ffffff,0x4df51ff8,0x1ff443fd,0xffd117fc,0x03ffffff,0x3feabff5,
    0x3ee2fc85,0x7fff3002,0x3e617e40,0xdf33fc85,0x3a65f980,0x57fffea6,
    0xf14ffffb,0xffffffff,0x26666627,0x20266620,0x00000018,0xfe880000,
    0xfffffeff,0x7ffffdc0,0x3ff205ff,0x32fffdff,0xff55ffff,0x269ffb1f,
    0xff15ffff,0x2bfea7ff,0x84feadec,0x0ffe1ff8,0x80033026,0x00400ffd,
    0x200220c0,0xfd31c438,0x3ffaa7ff,0xfffff13f,0x0007ffff,0x00000000,
    0xfc800000,0x02dfffff,0x09dfffd5,0x44013510,0xffa9effe,0x3a67ffb5,
    0x3ffa4fff,0x5c402a2f,0x00000000,0x00000000,0x00000000,0xccb98000,
    0xcccccccc,0x3bbaa2cc,0xeeeeeeee,0x000004ee,0x09a98000,0x00026200,
    0x00000000,0x77500000,0x57777777,0x55403101,0x06015511,0x0ae0bff0,
    0x06e20640,0xda826154,0x99998f20,0xfb099999,0xffffffff,0x361fffff,
    0xffffffff,0x00ffffff,0x00000000,0x00000000,0x00000000,0x3ffea000,
    0xffffffff,0x13fffe25,0x07fd53fe,0x3033fff2,0xfffa83ff,0x2f85b10d,
    0x3f207ff4,0x2fd9ff62,0x7fffcff1,0x931fffff,0x99999999,0x4c459999,
    0xaaaaaaaa,0x0000aaaa,0x00000000,0x00000000,0x00000000,0x6eeee440,
    0x41dddddd,0x741fa889,0xfc8ff32f,0x7e44ea8a,0x7ff7fc45,0x7fc5fe9e,
    0x7443ff61,0x887ff42f,0xbbbb0cc2,0x001bbbbb,0x00000000,0x00000000,
    0x00000000,0x00000000,0x88000000,0x6c1fffec,0x3f8df11f,0x83fd07cc,
    0xfffd34fb,0x0ff7aa3f,0x440f4c13,0x0000001b,0x00000000,0x00000000,
    0x00000000,0x00000000,0x2aa60000,0x1aaaaaaa,0x0fd4df64,0x6c5f83f2,
    0x4f887d44,0x1dfd8830,0x00037b22,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0xfffa8000,0xffffffff,0x3faeb7a4,0x89d1ee0d,
    0x24fcbdf9,0x000000fa,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x4c000000,0xeeeeeeed,0x3b262eee,0x0e21ddce,0x59d93035,
    0x00000188,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,
};

static signed short stb__courier_bold_25_latin1_x[224]={ 0,4,2,1,1,1,2,5,5,2,1,0,4,2,
4,1,1,1,1,1,1,1,2,1,1,2,4,4,-1,0,0,2,1,-1,0,0,0,0,1,0,0,1,1,0,
0,-1,-1,0,1,0,0,1,0,0,-1,-1,0,0,1,5,1,2,1,-1,4,0,-1,1,0,0,1,0,0,1,
1,0,1,-1,0,0,-1,0,1,1,1,0,0,-1,0,0,1,3,5,3,1,2,2,2,2,2,2,2,2,2,
2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,4,1,0,1,0,
5,1,3,-1,2,0,-1,2,-1,-1,3,0,3,3,4,0,1,4,4,3,2,1,0,-2,0,1,-1,-1,-1,-1,
-1,-1,-1,0,0,0,0,0,1,1,1,1,-1,-1,0,0,0,0,0,2,0,0,0,0,0,0,1,0,0,0,
0,0,0,0,-1,1,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,0,
 };
static signed short stb__courier_bold_25_latin1_y[224]={ 18,3,4,2,2,4,5,4,3,3,4,5,15,10,
15,2,3,3,3,3,4,4,3,4,3,3,8,8,5,8,5,4,3,4,4,4,4,4,4,4,4,4,4,4,
4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,2,4,3,22,3,7,4,7,4,7,4,7,4,4,
4,4,4,7,7,7,7,7,7,7,4,8,8,8,8,8,8,4,4,4,9,4,4,4,4,4,4,4,4,4,
4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,18,8,2,4,6,4,
4,3,4,4,3,8,10,10,4,1,1,2,3,3,3,8,4,9,17,3,3,8,3,3,3,8,-1,-1,0,0,
0,-1,4,4,-1,-1,0,0,-1,-1,0,0,4,0,-1,-1,0,0,0,7,3,-1,-1,0,0,-1,4,4,3,3,
3,4,4,2,7,7,3,3,3,4,3,3,3,4,4,4,3,3,3,4,4,5,7,3,3,3,4,3,4,4,
 };
static unsigned short stb__courier_bold_25_latin1_w[224]={ 0,5,9,11,11,11,11,4,6,6,11,13,6,10,
5,11,11,11,11,11,11,11,10,11,11,10,5,6,14,13,14,10,10,15,13,13,13,13,12,14,13,11,13,14,
13,15,15,13,12,13,14,11,13,14,15,15,14,13,11,6,11,6,11,16,5,13,14,12,14,13,12,14,13,11,
10,13,11,15,13,13,14,14,12,11,13,13,14,15,13,13,11,7,3,7,11,12,12,12,12,12,12,12,12,12,
12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,0,5,11,13,11,13,
3,12,8,15,9,13,14,10,15,16,8,13,7,7,5,13,11,5,5,7,9,12,14,17,14,10,15,15,15,15,
15,15,15,13,13,13,13,13,11,11,11,11,14,15,13,13,13,13,13,10,14,14,14,14,14,13,12,12,13,13,
13,13,13,13,15,12,13,13,13,13,11,11,11,11,12,13,13,13,13,13,13,13,13,13,13,13,13,13,14,13,
 };
static unsigned short stb__courier_bold_25_latin1_h[224]={ 0,16,7,19,19,15,14,7,19,19,10,13,7,3,
4,19,16,15,15,16,14,15,16,15,16,16,11,13,13,7,13,15,17,14,14,15,14,14,14,15,14,14,15,14,
14,14,14,15,14,18,14,15,14,15,14,14,14,14,14,18,19,18,8,3,4,12,15,12,15,12,14,16,14,14,
19,14,14,11,11,12,16,16,11,12,15,11,10,10,10,15,10,18,18,18,6,14,14,14,14,14,14,14,14,14,
14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,15,17,14,11,14,
18,17,3,15,7,10,8,3,15,3,8,16,9,9,4,15,16,4,5,9,7,10,15,15,15,15,19,19,18,18,
18,19,14,19,19,19,18,18,19,19,18,18,14,18,20,20,19,19,19,10,17,20,20,19,19,19,14,15,16,16,
16,15,15,17,12,15,16,16,16,15,15,15,15,14,15,14,16,16,16,15,15,13,13,16,16,16,15,20,19,19,
 };
static unsigned short stb__courier_bold_25_latin1_s[224]={ 253,249,109,116,82,147,60,251,159,152,140,
144,129,181,154,140,77,1,213,103,104,240,43,1,115,66,248,248,173,85,158,
80,84,72,83,159,97,111,125,206,168,182,221,194,209,88,235,27,47,13,32,
69,69,81,16,152,1,138,223,186,128,155,240,192,248,200,110,214,125,1,56,
222,29,17,214,234,222,43,59,15,179,150,243,188,55,29,114,85,166,41,180,
225,193,178,136,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,
43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,253,200,72,
196,73,154,245,95,172,91,99,152,225,181,38,209,216,89,192,208,160,66,54,
166,148,200,119,101,187,169,225,202,166,182,139,123,162,198,1,102,109,239,197,
211,1,13,233,1,168,27,59,31,25,39,53,129,43,16,1,67,94,225,183,
235,194,237,208,155,186,58,227,173,165,108,1,119,107,54,26,210,13,140,29,
127,141,13,96,116,130,136,122,15,133,45,87,73, };
static unsigned short stb__courier_bold_25_latin1_t[224]={ 1,22,151,1,22,78,125,42,1,1,140,
125,151,151,151,1,60,78,60,60,125,60,60,94,60,60,92,78,125,151,125,
78,42,125,110,78,110,110,110,78,110,110,78,110,110,125,110,94,125,42,125,
94,110,94,125,110,125,110,110,22,1,22,140,150,104,125,94,125,94,140,110,
42,110,110,1,94,94,140,140,140,42,42,125,125,94,140,140,140,140,94,140,
22,22,22,151,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,
110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,1,78,42,
94,140,94,22,42,151,78,151,140,140,151,78,150,140,60,140,140,151,78,60,
151,151,140,151,140,60,60,60,60,1,1,22,22,22,1,110,1,22,1,22,
22,22,22,22,42,94,42,1,1,22,22,22,140,42,1,1,22,22,1,94,
78,42,42,42,60,78,42,125,78,42,42,61,78,78,78,78,94,78,94,61,
60,60,94,94,125,125,42,42,61,78,1,1,1, };
static unsigned short stb__courier_bold_25_latin1_a[224]={ 212,212,212,212,212,212,212,212,
212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,
212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,
212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,
212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,
212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,
212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,
212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,
212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,
212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,
212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,
212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,
212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,
212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,
212,212,212,212,212,212,212,212, };

// Call this function with
//    font: NULL or array length
//    data: NULL or specified size
//    height: STB_FONT_courier_bold_25_latin1_BITMAP_HEIGHT or STB_FONT_courier_bold_25_latin1_BITMAP_HEIGHT_POW2
//    return value: spacing between lines
static void stb_font_courier_bold_25_latin1(stb_fontchar font[STB_FONT_courier_bold_25_latin1_NUM_CHARS],
                unsigned char data[STB_FONT_courier_bold_25_latin1_BITMAP_HEIGHT][STB_FONT_courier_bold_25_latin1_BITMAP_WIDTH],
                int height)
{
    int i,j;
    if (data != 0) {
        unsigned int *bits = stb__courier_bold_25_latin1_pixels;
        unsigned int bitpack = *bits++, numbits = 32;
        for (i=0; i < STB_FONT_courier_bold_25_latin1_BITMAP_WIDTH*height; ++i)
            data[0][i] = 0;  // zero entire bitmap
        for (j=1; j < STB_FONT_courier_bold_25_latin1_BITMAP_HEIGHT-1; ++j) {
            for (i=1; i < STB_FONT_courier_bold_25_latin1_BITMAP_WIDTH-1; ++i) {
                unsigned int value;
                if (numbits==0) bitpack = *bits++, numbits=32;
                value = bitpack & 1;
                bitpack >>= 1, --numbits;
                if (value) {
                    if (numbits < 3) bitpack = *bits++, numbits = 32;
                    data[j][i] = (bitpack & 7) * 0x20 + 0x1f;
                    bitpack >>= 3, numbits -= 3;
                } else {
                    data[j][i] = 0;
                }
            }
        }
    }

    // build font description
    if (font != 0) {
        float recip_width = 1.0f / STB_FONT_courier_bold_25_latin1_BITMAP_WIDTH;
        float recip_height = 1.0f / height;
        for (i=0; i < STB_FONT_courier_bold_25_latin1_NUM_CHARS; ++i) {
            // pad characters so they bilerp from empty space around each character
            font[i].s0 = (stb__courier_bold_25_latin1_s[i]) * recip_width;
            font[i].t0 = (stb__courier_bold_25_latin1_t[i]) * recip_height;
            font[i].s1 = (stb__courier_bold_25_latin1_s[i] + stb__courier_bold_25_latin1_w[i]) * recip_width;
            font[i].t1 = (stb__courier_bold_25_latin1_t[i] + stb__courier_bold_25_latin1_h[i]) * recip_height;
            font[i].x0 = stb__courier_bold_25_latin1_x[i];
            font[i].y0 = stb__courier_bold_25_latin1_y[i];
            font[i].x1 = stb__courier_bold_25_latin1_x[i] + stb__courier_bold_25_latin1_w[i];
            font[i].y1 = stb__courier_bold_25_latin1_y[i] + stb__courier_bold_25_latin1_h[i];
            font[i].advance_int = (stb__courier_bold_25_latin1_a[i]+8)>>4;
            font[i].s0f = (stb__courier_bold_25_latin1_s[i] - 0.5f) * recip_width;
            font[i].t0f = (stb__courier_bold_25_latin1_t[i] - 0.5f) * recip_height;
            font[i].s1f = (stb__courier_bold_25_latin1_s[i] + stb__courier_bold_25_latin1_w[i] + 0.5f) * recip_width;
            font[i].t1f = (stb__courier_bold_25_latin1_t[i] + stb__courier_bold_25_latin1_h[i] + 0.5f) * recip_height;
            font[i].x0f = stb__courier_bold_25_latin1_x[i] - 0.5f;
            font[i].y0f = stb__courier_bold_25_latin1_y[i] - 0.5f;
            font[i].x1f = stb__courier_bold_25_latin1_x[i] + stb__courier_bold_25_latin1_w[i] + 0.5f;
            font[i].y1f = stb__courier_bold_25_latin1_y[i] + stb__courier_bold_25_latin1_h[i] + 0.5f;
            font[i].advance = stb__courier_bold_25_latin1_a[i]/16.0f;
        }
    }
}

#ifndef STB_SOMEFONT_CREATE
#define STB_SOMEFONT_CREATE              stb_font_courier_bold_25_latin1
#define STB_SOMEFONT_BITMAP_WIDTH        STB_FONT_courier_bold_25_latin1_BITMAP_WIDTH
#define STB_SOMEFONT_BITMAP_HEIGHT       STB_FONT_courier_bold_25_latin1_BITMAP_HEIGHT
#define STB_SOMEFONT_BITMAP_HEIGHT_POW2  STB_FONT_courier_bold_25_latin1_BITMAP_HEIGHT_POW2
#define STB_SOMEFONT_FIRST_CHAR          STB_FONT_courier_bold_25_latin1_FIRST_CHAR
#define STB_SOMEFONT_NUM_CHARS           STB_FONT_courier_bold_25_latin1_NUM_CHARS
#define STB_SOMEFONT_LINE_SPACING        STB_FONT_courier_bold_25_latin1_LINE_SPACING
#endif

