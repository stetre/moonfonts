// Font generated by stb_font_inl_generator.c (4/1 bpp)
//
// Following instructions show how to use the only included font, whatever it is, in
// a generic way so you can replace it with any other font by changing the include.
// To use multiple fonts, replace STB_SOMEFONT_* below with STB_FONT_consolas_bold_30_usascii_*,
// and separately install each font. Note that the CREATE function call has a
// totally different name; it's just 'stb_font_consolas_bold_30_usascii'.
//
/* // Example usage:

static stb_fontchar fontdata[STB_SOMEFONT_NUM_CHARS];

static void init(void)
{
    // optionally replace both STB_SOMEFONT_BITMAP_HEIGHT with STB_SOMEFONT_BITMAP_HEIGHT_POW2
    static unsigned char fontpixels[STB_SOMEFONT_BITMAP_HEIGHT][STB_SOMEFONT_BITMAP_WIDTH];
    STB_SOMEFONT_CREATE(fontdata, fontpixels, STB_SOMEFONT_BITMAP_HEIGHT);
    ... create texture ...
    // for best results rendering 1:1 pixels texels, use nearest-neighbor sampling
    // if allowed to scale up, use bilerp
}

// This function positions characters on integer coordinates, and assumes 1:1 texels to pixels
// Appropriate if nearest-neighbor sampling is used
static void draw_string_integer(int x, int y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0, cd->t0); glVertex2i(x + cd->x0, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t0); glVertex2i(x + cd->x1, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t1); glVertex2i(x + cd->x1, y + cd->y1);
        glTexCoord2f(cd->s0, cd->t1); glVertex2i(x + cd->x0, y + cd->y1);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance_int;
    }
    glEnd();
}

// This function positions characters on float coordinates, and doesn't require 1:1 texels to pixels
// Appropriate if bilinear filtering is used
static void draw_string_float(float x, float y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0f, cd->t0f); glVertex2f(x + cd->x0f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t0f); glVertex2f(x + cd->x1f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t1f); glVertex2f(x + cd->x1f, y + cd->y1f);
        glTexCoord2f(cd->s0f, cd->t1f); glVertex2f(x + cd->x0f, y + cd->y1f);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance;
    }
    glEnd();
}
*/

#ifndef STB_FONTCHAR__TYPEDEF
#define STB_FONTCHAR__TYPEDEF
typedef struct
{
    // coordinates if using integer positioning
    float s0,t0,s1,t1;
    signed short x0,y0,x1,y1;
    int   advance_int;
    // coordinates if using floating positioning
    float s0f,t0f,s1f,t1f;
    float x0f,y0f,x1f,y1f;
    float advance;
} stb_fontchar;
#endif

#define STB_FONT_consolas_bold_30_usascii_BITMAP_WIDTH         256
#define STB_FONT_consolas_bold_30_usascii_BITMAP_HEIGHT        130
#define STB_FONT_consolas_bold_30_usascii_BITMAP_HEIGHT_POW2   256

#define STB_FONT_consolas_bold_30_usascii_FIRST_CHAR            32
#define STB_FONT_consolas_bold_30_usascii_NUM_CHARS             95

#define STB_FONT_consolas_bold_30_usascii_LINE_SPACING          20

static unsigned int stb__consolas_bold_30_usascii_pixels[]={
    0x0244dff5,0x20000000,0x50e60009,0x44000035,0x555530a9,0x55541555,
    0x8801aaaa,0xa9880019,0x97000009,0x00e66459,0x00018800,0x0d654c00,
    0x00d5e5c0,0x201cfda8,0x332e0cca,0x8b7fd40c,0x930005fe,0x00039bfd,
    0x26013ff6,0x3fffa3ff,0xff70000d,0x3ffee5ff,0xff10ffff,0x007fffff,
    0x26001ff7,0x1efffffe,0x3ffe6000,0x0017ff61,0xeffffd98,0xea82eeee,
    0x3ff6204f,0x3a00dfff,0x202effff,0x84fffffb,0x7fec5ff9,0xab7fd41f,
    0x5c005fff,0x2fffffff,0x7fffd400,0x9bffe600,0x01fffffe,0x7ffffec0,
    0xffffff72,0x3fffe21f,0xfc803fff,0xffff7007,0x005fffff,0xf51bff20,
    0xf70001ff,0xffffffff,0xfff887ff,0xffff884f,0x3a06ffff,0x0effffff,
    0x7f577fc4,0x207ff40f,0x7d41fffd,0x17ffee6f,0x66fffec0,0x2002fffe,
    0x100ffffa,0x5541dfff,0x2005fffd,0x0abefff9,0x5555dff7,0x7f555541,
    0x05fe803f,0xefffffb8,0x001fffff,0x7417ffc4,0x7cc004ff,0xffebadff,
    0x7fd42eef,0xfffc86ff,0x03fffc9a,0xfffffdb7,0xf51ffa8d,0x417fdc5f,
    0x7d41fffd,0x17ffe46f,0x507ffee0,0xfe800dff,0x3bff604f,0x03ffea00,
    0xb837fe40,0x7ec005ff,0xffec983f,0xff02deff,0x7fe445ff,0x7fdc005f,
    0x00fff707,0xfe86ffc8,0xffff104f,0xd87fff0b,0xff5005ff,0x87fdc9ff,
    0xbff12ff9,0x503fff20,0xfffd0dff,0x03ffe601,0x2000ffe4,0x3ffee019,
    0x01fff802,0x2e07ffb0,0x7ec005ff,0x7fffe43f,0xb84fffff,0xffb02fff,
    0x7ff4003f,0x05fff104,0x5c1fff40,0x3fee06ff,0x0fffc40e,0x98017ff2,
    0x3fea6fff,0x3f63ff51,0x1fff900f,0xf986ffa8,0x7ff905ff,0x002ffcc0,
    0x0bfff100,0x400bffa0,0xff702ffe,0x3ffd800b,0x3ffffff2,0xfe84ffff,
    0x3ffea07f,0x1fff5003,0x0037fe40,0xff707ffd,0x3e01880d,0x3ffa23ff,
    0x7fffc003,0xfd5dff30,0x405ff71f,0x7d40fffc,0x1fff906f,0xf806ff88,
    0x7777647f,0xb85eeeee,0xfb000fff,0x3ffe007f,0x00bff701,0xff33ffd8,
    0x11ff53df,0x09fff055,0x8027ffc4,0x7cc05ffd,0xff9001ff,0x009ffd0d,
    0x88fffd80,0x4000fffd,0x7fe47ffe,0x5ff8bfff,0x207ffe40,0xff106ffa,
    0x13ffb87f,0xfb7b9bd9,0xfffffd8f,0xfe87ffff,0x3ff6004f,0x03fff003,
    0xb0017fee,0x3ffee7ff,0xf880ff72,0x7ffc03ff,0x1fff9805,0x005ffd80,
    0xd79dfff3,0x80003fff,0xfffdfff9,0x7fcc001f,0x2dec986f,0xfb801ffb,
    0x06ffa87f,0xffd1bff6,0xffffff31,0x7ec1ff97,0xffffffff,0x00fffcc7,
    0x2007ffb0,0xff701fff,0x3ffd800b,0x3f65fff9,0x17ffcc06,0x201bffe0,
    0xf5006ffc,0x3fa001ff,0x3fffffff,0xfff90000,0x53003dff,0x05ffff97,
    0x200ffea0,0xffa87ffb,0x43ffee06,0xdffd6ff8,0x3ff95fff,0x71fff600,
    0xfb800fff,0xfff8806f,0x00bff700,0xff53ffd8,0x80bfd7ff,0x7402fffa,
    0x7fc406ff,0x3ffa002f,0xedffc803,0x5000ceff,0x7ffdc015,0x3ff2004f,
    0x1004ffff,0x3ee00dff,0x06ffa87f,0x7cc7ffe6,0xfb6ff9cf,0x005ff73f,
    0xff91fff6,0xfff9800b,0x1bff200a,0x4005ffb8,0xfff13ffd,0xa80bffff,
    0x7fc02fff,0x3ffdc06f,0x01ffee00,0xb0001ffe,0xffb03fff,0x7fc1ffff,
    0x7fffe41f,0x3ff6002e,0x0fff5000,0x7c40dff5,0x75ff72ff,0x23ffa7ff,
    0xfb001ffb,0x04ffd8ff,0xeffffc80,0x5ffffd91,0x002ffdc0,0xff98fff6,
    0x03ffffff,0xf807fff3,0x7ff405ff,0x7ffc4004,0x0bffe202,0x7fffc400,
    0x7e7ffdc5,0xfff88eff,0x0077fdc0,0x654ffea0,0x0dff500b,0xff80dff5,
    0xf93ff93f,0x2e3ffa5f,0xffb001ff,0x004ffe8f,0x23ffff50,0x401dfffd,
    0x6c005ffb,0x7fec43ff,0x41ffffff,0x2204fff8,0x3ea04fff,0xfc8000ff,
    0x7fffc06f,0x02cdeeef,0x43ffffe2,0xff74fff8,0x70fff3bf,0xf8800bff,
    0xbffffb6f,0xa86ffa81,0x7ffc06ff,0xffb1ffb3,0x7fe5ffe1,0x8fffb000,
    0xc8004fff,0xfb1fffff,0x5c01bfff,0x7ec005ff,0xfffb103f,0xff83ffff,
    0x3ffee07f,0x017ff602,0x00fffcc0,0xfffffff3,0x3203ffff,0xff50ffff,
    0x77ffe43f,0x5ffb86ff,0x54ffec00,0x44ffeeff,0xffa86ffa,0xd97ffc06,
    0x88ffe8ff,0x01ffb6ff,0xfd1fff60,0xffa8009f,0xfeb880bf,0x17fee05f,
    0x407ffb00,0xffffcffc,0x817ffe45,0x3e206ffe,0x3a0001ff,0x3fee04ff,
    0xffffeeef,0xfffd00ff,0x7ec3ffdc,0x0003ffff,0x7ecffea0,0x5001bfa6,
    0x7fc40dff,0x3faffd1f,0xfd5ff88f,0x3ffec00d,0x90017ff6,0xff5009ff,
    0x02ffdc0f,0xd80fff60,0x8ffff36f,0x30affff9,0x6407fffb,0x540006ff,
    0xffa80fff,0xfffd882f,0x54dff901,0x7f440fff,0x03300fff,0xfd37fc40,
    0x0443fe4b,0x2606ffa8,0x2ffb0fff,0xdffb8ffd,0x36004ff8,0x3ffe47ff,
    0x00fff600,0x5c03ffe2,0x7ec005ff,0xe97fa03f,0xfffd87ff,0x5fffffff,
    0x00fffe20,0x20fffe00,0x3e606ffd,0x7ffd02ff,0x5c2fffcc,0xfc80ffff,
    0xffc800ef,0x6fd97fa1,0x7d42ffd4,0x9fff206f,0xcffd8ffd,0x2ffdefff,
    0x51fff600,0x6c003fff,0xfff003ff,0x017fee03,0x7c07ffb0,0x0dfff13f,
    0x3ffffff6,0x3ee00eff,0xb80000ff,0xfffe86ff,0x21fff900,0x85ffeb98,
    0xeccefffe,0x446fffff,0x5403ffff,0x4ffec4ff,0x7ff45ff9,0x037fd42f,
    0x7fe49fff,0xfeffffa9,0x6c005fff,0x7ffc47ff,0x0fff6004,0xb80fffc0,
    0x7ec005ff,0xf557d93f,0x7fffd57f,0x7ffff540,0x4ffe803e,0xfff10000,
    0xcefffc85,0x4fffebaa,0x033ffff6,0x3fffffe2,0x5fffefff,0x80ffffe2,
    0xff986fe8,0x7fc1ffff,0x37fd43ff,0x2e0fffa8,0x1bffb2ff,0x8001dffd,
    0xffd87ffd,0x7ffb000f,0x407ffe00,0x6c005ffb,0xffff93ff,0xbfffffff,
    0x01fff200,0x0007ffcc,0xb0bff900,0xffffffff,0xdefd89ff,0x7ffe4401,
    0xfffb2eff,0x0077fe47,0x36a03ff9,0xffb82fff,0x837fd40e,0x7fd45ffe,
    0x00130264,0x261bff60,0xfb004fff,0x3ffe007f,0x00bff701,0xff93ffd8,
    0xffffffff,0x3fea0019,0x7fec0c2f,0x7cc00005,0xffda81ff,0x080cefff,
    0x02662000,0x00003100,0x80c40088,0xffb86ffa,0x03ffc41f,0xbfff0000,
    0x007fff60,0x7400bffa,0xbff702ff,0x33ffd800,0xbdfffd97,0xff880017,
    0x24fdcdff,0x0002fff8,0x804ffe80,0x00000008,0x00000000,0x7fd40000,
    0x81fffcc6,0x00003ffd,0x104fff98,0x4401dfff,0xfb001fff,0x17fee09f,
    0x207ffb00,0xb80006fd,0xffffffff,0x000dff91,0x03ffea00,0xccc88000,
    0x2054c02c,0xeeeeeeee,0xeeeeeeee,0x77777712,0x80000577,0x3fe26ffa,
    0x3ffea06f,0x2e607302,0x17ffecc0,0x20bfff50,0x2007ffd8,0xfb83fffb,
    0x7fec005f,0x0009fd03,0x3ffffee0,0x013310cf,0x4ccc0000,0x74c00000,
    0xffb02fff,0x7ffffc3f,0xffffffff,0xfff33fff,0x00bfffff,0x16ffa800,
    0xd801fffd,0xecabefff,0xddff305f,0x00bffffd,0x7f4bfff7,0x4003ffff,
    0x72fffffe,0x1fffffff,0x3fffffe2,0x007ff03f,0x55d54400,0x00000000,
    0x32000000,0x7fd42fff,0x3fffe6ff,0xffffffff,0xff33ffff,0x0bffffff,
    0x6ffa8000,0x2001dff3,0xfffffffd,0xffff305f,0x001dffff,0xffe97fee,
    0xe98004ff,0xff72ffff,0x221fffff,0x3fffffff,0x0001cc88,0x00000000,
    0x00000000,0xf917ffd4,0x0000ffff,0x99999910,0x80000799,0x03a66ffa,
    0xfffdb700,0x7f64405b,0x8002dfff,0x0de7645b,0x3b72a000,0xdddddd51,
    0x3bbba21d,0x00002eee,0x00000000,0x00000000,0x2a088880,0x0005ffff,
    0x00000000,0x000dff50,0x22000080,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x001effd8,0x00000000,0x00dff500,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x20000000,0x00000019,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x75400000,0x776402ee,
    0x01011005,0x980004c4,0x00b33200,0x8e664000,0x26002ccc,0x1ccccccc,
    0xffd93000,0x2a8803bd,0x001e65c0,0x401a9880,0x26200998,0x26666219,
    0x00999999,0x98009880,0x10001aaa,0x7c40dfff,0x3f6e04ff,0x03fddfff,
    0x3603fff3,0xfffc88ee,0x04fff83e,0xfff88000,0x4009fff3,0xfffffffa,
    0xfffc8003,0xd102ffff,0xffe807ff,0x7f4c0005,0xd81effff,0x3fea06ff,
    0xfffff51f,0x809fffff,0x5ffffec8,0x3ffffee0,0x4fea83ef,0x701fffd8,
    0xfd303fff,0xffffffff,0x17fff607,0x7ff4fffc,0x7fc4ffff,0x8800004f,
    0x9fff3fff,0x7fffd400,0x5c003fff,0xffefffff,0x07fff102,0x0005ffe8,
    0x3ffffff2,0x7fec2fff,0x47ffea06,0xfffffffa,0xfb104fff,0x0bffffff,
    0x3ffffffa,0x3fe24fff,0x7ffd44ff,0x30dffd04,0xfdbfffff,0x3f607fff,
    0xffff05ff,0xffffffff,0x0027ffc3,0x9fffc400,0x20004fff,0x2003fff8,
    0x441efff8,0x07fff100,0x0005ffe8,0xfdfffff7,0x7ec3ffff,0x3ffea06f,
    0xffffff51,0xd109ffff,0xddffffff,0x7bfff909,0x23fffd95,0xe86ffffa,
    0xfff986ff,0x43fffd83,0xf503fff8,0x3ffe03ff,0xfff70cff,0x0027ffcb,
    0x9fffc400,0x20004fff,0x2003fff8,0x4002fff9,0x7403fff8,0xf88005ff,
    0x3f222fff,0x1bff65ff,0xf51fffa8,0x333333ff,0xbfffd013,0xbffd0013,
    0x227fff30,0xfb85ffff,0x7ffe41ff,0x427ffcc0,0x2203fff8,0x3fffe00a,
    0xf0fffe84,0x000889ff,0x7fff1110,0x01313ffe,0x00fffe20,0x400fffa8,
    0xfffeeee8,0xd1eeeeee,0xf9000bff,0x3ff605ff,0x40dffb0f,0xff51fffa,
    0xfffa800f,0x1fffc004,0x3ee3fff8,0xfff880ef,0x5c2fffc4,0xff881fff,
    0x7fc0003f,0x3fff705f,0x7f64fffe,0xfeb803ef,0xf3ffffff,0xfff917ff,
    0xfff8805d,0x3ffee003,0x7fffc400,0xffffffff,0x50bffd1f,0x7f41bddd,
    0x3ffea06f,0x540dffb3,0xfff51fff,0x06ffe800,0x985fff80,0x00c42fff,
    0xff99fff6,0x07ffd82f,0x3a67fff1,0x02eeeeee,0x3ea09fff,0xb9fff2ff,
    0x09ffffff,0x3fffffa6,0xfff3ffff,0xffffffd9,0x1fffc407,0x01fff700,
    0xffffff88,0x1fffffff,0xff98bffd,0x27ffc1ff,0x369fff10,0x3fea06ff,
    0x00fff51f,0x0027ffc4,0x886fffe4,0x50006ffe,0x3ff65fff,0x20dffd06,
    0xff53fff8,0x207fffff,0xff504fff,0x3ffffe5f,0x1fffffff,0x6fffffc4,
    0xff3ffffe,0xffffffff,0x7ffc40ff,0x3bbbb203,0xeeeeefff,0x0fffe205,
    0x744bffd0,0x7fc42fff,0xafffc03f,0x3ea06ffd,0xdfff51ff,0xf30179dd,
    0xbddb77ff,0x3ffe2019,0x1ffffcff,0x37ffe000,0xfd03fff8,0x3ffe20ff,
    0xffffff53,0x13ffe07f,0xff8fffdc,0xff70cfff,0x3fffd8bf,0xff9fffc4,
    0xfc88cfff,0xfff101ff,0x7ffff407,0xffffffff,0x0fffe207,0x7f4bffd0,
    0xfffa82ff,0xdb7ffc02,0x3fea06ff,0xfffff51f,0xfa89ffff,0xffffffff,
    0xffd303ff,0x001dffff,0xfbfffc80,0xfffb00ff,0x40fffe20,0xff03fff8,
    0x9fff209f,0xfe84ffff,0x9fff50ff,0x3e7fff10,0x7fcc4fff,0x7fff102f,
    0x7fffff40,0x7fffffff,0x00fffe20,0x3ff2bffd,0x5fff503f,0xfb6ffe80,
    0x7ffd40df,0xffffff51,0x7dc9ffff,0xffffffff,0xff502fff,0x007fffff,
    0xfffff880,0x3fff205f,0x1ffff441,0xf03fff88,0xfff109ff,0xb82fffcd,
    0xfff71fff,0x27fff103,0xff885fff,0x7fff103f,0x07ffdc00,0x0fffe200,
    0xff7bffd0,0x7ffd409f,0xdafffc02,0x3fea06ff,0x3f66201f,0xfff71fff,
    0x3ff2615d,0xffffc86f,0x4c4fffff,0xffd804ed,0x3e602fff,0x3ff625ff,
    0xfff103ff,0x113ffe07,0x7fc5fffb,0x5fff504f,0x7c41fff2,0x09fff3ff,
    0x2207fff1,0x2e003fff,0x44000fff,0x7f403fff,0x405fffff,0x7c03fff9,
    0x0dffb4ff,0x800fffd4,0xff72fffe,0x3fff603f,0x453ffee0,0xf11ffffc,
    0xfa807fff,0xfe806fff,0xffffefff,0xfff103ff,0x37fffe07,0x45fffedc,
    0xff504fff,0x41bffa5f,0xfff3fff8,0x07fff109,0x800fffe2,0x4000fffb,
    0x7403fff8,0x06ffffff,0x1027ffc4,0x3ff67fff,0x03ffea06,0xaa7ffd40,
    0xff702fff,0x17ffe23f,0x7d57ffea,0xff806fff,0xff9803ff,0xffcfffff,
    0x7fff103f,0x3fffffe0,0x7c0dffff,0xfff704ff,0x441fffa3,0x9fff3fff,
    0x207fff10,0x2003fff8,0x4000fffb,0x7403fff8,0x5fffbdff,0x703fffc0,
    0x3ff25fff,0x01ffee07,0xf34fff98,0x3fea07ff,0x03fff51f,0x7fcdbff6,
    0xfff805ff,0x3ffa6007,0x07fff3ff,0x7c0fffe2,0xefffffff,0x209fff02,
    0x3ff67ffc,0x27fff107,0xff884fff,0x7fff103f,0x07ffdc00,0x17ffe200,
    0x3f6bffd0,0x3ff203ff,0x4fffd02f,0xfb01fffb,0x7fec00df,0x0dfff12f,
    0x7dc3fff2,0xdffb01ff,0x20077fe4,0x8003fffc,0x1fffc198,0xf03fff88,
    0x001319ff,0xff109fff,0x0fffe4df,0x7cffffa2,0xfff884ff,0x07fff103,
    0x007ffdc0,0x007fffc0,0x3fe2bffd,0xfff101ff,0x3ff6615f,0x3bffe63f,
    0x11fffd40,0x3fffee60,0x50ffff20,0x7fccdfff,0x4fff885f,0x3f2004c4,
    0x200005ff,0xf103fff8,0x3ffe07ff,0x27ffc004,0x98bfff62,0x3f625fff,
    0x9fff3fff,0x207fff10,0x2003fff8,0x8000fffb,0xccdffffd,0x54bffd1e,
    0xfb00ffff,0xffffffff,0xffffb0df,0x8dfffd9b,0xfffeeefd,0x7fc42fff,
    0xfffedeff,0x3fffe21f,0xffffccdf,0xffdf1001,0x00001fff,0x881fffc4,
    0xfff03fff,0xffff8009,0x5fffedcd,0xfeffffe8,0xff3fffff,0x7fff109f,
    0x3ffbbbb6,0x204eeeef,0x8000fffb,0xfffffff8,0xc8bffd1f,0x3f206fff,
    0xdfffffff,0xffffe880,0x6c1fffff,0xffffffff,0xffff502f,0x305fffff,
    0xffffffff,0x7c4007ff,0x001effff,0x9fffc400,0xfffeeeed,0xfff4eeee,
    0xffff8009,0x0dffffff,0xffffff98,0xff3ffccf,0x7fff109f,0x3ffffffa,
    0x205fffff,0x0000fffb,0xffffffb3,0x3a17ffa3,0x3ae05fff,0x803effff,
    0xcffffffc,0xfffffd80,0xfd9803ef,0x200cffff,0xffffffc8,0x7fc4001d,
    0x000003ef,0x3fa7fff1,0xffffffff,0x09fff5ff,0xffffdb80,0x74c02eff,
    0xff93ffff,0x2213ffe7,0xfffd3fff,0xffffffff,0x07ffdc0b,0x26a62000,
    0x442fff41,0x9803ffff,0x99880009,0x09998800,0x00266000,0x00066620,
    0x00000110,0x3a5ddd10,0xffffffff,0x7ddb5fff,0x04cc4000,0x000cc400,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x406aaa20,0x009aaaa8,0x33333331,0xa9880333,0x260009aa,
    0x2600009a,0x99881aaa,0x21998801,0x98801999,0x01331099,0x99886660,
    0x26662009,0x4cccccc0,0x20999999,0x00199999,0x99813310,0x004ccc40,
    0x99988333,0x40133300,0xffd8802a,0xf54fffff,0x7fffffff,0xfffffa81,
    0xa81fffff,0xffffffff,0x3fffa603,0xd5000dff,0xbfffffff,0x201fffdc,
    0x3ffa7ffe,0x7ffdc01f,0x200bff71,0x3ffe27ff,0x5fffb00f,0x7fffffcc,
    0x26ffffff,0xefffffff,0x5ff7002d,0x3f227fcc,0xfff00fff,0x437ffdc3,
    0xfd06fffb,0x3fea01df,0x5fffffff,0xfffffff7,0xfffa8bff,0x1fffffff,
    0x7ffffff4,0xff503fff,0x3fffffff,0x7fffec40,0x10ffffff,0x7d40dfff,
    0x3ffee3ff,0x53fff403,0xff100bff,0x84fffc8f,0x7cc6fff9,0xffffffff,
    0x3ffe6fff,0xefffffff,0x30ffe401,0xfffc89ff,0x43fff03f,0x6c0ffffb,
    0xffa87fff,0xfffb84ff,0x5fffefff,0xfd99bdf7,0x774c7fff,0xfffeeeee,
    0x3bffff21,0xa83fedcc,0xfebcffff,0xfff107ff,0xfffddfff,0x17ffdc1f,
    0x7cc7ffe8,0x3fe206ff,0x017fea5f,0xff11bfe2,0xfffd81ff,0x7ffffcc2,
    0x6fffffff,0x3fbbfffe,0x200fffff,0x3fea1ffc,0x3ffffe43,0x3ee1fff8,
    0x3fe23fff,0xfffa87ff,0x7fffc46f,0x089dc40c,0x00bfff50,0x7c47ffea,
    0x03100eff,0xfc81fffd,0xfffc83ff,0x441b502f,0xffa86fff,0x0fffe83f,
    0x545fff50,0xff8805ff,0x24fffb86,0x3305fff9,0xff333333,0x27ffc5ff,
    0x817fff66,0x3fee0ffd,0x7ffffe42,0x321fff83,0x3ea5ffff,0xffd07fff,
    0x4fffc8ff,0xdfff0000,0x47ffea00,0x4004fff9,0xfd02fffa,0xffff88ff,
    0xfffb8000,0xc837ff42,0xff902fff,0x037fcc1f,0xfe82ffcc,0x3fffb0ff,
    0xbfff9000,0xf884fff8,0x7e6547ff,0xffecccff,0xffff93cd,0x43fff0df,
    0xb0ffdffc,0x101ffdff,0x7fc4dfff,0x3a00007f,0xff5004ff,0x1bffe63f,
    0x40fffb00,0x3f21fffd,0xf10003ff,0x7ffd4dff,0x09fff303,0xff317ffe,
    0x3e61aa8d,0x9fff505f,0x000bfff3,0xf81ffff3,0xfff904ff,0x7ffffe41,
    0xffffffff,0xfffdff96,0x361fff85,0xff2ffbff,0x3601ffb9,0x3ffea4ff,
    0xff300004,0x3fea003f,0xbffff11f,0x13ffa003,0x8bffffa6,0x40007ffe,
    0xffd1fffb,0x87fff80d,0x7c43fff9,0xf32ffc6f,0x7fff409f,0x8000fffe,
    0xff82fffe,0x1fff904f,0x7fffffe4,0x6fffffff,0xdffb9ff9,0x3f61fff8,
    0xffacff9f,0xf881ffda,0x3ffee1ff,0xa9988002,0x2004fffc,0x3f61fffa,
    0x00aeffff,0xff713ffe,0x7fc7ffff,0x7c40005f,0x3fff9dff,0x20fffec0,
    0x7c40fffb,0x99ffea7f,0x3fe604ff,0x8004ffff,0xff04fffc,0x1fff609f,
    0x33bff531,0x2133fff3,0xfffacffc,0xfd87ffe1,0x7fcefe8f,0x2e623ffb,
    0x7fe44fff,0xffc8001f,0x4002ffff,0x3a21fffa,0xcfffffff,0x89fffc40,
    0xfffefffd,0xc89fff14,0x00ffffff,0xdffdfff7,0x87fff500,0xfff06ffd,
    0xfa97ffe4,0x7ffec04f,0x7cc000ff,0xfff00eff,0x0bfff309,0xdff13fe6,
    0x3fa9ff90,0xe87ffe5f,0xbffff77f,0x7ff47ff6,0xfffd83ff,0xfffc8000,
    0x000cffff,0xc883fff5,0xefffffff,0x26bffe21,0xffd4ffff,0x90fffe6b,
    0x01ffffff,0x3fffffe2,0x5fff8802,0x7c13ffe2,0x53fffe7f,0x7e403ffa,
    0xe8006fff,0x3fe01fff,0xffc999df,0x7ff501ff,0x7e42ffc4,0x21fff54f,
    0x5ffa1fff,0xf92ffff9,0x033bfa5f,0x000fffec,0x7fee5d4c,0xfa800eff,
    0xff9101ff,0x221fffff,0xffffefff,0x7cd3ffe2,0x7775c4ff,0x3ee00fff,
    0x36006fff,0x3ffea7ff,0x3e6fff01,0x7ff57fff,0x7ffffc40,0x3ff2002f,
    0x7fffc04f,0x4fffffff,0xf98bfee0,0x24ffc84f,0x3fff4fff,0xffff3ffc,
    0x004bff21,0x002fffc8,0x9fffb100,0x03fff500,0x9ffffd50,0x6ffffffc,
    0xff1fffc0,0x7ffd40bf,0x3fffe200,0x3ffee002,0x740fff92,0xff9df97f,
    0x6405ff53,0x0fffffff,0x06fff980,0xfffffff8,0xcc982eff,0xfdccdffe,
    0x3ff24cef,0x3e3ffee4,0xc9ffe1ff,0x0fff25ff,0x09fff500,0x6fff8000,
    0x01fffa80,0xe97fff20,0xf983ffff,0x1bffe2ff,0x400fffa8,0x44007ffc,
    0x9ffd4fff,0x7f47ff40,0xffbcffac,0x9dfff302,0xfd009fff,0xfff003ff,
    0x4059bddf,0xfffffffa,0x0fffffff,0x7fc49ff9,0x3e1fffbf,0xc8bfea6f,
    0x7cc003ff,0x00000fff,0x2e01bffa,0x22001fff,0x3ff66fff,0x1fff701f,
    0xa817ffec,0x7e400fff,0xffe8007f,0x202fff8e,0x8affaffd,0x01ffbeff,
    0xff13fffb,0x7fe401ff,0x9fff004f,0xffffa800,0xffffffff,0x89ff90ff,
    0x1ffffffc,0x5544dff1,0x000ffee0,0x0013fffa,0x027ffc40,0x2003ffec,
    0x3ea4fff8,0xbffd03ff,0x80efffa8,0x6400fffa,0xfc8007ff,0x00fffcff,
    0xd9ff3ff6,0xa81ffdff,0x3ff25fff,0xdfff305f,0x027ffc00,0xfc8ffd00,
    0x44ffc81f,0x1ffffff9,0xf700dff1,0xff50009f,0x2a215bff,0xffe9804c,
    0xfb81973f,0x02b2e6ff,0xd0ffffa6,0xffd83fff,0xefffe81f,0x03ffee0a,
    0x000fff90,0xbffffff3,0x5ffffc80,0x03ffffea,0xf887fffa,0xffe82fff,
    0x999999bf,0x013ffe19,0x7ec6ff80,0x84ffc80f,0x11fffffd,0xff700dff,
    0x3ff60009,0xffffffff,0xddddddf5,0x7dcbffff,0xffffeeef,0x3bffff22,
    0x86fffffe,0xfceffffb,0xff305fff,0xffffffff,0xffc801ff,0xffff0007,
    0xffc807ff,0x3ffe22ff,0x7ffdc0ff,0x46fffb85,0xfffffffb,0x3e7fffff,
    0x3e0004ff,0xc83ff45f,0xfffa84ff,0x0bff31ff,0x000bff70,0x7fffffe4,
    0xffff5fff,0x1bffffff,0x7fffffdc,0x7ffe44ff,0xefffffff,0xfffff700,
    0xe980bfff,0xffffffff,0x7fe400ff,0xfff90007,0xffc801ff,0x7ffec0ff,
    0x3fffe20f,0x47ffff01,0xfffffffb,0x3e7fffff,0xf10004ff,0x907ff8bf,
    0x3ffa09ff,0x0bff31ff,0x000bff50,0xffffed98,0xfffff1cf,0xb3039fff,
    0x03dfffff,0xffffffd5,0xfd3005df,0x4007dfff,0xffffffec,0x7ffc802d,
    0xffff5000,0xbfff700d,0xc8ffff70,0x3ee05fff,0xfff70fff,0xffffffff,
    0x027ffcff,0x7c4ff980,0x09ff906f,0x547fffea,0xffa805ff,0x4cc00005,
    0x03333300,0x20019880,0x00019999,0x26000066,0x0000009a,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x4ccc0000,
    0x02666000,0x3304ccc4,0x22003333,0x99999999,0x31099999,0x0ccc4033,
    0x33333331,0x99983333,0x19999999,0x4ccccccc,0x26621999,0x44000199,
    0x331009aa,0x33333333,0x4cccc133,0x26000099,0x10000999,0x26000133,
    0x53001999,0x332e0135,0x0fffe20c,0x427ffc40,0xf11ffff8,0xbfffffff,
    0x3ffffa05,0xffffffff,0x40fff92f,0xffb0fffb,0xffffffff,0x3fffe63f,
    0x27ffffff,0xfffffff9,0xffb1ffff,0x19dfffff,0xffffc880,0x7fdc0cff,
    0xffffffff,0xffff16ff,0x039dffff,0x1ffffee0,0xbfff9100,0xffff5000,
    0xffffc80f,0xfffd84ff,0x00fffe20,0x6c27ffc4,0x3fe23fff,0xffffffff,
    0x7ffff40e,0xffffffff,0x40fff92f,0xffb0fffb,0xffffffff,0x3fffe63f,
    0x27ffffff,0xfffffff9,0xffb1ffff,0xffffffff,0x3fffea07,0x5c6fffff,
    0xffffffff,0xff16ffff,0xffffffff,0xfffb005f,0xf71003ff,0x000bffff,
    0x20fffffd,0xfffffff8,0x3ff20eff,0x0fffe20f,0x227ffc40,0x7c45fffb,
    0xffffeeff,0x777645ff,0xeeeffffe,0x0fff91ee,0xec87ffdc,0xeeffffee,
    0xffff31ee,0x4fffffff,0xfffffff9,0xffb1ffff,0xfffffddf,0xffffd0bf,
    0x49ffffdd,0xfffffffb,0xf16fffff,0xffddddff,0xff801fff,0x5c03ffff,
    0x5fffffff,0x7fffe400,0xdfffd07f,0x49fffdb9,0x7fc47ffc,0xfff1003f,
    0x07fffc49,0xb88fffe2,0x6400ffff,0x3f200fff,0x3ffee07f,0x40fff900,
    0x3002fff9,0x36005fff,0x7fe4c6ff,0x0f7c41ff,0xa89bffee,0xcaaaaaaa,
    0xfff14fff,0x2fffd887,0x3fbffea0,0x3ffe206f,0x005fffef,0x3ffbffe6,
    0x44fffb87,0xf70fffe8,0x3fff88ff,0x49fff100,0xf882fffd,0xfffd83ff,
    0x07ffe401,0x5c0fff90,0xff900fff,0x17ffcc0f,0x02fff980,0x2e0dffb0,
    0x20186fff,0x2000fffe,0xff10fffe,0x9fff307f,0x7e6ffe40,0x3bf600ff,
    0x400bffd2,0x7ffbdffd,0xf507ffc8,0x1ffea7ff,0x2007fff1,0xff54fff8,
    0x3ffe209f,0x02fffa83,0x9007ffe4,0x7fdc0fff,0x0fff900f,0x8017ffcc,
    0xb002fff9,0x7ff40dff,0x3ff6001f,0xfff5000f,0x41fffc49,0x3e03fff9,
    0x2fff9bff,0xbffd0e60,0x23ffea00,0xffe87ffb,0x29fff106,0x7fc46ffa,
    0xfff1003f,0x40dfff19,0xfc83fff8,0x7fe401ff,0x1fff200f,0x900fffb8,
    0x7fcc0fff,0xfff3002f,0x1bff6005,0x002fffb8,0xe801fffa,0x3fe20fff,
    0x0fffc83f,0x3e3fff30,0x7f4005ff,0xfff8805f,0xfd0fff73,0xafffc0ff,
    0x7fc43cc9,0xfff1003f,0x403fffb9,0x7d43fff8,0xffc806ff,0x3fff200f,
    0xfdaaaaaa,0xfff900ff,0x017ffcc0,0xaacfff98,0x3f62aaaa,0x3ffea06f,
    0xbfff1003,0x17ffe600,0x5339fff1,0x5c09fff9,0x1fff67ff,0x00bffd00,
    0x7fdcdff9,0x02fffd87,0xf100dffd,0x3e2007ff,0x03fffeff,0x7777ffc4,
    0x801effff,0x3200fffc,0xffffffff,0x900fffff,0x7fcc0fff,0xeeeeeeef,
    0x3ffffe63,0x366fffff,0x3fe606ff,0xfffb004f,0x3fff6005,0x7ffffc41,
    0x402fffff,0x3fee4ffe,0x3ffa001f,0x0fffcc05,0xff70fff7,0xfb7339ff,
    0xff100fff,0x3fe2007f,0x403fffff,0xfffffff8,0xf9000bef,0x7fe401ff,
    0xffffffff,0xff900fff,0x7fffcc0f,0x24ffffff,0xfffffff9,0x3ff66fff,
    0x13ffe206,0x017ffee0,0x442fffcc,0xffffffff,0xff103fff,0x27ffcc5f,
    0x80bffd00,0x7fdc4ffe,0xfffffd07,0x0dffffff,0x007fff10,0x3fb3ffe2,
    0x3fe200ff,0x1effffff,0x03fff200,0xcccfffc8,0x0fffeccc,0x4c0fff90,
    0xffffffff,0x3ffe64ff,0x3ccccccd,0xf981bff6,0x7fd403ff,0xffb000ef,
    0xbfff103f,0xfffffb99,0x81fff507,0x3a006ffe,0x3fee05ff,0x83ffdc0f,
    0xffffffe8,0x8805ffff,0xf1003fff,0xdfff59ff,0x45fffc40,0x000ffffb,
    0x6401fff9,0x3fee07ff,0x0fff900f,0x4cdfffcc,0x3e609999,0xffb002ff,
    0x17ffd40d,0x03ffff30,0x417ffe60,0xfa83fff8,0x7fe40fff,0x00fffc86,
    0x220bffd0,0xffb82fff,0x676e4c07,0x804fff8b,0x1003fff8,0x3ff69fff,
    0x7fff103f,0x8027ffdc,0x3200fffc,0x3fee07ff,0x0fff900f,0x8017ffcc,
    0xb002fff9,0x7fe40dff,0xffff301f,0x7ffec003,0x07fff101,0xff07fffa,
    0xfdddddff,0x3fa007ff,0xffff505f,0xffffffff,0x7cc00dff,0xff8803ff,
    0xfff1003f,0x07fffe29,0xfd0fffe2,0xff9001ff,0x3ffe401f,0x201fff70,
    0x3e607ffc,0xff3002ff,0x3ff6005f,0x0ffff106,0x007fffe6,0x206fff88,
    0xf903fff8,0x7ffcc3ff,0xffffffff,0xbffd005f,0x3ffffea0,0xffffffff,
    0x3ff2006f,0xfff8800f,0x9fff1003,0x4437ffdc,0x7fdc3fff,0xfffc804f,
    0x81fff200,0xf900fffb,0x7ffcc0ff,0x5fff3002,0x41bff600,0xf983fffd,
    0x64000eff,0x3e202fff,0xfffd03ff,0x7ffffe41,0x7fffffff,0x20bffd00,
    0xfffffffa,0x6fffffff,0x0bfff500,0x00fffe20,0x3a27ffc4,0x7fc43fff,
    0x0ffff83f,0x007ffe40,0x7dc0fff9,0xfff900ff,0x017ffcc0,0x002fff98,
    0x754cdffb,0xff986fff,0x99999aff,0x6fff8809,0x21fffc40,0x746fffd9,
    0x99999dff,0x442fffc9,0xeffe9999,0x33311999,0xff933333,0x2620133f,
    0x01ffffda,0xffffff10,0x229fffff,0x7fcc4fff,0x3ffe21ff,0x04fffc83,
    0x9007ffe4,0x7fdc0fff,0xfffffb0f,0x23ffffff,0x3002fff9,0xffffffff,
    0x3ff63fff,0xffffffff,0x7fffc41e,0xffffffff,0x02fffc86,0x7fffffc4,
    0x21ffffff,0x2602fff8,0x7fec4fff,0xffffffff,0x3fee007f,0xfffffb07,
    0x4003ffff,0xfffffff8,0xff14ffff,0xdfff909f,0x441fffc4,0x3200ffff,
    0x3f200fff,0x3ffee07f,0xffffffb0,0x263fffff,0xf3002fff,0xffffffff,
    0x3fff63ff,0x04ffffff,0xfffffff1,0x88dfffff,0xf8806fff,0xffffffff,
    0x7ffdc2ff,0x23fffc00,0xfffffffd,0x2007ffff,0xffb07ffb,0x03bfffff,
    0xfffff880,0x14ffffff,0xff109fff,0x3ffe29ff,0x07fffb03,0x9007ffe4,
    0x7fdc0fff,0xfffffb0f,0x23ffffff,0x3002fff9,0xffffffff,0x3ff63fff,
    0x01bcefff,0x3fffffe2,0x46ffffff,0x8802fffc,0xefffffff,0x0bffb02d,
    0x6c3fffb0,0xffffffff,0x2e007fff,0xfffb07ff,0x000037bd,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00008020,0x01000030,0x4c000600,0x00cc0009,0x00010080,
    0x40260003,0xee883eed,0x0266202e,0x805ddd50,0x3bb25eec,0x23ddb003,
    0xeeeeeeeb,0x3b60eeee,0xddd702ee,0x7e400005,0x8000ec81,0x4efffec8,
    0x3ffb6e00,0x3fae05ef,0x32204eff,0x0effffff,0xfffffdb8,0x577440cf,
    0xff52efe9,0x9af74c5f,0x6c0dfffd,0xfffc88ee,0x427ffc2e,0x2a03fff8,
    0x7fc406ff,0x3ffe206f,0x4017ff64,0xfff90fff,0xffffffff,0x07fffcc1,
    0x0017ffe2,0x21fffd80,0x2001fffc,0xfffffffa,0x3fa601ef,0x87ffffff,
    0xffffffd8,0x7ffd40ef,0x41ffffff,0xfffffff9,0x3fe21fff,0xf9efffec,
    0x3fea7fff,0xffffffaf,0x3a7ffe0f,0x23ffffff,0xff884fff,0x1bfea03f,
    0x407fff60,0x3ee1fffb,0x7ff8806f,0x3ffffff2,0x5c0fffff,0x7ff45fff,
    0xe880000f,0x3f21efff,0xfa803fff,0xffffffff,0xfff980ff,0x87ffffff,
    0xfdbefffe,0x3ffe66ff,0x1fdcbbdf,0x66677fcc,0x3e26fffe,0xfffeefff,
    0xf51fffef,0xffdfffff,0x7fffc9ff,0x7fffffff,0x3e213ffe,0x3fea03ff,
    0x4fffa806,0xfa8dffd0,0x6ff9807f,0x26666662,0xfb03fffe,0x3ffee5ff,
    0xfe980002,0xffa80dff,0x7ff404ff,0xfffb10bf,0x3bfffd09,0x3fea2d44,
    0x97ffd41f,0x2002fffb,0xfff900a8,0x55bffe23,0x5ff95fff,0x8bffffea,
    0x3ffe7ffe,0xffc88cff,0x109fff1f,0x7d407fff,0xdffd006f,0x987fff30,
    0x9dd10fff,0x5c02ffd4,0x3e205fff,0x5fffafff,0xfffa8000,0x7ffcc04f,
    0xfffa80df,0xb8ffff03,0x3a005fff,0xbffd05ff,0x000bfff2,0x12fff980,
    0x3fe65fff,0x2a9ff70f,0x7dc1ffff,0x13fffe7f,0x3fe5fff3,0x3fff884f,
    0x401bfea0,0x7e41fffb,0x7ffc40ff,0x2e1fff71,0x7fd404ff,0x7fd400ef,
    0x000fffff,0x1ffffdc0,0xefffe880,0x807ffe40,0x3f20fffb,0xff1000ff,
    0x5bff605f,0x01cffffb,0x3fea6200,0x4cfff12f,0x53fee6ff,0xfa83fffa,
    0x0bfff0ff,0x3fe7fff1,0x3fff884f,0xff955555,0x8155555f,0x7fc4fff8,
    0x25fff05f,0xff73fffe,0x7fffc407,0xffff9001,0xfc80005f,0xd8001fff,
    0x3f61ffff,0x3ffea06f,0x801fffa1,0xfffffff9,0xf17fffff,0x39dfffff,
    0xfffed980,0xff12ffff,0xf72ffccf,0x07ffea9f,0x884fff80,0x9fff3fff,
    0x3a7fff10,0xffffffff,0xd82fffff,0x3ffe67ff,0xf17ffd02,0x3ff2dfff,
    0x0ffffa02,0x6ffff880,0x3ff62000,0x320000ef,0xffd2ffff,0x17ffcc0d,
    0x5c00dfff,0xffffffff,0x3a67ffff,0xcfffffff,0xfffffd80,0xf12fffff,
    0x72ffccff,0x3ffea9ff,0x13ffe001,0x7fcfffe2,0x3fff884f,0xfffffffd,
    0x05ffffff,0x3f65fff5,0x33ff606f,0xd8fffffb,0xfff901ff,0xfffc8009,
    0xd10002ff,0x0001dfff,0xe97fffdc,0x3fea06ff,0x01fffe1f,0xaabfffa8,
    0x82aaaaaa,0xffffffc9,0x677ffec5,0x12fffbaa,0x2ffccfff,0x3fea9ff7,
    0x3ffe001f,0xf3fff884,0xfff309ff,0x32aaaaa7,0xaaaaafff,0xf1bfff00,
    0x7fdc07ff,0xbffcffdd,0xfff507fe,0xfffa800d,0x0000ffff,0x007ffff6,
    0x87ffff20,0x3f207ffd,0x3fff60ff,0x3fff3000,0xffb30000,0x3ffe21ff,
    0x12fff885,0x2ffccfff,0x3fea9ff7,0x3ffe001f,0xf3fff884,0xffe88bff,
    0x1bfea03f,0xf7fff900,0x7fd401ff,0xeff9dffe,0xfff987ff,0x3fe2000f,
    0x06fffbef,0x7fffdc00,0xfffb1002,0x2fffb81d,0xfc8fffd0,0xff1005ff,
    0x6c00009f,0xfff51fff,0x25fff505,0x3fe67ff8,0x7d53fee5,0x3fe001ff,
    0x3fff884f,0x3661fffd,0x2a03ffff,0x7c4006ff,0x405fffff,0xd2fffff9,
    0xe88bffff,0x9999bfff,0x3fffd019,0x000ffff6,0x09ffff50,0x0dfffe98,
    0x0cffff98,0xf30ffff6,0x3981bfff,0x101fffec,0xfffd004c,0x517ffe61,
    0x3e25ffff,0xb97fe67f,0x3fff54ff,0x427ffc00,0xff93fff8,0xfffffdff,
    0x37fd407f,0x7fffec00,0x7ffc402f,0x3ffff27f,0x7ffffe44,0x41ffffff,
    0x3e23fffc,0x40001fff,0x80dffff9,0x404ffffa,0xfefffffc,0xff906fff,
    0xfffdffff,0xceffff88,0xfb0feccc,0xffd9579d,0x7fffc4df,0xfffffecd,
    0x7ccfff12,0x553fee5f,0x3e001fff,0xfff884ff,0xffffff13,0x407ffb9f,
    0xa8006ffa,0xf007ffff,0x7fccbfff,0x7ffec3ff,0xffffffff,0x21bffea1,
    0x000efffa,0x77fff440,0x0ffffee0,0x3ffff620,0x200effff,0xfffffffc,
    0xffffa87f,0xb0ffffff,0xffffffff,0xfffc81df,0xffddffff,0x7ccfff12,
    0x553fee5f,0x3e001fff,0xfff884ff,0x3ffffa63,0x5407ff93,0xff0006ff,
    0x3fa009ff,0x7fff42ff,0x7ffffec2,0x11ffffff,0x3601ffff,0x80005fff,
    0x321fffd8,0x5c002fff,0x03efffff,0xfffffb30,0x3ff6209d,0x90dfffff,
    0xffffffff,0x3ffee019,0x25ff93ff,0x3fe67ff8,0x7d53fee5,0x3fe001ff,
    0x3fff884f,0x10001988,0x00000133,0x00000000,0x00000000,0xed81fc80,
    0x26620001,0x26620000,0x26a62000,0x26a66200,0x006a6001,0x00000000,
    0x00000000,0x66440000,0x00998003,0xaaaaaaa8,0x881aaaaa,0x32a000a9,
    0x199950cc,0x00200800,0x00000000,0x00000000,0x00000000,0x00000000,
    0x80000000,0x64004ff8,0xfff806ff,0xffffffff,0x7fffdc3f,0xc955440c,
    0xfff90fff,0x00000001,0x00000000,0x00000000,0x00000000,0x00000000,
    0x5c000000,0x0d49ff10,0x07ffff10,0xfffffff8,0x2a3fffff,0x0effffff,
    0x7fdd7fea,0x001ffee7,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0xf2ff9800,0x40bfb17f,0x00ffeffd,0x33333332,0x3a2ccccc,
    0xefffefff,0x3ee9ff90,0x01ffee7f,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0xfffd8000,0xfffecffc,0xfabffa81,0x8800005f,
    0x3ffea7ff,0xf51fffef,0x037fd4df,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x3fae0000,0x1cffffff,0x7fecdfd0,0x7cc00002,
    0x7fffd46f,0x9bfea6ff,0x00006ffa,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0xdffff700,0x317fdc01,0x33320dff,0xcccccccc,
    0x2602662c,0x7cc5fffe,0x017fe65f,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0xff910000,0x105dffff,0x9ff90dff,0xfffffff0,
    0x007fffff,0x59910188,0x0001e644,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0xfdfff900,0x43ffffbf,0xff881ffd,0x7ffffc1f,
    0x3fffffff,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x3fee0000,0xdfd37ff4,0xf702ffcc,0xaaaaa8bf,0x1aaaaaaa,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0xf16c0000,0x988b629f,0x00ccc009,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00009ff1,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x02ffcc00,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
};

static signed short stb__consolas_bold_30_usascii_x[95]={ 0,5,3,0,1,0,0,6,3,3,1,1,3,3,
5,1,0,1,1,2,0,2,1,1,1,1,5,3,1,1,2,4,0,0,1,1,1,2,2,0,1,2,2,1,
2,0,1,0,1,0,1,1,1,1,0,0,0,0,1,4,1,3,1,0,0,1,2,1,1,1,0,1,2,2,
1,2,2,0,2,1,2,1,2,2,0,2,0,0,0,0,2,2,6,3,0, };
static signed short stb__consolas_bold_30_usascii_y[95]={ 22,1,1,2,-1,1,1,1,0,0,1,6,16,12,
16,1,2,2,2,2,2,2,2,2,2,2,6,6,5,9,5,1,0,2,2,2,2,2,2,2,2,2,2,2,
2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,1,0,2,25,1,6,1,6,1,6,1,6,1,0,
0,1,1,6,6,6,6,6,6,6,2,7,7,7,7,7,7,0,-2,0,10, };
static unsigned short stb__consolas_bold_30_usascii_w[95]={ 0,6,11,16,15,17,17,5,11,10,14,15,9,10,
7,14,16,14,14,13,16,13,15,14,14,14,6,9,13,14,13,11,17,17,15,14,15,13,13,16,15,13,12,15,
13,16,15,16,15,17,15,14,15,15,17,17,17,17,14,9,15,9,15,17,11,14,14,14,14,14,16,15,13,13,
13,14,13,16,13,15,14,14,14,13,15,13,17,17,17,17,13,12,4,12,16, };
static unsigned short stb__consolas_bold_30_usascii_h[95]={ 0,22,8,20,27,22,22,8,29,29,13,16,12,4,
7,25,21,20,20,21,20,21,21,20,21,20,17,22,18,10,18,22,29,20,20,21,20,20,20,21,20,20,21,20,
20,20,20,21,20,26,20,21,20,21,20,20,20,20,20,28,25,28,11,4,7,17,22,17,22,17,21,23,21,22,
29,21,21,16,16,17,22,22,16,17,21,16,15,15,15,22,15,28,31,28,8, };
static unsigned short stb__consolas_bold_30_usascii_s[95]={ 253,246,243,195,107,228,198,248,49,6,180,
164,245,226,200,141,58,201,137,16,216,202,216,152,232,233,247,188,1,211,15,
216,17,183,167,1,121,107,93,75,63,79,30,15,1,228,212,169,179,123,31,
43,47,186,110,128,146,92,164,87,156,97,195,208,188,89,63,45,78,60,121,
172,93,34,35,154,107,104,136,29,48,19,121,75,138,150,180,198,230,1,216,
74,1,61,226, };
static unsigned short stb__consolas_bold_30_usascii_t[95]={ 1,1,115,56,1,1,1,78,1,1,115,
99,56,24,24,1,56,78,78,56,78,33,33,78,33,78,33,1,99,115,99,
1,1,78,78,56,78,78,78,56,78,78,56,78,78,56,56,33,56,1,78,
56,78,33,56,56,56,56,56,1,1,1,115,24,24,99,33,99,33,99,33,
1,33,33,1,33,33,99,99,99,33,33,99,99,33,99,99,99,99,33,99,
1,1,1,115, };
static unsigned short stb__consolas_bold_30_usascii_a[95]={ 264,264,264,264,264,264,264,264,
264,264,264,264,264,264,264,264,264,264,264,264,264,264,264,264,
264,264,264,264,264,264,264,264,264,264,264,264,264,264,264,264,
264,264,264,264,264,264,264,264,264,264,264,264,264,264,264,264,
264,264,264,264,264,264,264,264,264,264,264,264,264,264,264,264,
264,264,264,264,264,264,264,264,264,264,264,264,264,264,264,264,
264,264,264,264,264,264,264, };

// Call this function with
//    font: NULL or array length
//    data: NULL or specified size
//    height: STB_FONT_consolas_bold_30_usascii_BITMAP_HEIGHT or STB_FONT_consolas_bold_30_usascii_BITMAP_HEIGHT_POW2
//    return value: spacing between lines
static void stb_font_consolas_bold_30_usascii(stb_fontchar font[STB_FONT_consolas_bold_30_usascii_NUM_CHARS],
                unsigned char data[STB_FONT_consolas_bold_30_usascii_BITMAP_HEIGHT][STB_FONT_consolas_bold_30_usascii_BITMAP_WIDTH],
                int height)
{
    int i,j;
    if (data != 0) {
        unsigned int *bits = stb__consolas_bold_30_usascii_pixels;
        unsigned int bitpack = *bits++, numbits = 32;
        for (i=0; i < STB_FONT_consolas_bold_30_usascii_BITMAP_WIDTH*height; ++i)
            data[0][i] = 0;  // zero entire bitmap
        for (j=1; j < STB_FONT_consolas_bold_30_usascii_BITMAP_HEIGHT-1; ++j) {
            for (i=1; i < STB_FONT_consolas_bold_30_usascii_BITMAP_WIDTH-1; ++i) {
                unsigned int value;
                if (numbits==0) bitpack = *bits++, numbits=32;
                value = bitpack & 1;
                bitpack >>= 1, --numbits;
                if (value) {
                    if (numbits < 3) bitpack = *bits++, numbits = 32;
                    data[j][i] = (bitpack & 7) * 0x20 + 0x1f;
                    bitpack >>= 3, numbits -= 3;
                } else {
                    data[j][i] = 0;
                }
            }
        }
    }

    // build font description
    if (font != 0) {
        float recip_width = 1.0f / STB_FONT_consolas_bold_30_usascii_BITMAP_WIDTH;
        float recip_height = 1.0f / height;
        for (i=0; i < STB_FONT_consolas_bold_30_usascii_NUM_CHARS; ++i) {
            // pad characters so they bilerp from empty space around each character
            font[i].s0 = (stb__consolas_bold_30_usascii_s[i]) * recip_width;
            font[i].t0 = (stb__consolas_bold_30_usascii_t[i]) * recip_height;
            font[i].s1 = (stb__consolas_bold_30_usascii_s[i] + stb__consolas_bold_30_usascii_w[i]) * recip_width;
            font[i].t1 = (stb__consolas_bold_30_usascii_t[i] + stb__consolas_bold_30_usascii_h[i]) * recip_height;
            font[i].x0 = stb__consolas_bold_30_usascii_x[i];
            font[i].y0 = stb__consolas_bold_30_usascii_y[i];
            font[i].x1 = stb__consolas_bold_30_usascii_x[i] + stb__consolas_bold_30_usascii_w[i];
            font[i].y1 = stb__consolas_bold_30_usascii_y[i] + stb__consolas_bold_30_usascii_h[i];
            font[i].advance_int = (stb__consolas_bold_30_usascii_a[i]+8)>>4;
            font[i].s0f = (stb__consolas_bold_30_usascii_s[i] - 0.5f) * recip_width;
            font[i].t0f = (stb__consolas_bold_30_usascii_t[i] - 0.5f) * recip_height;
            font[i].s1f = (stb__consolas_bold_30_usascii_s[i] + stb__consolas_bold_30_usascii_w[i] + 0.5f) * recip_width;
            font[i].t1f = (stb__consolas_bold_30_usascii_t[i] + stb__consolas_bold_30_usascii_h[i] + 0.5f) * recip_height;
            font[i].x0f = stb__consolas_bold_30_usascii_x[i] - 0.5f;
            font[i].y0f = stb__consolas_bold_30_usascii_y[i] - 0.5f;
            font[i].x1f = stb__consolas_bold_30_usascii_x[i] + stb__consolas_bold_30_usascii_w[i] + 0.5f;
            font[i].y1f = stb__consolas_bold_30_usascii_y[i] + stb__consolas_bold_30_usascii_h[i] + 0.5f;
            font[i].advance = stb__consolas_bold_30_usascii_a[i]/16.0f;
        }
    }
}

#ifndef STB_SOMEFONT_CREATE
#define STB_SOMEFONT_CREATE              stb_font_consolas_bold_30_usascii
#define STB_SOMEFONT_BITMAP_WIDTH        STB_FONT_consolas_bold_30_usascii_BITMAP_WIDTH
#define STB_SOMEFONT_BITMAP_HEIGHT       STB_FONT_consolas_bold_30_usascii_BITMAP_HEIGHT
#define STB_SOMEFONT_BITMAP_HEIGHT_POW2  STB_FONT_consolas_bold_30_usascii_BITMAP_HEIGHT_POW2
#define STB_SOMEFONT_FIRST_CHAR          STB_FONT_consolas_bold_30_usascii_FIRST_CHAR
#define STB_SOMEFONT_NUM_CHARS           STB_FONT_consolas_bold_30_usascii_NUM_CHARS
#define STB_SOMEFONT_LINE_SPACING        STB_FONT_consolas_bold_30_usascii_LINE_SPACING
#endif

