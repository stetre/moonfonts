// Font generated by stb_font_inl_generator.c (4/1 bpp)
//
// Following instructions show how to use the only included font, whatever it is, in
// a generic way so you can replace it with any other font by changing the include.
// To use multiple fonts, replace STB_SOMEFONT_* below with STB_FONT_times_bold_23_latin1_*,
// and separately install each font. Note that the CREATE function call has a
// totally different name; it's just 'stb_font_times_bold_23_latin1'.
//
/* // Example usage:

static stb_fontchar fontdata[STB_SOMEFONT_NUM_CHARS];

static void init(void)
{
    // optionally replace both STB_SOMEFONT_BITMAP_HEIGHT with STB_SOMEFONT_BITMAP_HEIGHT_POW2
    static unsigned char fontpixels[STB_SOMEFONT_BITMAP_HEIGHT][STB_SOMEFONT_BITMAP_WIDTH];
    STB_SOMEFONT_CREATE(fontdata, fontpixels, STB_SOMEFONT_BITMAP_HEIGHT);
    ... create texture ...
    // for best results rendering 1:1 pixels texels, use nearest-neighbor sampling
    // if allowed to scale up, use bilerp
}

// This function positions characters on integer coordinates, and assumes 1:1 texels to pixels
// Appropriate if nearest-neighbor sampling is used
static void draw_string_integer(int x, int y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0, cd->t0); glVertex2i(x + cd->x0, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t0); glVertex2i(x + cd->x1, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t1); glVertex2i(x + cd->x1, y + cd->y1);
        glTexCoord2f(cd->s0, cd->t1); glVertex2i(x + cd->x0, y + cd->y1);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance_int;
    }
    glEnd();
}

// This function positions characters on float coordinates, and doesn't require 1:1 texels to pixels
// Appropriate if bilinear filtering is used
static void draw_string_float(float x, float y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0f, cd->t0f); glVertex2f(x + cd->x0f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t0f); glVertex2f(x + cd->x1f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t1f); glVertex2f(x + cd->x1f, y + cd->y1f);
        glTexCoord2f(cd->s0f, cd->t1f); glVertex2f(x + cd->x0f, y + cd->y1f);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance;
    }
    glEnd();
}
*/

#ifndef STB_FONTCHAR__TYPEDEF
#define STB_FONTCHAR__TYPEDEF
typedef struct
{
    // coordinates if using integer positioning
    float s0,t0,s1,t1;
    signed short x0,y0,x1,y1;
    int   advance_int;
    // coordinates if using floating positioning
    float s0f,t0f,s1f,t1f;
    float x0f,y0f,x1f,y1f;
    float advance;
} stb_fontchar;
#endif

#define STB_FONT_times_bold_23_latin1_BITMAP_WIDTH         256
#define STB_FONT_times_bold_23_latin1_BITMAP_HEIGHT        150
#define STB_FONT_times_bold_23_latin1_BITMAP_HEIGHT_POW2   256

#define STB_FONT_times_bold_23_latin1_FIRST_CHAR            32
#define STB_FONT_times_bold_23_latin1_NUM_CHARS            224

#define STB_FONT_times_bold_23_latin1_LINE_SPACING          15

static unsigned int stb__times_bold_23_latin1_pixels[]={
    0x4c000000,0xa9800009,0x55500002,0x002aa000,0x0000aaa0,0x51000555,
    0x00000005,0x00000000,0x98000000,0xcdeeeccb,0x00355100,0x2a005544,
    0x005ffd32,0x2b83ff50,0x017fc400,0x007fe600,0x0017fee0,0x88001fee,
    0xfe8002ff,0x1bb3003f,0x36e601ea,0x3200bbcd,0x336e202d,0xa93ea02c,
    0xdddb9107,0x7ffdc039,0xfb00793f,0x2ffe400b,0x2ffb85d0,0x701fd800,
    0x05f9800b,0x0017dc00,0x00fe77c4,0x80017dc0,0xfa8003fa,0x4f9807ec,
    0x37b903d4,0x2fb80b20,0x80fe4bb0,0x2a1ea7fe,0x13fa21ff,0x4fffffea,
    0x01fb002c,0x03fbbf30,0x05ff70bb,0x7401f880,0x007cc004,0x20005d00,
    0x4001ae5d,0x07b0005b,0x1ec4ba00,0x0f50bf20,0x0aa00bd1,0x27c437c4,
    0x93ea09f7,0x417fdc7a,0x7fec5ff8,0x00593fff,0x926c016c,0xfb82fc8b,
    0x00c4002f,0x00001fdc,0x05000000,0x00000013,0x20620000,0x2a1ff402,
    0x64005e87,0xfa87f980,0x4001711f,0x81ffe27a,0x3ffe2ffd,0x00593fff,
    0x22828800,0x5ff707f8,0xaaa83993,0x815550aa,0x6e4407f8,0x1001cddd,
    0x039bbbb9,0x37777220,0xddd9301c,0x6f6dc39d,0x9dddd931,0x98ef6dc3,
    0x21ceeeec,0x7e41dedb,0x21723d44,0x20aa8cc8,0xfd06fa83,0x2aaa805f,
    0x05ffd9ea,0xffe9ffee,0x00593fff,0x7764c024,0x0df71cee,0x3f777fee,
    0x0bffe22f,0x40bfa05f,0x3fa21ffa,0x10ffd404,0xffa809fd,0xe813fa21,
    0x20d505ff,0x0d505ffe,0x35417ffa,0x23d45fb8,0x6c67cc0f,0x3f20e0ff,
    0x09fff305,0x4f53ffc4,0x3ea04ffe,0xffff90ff,0x4c00b27f,0xbffb002f,
    0xff704fe8,0xf707fec9,0xfb02c49f,0x305ff70b,0x3fee0bff,0x705ff982,
    0xbff305ff,0x4413ff60,0x209ffb05,0x09ffb058,0x227d4162,0xff11a67a,
    0x5091bfa1,0x3fb2e09f,0x4ffb00df,0x07fff17a,0xf98fffcc,0x0593ffff,
    0x64017f20,0x827fc4ff,0x3fee2ffb,0x2a87ffc2,0xff11bf60,0x217fec0f,
    0x3f607ff8,0x03ffc42f,0xffb05ffb,0x7ec16209,0x360b104f,0x20b104ff,
    0x971440ec,0x13fe3fe8,0x9ea1ba07,0xffb05ffc,0x3fff8bd4,0x98bffe60,
    0x0593ffff,0x003fff10,0x7fc49ff9,0x545ff704,0x9ffdc3ff,0x363fe404,
    0x3fee05ff,0x702ffec7,0x5ffd8fff,0x361ffee0,0x20b104ff,0x0b104ffd,
    0x2c413ff6,0x36003322,0x7cc3fe62,0xdc881c1f,0x1ff71ba1,0xf3d4ffb0,
    0x7fd409ff,0x93eb981f,0x9fff7005,0x449ff900,0x5ff704ff,0x3e227fd4,
    0x7e4048ef,0x5027ff47,0x7ff41fff,0x83ffea04,0x3ea04ffe,0x27fec0ff,
    0x9ffb0588,0x7fec1620,0xbd88b104,0x3f60f800,0x0511ff66,0x85ff0edc,
    0x27fd82fc,0x817ff67a,0x9dc07ffb,0xffad802c,0x27fe400f,0x7fdc13fe,
    0x320bfea2,0x7ec01dff,0x80fffe26,0xff11fff9,0x7ffcc07f,0x407fff11,
    0x7ec1fff9,0x360b104f,0x20b104ff,0x0b104ffd,0x41d003b6,0x8bff34fe,
    0xf70db00b,0x6c07d47f,0xff99ea7f,0x00fff206,0x5500b277,0xf900fffa,
    0x704fe89f,0x0ffdc5ff,0x6c037fcc,0x0fffe25f,0xf12fff98,0x7fcc07ff,
    0x07fff12f,0x3617ffcc,0x20b104ff,0x0b104ffd,0x2c413ff6,0xb3d44fa8,
    0x7e467fc3,0x7d40aa3f,0x8dffe884,0x54ffb03d,0x4417fec7,0x93b806ff,
    0x3fee5805,0x227fe407,0xdff705fb,0xfd817fa3,0x7c3fe803,0x3fea04ff,
    0x813ffe1f,0x3fe1fffa,0x3ffea04f,0x8827fec1,0x209ffb04,0x09ffb048,
    0x22fdc122,0xffe8ee7a,0x4552ff8e,0xfb02fdc2,0x3fec07ff,0x43dfb0f5,
    0xb800efd8,0x11d40593,0x7e405fff,0xb83fc44f,0x0dfeebff,0x3e003ea0,
    0x02ffec0f,0xffd8fff7,0xb1ffee05,0x7fdc0bff,0x304ffd87,0x413ff609,
    0x09ffb049,0x227e4126,0xdfa9667a,0x5437bd50,0x2e037d41,0xffb00eff,
    0xdfda83d4,0x7000befc,0xcdd80b27,0x206ffecc,0x2fc84ffc,0x0112ffb8,
    0x0fea0160,0xfc81bfe6,0x037fcc3f,0xff987ff9,0x20fff206,0x07505ffb,
    0x1d417fee,0x7505ffb8,0x8f50ffa0,0x8388003b,0xffa807f9,0x3d4ffb04,
    0x007ffea0,0x4c0b2770,0x01fff884,0x17a09ff9,0x2a00bfee,0x0bd00351,
    0x7c417fec,0x05ffb06f,0x3f60dff1,0x06ff882f,0x0720bff5,0x1c82ffd4,
    0x320bff50,0x7a85fb01,0x122000d8,0x26f83fc4,0x7fd8c5f9,0x3fee01ea,
    0x2c9dc006,0x3ff603b0,0x209ff905,0x17fdc2e8,0x402dbe60,0x1efc806a,
    0xf9006fec,0x00dfd83d,0xbfb07bf2,0x217fec01,0x17fec04b,0x5ffb012e,
    0x13ea04b8,0x007910f5,0x81fd4095,0xfb8fe27f,0x01ea5fc9,0x04df7fe4,
    0x54164ee0,0x0bffea07,0x57017ff6,0x2201ffec,0x1d401dff,0xd7bfd500,
    0x3faa007d,0x5003eebd,0x07dd7bfd,0x37bfff20,0xdfff9003,0x3ff2007b,
    0xe9803def,0x64c0f50c,0x1cba98ab,0xfb80fb20,0x5fcc5daa,0x801ea0fd,
    0x401ccca8,0xffb81319,0x7ffed41d,0xffff732f,0x55530037,0x00288055,
    0x00198000,0x20000cc0,0x06200019,0x00018800,0x10400062,0x26aa6005,
    0x26000800,0x1035101a,0x00000005,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00555000,0x8800d540,0x0aaa00aa,0xb3015540,0x500076a5,0x4b660035,
    0xbda801da,0x2aa00070,0x4b722001,0x436e001a,0x5530004c,0x76450001,
    0x9db710bd,0x0385ed40,0x076a5b30,0x37fb2a20,0xff3048ac,0x1ff50003,
    0x813ff600,0x7cc01ff9,0x75bf201f,0x3fe6004f,0xd6fc800f,0xfffa809f,
    0xfa8002ff,0x3ff6000f,0x7fc007ff,0x8001ff9b,0x2a8004fe,0x2fe40ffa,
    0x2fffffa8,0x3fadf900,0x177f4404,0x7d40dfb5,0x01fd8003,0x01fbbf30,
    0x3f2027cc,0xda96cc01,0x3eff6001,0xb52d9804,0xfda9c801,0x03fb0004,
    0x2eeb9c80,0x5c86dc00,0x004f8800,0x703fe8b0,0x36e720bf,0x4b66004f,
    0x3fa201da,0xa80dd00e,0x001f8006,0x4c04c8fa,0x0000f406,0xf98f5400,
    0x00000001,0x0001f800,0x00000000,0x488002dc,0x5fb81ff4,0x00000000,
    0x4c03ffd1,0x00000006,0x00028188,0x3bbb2600,0x37b6e1ce,0x01881301,
    0x2a155555,0xdddb50aa,0x03bdd905,0x37220000,0x1001cddd,0x039bbbb9,
    0xdb880000,0xb81ff42e,0x0004805f,0x3ffd4024,0xeeec99c0,0x25eeeeee,
    0xeeeeeec9,0x3b265eee,0xeeeeeeee,0x3bbbb265,0xdddd931c,0x05ffe839,
    0x402400d5,0x17c2fff8,0x207fffa2,0x7776dc6a,0x17764c2d,0xfd10ffd4,
    0x21ffa809,0x24004fe8,0xff8ce980,0x7dc0ffa3,0x0017cc05,0x7e402f98,
    0xffd8005f,0x361fea64,0x1fea64ff,0xfa993ff6,0xb05ffd87,0x3ff60bff,
    0x2600b104,0x4ffb802f,0x7ffe4162,0x7d42c40e,0x20be04ff,0xff982ffb,
    0x305ff705,0x3e600bff,0xf99fd802,0x5c0ffa6f,0x02fe405f,0x7c05fc80,
    0xfc8004ff,0xfc87884f,0xfc87884f,0xfc87884f,0x09ff904f,0x2c413ff6,
    0xf005fc80,0x640aa1ff,0x0585fffb,0x12a0fffb,0xfd81ffe2,0x03ffc42f,
    0xf9005ffb,0xc8ff880b,0x40ffa3e9,0x3fe205fb,0x7fc4001f,0x7fff101f,
    0x49ff9000,0x93ff2161,0x93ff2161,0x13ff2161,0xfd827fe4,0x100b104f,
    0xf7003fff,0xf948127f,0xf10587ff,0xb01d07ff,0x7fdc0bff,0x702ffec7,
    0xff880fff,0x23fea01f,0x2e07fd04,0x3ffee05f,0x7ffdc004,0x017ffa04,
    0x2593ff20,0x964ffc80,0x964ffc80,0x904ffc80,0x3ff609ff,0xf700b104,
    0xff1009ff,0xfb24091d,0xf902c5ff,0xe815c1ff,0x3fea04ff,0x813ffa0f,
    0x2e00fffa,0x3f204fff,0x07fd02cf,0xfad817ee,0x2b6000ff,0xff900fff,
    0x9ff9000d,0x9ff901e2,0x9ff901e2,0x9ff901e2,0x6c13ff20,0x00b104ff,
    0x001fff5b,0x2403bff9,0x161fffd1,0xb14fff88,0x80fffe20,0xff11fff9,
    0x7ffcc07f,0x3ffeb601,0x40dff700,0x0bf703fe,0x01fff4aa,0x07ffd2a8,
    0x0003ffea,0x0ff9bff9,0x7fcdffc8,0x7e6ffe40,0x827fe407,0xffb04ffc,
    0x55016209,0x2600fffa,0x262406ff,0x4058efff,0x01c8fffb,0x4c07fff1,
    0xfff12fff,0x17ffcc07,0x07ffd2a8,0x2183ffe6,0x0bf703fe,0x007ffb96,
    0x903ffdcb,0x21cc0bff,0x07ecdffc,0x3f66ffe4,0x3b37ff20,0x827fe407,
    0xffb04ffc,0x4b012209,0xfb007ffb,0xffa84807,0xffe805df,0x27ffc04e,
    0x7c3fff50,0x3fea04ff,0x7fdcb01f,0x2fbff207,0x5c0ffa4c,0x3e23a85f,
    0x11d402ff,0x7e405fff,0x206d40bf,0x80f14ffc,0x80f14ffc,0x80f14ffc,
    0xff904ffc,0x413ff609,0xf88ea049,0x0fa802ff,0xfffc8240,0x0fffa805,
    0x702ffec0,0x5ffd8fff,0x541ffee0,0x40bffe23,0x744ffff8,0xb0bf703f,
    0xdffd999b,0xecccdd80,0x76d406ff,0xf904eddf,0xf9022c9f,0xf9022c9f,
    0xf9022c9f,0x13ff209f,0x3a82ffdc,0x3b333760,0x00b006ff,0x02ffec09,
    0x2007ffc4,0x3f206ff9,0x037fcc3f,0x37607ff9,0x06ffeccc,0x3fa03155,
    0x498bf703,0x301fff88,0x03fff109,0xf90032e0,0xc8b10c9f,0x458864ff,
    0x58864ffc,0xfc827fe4,0x0bff504f,0x4424c072,0x51a81fff,0x2201b003,
    0xff8805fe,0x2ffd800f,0xfb06ff88,0x0dff105f,0x3ffe2126,0x3fe80481,
    0x01d8bf70,0x0760bffb,0xd802ffec,0x27fe402f,0x27fe44c8,0x27fe44c8,
    0x27fe44c8,0x3604ffc8,0xb025c2ff,0x317ff603,0x17c016df,0xf100bf10,
    0x3f2001ff,0x006fec1e,0xdfd83df9,0x3f603b00,0x7402445f,0x54bf903f,
    0x0bffea07,0x7ffd40f5,0x402f9802,0x7e4c5ffd,0x262ffec3,0x2ffec3fc,
    0xffb0ff26,0x017ff60b,0x07bdfff9,0xfff503d4,0x00effc45,0x402fbf6a,
    0xfff9805a,0x37faa001,0xd5003eeb,0x407dd7bf,0x3ffea07a,0x3b2006a2,
    0x9db710ad,0xb5077fee,0x3ee5ffff,0x7fed41df,0x0f6e02ff,0xeffffb98,
    0x732ffffe,0xffddffff,0x3fee65ff,0xffffeeff,0x7ffff732,0x3fffee63,
    0x400c401b,0x6d41dffb,0x0a22ffff,0x10040000,0x15bfffd5,0x00019800,
    0x7fdc00cc,0x7ffed41d,0x0000002f,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x70000000,
    0x4c813219,0x0a800791,0x99800800,0x00998000,0x0000154c,0x4c401aa8,
    0x26000001,0x0662000b,0x31001988,0x00aa6013,0x19880cc4,0x01aa8000,
    0x40002000,0x0ffaaff8,0xffa9ff98,0x03b7b000,0x802bb220,0x7dc006fc,
    0x17ff401f,0x0bbf7ae0,0x4c06ffb8,0x8f5002ff,0x05abb82f,0xfa813fe0,
    0x0efc801f,0x802fff88,0x5ff304ff,0xfb81fe40,0xeca8806f,0x30771dee,
    0x37212619,0x8ae409b0,0x2255004d,0x6cee4404,0x3fb00eea,0x200ff400,
    0x3606ecfb,0x103ff14f,0x9805f9df,0x4cd7005f,0x0072580f,0x3ea013ea,
    0x900fe804,0xfa80dd9f,0x882fcc04,0x77c40fff,0x3fe602fc,0x09bfd30c,
    0x0001f74c,0x46c40000,0x447e402b,0x26c03f15,0x4401f880,0xf107b12f,
    0x642ffc7f,0x3ea01aa5,0x1ea4d800,0xd802cddc,0x301aa004,0x447e203f,
    0x4013602e,0x7ff880fa,0x4c1aa5c8,0x4ff983ff,0x309f9910,0x239dddd9,
    0xeeeeeec9,0xfa805eee,0x589ff803,0x2005006e,0x28188018,0x3fa2ffa8,
    0x80098285,0x322e8009,0x4002ea05,0x200a8002,0x06026018,0x804c0028,
    0x098286ff,0xf983ffcc,0xf70c82ff,0x417ff605,0x3ea64ffd,0x802f9807,
    0x4225bfff,0x5551aaa8,0xa8d55445,0x2aaa22aa,0xfa855551,0x540bfe2f,
    0x65400bdc,0xfcca80bd,0xa84eeccd,0x65400bdc,0x665400bd,0x80332a00,
    0x32a00cca,0x372a00ad,0x504fd80a,0xff7015b9,0xdff9d10b,0x07feaa20,
    0x7e413ff2,0xc807884f,0xfffc805f,0x4cfff206,0x9ffe46ff,0x7fe46ff9,
    0xfa8dff33,0x881ee8af,0x103ff73e,0x507fee7d,0xbf999fb9,0xffb9f449,
    0xff73e881,0x3e63f203,0x3f98fc83,0x83f98fc8,0x80ee8afd,0x40ee8afd,
    0x8afd82fb,0x27fec0ee,0x07ffd4ec,0x1bfeb3f2,0x7e413ff2,0x4405864f,
    0x74401fff,0xfa81efff,0xf51bfe3f,0x2a37fc7f,0x51bfe3ff,0x0bfa25ff,
    0x13fe2bf9,0x27fc57f2,0x903e26b8,0x213fe2bf,0x09ff15fc,0x50ff4df5,
    0xf50ff4df,0xff50ff4d,0x9fea37dc,0x207cc6fb,0xf1bee7fa,0xf31d89ff,
    0x937dc3ff,0x4ffc81ff,0x12c9ff90,0x04fffb80,0x85ffff90,0x1bfe3ffa,
    0x37fc7ff5,0x6ff8ffea,0xff717fd4,0xbff2fe41,0x2ffcbf90,0x321aa4d8,
    0x3217fe5f,0x3a17fe5f,0xfe8ffa4f,0x4fe8ffa4,0x26fc8ffa,0x9bf21ffa,
    0x21e21ffa,0x47fea6fc,0x8b23fff8,0x3f61fff9,0xf90bfee6,0x53ff209f,
    0x3eb60078,0xff5000ff,0x1ffd41ff,0x3ffa8dff,0x7ff51bfe,0x3fea37fc,
    0x2107fee2,0x2105ffd9,0x54c5ffd9,0x2aedaadf,0x05ffd984,0x217ff661,
    0x4ffeeeff,0x3ffbbbfe,0x3fbbbfe4,0xfa97fe4f,0xfa97fe3f,0x2ffc2c3f,
    0x7ff47ff5,0x7ffa8774,0x9ff52ffc,0xf904ffc8,0x200ff9bf,0x007ffd2a,
    0xa8bffba2,0x51bfe3ff,0x237fc7ff,0x1bfe3ffa,0x7fdc5ff5,0x7fcf6c43,
    0xff3db105,0xfffffc8b,0x76c47fff,0xdb105ff9,0xff88bff3,0x817fe205,
    0x3e205ff8,0x453fea5f,0x13fea5ff,0x2a5ff885,0x37ff64ff,0x25ffb84a,
    0x3fea5ff8,0xc827fe43,0x007ecdff,0x703ffdcb,0x527f46c4,0x237fc7ff,
    0x1bfe3ffa,0x37fc7ff5,0xffa8bfea,0x7fc3fe62,0xff0ff985,0x82f8f50b,
    0x0bff0ff9,0x17fe1ff3,0xfe803ffa,0x03ffa00f,0x3fea5fe8,0xffa97fa1,
    0x2a5fe801,0x3ffe61ff,0xf87ffb05,0x90bfea5f,0x3ff209ff,0x47500f14,
    0x4d02fff8,0x7cc3f958,0xf31bfe3f,0x2637fc7f,0x51bfe3ff,0xff3515ff,
    0xff8b7ec1,0xff16fd85,0x07ccd70b,0x5ff8b7ec,0xbff16fd8,0x2285ff90,
    0xf9142ffc,0x9bee285f,0x737dc7fb,0x5c3fb8ff,0x321fee6f,0x5ff882ff,
    0x3fee6fd8,0xc827fe40,0xb01164ff,0xdffd999b,0x6eac53e0,0x7eceffc4,
    0x4effc47f,0x7fc47ffd,0x5c7ffd9d,0x5f8fdaff,0x7feefffc,0x6efffc2e,
    0x526c2eff,0x377ffe0f,0x7ffc2eff,0x542effdd,0x544acfff,0x544acfff,
    0x444acfff,0x889f90ff,0xf89f90ff,0xc87fc47f,0x0eff884f,0x7f882fec,
    0x3ff20ff2,0x0c9ff904,0xf88498b1,0xcefc81ff,0xffb80bde,0x5c3fff9f,
    0x3fff9fff,0x7fcfffdc,0x35ffd33f,0xffb81bbd,0xfb83ff74,0xe83ff74f,
    0x7fdc1722,0xfb83ff74,0x503ff74f,0xf501bfff,0xff501bff,0x7bf301bf,
    0x2f7e609f,0x985fd84f,0x3b04fbdf,0x7bd99dd5,0x3ebde980,0x3209ff90,
    0xd89904ff,0x40bffb01,0x008805a9,0x08800220,0x00000000,0x00441800,
    0x4c000000,0x98009800,0x10018800,0x0c400803,0x00330530,0xffd80110,
    0x98bffb05,0xa81ea3fc,0x00c02fff,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0xfffb9800,0xfff731bf,0x5ffffddf,
    0xb5077fee,0x0005ffff,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x0b32e200,0x132009b0,0x66ff6544,0x0fbaa48a,0xeb881f88,0x2203aa00,
    0x07e200eb,0x01efe4c0,0x6e4400fa,0x4401cddd,0x2a00cfdb,0xdb800bdd,
    0x2b9beeee,0x33bb6e20,0x2ee6000a,0x4e7f6d41,0x0cedc883,0x02cfcb98,
    0x0033b362,0xb8fd87ea,0x400d703f,0x2efe882f,0x4dcdbf6a,0x209b00fe,
    0x5f100fea,0xd803faa0,0xf11f7004,0x402dc03f,0x3fa21ffa,0x3ffff604,
    0x1ba3f706,0x261cfe98,0x7d502ffc,0x200764c1,0x0de80dfa,0x6e88bf71,
    0x8fc41df3,0x2dd03ffa,0x7fc404fc,0x1beaff11,0x3cc007e2,0xe8077f44,
    0x0d703e86,0x09b00fe8,0x0d700fe8,0x09f93740,0xff7007c4,0x70bff305,
    0x85ffd515,0x213f27f9,0x3f206ff9,0x74c05a82,0x2a0bf300,0x7ec6c82f,
    0x3fb9bfa5,0x5be61bfe,0x7fec07fb,0x3fe6ff71,0xb90026c0,0x201ffe88,
    0x03bfa269,0x0fe803f1,0x7f400fa8,0x5001f880,0x003ee1ff,0x1ffe205d,
    0x20c2ffd8,0x37e42ffb,0x3ffd0ff7,0xcad42e80,0xd31ddbef,0x7ec0ff30,
    0x27fc5885,0x93ee1ffb,0xbfe40ffe,0x3fb203d8,0x3eaff31f,0x3a0035c6,
    0x403ffd42,0x361fec43,0x440fe804,0x80fe802f,0x3fea004d,0x5b803e9b,
    0x5c0bffb0,0x37d407ff,0x1ff737f4,0x4c037fe4,0x16f88ec1,0xff10e4df,
    0x06ffec09,0x324ff986,0xff8262ff,0x800ffe86,0x3a1ffbd9,0x3e24fa8f,
    0x903e2001,0x22000bff,0x7401ae1f,0xe8026c0f,0x20035c0f,0x260cfff8,
    0xe83cc199,0x3fea04ff,0x203f600f,0x8bfee6ff,0xd0005ffe,0x0ff8b7c4,
    0x667fd475,0x7fffdc0c,0x25ff880c,0xdf504ffb,0x805ffb01,0x21ffb8e8,
    0x360cdbd9,0x7c2dc004,0x3b6004ff,0x007e24aa,0x0fa8bfa2,0x222fe880,
    0x7fd4001f,0x4177dc5f,0x1fffc42e,0x503fff30,0x7c41bffd,0xf8ffee6f,
    0x498004ff,0x8ff23be2,0x32fff268,0x7ffec4ff,0x27fd83ff,0x1dd02ffb,
    0xffffffc8,0x3fee3b04,0x4c6b8081,0x887d00bb,0x22003fff,0x2d84d819,
    0x7c44cccc,0x3307b912,0x36136133,0xff9be982,0x6407e23f,0x01fffc44,
    0xd505fff3,0x7fccbfff,0x7c53fee6,0x498003ff,0x213f7be2,0xffd9bfe6,
    0x7ffffdc0,0x6c67fdc4,0x505980ff,0x059dffb9,0x00ffdc77,0x73f90fc4,
    0xe80f885f,0xb80005ff,0xd802fc86,0x00bff364,0x30bf21ae,0x8fffdcdf,
    0x3e1e604a,0x3fea04ff,0x9ffee01f,0x3fee6ff8,0x2613ffa2,0x9a3deeed,
    0x20ff8ef8,0x54dff149,0xffd882ff,0x77ecc0ff,0x801507fe,0x3d303ff8,
    0x015ff933,0x4c7fc4d8,0xfc835c6f,0x7c40006f,0x2017edc1,0x1fd420fa,
    0xfb707e20,0x7ec6fc85,0x1f8059ef,0xf702ffec,0x1ffb00ff,0x3ff737fc,
    0xf8837fe4,0xf886c3ff,0xf15c9f76,0x3a7fccdf,0x203ffe98,0x00304ff8,
    0x7fdc0bf6,0x03ffffff,0x31ff51aa,0xa81ec1ff,0x20000fff,0x17d5d44d,
    0x3ee05f10,0x2ea26c00,0x0fffc2fa,0x003ffff1,0x06ff9899,0x2a00fff2,
    0xf737ec6f,0x03ffd41f,0x94b85fff,0x22bfa5ff,0xf99ffa0e,0xff101d3f,
    0x0077dc09,0x183f9100,0xfffffff7,0x307e207f,0x21ff31ff,0x3ff201f8,
    0x35c0e605,0x80fee766,0x803d105d,0x7dcecc6b,0x5077ff43,0x02a3dfff,
    0x0bff61aa,0x1511bfe2,0x3fd43f98,0x7ff90bf9,0x320bffe0,0x3311999c,
    0x30ffc83d,0x6c13e3ff,0x01df302f,0x7f4417a6,0x04cbacff,0x4d807fee,
    0x4bf51fd0,0xbffc806a,0x7c406d40,0x7ffffd41,0x3b00fa80,0x2a0fc40a,
    0x2a0fffff,0xecabefff,0x104effff,0x83df903f,0x77dc0dfd,0x87f41722,
    0x3ff901fe,0x3205fff0,0xd01ea81c,0xff93ea7f,0xf982fc42,0x0bff600e,
    0x7ffff46e,0x07fee01f,0x95f50354,0xa8026c3d,0x04eddfed,0x05f50136,
    0x3ff605f1,0xa809b06f,0xfffdb82f,0x0bffd32e,0xbfd503d8,0x3a607dd7,
    0x2203deff,0x4c01fcdd,0xdfdbcefd,0x37b6e00a,0x36201ced,0x6e744ebf,
    0x540cfccf,0xffa801bb,0xeaedd980,0x7fdc03ff,0x55003901,0x31000150,
    0x88048801,0x5103a80a,0x09103555,0x4c401510,0x33001300,0x44003300,
    0x00220009,0x00026620,0x80c0004c,0x22026620,0x08008000,0x0000000c,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0xdddb0000,0xdca885dd,0x3620002c,0x32205b34,
    0xb701a8be,0x2a203723,0x2606aa0a,0x4eeeeeee,0x2a155555,0xdddd70aa,
    0x3eeda859,0x45720b6a,0x4c00004d,0x404cc019,0x775c0aa8,0xdddb34ee,
    0x31ddb87b,0x439dddd9,0xda81dedb,0x200bdeee,0x0aceedb8,0x033bae20,
    0x7fffffcc,0x7dc3fe20,0x2a0b9104,0x906fc8ff,0x201fffff,0x82ff8cff,
    0xbff12ffb,0xffffff90,0x0bffe27f,0x0fffb85f,0x7ff88fe0,0x3fd4ffcc,
    0xff700480,0x20bfe601,0xffc84ffd,0x82fff447,0x05ffe83d,0xfff880d5,
    0x305f5403,0x3ffa01d9,0xeec80eff,0x2fe44eee,0x7ecc1ff1,0x2279105f,
    0xbb51902d,0x4b86d405,0x3e25ff70,0xffffe85f,0x3fee0fff,0x7ffc1624,
    0xbfd0d103,0x00f62990,0x7dc00be6,0xf305f903,0xff881fbb,0x83ffdc1f,
    0x209ffb05,0x2fff8058,0x541116a0,0x7ed65c0e,0xf00683ff,0x98ffc1ff,
    0x0005ffca,0xb8000000,0x0bff12ff,0xf86d813d,0x320550ff,0x105706ff,
    0xfc800005,0x7c1b2005,0x42647d02,0x7fc44ffd,0xfd82442f,0xf00b104f,
    0xb96a05ff,0x698ecacf,0x513ff214,0x7ec0379f,0x987f88df,0x555445ff,
    0x2a055551,0x65400bdc,0x5ff700bd,0x01117fe2,0x7ff707f1,0x2fff8812,
    0xca802058,0xfff8800c,0x0620a001,0x7d4140c4,0x2fff40ff,0x27fec06e,
    0xfff80588,0x0bf23b02,0xfa80721b,0x7fffec2f,0xefffa82e,0x5ff881ed,
    0xff33ffc8,0xff73e88d,0x3ee7d103,0x12ffb81f,0x3ea00bff,0x48eff880,
    0x2a2ffec0,0x47e41202,0x7fdc03f9,0x5554c04f,0x202aaa60,0x3e00aaa9,
    0x3ffa23ff,0xffd8160f,0xff00b104,0x7fcda05f,0x203a8440,0x7ffc0ffa,
    0xfa83ffff,0xff102fff,0x7c7ff50b,0xf8afe46f,0xf15fc84f,0x25ff709f,
    0xdb005ff8,0x00effe40,0x0583ffe6,0xfd37d43c,0x7ffd6c03,0x217fec00,
    0xffb02ffd,0x737fe405,0x0e67ffd3,0xb104ffd8,0x305fff00,0xd101bee9,
    0x4cc2fe40,0x80ffffca,0x882ffffd,0x3ffa85ff,0x4bf91bfe,0x25fc85ff,
    0x2ffb85ff,0x880abff1,0x1bfe603f,0x39a7ff40,0x9fd03e20,0xd2a81ff4,
    0xffb807ff,0xb817fdc2,0x3fe202ff,0x5bfeeb1f,0x13ff600c,0x7ffc02c4,
    0x0df74982,0x007740d0,0xd317fec4,0x81fffd1d,0xffa85ff8,0x4c21bfe3,
    0x26105ffd,0xffb85ffd,0x0afffeac,0xfb003ea0,0x5ffea007,0xf0bea00d,
    0x09ffdddf,0x407ffb96,0x7fdc2ffb,0x805ff702,0xf13acffd,0xfd80b5ff,
    0xf009104f,0x7c5a05ff,0x5c12600f,0x1fec001f,0x3ffa27fd,0x542ffc42,
    0x21bfe3ff,0x05ff9ed8,0x0bff3db1,0xf71dfff7,0x806d809f,0x3fe000fa,
    0x27e404cf,0x2a00bff1,0x80bffe23,0x7fdc2ffb,0x805ff702,0x7ec5fffa,
    0x7fec02ff,0xf8109304,0x361b01ff,0x10570c2f,0x3f50003f,0xffb8bfe2,
    0x542ffc43,0x31bfe3ff,0x217fe1ff,0x0bff0ff9,0x00881179,0x05801fc4,
    0x007ffdc0,0x1ffd17fa,0xd999bb00,0x7fdc0dff,0xb817fdc2,0xfff802ff,
    0x403ffd44,0x87505ffb,0x03ffe6fa,0xaceb8a5c,0x5d01d12b,0x2a0a6198,
    0xff117fc6,0x985ff881,0xb1bfe3ff,0x217fe2df,0x0bff16fd,0x7d4000bd,
    0x006a3501,0xf00bff10,0x42ffc8ff,0x7fc424c2,0x85ff701f,0xff702ffb,
    0x01ff9005,0xff5009ff,0xff90720b,0x9901ffe1,0x207a2198,0x0fdcccec,
    0x3223bff1,0xbf527dc0,0xf10bff30,0x8fffb3bf,0xeffddfff,0x7eefffc2,
    0x003fc2ef,0x5be60db0,0x03fb0005,0x2a0fff88,0xd84acfff,0x20bffb01,
    0x7fdc2ffb,0x005ff702,0x07f20bf1,0x2e17fec0,0xff14f984,0x50399009,
    0xffff703d,0xfffc8dff,0xceb880cd,0xff980cfb,0xf3fff706,0xa7fdc7ff,
    0x7fdc1ffb,0x7c43ff74,0x40fe0007,0x0001dff8,0x1bfe00d3,0x5037ffea,
    0x17ffd40f,0x3ee1ffdc,0x07ff703f,0x034c0b60,0x37bfff20,0x3fb36a03,
    0x37b6e004,0xff981ced,0x105fffff,0x880c4001,0x82cfffeb,0x00000008,
    0x20001980,0x000a2009,0x05440060,0xbff70130,0xffffda83,0x47bffa62,
    0x4c1effe9,0x1801effe,0x188000c0,0x0000c400,0x00000026,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x80000000,0xeeda82da,0x1deec82e,0x0003ddb3,0x000bdd91,
    0x8cdb8800,0x45554c48,0x32601cc9,0xdb82aabc,0xd9101b91,0x764c3517,
    0xd931ceee,0xdddddddd,0x777764cb,0xeeedb89c,0xbddd932c,0x3bb26017,
    0x01bceeee,0x3bb261cc,0x6eeeeeee,0x33bbbb26,0x501ca801,0x76cc15b9,
    0x80fff82e,0xa81fffe8,0x002ffb86,0xb981bfe0,0x077444fb,0x6feba7d4,
    0xfdddffd8,0x44ffcc2f,0xbff85eff,0xffd82ff8,0xffd80fff,0x4c9ffb05,
    0x6ffd87fa,0xfb07ffc8,0x3ffa009f,0x02ffe98b,0x2ffec0fa,0xffd0fd53,
    0x1ffe200b,0x91bee7f2,0x0dfb05ff,0x2077ffe4,0x02ffb858,0x441bfe00,
    0x7dc5ff6f,0x887fcc3f,0x4ffb86ff,0x6fc83ff6,0x86d417fa,0xbb51904b,
    0x413ff205,0x87884ffc,0xffb85ffc,0x007ffb06,0xff98fff6,0x903fd80f,
    0x361e0bff,0x3fe004ff,0xff8b7d46,0x0c0bfea2,0x17ffef20,0x00bfee16,
    0xf906ff80,0x1dd10aad,0x37fc6fd8,0xff717fdc,0xfc97fe25,0x40000007,
    0xff904ffc,0xff90b0c9,0x20dff709,0x1bcceffc,0xff87ff90,0x37ff622f,
    0x22ffe41a,0x09ff9090,0x3f205cc0,0xffa83724,0xf9480102,0xfb8587ff,
    0x201cb8af,0x06ff8cda,0x3e000dff,0x5c37fc6f,0x8ffea2ff,0x81bf65ff,
    0x2a00adca,0xff900adc,0x593ff209,0x213ff202,0xff906ffb,0x909ff939,
    0x7ffc47ff,0x337ff6a0,0x712ffe42,0x013ff202,0x5013fe00,0x900e05ff,
    0x0b17ffec,0xff9bdff7,0xfb5bfb05,0xeffa88df,0x05554c0a,0x6ff8bff1,
    0x3ea2ffb8,0xfe9fee4f,0xdd15fb03,0xdd15fb01,0x209ff901,0x80f14ffc,
    0xffb84ffc,0x6c7ff906,0x1ffe42ff,0xff509ff9,0xb97ff207,0x013ff203,
    0x80bff100,0x04882ffa,0x1fffd124,0xd8ffee16,0x43fee0ff,0x7e4c6ff8,
    0xffd80cff,0x3fe37fc2,0x2a2ffb86,0x6efcc2ff,0x5cff502e,0xf73fd46f,
    0x209ff90d,0x07fcdffc,0x66677fe4,0xf906ffdc,0x22ffdc7f,0xdfedeffc,
    0x207ff500,0x3fcaeffc,0x0013ff20,0xa803ffa0,0x017442ff,0x1dfff312,
    0x5c5ff70b,0xf1bfa2ff,0x81bfe0df,0x3fec2ffb,0x3fee1bfe,0x5907fee2,
    0x26fc8011,0x9bf21ffa,0x7fe41ffa,0xd9bff904,0xaeffc80f,0x06ffdaaa,
    0x7fdc7ff9,0x5d67fe46,0xffa82dff,0xd9dff903,0x27fe407f,0xfb87fb00,
    0x5ff50c4f,0x424037cc,0xb85dfffa,0x93fea2ff,0x837fc6ff,0x3fee06ff,
    0xfa9ffd42,0x1effb86f,0x01fb8bfd,0x7fd4bff0,0xffa97fe3,0xc827fe43,
    0xc80f14ff,0x6ffb84ff,0x7e47ff90,0x11ffe44f,0xffa83fff,0x64bff903,
    0x013ff203,0xf107ffd4,0x541959ff,0x07ff32ff,0x3fff2090,0x2a2ffb85,
    0x8dff13ff,0x0dff06ff,0x7dc17fdc,0xb86ffbff,0x0dfeebff,0x7fffffec,
    0xf52ffc45,0xa97fe29f,0x27fe44ff,0x1164ffc8,0xfb84ffc8,0x27ff906f,
    0x7e40dffa,0x22ffe43f,0xff903ffa,0xff901c4b,0xffd11409,0x1efffa83,
    0xffc97fd4,0x40909d11,0xffb85ffd,0xfe87fea2,0xff837fc7,0x80bfee06,
    0x3ee1bfe1,0x3ea0112f,0x43ffffff,0x87fea5fe,0x07fea5fe,0x3f209ff9,
    0x6458864f,0x6ffb84ff,0xbdddff90,0x70fff207,0x3ffa8fff,0x018bff90,
    0x06813ff2,0xfa816c0d,0x265ffb2f,0xd100d87f,0x45ff70bf,0x1ff20ffb,
    0x1bfe0fff,0xf002ffb8,0x05ff70df,0x95557d50,0x2e6fb8df,0xf737dc7f,
    0x209ff90f,0x89904ffc,0xffb85ffc,0x007ffb06,0xffb0fff2,0x29cff987,
    0xb002ffe4,0x21a609ff,0x01fd1049,0x3fe65ff5,0x80be13e4,0x4ffb85f8,
    0x7ff50bfa,0x3e03fff2,0x0bfee06f,0x7dc3ffc0,0x827c402f,0xc87fc44e,
    0xc87fc44f,0x05ffd84f,0xfc98bffb,0x5c2ffec3,0x9ffb06ff,0xb93ff600,
    0x9ff706ff,0x400bff90,0x5f985ffd,0x1f7005cc,0x7e47ff70,0x36a0dabf,
    0x0b500bef,0x5d99d5d7,0x3ebffee0,0x07ff84ef,0x2200ffee,0x7fec0fff,
    0x9acfc803,0x7bf305da,0x2f7e609f,0x7ffdcc4f,0xfff731bf,0x5ffffddf,
    0x2ffffee6,0xcffffb89,0x7ffff732,0x3fff2601,0x003defef,0xbffffb98,
    0x3ffee601,0x4fffeeef,0x05b7100c,0x983dffd3,0x8080000a,0x218004c0,
    0x9fff9101,0x1effe981,0x8aaaaa20,0x802aaaa9,0x8009aaa8,0x00310018,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x4c000000,
    0x200eeeec,0x30bdeeea,0x419dddd9,0x262deed9,0xacdeeeec,0xddd93009,
    0xa80399dd,0xeed892dd,0x4c7b6a4e,0xcceeeeec,0xd8ae401b,0x77777444,
    0x2e2eeeee,0x4c2deeed,0xddb32eec,0x3b6617dd,0x7ddb10ce,0x03eed880,
    0xeeeeee98,0x00eeeeee,0xeeeeeb98,0x265eeeee,0xacdeeeec,0x3f600001,
    0x3ffa04ff,0x0dffb02f,0xffe813ea,0x01ffd98c,0x3f273ff6,0xffff105f,
    0x0fff889f,0x9fff41ec,0x980dffc9,0x20ffa9ff,0x7ff41cf9,0x04fffa86,
    0xffff30be,0xff507f30,0x09ff5009,0x3f639f30,0x001fb34f,0x98b7fef4,
    0xbffe86fb,0x400efe99,0x2398cdca,0x7307ffcc,0x3f203fff,0x402e885f,
    0x7fec4ffd,0x6c9ff901,0xb99a82ff,0x2ffc80ce,0x43ffd834,0x29903ffd,
    0x5c2543c8,0xffb01fff,0x7dc12a0f,0x982643ff,0xff9804ff,0x7ec69804,
    0x9800744f,0x6986ffad,0x3a23ffe8,0x17f901ff,0xff8c8bfd,0xfff8d82f,
    0x98bff901,0x4ffd801e,0x640fffc4,0x1bfee4ff,0x4bff3000,0x87ffb049,
    0x20006ffb,0x27ffc40b,0xd07fff10,0x87ffec01,0x13fe6059,0x2013fe60,
    0x227fec29,0xf51b000b,0xfb0b0cdf,0x0fff987f,0x7fb87fcc,0x237fe464,
    0x203fff58,0x036a5ffc,0x7c27fec0,0x4ffc83ff,0xaa89bfee,0xd02db89a,
    0x6c0721ff,0x37fd43ff,0x080aaa98,0x400fffd8,0x0ae0fffc,0xb1bfff10,
    0x467fcc01,0x4ff982db,0xd8055551,0x570004ff,0x10c9bfea,0xf887ffb0,
    0xb3fdc3ff,0x7c4647ff,0x7fc6e1ff,0x2bff901f,0x7fec006c,0xc85ffd84,
    0x0fff64ff,0xffbdbff7,0x167ff705,0x7e43ffd8,0x0bff602f,0x00bffea0,
    0x2c53ffe2,0x0efffa80,0x6eeffcc0,0x27fcc2ff,0xffb007f5,0x54b10009,
    0xd803e6ff,0x5ffe83ff,0xffbcb7f4,0x2ffec324,0xc80fffcb,0x03ffddff,
    0xceffeca8,0x90fff92c,0x9ff719ff,0xf0eff981,0x3dff10bf,0x99ffec07,
    0x7dc05ffb,0x7ff4402f,0x3ffee005,0x3f6001c8,0x7fcc00ff,0xff317fe6,
    0xfd801649,0x20d8004f,0x0febfffa,0x360fff60,0x3bfe27ff,0x324ff9ab,
    0x751fff50,0xfc80fffc,0x01fffdff,0x4effecc4,0x81fff709,0x1ccdfffc,
    0x7fc9ff30,0x3ffa6666,0x7ec099ad,0x02fffeef,0x6402ffb8,0x74001fff,
    0x44004eff,0x7cc06fff,0xf31bfe4f,0xd800b29f,0x754004ff,0xbfffdccc,
    0x3ff600fd,0x7c7ffc83,0x47ff33ff,0x16fffa0c,0x3f203fff,0x0fffe8df,
    0xc84ffd80,0x4ffc87ff,0x7c9ff300,0x3f73326f,0x6c1cccef,0x5fff8bff,
    0x202ffb80,0x8004fff9,0x4000fffa,0x203fffea,0x1ffa4ff9,0x07f99ff3,
    0x0027fec0,0x4dff50b1,0x0fff600e,0xff91bff2,0x4190ffd4,0x7fc4fffb,
    0x2bff901f,0xd805fff9,0x6ffd84ff,0x3004ffc8,0x837fc9ff,0x7ec05ff9,
    0x05fff53f,0x3a02ffb8,0x405106ff,0x2000fff8,0x01fffb58,0x7fe93fe6,
    0x7ff7ffcc,0x09ffb001,0x7fd40e40,0x7ec082e6,0x45ffd83f,0x89f91ffa,
    0x03ffe20c,0x3f203fff,0x13ffea5f,0xfd09ffb0,0x09ff905f,0xff93fe60,
    0x3ffbbba6,0x7ec1eeef,0x03fff23f,0xf702ffb8,0x80b205ff,0x1000fff8,
    0x1bffe21b,0xffd27fcc,0xff9cff98,0x09ffb006,0x7fd41260,0xffd89066,
    0x10fffc43,0x09f7dd3b,0xf85fc819,0xbff901ff,0x203fffc8,0x7fd44ffd,
    0x009ff905,0x6ff93fe6,0xd80bff30,0x37ff43ff,0xf105ff70,0x07e20bff,
    0x000fff88,0x3fffa83b,0x3fa4ff98,0xfca7fcc7,0x4ffd804f,0x3ea01b00,
    0xfd89706f,0x427fdc3f,0x41d80620,0x7ffc42f8,0x88bff902,0xfb02ffff,
    0x027fccbf,0x2a00bff9,0x41ffe4ff,0x7ec05ffa,0x27ffcc4f,0xfd83ffb8,
    0x0ffb80ff,0x007ffe60,0x7ffec176,0xff27fd41,0x3a4ffa8f,0x7ff401ff,
    0x2a04c804,0x43fb87ff,0x3fea4ffe,0x3f260004,0x3f6a243e,0xf730beff,
    0x3aa19fff,0x730cffff,0x7dddffff,0x3ffee603,0x3f6201bf,0x3fffb9ef,
    0x33fffae6,0x7fffe4c1,0x33ffee0b,0x87bffa60,0xeeeffffa,0x5107fffe,
    0x015bfffd,0x5417ffd7,0xb13ffffe,0xfff73fff,0x47bffa27,0xc982fffd,
    0x881bffff,0x2ea0bffd,0xfeeefffe,0xfff931ff,0x0037dddf,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x2aaaae20,0x201baaaa,0x00540019,0xc88bdb98,0x56e5402d,
    0x40199500,0x5400bdca,0x55440adc,0x3055551a,0x50007599,0x42aaaaa5,
    0x55550aaa,0x23555515,0x0c4532aa,0x2a1ca871,0x55544002,0x5442db89,
    0x0bdb89aa,0xaa985b93,0x21aa99aa,0x5951aaa8,0x55555554,0x00c00622,
    0x02f8009b,0xeefa8be8,0x3f903fb4,0x31f90df7,0xf73e887f,0x22bf603f,
    0x9ffe40ee,0x47e46ff9,0xf91005e9,0x0fffe25f,0x8fffc45f,0x43a26ffa,
    0xbeffdcfa,0xa9ffe25e,0xf7000bff,0x85ffbdbf,0xffcddffa,0x41ffedbd,
    0x20be6ffb,0x6ffacffa,0xffd335f1,0x01800c47,0x05f00136,0x3ffa4fb8,
    0x6fa8df50,0x37d45ff1,0x8afe43fd,0x27fa84ff,0x1ffd46fb,0x11ff8dff,
    0x3efda80b,0x1a24ffb8,0xfff8ffee,0x9dfc8730,0x6ff86fb8,0x016ff5c4,
    0x7fc3bfe6,0xd877fcc5,0x09ff33ff,0x20755ffd,0x3eaceff9,0x237fd491,
    0x6c030018,0x2017c004,0x89ff65fc,0xc93f20ff,0xfe93fa0d,0x5ff97f23,
    0x3fea6fc8,0xff8ffea1,0x819fffc6,0x401dfeb8,0x220aa7ff,0x7ffd36ff,
    0xf50bd032,0x2600b981,0xf980befd,0xf31bfe4f,0x887fec9f,0xeff984ff,
    0x81ffe205,0x883fff10,0x26c03001,0x4600be00,0xeeefffc8,0x013fe2ff,
    0x9ffdddff,0x0bffb308,0x1ffd4bff,0x37fc7ff5,0x9313fff2,0x2e0017ff,
    0x7ec0b3ff,0x96ff8c9f,0x07d01f88,0x6ffdc400,0xff93fe60,0xf927fcc6,
    0x417fe21f,0x3e203ffd,0x4ffc805f,0x2a300188,0xcceecccc,0x999971cc,
    0x019999bf,0x01ffb3d9,0xf102ffc4,0x3db100bf,0x5ff88bff,0xffa93fea,
    0xfb11bfe3,0x67fd4bff,0x3bfe2000,0x33fea039,0x8859ffb4,0x0007d00f,
    0x262ffd98,0x31bfe4ff,0x87fe49ff,0xff105ff8,0x027fc40f,0x2203ffe6,
    0x3bae3001,0xeeeeffee,0xdfdddd92,0x7443dddd,0x807ff90f,0x3fa00ffe,
    0x43fe600f,0x25fe85ff,0x3fea1ffa,0x3211bfe3,0x3ae20fff,0xffb002df,
    0x2fff801d,0x0fa0fff5,0x540007e6,0xff982dfe,0xff31bfe4,0xf887fe49,
    0x7ffd105f,0xb013fe20,0x031047ff,0x004d8060,0x9bf2017c,0x704c5ffa,
    0x3f2189ff,0x2dfb142f,0x6fb85ff8,0x7ff31fee,0xfa9637fc,0x7ffb301f,
    0x027fcc01,0x13fe3fe4,0x0db317dc,0xff9109f9,0x27fcc039,0x4ff98dff,
    0x7fc43ff2,0x1fff1b05,0x5409ff10,0x189226ff,0x026c0300,0xfff00be0,
    0x5dffdb57,0xcfff8877,0x3ffea0ca,0x6fffc4ac,0x7c42effd,0xf889f90f,
    0x47ffd9df,0x2201fe2f,0xfd01dfeb,0xc89f3003,0xffee881f,0x3e23fefe,
    0x2fbf667f,0x24ffa800,0x2ffcc7ff,0x3fe23ffb,0xbff92c86,0x2209ff30,
    0x49911fff,0x6c030018,0x2017c004,0xfd14fffb,0x3fea09ff,0xfffa81ef,
    0xba7fdc0d,0xbdf981ff,0x3fff704f,0x6f747fff,0x6d4001fc,0x7400b503,
    0x35a83cc1,0xfb16a597,0x1000ee4b,0xff73dffb,0x3fff627f,0xd8dfff9a,
    0x9fb32fff,0x449fff91,0xfc82fffd,0x23ffedff,0x6c030018,0x3bbbb604,
    0x41eeeeef,0x20031018,0x00098008,0x88018800,0x00310800,0x10004000,
    0x10000020,0x00000000,0x00000000,0x00188000,0x97015403,0x99999999,
    0x00000019,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x55555571,0x00003755,0x14098000,0x00400802,0x00005026,
    0x00000000,0x00000000,0x44444000,0x08888888,0x33333331,0x80101333,
    0x40998800,0x71026620,0x1da96cc1,0x00000000,0x771a6000,0x07d40fc4,
    0x3a204f98,0x2e401320,0x2e07fd50,0x707ae206,0x9fd707dd,0x3f62fd81,
    0xee893f61,0x30376ae0,0x7fdc1757,0xffffffff,0xffffff93,0x7dc7ffff,
    0x70540bef,0x585fd8bf,0xffd13fa2,0x04feafe4,0x00000000,0x7dc7f100,
    0x7f50fe40,0x36401c80,0xff9807f1,0x0fe9b982,0xfd500fd8,0x07fdecc3,
    0x44dd77fb,0x29ff35ff,0xff71fff9,0x0fe67e65,0x8889769d,0xe8888888,
    0x11111113,0x3a211111,0xbbdffdba,0xdf07ffc5,0x3f44bf50,0x8ecc3ffa,
    0x000000da,0xe8800000,0x7e40fea6,0x00003fa9,0x017e4bf1,0x3e80dbbb,
    0x2dd6a32a,0x0fd80fec,0xf17c45f1,0xe8ffe29f,0x43ff52ff,0x3e63fc9a,
    0xd8001f93,0x106a0003,0xfc83bfd7,0x2f403aa6,0x02d987a2,0x00000000,
    0x2fe88000,0xffc80ff5,0xcccccb83,0x640ccccc,0x505ff15f,0xb107f31f,
    0x2bff61df,0x7ec0ffdc,0x43cc9d01,0xfe8bfa3e,0x8ff10e81,0x3e63f9cc,
    0xd8001f93,0xdddddd73,0x0005dddd,0xc9809810,0x0000880d,0x00000000,
    0x23ff5000,0x7fd405fd,0xeeeeec81,0x541eeeee,0xd0bfb0ff,0x6c407e49,
    0x2772663f,0xb81fd809,0x83e22f85,0x221f20fb,0x77f52f45,0x0b94e87f,
    0x2ee63500,0xbbbbbbbb,0x00000001,0x00000000,0x00000000,0x01fe97ee,
    0x003f97f5,0xf98ff400,0xf107dc0e,0xb907e209,0x07f603d5,0x7e4733b3,
    0x234c5fbc,0x32064c5a,0x0f62f623,0x00017571,0x22220000,0x08888888,
    0x25ddddd5,0xeeeeeee8,0x00003eee,0x00000000,0x223f9000,0x323fa85e,
    0x200dc01f,0x103b62fa,0x361f707f,0x5fe44aae,0x2fe887f8,0x50bfffe6,
    0x510a05db,0x00013018,0x00000000,0xfffffff1,0x3fee7fff,0x77712fff,
    0x37777777,0x00000000,0x40000000,0xf887a25c,0xf300fc83,0x3a62e809,
    0x42601880,0x21930198,0x0999984b,0x00033331,0x00000000,0x80000000,
    0x99999999,0x33331099,0x00000013,0x00000000,0x43b00000,0x80300c59,
    0x1b0ea00a,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,
};

static signed short stb__times_bold_23_latin1_x[224]={ 0,1,1,0,0,1,0,1,0,0,1,0,0,0,
0,0,0,1,0,0,0,0,0,0,0,0,1,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,2,0,0,1,-1,0,0,0,0,0,0,0,0,0,0,
-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,2,2,2,2,2,2,2,2,2,
2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,1,1,0,0,0,
1,0,0,0,0,0,0,0,0,-1,0,0,0,0,2,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,
0,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,-1,0,-1,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
 };
static signed short stb__times_bold_23_latin1_y[224]={ 18,3,3,3,3,3,3,3,3,3,3,5,14,12,
14,3,3,3,3,3,3,4,3,4,4,3,8,8,6,8,6,3,3,3,4,3,4,4,4,3,4,4,4,4,
4,4,4,3,4,3,4,3,4,4,4,4,4,4,4,4,3,4,3,21,3,8,4,8,4,8,3,8,4,3,
3,4,4,8,8,8,8,8,8,8,5,8,8,8,8,8,8,3,3,3,10,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,18,8,4,3,6,4,
3,3,4,3,3,8,8,12,3,1,3,5,3,3,3,8,4,9,17,3,3,8,3,3,3,8,-1,-1,-1,0,
0,0,4,3,-1,-1,-1,0,-1,-1,-1,0,4,0,-1,-1,-1,0,0,6,3,-1,-1,-1,0,-1,4,3,3,3,
3,4,4,3,8,8,3,3,3,4,3,3,3,4,3,4,3,3,3,4,4,6,7,3,3,3,4,3,3,4,
 };
static unsigned short stb__times_bold_23_latin1_w[224]={ 0,5,9,10,10,19,17,4,7,7,9,12,5,7,
5,6,10,8,10,10,10,10,10,10,10,10,5,5,12,12,12,9,19,15,14,14,15,13,13,16,16,8,11,17,
14,20,15,16,13,16,16,10,14,15,15,21,15,15,14,5,6,5,10,12,5,11,11,9,12,9,9,11,11,6,
7,12,6,17,11,10,11,12,9,8,7,11,11,15,11,11,9,7,2,7,12,12,12,12,12,12,12,12,12,12,
12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,0,5,9,10,11,11,
2,10,7,15,7,11,12,7,15,12,8,12,6,6,5,12,12,5,4,6,7,11,16,16,16,9,15,15,15,15,
15,15,21,14,13,13,13,13,8,8,8,8,15,15,16,16,16,16,16,10,16,15,15,15,15,15,12,11,11,11,
11,11,11,11,15,9,9,9,9,9,7,7,8,8,10,11,10,10,10,10,10,12,10,11,11,11,11,11,11,11,
 };
static unsigned short stb__times_bold_23_latin1_h[224]={ 0,16,8,16,17,16,16,8,20,20,9,12,8,3,
5,16,16,15,15,16,15,15,16,15,15,16,11,14,11,6,11,16,20,15,14,16,14,14,14,16,14,14,15,14,
14,14,15,16,14,19,14,16,14,15,15,15,14,14,14,18,16,18,9,2,5,11,15,11,15,11,15,15,14,15,
20,14,14,10,10,11,15,15,10,11,14,11,11,11,10,15,10,20,20,20,5,13,13,13,13,13,13,13,13,13,
13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,0,15,18,16,11,14,
20,20,3,16,7,10,6,3,16,3,8,12,9,9,5,15,19,4,5,9,7,10,16,16,16,15,19,19,19,18,
18,18,14,19,19,19,19,18,19,19,19,18,14,19,20,20,20,19,19,10,16,20,20,20,19,19,14,16,16,16,
16,15,15,16,11,14,16,16,16,15,15,15,15,14,16,14,16,16,16,15,15,10,12,16,16,16,15,20,20,19,
 };
static unsigned short stb__times_bold_23_latin1_s[224]={ 201,210,139,123,40,1,94,155,1,33,106,
14,149,215,215,21,147,50,17,136,245,28,191,108,39,213,173,233,120,189,179,
224,151,163,181,28,229,137,204,158,151,128,242,22,218,1,11,119,56,201,94,
202,192,226,131,204,151,135,120,212,112,218,88,223,232,76,27,56,39,66,52,
94,167,62,190,179,249,204,192,88,82,69,234,111,196,99,133,145,222,119,244,
140,198,171,202,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,201,147,202,
234,161,82,148,179,244,1,160,40,176,215,175,202,130,27,123,99,221,95,218,
238,227,116,168,76,77,60,43,1,231,186,92,224,240,24,207,1,16,30,44,
10,58,67,247,1,40,120,41,58,75,152,169,52,227,92,108,124,76,136,168,
87,111,146,99,71,83,134,40,239,158,168,178,153,179,187,195,111,244,70,199,
188,216,117,106,63,245,51,63,75,59,21,9,108, };
static unsigned short stb__times_bold_23_latin1_t[224]={ 21,42,138,42,42,61,61,138,1,1,138,
126,138,144,138,61,61,78,78,61,61,78,61,78,78,61,126,95,126,138,126,
61,1,78,95,61,111,95,95,61,95,95,78,111,95,111,95,61,111,1,111,
61,111,78,78,78,111,111,111,22,61,22,138,144,138,126,95,126,95,126,95,
95,111,95,1,111,95,126,126,126,95,95,126,126,95,126,126,126,126,78,126,
1,1,1,138,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,
126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,21,78,22,
61,126,111,1,1,138,78,138,138,138,144,61,144,138,126,138,138,138,78,1,
138,138,138,138,138,61,61,61,95,1,22,22,22,22,42,111,22,22,22,22,
42,22,22,1,42,111,22,1,1,1,22,22,138,42,1,1,1,22,22,95,
42,42,42,42,78,78,42,126,95,42,42,42,78,78,78,78,111,42,111,42,
42,42,95,95,138,111,42,42,42,78,1,1,22, };
static unsigned short stb__times_bold_23_latin1_a[224]={ 83,111,184,166,166,332,277,92,
111,111,166,189,83,111,83,92,166,166,166,166,166,166,166,166,
166,166,111,111,189,189,189,166,309,240,222,240,240,222,203,258,
258,129,166,258,222,314,240,258,203,258,240,185,222,240,240,332,
240,240,222,111,92,111,193,166,111,166,185,147,185,147,111,166,
185,92,111,185,92,277,185,166,185,185,147,129,111,185,166,240,
166,166,147,131,73,131,173,258,258,258,258,258,258,258,258,258,
258,258,258,258,258,258,258,258,258,258,258,258,258,258,258,258,
258,258,258,258,258,258,258,258,83,111,166,166,166,166,73,166,
111,248,100,166,189,111,248,166,133,182,100,100,111,191,179,83,
111,100,110,166,249,249,249,166,240,240,240,240,240,240,332,240,
222,222,222,222,129,129,129,129,240,240,258,258,258,258,258,189,
258,240,240,240,240,240,203,185,166,166,166,166,166,166,240,147,
147,147,147,147,92,92,92,92,166,185,166,166,166,166,166,182,
166,185,185,185,185,166,185,166, };

// Call this function with
//    font: NULL or array length
//    data: NULL or specified size
//    height: STB_FONT_times_bold_23_latin1_BITMAP_HEIGHT or STB_FONT_times_bold_23_latin1_BITMAP_HEIGHT_POW2
//    return value: spacing between lines
static void stb_font_times_bold_23_latin1(stb_fontchar font[STB_FONT_times_bold_23_latin1_NUM_CHARS],
                unsigned char data[STB_FONT_times_bold_23_latin1_BITMAP_HEIGHT][STB_FONT_times_bold_23_latin1_BITMAP_WIDTH],
                int height)
{
    int i,j;
    if (data != 0) {
        unsigned int *bits = stb__times_bold_23_latin1_pixels;
        unsigned int bitpack = *bits++, numbits = 32;
        for (i=0; i < STB_FONT_times_bold_23_latin1_BITMAP_WIDTH*height; ++i)
            data[0][i] = 0;  // zero entire bitmap
        for (j=1; j < STB_FONT_times_bold_23_latin1_BITMAP_HEIGHT-1; ++j) {
            for (i=1; i < STB_FONT_times_bold_23_latin1_BITMAP_WIDTH-1; ++i) {
                unsigned int value;
                if (numbits==0) bitpack = *bits++, numbits=32;
                value = bitpack & 1;
                bitpack >>= 1, --numbits;
                if (value) {
                    if (numbits < 3) bitpack = *bits++, numbits = 32;
                    data[j][i] = (bitpack & 7) * 0x20 + 0x1f;
                    bitpack >>= 3, numbits -= 3;
                } else {
                    data[j][i] = 0;
                }
            }
        }
    }

    // build font description
    if (font != 0) {
        float recip_width = 1.0f / STB_FONT_times_bold_23_latin1_BITMAP_WIDTH;
        float recip_height = 1.0f / height;
        for (i=0; i < STB_FONT_times_bold_23_latin1_NUM_CHARS; ++i) {
            // pad characters so they bilerp from empty space around each character
            font[i].s0 = (stb__times_bold_23_latin1_s[i]) * recip_width;
            font[i].t0 = (stb__times_bold_23_latin1_t[i]) * recip_height;
            font[i].s1 = (stb__times_bold_23_latin1_s[i] + stb__times_bold_23_latin1_w[i]) * recip_width;
            font[i].t1 = (stb__times_bold_23_latin1_t[i] + stb__times_bold_23_latin1_h[i]) * recip_height;
            font[i].x0 = stb__times_bold_23_latin1_x[i];
            font[i].y0 = stb__times_bold_23_latin1_y[i];
            font[i].x1 = stb__times_bold_23_latin1_x[i] + stb__times_bold_23_latin1_w[i];
            font[i].y1 = stb__times_bold_23_latin1_y[i] + stb__times_bold_23_latin1_h[i];
            font[i].advance_int = (stb__times_bold_23_latin1_a[i]+8)>>4;
            font[i].s0f = (stb__times_bold_23_latin1_s[i] - 0.5f) * recip_width;
            font[i].t0f = (stb__times_bold_23_latin1_t[i] - 0.5f) * recip_height;
            font[i].s1f = (stb__times_bold_23_latin1_s[i] + stb__times_bold_23_latin1_w[i] + 0.5f) * recip_width;
            font[i].t1f = (stb__times_bold_23_latin1_t[i] + stb__times_bold_23_latin1_h[i] + 0.5f) * recip_height;
            font[i].x0f = stb__times_bold_23_latin1_x[i] - 0.5f;
            font[i].y0f = stb__times_bold_23_latin1_y[i] - 0.5f;
            font[i].x1f = stb__times_bold_23_latin1_x[i] + stb__times_bold_23_latin1_w[i] + 0.5f;
            font[i].y1f = stb__times_bold_23_latin1_y[i] + stb__times_bold_23_latin1_h[i] + 0.5f;
            font[i].advance = stb__times_bold_23_latin1_a[i]/16.0f;
        }
    }
}

#ifndef STB_SOMEFONT_CREATE
#define STB_SOMEFONT_CREATE              stb_font_times_bold_23_latin1
#define STB_SOMEFONT_BITMAP_WIDTH        STB_FONT_times_bold_23_latin1_BITMAP_WIDTH
#define STB_SOMEFONT_BITMAP_HEIGHT       STB_FONT_times_bold_23_latin1_BITMAP_HEIGHT
#define STB_SOMEFONT_BITMAP_HEIGHT_POW2  STB_FONT_times_bold_23_latin1_BITMAP_HEIGHT_POW2
#define STB_SOMEFONT_FIRST_CHAR          STB_FONT_times_bold_23_latin1_FIRST_CHAR
#define STB_SOMEFONT_NUM_CHARS           STB_FONT_times_bold_23_latin1_NUM_CHARS
#define STB_SOMEFONT_LINE_SPACING        STB_FONT_times_bold_23_latin1_LINE_SPACING
#endif

