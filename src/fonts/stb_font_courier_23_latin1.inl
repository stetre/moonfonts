// Font generated by stb_font_inl_generator.c (4/1 bpp)
//
// Following instructions show how to use the only included font, whatever it is, in
// a generic way so you can replace it with any other font by changing the include.
// To use multiple fonts, replace STB_SOMEFONT_* below with STB_FONT_courier_23_latin1_*,
// and separately install each font. Note that the CREATE function call has a
// totally different name; it's just 'stb_font_courier_23_latin1'.
//
/* // Example usage:

static stb_fontchar fontdata[STB_SOMEFONT_NUM_CHARS];

static void init(void)
{
    // optionally replace both STB_SOMEFONT_BITMAP_HEIGHT with STB_SOMEFONT_BITMAP_HEIGHT_POW2
    static unsigned char fontpixels[STB_SOMEFONT_BITMAP_HEIGHT][STB_SOMEFONT_BITMAP_WIDTH];
    STB_SOMEFONT_CREATE(fontdata, fontpixels, STB_SOMEFONT_BITMAP_HEIGHT);
    ... create texture ...
    // for best results rendering 1:1 pixels texels, use nearest-neighbor sampling
    // if allowed to scale up, use bilerp
}

// This function positions characters on integer coordinates, and assumes 1:1 texels to pixels
// Appropriate if nearest-neighbor sampling is used
static void draw_string_integer(int x, int y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0, cd->t0); glVertex2i(x + cd->x0, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t0); glVertex2i(x + cd->x1, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t1); glVertex2i(x + cd->x1, y + cd->y1);
        glTexCoord2f(cd->s0, cd->t1); glVertex2i(x + cd->x0, y + cd->y1);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance_int;
    }
    glEnd();
}

// This function positions characters on float coordinates, and doesn't require 1:1 texels to pixels
// Appropriate if bilinear filtering is used
static void draw_string_float(float x, float y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0f, cd->t0f); glVertex2f(x + cd->x0f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t0f); glVertex2f(x + cd->x1f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t1f); glVertex2f(x + cd->x1f, y + cd->y1f);
        glTexCoord2f(cd->s0f, cd->t1f); glVertex2f(x + cd->x0f, y + cd->y1f);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance;
    }
    glEnd();
}
*/

#ifndef STB_FONTCHAR__TYPEDEF
#define STB_FONTCHAR__TYPEDEF
typedef struct
{
    // coordinates if using integer positioning
    float s0,t0,s1,t1;
    signed short x0,y0,x1,y1;
    int   advance_int;
    // coordinates if using floating positioning
    float s0f,t0f,s1f,t1f;
    float x0f,y0f,x1f,y1f;
    float advance;
} stb_fontchar;
#endif

#define STB_FONT_courier_23_latin1_BITMAP_WIDTH         256
#define STB_FONT_courier_23_latin1_BITMAP_HEIGHT        120
#define STB_FONT_courier_23_latin1_BITMAP_HEIGHT_POW2   128

#define STB_FONT_courier_23_latin1_FIRST_CHAR            32
#define STB_FONT_courier_23_latin1_NUM_CHARS            224

#define STB_FONT_courier_23_latin1_LINE_SPACING          11

static unsigned int stb__courier_23_latin1_pixels[]={
    0x02040080,0x44000aa6,0x00298004,0x00c800e2,0x44001900,0x08076004,
    0x2aaa1101,0x80110110,0x2202aaa2,0x00480004,0x1e54001c,0x9ceda880,
    0x55000718,0x00e98000,0x221f43f1,0x36a0006a,0x09bb5000,0x001b9d30,
    0x6c4003d1,0x007a6002,0x2e9301f8,0x2caa9d41,0x6c075075,0x5c02aba3,
    0x05b10005,0x003b3a20,0x4401a9c4,0x4dda88ad,0x07b00039,0x5003aa00,
    0x000d0098,0x24c80698,0x4c36605b,0x01e8800e,0x26001e88,0x500c000e,
    0xb8750727,0xceea8752,0x00d1261a,0x3d10016a,0x7443a600,0x002e9001,
    0x2cd3603b,0x4004c800,0x68000048,0x08008000,0x00202008,0x00020010,
    0x4ea00000,0x4ae1d40c,0x74c2f23a,0x400d0ea3,0x20008000,0x0dcc0000,
    0x22981260,0x0010000d,0x43cc9800,0xcab42cca,0x6edc02ce,0x4799900a,
    0xdb80ccca,0x799900ad,0x5c066654,0x99900add,0x90666547,0x70199999,
    0xb8750365,0x26162752,0x5c0d0ea1,0x97003ccc,0x32e00799,0x997003cc,
    0x001b8079,0x99990126,0x30199999,0x2cca8799,0xda881791,0xda96df40,
    0xa88ae884,0x209e980e,0x57441d98,0xe980ea88,0x10766209,0x01d5115d,
    0x6cc413d3,0x6cccccc1,0x3a6f2620,0x2570ea19,0x7500b13a,0x3a662068,
    0xe998801d,0xe998801d,0xe998801d,0x0003601d,0x4de4c01d,0x880d9999,
    0x06d440bc,0x3a0720b1,0x81e87905,0x360680d8,0x06c40f40,0x1e81b034,
    0x20680d88,0x2a0c800d,0x0ccfcdec,0x4752b831,0xd0ea01cc,0x00937500,
    0x50024dd4,0x5d400937,0x00036049,0x902b8095,0x0e416201,0x741620e4,
    0x02d4b302,0x06c0d079,0x341e40b5,0x902d41b0,0x006c0d07,0x06864064,
    0x710ea570,0x207545bd,0x00d0d806,0x3600686c,0x686c00d0,0x3a000720,
    0x05c0ae00,0x10588390,0x01d01c8b,0x2cc05b34,0x16c1b034,0x6c0d0b30,
    0x85980b60,0x32003606,0x200d0d80,0x6440752b,0x40681d73,0x2200b258,
    0x96200b25,0x3258802c,0x50007702,0x01715c07,0x40391620,0x1740b11c,
    0xd003a498,0x1d06c0d0,0x36068680,0xd0d003a0,0x064006c0,0x9dfddfdb,
    0x1d4ae044,0x068572c0,0x700b115c,0x15c02c45,0x445700b1,0x02803a05,
    0x6d565c0d,0x2c472001,0xd00e5620,0x8068360d,0x41b0340d,0x0340d806,
    0x06c0341b,0xc800d81a,0x36a7a620,0x2570ea09,0x49301b3a,0x21a0343a,
    0x06c3400d,0xd00361a0,0x036601b0,0x40ae05b1,0x001daacb,0x6400e562,
    0x5f5f405a,0x202c4ea8,0x83606868,0x03434405,0x1a202c1b,0xc800d81a,
    0x75093680,0x3b6752b8,0x2a0ea88a,0xddf30343,0x7cc07fdd,0x203feeee,
    0x3feeeef9,0x3bbbbe60,0x337a603f,0x41a201ed,0x90002e2b,0x07e200b5,
    0x0b36e6d0,0xe84a8072,0x201c8b00,0x8b00e84a,0x3a12a01c,0x03200b00,
    0x21d41cda,0x2e2a752b,0x21d40bee,0x2666b206,0x26b20599,0x32059999,
    0x0599999a,0x266666b2,0x000c9805,0x22057059,0x001f8803,0x400d00b1,
    0x32076068,0x03444883,0x9107903b,0x20760688,0xb004883c,0x50755881,
    0x50752b87,0x40d12607,0x02c07205,0x1c816039,0x200e40b0,0x0d1001c8,
    0x20126057,0x00b20058,0x70b7001a,0x3b07a207,0x20770b70,0x5c0ec1e8,
    0x3d103b85,0x10d001d8,0x44ea0ae9,0x750752b9,0x833d16c0,0x2a12603a,
    0x0ea12603,0x203a8498,0x0eee6049,0x815c1c80,0x002c8049,0x001a00d1,
    0x00f733aa,0x40599bf3,0x403dccea,0x202ccdf9,0x403dccea,0x802ccdf9,
    0x880103d9,0x06239971,0x323880a6,0x3ddd90cc,0x3b25fee8,0x2ff741ee,
    0xee83ddd9,0x07bbb25f,0x0440bfdd,0xeed8a200,0x04eeeeee,0x3ba60344,
    0xdd501eee,0x198005dd,0x30004400,0x00088003,0x01100066,0x016f7744,
    0x00000000,0x00000000,0x00000000,0x00000000,0x0f77774c,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00a80000,0x38800e60,0x5500a600,0x3b80e600,
    0x04770126,0x81100a60,0x00c1663a,0x00002120,0x00000100,0x00200530,
    0x00400080,0x22b88010,0x0d507500,0x4c003aa0,0x9bb5000e,0x6d403d80,
    0x0498ae00,0x03afaeb6,0x1d01eed4,0x6c1263a8,0xb5095000,0x5004c800,
    0x002d400b,0xb5007355,0x40099000,0x8099004c,0x80ecdcad,0xa805506d,
    0x01b5000d,0x405b9320,0x000b504c,0x32015000,0x016e16e4,0x3600b500,
    0xb001b500,0x00da8009,0x47001b50,0x001b5004,0x03d80136,0x288009b0,
    0x01d41b20,0x80010002,0x10080080,0x2a3ccc80,0xddb80ccc,0xd010100a,
    0x02b76e03,0x024c01f8,0x00550126,0x49801260,0x001cc880,0x00aa00e6,
    0x055002a8,0x32a0e64c,0x541721cc,0xcccccc83,0x33320ccc,0x99133220,
    0x19999999,0x3333332a,0x99999953,0x3104f4c7,0x88ae883b,0x666540ea,
    0x21a63ccc,0x0ea88ae8,0x00d80970,0x00000000,0x00000000,0x00000000,
    0x445e9880,0xa82dc2d9,0x999bc983,0x0b620d99,0x379307a6,0x221b3333,
    0x1099cb99,0x81339733,0x03d03606,0x5ccc41b1,0x2132099c,0x980d881e,
    0x64416607,0xca880cde,0x39900ade,0xca883cc8,0x95100ade,0x644015bd,
    0x1cc80ced,0xdc881e64,0xbd9100ce,0x20afa019,0x49825c0c,0x10320570,
    0x0ae0390b,0x201d4064,0x0d81a03a,0x503c816a,0x0b50fa07,0x807c41e4,
    0x88bea81c,0x88dcc1eb,0x9857305a,0x511b9859,0x5446e60b,0x7139d305,
    0x4c2b985d,0x89ce9859,0x45f542eb,0x1d681eb8,0xd02540c8,0x02e05707,
    0x2e0498ee,0x07501702,0xd81a03a8,0x05980b60,0x5b0be075,0x81f82cc0,
    0x880e8858,0x2a039006,0x0e400b02,0x03d03900,0xb02a81d1,0x21d103d0,
    0x686880e8,0x2540c895,0x5c5709b0,0x01d0d800,0xa801715c,0x0d01d403,
    0x6801d06c,0xd0be0750,0x03f06801,0x64077059,0x05713302,0x2602c0aa,
    0x4cc02b89,0x902d42b8,0xa8b02a87,0x01dcf205,0xc8766859,0x04980c40,
    0x003b5597,0xcb8059b1,0x1d401daa,0x20680ea0,0x03601a0d,0x1a1f40ea,
    0x81f10360,0xffff9068,0x6cc7ffff,0x502eccce,0x3b661605,0xd982eccc,
    0x5c2eccce,0x05516602,0xacc05716,0xfffffffc,0x64b1343f,0x5c0ea000,
    0x7001daac,0xb559700b,0x5403a803,0x20d81a03,0x3a834405,0x44058990,
    0x02b87986,0x406c0057,0x1605502b,0x360ae036,0x02542b80,0x8b02a895,
    0x15d2a04a,0x32591a00,0x5c0ea000,0x1cc002e2,0x801715c0,0xd01d403a,
    0x40391601,0x2a07504a,0x09500e46,0x34c0d097,0x05902a80,0x551620aa,
    0x20550b20,0x5d03c42c,0x445882a8,0x034cba07,0x2065a1a0,0x2e07504c,
    0x1cc07102,0x838815c0,0x901d403a,0x06889107,0xd01d4076,0x03b03443,
    0x6403b83d,0x0932a80c,0x316205f9,0xfc8498bd,0x17e424c2,0x0b71065c,
    0xb85e98b1,0x9916e20c,0xa8685501,0x407fc0cc,0x2605703a,0x2e00e604,
    0x07509302,0x07a203a8,0x770b703b,0x89701d40,0x6a83b85b,0x9bf70068,
    0xdcdc87db,0xb705ebae,0xc8bf1bd9,0x5ebaedcd,0x5d76e6e4,0xfddfb85e,
    0x37b36e04,0xddfb85f8,0xb9bf704f,0x3b60d07d,0x074c0440,0x409302b8,
    0x302b8039,0x3a807509,0x1666fcc0,0x07b99d50,0x207403a8,0xb03dccea,
    0x4c003a85,0x0004c009,0x04c00262,0x98001300,0x00131001,0x099800cc,
    0xf98bdfb0,0x36017000,0xeeeeeeee,0xeeeeed84,0xeeeeed80,0xddd74eee,
    0x3bae9ddd,0x2204eeee,0xb8066000,0x84eeeeee,0x28033009,0x000000a8,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x2cb80000,0x15c40200,0x00000000,0x016e0110,0x01555555,
    0x2dc00102,0x801cb980,0x7700bddb,0xaaa8824c,0x1ee441aa,0x05555510,
    0x710498ee,0x31d40047,0x0008100b,0x014400b7,0x2132676a,0x3221ee5d,
    0x06cc0498,0x2e00b500,0x881d11dd,0x5d00eabd,0xf1015555,0x36202743,
    0x7d100eab,0x3a20b933,0xb81e988a,0x5bd31262,0x65c13b39,0x9d884c88,
    0x45704999,0x7d75b049,0x263a801d,0x7f0fcc04,0x0755ec40,0x40f6f720,
    0x8620ec0e,0x02a0b818,0xb7001d30,0x9115d100,0x443905dd,0x42800b05,
    0xb10e4009,0x20720220,0x000e881e,0x112713f8,0x80b81d0b,0x0a800004,
    0x30a00000,0x0b10e401,0x950362c4,0x2e000950,0x162002e0,0x07a00730,
    0xb00003ee,0x00000000,0x0b512600,0x9999525c,0x389e6799,0x42b82b89,
    0xcccc800b,0x5c0ccccc,0x97003ccc,0x00000799,0x570aa000,0x445882c8,
    0xc880cdec,0x000004a9,0xbd985a80,0x0cdec884,0x399004b0,0x1cc83cc8,
    0x59001e64,0x89a603d8,0x3099cb99,0x06c49c4f,0x0dcb8b66,0x4ccde4c0,
    0x4cc40d99,0x998801de,0x654401de,0x95100ade,0x15c015bd,0x53407612,
    0x03d7117d,0x220ca86a,0x32202ccc,0x10f602cc,0xbea8f11d,0xdf81eb88,
    0x2b981def,0x15cc2ccc,0xb5101666,0x06801d09,0x9c4ba075,0x599d3344,
    0x5c03c82e,0x2ea01902,0x26ea0049,0xa88dcc04,0x2a237305,0x1fe4ae05,
    0x1d16806c,0x66540d10,0x80753302,0x03a03a99,0x0e88743d,0x221b8688,
    0x0b02a81d,0x2e02c0aa,0xd80581fd,0x9b103a80,0x86cd1275,0x2c88712b,
    0x402e0570,0x86c00d0d,0x00390006,0x312b80e4,0x2d00d89b,0xca8b203b,
    0x00e6001c,0x2c8d01cc,0x3203b86c,0x2a848802,0x2c0aa0b0,0x0242d880,
    0x201d41e2,0x9a6893a8,0x9503262b,0x2005c570,0x2200b258,0x4cc00b25,
    0x44cc02b8,0x7705702b,0xfcb440e4,0x3fffffff,0x403cb886,0x40730039,
    0x64d0951c,0xffffffff,0x0550b003,0x05815416,0xa8066340,0x71007506,
    0x2b964d12,0x70e61e44,0xb803b559,0x8ae01622,0x33b66058,0xed982ecc,
    0x5702eccc,0x5a82b9a0,0x43200057,0x400e6039,0x166e6039,0x0002b962,
    0x160550d0,0x40058154,0x40760585,0x8938803a,0x09fd710d,0x2e1c4366,
    0x3401daac,0x361a006c,0x05701b00,0x2e05701b,0x21661b02,0x2000d33c,
    0x00730243,0x01db00e6,0x00034c39,0x4415434c,0x0b105505,0x42542c40,
    0x200ea04b,0x002c8938,0x5c0bdc88,0xef9802e2,0x2603feee,0x83feeeef,
    0x2a85902a,0x0cae0590,0x23443b16,0x902a80cc,0x400e6038,0x20ef4039,
    0xa80cc84b,0x05b10ba2,0x105e98b1,0xad85e98b,0x6c407620,0x1d403ecc,
    0x25449c40,0x57048040,0x33590e20,0x5640b333,0x98599999,0x24c2fc84,
    0x72b817e4,0x9bb11225,0xb9bf7017,0x65e4c07d,0x4c00e600,0x37eaf203,
    0x37ee03ec,0xcdc83edc,0x336e01dd,0xb705f8de,0x88bf1bd9,0x402dddfd,
    0x075001ea,0x07a12710,0x2e090483,0x20589302,0x0e40b01c,0x5d76e6e4,
    0x76e6e45e,0x776c5eba,0x101dce88,0x00133001,0xeeeed804,0x3bb61eee,
    0x911eeeee,0x26600198,0x10008800,0x04c40013,0xf9001300,0x01d99ddd,
    0xa5d44075,0x337a20ad,0x5d55644e,0x2605701d,0x84980ea4,0x9812603a,
    0x00026000,0x00000018,0x00000000,0x00000000,0x00000000,0x0cc09800,
    0x3bbbbbae,0x9984cc44,0x33100880,0x7776c033,0xd94eeeee,0x5fee83dd,
    0xdd07bbb2,0x000000bf,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00055300,0x1cc8036a,0x5d981e64,
    0x4c5eedc0,0x40007510,0x401cddc9,0x50151dea,0x9802a3bd,0x5101cddc,
    0x07970007,0x02000800,0x542f2e60,0x41aaaaaa,0x02000cb8,0x1000e64c,
    0x02dc0155,0x5441104c,0xe9cc8006,0x99857301,0x101ff705,0x4bb2615d,
    0x7900059a,0xb8065c41,0x1704ec98,0x5e409d93,0x35032e20,0x9319800b,
    0x400e6000,0x4d6e403a,0x55555d09,0x64d6dcb7,0x21ee4d84,0x004c9be9,
    0x7b101d51,0x76d401d5,0x400681dd,0x5c03622b,0x804c0b02,0x0585b02d,
    0x44221c80,0x00000058,0x20b100e4,0x01260005,0x3a801d40,0x50380f60,
    0x2606c2c7,0x90320620,0x64064005,0x6ed41621,0x000d02da,0x0b02b800,
    0x0440f100,0x1cc71016,0x0aa77357,0x2033b722,0x80adeca8,0x4775b539,
    0x14c0582a,0x03880764,0x825400ea,0x2390004a,0x0004983a,0x6400b10b,
    0x20440000,0xbd93680d,0x0b332205,0x08160570,0x05800930,0x02a487aa,
    0x273a62c5,0x8dcc2eb8,0x31c485a8,0xb902c2c3,0x0f5c2c01,0xec880750,
    0x00362cdc,0x570b3340,0x40cedc88,0xd730b049,0x3220325b,0x32a00ced,
    0xeae868ab,0x3304ea8a,0xb02b8075,0x03440e40,0x21362160,0x1e8900e4,
    0x1c800e88,0x905c4e24,0x105d30b0,0x260fa658,0xcccedccc,0x58f60ec2,
    0x224c006a,0x4c1d50bd,0x42eb89ce,0x3a60f986,0x40dcd98b,0x2eb89ce9,
    0x6f556f4c,0x2d83740d,0x05700e60,0x403ae0b1,0x6d54201f,0x82a3d71a,
    0x2d4900e4,0x22660790,0x3b36242b,0x35b55240,0x41773b91,0x1b71cccb,
    0xb999882a,0x0e60999c,0x674e4c22,0x40e401dc,0x0f40fffe,0x44790744,
    0x320d11cd,0x7440f40f,0x3f501d10,0x40b503e8,0x262dc039,0x0067445e,
    0x209903b5,0x48b2e3d8,0x0ae4802e,0x33b66598,0x8e242ecc,0x15d50244,
    0x74c0b119,0x3a807323,0xdb100720,0x64340588,0xb50db88c,0x37b21e40,
    0x20951b8d,0xc816a0f8,0x21f40973,0x3981a00e,0x6f66f5c0,0x400765f8,
    0x02cccefa,0x1564c3d7,0x9644dc37,0x4a812a48,0x370ae036,0x2122511c,
    0x1b810cd8,0x2ee60dc8,0x3a80ea01,0x00d81f80,0x4b84a891,0x442cc057,
    0xb00e4360,0x2b3015c1,0x3d0ee01c,0x03981a20,0xd004c55c,0xe8075000,
    0x25855583,0x88360ba8,0x8154ba07,0x4355582c,0x0f4c0d89,0x82e88750,
    0x01d40375,0x82c3103a,0x1c85701b,0x4a812ad0,0x40573440,0x4a812a0f,
    0x3a15c039,0x1cc09704,0x0dc00ae0,0x01c8805c,0x21e565c0,0x81c880d9,
    0x996e20cb,0xd982fc84,0x8001c880,0x2b32003b,0x300e603d,0x641b97bb,
    0x2a160582,0x40f13983,0xb316402e,0x07883ea0,0x1b0254ba,0x07542de8,
    0x02b80730,0x3a615d10,0x002bba81,0x441dccc4,0x00cdbbdc,0x213f77ee,
    0xebaedcdc,0xdbbdc885,0x02c8000c,0x0164cc40,0x880cb800,0x2c412a0d,
    0xb83620d8,0x8816e20c,0x260bd84d,0x1065c0ed,0x4c83d8b7,0x767edfaa,
    0xeeeed80e,0x00d41eee,0x019db710,0xb5000044,0x4001880b,0x00098019,
    0x32000188,0x2001dccd,0x3bbaa4da,0x503eeeee,0x776f4c07,0x32605500,
    0xdfb81ddd,0x6e6c44fd,0x3b3f202d,0x7dc4ec8e,0x9d904fdd,0x131007d9,
    0x00000000,0x00000000,0x00000000,0x00000000,0x20000000,0x00088039,
    0x19800880,0x13000620,0x9800cc00,0x00000001,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x4b804000,0x26666666,
    0xddb81999,0x6664400a,0x01983ccc,0xbca802c8,0x2a1e64c0,0x435102cc,
    0x100beeb8,0x03139db5,0x05117b95,0x6ed40013,0x09aa8052,0x953dec98,
    0x76553267,0x4799902c,0x5c40ccca,0x541991ce,0x02aa000a,0x00d55440,
    0x7c07ccd9,0x88a0051f,0x00ea88ae,0x84de4ccc,0xd803ded9,0x6d4e6c03,
    0x5102f224,0xf8f3601b,0x5b10b6a2,0xd89bb511,0x709d731b,0x222fa005,
    0x57b706ea,0x98bea899,0xd310addd,0x2136a5b7,0x366209e9,0x75456dc1,
    0x016d41db,0x54005950,0x506203ca,0x50028660,0x006c40f4,0x3a8cc2b8,
    0x0f200880,0x39058836,0x858eb2a0,0x4d80ec58,0x5c25c0b6,0x6983a802,
    0x2e0d00b0,0x7905e80f,0x1606c0d0,0x002b82f4,0x1d40015c,0x00280000,
    0x03c816a5,0x01d40570,0x44981c00,0x1d02c41c,0x261b0075,0x024ca604,
    0xccddc986,0x380641cc,0x81d40398,0x302e80f8,0x506c0d0b,0x15c16e07,
    0x2000ae00,0x3332203a,0x20050402,0x02cc05b2,0x40ea02b8,0x8002ccc8,
    0x0722c449,0x4403a95c,0x15c006e6,0x33793100,0x80498133,0x3cccedca,
    0xd01b00e4,0xb0343401,0x05980641,0x03bd9357,0x0599915c,0x2a6601d4,
    0x0028ea03,0x00d003a5,0x203a80ae,0xe8003b99,0x20b11c80,0xeb80ea68,
    0x06c00362,0xb8015c00,0xb9880abc,0x1cc0999c,0x02e80f88,0x06c0d093,
    0x5c16e075,0x203d31dd,0x8027ae2b,0x4073003a,0x69400a4a,0x2b800d80,
    0x0e600ea0,0x56205b00,0x1d43901c,0x006c0ce8,0x199980d8,0x5c4002b8,
    0x803980dd,0xdd01f706,0xd81a0360,0x705e82c0,0x4ae0950b,0x0075005b,
    0x0a4b80e6,0x34405940,0xa80ae073,0x20039803,0x82d6402d,0x0681d459,
    0x50320039,0x2b83db99,0x261a6000,0xa8bea803,0xebe80ddd,0x0d04ea8b,
    0x22faa06c,0x05705aeb,0x0f6ee0b1,0x73003a80,0x20052dc0,0x32540392,
    0x3a806e07,0x5b003980,0x3603f100,0x80dcaaab,0x2e007700,0x0ae12602,
    0x4c1c8060,0x4b36a003,0x9b73680c,0x05807405,0x41626f6a,0xf705882b,
    0x01d4007b,0x296e0398,0xd81a2500,0x202c0e61,0x4039803a,0x0b1002d8,
    0x6ee6665c,0x50074002,0xb84981a2,0x1b034402,0x64000398,0x3c800680,
    0x16200488,0xb82c415c,0x0ea00793,0x4d901cc0,0x42dc5002,0x2a0f443b,
    0x4c01d403,0x800ba203,0x41d4002c,0x81b302db,0x2036e2d8,0x18858849,
    0x309507f1,0x80c80007,0x41e88006,0x40ea001d,0x5705882b,0x01d401ec,
    0x29b20398,0xccea8500,0x99bb103d,0x30075007,0x1c07a207,0x1d400344,
    0xbd302ffc,0xbd303db9,0x2e03bb99,0x911decce,0x017d9bf7,0x0c800073,
    0xbf300068,0x75400599,0x0b105700,0xa805b0ae,0x3bbbb603,0xa92e1eee,
    0xaaaaaaaa,0x2003303a,0x7775c018,0x3bb64eee,0xd31eeeee,0x2bdddddd,
    0x01eeeee9,0x443eee98,0x00131001,0x26001331,0xd9019801,0x007ddddd,
    0x2a9dddd1,0x8002eeee,0xeeea8008,0x49ddb00c,0x3b60efea,0xd8bbfa22,
    0x1eeeeeee,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x6640b726,0x3226640c,0x201bcccc,
    0x02ccccc8,0x64c39995,0x199972cc,0xcc84ccc8,0xc981bccc,0x20f32a4c,
    0xccccccca,0x33332a2c,0x321d43cc,0x99911ccc,0x91066641,0x66665499,
    0x51dea804,0x0f332e01,0x99999950,0xb80664c5,0x1066643c,0x6664c999,
    0x50cccccc,0x99999999,0x1ec46cc7,0x0f4c16c4,0x32666f26,0x3359300d,
    0x02676201,0x2f221d33,0x980da981,0x44da999e,0x3a621bb8,0x9e9e9880,
    0x26624a99,0x3e6099cb,0x826ee63f,0x416c41ea,0x36a621e9,0xc98b8019,
    0x3a66204e,0x266ee01d,0x37224b99,0x4c0ed983,0x4c1e982e,0xc999999e,
    0x39733591,0x020e4b33,0xb80e42c4,0x2b204982,0x00720099,0x0ae0588b,
    0x2b877068,0x35620588,0x881d4126,0x2615c1ff,0x390b100d,0x00001220,
    0xb8126ea0,0x2ae07442,0xb3059c86,0x403605b0,0x11d4391b,0x8ee002cb,
    0x2c0ae049,0x5bb99b90,0x9136c570,0xd01a01b0,0x105706c0,0x4c69d40b,
    0x70007504,0x1dc02d45,0x40244093,0x1cec99ca,0x5c0d0d80,0x5d5c16c1,
    0x9502d622,0x201b025c,0x11d4391a,0x36000dcb,0x0ae00e88,0x441c8162,
    0x1bd1541d,0x260ea126,0x45503404,0x3205882b,0x750026d0,0x12e57000,
    0x401d0d80,0xddb88048,0x2c403d31,0x09502059,0xb2b962ae,0x4059ac80,
    0x5054120d,0xadca9a87,0x059b3002,0x076a22b8,0x4c5881c8,0x0ea55933,
    0xaa80e434,0x9260aaae,0x5baaaacb,0x02dae9a0,0x55c001d4,0x362001fc,
    0x8024402c,0x702540db,0x34402c45,0xb3472570,0xd801dd00,0x75006aab,
    0x055d5530,0xccfecc88,0x9fddd701,0x11a03900,0x15d62b29,0xa81a21c8,
    0x260aaaea,0x2aaab2e4,0x5749305b,0xd81d402d,0xe9beb85f,0x2016e003,
    0x20570048,0x00361a05,0xc995c03b,0x3b60163a,0x3555ec00,0x03403a80,
    0x15c01d40,0x81c803d3,0xcb4d585a,0x01d49301,0x15c75034,0xeeeb82c4,
    0x03a80116,0xd87701ff,0x10073001,0x20570e09,0xddddf305,0x021dc07f,
    0x0b076c57,0x6c05abb8,0x01d40120,0x2aa200b1,0x5701aadc,0x4d6401d0,
    0x8e80eca9,0x58036725,0xc81a0036,0x41620ae1,0x54021a0d,0x5704f983,
    0x07300688,0x571a0910,0x4cd64160,0x0b305999,0x87315c1b,0x03c96605,
    0x0ea00036,0x540103a8,0x5882b803,0x0b333720,0x16e63ad8,0x200b1570,
    0x82b8b306,0x6868b058,0x40d90750,0x9802b82b,0x8d048803,0x8160b02b,
    0x0d80e81c,0x220b00ae,0x0d80ec0e,0x3a03a800,0x0ea03a80,0x81dc0ae0,
    0x0776001c,0x1cd880dd,0x81b50d00,0x3985882b,0x83a83434,0x220ae02e,
    0x88039805,0xb02b8d04,0x224c0750,0x15c1b02c,0x440ec160,0x8000d80e,
    0xeeff883a,0xeb80deee,0xddb04eee,0x744bd03d,0x6403eeee,0x6c805d86,
    0xddddfb00,0x25eec817,0xdd90efeb,0xddddfd53,0x777775cf,0xeeed804e,
    0x76c1f6c1,0x75c0eeee,0x7eeeeefe,0xfe893bb2,0xd07bbb25,0x77774bfd,
    0xdd70feee,0x25fed83d,0x3a62efe8,0xddfd31ee,0xeeed805d,0x000000ee,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x66664400,0x1cc980bc,0x990e6654,0x50039999,0xccc98359,
    0x99900acc,0x01999999,0x0005b0c0,0x014c0ee0,0x00337b22,0x6edc4031,
    0x7654428b,0x6edc00ad,0x6e44098b,0x41cc80ce,0x1e64c3cc,0x8750e654,
    0x5b51ddb8,0x32654000,0x05dc4199,0xbb533593,0x4c45e988,0x4cde4c2d,
    0x37901eb9,0x99da8817,0xbc982eb9,0x40d99999,0x5a8addc8,0x40007b22,
    0x80ea03ea,0x1eb88bea,0x8ad81720,0x8dcc4ea8,0x15d105a8,0xce98bb26,
    0x5cc2eb89,0x2e22ccc2,0x30ca880b,0xd89547ff,0x4765a8db,0xd988d119,
    0x22499cc8,0x540e41ff,0x0c82be83,0x885882b8,0x3b048805,0x98320570,
    0x06ea89ce,0x26001bb1,0x81d400ce,0x006880e8,0x00910750,0x6c0b6072,
    0x03a207a2,0x92616055,0xff88ae19,0x2c83ea01,0x3dd99dd1,0xff00bb60,
    0xd0d01c81,0x5701903a,0x201a2160,0x570b1048,0x207442e0,0x66cc05da,
    0x0019b100,0x901dc0ea,0x15d10005,0x15c4cc00,0xb50881e2,0x40aa1e40,
    0x1936cb05,0x22d4c400,0x40d03a49,0xc87e801d,0x12ad0d01,0xb3057019,
    0x09100ae0,0x0b8ae06c,0x5474c5a8,0x223ea802,0x4cc401dc,0x90999cb9,
    0xffffffff,0x26666627,0x32e20999,0xced983ee,0x024c2ecc,0x516602b8,
    0xd8ac1605,0x3b200d1c,0xfffffecd,0x20570b15,0xc86d800d,0x36683d81,
    0x2b2e0321,0xd880edba,0xb8122046,0x0ed565c1,0x2c1d30e4,0x5d71eb80,
    0xdb999300,0x00ae5999,0x6666664c,0x16e202cc,0x6885701b,0x25409500,
    0x9b82c0aa,0x8058c9ba,0xb102cc3c,0x00360390,0x3337216e,0x2c4d02ed,
    0x55597019,0x753d07b9,0x5c09116e,0x0ed565c2,0x260e99d4,0x441f5405,
    0x0ea001dc,0x4000034c,0x902a9a04,0x88403f05,0x0550ba07,0x436ea0b1,
    0x3619839e,0x3b007d40,0x001b0344,0x33359031,0x0c964680,0x4c9702b8,
    0x91036363,0xb8ae0640,0xd81d3b00,0x8019b303,0x3a800cd8,0x0aa03320,
    0x9260be00,0xa82fc849,0x32e4c81d,0x16216e20,0x97620bd3,0x97fcc2dc,
    0xa8ffa23a,0xdd9bdd13,0x80003603,0x5a1a001c,0x9a02b80c,0x2213a23a,
    0x40ae1a04,0xb883f238,0x000dd886,0x0ea01f4c,0x7db9bf70,0xcbd81540,
    0x6e40decc,0x85ebaedc,0x82cccefa,0x204fddfb,0x5f8decdb,0x207cc7d0,
    0x33722ff9,0x0deddbbe,0x1344623b,0x3ddddfdd,0xd000e400,0x57019950,
    0x3e996340,0x70770488,0x5f4d2605,0xeb84fddd,0x17540001,0x133003a8,
    0x31009700,0x98001300,0x20033001,0x80000098,0x09818808,0x80000000,
    0x6c1a001c,0xd882b80e,0x757e6d42,0x12e22445,0x1949815c,0x001804c4,
    0x00100c00,0x00000000,0x00000000,0x00000000,0x00000000,0x77777440,
    0x317bf603,0xeeeed81f,0x02602dee,0x6f777f4c,0xdddddb03,0x00009ddd,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x22702a00,0x332a2ccc,0x2038151c,0x332a3cc9,0x4f6a32a2,
    0x99ca83eb,0xcc981cec,0x3263cccc,0x8000301b,0x84cc41b8,0x82ee6099,
    0x99999998,0x10188099,0x6eec4397,0x207bb503,0x377726fc,0x085ddddd,
    0xbb8000cc,0x40800180,0xaaaaaaaa,0x3625b800,0x98827a63,0x641d309e,
    0x441b9104,0x4bf220db,0xb88574dd,0xb83d31dd,0x22d9999b,0x0390190a,
    0x511d81d1,0xf0ff9855,0x50c9225f,0x99999999,0x881db0b9,0xb821ebbf,
    0xf0751dc1,0x4444445f,0x14408888,0x54b85ff3,0x263ff98b,0x6c260dce,
    0xeee89ae4,0x401eeeee,0x709d10ec,0x3f509305,0x549902ec,0x12d47705,
    0x4a81b70b,0xc80ee0d4,0x1d301c80,0xf10a60b6,0x1b80ff4f,0x26b22c00,
    0x229525c5,0x42c2eddb,0x00037cc5,0x2ff88e44,0x221b50f2,0x74c361ee,
    0x188265c9,0x43b20000,0x90d105e8,0xed87ee03,0x40b59700,0x70b1261b,
    0x09501605,0xcacd93aa,0x6f4c3dba,0x4df05302,0x003a80fd,0x24b92a58,
    0x71652e4a,0x7dc58585,0x6eeeee41,0x2eea5ddd,0x302a8222,0x02c88007,
    0x99999980,0x36199999,0xc80df11f,0x3f901621,0x06d81be2,0x858930dc,
    0x2d40b02b,0xdf931540,0x403b6017,0x1f25e829,0x9ac000ae,0x2f3e2c85,
    0x7d711b1f,0x43b88ca8,0x1111105d,0x00110111,0x00000000,0x2eeeeee2,
    0x263bbbbb,0x880bee4f,0x4f980ae5,0x5e5c0bee,0x44986e04,0x20b02b85,
    0x42a81059,0x35b00eda,0x9905301d,0x00072354,0x88e01558,0x2b7220bb,
    0x0e6441c9,0x00000074,0x00000000,0x74400000,0x0d807ea4,0xf527440d,
    0x05a92e03,0x21624c37,0x1d10b02b,0x87999128,0x45b0b368,0x7b9710e9,
    0x79704041,0x00800397,0x00000000,0x00000000,0x00000000,0xa8fa2000,
    0x0759300f,0x01e98fa2,0x370b5099,0x0ae1624c,0x1a03a22c,0x44370dc0,
    0x00001982,0x11100000,0x11111111,0x00000001,0x00000000,0x00000000,
    0x59836200,0x16403ba0,0x277ec03a,0x3ae1dfd5,0x2fc9d32e,0x7f449dd9,
    0x3bbbbb25,0x0000007e,0x00000000,0xbbbbbb10,0x03bbbbbb,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
};

static signed short stb__courier_23_latin1_x[224]={ 0,4,2,1,2,1,2,4,5,2,0,1,2,1,
4,2,2,2,1,1,2,1,2,2,2,2,4,3,0,1,0,0,2,0,0,1,1,0,1,1,1,2,1,0,
1,0,0,0,1,1,0,1,1,0,0,0,0,0,2,0,0,0,2,0,4,1,0,1,1,1,2,1,0,1,
1,1,1,0,1,1,0,1,1,2,1,0,0,0,1,1,2,0,5,0,1,2,2,2,2,2,2,2,2,2,
2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,4,2,1,2,0,
5,1,3,0,0,0,0,1,0,-1,3,1,3,3,4,0,1,4,4,3,2,1,0,0,0,0,0,0,0,0,
0,0,0,1,0,0,0,0,2,2,2,2,-1,0,0,0,0,0,0,2,0,0,0,0,0,0,1,0,1,1,
1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,1,0,1,
 };
static signed short stb__courier_23_latin1_y[224]={ 16,3,3,2,2,3,5,3,3,3,3,5,13,9,
13,2,3,3,3,3,3,3,3,3,3,3,7,7,5,8,5,4,3,4,4,4,4,4,4,4,4,4,4,4,
4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,3,2,3,3,20,2,7,3,7,3,7,3,7,3,3,
3,3,3,7,7,7,7,7,7,7,4,7,7,7,7,7,7,3,3,3,8,3,3,3,3,3,3,3,3,3,
3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,16,7,2,4,5,4,
3,3,3,4,3,7,9,9,4,1,1,3,3,3,2,7,3,8,15,3,3,7,3,3,3,7,0,0,0,1,
1,0,4,4,0,0,0,1,0,0,0,1,4,1,0,0,0,1,1,6,3,0,0,0,1,0,4,3,2,2,
3,4,3,2,7,7,2,2,3,3,2,2,3,3,3,4,2,2,3,4,3,5,6,2,2,3,3,2,3,3,
 };
static unsigned short stb__courier_23_latin1_w[224]={ 0,4,8,10,8,10,9,4,5,5,8,10,6,10,
4,8,8,8,9,10,8,10,9,8,8,9,4,5,10,11,10,8,8,13,12,10,11,11,11,11,11,8,11,12,
11,13,12,11,11,11,13,10,10,12,13,12,12,12,9,4,8,4,8,13,4,11,12,10,11,10,10,11,12,10,
8,11,10,13,11,10,12,11,11,9,10,12,12,12,11,11,8,5,2,5,10,11,11,11,11,11,11,11,11,11,
11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,4,8,10,9,12,
2,10,7,13,7,10,11,10,13,14,6,10,6,6,4,12,10,4,4,6,8,11,13,13,13,8,13,13,13,13,
13,13,13,10,11,11,11,11,8,8,8,8,12,12,11,11,11,11,11,8,12,12,12,12,12,12,11,11,11,11,
11,11,11,11,12,10,10,10,10,10,10,10,10,10,10,11,10,10,10,10,10,10,11,12,12,12,12,11,12,11,
 };
static unsigned short stb__courier_23_latin1_h[224]={ 0,14,7,16,16,14,12,7,16,16,8,11,6,2,
4,16,14,13,13,14,13,14,14,14,14,14,10,12,11,5,11,13,15,12,12,13,12,12,12,13,12,12,13,12,
12,12,12,13,12,15,12,13,12,13,12,12,12,12,12,16,16,16,6,2,4,10,14,10,14,10,13,13,13,13,
17,13,13,9,9,10,13,13,9,10,13,10,9,10,9,13,9,16,16,16,4,13,13,13,13,13,13,13,13,13,
13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,0,13,14,12,10,12,
16,15,3,13,6,9,7,2,13,2,6,13,7,8,4,13,15,4,5,7,6,9,13,13,13,13,16,16,16,15,
15,16,12,16,16,16,16,15,16,16,16,15,12,15,17,17,17,16,16,8,14,17,17,17,16,16,12,14,15,15,
14,13,14,15,10,13,15,15,14,14,14,14,13,13,14,12,15,15,14,13,14,10,11,15,15,14,14,18,17,17,
 };
static unsigned short stb__courier_23_latin1_s[224]={ 252,248,116,122,144,149,39,250,96,114,91,
107,177,240,201,120,129,53,73,243,95,206,10,20,29,49,210,126,96,184,85,
104,33,182,26,113,49,61,233,124,91,117,41,132,158,206,13,29,1,1,25,
147,245,194,64,51,220,145,196,159,231,136,144,240,211,150,93,162,59,118,158,
207,219,62,113,232,244,49,63,173,181,169,238,140,136,184,12,197,37,83,75,
153,141,1,221,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,
17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,252,12,1,
1,228,12,133,42,232,164,160,1,132,240,201,144,153,243,125,84,206,117,22,
216,196,109,168,25,150,215,229,130,164,178,192,65,79,206,103,220,240,7,32,
53,44,53,87,13,78,235,38,88,63,75,102,100,182,75,100,50,62,19,39,
117,165,140,105,189,93,177,215,139,129,224,195,138,160,171,106,1,82,170,189,
213,71,178,38,129,73,152,200,230,217,1,25,13, };
static unsigned short stb__courier_23_latin1_t[224]={ 1,20,108,1,1,36,95,95,20,20,108,
95,108,108,108,20,36,68,68,36,68,36,53,53,53,53,95,82,95,108,95,
68,37,82,95,68,95,95,82,68,82,82,68,82,82,82,95,68,95,37,82,
68,82,68,82,82,82,82,82,1,1,1,108,111,108,95,52,95,53,95,68,
68,68,68,1,68,68,108,108,95,68,68,95,95,68,95,108,95,108,68,108,
1,1,20,108,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,
68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,1,68,53,
82,95,82,1,37,108,52,108,108,108,108,52,115,108,52,108,108,108,52,37,
108,108,108,108,108,52,52,52,52,1,1,1,37,37,1,82,1,1,20,20,
37,20,20,20,37,82,20,1,1,1,20,20,108,36,1,1,1,20,20,82,
37,20,20,37,52,37,20,95,52,20,20,36,36,36,36,52,68,53,82,20,
20,53,52,53,95,95,20,20,36,36,1,1,1, };
static unsigned short stb__courier_23_latin1_a[224]={ 195,195,195,195,195,195,195,195,
195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,
195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,
195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,
195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,
195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,
195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,
195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,
195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,
195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,
195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,
195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,
195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,
195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,
195,195,195,195,195,195,195,195, };

// Call this function with
//    font: NULL or array length
//    data: NULL or specified size
//    height: STB_FONT_courier_23_latin1_BITMAP_HEIGHT or STB_FONT_courier_23_latin1_BITMAP_HEIGHT_POW2
//    return value: spacing between lines
static void stb_font_courier_23_latin1(stb_fontchar font[STB_FONT_courier_23_latin1_NUM_CHARS],
                unsigned char data[STB_FONT_courier_23_latin1_BITMAP_HEIGHT][STB_FONT_courier_23_latin1_BITMAP_WIDTH],
                int height)
{
    int i,j;
    if (data != 0) {
        unsigned int *bits = stb__courier_23_latin1_pixels;
        unsigned int bitpack = *bits++, numbits = 32;
        for (i=0; i < STB_FONT_courier_23_latin1_BITMAP_WIDTH*height; ++i)
            data[0][i] = 0;  // zero entire bitmap
        for (j=1; j < STB_FONT_courier_23_latin1_BITMAP_HEIGHT-1; ++j) {
            for (i=1; i < STB_FONT_courier_23_latin1_BITMAP_WIDTH-1; ++i) {
                unsigned int value;
                if (numbits==0) bitpack = *bits++, numbits=32;
                value = bitpack & 1;
                bitpack >>= 1, --numbits;
                if (value) {
                    if (numbits < 3) bitpack = *bits++, numbits = 32;
                    data[j][i] = (bitpack & 7) * 0x20 + 0x1f;
                    bitpack >>= 3, numbits -= 3;
                } else {
                    data[j][i] = 0;
                }
            }
        }
    }

    // build font description
    if (font != 0) {
        float recip_width = 1.0f / STB_FONT_courier_23_latin1_BITMAP_WIDTH;
        float recip_height = 1.0f / height;
        for (i=0; i < STB_FONT_courier_23_latin1_NUM_CHARS; ++i) {
            // pad characters so they bilerp from empty space around each character
            font[i].s0 = (stb__courier_23_latin1_s[i]) * recip_width;
            font[i].t0 = (stb__courier_23_latin1_t[i]) * recip_height;
            font[i].s1 = (stb__courier_23_latin1_s[i] + stb__courier_23_latin1_w[i]) * recip_width;
            font[i].t1 = (stb__courier_23_latin1_t[i] + stb__courier_23_latin1_h[i]) * recip_height;
            font[i].x0 = stb__courier_23_latin1_x[i];
            font[i].y0 = stb__courier_23_latin1_y[i];
            font[i].x1 = stb__courier_23_latin1_x[i] + stb__courier_23_latin1_w[i];
            font[i].y1 = stb__courier_23_latin1_y[i] + stb__courier_23_latin1_h[i];
            font[i].advance_int = (stb__courier_23_latin1_a[i]+8)>>4;
            font[i].s0f = (stb__courier_23_latin1_s[i] - 0.5f) * recip_width;
            font[i].t0f = (stb__courier_23_latin1_t[i] - 0.5f) * recip_height;
            font[i].s1f = (stb__courier_23_latin1_s[i] + stb__courier_23_latin1_w[i] + 0.5f) * recip_width;
            font[i].t1f = (stb__courier_23_latin1_t[i] + stb__courier_23_latin1_h[i] + 0.5f) * recip_height;
            font[i].x0f = stb__courier_23_latin1_x[i] - 0.5f;
            font[i].y0f = stb__courier_23_latin1_y[i] - 0.5f;
            font[i].x1f = stb__courier_23_latin1_x[i] + stb__courier_23_latin1_w[i] + 0.5f;
            font[i].y1f = stb__courier_23_latin1_y[i] + stb__courier_23_latin1_h[i] + 0.5f;
            font[i].advance = stb__courier_23_latin1_a[i]/16.0f;
        }
    }
}

#ifndef STB_SOMEFONT_CREATE
#define STB_SOMEFONT_CREATE              stb_font_courier_23_latin1
#define STB_SOMEFONT_BITMAP_WIDTH        STB_FONT_courier_23_latin1_BITMAP_WIDTH
#define STB_SOMEFONT_BITMAP_HEIGHT       STB_FONT_courier_23_latin1_BITMAP_HEIGHT
#define STB_SOMEFONT_BITMAP_HEIGHT_POW2  STB_FONT_courier_23_latin1_BITMAP_HEIGHT_POW2
#define STB_SOMEFONT_FIRST_CHAR          STB_FONT_courier_23_latin1_FIRST_CHAR
#define STB_SOMEFONT_NUM_CHARS           STB_FONT_courier_23_latin1_NUM_CHARS
#define STB_SOMEFONT_LINE_SPACING        STB_FONT_courier_23_latin1_LINE_SPACING
#endif

