// Font generated by stb_font_inl_generator.c (4/1 bpp)
//
// Following instructions show how to use the only included font, whatever it is, in
// a generic way so you can replace it with any other font by changing the include.
// To use multiple fonts, replace STB_SOMEFONT_* below with STB_FONT_times_40_usascii_*,
// and separately install each font. Note that the CREATE function call has a
// totally different name; it's just 'stb_font_times_40_usascii'.
//
/* // Example usage:

static stb_fontchar fontdata[STB_SOMEFONT_NUM_CHARS];

static void init(void)
{
    // optionally replace both STB_SOMEFONT_BITMAP_HEIGHT with STB_SOMEFONT_BITMAP_HEIGHT_POW2
    static unsigned char fontpixels[STB_SOMEFONT_BITMAP_HEIGHT][STB_SOMEFONT_BITMAP_WIDTH];
    STB_SOMEFONT_CREATE(fontdata, fontpixels, STB_SOMEFONT_BITMAP_HEIGHT);
    ... create texture ...
    // for best results rendering 1:1 pixels texels, use nearest-neighbor sampling
    // if allowed to scale up, use bilerp
}

// This function positions characters on integer coordinates, and assumes 1:1 texels to pixels
// Appropriate if nearest-neighbor sampling is used
static void draw_string_integer(int x, int y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0, cd->t0); glVertex2i(x + cd->x0, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t0); glVertex2i(x + cd->x1, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t1); glVertex2i(x + cd->x1, y + cd->y1);
        glTexCoord2f(cd->s0, cd->t1); glVertex2i(x + cd->x0, y + cd->y1);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance_int;
    }
    glEnd();
}

// This function positions characters on float coordinates, and doesn't require 1:1 texels to pixels
// Appropriate if bilinear filtering is used
static void draw_string_float(float x, float y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0f, cd->t0f); glVertex2f(x + cd->x0f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t0f); glVertex2f(x + cd->x1f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t1f); glVertex2f(x + cd->x1f, y + cd->y1f);
        glTexCoord2f(cd->s0f, cd->t1f); glVertex2f(x + cd->x0f, y + cd->y1f);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance;
    }
    glEnd();
}
*/

#ifndef STB_FONTCHAR__TYPEDEF
#define STB_FONTCHAR__TYPEDEF
typedef struct
{
    // coordinates if using integer positioning
    float s0,t0,s1,t1;
    signed short x0,y0,x1,y1;
    int   advance_int;
    // coordinates if using floating positioning
    float s0f,t0f,s1f,t1f;
    float x0f,y0f,x1f,y1f;
    float advance;
} stb_fontchar;
#endif

#define STB_FONT_times_40_usascii_BITMAP_WIDTH         256
#define STB_FONT_times_40_usascii_BITMAP_HEIGHT        180
#define STB_FONT_times_40_usascii_BITMAP_HEIGHT_POW2   256

#define STB_FONT_times_40_usascii_FIRST_CHAR            32
#define STB_FONT_times_40_usascii_NUM_CHARS             95

#define STB_FONT_times_40_usascii_LINE_SPACING          26

static unsigned int stb__times_40_usascii_pixels[]={
    0x00000000,0x00000000,0x00000000,0x55555553,0xaaaaaaa8,0x0d544001,
    0x003d0000,0x00000000,0x00000000,0x00355100,0x40000330,0xefefedc9,
    0x372000bd,0x001f8802,0x864009b5,0xe8800048,0x3ffff22f,0x3ffe0fff,
    0xb805ffff,0xdffffffd,0x2ba20003,0xb35c0000,0x3f220009,0x4c000004,
    0x75c003fc,0x3dfffeff,0x003ffb80,0x04df7540,0x800ef5cc,0x3e200de9,
    0x00eec401,0x0f4c2e98,0x0dff7000,0x3fe0ffc8,0x77f44004,0xdff9510a,
    0x3fb22001,0x002dffff,0x001ea4e8,0x009fffb5,0x3ff6a000,0xbfd3003f,
    0x77f54415,0x017ffa01,0x000efd40,0xed800faa,0x4403f100,0x07f2005f,
    0x98001f4c,0x7fe405ff,0xb8013fe0,0xffe804ff,0x467f4c03,0x0fffb89e,
    0x7c43f100,0x3fa6a002,0x5000004f,0x7007fff3,0xff9009ff,0x01fffe07,
    0x8000bf20,0xbf5005d8,0xfd807e20,0x803f7001,0x530004f8,0x7c1ff900,
    0x9ff7004f,0x0fffe200,0x43d17fc4,0xd7000ff8,0xf70009b0,0x8000009f,
    0x7dc03ffc,0x3ff2004f,0x006ffe83,0x00007fa2,0x1ff801ec,0xff501f88,
    0x400fea00,0x000002fb,0x4ff83ff2,0x00fff980,0x203ffe60,0x2a0f47fc,
    0x509d000f,0x9ff5000f,0xfb800000,0x3ffe203f,0x3ffe2000,0x0037fec1,
    0x400001dd,0x3ff801e8,0xff901f88,0x001ff100,0x00000ff4,0x3fe0ffc8,
    0x04ffe804,0xe85ffc80,0x07c0f45f,0x7c40fc40,0x27fd4002,0x3ee00000,
    0x13ffa03f,0x91bff600,0x3f200bff,0x5a800001,0x442ffc40,0x01ffb01f,
    0x54004fe8,0x9000006f,0x027fc1ff,0x0003ffee,0xff0fffe6,0x06c0f41f,
    0x0bb035c0,0x004ffa80,0x1ffdc000,0x000fffb8,0x2e3fff98,0x3fa804ff,
    0x03a00000,0xf884ffa8,0x403ffb01,0x44001ff9,0x800002ff,0x13fe0ffc,
    0x000dfff0,0x3f637ffc,0x00a07a2f,0x00f50274,0x0004ffa8,0x81ffdc00,
    0x20006ffe,0x3fea6ffe,0x0037c403,0x3723bdd7,0x3ee03c83,0x701f883f,
    0x37ec05ff,0x006fe800,0xff900ee2,0xf1027fc1,0x6c000bff,0x3fee0fff,
    0x20003d2f,0x0be201f8,0x4c4ffa80,0x262001bc,0x07ff72cb,0x000bfff1,
    0xfa87ffec,0x00fdc02f,0x9d99774c,0x205a82ff,0x1f882ffc,0x2207ff50,
    0xf90003ff,0xffc9803f,0xf07fe405,0x7ffcc09f,0x3ff20004,0x3fffe21f,
    0xd70001eb,0x5400bb00,0xffff54ff,0x7bf9009f,0x07ffbdfb,0x0009fff3,
    0xf98fffe4,0x4037401f,0xffeb85fa,0x3f205980,0x301f881f,0x3ff207ff,
    0x9ff50003,0x2ffff640,0xff83ff20,0x0fffee04,0x2fffb800,0x0fffffd4,
    0xa804e800,0x33fea007,0xfffffffa,0xd10ff606,0xff707fff,0x7e40007f,
    0x01ff13ff,0x3ea01fcc,0x06ff980e,0x83fcc0d1,0x1ff101f8,0x000bffa0,
    0x5c037fcc,0x7fe405ff,0xfc813fe0,0x2a0002ff,0xffa84fff,0x44001eff,
    0x02f8801f,0x15ddff50,0x20ffff66,0xfff105fd,0x05fff907,0x27ffdc00,
    0x00fc80ff,0x7cc07fe2,0xe80f303f,0x101f880f,0x0fffc0bf,0x0fff9800,
    0x202ffcc0,0x13fe0ffc,0x002fffc8,0x413ffea0,0x03ffffe9,0x5d801ae0,
    0x01dff500,0xf983fff6,0x0fff600f,0x000bfff2,0x3a4fffa8,0x3a037407,
    0x07fee04f,0x0fee035c,0x17dc07e2,0x000fff88,0x803fff10,0x7e405ff9,
    0xc813fe0f,0x20003fff,0x6403fffb,0x800dffff,0x01ea003e,0xf1027fd4,
    0x02ff45ff,0x3ee0ffee,0x2e0003ff,0x01b62fff,0x07fdc0bf,0x2e40ffb0,
    0x3e207640,0x2603f881,0x7c0007ff,0x7fc402ff,0xf07fe405,0x7ffdc09f,
    0x3ff20004,0xfffe802f,0x07e600ef,0xf5005f00,0x3ffc809f,0xfb809ff3,
    0x4fffa83f,0x3fff2000,0x4f881721,0xff017fe0,0xa801f409,0x4c3f11ce,
    0x7fd401dd,0x7ffc0007,0x02ffc403,0x4ff83ff2,0x017ffea0,0x01fffd80,
    0xefffdae8,0xb000d700,0x09ff500b,0xff75ffb8,0x83ffb807,0x0005fff8,
    0x4c83fff6,0x7d40fe20,0x0bfee01f,0xd10007c4,0x0ef87e2d,0x007ffb80,
    0x201fff40,0x7e405ff8,0xf013fe0f,0x6c000dff,0x23d006ff,0x7d04fffb,
    0x801f5000,0x7d404ffa,0x807ff95f,0xfff03ffb,0x7ff4000d,0x5f301dc6,
    0xf881ff60,0x00d300ff,0x83f11764,0x7fd404ea,0x7ffc0007,0x02ffc402,
    0x4ff83ff2,0x007ffec0,0x002fff80,0x43ffdc3d,0x5f0001f9,0x404ffa80,
    0x9ffb4ff9,0x903ffb80,0x20001fff,0x00cc3fff,0x17fe07f1,0x3606ffc8,
    0x886d8803,0x540bd01f,0x20000fff,0x7c401fff,0x07fe405f,0xff8809ff,
    0xffb8004f,0xff07a006,0x0006b81f,0x9ff50176,0xf92ffa80,0x3ffb80bf,
    0x0013ffa0,0x40017fee,0x04ff884f,0x2a07ffd3,0x105f9006,0x40fea03f,
    0x0000fff9,0x8801fff1,0x7fe405ff,0x26013fe0,0x7c000fff,0xe82442ff,
    0x3a07fec1,0x03ea0003,0x5c04ffa8,0x0dff71ff,0x2a03ffb8,0x7c000fff,
    0xbd0000ff,0xd30bff30,0x3f105ff5,0x7c41fe00,0xff81be01,0xff30001f,
    0x0bff100f,0x3fe0ffc8,0x09ff7004,0x441ffdc0,0x7fd83d07,0x200007cc,
    0x13fea02f,0x7fd4dfb0,0x0ffee02f,0x4009ffb0,0x03303ffb,0x3ffd06d8,
    0x07fd4754,0x7d400fa2,0x101f880f,0x3ff603ff,0xdff50002,0x80bff100,
    0x13fe0ffc,0x803ffd80,0x5f103ffb,0x44ff83d0,0x5c80006c,0x8813fea0,
    0x37ff41ff,0x9007ff70,0xff9007ff,0x80ffee07,0xfffc81fa,0x5ff30efd,
    0x03a0ff26,0x3e207ff2,0x209ff301,0x70003ffb,0xff1007ff,0x20ffc80b,
    0x7dc004ff,0xffd880df,0xd03be203,0x3a077dc3,0x0fa80003,0x6c0bff50,
    0xefff983f,0x02fff4c0,0x981dffa8,0x3fa01efd,0x4427c06f,0xfe84fffd,
    0x4b81cfff,0xf105ff90,0x40ffee03,0x90004ff8,0xff1001ff,0x20ffc80b,
    0xc88004ff,0xfffddfff,0x7ffc400b,0x3bee27a2,0x00007cc1,0xffd302f8,
    0x01fec43d,0xb7bffff7,0x0bdfff9d,0xddffd910,0xf9009dff,0x207c807f,
    0x04d4c019,0xff500f88,0x3203f107,0x1ff202ff,0x8027f400,0x7e405ff8,
    0x0013fe0f,0xfffffd88,0x3ff26000,0x04ffefdf,0x640000d9,0x7fff5405,
    0xfa801efe,0xfb8dffff,0x988001cf,0x198001bb,0x0003f880,0xf3026c00,
    0x203f10bf,0x3e201ffd,0x7fd4001f,0x09ff1000,0x3fe0ffc8,0xffc80004,
    0x330005ff,0x1a8039d5,0x00a20000,0x0004d544,0x0510554c,0x00000000,
    0x0001fa80,0x4401d700,0x01f884ff,0xfc801ffb,0x027ec003,0xc807ff10,
    0x013fe0ff,0x7fffd400,0x00f40003,0x00000000,0x00000000,0x00000000,
    0x00007640,0x3e003b20,0x701f883f,0x03fa00ff,0x20037c40,0x7e402ff8,
    0x0013fe0f,0x2fffe980,0x00076000,0x00000000,0x00000000,0x00000000,
    0x80000f6c,0xff8800ec,0xf301f880,0x017e200f,0x260007dc,0x7fe400ff,
    0x00013fe0,0x00fff660,0x00000000,0x00000000,0x00000000,0x7dc00000,
    0x3b660003,0x207f7000,0x0bf201f8,0x2a017cc0,0x260d401f,0x4cccc44f,
    0x37fe0ffc,0x00009999,0x839dfb30,0xccccccc9,0xcccccccc,0x00001ccc,
    0x00000000,0x00000000,0xee980000,0x5dd5000b,0x102f4400,0x00ed803f,
    0x3ae07b10,0x927fe401,0xffffc81f,0x3ffe0fff,0x0005ffff,0x96edd440,
    0xeeeeeee9,0xeeeeeeee,0x00001eee,0x00000000,0x00000000,0x36600000,
    0xcbaabcdf,0x22002eed,0x0fc403fc,0x7001fdc0,0xf7004c89,0x101dbfff,
    0x83333333,0x09999999,0x00000000,0x00000000,0x00000000,0x00000000,
    0x2a200000,0x09acddcb,0x800ac800,0x751001e8,0x01884c00,0x0166e540,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x05554cc0,0x0000004c,0x01a80000,0x00000051,0x00351000,
    0x00005440,0x03531000,0x04d4c000,0x98800000,0x3553100a,0x80aa8800,
    0x00188018,0x77fffe4c,0x03b1ceff,0x2a0275c4,0x8800006e,0x220d902f,
    0x3ae202fd,0x7f4c0006,0xc8000efd,0xfd730006,0x7fec4039,0x30003fff,
    0x05ffffd9,0x3b6a0000,0xdfc882ce,0x5404ffec,0xbdffffff,0x3f2204c8,
    0x9ffb1004,0xfffa8815,0xfffd982f,0x6fffc884,0x0f980000,0x3fee09b0,
    0x6fffc986,0x43be2000,0x2a000ef9,0xadd8001f,0xe886ffea,0x4fffffff,
    0x8e7fcc00,0x00001fea,0x88037fa6,0x0effa85e,0x731cffd8,0x9309fffd,
    0xd1009fff,0xfb1005ff,0xffb3505f,0xdff93309,0x0f700000,0x5ff981fc,
    0x06ffd998,0xfd0ffa00,0x00fe2009,0xfe883f20,0x4c5ee43f,0x000ffffc,
    0xdf50bff1,0x3fea0000,0x700fd803,0x0ffc89ff,0xb713ff60,0x9809fff7,
    0x6c002fff,0x13fea03f,0x0006ff88,0x3f305c80,0x3e6014c0,0xff30006f,
    0xb007fc83,0x09f7000d,0x82d47ff3,0x5003fff8,0x0ff105ff,0x05ff7000,
    0x7c01ff10,0x013fe67f,0xffb813f6,0x017ff404,0xf301fc40,0x06ff809f,
    0x504e8000,0xf880001f,0xff50006f,0x401ffb81,0xfe8000fa,0x40483103,
    0xf9005ffc,0x00df303f,0x004ff980,0x7f407ff3,0x001ff72f,0x7fd409f1,
    0x01bff204,0x3e604b80,0x037fc04f,0xc817c000,0xff880006,0x1ff90006,
    0x2202ffa8,0x7ff0003f,0x7fcc0000,0x07ffb003,0x440007f9,0x3e2006fe,
    0x4fff606f,0x9b002ffc,0x9827fcc0,0x20002fff,0x13fe6058,0x0000dff0,
    0x09d01f98,0x01bfe000,0x2a07fe40,0x017602ff,0x001ffcc0,0x003ff100,
    0xff117ff2,0x7fec0001,0x02fec000,0x3ff23ffd,0x4c097006,0xdff904ff,
    0xf9800000,0x037fc04f,0x95555100,0xf555555f,0x4000155b,0xf70006ff,
    0x01ffb83f,0x2a0001f7,0x200003ff,0x3ee005fa,0x05fd30ff,0x02ffd400,
    0x3ffc0180,0x801bfff5,0x13fe6038,0x0002fffc,0x013fe600,0x33310dff,
    0x7fd41333,0xffffffff,0x82ffffff,0x37fc02b8,0xf9806ee2,0x407fdc2f,
    0x4c4002f8,0x999bffc9,0x01760000,0xf77fff10,0x55554c3d,0xfff882aa,
    0xfa800002,0x3fffe23f,0x3e60002e,0x4fffa84f,0x7cc00000,0x437fc04f,
    0x0cdfffe9,0x07a827c0,0xf017ff26,0x7fffe4df,0xfd0ffa06,0x20017a09,
    0xfffffffc,0xd90004ff,0xfffd0001,0xfffd307f,0xfff505bf,0x037bfb6a,
    0x4c2ff400,0x00dfffff,0xb84ff980,0x00003fff,0x2027fcc0,0x3df706ff,
    0x640be200,0xbfffd906,0xee8eff80,0x303fffdc,0x407fccdf,0x988000fb,
    0x999bffc9,0x7fe44000,0xfffb8003,0x03ffe603,0xbdeeffc8,0x002fffec,
    0xfa807fcc,0x00cfffff,0x3213fe60,0x2e002fff,0xeffffffe,0x2027fcc2,
    0x05f986ff,0x4e807d40,0x202ffdc0,0x7cc3eeff,0x9bd500ff,0x05f301df,
    0x07ff7000,0x3fff6600,0xc8800dff,0x200fffff,0x7fec02ff,0x1fffc81d,
    0x300bf600,0x7ffffffd,0x213fe600,0x8002fffd,0x303ffff8,0x6ff809ff,
    0x5c0027cc,0xf300fe07,0x1fff80bf,0x9803ffb0,0x4417a01a,0x7dc01cdb,
    0x7310003f,0x80dffff9,0xfffaaffa,0xf00bf305,0x7ff401ff,0x007f3006,
    0x7fffffdc,0x27fcc00e,0x001fffdc,0x300fffd8,0x6ff809ff,0x6c000fea,
    0x9803f305,0x37fc05ff,0x0005ff90,0xef980fc8,0x3ee05fb9,0xb100003f,
    0x3f203fff,0x0bfffa1f,0xff3003ee,0x7ffd401f,0x8005d801,0xffffffd8,
    0x213fe600,0x0004fffa,0x7cc0fff9,0xbb7fc04f,0x13e0003f,0x7fcc03dc,
    0x7037fc05,0x4c0005ff,0x20ff882f,0x7ff703fc,0xffe80000,0x540ffc84,
    0x3a20ffff,0x07ffa803,0x4402fff8,0x3a60000f,0x300effff,0xfff309ff,
    0x3fee000d,0x013fe606,0x01ff7dff,0x7ffffd40,0xffffffff,0x7fcc2fff,
    0x7037fc05,0x740005ff,0xf98df904,0x03ffb80f,0x37fcc000,0x7ec17fea,
    0x401b25ff,0xfd807ff9,0x0024c04f,0x3ffffb80,0x3e09ff30,0xb8000fff,
    0x3fe606ff,0x7ef7fc04,0x2aa2006f,0xaaaaabfc,0x40aaaadf,0x7fc05ff9,
    0x00ffee06,0x9fd03640,0xfb82ff88,0xf800003f,0x817ff47f,0xfaaffff8,
    0x0fff1000,0xb809ff90,0xa8005402,0xff306fff,0x0fffee09,0x81bfee00,
    0x7fc04ff9,0x004ffe8e,0x00be07b8,0xff017fe6,0x01ffdc0d,0xf880fcc0,
    0xb84ff84f,0x800003ff,0x3ffea6fd,0x3bffea00,0x7ffc003f,0x017fdc00,
    0x00770032,0xf983ffdc,0x3fffa04f,0x37fdc000,0xf809ff30,0x07fff16f,
    0x3f305d80,0x80bff300,0x3fee06ff,0x02744003,0xbff07ff3,0x0007ff70,
    0x7dc9f900,0x7fec01ff,0xffd8007f,0x00ffdc02,0x801ae006,0xff307ff9,
    0x27ffd409,0x81bfee00,0x7fc04ff9,0x007ffea6,0x00f703f8,0xff017fe6,
    0x01ffdc0d,0xff101b20,0xf70bff07,0xb000007f,0x27ffe43f,0x37fffa20,
    0x9ff50e00,0x0006fd80,0x22001f70,0x9ff306ff,0x02fffb80,0x981bfee0,
    0x37fc04ff,0x2003fff2,0x00b902f8,0xff017fe6,0x01ffdc0d,0xfd003f50,
    0xb84ff889,0x400003ff,0x7ffd44f9,0x7fff4c07,0xd85a80ef,0x0bfa00ff,
    0xbf7002a0,0x40fff200,0xe9804ff9,0xff7003ff,0x02ffcc0d,0x3ff61ffe,
    0xd00fa806,0x17fe6009,0x2e06ff88,0x7f1003ff,0xf317f600,0x07ff705f,
    0x44073220,0x7ffc40ee,0xadfc80df,0x9acfffff,0x5fe881fc,0xfb00bf50,
    0x2ffdc03f,0xa81bfe20,0xfb1005ff,0xf91037df,0x7fd407ff,0x21ffe205,
    0x5c05fff8,0x5400be07,0x3fe206ff,0x013fee07,0xff10036c,0xfc837e41,
    0xfff5004f,0x09f7335d,0x6fffffd4,0x3a22ffec,0x4fffffff,0xf50ffe60,
    0x9fff1009,0x5f7ffdc0,0x0077f4c1,0x4001dff9,0xedfffeca,0xc802dfff,
    0xff500fff,0xbfff903f,0x7cc17601,0x1fff9001,0x407ffea0,0xfa805ffe,
    0x4efcc000,0xff881efb,0xffd000ef,0x003bffff,0xffffffd3,0x3fff201b,
    0xfe9803ef,0x2003edcf,0x32e02ffe,0xfefffdb9,0xfdd303ff,0x007dffff,
    0x13557530,0xffffd500,0x3ffae1bd,0xff52efff,0xa81bffff,0xd7005101,
    0x21bdffff,0xefffffea,0xdffffdb1,0x000fe209,0x2067764c,0xffffffd9,
    0x554c00cd,0x75300009,0x0dcc0015,0x00554400,0x05400a80,0x026b2aa2,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x01980000,0x00355300,0x00003510,0x1806aa62,
    0x2ee61540,0x7fffdc01,0xffffffff,0x02f2a603,0x26666620,0x99998809,
    0x01a98000,0xa86f2e60,0xfffffb81,0x6400efff,0x94ffffff,0xfffffffd,
    0x7ff6405d,0x2204efff,0xffffffff,0x77f5c403,0xffb800df,0xb803ffde,
    0x00dffefe,0xefffd980,0x0d51bdff,0x3a29ff91,0xd00dffff,0xffffffff,
    0xb103ffff,0x99dfb5bf,0x3fee1799,0xc982dfff,0x44003fff,0xffa804fe,
    0x3fedffdd,0x3bfffee0,0x3ff62000,0xfffe981d,0x3fa6001d,0xfffc803f,
    0x200fffff,0xdf30cfe8,0x105ff401,0x3f201df7,0x00bff223,0x05efff4c,
    0x8dfdfd31,0xe8cfffec,0x86ffffff,0xfffffffa,0x886fffff,0x7ffcc1ff,
    0x3fe22fff,0x01fe806f,0x404ffc80,0xfffd83fc,0x1fffe403,0x007fcc00,
    0x0003fff7,0xff1007f7,0x09ffffff,0xffb84fe8,0x3a05fc80,0xb04fc85f,
    0xffa803ff,0x7ffa800e,0x17b9ff90,0xb0ffff66,0x3fb8037f,0xff905fd8,
    0x03ffd403,0x7d40027c,0x0ff604ff,0x4403ffe8,0xa8005fff,0x7ffd403f,
    0x01fa8000,0x2e0006c8,0x89fd00ff,0x3ee01ff8,0x403fe60f,0x3ea05ff8,
    0x3fdc006f,0xd02fffa8,0x07e21fff,0x3e60ff40,0x09ff304f,0x2a02ffd8,
    0x77c4001f,0x0ff504ff,0xc803ffc8,0x6c000fff,0x07ffa806,0x8803f500,
    0xff10002f,0x507fdc0b,0x7fc401ff,0xf9017f62,0x3fff105f,0x2a0f9000,
    0x3fea04ff,0x2200352f,0x03ffb86f,0xf980dff1,0x001b605f,0x413febb6,
    0x7fdc03fe,0x2fff9803,0x200fe200,0x50007ffa,0x006c803f,0x980ffee0,
    0x0bfee4ff,0xff10ff98,0x86ffa809,0x10004ffe,0x09ff501f,0x8003ffe8,
    0x4ffb83fb,0x3a01ffe0,0x02f881ff,0x7fcc7dc0,0x402ff984,0xfb003ffb,
    0x07dc00df,0x003ffd40,0x3e201fa8,0xfe8000be,0x3ffe201f,0x5c0dff30,
    0x013fea6f,0xffa8fff1,0x0360001f,0xf9013fea,0x3fd000bf,0x7c0bff30,
    0x5ffa806f,0x7c4007c8,0xf709ff33,0x3ffb803f,0x03fff500,0x7d4017a0,
    0x3f50007f,0x77fffdc0,0x1fff1003,0x3e1ffe80,0x45fd05ff,0xff805ffb,
    0x01fff61f,0xff501300,0x05ffb809,0xff037c40,0x09ff101f,0x9f07ffa0,
    0x3e65e800,0x01ffc84f,0xd001ffdc,0x5f500bff,0x01ffea00,0xf880fd40,
    0x1effffff,0x403ffd40,0x3fee2ffe,0x70ff60df,0xffd00dff,0x017ffe25,
    0x27fd4000,0x0013fea0,0x7fd407f7,0x2006fc84,0x07ea5ffa,0x3e60fc80,
    0x01ffd84f,0x7001ffdc,0x6d801fff,0x01ffea00,0xb880fd40,0xffffffdc,
    0x01ffee03,0xffb0fff6,0x505fb1df,0xfff00fff,0x00fffea7,0x27fd4000,
    0x000ffea0,0xff9803fd,0x00dfd99e,0x6d87ff40,0xf30be600,0x05ffb09f,
    0x2003ffb8,0x2204fff8,0x3fea003f,0x03f50007,0x7ffff4c0,0x00fff703,
    0xff909ffb,0x3e601dff,0x7ffc02ff,0x007fff72,0x13fea000,0x4005ff70,
    0xbe8806f8,0x0001bddc,0x05f19ff7,0x3e613a20,0x04ffb84f,0x2001ffdc,
    0x3ee07ffc,0x1ffea000,0x000fd400,0x407fffe4,0xfd806ffc,0xffff905f,
    0x037ff407,0x3f23fff1,0x000002ff,0xfc80bff5,0x0fee000f,0x00005d10,
    0x00fbfff0,0x4ff98364,0x200fffa8,0x4c003ffb,0x0bf02fff,0x007ffa80,
    0x20003f50,0xfc85fffa,0x5ffd805f,0x9ffffdb0,0x20fffe60,0xf90fffc8,
    0x000005ff,0xff017fea,0x01fe8007,0x000007f4,0x8027ffdc,0x9ff301fa,
    0x2037ffe0,0x8003ffe8,0x1fa86ffd,0x03ffd400,0x0001fa80,0x3f21bfe6,
    0x4ffd806f,0x7fcc7f44,0xfff704ff,0xffdd957b,0x01fffdcf,0xfffa8000,
    0x800df701,0x7fcc06f8,0x9aaaaace,0xfff88000,0x203f8800,0xff704ff9,
    0xbd5115df,0xf50007ff,0x006d83ff,0x0007ff98,0xd80003f5,0x37fdc0ff,
    0xd127ff40,0x7fff443f,0xffffd303,0x547ffd19,0x00005fff,0x81dfff50,
    0x5c001efa,0x7ffc404f,0xffffffff,0x2fdc001d,0x7cc06d80,0x3fff604f,
    0xffb9ffff,0xbffd0003,0x4c001fc4,0xa8000fff,0x7cc0000f,0x03ffd41f,
    0x9fb1fff4,0x80fffd10,0x3ffea098,0x01bffe60,0x6ffd4000,0x0dfecefc,
    0x801fd800,0xfffffff9,0x002fffff,0x3ea00be6,0xeeeeeeee,0x84eefffe,
    0x70effffb,0x2e0007ff,0x01f90fff,0x01fff300,0x0001f700,0xff987f88,
    0x11fff807,0x3fe205ff,0x7ff4002f,0x03fffc45,0x4ffa8000,0x00013551,
    0xb5401be2,0xcbaaa998,0x1f2005fd,0x7ffffdc0,0xffffffff,0x155106ff,
    0x0003ffb8,0x13e9fff1,0x0fffc400,0x0003e400,0x1ffd06f8,0xf73ffc40,
    0x2ffcc01f,0x01fff300,0x0003fff9,0x009ff500,0x804fa800,0x3f2000f9,
    0x2009f000,0xccccccc9,0xcceffdcc,0x3ffb8003,0x3fff2000,0x3e0001fb,
    0x6d8003ff,0x04f98000,0x7cc05ff7,0x201ff64f,0x3f6006fe,0x9fff102f,
    0x541c4000,0x400004ff,0x2f4401fd,0x5c01e600,0x4c00000f,0x5c0004ff,
    0x260003ff,0x0006ffff,0x20037fec,0xb80004f8,0x09ff100f,0xff90ffdc,
    0x200bf900,0x7e404ff9,0xd88001ff,0x004ffa80,0x201be200,0x264006fc,
    0x00027c40,0x0027fcc0,0x000ffee0,0x007fffb0,0x00fff980,0x0801fd10,
    0x32017cc0,0x517fe07f,0x3fe803ff,0x804ff980,0x000effd8,0x4ffa816c,
    0x13ea0000,0x0033ff60,0x59b30d91,0x00000db3,0x00013fe6,0x80007ff7,
    0x0000fffa,0x401effc8,0x7f403fe8,0x004e980d,0x1ff707fb,0x7cc0bfb0,
    0x03fe9806,0x017ffe40,0xff701f44,0x7ec0000b,0xffff8801,0xfcbaaacd,
    0xffffe80d,0x3000000f,0xc80009ff,0xe80004ff,0x3200004f,0x730abfff,
    0xf8807ffb,0xfdbbefff,0x87fa2002,0xfd101ffa,0x801dd309,0x70001efb,
    0x137bffff,0x4c05fb73,0x0002fffe,0x26006f88,0xfffffffd,0x3ff202ef,
    0x000002ff,0x80013fe6,0x001effe9,0x0000fdc0,0x3ffff6a0,0x001dffff,
    0x9dffffd5,0xdf910001,0xf70017dd,0x209ff9bd,0x002efeb9,0xfffec980,
    0x100cffff,0xdddddddd,0x0d440003,0x6ee5cc00,0xdb8801ac,0x98000002,
    0xe88004ff,0x06eeeeee,0x0000e200,0xabbaa880,0x35100009,0x01980000,
    0x80355100,0x000009aa,0x006aee60,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x3ea00000,0x1effffff,
    0xffffffd1,0xffd301df,0xfd509fff,0xbfffffff,0x00026000,0x7fffff54,
    0x3ffb2002,0x4403efff,0xff9801a9,0xffffffff,0xffffe984,0xffd50eff,
    0x00009fff,0x3dfffff9,0x3fffffa6,0x4003efff,0xffffffea,0x7ff544ef,
    0xa81effff,0xfffffffe,0xffffffff,0x7fffdc2f,0xdfffd102,0x03bfe200,
    0x0bbfff20,0x0009b000,0x1ffffc88,0x0f7f4c00,0x3ffff620,0xffc9804f,
    0xf8805fff,0x3f600cff,0x20000fff,0x00cffff8,0x05ffff71,0x3fff2000,
    0x7ffdc00e,0xfff9000c,0x97555559,0xffb05ffd,0x4fffa80f,0x4003f600,
    0x0004fff8,0x00007fcc,0x0077ffdc,0xf500bee0,0xdfffffff,0xffff3001,
    0x00bfa007,0x00ffffe6,0x0ffffb80,0x005fff80,0x13ffe200,0x000bff20,
    0x9005fff1,0x3fff507f,0x006ffe80,0xfff0017a,0xffc80007,0xffb00003,
    0x1fa800bf,0x2b3bfe20,0x006fffeb,0x700ffff5,0x3fe2007f,0x3e0006ff,
    0xfd007fff,0xf800009f,0x77cc03ff,0xfff88000,0x3e07d002,0x7fdc04ff,
    0x02f9800f,0x0017ffc0,0x00dfff10,0x3ffff600,0x803ea004,0xfff901fd,
    0x3fff2007,0x0013e603,0x005fffbf,0x0fffbf50,0x0013ffa0,0x405fff00,
    0x20000ef9,0x75002fff,0x101bff20,0xf7005fff,0x05fff000,0x7fffdc00,
    0xeed80001,0xf5002fff,0x3a017c01,0x3f6006ff,0x06e881ff,0x6ffdbf80,
    0xffaee800,0x07ffd007,0x2fff8000,0x0001df10,0x2002fff8,0x03fff301,
    0xe805ffd8,0x2fff8004,0x3fb7a000,0xdd80005f,0x801ffff8,0x00b300fa,
    0x4400fff3,0x0fd86fff,0xff9bf800,0x2bea002f,0xfd007ffa,0xf800007f,
    0x0ef982ff,0x2fff8000,0x9ffd0000,0x00fffd80,0x3e0007e6,0xf50002ff,
    0x001fff55,0xfff35d80,0x00fa801d,0xfff10013,0x3fffb800,0x7c0007f2,
    0x400bffd3,0x00fff56d,0x0000fffa,0xf985fff0,0xff00000e,0x800c405f,
    0x3e207ffb,0x1f203fff,0x017ffc00,0x3ffe6d80,0x72ec0003,0xfa80dfff,
    0x5ff80000,0x9fffd800,0x3e0003fa,0x003fff53,0x1ffea7f3,0x001fff40,
    0x98bffe00,0x200000ef,0x0ee02fff,0x80fffcc0,0x206ffdfa,0xfff0004e,
    0x47f10005,0x40007ffc,0x27ffe45d,0x80001f50,0x88003ff8,0x005fefff,
    0xbffd1fc0,0x3ea1fb00,0x7ffd007f,0xfff80000,0x0001df52,0x202fff80,
    0x3ffa003e,0xfff5db04,0x0003f301,0x2000bffe,0x3ffe20fc,0x21760002,
    0xf503fffe,0xffa80001,0xfff50001,0x3f80001d,0x8803ffea,0x01ffea4f,
    0x0001fff4,0x3eabffe0,0xf800000f,0xb9999bff,0x3ee003fd,0xff3f887f,
    0x000f907f,0x20017ffc,0x5ffd84f8,0x22176000,0xfa81fffe,0x27dc0000,
    0x3fff6000,0x21fc0001,0x3f204fff,0x401ffea0,0x00003ffe,0x7ffefffc,
    0xff800004,0xffffffff,0x3fe2003f,0xfc87dc2f,0x0004f86f,0x7000bffe,
    0x3fff501f,0x4c176000,0x7d40ffff,0x3fe20000,0x7fdc0000,0x1fc0006f,
    0x2203ffee,0x03ffd44f,0x0003ffe8,0x7fe7ffc0,0x400004ff,0x9999bfff,
    0x6c003fda,0xf32f45ff,0x00fcc3ff,0x005fff00,0x3ffa05e8,0x40bb0004,
    0x7d46fffa,0x0ff20000,0xffdf3000,0x1fc0009f,0x2e0fffe2,0x03ffd41f,
    0x0003ffe8,0x7cd7ffc0,0x00004fff,0x3c80bffe,0x87ffd400,0x27ff42f8,
    0xff8000d9,0x0be6002f,0x000fffb8,0x7fe405d8,0x0003ea5f,0x20002fc4,
    0x3fffb5e8,0x320fe000,0xa85f87ff,0xffd007ff,0xff800007,0x9ffff32f,
    0x3ffe0000,0x1000ea02,0x03ee5fff,0x027cfff7,0x00bffe00,0xaaaaafd8,
    0x03fffbaa,0xfd805d80,0x001f53ff,0x20001b60,0xdfff10ed,0x220fe000,
    0x07ea3fff,0x7401ffea,0x400003ff,0x3fe62fff,0xf80004ff,0x00a202ff,
    0x2f57ff60,0x7ccfffcc,0x7ffc0001,0xffff1002,0xffffffff,0x0bb000df,
    0x55fffd10,0x1d90001f,0x41fc8000,0x8004fffb,0x4dff903f,0x0fff506e,
    0x000fffa0,0x885fff00,0x0004ffff,0x00017ffc,0x7cfffd40,0xd99ffd02,
    0x3fff0000,0x2003f200,0x4001fff9,0xfff1005d,0xb8001f7f,0x7d40001f,
    0x03fffb03,0xff303f80,0x2a05f55f,0xffd007ff,0x20130007,0xff882fff,
    0x3e0004ff,0x000002ff,0x5c0fdfff,0x0003ffff,0xf000fff8,0x2fff4009,
    0xa8017600,0x000fffff,0x300007ea,0x7ffc40bf,0xb01fc006,0x540dbdff,
    0xffd007ff,0x7c0d0007,0xffd102ff,0x3fe0009f,0x9000002f,0x7c409fff,
    0x80001fff,0x1f5007ff,0x07ffd400,0xb800bb00,0x3000ffff,0xe880003f,
    0x4fffb806,0xf980fe00,0x3ea03fff,0x7ffd007f,0x3e04b800,0x3fa202ff,
    0xff8004ff,0x3000002f,0xfd803fff,0x1f5c006f,0x2f4017fe,0x027ffc00,
    0xfb000dd0,0x5f3001ff,0x3a203300,0xfffd000f,0xd013e005,0x7dc01fff,
    0x9ffd007f,0xf017c400,0xff8807ff,0x7fc005ff,0x2000003f,0xffb807fe,
    0x3ffe2003,0x5001ff11,0xffb0007f,0x01ba001f,0x2007ff40,0x0e9802fa,
    0x2004fe88,0x401ffffa,0x7fd404f8,0x07ffdc04,0x8037ffc0,0x3fe207fa,
    0xfff9804f,0xff8800df,0x2000003f,0xff8804fc,0x77ff4000,0xfd002fa8,
    0xfff70001,0x05ff7009,0x401ff100,0xcccccefa,0xa86feedc,0x2e005fff,
    0x80afffff,0x7401ffc8,0x3ffa600f,0x3ff2203f,0xcccccdff,0x105ffecc,
    0x801dfff9,0xbffffff9,0xdfff9101,0x26000001,0x00db001f,0x5bdfff50,
    0x07ffb100,0x7ffff900,0xffffc881,0x26000cff,0xffff500f,0xffffffff,
    0x7fffdc7f,0x3aa04fff,0xffffffff,0xfffffb33,0x5c12e09d,0xfffffffe,
    0xffff911d,0xffffffff,0x985fffff,0xfffffffd,0xffffd83d,0x31efffff,
    0xfffffffb,0x7000007b,0x00014c00,0x3ee00173,0x804fffff,0xfffffffc,
    0x4000003f,0xffff8809,0xffffffff,0x000000ff,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x7ff4c000,0xeeffffff,0x26000ace,
    0xfffffffe,0xfffed85e,0xf71effff,0xdfffffff,0x7fffe407,0xffd33eff,
    0xffffffff,0x1fffffff,0xfffffe98,0xcdeeffff,0xfff8001b,0xffffffff,
    0x23ffffff,0xffffffea,0xbcceefff,0x7fffe400,0xffffffff,0x26ffffff,
    0xffffffe8,0xffd50eff,0xddffffff,0x5dc4017b,0x0a600c00,0x79dfff91,
    0x03dffd97,0x1ffff900,0x9ffff300,0x3ffff220,0x3ff6001f,0xfff7102f,
    0x5555555b,0x2203ffb9,0xbceffffc,0xcffffedb,0x9bfff000,0xb9999999,
    0x3220bfff,0xa9abdfff,0x00dfffdb,0x999bdffb,0x9999dffd,0x3ea0fffd,
    0x9100bfff,0xfb9bdfff,0x3f207fff,0x981a204f,0x7ffc44ff,0x09fff902,
    0x04fff880,0x003fff20,0x800dfff7,0xff800ffb,0x03f5003f,0x201fffc4,
    0x402ffffb,0x3fa005f8,0x3fe200ff,0x3ff6203f,0x902fd81f,0x1fe20bff,
    0x8806ffe8,0xffa82fff,0x37ff40df,0x7fdc0d90,0x202fff86,0x4001fffc,
    0x2e003fff,0xffb007ff,0x0ff4003f,0x003ffe80,0x7fff00ba,0x7fffd300,
    0xf9003c40,0xfff005ff,0x1fffb007,0x3ff202d8,0xfd81e205,0x5fff005f,
    0x517ffee0,0x1be605ff,0xff86ffb8,0x3ffe202f,0x17ffc004,0x00fff700,
    0x401bffe2,0x3fa004f9,0x00ae003f,0x74007fff,0x0b301fff,0x017ffe60,
    0x4401fffc,0x00744fff,0x0e80bff9,0x200bffb0,0x3f602fff,0xf10040ff,
    0x2ffd40df,0x3a017ffc,0x7fc007ff,0x3fee002f,0x3ffee007,0x4006d803,
    0x22003ffe,0x01fffc00,0x01ffff30,0xffd10055,0x3ffe001d,0x8dffd003,
    0x02ffe403,0x2ffe402a,0x202fff80,0x3002fffb,0x1333dffd,0x7fc1ffc4,
    0x7ffec02f,0x0bffe001,0x007ffb80,0x7007fff4,0xffe8003f,0x7fc00003,
    0x7fec003f,0x3f20003f,0x3fe001ff,0xfffb003f,0x05ffc800,0x017ff200,
    0xf5017ffc,0xff700bff,0x89ffffff,0x2fff82ff,0x003fff40,0xb800bffe,
    0x7c4007ff,0x09f105ff,0x007ffd00,0x3ffe0013,0x7ffc4003,0xfff50006,
    0x3fff8009,0x009fff00,0x0005ffc8,0x7c017ff2,0x3fe602ff,0x3fe2004f,
    0x7c07f406,0x3fe202ff,0x7ffc005f,0x1ffee002,0x0bffee00,0x3a0003f6,
    0x01c803ff,0x0007fff0,0x8003fffd,0x8006fff8,0xf9803fff,0x7e4002ff,
    0x3f20005f,0x5fff005f,0x01fffd40,0xc80dff10,0x405fff07,0x4001fffe,
    0x2e002fff,0xfd0007ff,0x017d41ff,0x403ffe80,0xfff001f8,0xfffb0007,
    0xfffd8005,0x3fff8001,0x037ffcc0,0x002ffe40,0x200bff90,0x3f602fff,
    0x3e2001ff,0xf835c06f,0xffd982ff,0xfff8002f,0x1ffee002,0xafffcc00,
    0x3a0005e8,0x99999cff,0xf001fea9,0xf70007ff,0x7dc007ff,0xff0003ff,
    0xff73107f,0x3f20009f,0x3f20005f,0x5fff005f,0x00fffea0,0x980dff10,
    0x537fff03,0x019fffb9,0x3bbffe00,0xeeeeeeee,0x0007ffee,0x3f2bffee,
    0x3ffa0000,0xffffffff,0xfff001ff,0xfff50007,0x3ffe6009,0x3ffe0005,
    0xffffffff,0x320001ff,0x320005ff,0xfff005ff,0x5fffc887,0x06ff8800,
    0x3bbffe00,0x0005fffe,0xaaacfff8,0xdaaaaaaa,0x740007ff,0x0003ffff,
    0x4cce7ff4,0x01fea999,0x0007fff0,0x2009fff5,0x0000fffe,0x2aab3ffe,
    0xcffffecb,0x5ffc8000,0x17ff2000,0x7ff7ffc0,0x001dfffe,0x000dff10,
    0xff917ffc,0xff80003f,0x3fee002f,0x7fcc0007,0xfe80006f,0x00fc403f,
    0x8003fff8,0xc803fffb,0x40002fff,0x7e403fff,0x64002fff,0x320005ff,
    0xfff005ff,0x20026625,0xdff100a8,0x17ffc000,0x0001bffa,0x5c005fff,
    0xd80007ff,0xe80004ff,0x01d803ff,0x0007fff0,0x9803fff9,0x80005fff,
    0xfb803fff,0x32000fff,0x320005ff,0xfff005ff,0xfff10005,0x00dff109,
    0x2217ffc0,0x20004fff,0x2e002fff,0xd80007ff,0xe80004ff,0x00a803ff,
    0x0007fff0,0x4401fffd,0x0000fffe,0x9003fff8,0x6400bfff,0x320005ff,
    0xfff005ff,0xfff50005,0x06ff881f,0x20bffe00,0x0002fffa,0x5c005fff,
    0xd80007ff,0xe80004ff,0x400003ff,0x44003fff,0x7e406fff,0xf00001ff,
    0x3ea007ff,0x3f2007ff,0x3f20005f,0x5fff005f,0xffff1000,0x006ff887,
    0x6c0bffe0,0xf8000fff,0x3ee002ff,0xfd80007f,0xfe80004f,0x7c00003f,
    0x7e4003ff,0x3fea02ff,0xf00c004f,0x3e2007ff,0x3f2007ff,0x3f20005f,
    0x5fff005f,0x362a2000,0x0037fc44,0x2205fff0,0xf8005ffe,0x3ee002ff,
    0xfd80007f,0xfe80004f,0x00d8003f,0x4c007fff,0x3e205fff,0x058006ff,
    0x4400fffe,0x32005fff,0x320005ff,0xfff005ff,0x03f00005,0x20008fff,
    0x3e602fff,0x7fc003ff,0x3fee002f,0xffd80007,0xffe80004,0xf02dc003,
    0x7ec007ff,0x3ff600ff,0x02cc001f,0x2a007fff,0x32003fff,0x360005ff,
    0xfff005ff,0x06a80005,0x01265ffd,0x5c03fff8,0x3e002fff,0x3ee003ff,
    0xfe80007f,0xfe80004f,0x0be2004f,0x8803fff8,0x2e02fffd,0xe8003fff,
    0x00fffe04,0x003fffa2,0x0005ffc8,0x7c017ff6,0x220003ff,0xdfff903e,
    0x7ffc400d,0x1fffd804,0x04fff880,0x003fff20,0x00bffd00,0x009fff00,
    0xff881fa6,0x7ffd403f,0x3ffe200d,0x17e44006,0x403fff88,0x001effe9,
    0x00037fec,0xf100dffd,0x2a0007ff,0x6ffec02f,0xfff91001,0xfff8803d,
    0xff9101cf,0xfd3001df,0x5c0007ff,0x0001ffff,0x2affffea,0xfcbaaaaa,
    0xfff9105f,0xdb73579d,0xfd005fff,0x555559ff,0xff975555,0xfff9103f,
    0xb753579d,0x8001bfff,0x002ffffa,0x01ffffa8,0x07bfff22,0x20019500,
    0xffb30008,0x07dfffff,0x7fffffd4,0xfffffb31,0xfd707bff,0x39dfffff,
    0xffff9100,0x2009dfff,0xfffffec8,0xffffffff,0x7ecc2fff,0xffffffff,
    0x001abcef,0xfffffff7,0xffffffff,0xfd98ffff,0xffffffff,0x02cdefff,
    0x7ffffe40,0x6400cfff,0xefffffff,0xffffb30c,0x0007dfff,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x98000000,0x80000002,0x00003328,0x4cc41750,0x98809999,
    0x33310999,0x4ccc4333,0x4cc41999,0xbca88099,0x2ea0288a,0x440009bc,
    0x3000acba,0x26015795,0x99809999,0x5cc00199,0x0ea000ab,0x4c403751,
    0x22199999,0x00009999,0x000006c8,0x7d53f660,0xf700002e,0x7fff54bf,
    0xffca83ef,0xfffff73e,0x7ffff5c9,0x7ffecc4e,0x7edefdc3,0xdfea84ff,
    0x8805fffc,0x3ffecdfd,0x3fb7f620,0xffdc82ff,0x7ffec45f,0xcefc801f,
    0x9100dffd,0x7ffe4dff,0xfffb506f,0x7ff549ff,0x6c80004f,0xea800000,
    0x7fecc2ef,0x3f60000c,0x0fffd87f,0x3e207ec0,0xdffb04ff,0x7d41fd80,
    0x2627e442,0x27fdc1ff,0xfd81dd30,0x20cf984f,0xf703fff9,0x0fffc0bf,
    0xfd307f60,0xfffeb83d,0xfffbbfb6,0x37ffcc07,0x00002fd4,0x200000d9,
    0x401cffc8,0x001cffc8,0xf883ffa8,0x81fc00ff,0xff105ffb,0x7f84e80d,
    0x0dfd13a0,0x0fe81ffe,0x220fff98,0x1fff306f,0x6c0bff30,0x0ff201ff,
    0x5407ffcc,0x7d43deff,0x3fea00ff,0x0007741f,0x0000d900,0x00bffd98,
    0x177fdc40,0xfc802200,0xf01ea03f,0x0ffec0ff,0x7fc40f98,0x6ff89700,
    0xf901ffd0,0x90fffc09,0x27ff407f,0xf902ffcc,0x01fee03f,0xff109ffb,
    0x07ffa03f,0x7dcdff90,0x36400000,0xefea8000,0xfd500002,0x1000017d,
    0x026c0dff,0x7d40bff2,0xf10b904f,0xc87101bf,0x81ffb03f,0x32602ff8,
    0xd803fe23,0x5ff985ff,0x7407ff20,0x7ffcc06f,0xb037fc41,0xffd003ff,
    0x00005f37,0x44000d90,0x0001dffb,0x19ffb300,0x2ffd8000,0x7cc00f88,
    0x1fff905f,0x3ff605f0,0x7540002f,0x0ffd40ff,0x3fffe600,0xffffffff,
    0x205ff987,0xff881ffc,0x43ffe804,0x3ee06ff8,0xfff9802f,0x9000004e,
    0xff93000d,0x00000019,0x0077ff22,0x642ffd40,0x81ffd005,0x543ffdf8,
    0x3fffea07,0x3f26002e,0x7dc0ffed,0x37d4000f,0x17fe6000,0xfa81ffc8,
    0x4ffd803f,0x3ee06ff8,0xfff9003f,0x36400000,0x17dfb100,0x40000000,
    0x8002efeb,0x017c0ffe,0x6e43ffb8,0x026c6ff8,0x37ffffea,0x433f6600,
    0x7fec0ffd,0x03fe4001,0x817fe600,0xffc81ffc,0x85ffc804,0x3fee06ff,
    0x0fffa003,0x3bbba600,0xeefeeeee,0x13eeeeee,0x00017ffb,0x7ecc0000,
    0xffb8002f,0xf8801aa4,0x7ec7e26f,0x1003f11f,0x03fffff9,0xffd83df5,
    0x0017fec0,0x80003ff2,0x3f205ff9,0x05ffd81f,0xff84ffb8,0x00ffee06,
    0x00ffffc4,0x3bbbba60,0xeeefeeee,0x4c3eeeee,0x0001cffc,0x3bfaa000,
    0x3fe20002,0xfb000f67,0xffa9ae3f,0xd9800d74,0x3ee0ffff,0x40ffd80e,
    0x21004ffb,0x01003ffb,0x7e40bff3,0x05ffc81f,0xff82ffb8,0x00ffee06,
    0x037fde74,0x00364000,0x05bff710,0x3ee20000,0x900001df,0x001f35ff,
    0x85f4ffa8,0x4407d7ff,0x25fff501,0xffb03ff9,0x00fffa81,0x0fff9a4c,
    0x7fcc3440,0x207ff205,0x6400fffa,0x06ff80ff,0x3200ffee,0x0013ff66,
    0x0000d900,0x002fbfaa,0x33ff2600,0x7cc00000,0xf0005cef,0xff90d7ff,
    0x02c401f9,0x3feebff7,0x983ffb02,0x8f403fff,0x6c04fff8,0x205ff884,
    0xff881ffc,0x837ec03f,0x3fee06ff,0xf107d403,0x400003ff,0x4c00006c,
    0x8000cffd,0x4003efda,0x3ffa0019,0xff90001f,0x9fff307f,0xf100f880,
    0x413ff29f,0xffc81ffe,0x646c883f,0x3f505fff,0x7cc1ffe0,0xdff702ff,
    0xf882ff80,0x0ffee06f,0xffb82f98,0xd900000e,0x32200000,0x5c401dff,
    0xb8002dfe,0xff5004ff,0x7fc4000d,0x007ffa07,0x3fe20bf1,0x4c3fff32,
    0x258afffe,0xabdffff8,0x7fc41ffd,0xffcbceff,0x70fffa03,0x2209ffbd,
    0x7f704ffe,0xb81ffe60,0x09d104ff,0x0002fff4,0x000006c8,0x2177f5c4,
    0x000cffc8,0x801fff60,0x6c0003ff,0x01bea03f,0xf70b7fe2,0xfefffe89,
    0x1ffffb9e,0x7fffffd4,0xfff303ff,0x80bfffff,0xefdffff9,0x84efffc8,
    0x2a0bffe8,0x3ffee04f,0x10bffd01,0x7fe407fd,0x6c80004f,0x2a000000,
    0x17df34fd,0x9ff70000,0x0007e400,0x7f003ea0,0xdffdf100,0xf9307ff9,
    0x3fe619ff,0xfffd101e,0xfd8803df,0x7003ffff,0x7e4bffff,0x7fe400bf,
    0xd503dfef,0x23dfffff,0x4effffed,0xb09ffff3,0x07ffffff,0x00036400,
    0x2994c000,0x02980000,0x80001440,0x10009802,0x2004d54c,0x44002018,
    0x544001aa,0xaa80009a,0x4c0014c0,0x0000002a,0x00000000,0x00000364,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x4c001d40,0x99999999,0x75009999,0x12a00ba8,0x5c403951,
    0x0000001b,0x02980050,0x4c151033,0xcccccccc,0xcccccccc,0x077752cc,
    0x2deda80a,0x5dccea00,0x01bbbbbb,0x00000000,0x00000000,0xfffff100,
    0xffffffff,0x9b7fe445,0x7dc46fff,0x3fffee7f,0x3fffa21f,0x0774006f,
    0x002f9800,0x7d43dff9,0xd33ff43f,0xdddddddd,0xdddddddd,0x07ffe27d,
    0x7f441fff,0x00cfffee,0xffffb96c,0x0003ffff,0x00000000,0x00000000,
    0x3a033bf1,0x3ffae5ff,0xfffee8ef,0x2ffffd70,0x6fffcced,0xfff99df3,
    0x0bfe6009,0x8037f400,0x3f24ffff,0x07ffe26f,0xff300000,0x917ffd49,
    0x7fed443b,0xb87d40be,0xffffffff,0x00000003,0x00000000,0x80f10000,
    0xfa80effc,0x09d71def,0x887bfff3,0x442ecffe,0xf9800fff,0xafb8002f,
    0xfffd803f,0xf897ff27,0x000001ff,0x3fe26fa8,0xc8807e0f,0x2ffdefff,
    0x26666662,0x00000099,0x00000000,0xb1000000,0x80fffd40,0x2003fff8,
    0xff901fff,0x07ff601d,0x87fc3dd1,0x3e200ed9,0x55001f93,0x13fee1f5,
    0x00001fff,0xa883ee00,0xda801620,0x00000bee,0x00000000,0x00000000,
    0x7c406200,0x3fe203ff,0x03ffc006,0x7e40bff5,0x97ffcc2f,0x05fff36d,
    0x8013a36c,0xd0ffe65b,0x000000ff,0x000003c8,0x00000000,0x00000000,
    0x00000000,0x2017ffa0,0x7fc006ff,0x817fe607,0xffc83ffb,0xfffacbbf,
    0xf50be605,0xf88ba003,0xd337e41f,0xdddddddd,0xdddddddd,0x0001407d,
    0x00000000,0x00000000,0x00000000,0x0effc800,0x4006ff80,0x3fe207ff,
    0x40ffea05,0xdfeefca8,0xd82f400b,0xfe86b806,0x99327dc0,0x99999999,
    0x99999999,0x00000005,0x00000000,0x00000000,0x00000000,0x001fffa8,
    0xff800dff,0x817fe207,0x5cc03ffa,0xfb801cff,0x2207f300,0x986d80dd,
    0x0000003f,0x00000000,0x00000000,0x00000000,0x88000000,0x3e002fff,
    0x3ffc006f,0x540bff10,0xfec883ff,0x1cefdcbe,0x7e403f88,0x16e02d80,
    0x000007e2,0x00000000,0x00000000,0x00000000,0x00000000,0xf0017ffa,
    0x7ff800df,0xa817fe20,0x7ffc43ff,0x3fff6b95,0x7c4036c0,0xb0398004,
    0x00000001,0x00000000,0x00000000,0x00000000,0xfc800000,0x6ff8006f,
    0x103ffc00,0x7fd40bff,0xfd2ffcc3,0x5f317fec,0x0007ea00,0x00000000,
    0x00000000,0x00000000,0x00000000,0xa8000000,0x02e01fff,0xff001bfe,
    0x02ffc40f,0x45307ff5,0xd0a61ff8,0x006d800b,0x00000000,0x00000000,
    0x00000000,0x00000000,0x10000000,0x0d805fff,0x7c006ff8,0x17fe607f,
    0xa803ffa8,0x004c02ff,0x00000620,0x00000000,0x00000000,0x00000000,
    0x00000000,0x7ff40000,0x2207c404,0x3e2007ff,0x1bfe607f,0x9804ffb8,
    0x000001ff,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x267fff20,0x7ea99999,0x003fffb8,0x3203fff5,0xffb00fff,0x000a600d,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0xfff98000,
    0xffffffff,0x3ffaa7ff,0xd303efff,0x25dfffff,0xdfffffec,0xdfffffb1,
    0x00000009,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,
};

static signed short stb__times_40_usascii_x[95]={ 0,4,2,0,1,1,1,1,1,0,2,0,1,1,
2,0,1,4,0,1,0,1,1,1,2,1,3,2,0,0,0,1,1,0,0,1,0,0,0,1,0,0,0,0,
0,0,-1,1,0,1,0,2,1,0,0,0,0,0,0,2,0,1,0,-1,2,1,-1,1,1,1,1,1,0,1,
-3,0,1,0,0,1,-1,1,0,1,0,0,0,0,0,0,0,4,2,3,0, };
static signed short stb__times_40_usascii_y[95]={ 32,7,7,7,6,7,7,7,6,6,6,10,28,22,
28,6,7,7,7,7,7,8,7,8,7,7,15,15,11,16,11,7,6,7,8,7,8,8,8,7,8,8,8,8,
8,8,8,7,8,7,8,7,8,8,8,8,8,8,8,7,6,7,7,38,7,15,6,15,6,15,6,15,6,6,
6,6,6,15,15,15,15,15,15,15,10,15,15,15,15,15,15,6,6,6,20, };
static unsigned short stb__times_40_usascii_w[95]={ 0,5,11,18,16,28,27,4,11,11,14,20,7,10,
5,11,16,10,17,15,17,15,16,16,14,16,5,6,20,20,20,14,32,26,23,22,25,22,19,25,26,12,14,27,
22,32,27,24,19,24,25,17,21,26,26,34,26,26,22,9,11,9,17,20,6,15,18,14,18,15,15,17,18,9,
11,19,9,28,18,16,18,18,13,12,11,19,18,26,18,18,16,11,3,10,20, };
static unsigned short stb__times_40_usascii_h[95]={ 0,26,11,26,29,26,26,11,34,34,16,20,11,4,
5,27,26,25,25,26,25,25,26,25,26,26,18,24,18,8,18,26,34,25,24,26,24,24,24,26,24,24,25,24,
24,24,25,26,24,33,24,26,24,25,25,25,24,24,24,33,27,33,14,2,7,18,27,18,27,18,26,25,26,26,
34,26,26,17,17,18,25,25,17,18,23,18,18,18,17,25,17,34,34,34,5, };
static unsigned short stb__times_40_usascii_s[95]={ 252,246,123,57,142,105,166,251,61,73,82,
1,115,190,163,159,1,244,106,150,146,237,194,92,18,33,64,232,22,135,43,
211,1,51,153,50,104,81,235,1,27,199,36,207,184,151,78,221,212,117,1,
226,177,210,183,1,124,54,130,107,171,97,97,142,156,129,183,145,202,160,134,
109,86,76,85,37,27,53,213,196,73,164,39,116,239,176,70,89,232,127,22,
49,45,34,169, };
static unsigned short stb__times_40_usascii_t[95]={ 1,1,160,36,1,36,36,116,1,1,160,
141,160,160,160,1,63,36,90,36,63,63,36,63,63,63,141,116,141,160,141,
36,1,90,116,63,116,116,90,36,116,116,90,90,90,90,90,1,116,1,116,
36,116,63,63,90,90,116,116,1,1,1,160,31,160,141,1,141,1,141,36,
63,36,36,1,36,36,160,141,141,63,63,160,141,116,141,141,141,141,63,160,
1,1,1,160, };
static unsigned short stb__times_40_usascii_a[95]={ 144,192,236,289,289,481,450,104,
192,192,289,326,144,192,144,161,289,289,289,289,289,289,289,289,
289,289,161,161,326,326,326,257,532,417,385,385,417,353,321,417,
417,192,225,417,353,514,417,417,321,417,385,321,353,417,417,545,
417,417,353,192,161,192,271,289,192,257,289,257,289,257,192,289,
289,161,161,289,161,450,289,289,289,289,192,225,161,289,289,417,
289,289,257,277,116,277,313, };

// Call this function with
//    font: NULL or array length
//    data: NULL or specified size
//    height: STB_FONT_times_40_usascii_BITMAP_HEIGHT or STB_FONT_times_40_usascii_BITMAP_HEIGHT_POW2
//    return value: spacing between lines
static void stb_font_times_40_usascii(stb_fontchar font[STB_FONT_times_40_usascii_NUM_CHARS],
                unsigned char data[STB_FONT_times_40_usascii_BITMAP_HEIGHT][STB_FONT_times_40_usascii_BITMAP_WIDTH],
                int height)
{
    int i,j;
    if (data != 0) {
        unsigned int *bits = stb__times_40_usascii_pixels;
        unsigned int bitpack = *bits++, numbits = 32;
        for (i=0; i < STB_FONT_times_40_usascii_BITMAP_WIDTH*height; ++i)
            data[0][i] = 0;  // zero entire bitmap
        for (j=1; j < STB_FONT_times_40_usascii_BITMAP_HEIGHT-1; ++j) {
            for (i=1; i < STB_FONT_times_40_usascii_BITMAP_WIDTH-1; ++i) {
                unsigned int value;
                if (numbits==0) bitpack = *bits++, numbits=32;
                value = bitpack & 1;
                bitpack >>= 1, --numbits;
                if (value) {
                    if (numbits < 3) bitpack = *bits++, numbits = 32;
                    data[j][i] = (bitpack & 7) * 0x20 + 0x1f;
                    bitpack >>= 3, numbits -= 3;
                } else {
                    data[j][i] = 0;
                }
            }
        }
    }

    // build font description
    if (font != 0) {
        float recip_width = 1.0f / STB_FONT_times_40_usascii_BITMAP_WIDTH;
        float recip_height = 1.0f / height;
        for (i=0; i < STB_FONT_times_40_usascii_NUM_CHARS; ++i) {
            // pad characters so they bilerp from empty space around each character
            font[i].s0 = (stb__times_40_usascii_s[i]) * recip_width;
            font[i].t0 = (stb__times_40_usascii_t[i]) * recip_height;
            font[i].s1 = (stb__times_40_usascii_s[i] + stb__times_40_usascii_w[i]) * recip_width;
            font[i].t1 = (stb__times_40_usascii_t[i] + stb__times_40_usascii_h[i]) * recip_height;
            font[i].x0 = stb__times_40_usascii_x[i];
            font[i].y0 = stb__times_40_usascii_y[i];
            font[i].x1 = stb__times_40_usascii_x[i] + stb__times_40_usascii_w[i];
            font[i].y1 = stb__times_40_usascii_y[i] + stb__times_40_usascii_h[i];
            font[i].advance_int = (stb__times_40_usascii_a[i]+8)>>4;
            font[i].s0f = (stb__times_40_usascii_s[i] - 0.5f) * recip_width;
            font[i].t0f = (stb__times_40_usascii_t[i] - 0.5f) * recip_height;
            font[i].s1f = (stb__times_40_usascii_s[i] + stb__times_40_usascii_w[i] + 0.5f) * recip_width;
            font[i].t1f = (stb__times_40_usascii_t[i] + stb__times_40_usascii_h[i] + 0.5f) * recip_height;
            font[i].x0f = stb__times_40_usascii_x[i] - 0.5f;
            font[i].y0f = stb__times_40_usascii_y[i] - 0.5f;
            font[i].x1f = stb__times_40_usascii_x[i] + stb__times_40_usascii_w[i] + 0.5f;
            font[i].y1f = stb__times_40_usascii_y[i] + stb__times_40_usascii_h[i] + 0.5f;
            font[i].advance = stb__times_40_usascii_a[i]/16.0f;
        }
    }
}

#ifndef STB_SOMEFONT_CREATE
#define STB_SOMEFONT_CREATE              stb_font_times_40_usascii
#define STB_SOMEFONT_BITMAP_WIDTH        STB_FONT_times_40_usascii_BITMAP_WIDTH
#define STB_SOMEFONT_BITMAP_HEIGHT       STB_FONT_times_40_usascii_BITMAP_HEIGHT
#define STB_SOMEFONT_BITMAP_HEIGHT_POW2  STB_FONT_times_40_usascii_BITMAP_HEIGHT_POW2
#define STB_SOMEFONT_FIRST_CHAR          STB_FONT_times_40_usascii_FIRST_CHAR
#define STB_SOMEFONT_NUM_CHARS           STB_FONT_times_40_usascii_NUM_CHARS
#define STB_SOMEFONT_LINE_SPACING        STB_FONT_times_40_usascii_LINE_SPACING
#endif

