// Font generated by stb_font_inl_generator.c (4/1 bpp)
//
// Following instructions show how to use the only included font, whatever it is, in
// a generic way so you can replace it with any other font by changing the include.
// To use multiple fonts, replace STB_SOMEFONT_* below with STB_FONT_times_bold_21_latin1_*,
// and separately install each font. Note that the CREATE function call has a
// totally different name; it's just 'stb_font_times_bold_21_latin1'.
//
/* // Example usage:

static stb_fontchar fontdata[STB_SOMEFONT_NUM_CHARS];

static void init(void)
{
    // optionally replace both STB_SOMEFONT_BITMAP_HEIGHT with STB_SOMEFONT_BITMAP_HEIGHT_POW2
    static unsigned char fontpixels[STB_SOMEFONT_BITMAP_HEIGHT][STB_SOMEFONT_BITMAP_WIDTH];
    STB_SOMEFONT_CREATE(fontdata, fontpixels, STB_SOMEFONT_BITMAP_HEIGHT);
    ... create texture ...
    // for best results rendering 1:1 pixels texels, use nearest-neighbor sampling
    // if allowed to scale up, use bilerp
}

// This function positions characters on integer coordinates, and assumes 1:1 texels to pixels
// Appropriate if nearest-neighbor sampling is used
static void draw_string_integer(int x, int y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0, cd->t0); glVertex2i(x + cd->x0, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t0); glVertex2i(x + cd->x1, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t1); glVertex2i(x + cd->x1, y + cd->y1);
        glTexCoord2f(cd->s0, cd->t1); glVertex2i(x + cd->x0, y + cd->y1);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance_int;
    }
    glEnd();
}

// This function positions characters on float coordinates, and doesn't require 1:1 texels to pixels
// Appropriate if bilinear filtering is used
static void draw_string_float(float x, float y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0f, cd->t0f); glVertex2f(x + cd->x0f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t0f); glVertex2f(x + cd->x1f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t1f); glVertex2f(x + cd->x1f, y + cd->y1f);
        glTexCoord2f(cd->s0f, cd->t1f); glVertex2f(x + cd->x0f, y + cd->y1f);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance;
    }
    glEnd();
}
*/

#ifndef STB_FONTCHAR__TYPEDEF
#define STB_FONTCHAR__TYPEDEF
typedef struct
{
    // coordinates if using integer positioning
    float s0,t0,s1,t1;
    signed short x0,y0,x1,y1;
    int   advance_int;
    // coordinates if using floating positioning
    float s0f,t0f,s1f,t1f;
    float x0f,y0f,x1f,y1f;
    float advance;
} stb_fontchar;
#endif

#define STB_FONT_times_bold_21_latin1_BITMAP_WIDTH         256
#define STB_FONT_times_bold_21_latin1_BITMAP_HEIGHT        130
#define STB_FONT_times_bold_21_latin1_BITMAP_HEIGHT_POW2   256

#define STB_FONT_times_bold_21_latin1_FIRST_CHAR            32
#define STB_FONT_times_bold_21_latin1_NUM_CHARS            224

#define STB_FONT_times_bold_21_latin1_LINE_SPACING          14

static unsigned int stb__times_bold_21_latin1_pixels[]={
    0x20dc45cc,0xe8005ed9,0x5436e04f,0xbbcb9803,0x32a0ea01,0x9955102c,
    0x10401799,0x0176c400,0x0013b200,0x0c0013b6,0x00408002,0x0001dd30,
    0x880037aa,0x044002ee,0x7401c001,0xfd86faaf,0x027c4007,0x8825d3fe,
    0x064c0acd,0x7c4fa25c,0x4ffffdc2,0x5c7f405b,0x1be6004f,0x001df000,
    0x000fffa8,0x0773ffa2,0x0feafd40,0x000fee00,0x32000ff4,0x3ee006ff,
    0xe9804bdf,0x1b50f6c0,0x0ff905b1,0xec805b80,0x03d10971,0x2a4b8170,
    0x7d4df11f,0x80756fff,0x003fa8fe,0xa80007cc,0xb3e8000e,0x7ee5400b,
    0x53e6005f,0x35c000fe,0x000fc400,0x00ba2be6,0x00fffe6c,0x7ff30be2,
    0x00ff9000,0x89700008,0x891001e8,0x543bee4b,0x5bffffa1,0x0020803a,
    0x980004c0,0x5c298000,0x00c43000,0x40002040,0x00188002,0x400e20a8,
    0x1ba00260,0x66654f6c,0x7e419932,0x2a0bec8f,0x19932ccc,0x8972ccb8,
    0x64eec42e,0x7c4970a4,0xffff81ef,0xcb98756f,0x332e2ccc,0x9997100b,
    0x32e20015,0x71000acc,0x20015999,0x00acccb8,0x15999710,0x33332e60,
    0x4c2f32e2,0x2e2ccccb,0x99730bcc,0x5e65c599,0x70799950,0x27cc1999,
    0x1647fe80,0x3fabbff2,0x0b23ff45,0x264ba7fc,0x6fea7cc5,0x7d44b866,
    0x7ffec2ff,0xff10756f,0x5c0d703f,0x05fd30df,0xfd30dfb8,0x30dfb805,
    0xdfb805fd,0xb805fd30,0x05fd30df,0x2e07ffe2,0x81fff886,0x1fff886b,
    0xfffa86b8,0x3fd86b84,0x22ffa860,0xf30ffc85,0xb17fd43f,0x24ba7fc0,
    0x743fa23b,0x24b8a24f,0x23ffd9e8,0x756ffffb,0x2603ffe0,0x881df904,
    0x1df903ff,0xf903ff88,0x03ff881d,0xff881df9,0x881df903,0x1fff03ff,
    0x3ffe0930,0xfff04980,0x3fa09301,0x7c2442ff,0xfe89303f,0x4ff90715,
    0xaff43ff8,0x5d3fe038,0x14fc8764,0xb00cc3ff,0xfb07fdc9,0x7c0eadff,
    0xa84880ff,0x3ffb03ff,0xfb03ffa8,0x03ffa83f,0xffa83ffb,0xa83ffb03,
    0x3ffb03ff,0x9101fff0,0x2203ffe0,0x101fff04,0x3fff3209,0x5ff11220,
    0x3ff716a0,0xf8ff9017,0x5cffdc4f,0x25d3fe00,0xff52ff8f,0x2e2fc038,
    0xab7edc3f,0x101fff03,0x203ffd09,0x7ff44ffc,0xe89ff901,0x9ff901ff,
    0xf901ffe8,0x01ffe89f,0xfff09ff9,0x3fe09101,0xff04880f,0x5209101f,
    0x8910effe,0x8f901ff9,0xf904cff8,0x7c44ff8f,0xa7fc04cf,0x0ff99a4b,
    0x74038bfd,0x2d017c5f,0x01fff03a,0x01fff091,0xfff1bfee,0xf1bfee01,
    0x3fee01ff,0xb807ffc6,0x07ffc6ff,0xff86ffb8,0xff04880f,0x3e09101f,
    0x904880ff,0x2457ffe2,0x7f40bfe2,0xc817fe40,0x20bfe27f,0x7fc02ffc,
    0xff534974,0x40b8bfae,0x27bfe62a,0x1d5a00e9,0x4880fff8,0xa807ffcc,
    0x3ffe67ff,0x4cfff500,0xff500fff,0x807ffccf,0x3fe67ffa,0x0fff500f,
    0x09101fff,0x12203ffe,0x24407ffc,0x2fffe648,0xf03ff848,0x207f985f,
    0x1df53ffc,0xff00ff30,0xf51d92e9,0x2a3fd3df,0x3e625c31,0xab400dff,
    0x101fff03,0x00fff889,0x7fc4fff5,0x4fff500f,0xf500fff8,0x07ffc4ff,
    0x3e27ffa8,0xfff500ff,0x9101fff0,0x2203ffe0,0x101fff04,0xfff51209,
    0x307fb095,0x409b07ff,0x1efebffc,0x3fe01360,0xdb1d4974,0x386f7aa3,
    0x3ffa212e,0xf03ab401,0xf07301ff,0x3fee03ff,0xb80fffc5,0x0fffc5ff,
    0x7fc5ffb8,0x8bff701f,0xff701fff,0x301fff0b,0x203ffe07,0x01fff039,
    0x3f212073,0x84f984ff,0x00b84ffa,0x40045ff2,0x74ff800b,0x5c001c89,
    0x7e4112e0,0xb03ab406,0x905501ff,0x3ff205ff,0xc817fe42,0x17fe42ff,
    0x7e42ffc8,0x85ff902f,0xff902ffc,0x501ffb05,0x203ff605,0x01ffb02a,
    0x7ec12055,0x3a0fb04f,0x8090b89f,0x85c407fc,0x73fe9404,0x7000d889,
    0x93e64b83,0x03ab407e,0x03903ff9,0x3fa0bff1,0xd05ff886,0x0bff10df,
    0x3fe21bfa,0xf10dfd05,0x41bfa0bf,0x01c81ffc,0x03903ff9,0x07207ff2,
    0x04fe882c,0xcfa805d1,0x03fe401a,0xa806b3ea,0x0971fe8f,0x0e4c0591,
    0x749f125c,0x303ab404,0x20498bff,0x77e42fe9,0xc85fd300,0x5fd300ef,
    0xd300efc8,0x00efc85f,0xefc85fd3,0x98bff300,0x317fe604,0x22ffcc09,
    0x4c0f1049,0x807a204f,0x74c03fe8,0x3fa203ff,0x176ec403,0x5ddd4097,
    0x12e02cbb,0xd009b9b5,0xffe980ea,0xfd8804dd,0x8804edbe,0x04edbefd,
    0xedbefd88,0xbefd8804,0xfd8804ed,0x9804edbe,0x804ddffe,0x04ddffe9,
    0x4ddffe98,0x203bfb50,0x0002804a,0x00000000,0x00000000,0x26200000,
    0x01310000,0x00026200,0x880004c4,0x13100009,0x00131000,0x10001310,
    0x04000013,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x05eb8000,0x001f6c00,0xa80037a6,
    0x666400ee,0x79bb7301,0x405b3001,0x20800208,0x04ec8000,0x4c007db0,
    0x1051bcdb,0x65c405db,0x8008221c,0x64427641,0x5400540b,0x008100de,
    0x098817ae,0x8000fec0,0xfc8005f9,0x27ff4002,0x7dc03fe0,0x407fd10d,
    0x3fee01fa,0x1fd004bd,0x7c4009f7,0x1fff7005,0x89bff980,0xbf304feb,
    0x3e25fd00,0x44807f97,0x1db00fe8,0x0fec03d8,0x01ff4fa8,0xf107fff1,
    0x009b00bf,0x7c0016e0,0x5475c002,0x6c1fe00f,0x1ffc40ef,0x7e6c06f8,
    0x1fd001ff,0x754007f5,0xd8bf8800,0x40bfe604,0x003e604e,0x65be25fb,
    0x2206a02f,0x887f502e,0x403f102f,0xb01fd4fa,0x9fb0d71b,0x0005003f,
    0x00c40006,0xf80a61c0,0x903ffa87,0x07f883ff,0x08001304,0x00130002,
    0x3e607066,0x3012605f,0x202fd801,0x03102400,0x03f213ee,0x01020062,
    0x3a61a871,0x00980b70,0x05e66654,0x98039991,0x00130000,0x03ffd0ff,
    0x3fa13fea,0x00009800,0xccc98013,0x23cccccc,0xccccccc9,0x1ffe43cc,
    0x66664c60,0xd83ccccc,0x9999732f,0x20edcb85,0x42ccccb9,0x24f983fd,
    0x32ccccb9,0x99999999,0x6665cc79,0xb006022c,0x1fff7009,0x9b003f10,
    0x20136000,0x00fff87f,0x3fb0dff5,0x20009b00,0x5fff004d,0xff0df733,
    0x8df7335f,0x7c001ffe,0x6fb99aff,0x7ffc2fd8,0x37e47e42,0x7ec17ffc,
    0x7c0ff981,0xafff82ff,0xff86fb99,0x0179502f,0xfe803fcc,0x9803a83f,
    0x7f98007f,0x7fcc7f80,0x0fff300f,0x0ff300fb,0x200ff300,0x43440ffe,
    0x13440ffe,0xe8001fff,0x6c3440ff,0x107ff42f,0xd03ff6df,0x03f701ff,
    0xffe83ff1,0x440ffe80,0x440ffe86,0x7e40f94e,0x7ffa803f,0x7ff90058,
    0x03ffc800,0x3ffe23fc,0x98fff300,0x3ffc801f,0x01ffe400,0x90887ff4,
    0x4221ffd0,0x007ffe24,0x4221ffd0,0x7f42fd84,0x2a77ea0f,0x00ffe819,
    0x85ff01b9,0xffe80ffe,0x3fa12110,0xfa97ec0f,0x06ffe882,0x15c7ffb0,
    0x037ff440,0x80dffd10,0x01fff87f,0x06d4dff5,0x037ff440,0x00dffd10,
    0x042e1ffd,0x10b87ff4,0x4002ffe8,0x02170ffe,0x1ffd0bf6,0x3a0277ec,
    0x21aa00ff,0x07ff43ff,0x10b87ff4,0x7c41ffd0,0xb85fb9af,0x9802ffe9,
    0x00588fff,0x005ffd37,0x80bffa6e,0x02ffc87f,0x1f985ff7,0x17ff4dc0,
    0x2ffe9b80,0x74c7ff40,0x263ffa00,0x07ff900e,0xe98ffe80,0xfd0bf600,
    0x027fe41f,0x6ec03ffa,0x7f42ff80,0x98ffe80f,0x83ffa00e,0x2aaacff9,
    0x00bff558,0x00333ff6,0x005ffaac,0xf817feab,0xd05ff887,0xb01f60df,
    0xac017fea,0x7f405ffa,0x3a00ffef,0x100ffeff,0x06201ffd,0x01ffdffd,
    0x3ffa17ec,0x810ffee0,0x1fb80ffe,0x7f41ff88,0xfeffe80f,0x83ffa00f,
    0x15404ff8,0xf1003fff,0x8aa007ff,0x15401fff,0x1fe03fff,0x3ee17fcc,
    0x203fb00e,0x007ffe2a,0x00fffc55,0x01f51ffd,0x07d47ff4,0x981bfd10,
    0x547ff40d,0xd0bf600f,0x7ff441ff,0x7ff40dab,0xf981fd80,0x407ff40f,
    0x00fa8ffe,0xdfd03ffa,0x64ccec18,0xffb004ff,0x26676005,0x4ec04ffc,
    0xf04ffc99,0x5f7e440f,0x3fe00cfe,0xf9333b00,0x999d809f,0x3fa04ffc,
    0x7f40170f,0xc880170f,0xd04ecdfe,0xd802e1ff,0x207ff42f,0xe80efffa,
    0x82fc80ff,0x0ffe84fa,0x0170ffe8,0x3ee07ff4,0x32a1b9df,0x0fffaaaa,
    0x802ffc80,0xffaaaaca,0x5559500f,0xff01fff5,0x00bffa00,0x2b2a0ff1,
    0x00fffaaa,0xff555595,0x43ffa01f,0x1ffd1209,0x74404826,0x987ff400,
    0xe85fb120,0x044640ff,0xf701ffd0,0xfd01f909,0x21ffd01f,0x1ffd1209,
    0x587fff90,0x9007ff90,0x20b005ff,0x20b03ffc,0x07f83ffc,0x801fff10,
    0x3f20b07f,0x3f20b03f,0x01ffd03f,0x80ffe897,0x027d404b,0x12e03ffa,
    0x0ffe85fb,0x0ffe8024,0x17c43fa8,0xfe80ffe8,0x7f44b80f,0x16a0600f,
    0x2007ffcc,0x2d402ffd,0x540fff98,0x81fff305,0xfb3000ff,0x3f7017bf,
    0xfff305a8,0xff305a81,0x43ffd01f,0x7ff43fa8,0x100fea21,0x1ffe807f,
    0x5fd0fea2,0x0aa1ffe8,0x6c0fff40,0xfd016c0e,0x43ffd03f,0x7ff43fa8,
    0x2ffee001,0x3bfff260,0xefffb981,0x0bffb80a,0x47bfff26,0x3260bffb,
    0x2aa1efff,0x0d54000a,0x3fee5930,0x3fff260b,0x417ff71e,0x31efffc9,
    0xfd9dfff7,0x3fee65ff,0x2fffecef,0xb980ae60,0xffecefff,0x2155512f,
    0x32dfffb9,0xbfff7300,0x1502f225,0x37ffee60,0x9dfff732,0x2e65fffd,
    0x0002dfff,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x80000000,0x22000cd9,0x40000009,0x00100098,
    0x98802f22,0x15dc0000,0x22a80760,0x2009880b,0xf901bdcb,0x07fd400d,
    0x4ee037e4,0x913b80c8,0x2017f601,0xa8dc44fe,0x203fea03,0x1b100cda,
    0x80a17710,0x3e600915,0xdca8805f,0x360390bd,0x6de401ff,0xb7979101,
    0x01ffb03b,0xfaf4076c,0xb9009905,0x03ff603b,0x817ec7f6,0x3fb001fc,
    0xf880fe40,0x7c44fc8f,0x3604fc8f,0x213e600f,0x205fd6fa,0xfbb981fd,
    0x3fa07b04,0x45602fff,0x3f9fb004,0xe9977dc0,0xdbf303df,0x048a440b,
    0x216c72db,0xf505fdf9,0xfd5f987f,0x4c00e981,0xcfa80edd,0xf93fcc4f,
    0x4401ec0d,0x203d801f,0x9703b34b,0x05b00766,0x52c882dc,0x803f1019,
    0x106a80f8,0x9807b735,0x0ea800dd,0x21fee0b7,0x27b03ff9,0x327601e8,
    0x1c8ff882,0x3d13e853,0x9f903b60,0x805d0ff6,0x4ba1ba38,0xb9fee0e8,
    0x0800406f,0x00000200,0x00200800,0x74400800,0x000fc42f,0x04013600,
    0x41ffd40c,0x4080fff9,0x806e2018,0x1021deff,0x7d400188,0x02e41fd5,
    0x45fdcb88,0x4ff70c40,0xddc982fd,0x0b372203,0x88166e44,0xb9302cdc,
    0x0bca807b,0x2a017950,0xddc980bc,0x7b1fa203,0x02cdc880,0x32203fcc,
    0xd899934c,0x7dec41ff,0x3ddc984f,0x40f77260,0x2204fffc,0x80c02cdc,
    0x07ccdf5f,0x7dc77cc0,0x2133260f,0x817f77fb,0x309fb0fb,0xf313e6df,
    0xdf313e6d,0x21f713e6,0x94e884fd,0x8f94e88f,0xfb8f94e8,0x70989fb0,
    0x3e603549,0x7e409f36,0x87fe403f,0x0fffc7fd,0x71bfea36,0x2e13f61f,
    0x3209fb0f,0x7cc0efff,0x06a09f36,0x0ba15dc4,0x7c4ff601,0x5c3fec2f,
    0xfd17ea7f,0x3f21ff27,0x3fc87fe3,0x23fc87fe,0x64ffa1ff,0xf52fd87f,
    0x2fa97ec5,0xd17d4bf6,0xd91ff27f,0x107e2157,0x07fe3fc8,0x701bffa2,
    0x89ff21ff,0x4c760fff,0xc9ff47ff,0xf93fe87f,0x7fffd40f,0x1ff8ff20,
    0x2e40034c,0xff85b5b5,0xff913fe3,0x7fc4ff70,0x3f6276a1,0x3fe3fe87,
    0x3ff8ffa3,0x23ff8ffa,0x47fd89da,0x5fb9aff8,0xbf735ff1,0x3ee6bfe2,
    0x3f6276a5,0xfa87b007,0x3ff8ffa0,0x02ffe9b8,0x3fe43fee,0x8b21fff1,
    0x4ed46ffa,0x9da87fd8,0x76407fd8,0xf8ffa3ff,0x0013ea3f,0x7db7c1f3,
    0x5ff8bfe6,0x3fdc3fe4,0xbd707ff1,0x22ff98ff,0x45ff35ff,0x45ff35ff,
    0xfdeb85ff,0x5567fcc7,0x559ff32a,0x2b3fe655,0xfdeb82aa,0x74c6a807,
    0x7c5ff30f,0xbff5585f,0xfc87fdc0,0x1dcfff47,0x75c13fee,0x37ae07fd,
    0x3672087f,0x7c5ff35f,0x001ff55f,0x6d7ea2e8,0x7c5ff12f,0x5c3fe44f,
    0x88ffe27f,0x447fc8ee,0x453fe2ff,0x453fe2ff,0x893fe2ff,0x447fc8ee,
    0x9ff104ff,0x8813fe20,0x407fc8ee,0x3ef221f8,0x7fc5ff10,0x3fff1544,
    0x7e43fee0,0x426ffe47,0x77442ffc,0xee887fc8,0x32487fc8,0x5ff13fa9,
    0x27fda7fc,0x2e2dc06c,0x7fc7fb5f,0xff90bfe3,0x7fc2ff70,0x3fe4ff62,
    0x43ff1fec,0xd87fe3fd,0xfd87fe3f,0xdfd0ff93,0x431bfa18,0x7fb0c6fe,
    0x87b01ff2,0x3f60fb8c,0x33b07fe3,0x2a09ff93,0xd0ff90ff,0x0bff10df,
    0x21ff27fb,0xf0ff93fd,0xd83ee723,0x7ec7fe3f,0x7cc07fa7,0x0fdb7c40,
    0x42fc53ea,0x8ffc87fc,0x3fe0ecbf,0x541ffece,0xfa8df14f,0x4fa8df14,
    0xceff8df1,0x7fdc1ffe,0x3fee1b9d,0x3fee1b9d,0x3bfe1b9d,0xd501ffec,
    0x26ffff98,0xa8df14fa,0xfffaaaac,0xf99ff980,0x42ffa87f,0x9dff05fc,
    0xeff83ffd,0x7ec1ffec,0x7d41cddd,0x7fd4df14,0x81740b71,0xeb84f8fb,
    0xffc80ddb,0x76dffa60,0x4d77e41d,0xdbfb83ff,0xedbfb80e,0x0edbfb80,
    0x7fcd77e4,0x83fffc83,0xfc83fffc,0x577e43ff,0x1f883ff9,0x7f703ee0,
    0xf90581db,0x33ff607f,0x27623ffc,0x03ddbdfc,0x3fe6bbf2,0x7cd77e43,
    0x4039303f,0x540edbfb,0x7300bbfd,0x4400a880,0x09ffd300,0x13000000,
    0x13001300,0x80180000,0x00001801,0x00a98055,0x260b5013,0x01100fff,
    0x000c4098,0x01000000,0x00000260,0x00000000,0x00000000,0x00000000,
    0x00000000,0xb8000000,0x3f260bff,0x00001eff,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x40950000,
    0xcda800d8,0x50bb8801,0xbca80d80,0x42b8ee00,0x40f2a4ca,0x02ccccc8,
    0x15bbd971,0x17b51015,0x2ccccb98,0x2a02f32e,0x98028bdd,0x7bb5101a,
    0x66664c03,0x399504cc,0x006f2e20,0x8037bb51,0x858bcdb8,0xa80390dc,
    0xf7116604,0x7401ec0d,0x7401fe8c,0x2602ffff,0x01f76c86,0x7e42e8b6,
    0x7dc1bf67,0xfa82ffff,0x1ffb50be,0x81ffffd0,0x6b81fff8,0xff714e88,
    0xb901f640,0x20b95115,0x5ffffffd,0x46f8afcc,0x203fb4f8,0x5ca88adc,
    0x3ff43f60,0x82653fe6,0x07a06fb8,0x806a837c,0x409f71fa,0x404db9a8,
    0xf9a7d44c,0x207c3f06,0x41bf67fc,0xb85eeeee,0x81f902ff,0x84ffc89b,
    0x84980fff,0xc83d40fb,0x980f201f,0xeeefff85,0xfb1fe42f,0xffa97f45,
    0x5a861e40,0x1ff24fc8,0x01a69ff3,0xf81320df,0xd801f886,0x0001f53f,
    0x9fec1e80,0x33cc1ff8,0x7ecff90f,0xf9804886,0x103a205f,0xfff84fe8,
    0x3fe84880,0x203fc858,0xeccfe8bb,0x20ec4b32,0x325ff87a,0x263ff13f,
    0x64cee2ff,0x4599eb9c,0x11ff23ff,0xf00fc5ff,0x7c01d30d,0xfb003d86,
    0x93005b3d,0x43cc07bb,0x5cbfe3ff,0xefeeefee,0x6fd9ff20,0xb01cdeb8,
    0x801805ff,0x0fff80ee,0xcffe8488,0x01ff5020,0x3fa3f92c,0x2ec021b0,
    0x0fea7ff4,0x3fe25ff5,0x8dc5f964,0x5c7ff10d,0x321fe87f,0x0ba1be03,
    0x006a8df0,0xcc897fee,0x7ec3ee2c,0xff889704,0x6d4d3fe3,0x642deaad,
    0x3a1bf67f,0x7c0dffff,0x5c0001ff,0x01fff03f,0xffff7091,0x3f7ff207,
    0x1fc9620c,0x880ae1ff,0xefff982f,0xf8ffe20e,0x0feab15f,0x47ff12b8,
    0x4c7c87fb,0x0991be06,0x3f11dea8,0xfffb5008,0x3fa1fd43,0x0ba0ff93,
    0x2ffc7ff3,0xfc82e8ba,0xe885bf67,0x10efffff,0x20001fff,0xf84fffe8,
    0x904880ff,0xe83dffff,0x50ffc8cf,0x0f6e7e47,0x807d4093,0x6c0efff9,
    0x9d4ffe5f,0xe92601fd,0x2e1fee5f,0xdea80f85,0x80041d31,0xb107d43d,
    0x543bfeab,0xfd89da85,0xff987887,0x43f13fe3,0xb9ffc80f,0xb9819fff,
    0xfff13ffe,0x99999883,0x0fffc880,0x24407ffc,0x1ffffd30,0x7fc4ffe2,
    0x7d7e4932,0x0bb01d46,0x077ff6dc,0x3ffbdfd3,0x5017e526,0xfd87fe47,
    0x03d84987,0x17fea5d0,0x0fe98d50,0x5ffc8ff2,0x7ef5c01b,0xff885b87,
    0x7f5cffe3,0x20eefeee,0xff9bfffc,0x3a5fd805,0xfffa82ff,0x0bfee00b,
    0x07301fff,0x33fffa81,0xd2ff47ff,0x91fdcfe4,0x6c0be203,0x83ffe89f,
    0x9b47fba9,0xfb07204f,0x710ff9bf,0x49900b50,0xf101fd8b,0xf07de443,
    0x77ff44bf,0xf91dd102,0x3fe05b0f,0x3265ff13,0x42aedaae,0x100081ad,
    0x81ffe47f,0x7c400fff,0x407fec1f,0xfe88682a,0x5fe93fe5,0xfe9fec36,
    0x407d40d0,0xbff10ff8,0x4361ff40,0x1a3a8bfc,0x007fb844,0x0e9803e2,
    0x90f607b8,0x3fe21f71,0x93ffe62f,0x3fe4ff61,0xa7e403e2,0xc9320ff8,
    0x44007f04,0x3fa21f80,0x081fff06,0x1ffc86d8,0xa82f81c8,0xfe97f62f,
    0x2aaaba23,0x202daa98,0x41ff105d,0x07f502fd,0x361541d1,0xb87fb802,
    0x3a02d80c,0x1aa05d02,0x64dffff3,0xfea9bfff,0x3fe2deff,0x2a1ffece,
    0x7d57e205,0x105d1744,0x3fe200bf,0x3fa60ea3,0x2e0fff84,0x303f10cf,
    0xf0498bff,0x7c46c81d,0xe881df0f,0x7c02d881,0x7e87f602,0x74409f50,
    0x9002d881,0x1ffcc1ff,0x904c82dc,0x403f10a5,0x3fb220fb,0xffe98bff,
    0x7cd77e43,0xd300f63f,0x223f09d7,0x004f880f,0x00b3bff6,0xbf959dd9,
    0xddffe985,0x37ffa601,0x37b3a04d,0xde980bcb,0xbd9100ec,0xfa8039d9,
    0x32fb2200,0x00ddd41c,0x6766f644,0x9ffd5001,0x87882ff8,0xfffb80f9,
    0x2a601543,0x02601300,0x22000800,0x00018300,0x44000980,0x01880099,
    0x04004c40,0x00220031,0x02200088,0x00010180,0x00000088,0x40dc0c01,
    0x000aaaa8,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x402ff980,0x0bccccb8,
    0x880736a2,0x665c0bdc,0x33260bcc,0x9199931c,0x4fe8017d,0x56665c40,
    0x07999500,0x32e19997,0xccb89ccc,0x0b3222cc,0x9104cca8,0x99950ee1,
    0x98033265,0x2651bcdb,0x993004cc,0x664c999b,0x409acccc,0x9bccccc9,
    0x066dc400,0x2f333326,0x27cc0009,0x445ffc80,0xf10bfd17,0xffb0df17,
    0xfb0be20b,0x40bfd5df,0x6fdc04f9,0x2a05fd30,0x86b84fff,0x7fec4ffe,
    0xfc806984,0xff19f907,0x1647fe81,0xb89bff98,0x01ff24fe,0x16fdd3ee,
    0x36a7ffe2,0x7ffc42ff,0x880efda9,0x441fffff,0xefca9fff,0x401e6000,
    0x8fe44ffa,0x9fdc0ffc,0x3ffc41ff,0x0ffc8588,0x13203ff3,0xf881df90,
    0x5fffd03f,0x6ffa8488,0x15437fcc,0xd983fdc0,0x5ff50991,0x02ff982c,
    0x403fe49d,0x01ff53fe,0x0fff8ffd,0x3bf23ffc,0x7ff5e641,0x320ffe85,
    0x002001ff,0x3f227fd4,0xfe83ff52,0x3ff60754,0x7fc81b82,0x0040ffe2,
    0x7ec0ffea,0xfffcc81f,0x7ff41220,0x160fff41,0x0003fdc0,0x9838aff4,
    0xc92605ff,0x97fc407f,0x7fe81ff9,0x3fe0ffec,0x887ffc47,0x3a1bfe21,
    0x07ffc0ff,0xcc9a6644,0x213fea04,0x3fe1ff20,0x86ff9805,0xff8ff905,
    0x32699914,0x80fff44c,0xfd484ffc,0x5c1221df,0x27fec4ff,0x33b26091,
    0xa66447fc,0xffb84cc9,0x3ffc80b9,0x71ff90c0,0x53fe819d,0xf1ffa0ff,
    0x87ff81ff,0x3f602ffe,0x740ffe84,0x1ff902ff,0xffa81ff6,0x31077c04,
    0xe8033dff,0x6406a1ff,0xf927fc7f,0xff1ff61f,0x1bfee01f,0x8afffc52,
    0x44fff104,0x206e7ffd,0x7ffc8ff8,0xffb0ffc8,0x2099ff10,0x32001ffe,
    0x45fd9dff,0x01ed9ed8,0x3bf22ffd,0xfd87ff82,0x20bfa04f,0x7fe40ffe,
    0x321ff704,0x13fea07f,0x7fe40ea8,0x7dc07fff,0x7fc8165f,0xffb8bfe2,
    0x7fccff90,0x0fff500f,0x45fffcc9,0x5cbff604,0x20b2ffd9,0x21ff24fd,
    0x0ff90ffb,0x3e20bff2,0x3f2000ff,0x770bfea7,0xeffe8035,0xfff01eff,
    0x220dff70,0x7fff5c5f,0x0dff75ee,0x3fe43fee,0x2409ff50,0x19ffc988,
    0x2a8fff80,0x7d4fff20,0x643fee0e,0x03ffe27f,0x2243ffd4,0x204afffa,
    0x3eab6ffa,0x7ff039df,0x7fdc3fdc,0x3e60ff90,0x03fff107,0xff13fe40,
    0xe8007649,0x21bfea7f,0x5ffb87ff,0x3fa01f70,0x837fdc0f,0x0ff90ffb,
    0x07027fd4,0x32007f88,0x7e405bff,0x5c1efebf,0xf8ff90ff,0xbff701ff,
    0x9fff9090,0x22bffe80,0xf980dfff,0x2e1fee3f,0x40ff90ff,0x0bffa04d,
    0x7fc7fc80,0x3bffffa4,0x647fe80c,0x43ffc3ff,0x1f984ffc,0xf703ffa0,
    0x43fee09f,0x54b667fc,0x740003ff,0xfff10046,0x117fc807,0x7e43fee0,
    0xc817fe47,0xfb0482ff,0x7ffb809f,0xf882ffe4,0x2e1fee4f,0x40ff90ff,
    0x0fff200b,0x3e27fc80,0x3fffe63f,0x47fe85ff,0x3ffc6ffa,0x0f40ffec,
    0xd81ffd06,0x1ff502ff,0x76fd9ff2,0x072a05ff,0x267bfb62,0x07fec04a,
    0x2a01ff20,0x88ff90ff,0x0dfd05ff,0x027f4416,0xff113fe2,0xf727f405,
    0x321ff50f,0x0242e27f,0x4403ffa2,0xff89ff21,0x2a66b721,0x5c7fe87e,
    0x23ffc3ff,0xadd85ff9,0x7ff42daa,0x9817fe20,0x27ff99ff,0x01ff73fa,
    0x266e17fe,0x403fffff,0x7fc804f9,0xf99ff980,0x42fe987f,0x07880efc,
    0x3f6013e6,0x7dc07e80,0x40fffa8f,0x7ff99ff9,0x2006b3ea,0x6cc0dfe8,
    0x7d43ff20,0x1720fe24,0x7f443ffe,0xa87ffc0f,0x7fdc0dfe,0x7fc0ffff,
    0x01bfb30f,0xffccffd8,0x07bef6e3,0xdd983fd8,0x800dffcc,0x7ff4c00e,
    0x67fec00b,0xfd883ffc,0xb504edbe,0x012a03bf,0x4025416a,0x4efcdffd,
    0xffccffd8,0x4007fd13,0x4ecdfec8,0x4ebdcdc8,0x3ccceea8,0x6f7ffdcc,
    0x3f260bef,0x81ceeeff,0x7ffffff9,0x3bbfff26,0x022002ce,0x00800440,
    0x20008822,0x22000000,0x00988000,0x04002000,0x04220010,0x00000440,
    0x441004c0,0x00000001,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x03265700,
    0x9304cb2a,0x99999999,0x66665cc7,0x3264cccc,0x0aaccccc,0x00199910,
    0x443d8814,0xb0000ccc,0x4336a207,0x02ccccb9,0x65cc37e4,0x332a02cc,
    0x654401bc,0xcccccccc,0x4009800c,0x32ccccb9,0x35799997,0xb9877dc0,
    0x3201cccc,0x16ee440d,0x7fc49993,0x7fd43fd8,0x5fff06ff,0xff0df733,
    0x8fd5335f,0xfc99fff8,0x01ff904f,0x3fe41e20,0x40007fdc,0xbbfa84fb,
    0x07ffe24f,0xff807ec0,0x1bffa07f,0x3dffb900,0xb003fb53,0x0bffe009,
    0x3feebffe,0xff01db05,0x27fcc01f,0xd8bfa9d1,0x0d99e47f,0x80eed45c,
    0x43440ffe,0xf8681ffe,0x417fe47f,0xe8800ffb,0xf509d307,0xff98001f,
    0x0b8afd84,0xb0007ff4,0x0bff7607,0x001bff2a,0x3b0bff3b,0xd007f980,
    0x1ffb01ff,0x1f10bfee,0x3a01ffa0,0x7dcbf21f,0x0001ff24,0x221ffd00,
    0x43ffd090,0x98ffd090,0x0ffb85ff,0x667ffcc0,0x01ff5000,0x227fec40,
    0x3fa03ff8,0xd804000f,0xf9d86ffa,0x266e005f,0x00d465ff,0x3a00fff2,
    0x0ffd80ff,0x0088dff1,0x0b37bffa,0x4150ff40,0x2664c7fc,0x3ae33322,
    0x70ffe80d,0x87ffa021,0xf31ffa04,0x21ff709f,0x3f222cca,0x1332619f,
    0x33ae7fea,0x93fe3600,0xd02dffc9,0x993001ff,0x0fff5609,0x00bff373,
    0x92ffcd22,0x1bffa200,0x3603ffa0,0x4bff30ff,0xffd04cc9,0x8803bfa2,
    0x1ff202ff,0x3fee1ff6,0xfe85febe,0x3a00e98f,0x740971ff,0x40ffe47f,
    0x20be0ffb,0x0ffb07fb,0xbfd7bff5,0x127fcae0,0x3a017ff3,0xffb000ff,
    0x927fdd60,0x200bff31,0x2ebff30d,0xffd37005,0x80ffe805,0x5ff70ffd,
    0xffd07fd8,0xf101ffd4,0x43fe409f,0x1ffa87fc,0xdffd0ff9,0x7ff401ff,
    0x3fa04fed,0x02efdbaf,0x40721ff7,0x0ff907fb,0x1ff23ff5,0x444ff926,
    0x3ffa03ff,0x20ff9000,0x911fff15,0x2a017fe6,0x3fbffe62,0x3feab005,
    0x407ff405,0x2efdbffd,0xffd07fc8,0xcc8b7fcc,0x2083ff60,0x87fc87fc,
    0x0ff70ffa,0x01f51ffd,0x2754fff4,0xffd3ffd0,0x647fdc05,0x641fee04,
    0x70ffa87f,0x3e0d88ff,0x01ffc44f,0x32001ffd,0x7fe4b07f,0x0bff31bb,
    0xfdcccd88,0x5500b95f,0xfd00fffc,0x35ffb01f,0xe83fe403,0x5d7fe67f,
    0x3bfea4ff,0x21ff23aa,0x0ffa87fc,0x1ffd0ff7,0x1ffe802e,0x9bff4093,
    0xff700fff,0x3ee03ffb,0xf50ff907,0xd71fee1f,0x49dffddd,0x3fa03ff8,
    0x7fc8100f,0x2f7fccb0,0x0c80bff3,0x0092ffcc,0x9ff9333b,0x6c07ff40,
    0x7fc800ff,0x7fe4ffd0,0xfb8dff32,0x43fe44ff,0x0ffa87fc,0x1ffd0ff7,
    0x7ff44826,0x27fe80e1,0xff706ffc,0x3ee0dfd5,0xa87fc80f,0xb8ff70ff,
    0x5fffffff,0xfe80ffe2,0x7fc8900f,0x22ffd8b0,0x0e605ff9,0x0e297fe6,
    0x3eaaab2a,0x1ffd00ff,0x9001ffb0,0x33ffa0ff,0x84a81dfe,0x87fc80e8,
    0x0ffa87fc,0x1ffd0ff7,0x1ffe8970,0xfe8ffd00,0x98ffb83f,0x9ffa84ff,
    0x7d43fe43,0x988ff70f,0x20cff999,0x3fa03ff8,0x7e45980f,0x47fa8b07,
    0x41605ff9,0xb0b05ff9,0x740fff20,0x0ffd80ff,0xfd07fc80,0x3039003f,
    0x90ff909f,0x1ffb81ff,0xffe81ff9,0xfd0fea21,0x3ffe003f,0x707ffe60,
    0x07ff23ff,0xff907bf6,0xf91ffb81,0x44ff801f,0x3fe03ff8,0x3227441f,
    0x4e8680ff,0x3c837fcc,0xd88dff30,0xff982d45,0x81ffe80f,0xfc800ffe,
    0x807fe80f,0x907f101b,0x7ff4c1ff,0x233ffa24,0xff734ffe,0x5fffd9df,
    0x0b7ffee6,0x2cfffc98,0x744bffee,0x5fff74ff,0x93ffa600,0xfe8dffe8,
    0x127fc04f,0xc985dff9,0xfeeeefff,0x93ffa64f,0x82e1dfc9,0x11bfffda,
    0x6d4c5df9,0xffecefff,0x982ffee4,0x731efffc,0x2e65bfff,0x2602dfff,
    0x3f264ffe,0x98001cff,0x4ffe982b,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x80000000,0xccccccc9,
    0x3332a1cc,0x333220bc,0x39999931,0x642f32e2,0x39911ccc,0x873332e6,
    0x930cccb9,0x99999999,0x98193099,0x972ccccb,0x26617999,0xa9999999,
    0x00005100,0xb7300510,0x0199917b,0x540b7722,0xddc980bc,0x0b372203,
    0x33269991,0x0666dc44,0x332a5500,0x2019932c,0xfd999cfb,0x0fffb86f,
    0x7fd41f88,0x261fc43f,0x7c2dc5ff,0x44fa82ff,0xeffa9cfa,0x3f667d99,
    0x85fff00f,0x400c6ffb,0x100f1008,0x20737bb9,0xc87cc06a,0x883f74ff,
    0x7445fd4e,0xb0fb8f94,0x26df309f,0xd87fe44f,0x0f8aec7f,0xd0f7dc40,
    0x2e02c8ff,0x80fffc42,0x03a83ffe,0x04b8dffb,0xe80c8ffb,0x417441ff,
    0xd1bfe24a,0x403ffaaa,0x7fd41ffe,0x804400c4,0x9b7c4078,0xd01aa07f,
    0x4cbfea7f,0xfb97e46f,0x17d4bf64,0x21ff27fd,0xb87fe3fc,0x44ff90ff,
    0x260352ff,0xffa82dfd,0xfb070162,0x3ffd409f,0x9fff102c,0x2ffa8162,
    0x30fff416,0xf886603b,0x3fee146f,0xa81ffd00,0x4400c4ff,0xfb80f100,
    0x3540bfe4,0x7fdc76a0,0x7f47f99a,0x57fc42a1,0x276a5fb9,0x3fe87fd8,
    0x0ffb8ffe,0x4fff8ff9,0x00cfeb88,0x4029affc,0x007ffd40,0x02b8fff6,
    0x06cfffd4,0x81cd7fe0,0x01b51ffe,0x2037fc40,0xffd00ffb,0x0c4ffa81,
    0x07880440,0x5ffca7f4,0x36a00d50,0x2aaabffc,0x7cc0bfe2,0xb82aaacf,
    0x7fcc7fde,0xffb97fe2,0xffb8ff90,0x00ffee5f,0x0048ffb8,0x401fffc4,
    0x0588fff9,0x003fff90,0x20191ff9,0x00fb9ffe,0x2037fc40,0xffd00ffb,
    0x0c4ffa81,0xeeeb8440,0x12eeeefe,0xdfd379ff,0x3bfbbbb6,0x3b621eee,
    0x2203ff98,0x9ff104ff,0x7e477440,0xff17fc47,0xfc87fdc9,0x12fffa87,
    0x10017df9,0xc8007bff,0x3f6006ff,0xd1000ccf,0xff3009ff,0x77ff40b7,
    0x7c4006ff,0x07fdc06f,0xeeeeffe8,0x400c4ffe,0xf7555308,0x3e235555,
    0x2a9fd2ef,0xaaaecaaa,0x7c4ff20a,0x3ff60c6f,0x0c6fe820,0x21ff27fb,
    0xa87fe3fd,0x44ff90ff,0xb889fd12,0x7e401cfe,0x3fe6000f,0x3fe2001f,
    0x7fdc003f,0xffddd01f,0xfe85ddff,0x005ffeaf,0xf701bfe2,0x03ffa01f,
    0x80189ff5,0xe80f1008,0x540ffe4f,0x54effc06,0x42a9dffe,0x23aaeffa,
    0x21b9dffb,0x1ffeceff,0x46f8a7d4,0x7ff99ff9,0x202fa87c,0xf302efc9,
    0x4ffe800b,0x3ff60088,0x3f326002,0x0ffc806f,0x3e67ffa0,0xff1003ff,
    0x00ffb80d,0xffa81ffd,0x804400c4,0x8b7dc078,0x80d500ef,0xffb2effd,
    0x3ffee09f,0x43fffc84,0x3ff9aefc,0x80edbfb8,0x3ffccffd,0x4013b3be,
    0x03d03eb8,0xb837fdc0,0x00bff201,0x09ffd2c4,0x57ffb555,0x51ffe815,
    0xf1003fff,0x0ffb80df,0xfa81ffd0,0x04400c4f,0x2b220788,0x2aa0edcf,
    0xaaaaecaa,0x00180440,0x00003003,0x00440098,0x08000442,0x7fc40010,
    0x6401f02f,0x0d8802ff,0x5507ffe6,0x1557ffb5,0x3f21ffe8,0x7fc400ff,
    0x807fdc06,0x7fd40ffe,0x804400c4,0x20260068,0xeeeeeeed,0x000001ee,
    0x00000000,0x00000000,0xbffb0000,0xfd80fd30,0x41f4402f,0xf900fffc,
    0x0fff401f,0x9803bffa,0x7fe406ff,0xb83ffd01,0x4ccd45ff,0x00a99999,
    0x00000000,0x00000000,0x00000000,0x00000000,0x3bbbffea,0x7306ffee,
    0x5015dfff,0x7ecc5bfd,0x3ee61eff,0x7dcc2dff,0xffd31dff,0xffb507df,
    0xffb9837f,0x3fee62df,0xfffd52df,0x00000017,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x95000000,0x39993399,0x1314c72e,
    0x1543721c,0x71999100,0x666441bd,0xbb71deb8,0x8bccc985,0x332e22cb,
    0x33224d98,0x0e04cccc,0x3300c407,0x020100cc,0x0362016c,0xb83b3264,
    0x05ed41cd,0x19b5076e,0x216c4950,0x55442caa,0x2aaaaa61,0x5530aaaa,
    0x35555555,0x7fd9bfe0,0xffcfa926,0xff30dedf,0x002fbea9,0x3fafbfee,
    0x6d6ffdc5,0x0ffcbcff,0x82da7fdc,0x27feaffa,0x413fea58,0xfc812e2d,
    0x0f41d100,0x03e60754,0x4fc809f1,0xbfd1ff98,0x98fedf6c,0x3fe64fcd,
    0x893eee65,0x99ff26fb,0x45747c8f,0xddddd71f,0x3ae7fddd,0xeeeeeeee,
    0x323ff702,0xed8172ff,0xfe81f912,0x00eff541,0x1ff23ff5,0x3fea5ff5,
    0xfb03ff32,0x3fea073f,0xf88c4555,0x7dcd906f,0xd900a200,0x3b207ea1,
    0xda5c7f30,0x5fc40d99,0xd87fcc1f,0xae41f34f,0x7fe893e0,0x26f80f88,
    0x3ed546fb,0x8013e5f3,0xf100003c,0x257fb29f,0x20ba0be2,0x2fbf2600,
    0xfb87fd40,0xf98ffd47,0x305ff31f,0x7fd40dff,0x82ffc803,0x007f52fc,
    0x774df100,0x43faec80,0x1ffbcefd,0x7f85da6c,0x2a354bee,0x2c407cc6,
    0x9be0bfa2,0x32b624f9,0x027c7e67,0x2aaa6790,0x00aaaaaa,0x3f26bff6,
    0xb83cc2af,0xff710005,0xfb87fd45,0xf98ffd47,0x205ff31f,0xff500ffd,
    0x85ff9803,0x81ff36fa,0xeeeeeeed,0xba7e41ee,0x209fb06f,0x1f303d88,
    0x4cbb07e2,0x43d87e0f,0xb105701d,0x22f8df0f,0x3a0fdbfb,0x32001f8a,
    0xdddddd72,0x7d405ddd,0x81dff16f,0x004d80f8,0x20bffc88,0x8ff70ffa,
    0x3ff31ffa,0x7d40bfe6,0x03ff505f,0xe880ffd8,0xaa85fb1f,0xaaaaaaaa,
    0x2fd8ff40,0xa80eef98,0x43e85d9f,0x71a1dc6c,0x6e41ddbf,0x130aa0db,
    0x1b1be12a,0x205c45c4,0x000000aa,0x3a3ff800,0xf889b05f,0x6cc06e41,
    0x1ff502df,0x3ff51fee,0x7fcc7fe6,0x03ff9902,0x7d403ff5,0x4bd10e4f,
    0x5400806d,0xf307f31f,0x2db03b27,0x221661fb,0x1030221d,0x5eeeb837,
    0x40abeb80,0x00062eea,0x00000000,0x17dc3f90,0xffcbefe8,0x5c53fe62,
    0x7dc00cfe,0x541ff91f,0x25ff51ff,0x88d82ff9,0x1ffa86ff,0x34cdff10,
    0x405d0fc4,0x9b17407c,0x0ec87f30,0x00001822,0x00000000,0x00000000,
    0xd3000000,0x93b70788,0x7c4d55bd,0x2005d92f,0xfe8cffe8,0x1bffb14f,
    0xffb1bffb,0x26bf661b,0xfb10cfff,0xdff9019f,0x9660bfdb,0xa80e6058,
    0x81441262,0x00000003,0x00000000,0x00000000,0x20200000,0x08200000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x05d40400,0x547ff044,0xa83ff31d,0x8ae1911d,
    0x221aaaa8,0x88888888,0xbbbbbb10,0x00007bbb,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x7ff74498,0x1fcc322d,0x44f997fe,
    0xf37f95ff,0xb7fffdcf,0xfffffff8,0x777714ff,0x00377777,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x532fb800,0x927ffed4,
    0x6987fb09,0x90d99ff4,0x1e666547,0x11111111,0x00000001,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x44063f30,0x2010040a,
    0x00000080,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00006e60,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,
};

static signed short stb__times_bold_21_latin1_x[224]={ 0,1,1,0,0,1,0,1,0,0,1,0,0,0,
0,0,0,1,0,0,0,0,0,0,0,0,1,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,-1,0,0,0,0,0,0,0,0,0,0,
-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,2,2,2,2,2,2,2,2,2,
2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,1,1,0,0,0,
1,0,0,0,0,0,0,0,0,-1,0,0,0,0,2,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,
0,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,-1,0,-1,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
 };
static signed short stb__times_bold_21_latin1_y[224]={ 16,3,3,3,3,3,3,3,3,3,3,4,13,10,
13,3,3,3,3,3,3,3,3,3,3,3,7,7,5,7,5,3,3,3,3,3,3,3,3,3,3,3,3,3,
3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,18,3,7,3,7,3,7,3,7,3,3,
3,3,3,7,7,7,7,7,7,7,4,7,7,7,7,7,7,3,3,3,9,4,4,4,4,4,4,4,4,4,
4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,16,6,3,3,5,3,
3,3,3,3,3,7,7,10,3,1,3,4,3,3,3,7,3,8,15,3,3,7,3,3,3,6,-1,-1,-1,-1,
-1,0,3,3,-1,-1,-1,-1,-1,-1,-1,-1,3,-1,-1,-1,-1,-1,-1,5,2,-1,-1,-1,-1,-1,3,3,3,3,
2,3,3,2,7,7,3,3,2,3,3,3,2,3,3,3,3,3,2,3,3,5,6,3,3,2,3,3,3,3,
 };
static unsigned short stb__times_bold_21_latin1_w[224]={ 0,4,8,10,9,17,15,4,7,6,8,11,5,6,
4,6,9,8,9,9,9,9,9,10,9,9,4,4,11,11,11,8,18,14,12,13,13,12,12,15,15,7,10,15,
12,18,14,15,12,15,14,10,12,14,14,19,14,14,13,5,6,5,9,11,5,10,10,8,11,8,8,10,11,6,
6,11,6,16,10,9,10,11,9,7,7,10,10,14,10,10,9,6,2,6,11,11,11,11,11,11,11,11,11,11,
11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,4,8,10,10,10,
2,9,7,14,6,10,11,6,14,11,7,11,6,6,4,11,11,4,4,5,6,10,14,14,14,8,14,14,14,14,
14,14,20,13,12,12,12,12,7,7,7,7,13,14,15,15,15,15,15,9,15,14,14,14,14,14,11,10,10,10,
10,10,10,10,14,8,8,8,8,8,7,6,7,7,9,10,9,9,9,9,9,11,9,10,10,10,10,10,10,10,
 };
static unsigned short stb__times_bold_21_latin1_h[224]={ 0,14,7,14,15,14,14,7,17,17,8,11,7,3,
4,14,14,13,13,14,13,14,14,14,14,14,10,13,10,5,10,14,18,13,13,14,13,13,13,14,13,13,14,13,
13,13,14,14,13,17,13,14,13,14,14,14,13,13,13,17,14,17,7,3,4,10,14,10,14,10,13,14,13,13,
18,13,13,9,9,10,14,14,9,10,13,10,10,10,9,14,9,17,18,17,4,12,12,12,12,12,12,12,12,12,
12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,0,15,17,14,10,13,
18,18,3,14,6,9,5,3,14,2,7,11,7,7,4,14,18,4,5,7,6,9,14,14,14,15,17,17,17,17,
17,16,13,17,17,17,17,17,17,17,17,17,13,18,18,18,18,18,18,9,15,18,18,18,18,17,13,14,14,14,
15,14,14,15,10,13,14,14,15,14,13,13,14,13,14,13,14,14,15,14,14,9,11,14,14,15,14,18,18,18,
 };
static unsigned short stb__times_bold_21_latin1_s[224]={ 251,243,166,75,65,94,31,209,243,211,147,
122,190,90,66,58,65,85,228,124,100,98,160,185,196,206,27,235,229,240,32,
23,44,180,201,165,214,20,33,108,94,195,12,56,119,140,96,80,203,67,46,
149,72,134,43,111,30,15,1,61,248,173,156,97,71,189,179,171,131,180,110,
190,88,81,34,61,249,55,44,200,58,231,83,221,73,210,241,1,72,154,93,
83,41,204,49,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,
110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,251,251,187,
32,16,45,63,66,82,216,214,103,228,90,170,109,175,144,183,196,61,86,76,
77,44,203,221,126,16,1,231,85,1,31,46,90,105,1,159,146,160,120,133,
226,196,218,239,179,238,228,103,119,135,151,167,137,27,183,198,213,88,16,223,
130,141,220,43,47,182,54,156,240,193,202,247,211,132,216,122,1,112,9,162,
152,75,246,172,114,134,1,69,16,143,23,12,1, };
static unsigned short stb__times_bold_21_latin1_t[224]={ 17,54,113,54,38,38,54,113,1,20,113,
99,113,123,123,54,54,99,70,54,85,54,54,54,54,54,113,85,99,113,113,
70,1,85,70,70,70,85,85,54,99,85,70,99,85,85,70,70,85,20,85,
54,99,54,70,70,99,99,99,20,54,20,113,123,123,99,70,99,70,99,85,
70,85,85,1,85,85,113,113,99,70,54,113,99,85,99,99,113,113,70,113,
20,1,20,123,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,
99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,17,1,20,
70,113,99,1,1,123,54,113,113,113,123,54,123,113,99,113,113,123,54,1,
123,123,113,113,113,54,55,38,38,20,20,20,20,20,38,85,20,20,20,20,
20,20,20,20,20,70,1,1,1,1,1,1,113,38,1,1,1,1,20,85,
38,38,38,38,54,38,38,99,85,38,38,20,38,85,85,38,85,38,85,38,
38,38,38,38,113,99,70,70,38,70,1,1,1, };
static unsigned short stb__times_bold_21_latin1_a[224]={ 76,101,168,152,152,303,253,84,
101,101,152,173,76,101,76,84,152,152,152,152,152,152,152,152,
152,152,101,101,173,173,173,152,282,219,202,219,219,202,185,236,
236,118,152,236,202,286,219,236,185,236,219,169,202,219,219,303,
219,219,202,101,84,101,176,152,101,152,169,135,169,135,101,152,
169,84,101,169,84,253,169,152,169,169,135,118,101,169,152,219,
152,152,135,120,67,120,158,236,236,236,236,236,236,236,236,236,
236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,
236,236,236,236,236,236,236,236,76,101,152,152,152,152,67,152,
101,227,91,152,173,101,227,152,121,167,91,91,101,175,164,76,
101,91,100,152,228,228,228,152,219,219,219,219,219,219,303,219,
202,202,202,202,118,118,118,118,219,219,236,236,236,236,236,173,
236,219,219,219,219,219,185,169,152,152,152,152,152,152,219,135,
135,135,135,135,84,84,84,84,152,169,152,152,152,152,152,167,
152,169,169,169,169,152,169,152, };

// Call this function with
//    font: NULL or array length
//    data: NULL or specified size
//    height: STB_FONT_times_bold_21_latin1_BITMAP_HEIGHT or STB_FONT_times_bold_21_latin1_BITMAP_HEIGHT_POW2
//    return value: spacing between lines
static void stb_font_times_bold_21_latin1(stb_fontchar font[STB_FONT_times_bold_21_latin1_NUM_CHARS],
                unsigned char data[STB_FONT_times_bold_21_latin1_BITMAP_HEIGHT][STB_FONT_times_bold_21_latin1_BITMAP_WIDTH],
                int height)
{
    int i,j;
    if (data != 0) {
        unsigned int *bits = stb__times_bold_21_latin1_pixels;
        unsigned int bitpack = *bits++, numbits = 32;
        for (i=0; i < STB_FONT_times_bold_21_latin1_BITMAP_WIDTH*height; ++i)
            data[0][i] = 0;  // zero entire bitmap
        for (j=1; j < STB_FONT_times_bold_21_latin1_BITMAP_HEIGHT-1; ++j) {
            for (i=1; i < STB_FONT_times_bold_21_latin1_BITMAP_WIDTH-1; ++i) {
                unsigned int value;
                if (numbits==0) bitpack = *bits++, numbits=32;
                value = bitpack & 1;
                bitpack >>= 1, --numbits;
                if (value) {
                    if (numbits < 3) bitpack = *bits++, numbits = 32;
                    data[j][i] = (bitpack & 7) * 0x20 + 0x1f;
                    bitpack >>= 3, numbits -= 3;
                } else {
                    data[j][i] = 0;
                }
            }
        }
    }

    // build font description
    if (font != 0) {
        float recip_width = 1.0f / STB_FONT_times_bold_21_latin1_BITMAP_WIDTH;
        float recip_height = 1.0f / height;
        for (i=0; i < STB_FONT_times_bold_21_latin1_NUM_CHARS; ++i) {
            // pad characters so they bilerp from empty space around each character
            font[i].s0 = (stb__times_bold_21_latin1_s[i]) * recip_width;
            font[i].t0 = (stb__times_bold_21_latin1_t[i]) * recip_height;
            font[i].s1 = (stb__times_bold_21_latin1_s[i] + stb__times_bold_21_latin1_w[i]) * recip_width;
            font[i].t1 = (stb__times_bold_21_latin1_t[i] + stb__times_bold_21_latin1_h[i]) * recip_height;
            font[i].x0 = stb__times_bold_21_latin1_x[i];
            font[i].y0 = stb__times_bold_21_latin1_y[i];
            font[i].x1 = stb__times_bold_21_latin1_x[i] + stb__times_bold_21_latin1_w[i];
            font[i].y1 = stb__times_bold_21_latin1_y[i] + stb__times_bold_21_latin1_h[i];
            font[i].advance_int = (stb__times_bold_21_latin1_a[i]+8)>>4;
            font[i].s0f = (stb__times_bold_21_latin1_s[i] - 0.5f) * recip_width;
            font[i].t0f = (stb__times_bold_21_latin1_t[i] - 0.5f) * recip_height;
            font[i].s1f = (stb__times_bold_21_latin1_s[i] + stb__times_bold_21_latin1_w[i] + 0.5f) * recip_width;
            font[i].t1f = (stb__times_bold_21_latin1_t[i] + stb__times_bold_21_latin1_h[i] + 0.5f) * recip_height;
            font[i].x0f = stb__times_bold_21_latin1_x[i] - 0.5f;
            font[i].y0f = stb__times_bold_21_latin1_y[i] - 0.5f;
            font[i].x1f = stb__times_bold_21_latin1_x[i] + stb__times_bold_21_latin1_w[i] + 0.5f;
            font[i].y1f = stb__times_bold_21_latin1_y[i] + stb__times_bold_21_latin1_h[i] + 0.5f;
            font[i].advance = stb__times_bold_21_latin1_a[i]/16.0f;
        }
    }
}

#ifndef STB_SOMEFONT_CREATE
#define STB_SOMEFONT_CREATE              stb_font_times_bold_21_latin1
#define STB_SOMEFONT_BITMAP_WIDTH        STB_FONT_times_bold_21_latin1_BITMAP_WIDTH
#define STB_SOMEFONT_BITMAP_HEIGHT       STB_FONT_times_bold_21_latin1_BITMAP_HEIGHT
#define STB_SOMEFONT_BITMAP_HEIGHT_POW2  STB_FONT_times_bold_21_latin1_BITMAP_HEIGHT_POW2
#define STB_SOMEFONT_FIRST_CHAR          STB_FONT_times_bold_21_latin1_FIRST_CHAR
#define STB_SOMEFONT_NUM_CHARS           STB_FONT_times_bold_21_latin1_NUM_CHARS
#define STB_SOMEFONT_LINE_SPACING        STB_FONT_times_bold_21_latin1_LINE_SPACING
#endif

