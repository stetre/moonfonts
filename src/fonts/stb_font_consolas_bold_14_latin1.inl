// Font generated by stb_font_inl_generator.c (4/1 bpp)
//
// Following instructions show how to use the only included font, whatever it is, in
// a generic way so you can replace it with any other font by changing the include.
// To use multiple fonts, replace STB_SOMEFONT_* below with STB_FONT_consolas_bold_14_latin1_*,
// and separately install each font. Note that the CREATE function call has a
// totally different name; it's just 'stb_font_consolas_bold_14_latin1'.
//
/* // Example usage:

static stb_fontchar fontdata[STB_SOMEFONT_NUM_CHARS];

static void init(void)
{
    // optionally replace both STB_SOMEFONT_BITMAP_HEIGHT with STB_SOMEFONT_BITMAP_HEIGHT_POW2
    static unsigned char fontpixels[STB_SOMEFONT_BITMAP_HEIGHT][STB_SOMEFONT_BITMAP_WIDTH];
    STB_SOMEFONT_CREATE(fontdata, fontpixels, STB_SOMEFONT_BITMAP_HEIGHT);
    ... create texture ...
    // for best results rendering 1:1 pixels texels, use nearest-neighbor sampling
    // if allowed to scale up, use bilerp
}

// This function positions characters on integer coordinates, and assumes 1:1 texels to pixels
// Appropriate if nearest-neighbor sampling is used
static void draw_string_integer(int x, int y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0, cd->t0); glVertex2i(x + cd->x0, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t0); glVertex2i(x + cd->x1, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t1); glVertex2i(x + cd->x1, y + cd->y1);
        glTexCoord2f(cd->s0, cd->t1); glVertex2i(x + cd->x0, y + cd->y1);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance_int;
    }
    glEnd();
}

// This function positions characters on float coordinates, and doesn't require 1:1 texels to pixels
// Appropriate if bilinear filtering is used
static void draw_string_float(float x, float y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0f, cd->t0f); glVertex2f(x + cd->x0f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t0f); glVertex2f(x + cd->x1f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t1f); glVertex2f(x + cd->x1f, y + cd->y1f);
        glTexCoord2f(cd->s0f, cd->t1f); glVertex2f(x + cd->x0f, y + cd->y1f);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance;
    }
    glEnd();
}
*/

#ifndef STB_FONTCHAR__TYPEDEF
#define STB_FONTCHAR__TYPEDEF
typedef struct
{
    // coordinates if using integer positioning
    float s0,t0,s1,t1;
    signed short x0,y0,x1,y1;
    int   advance_int;
    // coordinates if using floating positioning
    float s0f,t0f,s1f,t1f;
    float x0f,y0f,x1f,y1f;
    float advance;
} stb_fontchar;
#endif

#define STB_FONT_consolas_bold_14_latin1_BITMAP_WIDTH         256
#define STB_FONT_consolas_bold_14_latin1_BITMAP_HEIGHT         74
#define STB_FONT_consolas_bold_14_latin1_BITMAP_HEIGHT_POW2   128

#define STB_FONT_consolas_bold_14_latin1_FIRST_CHAR            32
#define STB_FONT_consolas_bold_14_latin1_NUM_CHARS            224

#define STB_FONT_consolas_bold_14_latin1_LINE_SPACING           9

static unsigned int stb__consolas_bold_14_latin1_pixels[]={
    0x00002211,0x3ffe25c8,0x0009ffd2,0x2fae3fb3,0x36604400,0x9b9105a8,
    0x320e2710,0x50b2a002,0x06a60015,0x33b88154,0x500e2710,0xaa815001,
    0x20353000,0x3220002a,0x5c40aa03,0x00155033,0x14ea75dc,0xd035c01d,
    0x4beea21f,0x3f621ade,0x0aee80df,0x4b805f73,0x207dcfd4,0x5c5ebdf8,
    0x27c1fb9f,0xd883fa80,0x81fd400e,0xedb83edd,0x5cfdc0ff,0x801f101f,
    0x076c40f9,0x6ec0fea0,0xbffd503e,0xdd82dcc8,0xffedb83e,0x40076c40,
    0x49d4eaf9,0x04fa80ee,0x74be2022,0x4fdbfe84,0x05d817c4,0x2ec001e4,
    0x206183f1,0x8013004f,0x8804c009,0x00980311,0x7f6440c3,0x3ffec41e,
    0x00980130,0x3ee06231,0x76644bbe,0x40188c42,0x20026009,0x893a9d7c,
    0x7c37c45f,0x2f887fff,0x362fa89d,0x6c817c47,0x323ffd70,0x7ccbea0f,
    0xf53eaaa8,0xb9f07e43,0x507e43df,0x6ffec45f,0x06ffec40,0x1037ff62,
    0xd881bffb,0x3be20dff,0x5ff41ced,0xc87ea4ff,0x7e43f50f,0x87e43f50,
    0x02a806f8,0x6fa81ff7,0x1ff703ea,0xd4e9fc40,0x3ee1fb89,0x87daaa80,
    0xfc89d2f8,0x1f987ee0,0xfbf90f70,0x7d8fe63b,0x377fefae,0x07e43f54,
    0x4cdf7bff,0x7fd1f63f,0xebfe89fd,0x7f5ff44f,0x27f5ff44,0xa93faffa,
    0xafa84cbf,0x3f50fdf8,0x21fa87e4,0x643f50fc,0x5c07f30f,0x7ec0dfff,
    0xa97fd43f,0x01ffec0f,0x2753a1f7,0x806e8fe2,0x9d2f887c,0xc97d47d8,
    0x8bba606e,0x16e81f5f,0x6df66c9f,0x643f54dd,0x0fc97e0f,0xf527c5ba,
    0x45f536c5,0x6d8bea6d,0x2a6d8bea,0xff89b62f,0x5d77c84f,0xfc87ea3f,
    0x87e43f50,0x543f21fa,0x2a66a03f,0x22fe7c4f,0x81f56ffa,0x97a05fcf,
    0x49f0354e,0x887c804f,0x1fb89d2f,0x027ecbea,0x33e27dd1,0xfb9fb878,
    0x336befa1,0x7e43f53d,0x20fc93e0,0x321fb9fb,0x7e43ee0f,0x07e43ee0,
    0xb83f21f7,0x7dc1f90f,0x83bffa60,0x25f37d7d,0x543f21fa,0x7d43f21f,
    0x1fd43f21,0xf52fccc0,0xfcfa8fb3,0x27ea0fa9,0x743f507d,0x4f8b7404,
    0x2f887c80,0x322fa89d,0x6403ea0f,0x886adf87,0x7df46ecf,0x3f52ebea,
    0x6c9f07e4,0x23767c47,0x7d97d47d,0x547d97d4,0x2fa8fb2f,0xf82fa8fb,
    0x3e3f26fd,0x43f51fa9,0x643f50fc,0x7e43f50f,0x7dc0df10,0x5df25fff,
    0x37e7ea2f,0x7ddf20fa,0x02746d82,0xc805e97e,0x89d2f887,0x44fccff8,
    0x90d902f8,0xfd83bdff,0x7f7df43f,0x643f50fe,0x3ee77e0f,0x5c3ffd84,
    0x7dc7ea1f,0x0fdc7ea1,0xa87ee3f5,0x7d43f71f,0x2e7ebc41,0x2a1f96df,
    0x7d43f21f,0x0fd43f21,0x5efec1f9,0x2fcbf14b,0x549f53dd,0x20fcfb8f,
    0x4c4fa9ee,0x44ea742f,0x201f23f9,0x9d2f887c,0x109ffb10,0x541b205f,
    0x3fcc0dee,0x0e46566c,0x3e3e45f5,0xff304fff,0x87e45f30,0x4c3f22f9,
    0x7cc3f22f,0x17cc3f22,0x3f36a1f9,0x37fe24fc,0xc8bea4fb,0x27c8bea7,
    0x321f22fa,0x3bf15fff,0x3ffe6bf9,0x223ea6ff,0xfff30fff,0xe87c8dff,
    0x20fc89d4,0x437402fa,0x7c09d2f8,0x3607f015,0x7d40f605,0x7c407b83,
    0x67c5fa9e,0xf81fd400,0x7fc4fccf,0x67fc4fcc,0x667fc4fc,0x7e67fc4f,
    0x0fbffa64,0xf113ffe6,0x7c4bf53d,0x3e25fa9e,0xbb05fa9e,0x2bbbff90,
    0x1fc999fb,0x43ff21f5,0x1fc999fb,0x3a9d09f1,0x3f613ea4,0x93f6f620,
    0x9dd2fcc8,0x87fdf905,0x7fb50cfc,0x3f2a1740,0xb75df106,0x81bfff50,
    0x1bf2a04f,0x40cffe98,0x4c0cffe9,0x74c0cffe,0x7f4c0cff,0x204c80cf,
    0x3fea00fa,0x7ffd40df,0x6fffd40d,0x02205d00,0x2a7f51b6,0x361ff10f,
    0x0a89fd46,0x3e29d4e8,0x6c4dd106,0x777443ee,0x2a07ddb1,0x2a1b503c,
    0x2e06c02c,0x6f64404e,0x03e80203,0x004013ae,0x04004004,0x806a0040,
    0x10010019,0x00000100,0x00000000,0x0649d4e8,0x00000710,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x36000000,
    0x000007b3,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x5c41a980,0x41a98033,
    0x36607138,0x800aa80d,0x882a81a9,0x00aa8713,0xdec98154,0x64c01642,
    0x35300ccc,0x6cc389c4,0x546cc5a8,0x5403c885,0x00065c2c,0xb8770000,
    0x3c881a9c,0x6dc16540,0x900cb82d,0x20fea005,0x500ffedb,0xf73f707f,
    0x10595903,0x1fd401db,0x3ee1f6ec,0x3b621fb9,0x987dbb00,0x36c2cbef,
    0x3fbbff60,0x7dc3fa80,0x27ea1fb9,0x2e7ea0fb,0x8276740f,0x0ed883fa,
    0x4c7ffd70,0x201ffffe,0x3bffaa5e,0x504ece81,0xfb9f907f,0xf80ed885,
    0x30013004,0x43004c01,0x980bb301,0x46202600,0x4c061818,0xa8311880,
    0x40be603f,0x0fbcfff9,0x00c30098,0x0c462000,0x404c0098,0x3a2badfb,
    0x7403fb8e,0x213eeea5,0x02603118,0x304f8afc,0xf7009f01,0x03fee01f,
    0x217d41fb,0xff700ffb,0x9ffffb01,0xb27fffec,0x7ec9ffff,0x3ffe4fff,
    0x3fffe4ff,0x037fea4f,0xfffb82f4,0x3ffe0fbc,0x3fffe4ff,0x37ff624f,
    0x837ffee0,0x220dffd8,0x6c40dffd,0x81ba0dff,0xd887f14f,0x3f625fff,
    0xbd27c1ff,0x206fffdc,0xfb81fb4f,0x373e0dff,0x3ffd81ef,0xf987ffb0,
    0x3ff61ba4,0xb07ffb03,0x7ec3555f,0x2bf61aaa,0x2abf61aa,0x2bbeaa1a,
    0x46bbeaa1,0x81ffddf8,0xfff981fa,0x3eaa0fbc,0x3beaa1ae,0x3eabf61a,
    0x93ea66a4,0x364faafd,0x7ec4faaf,0x817e4faa,0x740fdbfd,0x3fa5f9af,
    0xd27c5faa,0x27d4cd4b,0x2a07ef3e,0x3fe4fa99,0xfcf86fbd,0xb0bf9f05,
    0x9f05f51f,0x17f3e0bf,0x207d81f6,0x201f607d,0xf517e05f,0x27c1fea7,
    0x0fbcffc8,0x117e05f8,0x30db339f,0x273e2bf3,0x339f16d9,0x4ce7c4db,
    0xde81ba6d,0xd1fcc1cc,0x47e8fe6b,0x26617a4f,0x27de7c5f,0x2fcbf330,
    0x6cfd41f9,0x87d9fa87,0xfa86ebf9,0xd9fa87d9,0x0999fd87,0xd82667f6,
    0x3f60999f,0x05f80999,0x27ff117e,0x00fc80fd,0xf01f7353,0x3e62fc0b,
    0x3ee7ffff,0xfff35fff,0x3ffe6fff,0x3ffe67ff,0x2b7ee7ff,0x155bf12b,
    0x5d7a1fb8,0x49f1f61f,0x3fffee5e,0x44fda7c5,0x3e5ffffb,0x77c83f24,
    0x5f77c85f,0xf905ffb0,0x2ef90bee,0x7fffec2f,0x8fffff63,0x363ffffd,
    0x5f83ffff,0x3fa617e0,0x07f106fe,0x0bf01f70,0x40fe22fc,0x7c57e5f8,
    0x4407f103,0x7ffdc03f,0x97ffff63,0x2abf12fa,0x29f1fa3f,0x7cbf15f8,
    0x23fb27c5,0x4f97e5f8,0xf53dd1f6,0x4fa9ee89,0x3dd06f98,0xa9ee89f5,
    0xfb03ec4f,0x0fb03ec0,0x02fc0bf0,0x36c01ff9,0x2fc07dc0,0x35fd0bf0,
    0x3277e233,0x266bfa5f,0x0666bfa1,0xb03335fd,0x3f22fa8b,0xbfd5df10,
    0x13f2bbe2,0x22bfd5df,0x7c5fc9df,0xf11fc98c,0x6fcbf93b,0x3fe64fb9,
    0x3fe66fff,0x09f06fff,0x4dfffff3,0x46fffff9,0xd81f607d,0x3e01f607,
    0xf9017e05,0x0417cc03,0xf817e0fd,0x3fffe885,0x89777ff2,0x3a23fffe,
    0x7f443fff,0x542f83ff,0x5c6ebadf,0x3ea5ddff,0xdffa85ff,0x377ff25d,
    0x1ffe67c5,0xe9777ff2,0x4fdc4fff,0x3f71fc99,0x9f03f933,0xf9333f70,
    0x32667ee3,0x2aabf61f,0x86aabf61,0x361aaafd,0x2aa1aaaf,0x3eaa1aef,
    0xfbbd31ae,0xf98bd00d,0x7d543fee,0x3beaa1ae,0x0220301a,0x30030060,
    0x9ddb7000,0x00100201,0x00004401,0x6c020044,0x46d9fd46,0xd84f83fa,
    0x46d9fd46,0x3fff63fa,0x3ffff64f,0x93ffff64,0x3e4ffffd,0x3fe4ffff,
    0x99714fff,0x30530017,0xffff0379,0x7ffffc9f,0x00000004,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x44000000,0x5a8d983c,0x002ca800,
    0x70664400,0xa802ca83,0x20065c2c,0x000003c8,0x1466c400,0x00032e00,
    0x1b3001e4,0x0de400b5,0x00000a20,0x01466c40,0xc881cb80,0x33a00dc4,
    0x7dcfd44e,0x7d40fe40,0x04ffd883,0x2b9d90f9,0x27efec6a,0xdb107f50,
    0x42767401,0x4c1efebf,0x3621fffd,0xfdcb84ff,0x13fff20f,0xfb101db1,
    0x997e2bdf,0x3ea0dffe,0x2fc40fb9,0x540bfff1,0x0dffd886,0xf15ffea8,
    0x07fee5cb,0x6437ff5c,0xd536dc1f,0x22312fc4,0x81fb8001,0xb117d009,
    0x57b0fb09,0x93f83f1d,0x26004c0f,0x20623100,0x7c6fbdff,0x3fa1babf,
    0x20204fba,0x982feaab,0x5f9afe80,0xfa9ef97e,0x43fcc005,0x3f622fd8,
    0xfebfe86f,0xa5df7dc4,0x360105e8,0x1105bbdf,0x987e2d70,0x37ffee7f,
    0x445e93e0,0x5cbd27c1,0x91f9ec8d,0x2a9fffff,0xdf84dcff,0xffd885e8,
    0x6ffec40d,0x06ffec40,0xf30fc97e,0xfe8bea0b,0x037ffee0,0x749f17cc,
    0xf2f47f35,0x25e93e2b,0xa80dffd8,0x7747f301,0x8bea5ffb,0x881be26d,
    0x837ff620,0x7fec05f9,0x509b6b86,0x27d4cd43,0x3ea2f49f,0x365e93e0,
    0x33d8aeca,0x44355fd5,0xffb80ea9,0xfcbfe80d,0x2fe5ff45,0xf17f2ffa,
    0xbff07e49,0xfd88fb83,0x3ea66a1f,0xf076d4c4,0x21fbaf49,0xcfd93e5e,
    0x32ffa1fd,0xfb53005f,0x33aebea3,0x0fb83f27,0xd27407f3,0x7dcbf97f,
    0xeaa83331,0x00ea8886,0x4f97e660,0x20feb97a,0xd9e97a4f,0x40fb0f24,
    0x3ffb02f8,0xfb17d493,0x54fb17d4,0x49f1f62f,0x77ff4c7d,0xf9df5f90,
    0xf8bf3303,0xe93e0dff,0x97e25f55,0x97ffa24f,0x2e1f62fa,0xf7177dc1,
    0x361f77d1,0x3fa97d47,0xb17d53a0,0x7fc47e4f,0x3e20dd07,0x7fdc1102,
    0x5e93e5ff,0x27c159f9,0x4f656cbd,0xb03ec3d8,0x4fdcbf99,0x87ee7cee,
    0x643f70fc,0x7e43f70f,0x13ee77e0,0xffbafecc,0x7fdc3f74,0x4bf505ff,
    0x77c57a4f,0xd93a5fea,0x3f74fc9e,0x1ff307e4,0x2bea07d4,0x87ee7c8f,
    0x407f51fa,0x7e43f74f,0x1f663f90,0xfbcd8374,0x3e2ff30e,0xf14f97e5,
    0x8a7c1fab,0x3b63725f,0xa83ec1f9,0xdb2eaf9f,0x3fa97fe2,0x363fa9f6,
    0x47d8fea7,0xf804ffff,0x87e47f56,0xe817e5f8,0x72fc53e6,0x844bdbff,
    0x7d5f63f9,0x83fa1f63,0xaeff8818,0xfc8be65f,0xafc0df10,0xfa9f63fa,
    0x43741f23,0x31f888fa,0x3277e2df,0x3fabbe5f,0x5df05fb5,0x89fc4bfd,
    0x19bfc85d,0x5f1f15f1,0x97f66ff2,0x24fbbff8,0x24fbbff8,0x44fbbff8,
    0x559300cf,0x5d77c9f9,0x3277e24f,0x3f2a6a5f,0x17fabbe4,0x229d2f42,
    0xf15f99df,0xf909f77f,0xff981fb8,0x667fc0df,0x5defec4f,0x5ffc57e4,
    0x567f44fb,0x4f74cc7d,0x0fa25f10,0x5ddffc81,0x45777fea,0x3fea4fff,
    0x7ff4c5dd,0x29ffd104,0xd89bf25c,0x2a3fceff,0x7d40dfff,0x7fd40dff,
    0x3027c0df,0x4c19ffff,0xffc84ffe,0x3fffe5dd,0x2eeffd44,0xb97e2bd0,
    0x3ea0dfff,0x3faa0dff,0x7c40fe41,0x33ffa601,0x24fffc80,0x37ffea5f,
    0x2fffec40,0x65bffffe,0x100fff65,0x32e00801,0x00080084,0x00400011,
    0x04004004,0x011007d0,0x30044008,0x93600100,0x30080100,0x02880403,
    0x3a020010,0x00300084,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x26000000,0x13aa2fec,
    0x3ffff637,0x884f93e2,0x7fffec3c,0x17d41f90,0x88002c98,0x87ea28cd,
    0x267620fc,0x1b89910d,0x90f32e00,0xd802c805,0x037b2605,0x2ffff800,
    0x00fe45f7,0x260006a0,0xf00064c4,0xfd300009,0xacefa89f,0x3547ea20,
    0x7c3999fb,0x3b3a13e4,0x43f6aa64,0x4c1f63f9,0x7fff504f,0x50ffdcb8,
    0xf307e43f,0x9b6e3f55,0x27ff546a,0x0bf1bf2e,0x06f804f8,0x44199df1,
    0xf500dffd,0x8b7415bf,0x3fffa64f,0x7fd44e80,0x37e65fdd,0x3620eeaa,
    0x37fe0dff,0x7ffd701c,0x1fe577c4,0x4ff440dd,0xf81761f8,0x223113e4,
    0xb741f701,0x201104f8,0x203baef8,0x1f90fd40,0x1f8b5c00,0x417ed6f4,
    0x3e02fc6e,0xf5008804,0x3f2ffa05,0x507f9b05,0x7f41f97f,0x44e80a99,
    0x2f9ef999,0xb07ffff2,0x77c9f55f,0x6fdc3ffd,0xf87ea2ba,0x8577bf15,
    0x6c4dafca,0xf27c0acf,0x206ffd89,0x2e7ee0fb,0x837fec1f,0x3afe02fa,
    0x643f50ef,0x21bff60f,0xf9809b6b,0x9afc6e84,0x77f6fc5f,0x5c1bff60,
    0x362fa81f,0x1cf9f887,0x7f43ffd8,0x7fffcc0b,0x74e7447f,0x11fcdb23,
    0x7cdb339f,0x40dd1fa4,0x7cdba3fa,0x2a64feef,0x7f640ea8,0x7c53e1ff,
    0x70375544,0x3767c41f,0xfa837554,0x3ef7fe01,0x07e43f54,0x5110dd55,
    0x83fa801d,0x77c6fc6e,0x27deffc0,0xffb8dd55,0x87ee7fff,0xffb5c0fc,
    0x4c37c41f,0x5510dffe,0x3be655bf,0x97a2eeef,0x3fffe63f,0x47d93e7f,
    0x3bfe205f,0x6c7f37fe,0x4c02f887,0x3fabbe5f,0x2e06e80e,0x01ffec0f,
    0xffff70dd,0xaafcbf0f,0x3a03f21f,0x8805f106,0x7c6e80ee,0x25f80eed,
    0x5446e85f,0x3ea2abfc,0x7cfa1f63,0x4fffff83,0x4e84fc88,0xd903eaec,
    0x1fc43f31,0xf1bea9f0,0xebcb880d,0x40fc93e6,0xf106f8cd,0x7e57ffcb,
    0x3f206e82,0x3a03fcc0,0x19afb886,0x7d57a4f8,0x83741f22,0xfd06f8cd,
    0xfff1ba03,0x85e93e09,0x103f706e,0x989f77ff,0x3e03ffff,0x3fb99b84,
    0x7ceec3d8,0x3ff2098e,0x4d7f41ff,0x3bfffe19,0x15d6fe40,0x57ec9f30,
    0x6c7d46fa,0x3f6a6a6c,0xd0082fe3,0x86faac8d,0x837403fa,0xe93e01fa,
    0xbf53df15,0x23ea1ba0,0x01fd86cd,0x5f9bf1ba,0x742f49f0,0x2a03f706,
    0x76c0dfff,0x3e0adf99,0x3fa4ffff,0x2aaa0dff,0xd5ff52aa,0x2b3e63ff,
    0x3fa20eea,0x06b7e3ff,0x543fffc8,0x3220efca,0x2be20dff,0xfff1fdfa,
    0x4c04f87d,0xffb09ee9,0x037e543d,0x4c13dd33,0x7c2aabfc,0xfffa97a4,
    0x4f74cc0d,0xfbf55f10,0x2666fec3,0x3e13dd33,0x24f83fd5,0x27ba665e,
    0x0200fdc0,0x5fff1fc4,0x206209f0,0x05fffff8,0x0c989306,0x4009f030,
    0x019dff00,0xd9515c80,0x807d0041,0x046fffff,0x3fe0275c,0x3fee6fff,
    0xd27c6fff,0x7ffc010b,0x2a2b96ff,0xffff10ec,0x7ffffcff,0x83be2bf6,
    0xfff97a4f,0x00fdc6ff,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0xff980000,0x7dc002de,0x740fffff,0x7ffc45f3,0x7fffcc3d,0x207fdc7f,
    0x443ea6fa,0xfb7fffff,0x2fb97d41,0x7c2ec3fa,0x24f98fd3,0x7dc3efff,
    0x540fffff,0x77ffc47e,0xfb1fee03,0x3fea9fff,0xf30282de,0xffd9fe2b,
    0x220f93ff,0x3e1df14f,0x5f54ffff,0xf85103e4,0xf98017a4,0x7dc3febc,
    0x95770dff,0x3e5f03a3,0x3f2b7e21,0x3f333223,0x2a1ffec6,0x221f52ff,
    0xf36fdccc,0x55be3749,0x4be1764f,0xf87ee1fc,0x2a25fdbd,0xd10aaefa,
    0xbdf88fff,0x7ff883fe,0xa8d557ec,0x2a3febcf,0xb8ffa84f,0x2aabf67f,
    0x53e20f91,0x3beaa1fc,0x3e45f51a,0x93e0fe88,0xf5fdb95e,0x8fd17ccb,
    0x774fa99a,0x261d5f73,0x12efeefe,0xf502fc9f,0x545fcf87,0x201f56ff,
    0x2a3f61fd,0x7f5fd42f,0x2f845720,0x3e3ec9f3,0x82fc1f64,0xa7c47c9c,
    0x7ced85f8,0x21fa83ec,0x506fdc7e,0x6cfbb5df,0x3e20f907,0x8bf04fac,
    0x261f22fa,0xbd27c1ef,0x3effeff2,0x3f237f50,0x775f9981,0xfb887664,
    0x9f10afcb,0x3f405f73,0xf51f67ea,0x701f53f9,0x6ebf987f,0x6c87ffd0,
    0x16f87e9d,0x1f64f89f,0x11f202fc,0xf50fee9f,0x99fd8f93,0x7e43f509,
    0xea877cc1,0xfb0fbfdc,0x67c41f20,0xf517e06e,0xfa8fb559,0x57a4f80e,
    0x23f19d6c,0x43f77fff,0x775ffffb,0x4c1d1dd3,0xfff88f57,0x87f501ef,
    0x7d45f77c,0x440fadf9,0x05ffb06f,0x1d703fee,0x7e43f1ff,0x4efc2fa8,
    0x80bf05fb,0x7fffc47c,0xd8f94e83,0x3f53ffff,0xa7e40fdc,0x0f9efaeb,
    0x325ffffb,0x07fff107,0x3ffea2fc,0x0bfa27ff,0xd95f8a7c,0x7cc7e33a,
    0x2fc43f62,0xe926eebf,0x9fb9fb50,0x07f9a7c4,0xa9ee81fd,0x3ee3ea4f,
    0x807ec0fc,0x3ffe06f9,0x57edf5c4,0x1f2bea0f,0x4033fffe,0x223e405f,
    0x7dc4fbdf,0xfb09fc99,0x0fd87ea0,0x3ed71fec,0x55fb1f9b,0x7c41f215,
    0x8bf00fec,0x47d99bfa,0xaef83fd8,0x33ad95fe,0x7c5f31f8,0x3f277e26,
    0x87473775,0x24eecfea,0x503f64f8,0xffff987f,0x3e23ea6f,0x00fee0ff,
    0x3abee09f,0x3ab7ea0f,0x2f6fc0fd,0x2fc006fc,0x29f11f20,0x3fff60fd,
    0x20fb2fff,0xe89be1fa,0x88ab642f,0x1f20fb1f,0x82fce7c4,0xf917d45f,
    0xff513f20,0x675b2bbb,0xf99f31f8,0xddffc85f,0x07493775,0xbf1132b9,
    0x1fd09f75,0xfc999fb8,0x3ff21f51,0x9999ff10,0x2df109f0,0x23fea5f9,
    0x7fec0ffb,0xbf004f83,0x4abfaaa0,0x449f34f8,0xb09fc999,0x3ea3555f,
    0x3a62ffcc,0x8fc45c81,0x555f907d,0x17e53e25,0x2a35df55,0xeb81f22f,
    0x9d6c8080,0x3bfe63f1,0xf701101d,0x6c1fffff,0xfff889b4,0x427cc0bd,
    0xfa9fd46d,0x3e61ff10,0x4f87ffff,0x4bf62fc8,0x70ff15fa,0x009f01ff,
    0x7fffc17e,0x7f49f17f,0xffd8f900,0xbdff54ff,0x222e4003,0x3f20fb2f,
    0x29f16fff,0xffff0ff8,0x7c8bea9f,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00540000,0x13088000,0x184c0ae0,0x1a8fa13a,0x83bb706a,0x643b64f9,
    0x7f4bea0f,0x376e4fff,0x88776e21,0x41b80cdd,0x09d104c9,0x09377776,
    0x0d555544,0xaaa82ca8,0x819906a1,0xb300623c,0x54e4c931,0x5dc5360c,
    0x23ffd83b,0x7c2ffcdd,0x7c40efeb,0x7c427406,0x5eaf42ff,0x10d5ec54,
    0x1767f19f,0xfa9fe8be,0x0b6ef763,0x4c5f75f9,0xbba9f63f,0xfb7f52fe,
    0x897f3621,0x3fd44fab,0x3720dff3,0xccccc81f,0x7fccdf33,0x3fa85fff,
    0x3ea9ddd0,0xbf076c47,0x0f43bfe2,0x2a1f73f5,0x98fc7c9f,0x4fdc7fff,
    0xd5dfb0fb,0x4fbdff8f,0x827402b8,0x5fc45d88,0x3bbf22f9,0x936db22f,
    0x887e33ad,0x2b664ffe,0xffe869ec,0x09f16e84,0xf8ae49f5,0x36a2fc42,
    0x107f441f,0xd71f30db,0x54111110,0x217200ff,0x37cc0008,0x75d3e088,
    0x000fdfe9,0x000f73f3,0xfb1f8b64,0x7cbf1ae1,0x55555515,0x2b7eaa21,
    0x0bddd10a,0xfc897abd,0x1fc67c3f,0x1f3ff3f7,0x2ee1ffb8,0xfa81b5ea,
    0xfa9fb80f,0x3ee37c41,0x3ba60fba,0x6c2fdcc0,0x23e86d86,0x7ffffc3e,
    0x099006a5,0x90004000,0x02dc8667,0x016a3620,0x0fdbfa80,0x3a4f80fb,
    0xffffff75,0x3ffffee1,0x8bb3f70f,0x3a0fb8fb,0x3ea3ecdd,0xbbf50fb9,
    0xecfa8fbf,0x1d55951f,0x109fdd0d,0x1fd0dd9f,0x7cc5df90,0x3aaa24cf,
    0xb887baa5,0x730e23fe,0x01999998,0x00000000,0x00000000,0x877ae000,
    0xbd27c07d,0x2213a000,0xd96c3bdd,0x7b03d843,0x6d7fccb6,0x4e8a746f,
    0x90f662fa,0xf905f93f,0xbbdfc87f,0x4ccc9801,0x1982f766,0x004ccc88,
    0x5ddddc00,0x000002bb,0x00000000,0xaa980000,0xf80fb0aa,0x0bf117a4,
    0xaaa984e8,0x0098000a,0x5fabfc40,0xdd910204,0x3fa4fa87,0x3e07fcc0,
    0x0004ffff,0x00000000,0xeeeeee80,0x0000003e,0x00000000,0xccca8000,
    0x4f80fb0c,0x809d117a,0xcccca82b,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,
};

static signed short stb__consolas_bold_14_latin1_x[224]={ 0,2,1,0,0,0,0,2,1,1,0,0,1,1,
2,0,0,0,0,0,0,1,0,0,0,0,2,1,0,0,1,1,0,0,0,0,0,1,1,0,0,1,1,0,
1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,0,0,0,0,0,0,0,0,0,0,0,
0,1,0,0,0,0,0,0,1,1,0,0,0,0,0,0,1,1,3,1,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,
3,0,0,0,1,0,0,1,0,0,1,0,1,1,0,0,0,2,2,1,1,0,0,0,0,1,0,0,0,0,
0,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
 };
static signed short stb__consolas_bold_14_latin1_y[224]={ 10,0,0,1,-1,0,0,0,-1,-1,0,2,7,5,
7,0,0,1,0,0,1,1,1,1,0,0,2,2,2,4,2,0,0,1,1,0,1,1,1,0,1,1,1,1,
1,1,1,0,1,0,1,0,1,1,1,1,1,1,1,0,0,0,1,11,0,2,0,2,0,2,0,2,0,0,
0,0,0,2,2,2,2,2,2,2,0,3,3,3,3,3,3,0,-2,0,4,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,10,2,-1,0,1,1,
-2,0,0,0,0,3,5,5,0,0,0,1,0,0,0,3,0,4,10,0,0,3,0,0,0,2,-2,-2,-2,-2,
-2,-2,1,0,-2,-2,-2,-2,-2,-2,-2,-2,1,-2,-2,-2,-2,-2,-2,3,-1,-2,-2,-2,-2,-2,1,0,0,0,
0,0,0,-1,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,0,0,0,0,0,0,0,
 };
static unsigned short stb__consolas_bold_14_latin1_w[224]={ 0,3,6,8,8,8,8,3,6,5,7,8,5,5,
4,7,8,7,7,7,8,6,8,7,7,7,4,5,7,7,6,6,8,8,8,7,8,6,6,8,8,6,6,8,
6,8,8,8,8,8,8,7,8,8,8,8,8,8,7,4,8,5,8,8,5,7,8,7,7,7,8,8,7,7,
7,7,7,8,7,8,8,7,7,6,7,7,8,8,8,8,6,6,2,6,8,8,8,8,8,8,8,8,8,8,
8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,0,3,7,8,8,8,
2,8,7,8,6,7,7,5,8,6,6,7,6,6,8,8,8,4,3,6,6,7,8,8,8,5,8,8,8,8,
8,8,9,7,7,7,7,7,7,7,7,7,8,8,8,8,8,8,8,7,8,8,8,8,8,8,8,8,7,8,
7,7,7,7,8,7,7,8,7,7,7,8,7,7,8,7,8,8,8,8,8,8,8,7,8,7,7,8,8,8,
 };
static unsigned short stb__consolas_bold_14_latin1_h[224]={ 0,11,4,9,13,11,11,4,14,14,7,8,6,3,
4,12,11,9,10,11,9,10,10,9,11,10,9,11,9,5,9,11,13,9,9,11,9,9,9,11,9,9,10,9,
9,9,9,11,9,13,9,11,9,10,9,9,9,9,9,13,12,13,5,2,4,9,11,9,11,9,10,11,10,10,
13,10,10,8,8,9,11,11,8,9,11,8,7,7,7,10,7,13,15,13,4,9,9,9,9,9,9,9,9,9,
9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,0,11,13,10,9,9,
15,12,4,11,8,7,4,3,7,4,6,9,6,6,4,10,12,4,3,6,8,7,10,10,10,11,12,12,12,12,
12,12,9,13,12,12,12,12,12,12,12,12,9,12,13,13,13,13,13,7,13,13,13,13,13,12,9,11,11,11,
11,11,11,12,9,11,11,11,11,11,10,10,10,10,11,10,11,11,11,11,11,8,11,11,11,11,11,13,13,13,
 };
static unsigned short stb__consolas_bold_14_latin1_s[224]={ 213,152,236,27,160,49,58,215,13,7,57,
33,145,247,204,248,111,133,119,128,150,27,9,45,156,1,251,173,230,167,175,
179,79,53,36,204,166,159,191,225,221,214,51,205,198,182,62,195,115,39,141,
103,124,93,106,97,88,79,71,34,103,28,158,175,209,10,246,246,195,229,159,
186,143,151,20,135,127,246,16,168,94,144,8,196,41,238,108,73,99,58,117,
48,1,55,219,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,
18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,213,212,62,
76,220,187,4,94,228,32,42,65,180,247,90,197,124,203,131,138,188,34,112,
175,243,151,1,49,110,242,18,17,239,1,221,10,28,37,177,205,46,54,62,
70,78,121,86,129,1,230,115,124,133,142,151,82,169,178,187,196,88,19,237,
229,238,220,1,120,145,213,211,178,170,161,153,137,234,67,43,102,203,85,76,
67,85,216,164,24,186,136,23,212,9,106,97,70, };
static unsigned short stb__consolas_bold_14_latin1_t[224]={ 14,30,63,53,1,30,30,63,1,1,63,
63,63,63,63,1,30,53,42,30,53,42,42,53,30,42,30,30,53,63,53,
30,1,53,53,30,53,53,53,30,53,53,42,53,53,53,53,30,53,1,53,
30,53,42,53,53,53,53,53,1,17,1,63,68,63,53,17,42,17,42,42,
17,42,42,1,42,42,53,63,42,30,30,63,42,30,53,63,63,63,42,63,
1,1,1,63,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,
53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,14,30,1,
42,42,42,1,17,63,30,63,63,63,63,63,63,63,42,63,63,63,42,17,
63,63,63,63,63,42,30,42,30,1,17,1,17,17,17,42,1,17,17,17,
17,17,17,17,17,53,1,1,1,1,1,1,63,1,1,1,1,1,17,42,
17,17,17,30,30,17,1,42,17,17,17,17,17,30,42,42,42,17,42,30,
30,30,30,30,63,30,30,30,17,30,1,1,1, };
static unsigned short stb__consolas_bold_14_latin1_a[224]={ 123,123,123,123,123,123,123,123,
123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,
123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,
123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,
123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,
123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,
123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,
123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,
123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,
123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,
123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,
123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,
123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,
123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,
123,123,123,123,123,123,123,123, };

// Call this function with
//    font: NULL or array length
//    data: NULL or specified size
//    height: STB_FONT_consolas_bold_14_latin1_BITMAP_HEIGHT or STB_FONT_consolas_bold_14_latin1_BITMAP_HEIGHT_POW2
//    return value: spacing between lines
static void stb_font_consolas_bold_14_latin1(stb_fontchar font[STB_FONT_consolas_bold_14_latin1_NUM_CHARS],
                unsigned char data[STB_FONT_consolas_bold_14_latin1_BITMAP_HEIGHT][STB_FONT_consolas_bold_14_latin1_BITMAP_WIDTH],
                int height)
{
    int i,j;
    if (data != 0) {
        unsigned int *bits = stb__consolas_bold_14_latin1_pixels;
        unsigned int bitpack = *bits++, numbits = 32;
        for (i=0; i < STB_FONT_consolas_bold_14_latin1_BITMAP_WIDTH*height; ++i)
            data[0][i] = 0;  // zero entire bitmap
        for (j=1; j < STB_FONT_consolas_bold_14_latin1_BITMAP_HEIGHT-1; ++j) {
            for (i=1; i < STB_FONT_consolas_bold_14_latin1_BITMAP_WIDTH-1; ++i) {
                unsigned int value;
                if (numbits==0) bitpack = *bits++, numbits=32;
                value = bitpack & 1;
                bitpack >>= 1, --numbits;
                if (value) {
                    if (numbits < 3) bitpack = *bits++, numbits = 32;
                    data[j][i] = (bitpack & 7) * 0x20 + 0x1f;
                    bitpack >>= 3, numbits -= 3;
                } else {
                    data[j][i] = 0;
                }
            }
        }
    }

    // build font description
    if (font != 0) {
        float recip_width = 1.0f / STB_FONT_consolas_bold_14_latin1_BITMAP_WIDTH;
        float recip_height = 1.0f / height;
        for (i=0; i < STB_FONT_consolas_bold_14_latin1_NUM_CHARS; ++i) {
            // pad characters so they bilerp from empty space around each character
            font[i].s0 = (stb__consolas_bold_14_latin1_s[i]) * recip_width;
            font[i].t0 = (stb__consolas_bold_14_latin1_t[i]) * recip_height;
            font[i].s1 = (stb__consolas_bold_14_latin1_s[i] + stb__consolas_bold_14_latin1_w[i]) * recip_width;
            font[i].t1 = (stb__consolas_bold_14_latin1_t[i] + stb__consolas_bold_14_latin1_h[i]) * recip_height;
            font[i].x0 = stb__consolas_bold_14_latin1_x[i];
            font[i].y0 = stb__consolas_bold_14_latin1_y[i];
            font[i].x1 = stb__consolas_bold_14_latin1_x[i] + stb__consolas_bold_14_latin1_w[i];
            font[i].y1 = stb__consolas_bold_14_latin1_y[i] + stb__consolas_bold_14_latin1_h[i];
            font[i].advance_int = (stb__consolas_bold_14_latin1_a[i]+8)>>4;
            font[i].s0f = (stb__consolas_bold_14_latin1_s[i] - 0.5f) * recip_width;
            font[i].t0f = (stb__consolas_bold_14_latin1_t[i] - 0.5f) * recip_height;
            font[i].s1f = (stb__consolas_bold_14_latin1_s[i] + stb__consolas_bold_14_latin1_w[i] + 0.5f) * recip_width;
            font[i].t1f = (stb__consolas_bold_14_latin1_t[i] + stb__consolas_bold_14_latin1_h[i] + 0.5f) * recip_height;
            font[i].x0f = stb__consolas_bold_14_latin1_x[i] - 0.5f;
            font[i].y0f = stb__consolas_bold_14_latin1_y[i] - 0.5f;
            font[i].x1f = stb__consolas_bold_14_latin1_x[i] + stb__consolas_bold_14_latin1_w[i] + 0.5f;
            font[i].y1f = stb__consolas_bold_14_latin1_y[i] + stb__consolas_bold_14_latin1_h[i] + 0.5f;
            font[i].advance = stb__consolas_bold_14_latin1_a[i]/16.0f;
        }
    }
}

#ifndef STB_SOMEFONT_CREATE
#define STB_SOMEFONT_CREATE              stb_font_consolas_bold_14_latin1
#define STB_SOMEFONT_BITMAP_WIDTH        STB_FONT_consolas_bold_14_latin1_BITMAP_WIDTH
#define STB_SOMEFONT_BITMAP_HEIGHT       STB_FONT_consolas_bold_14_latin1_BITMAP_HEIGHT
#define STB_SOMEFONT_BITMAP_HEIGHT_POW2  STB_FONT_consolas_bold_14_latin1_BITMAP_HEIGHT_POW2
#define STB_SOMEFONT_FIRST_CHAR          STB_FONT_consolas_bold_14_latin1_FIRST_CHAR
#define STB_SOMEFONT_NUM_CHARS           STB_FONT_consolas_bold_14_latin1_NUM_CHARS
#define STB_SOMEFONT_LINE_SPACING        STB_FONT_consolas_bold_14_latin1_LINE_SPACING
#endif

