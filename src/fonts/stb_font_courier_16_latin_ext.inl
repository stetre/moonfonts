// Font generated by stb_font_inl_generator.c (4/1 bpp)
//
// Following instructions show how to use the only included font, whatever it is, in
// a generic way so you can replace it with any other font by changing the include.
// To use multiple fonts, replace STB_SOMEFONT_* below with STB_FONT_courier_16_latin_ext_*,
// and separately install each font. Note that the CREATE function call has a
// totally different name; it's just 'stb_font_courier_16_latin_ext'.
//
/* // Example usage:

static stb_fontchar fontdata[STB_SOMEFONT_NUM_CHARS];

static void init(void)
{
    // optionally replace both STB_SOMEFONT_BITMAP_HEIGHT with STB_SOMEFONT_BITMAP_HEIGHT_POW2
    static unsigned char fontpixels[STB_SOMEFONT_BITMAP_HEIGHT][STB_SOMEFONT_BITMAP_WIDTH];
    STB_SOMEFONT_CREATE(fontdata, fontpixels, STB_SOMEFONT_BITMAP_HEIGHT);
    ... create texture ...
    // for best results rendering 1:1 pixels texels, use nearest-neighbor sampling
    // if allowed to scale up, use bilerp
}

// This function positions characters on integer coordinates, and assumes 1:1 texels to pixels
// Appropriate if nearest-neighbor sampling is used
static void draw_string_integer(int x, int y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0, cd->t0); glVertex2i(x + cd->x0, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t0); glVertex2i(x + cd->x1, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t1); glVertex2i(x + cd->x1, y + cd->y1);
        glTexCoord2f(cd->s0, cd->t1); glVertex2i(x + cd->x0, y + cd->y1);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance_int;
    }
    glEnd();
}

// This function positions characters on float coordinates, and doesn't require 1:1 texels to pixels
// Appropriate if bilinear filtering is used
static void draw_string_float(float x, float y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0f, cd->t0f); glVertex2f(x + cd->x0f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t0f); glVertex2f(x + cd->x1f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t1f); glVertex2f(x + cd->x1f, y + cd->y1f);
        glTexCoord2f(cd->s0f, cd->t1f); glVertex2f(x + cd->x0f, y + cd->y1f);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance;
    }
    glEnd();
}
*/

#ifndef STB_FONTCHAR__TYPEDEF
#define STB_FONTCHAR__TYPEDEF
typedef struct
{
    // coordinates if using integer positioning
    float s0,t0,s1,t1;
    signed short x0,y0,x1,y1;
    int   advance_int;
    // coordinates if using floating positioning
    float s0f,t0f,s1f,t1f;
    float x0f,y0f,x1f,y1f;
    float advance;
} stb_fontchar;
#endif

#define STB_FONT_courier_16_latin_ext_BITMAP_WIDTH         256
#define STB_FONT_courier_16_latin_ext_BITMAP_HEIGHT        134
#define STB_FONT_courier_16_latin_ext_BITMAP_HEIGHT_POW2   256

#define STB_FONT_courier_16_latin_ext_FIRST_CHAR            32
#define STB_FONT_courier_16_latin_ext_NUM_CHARS            560

#define STB_FONT_courier_16_latin_ext_LINE_SPACING           8

static unsigned int stb__courier_16_latin_ext_pixels[]={
    0x00020060,0x00388000,0x00000000,0x00000400,0x00000000,0x5c2c0000,
    0x00170170,0x0e200000,0x3008071c,0x44000a63,0x98019102,0x20065c02,
    0x4032200c,0x6400e039,0x880b6600,0x06ae039b,0xd99d0350,0xaaaa8799,
    0x12204c80,0x05500190,0x101cc81c,0x40550019,0x0c8803b8,0x2e019910,
    0x65c2bbbb,0x04806403,0x80ea002a,0x1900c89b,0x24c02980,0x53548038,
    0x71055398,0x2ae09151,0x85331901,0xa921c4e4,0x44244641,0x200c8804,
    0x8020002b,0x01d40512,0x21500e66,0x05c14502,0x640060ae,0x07710481,
    0x00010010,0x0080a2e0,0x103999d9,0x01020000,0x23801004,0x00208513,
    0x00000040,0x7453332a,0x2387d71c,0x00980003,0x838e071c,0x6de4c103,
    0x26090003,0x2ef22039,0x2ef223d9,0x223b93d9,0x3017705c,0x40707b79,
    0x27d71ce8,0x44b911dc,0x227d71ce,0x227d71ce,0x207d71ce,0xd71ce883,
    0x313332a7,0xce887b79,0x33a27d71,0x49207d71,0xec980038,0x017b2605,
    0x80710000,0xbb10dc38,0x0241d999,0x16a1c013,0x2e245a87,0x70e20200,
    0x1c240383,0x38481712,0x0e121c24,0x40709038,0x48370e24,0x901c2438,
    0x25b11c24,0x033905c8,0x2d8819c8,0x896c4b91,0x1700e25c,0x85c298b0,
    0x05ec982d,0x8b07160e,0x2f22120b,0x22c05c4b,0x2e1c2403,0x90e12120,
    0x20384870,0x24070903,0x3848b017,0x24901c24,0x3090a61c,0x09298125,
    0x429890a6,0x24120344,0x02408ca6,0xb1120339,0xba42c448,0x41228800,
    0x709005c4,0x21202e90,0x2121c243,0x1c240e03,0x24482490,0x480e121c,
    0x48530e12,0x71c02e38,0x4c485301,0x530aa242,0x2b262412,0x24a60905,
    0x3716e1b8,0x024dc2dc,0x82479973,0x0e5d6444,0x09370709,0x87090e12,
    0xcecb8384,0x4901c241,0x43848904,0x0b920384,0x9090a61c,0x27205533,
    0x242982a9,0x7b7090a6,0x22c05c79,0x209049b9,0x964c02e3,0x2092c984,
    0x2215700e,0x4c1602e3,0xe81c0b80,0x5c381700,0x0702e1c0,0x01c0b804,
    0x2e2c05c9,0x0702e1c0,0x44387324,0x55751663,0x55575095,0x22cc7109,
    0x84816638,0x0a60dc38,0x99c82431,0x9009002a,0x1d448120,0x5981b871,
    0x09038730,0x8730e1cc,0x4c0e1cc3,0x20387305,0x98370e23,0x070e61c3,
    0x177970ae,0x45b79790,0x54240a84,0x2dbcbc80,0x416de5e4,0xdbc981b9,
    0x31442982,0x4aaaba87,0x15402a80,0x5575005c,0x6de4c5b5,0x65c05102,
    0x400b80bb,0xcb80bbcb,0xbbcb80bb,0x65c05100,0x983700bb,0x79702dbc,
    0x17797017,0x01016654,0x4c9d7008,0x4c9d71dc,0x080081dc,0x80401880,
    0x2dcccdd9,0x4c054240,0x599302cc,0x0804ccb8,0x10000080,0x20099970,
    0x00800800,0x99501000,0x00800403,0x00000008,0x00000000,0x00000000,
    0xc993ae00,0x0000001d,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x80000000,
    0x01800c39,0x2a000095,0x00722004,0x00000400,0x34246440,0x402cc839,
    0x8098a01c,0x4203a800,0x03118808,0x9300e200,0x40000500,0x2601901b,
    0x26037003,0xcab80484,0x36201c1d,0x0380cccd,0x44571910,0x105f52dd,
    0x70ce8819,0x01eee47d,0xa8e03232,0x23220700,0x0979303a,0x26077975,
    0x20a67302,0xcc885328,0x204982ce,0xd100c8ab,0x3ae3ea81,0x1c803903,
    0x01c80930,0x000a6504,0x42980470,0x30000384,0x00b80645,0x00350709,
    0x201c0000,0x08801000,0x00004000,0x00002038,0x1c197008,0x00000000,
    0x45997950,0x2e39d104,0x36f6ae3e,0x8e1214c2,0xecca81de,0x0322a60c,
    0x38481664,0x39d101a8,0xbb654fae,0x3260706c,0x8e7443db,0x36f263eb,
    0x9303cb83,0x11dc87b7,0x3220e0b9,0x9d13d9bb,0x5770fae3,0x7245c597,
    0xecccdd88,0x479d9910,0x99105ec9,0xd30d479d,0x87090298,0x3730dc4b,
    0x0ae70573,0x36e60e20,0x70903802,0x1c240350,0x441c0e24,0x8e120dc3,
    0x8380dc38,0x7120dc38,0xb50e0e01,0x20dc3848,0x83954e2a,0x01c05c29,
    0x48380339,0x20906722,0x220dc384,0x40b2b263,0x071002db,0x0700eeb3,
    0x106a0e12,0x0e241c24,0x22c05c1c,0x1602e384,0x22c05c1c,0x3838120b,
    0x121c2458,0x530748e0,0x53038046,0x23887012,0x481a890c,0x8a615c38,
    0x22e06e29,0x9838801c,0x703802e2,0x241a8481,0x03890709,0x09120907,
    0x07048247,0x05d21209,0x45889070,0x200e2384,0x3260ee23,0x2381c05a,
    0x2710e00b,0x12120e1b,0x1221970e,0x32384853,0x260e20c0,0x220701c2,
    0x920d4243,0x81c48384,0x84890483,0x83824123,0x09370904,0x16e1b838,
    0x951c4709,0x212e1c79,0x81c049b9,0x0e02a99c,0xa8198a6e,0x270e05c1,
    0x37660bca,0x53543623,0x30e2249d,0x382647bb,0x9032f2a0,0x5c9999bb,
    0x99d971c0,0x67665471,0xb8b0170c,0x4b0171c0,0x2e4cecc9,0x101d0580,
    0xc9879d99,0x21c0b892,0x39d32985,0x06214c34,0x2aaaea0e,0x912e0e04,
    0x870e6240,0x04004003,0x02005448,0x003500e0,0x0070e601,0x70e20209,
    0x711c3983,0x880a81b8,0x40480dc3,0x3989000a,0x0530721c,0x14429802,
    0x8054241c,0x0cbcbc83,0x779702e0,0x0e600381,0x79301710,0x00b88077,
    0x80ae201c,0x779700b8,0x39849801,0x205b7930,0x64c0bbcb,0x037302db,
    0x2e05b793,0x200dcc00,0x0bbcb82a,0x81cbbdb8,0xcdd980b8,0xd9932dcc,
    0xc993ae79,0x79d9931d,0x40000826,0x802cca80,0x20044008,0x2a011000,
    0x000ccecc,0x80100110,0x801103cb,0x00801000,0x99700800,0x664c0009,
    0x04c00402,0x00000110,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x0a8e0000,0x542e0208,0x20041400,
    0x019300c9,0x88091004,0x80401404,0x0c880a09,0x94814130,0x20a63301,
    0x0c804ccc,0x70b81c70,0x6664c001,0x00000002,0x170170b8,0x4404202a,
    0x5c0f3261,0x1cc88190,0x77771c40,0x8391750b,0x4880c8ba,0x04980930,
    0xabb80744,0x065e42cb,0x901c8c98,0x37390197,0x2281e540,0x9100e402,
    0x40e64019,0x200200da,0x1232203a,0x0e640488,0x25205990,0x00002064,
    0x2985c00c,0x0080102c,0x08899577,0x80400440,0x00c1541b,0x04018008,
    0x038e0180,0x20200000,0xbc98372b,0x4805303d,0x08024409,0x22520080,
    0x26ef2258,0x2e39d13d,0x16eeee3e,0x7010a248,0x5dc59757,0xb86245bb,
    0xbbb85bbb,0x5dddc2bb,0x3260122b,0x777703db,0xcbabb857,0x40f6f262,
    0x002bbbbb,0x36676e44,0x81999bb1,0x083cecc8,0x080dc388,0x20020080,
    0x53ccecce,0x521f5c7d,0x5a8715c4,0x58531c24,0x0aba8170,0x299541b8,
    0x0a60322c,0x715c0b8b,0x80712b81,0x02e0dc38,0x4aa0dc57,0x02e0dc38,
    0x644b6257,0x30e49a85,0x2e0e0485,0x202e4bbc,0x425de5c5,0x5e41cbcb,
    0x7241bc9d,0x8e0cb8e2,0x362dada8,0x709160e1,0x02402144,0x44048771,
    0x85e54042,0x040e0428,0x951c4207,0x71602e79,0x05c04820,0x53040e2c,
    0x06293848,0x10e04853,0x12412387,0x120d4387,0x4e3893c4,0x83922e28,
    0x8906c38c,0x2a1c2458,0x083500ab,0x500710b8,0x24880157,0x01c40aba,
    0x261600e2,0x03892092,0x241201c4,0x48530071,0x73077948,0x41c05733,
    0x48241bcb,0x4240de5c,0x2b732a1a,0xa9c0e04a,0x5d64c472,0x2e1b8360,
    0xb881c245,0x240d8483,0x41e65471,0x0906a3b8,0x201c4771,0x4c1c8038,
    0x03892092,0x279951c4,0x401c4904,0x27222429,0x59593054,0x92a20380,
    0x9510580b,0x43919848,0x40e0199d,0x57511d23,0x32615c17,0x11c0b892,
    0x64154170,0x42c2cbbb,0x2a170129,0x7011cbbc,0x80340341,0x171cbbdb,
    0x858068b0,0x68b01729,0x51663880,0x8a608933,0x8170e01b,0x5c370e24,
    0x4906a240,0x0e009e64,0xa987711c,0x12024419,0x90363873,0x39038048,
    0x8481b298,0x51206c48,0x30aa2985,0x87102605,0x8a61541b,0x43894c1c,
    0x0a61541b,0x245b7979,0x485314c9,0x975770e0,0x42dbc985,0xb82cbabb,
    0x2f261cbc,0x0e04ccdc,0x53312e1c,0x0aa01b03,0xbc82ef2e,0x00a62cbb,
    0x2f6e0173,0x977791cb,0x77790e05,0x797b7059,0x20797b70,0xdbc980b8,
    0x0797b702,0x4c3977b7,0x7b702dbc,0x75c02079,0x32dcceb9,0x986c47bb,
    0x0083cecc,0x04004004,0xd9700810,0xd0e74c39,0x2880a998,0x0100b326,
    0x01100008,0x20040130,0x00600200,0x08011006,0x01300300,0x00018004,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x20800000,0x542a0000,0x17181880,0x04c50e5c,0x20664003,
    0x16400800,0x4a806540,0x000170b8,0x665c0aa0,0x000aa00c,0x22032e20,
    0x002a1501,0x49804980,0x80001b80,0x5c031048,0x66ec4190,0x2cc80ecc,
    0x21c70b30,0x712f2629,0x99090390,0xcbca8379,0x01d46440,0x15706e35,
    0x00e64419,0x00aa0a60,0x5400ea00,0x33701203,0xaa80b320,0x0c8ab839,
    0x20191570,0x0065c01c,0x002cc093,0x100b8530,0x26247000,0x37038082,
    0x06a04048,0x03910009,0x3a201000,0x8005d70c,0x07d71ce8,0x0e014c00,
    0x00401770,0x00009171,0x646e0000,0x6c400000,0x3298ba64,0x5999d702,
    0x71e76644,0x6644a624,0x4040e3ce,0x1e766444,0x764c3309,0xc880a605,
    0xbd933cec,0x3aa1c240,0x3848fae3,0x03333762,0x5b530c10,0xccd98001,
    0x26d4005c,0x326c4b95,0x01eee45d,0xb999b300,0x42e666cc,0xb5930a64,
    0x0e06e1c0,0x1c14c48e,0x1777710c,0x03887024,0x26033907,0x39038012,
    0x2e0e1203,0x87090e0c,0xbcb82429,0x072621dc,0x997225b1,0x12d886e2,
    0x1c4238b9,0x03505324,0x25d88baa,0x22986e29,0x3092981b,0x241c0937,
    0x4c971c1c,0x205c0382,0x1c438124,0x30494c38,0x0e019757,0x384824a6,
    0x090e48b8,0x54242987,0x981c1721,0x0e611242,0xb74890a6,0x824a60a6,
    0xa8c5201a,0x221cc221,0x06640730,0x0706214c,0x22470709,0x36183829,
    0x090caaaa,0x20cc241c,0x912602e3,0x80b8e0e0,0x25538384,0x2e61c243,
    0x32482b99,0x53038299,0x0a609048,0x33159489,0x0d403320,0x901d6a70,
    0x82440480,0x20e14429,0x31238384,0x4e470705,0x40909999,0x21221b83,
    0x2982a99c,0x99c83824,0x41c0b82a,0x702e1d23,0x902cac98,0x81c14c72,
    0x80642429,0x46522429,0x409100ab,0x5933041a,0xc8032093,0xdd983800,
    0x41c2dccc,0x31238384,0x05c70705,0x540e0484,0x55d40cbd,0x242984aa,
    0x5555d438,0x20e23984,0x8730ee23,0x703714c3,0x814c2439,0x45516638,
    0xb8b31c43,0x03807929,0x9e44906a,0x50e2a83c,0x400701c5,0x1c05c383,
    0x3829891c,0x65d5dc38,0xd881c090,0x0542430a,0x90e090a6,0x97970150,
    0xb84b8701,0x214c0bbc,0x1cbbcb84,0x979012a6,0x071225b7,0x5c5b7979,
    0x407012e4,0x643a241a,0x488e2442,0x0e765c1c,0x99d71540,0x67664c39,
    0x399064a3,0x28f3b326,0x2619b030,0x55c3cecc,0x49d71cba,0x43761dc9,
    0x9d9932ea,0x6e4c9d77,0x33a60101,0xd98081a1,0x0c43623d,0x02003101,
    0x8366665c,0x05996a00,0xdc839d97,0x4004cccd,0x2e6ccccb,0x0006cccc,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x40020498,
    0x04980110,0x01040000,0xa8d40000,0x00014001,0x45000062,0x00000009,
    0x4c501040,0x88000000,0x03700001,0x32e00004,0x645d40cc,0x81de5d40,
    0x55c05339,0x403200c8,0x321701d9,0x39803900,0x1900b2e0,0x803901c8,
    0x300c8059,0x06dc0979,0xd9301970,0x40c85c0b,0x65c04bc9,0x17006400,
    0x3200e405,0x0732f201,0x0000065c,0x00000020,0x5caa0190,0x80dc0001,
    0x64008039,0x06e04880,0x10019000,0xb80c8dc0,0x06720191,0x1b801000,
    0x70032019,0x201b8017,0x8dc02000,0x33b3220c,0x0f5c7723,0x64c0bd93,
    0x99bb105e,0x100201d9,0xd999bb10,0x10100201,0x01d999bb,0x10006c02,
    0x01d999bb,0x6666ec40,0x8020000e,0xd9910929,0x02f64c79,0x08008008,
    0x24d88080,0x5c7d52e9,0x8380103e,0x19c82429,0x2980ce40,0x7777105c,
    0x1cbbca81,0xcb8170a6,0x5de541cb,0x8170a61c,0x8e41cbcb,0x98b912d8,
    0x12d885c2,0x85c298b9,0x88b912d8,0x5c704bbc,0x19c80e00,0x81777710,
    0xc884bbc8,0xbbc884bb,0x2e14c904,0x2f2e0e0c,0x8530701c,0x4c092984,
    0x08ca6092,0x4299205c,0x408ca61b,0xb853241a,0x5408ca61,0x298ae241,
    0x408ca624,0x8ca62429,0x101214c0,0x05533905,0x2092981c,0x0a20240b,
    0x82880510,0x49170929,0x1c120d43,0x4255564c,0x171c02e3,0x360b5930,
    0x070caaaa,0x120b5930,0x64c01c6a,0x4350905a,0x9890a61c,0x485305ac,
    0x2982d64c,0x1e65cc24,0x812aaaea,0x6c05c703,0x4c0caaaa,0xcb983ccb,
    0x3ccb983c,0x2a701990,0x81a84872,0x64242983,0x33902a99,0x09373055,
    0x42666672,0x049b9804,0x20123309,0x309049b9,0x485306c3,0x29824dcc,
    0x4126e624,0x42ae2429,0x80542438,0x05533903,0x41333339,0xab8710ab,
    0x10ab8710,0x91c12207,0x7033090e,0x5d448530,0xaba84aaa,0x442984aa,
    0x14c202e1,0x0c429862,0x10a64835,0xa86214c3,0x388b1241,0x18853166,
    0x14c598e2,0x16638862,0x93ae3a89,0xa8381dc9,0x0b84aaab,0x48751208,
    0x075121d4,0x0ee2381c,0x30704835,0x05424485,0x85302a12,0x65d5dc28,
    0x30eeb2e0,0x5e5c2885,0x1dd65c1c,0xcb8510a6,0x3206e1cb,0x0a62dbcb,
    0xdbcbc851,0xc8510a62,0x2ea2dbcb,0x4402daaa,0x15090702,0x41975770,
    0x22daaaba,0x22daaaba,0x02daaaba,0x70970e07,0x664c3979,0x23bb13ce,
    0x4c9d73eb,0x4c9d71dc,0x99bb31dc,0x100605b9,0xb999bb30,0x30100205,
    0x05b999bb,0x30080e02,0x05b999bb,0x33376601,0x080082dc,0x9931b800,
    0x993ae79d,0x080301dc,0x40080080,0x3a61cecb,0x00081a1c,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x0006665c,0x5005d260,0x00198e09,0x002ccc98,0x80a8e000,
    0x003880a2,0x00200200,0x00984c01,0x0372a803,0x47000044,0x8533700a,
    0x00002cb8,0x41309800,0x003cccca,0x20066654,0x36aa0353,0x81e6440b,
    0x0000cccb,0x26f2615c,0x1e64c2bc,0x04980e38,0x19757771,0x205dddc4,
    0x5c1dbccd,0x70a84bbc,0x03995701,0x32b20766,0x40ae04ab,0x99303cc9,
    0x886a390b,0x4c0ea02d,0x20b85404,0xccdd8c82,0x200100ec,0x32662033,
    0x40200201,0x0dc05ec9,0x001007d0,0x105c0200,0x4c48170f,0x03871244,
    0x02002002,0x5053074c,0x30401005,0x539a4385,0x49805307,0x32980080,
    0x2ee20b85,0x5de440bb,0x0f333204,0x2212ef22,0x27204bbc,0x88120001,
    0x3620bbbb,0xbb88b912,0x4241c0bb,0x20caaaad,0x2f2e2429,0x03979701,
    0xb8839797,0x414c0bbb,0x5e5c0103,0x4ccca81c,0x00009066,0x5dddc400,
    0x194c2e00,0x0e240b81,0x0788320f,0x41440288,0x37930929,0x2e038579,
    0x890a6240,0x1a12240b,0x82666672,0x4a882429,0x835120d4,0x531205c4,
    0x6de66c90,0x37120d41,0x240a8744,0x13320999,0x40b82664,0x5ac99204,
    0x195555b0,0x2c24161c,0x983ccb98,0x2e383ccb,0x01c07d00,0x4195555b,
    0x2ab62429,0xa8aa0caa,0x26080b86,0x44817242,0x2a121a84,0x32aaab61,
    0x498e0a60,0x486a1224,0x848352b8,0x41202404,0x80caaaad,0x4126e638,
    0x2099999c,0x85848243,0xab8710ab,0x53390710,0x765c1205,0x4cce41cc,
    0x890a6099,0x4099999c,0x77038bc9,0x37621975,0x2aee5d51,0x0cc242cb,
    0x4ce43309,0x20a60999,0x84890a63,0x4c2a0e19,0x120241c2,0x26672090,
    0x260b8099,0x10170c42,0x10641e1c,0x243a890f,0x555750ea,0x40100e09,
    0x98e2080b,0x200405c5,0x02006603,0x8906a070,0x202e241a,0x4c510a60,
    0x8906a242,0x19921c0a,0x12024048,0x2240405c,0x2ee14429,0x2f220cba,
    0xccd884bb,0x2aea0ccc,0x2aea2daa,0x2a122daa,0x01cc0380,0xc8197577,
    0x5dc2dbcb,0x01c00cba,0x05c40153,0x79700b98,0x39797039,0x41975770,
    0x4c4aa8dd,0x65e5c242,0x0dd5dc41,0x02412f2a,0x5dc09012,0x26380cba,
    0x02dcccdd,0x11000803,0x20100100,0x477264eb,0x981ccecb,0x00401800,
    0xccc88018,0x40110000,0x08008008,0x88300180,0x205d51dd,0x20400800,
    0x50ccecca,0x2a199d99,0x300ccecc,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x30000000,
    0x98040aa7,0x540402cb,0x1c00c01a,0x99701450,0x7102b881,0x0191b859,
    0x000100b8,0x33322820,0x0000301c,0x00000547,0x10177773,0x2a0012a0,
    0x31059704,0x20cccb80,0xcdc98ceb,0x65416cc0,0x4c511cbb,0x865e6642,
    0x655c0519,0x8e01b01c,0x46407b03,0x706a4839,0x50b8701b,0x705b7b5d,
    0x59979500,0x6e564024,0x80cccb80,0x00383cc9,0x09aa5c93,0x1ecdde44,
    0x320e0007,0x655e4550,0xb8480401,0xb8530100,0x48931201,0x00200a33,
    0x0ae01001,0x8710e298,0x41870084,0x00e0dc4b,0x01234c35,0x38000000,
    0x352c3980,0x8e2d4381,0x89070400,0x32e090a4,0x05c241cb,0x1c72ef2a,
    0x29837100,0x82635524,0xca84bbc8,0x2f221cbb,0x2601584b,0x50c81c8a,
    0x725de5c5,0x1b83999d,0x999d71c4,0x86722483,0x96c41cbc,0x44b625c8,
    0x644b625c,0x07333b25,0x409a8ec0,0x5ecdc583,0x3cccc82c,0x50902c48,
    0x05c24483,0x0091b853,0x90a61726,0x4400ab98,0x40370a62,0x165e6428,
    0x3032a2a6,0x0e1c4bbf,0x14c2b807,0x4323880e,0x261d42a4,0x890a6242,
    0x980e2429,0x7915dccd,0x2c448137,0x0641716e,0x32e390f1,0x42416440,
    0x382e121a,0x406214c0,0x4d214c48,0x9730188a,0xb9801c79,0x890f43cc,
    0x54322429,0x0e06f2e3,0x91221970,0x7388399d,0x298901c3,0x9890a624,
    0x1880e242,0x7026a032,0x106e2dc3,0xcb82c247,0x0902c0c9,0x82e2a433,
    0x3bacb804,0x48376240,0x2ae144cc,0x5c024710,0x5448710a,0x0cc70a60,
    0x0712a212,0x70179538,0x06629b80,0x31214c48,0x1214c485,0x54032007,
    0x892c9809,0xb091c41b,0x54030d00,0x89252241,0x4240c429,0x14380380,
    0x531d4485,0x87512188,0x3153120b,0x5ce2388e,0x3802e240,0x25c01700,
    0x221c0992,0x4c711663,0xb8b31c45,0x3500dc00,0x44b89001,0x0788320b,
    0x2e00c15c,0x33ae1cbc,0xacb83ba9,0x4c0b983b,0x4c00cbcd,0x2a0d5c42,
    0x2e2daaab,0x55d43bac,0x5de42daa,0x15e57662,0x5dc32f2a,0x56442cba,
    0x4400e0cb,0x2f20cbac,0x33620cbc,0xbcbc80cb,0x6de5e42d,0x16de5e42,
    0x5c397591,0x0026a0a1,0x5ed75455,0x6666c42c,0x0bb2e0cc,0x002007f2,
    0x08802004,0x39500220,0x02002000,0x20010010,0x40080200,0x01665408,
    0x0104c088,0x04004008,0x20440040,0x265ccce9,0x64c0b9ba,0x2200402c,
    0x01002200,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x080646e0,0x20040040,0x824c488c,
    0x00203aab,0x0488c802,0x01002004,0x44020020,0x000003cb,0xa804a80c,
    0x02e00004,0x19007750,0x00018091,0x3dc75c00,0x20e00db8,0xa82aabbb,
    0xc8289ebc,0x14385984,0x206eaee2,0x9905bbbb,0x37577101,0x79309f30,
    0x2eaee07b,0x5ddddc2c,0x6541a8e2,0x39d10cec,0x99570fae,0x00700383,
    0x833333a2,0x0033000b,0x90380199,0x436e07bb,0x223ae1eb,0x90700201,
    0x906a0b83,0xb8598009,0x444cce00,0x040b0a62,0x0511aab8,0x0dc38815,
    0x05c5506e,0x0710c4ae,0x80e120e2,0x070e0700,0x2488702a,0x40c98041,
    0x4070000b,0x2ab2e01a,0x65c001da,0x65e541cb,0x3091c023,0x5c896c47,
    0x03737122,0x11ce1315,0x5de44085,0x94444544,0x8b017003,0x2a103804,
    0x0e207970,0x799b0e12,0x064c383b,0x0703910e,0x6de66c15,0x83932881,
    0x933304cc,0x099a8133,0x0c999ba8,0x448350e0,0xaaaa9943,0x120714aa,
    0x71224853,0x20a705cc,0x002aea19,0x535138a2,0x20907066,0x07100e24,
    0x440e3538,0x24c38483,0xbc8aca92,0x2e2b2a2a,0x556d438b,0x9224c530,
    0x38bb8aaa,0x36aaa090,0x816d40aa,0x224aaac9,0xa848914f,0x266e0351,
    0x07149999,0x1c485312,0x14e170dc,0x41dc40cc,0x44e3ccb9,0x1dc330aa,
    0xa8e24824,0x380713cc,0x0e20ce15,0x48530e12,0x85118ca8,0xc88771c9,
    0x4298a619,0x0770c984,0x6dc0e012,0x24853041,0x3091226a,0x41c40e23,
    0x30e61228,0x17300485,0x22a62a51,0x705c0473,0x88a8e215,0x700c8e50,
    0x29858b01,0x32e1701a,0x0b838894,0xb890a61c,0x98ea0a82,0x20b83839,
    0xa8ee2429,0x07009039,0x26483511,0x2cc59242,0xaca8906a,0xa8902e2b,
    0x47103221,0x0b200459,0x1b14c627,0x70ea2448,0x08915433,0x1c8370e2,
    0x2985514c,0x01512055,0x214c3873,0x6400b804,0x1221c0da,0x56404853,
    0x0180480d,0x214c906a,0x970b3064,0x10910397,0x95037797,0x32f203b7,
    0x428f72db,0x5d5d440a,0x165dde41,0x8b6aaaea,0x5c1baba8,0x5b793162,
    0x072ef6e0,0x0d8797b7,0x0eef2611,0x220bbcb8,0x405d51dd,0x6c402abd,
    0x0f333a60,0x0baa3bb1,0x332a1b30,0x33320cce,0x37721ccc,0x47764ccc,
    0x407102eb,0x00201c00,0x40802002,0x0402baaa,0x40020040,0x4072ea00,
    0x18013000,0x08199b10,0x00000200,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x0b320000,0x00000722,0x18003995,0x00372a80,0x00599000,
    0x20646e01,0x4cccc438,0x01c51199,0x029acc80,0x23b90000,0xd88005c8,
    0x25b11722,0x1b9545c8,0x8c400020,0x5c000018,0xcb88380e,0x9db9102a,
    0x3a0350d9,0x553ccecc,0x0ed40799,0xb10b3326,0x01c174c9,0x36e09793,
    0x300c4980,0x6e40e65c,0x21c5c03d,0xe88b3ddc,0x2240cccc,0x67664c0b,
    0x21214c6c,0x0ed42429,0x5425de44,0x99440cce,0x1e766442,0x5c7ae3b9,
    0x3750380e,0x0724d403,0x0e272409,0x90000400,0x1203814c,0x18060000,
    0x5c00d400,0x2121a809,0x482e2443,0x261c91cc,0x1214c242,0x59051000,
    0x41c00035,0x03802429,0x70197573,0x0b910c52,0x99914714,0x076f3360,
    0x494c0999,0x80e02ae0,0xb35dccd9,0x1806bb99,0x31a81332,0x043501c0,
    0x5d20541c,0x20c52240,0x214c2429,0x2f26f264,0x41e65cc2,0x320ca99c,
    0x14c1c04c,0x21e5c012,0xbca42449,0xc9980903,0x12609009,0x19901209,
    0x36a07a60,0x4321882b,0x300c3218,0x0e8d4090,0x500d4070,0x70a6155b,
    0x3bc89093,0x26166388,0x40fa1663,0x890710ab,0x41c04838,0x264aaac9,
    0x29811704,0x15272224,0x36ea2048,0x0a60901a,0xdaa81209,0x301ddc1a,
    0x32019005,0x04818060,0x4070106a,0x3391041a,0x2407414c,0xbcbb8152,
    0x5e5f4c1d,0xa890242d,0x241c4483,0x490a60e0,0x530380fc,0x224cd448,
    0x40380240,0x90485304,0x80d6d540,0x37006603,0x0c0306e0,0x84835024,
    0x38906a03,0x350480b8,0x30704024,0x2a038015,0x642daaab,0x0480da99,
    0x11214c1c,0x1214c0e0,0x04853249,0x53048070,0x07009048,0x1882e038,
    0x286e286e,0x50240c03,0x2a038483,0x0910e241,0x24864017,0x261dc029,
    0x20803802,0x201aac82,0x214c1c04,0x33b32a04,0x7543760c,0x99d73d72,
    0x073b265b,0x9506765c,0x362199d9,0x32a5d51d,0x6540ccec,0x6766544e,
    0x3333ae0c,0xb999d30c,0x4d7333a6,0x52999999,0x64199d99,0x954cccdd,
    0x6e4199d9,0x3a64cccd,0x665c3ccc,0x33b2e204,0x188002dc,0x0733b2e0,
    0x67542a60,0x6766540c,0x79d9930c,0x1f5c7762,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x206a2000,0x82cc82b8,0x1cc9804a,0x01c883a8,0x332a0730,0x00000001,
    0x00000000,0x00000000,0x00000000,0x01000000,0x44010010,0x880cccdd,
    0x1cdcc29c,0x9300e070,0x4c0a60d4,0x35099002,0x87999d50,0x37205ec9,
    0xccdd883d,0xbb0baa1c,0x8b333ae1,0x0ecccdd8,0x2b9999d7,0x45f52dd8,
    0x2a5cccd9,0x9d172a4d,0x3aa799d9,0x26c4fae3,0x993625d3,0x6cc7d72e,
    0x32ef2a0d,0x02eeee21,0x4c072f2e,0x4014c242,0x201c0e03,0x4a600481,
    0x12122e00,0x4e414c48,0x29806a01,0x3b993224,0x42986e1c,0x2992120b,
    0x0dc53032,0x2487108e,0x7065c713,0x92214c90,0x305c2429,0x902e1b85,
    0x298241a8,0x03804824,0x03bd1c0e,0x207991c4,0x441dbcc9,0x66764493,
    0x4a624243,0x29806a04,0x4646b21c,0x253241c3,0x30464811,0x21101915,
    0x26b74839,0xb8a271c2,0x24a60e48,0x19848b98,0x2b600e24,0x2120caaa,
    0xb99b981a,0x2092cb82,0x2b9c0e03,0x30382440,0x90924489,0x47072240,
    0x4c03500b,0xca40dbac,0x24838738,0x75905ac9,0x005b7307,0x4c565209,
    0x2a9c0e01,0xa8033207,0x24299205,0x4cccce40,0x26066120,0x93882cac,
    0x0380e055,0x048805b7,0x99214c0e,0xac812122,0xa99c80ca,0x26083502,
    0x520c999b,0x483870cb,0x4e4126e6,0x07759839,0x71948064,0x2381c015,
    0x90122074,0x41c2e019,0x0170c429,0x4c120d41,0x227106e2,0x70380e06,
    0x01220391,0x5490a607,0x0242eccc,0xaaaba809,0x26483504,0x71c52382,
    0x10a64838,0xb8a60243,0x370e2a80,0x20700f25,0x0380ee23,0x938824aa,
    0x20eeb2e0,0x5c0cbabb,0x85301cbc,0x04ccbb84,0x32381c07,0x0e0224c0,
    0x8481214c,0x50901204,0x26483501,0x0e091c42,0x10a60b87,0x70a60245,
    0x92e1c488,0x4381c04b,0x1c40e04b,0x006b2091,0x01003001,0x1b11eecc,
    0x9d993008,0x333b32a7,0xb2754d50,0x32ab9999,0xbb10ccec,0x3b20fae1,
    0x4599d932,0x75c0ccea,0xdc877264,0xbb34cccd,0x275c7999,0x33ae3d93,
    0x337661cc,0x99d72dcc,0x323dd981,0x1b3332e4,0xcb82ccb5,0x873a61ce,
    0x21cecb86,0x213aa4e9,0x0000005a,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00200400,
    0x04000182,0x20180040,0x44001c00,0x88000042,0x400b912d,0x817222e9,
    0x4dccd980,0x3724894c,0x2bae3d70,0x2e6aa4f8,0x301e6448,0xd3081040,
    0x4913ae19,0x55554c0b,0x55c400aa,0x5de44951,0x84bbcb84,0xb11dcbcb,
    0x38826e45,0x1272f2e0,0x8bcc8838,0x00b221bc,0x3b7905dc,0x65edc379,
    0x21440ccb,0x2f26f263,0x41a8c4e2,0x221dbccc,0x362b5121,0x5c0c8dc0,
    0xc8ad80c8,0xf81c0701,0x53064724,0x3b0d8848,0x54cccccc,0x4e057733,
    0x388a207b,0x45c86a1c,0x4000e429,0x0701ec1a,0x98496e15,0x4019501c,
    0x8acb1278,0x3a0e1443,0x41d6a703,0x20c82448,0x2e01d35a,0x701ec80c,
    0xbb8381c4,0x81f50cbd,0x06a480cc,0x00f4474c,0x444ba89c,0xcb98d52c,
    0x40de5c3c,0x298a6724,0x55555424,0x50aa120a,0x92155b55,0x2a04aad9,
    0x5403930c,0x1c4aadcc,0x070a21c7,0x4d5ccc09,0x5c1c2883,0x00e9adc0,
    0x39190379,0x03814c90,0xc84c85d1,0x4091a81c,0x801e88e9,0x99c12193,
    0x81c42ae5,0x31ca44a8,0x261214c5,0x12099999,0x39333066,0x99d88e13,
    0x64c32a01,0x4cec3901,0x221c71c1,0x880e1662,0x8510773b,0xa5451543,
    0x2b8640d9,0xb79b091c,0x64640e05,0x32190360,0xb1028c81,0xb8c00761,
    0x35711dcb,0x2e3a890c,0x4872e240,0x000b31c4,0x8380906a,0x4c04b70a,
    0x4819501c,0x471c09e6,0x2dbcbb83,0x1643a01c,0xce98e144,0x4894c5cc,
    0x4bae1bd1,0x261b32eb,0xecca8a10,0x004420cc,0x40b50102,0x0000190c,
    0xaaaba800,0x5975772d,0x81cbbcb8,0x301dbcbc,0x0e5e5c09,0x45de40e0,
    0x00b264bc,0xcbc9865c,0x47ae4ccd,0x20101b0e,0x001cceba,0x5d50dc88,
    0x00000000,0x00000000,0x00000000,0x10010000,0x02004310,0x00080080,
    0x05020403,0x04085100,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x80000000,0x81001aa8,0x5c55c2a8,
    0x2a201441,0x001aaaaa,0x324c0031,0x26155555,0x66664c30,0x5ddc3ccc,
    0x001bbbbb,0x00000000,0x00000000,0x00000000,0x00000000,0x77338200,
    0x1c266c45,0x2f21fcfe,0x266661c1,0x23991099,0x20dc3f61,0x2a61f90c,
    0x2150aaaa,0x0000000a,0x00000000,0x00000000,0x00000000,0x00000000,
    0x1c2a0000,0x1c242e15,0x21717cba,0x4cc1730c,0x5c319999,0x2370e62c,
    0x0000040b,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x854705c0,0x6c385ac9,0x270a63b1,0x4ccccc18,0x00000019,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x2ea00000,0x9857712a,
    0x41165442,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,
};

static signed short stb__courier_16_latin_ext_x[560]={ 0,3,1,1,1,1,1,3,4,2,0,0,2,1,
3,1,1,1,1,1,1,1,1,1,1,1,3,2,0,0,0,0,1,0,0,0,1,0,1,0,0,1,1,0,
0,0,0,0,1,0,0,1,0,0,0,0,0,0,1,0,0,0,1,0,3,0,0,1,0,0,1,0,0,1,
1,1,1,0,0,0,0,0,1,1,1,0,0,0,0,1,1,0,3,0,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,3,1,0,1,0,
3,0,2,0,0,0,0,1,0,-1,2,0,2,2,3,0,1,3,3,2,2,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,1,1,1,1,-1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,
0,0,0,0,0,1,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,
0,0,0,0,0,0,0,1,0,1,0,1,0,1,1,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,1,1,0,1,1,0,1,0,
1,0,1,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,
1,1,1,1,1,1,1,1,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,
0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,0,
0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1, };
static signed short stb__courier_16_latin_ext_y[560]={ 11,2,2,1,1,2,3,2,2,2,2,3,8,6,
9,1,2,2,2,2,2,2,2,2,2,2,5,5,3,5,3,2,2,2,2,2,2,2,2,2,2,2,2,2,
2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,2,2,14,1,4,2,4,2,4,2,4,2,2,
2,2,2,4,4,4,4,4,4,4,2,5,5,5,5,5,5,2,2,2,5,2,2,2,2,2,2,2,2,2,
2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,11,4,1,2,4,2,
2,2,2,2,1,5,6,6,2,1,0,2,2,2,1,5,2,5,10,2,1,5,2,2,2,4,-1,-1,0,0,
0,-1,2,2,-1,-1,0,0,-1,-1,0,0,2,0,-1,-1,0,0,0,4,2,-1,-1,0,0,0,2,2,1,1,
1,2,2,1,4,4,1,1,1,2,1,1,1,2,2,2,1,1,1,2,2,3,4,1,1,1,2,1,2,2,
1,2,0,2,2,4,0,1,0,1,0,2,0,2,0,2,2,2,1,2,0,2,0,2,2,4,0,2,0,1,
0,2,0,2,2,1,0,0,2,2,0,2,1,2,0,2,2,2,0,5,2,2,0,1,2,2,5,0,-1,2,
2,2,2,2,2,2,2,0,1,2,4,0,2,2,2,4,1,2,0,2,0,1,2,4,0,1,2,4,0,2,
0,1,0,1,2,4,0,2,2,2,0,2,2,2,0,2,1,2,0,2,-1,1,0,1,2,5,0,1,0,1,
0,0,1,0,2,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,
2,2,2,2,2,2,2,2,2,2,2,4,2,2,2,2,2,2,2,2,2,2,2,2,2,1,4,2,2,2,
2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,2,0,2,0,
2,0,2,-1,1,-1,0,-1,0,-1,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,
2,2,2,2,2,2,2,2,2,2,-3,-1,0,1,0,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,
2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,
2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,
2,2,2,2,2,2, };
static unsigned short stb__courier_16_latin_ext_w[560]={ 0,3,6,7,6,7,7,3,3,3,6,8,3,7,
3,6,6,6,6,7,6,7,7,6,6,7,3,4,7,8,7,6,6,9,8,8,7,8,7,8,8,6,8,9,
8,9,8,8,7,8,9,7,8,8,9,9,8,8,7,3,6,3,6,10,3,8,8,7,9,8,7,8,8,7,
5,8,7,9,8,8,8,9,7,7,7,8,9,9,8,8,6,3,2,3,7,8,8,8,8,8,8,8,8,8,
8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,0,3,6,8,7,8,
2,8,5,9,5,7,8,7,9,10,5,8,4,4,3,8,7,3,3,4,5,8,9,9,9,6,9,9,9,9,
9,9,9,8,8,8,8,8,6,6,6,6,9,8,8,8,8,8,8,6,8,8,8,8,8,8,7,8,8,8,
8,8,8,8,9,7,8,8,8,8,7,7,7,7,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,
9,8,9,8,9,9,8,7,8,7,8,7,8,7,7,9,9,9,8,8,8,8,8,8,9,8,8,8,8,8,
8,8,8,8,8,8,8,8,8,8,6,7,6,7,6,7,6,7,6,7,9,8,8,6,9,8,7,8,7,8,
7,8,7,8,7,8,7,8,8,8,8,8,8,8,8,7,8,8,8,8,8,8,9,9,9,7,9,7,9,7,
7,7,7,7,7,7,7,7,8,7,8,7,8,8,8,8,8,8,8,8,8,8,8,8,8,9,9,9,8,8,
8,7,6,7,6,7,6,7,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,7,8,8,8,
8,8,8,8,8,8,8,8,8,8,9,9,8,8,8,8,8,8,8,8,8,8,8,8,8,9,9,8,8,8,
8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,9,8,6,7,8,
8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,
8,8,8,8,8,8,8,8,8,8,9,8,9,9,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,
8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,
8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,
8,8,8,8,8,8, };
static unsigned short stb__courier_16_latin_ext_h[560]={ 0,10,5,11,12,10,9,5,11,11,6,8,6,2,
3,12,10,9,9,10,9,10,10,10,10,10,7,8,8,4,8,10,10,9,9,10,9,9,9,10,9,9,10,9,
9,9,9,10,9,11,9,10,9,10,9,9,9,9,9,11,12,11,4,1,3,8,10,8,10,8,9,10,9,9,
12,9,9,7,7,8,10,10,7,8,10,7,6,7,6,9,6,11,11,11,4,9,9,9,9,9,9,9,9,9,
9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,0,10,10,9,6,9,
11,10,2,10,5,6,5,2,10,1,5,9,5,5,3,9,10,3,4,5,5,6,9,9,9,10,12,12,11,11,
11,12,9,12,12,12,11,11,12,12,11,11,9,11,13,13,12,12,12,6,10,13,13,12,12,11,9,10,11,11,
11,10,10,11,8,10,11,11,11,10,10,10,10,9,10,9,11,11,11,10,10,8,8,11,11,11,10,13,12,12,
10,10,11,10,11,9,12,11,12,11,12,10,12,10,11,10,9,10,10,10,11,10,11,10,11,10,11,10,12,13,
12,12,12,12,12,13,11,11,9,9,11,9,10,9,11,9,12,12,11,6,10,12,12,13,12,12,6,11,12,12,
12,9,9,9,9,9,9,11,10,12,10,11,9,9,10,10,11,10,12,10,12,11,9,8,11,10,12,10,11,9,
12,11,12,11,12,10,12,10,13,13,11,10,9,10,12,10,11,10,12,10,13,11,12,11,12,9,11,11,11,13,
11,11,10,11,9,11,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,10,9,9,11,9,9,9,
9,9,9,9,9,9,9,9,9,9,10,8,9,9,9,9,9,9,9,9,9,9,9,9,9,11,8,9,9,9,
9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,11,10,11,9,12,
10,12,10,13,11,13,12,13,12,13,12,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,
9,9,9,9,9,9,9,9,9,9,14,13,11,11,12,11,9,9,9,9,9,9,9,9,9,9,9,9,9,9,
9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,
9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,
9,9,9,9,9,9, };
static unsigned short stb__courier_16_latin_ext_s[560]={ 254,49,123,244,59,52,11,252,252,100,195,
56,202,174,170,27,209,19,43,36,67,153,86,249,103,239,251,251,83,141,75,
247,133,90,109,124,128,136,145,115,242,235,140,153,100,118,190,106,82,221,1,
72,181,149,217,171,208,199,163,210,43,187,130,188,162,1,220,227,229,235,74,
211,58,50,161,34,26,101,138,244,126,110,120,10,188,111,213,128,162,163,147,
250,180,183,150,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,
110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,254,1,14,
87,179,70,198,53,182,62,241,154,232,174,89,199,112,224,101,247,166,192,203,
158,137,118,106,223,177,167,206,99,17,185,230,10,20,195,18,223,241,1,30,
56,10,27,249,168,187,230,47,134,158,176,193,206,144,143,152,227,10,221,219,
94,212,194,149,60,77,203,91,28,201,39,185,240,232,224,216,227,200,158,65,
91,239,155,146,37,18,104,122,140,92,29,59,202,57,48,175,39,158,209,74,
74,110,48,83,69,137,20,165,19,153,29,1,10,131,83,113,101,155,120,82,
164,42,20,119,1,236,218,92,11,1,240,242,9,214,45,248,62,191,119,211,
185,173,187,10,141,87,127,96,78,171,111,106,123,150,144,136,127,1,233,79,
21,182,245,129,235,53,197,173,44,190,1,101,191,128,207,172,65,39,67,68,
75,165,201,66,199,51,182,34,138,19,110,109,56,226,118,36,135,50,161,30,
170,167,179,91,66,132,83,114,182,92,120,102,73,146,130,196,138,103,75,96,
28,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,21,110,110,58,
110,110,110,110,110,110,110,110,110,110,110,110,110,30,46,110,110,110,110,110,
110,110,110,110,110,110,110,110,11,27,110,110,110,110,110,110,110,110,110,110,
110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,1,80,
175,216,232,5,167,40,118,146,100,205,82,214,64,176,110,110,110,110,110,110,
110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,
110,110,110,1,38,155,216,34,49,110,110,110,110,110,110,110,110,110,110,110,
110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,
110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,
110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,
110,110,110,110,110,110,110,110,110, };
static unsigned short stb__courier_16_latin_ext_t[560]={ 1,88,127,29,29,77,109,119,29,54,119,
119,119,127,127,29,66,109,109,77,109,77,77,66,77,77,99,88,119,127,119,
77,88,109,109,88,109,109,109,88,99,99,88,109,109,109,109,88,109,41,109,
88,109,88,109,109,109,109,109,41,16,41,127,127,127,119,77,109,77,109,109,
77,109,109,1,109,109,119,119,109,77,66,119,119,77,119,119,119,119,99,119,
1,41,41,127,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,
99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,1,88,88,
99,119,99,41,88,127,88,119,119,119,127,88,127,127,88,127,119,127,99,77,
127,127,127,127,119,88,88,88,88,16,1,41,54,54,1,99,1,1,16,54,
54,16,16,41,54,88,54,1,1,16,16,16,119,77,1,1,16,29,54,99,
77,54,54,54,77,77,54,119,77,41,54,54,66,66,66,66,99,66,88,54,
54,54,66,66,119,119,54,54,54,66,1,16,16,66,66,54,66,54,99,29,
54,29,54,29,77,29,77,41,66,99,66,66,66,54,66,54,66,41,66,54,
66,29,1,29,29,16,16,29,1,54,41,88,99,41,99,54,99,41,99,16,
16,41,119,77,16,16,1,16,16,119,42,16,16,16,99,99,99,99,88,99,
42,66,16,66,29,99,88,66,77,29,77,29,66,29,29,99,119,42,66,16,
66,29,99,29,29,29,29,29,66,29,77,1,1,29,77,99,77,16,77,42,
77,16,77,1,42,16,42,16,99,42,42,42,1,41,42,77,42,99,42,99,
99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,88,99,99,42,
99,99,99,99,99,99,99,99,99,99,99,99,99,88,119,99,99,99,99,99,
99,99,99,99,99,99,99,99,42,119,99,99,99,99,99,99,99,99,99,99,
99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,42,88,
29,88,1,88,1,88,1,29,1,1,1,1,1,1,99,99,99,99,99,99,
99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,
99,99,99,1,1,29,29,16,42,99,99,99,99,99,99,99,99,99,99,99,
99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,
99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,
99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,
99,99,99,99,99,99,99,99,99, };
static unsigned short stb__courier_16_latin_ext_a[560]={ 136,136,136,136,136,136,136,136,
136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,
136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,
136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,
136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,
136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,
136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,
136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,
136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,
136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,
136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,
136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,
136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,
136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,
136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,
136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,
136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,
136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,
136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,
136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,
136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,
136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,
136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,
136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,
136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,
136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,
136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,
136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,
136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,
136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,
136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,
136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,
136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,
136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,
136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,
136,136,136,136,136,136,136,136, };

// Call this function with
//    font: NULL or array length
//    data: NULL or specified size
//    height: STB_FONT_courier_16_latin_ext_BITMAP_HEIGHT or STB_FONT_courier_16_latin_ext_BITMAP_HEIGHT_POW2
//    return value: spacing between lines
static void stb_font_courier_16_latin_ext(stb_fontchar font[STB_FONT_courier_16_latin_ext_NUM_CHARS],
                unsigned char data[STB_FONT_courier_16_latin_ext_BITMAP_HEIGHT][STB_FONT_courier_16_latin_ext_BITMAP_WIDTH],
                int height)
{
    int i,j;
    if (data != 0) {
        unsigned int *bits = stb__courier_16_latin_ext_pixels;
        unsigned int bitpack = *bits++, numbits = 32;
        for (i=0; i < STB_FONT_courier_16_latin_ext_BITMAP_WIDTH*height; ++i)
            data[0][i] = 0;  // zero entire bitmap
        for (j=1; j < STB_FONT_courier_16_latin_ext_BITMAP_HEIGHT-1; ++j) {
            for (i=1; i < STB_FONT_courier_16_latin_ext_BITMAP_WIDTH-1; ++i) {
                unsigned int value;
                if (numbits==0) bitpack = *bits++, numbits=32;
                value = bitpack & 1;
                bitpack >>= 1, --numbits;
                if (value) {
                    if (numbits < 3) bitpack = *bits++, numbits = 32;
                    data[j][i] = (bitpack & 7) * 0x20 + 0x1f;
                    bitpack >>= 3, numbits -= 3;
                } else {
                    data[j][i] = 0;
                }
            }
        }
    }

    // build font description
    if (font != 0) {
        float recip_width = 1.0f / STB_FONT_courier_16_latin_ext_BITMAP_WIDTH;
        float recip_height = 1.0f / height;
        for (i=0; i < STB_FONT_courier_16_latin_ext_NUM_CHARS; ++i) {
            // pad characters so they bilerp from empty space around each character
            font[i].s0 = (stb__courier_16_latin_ext_s[i]) * recip_width;
            font[i].t0 = (stb__courier_16_latin_ext_t[i]) * recip_height;
            font[i].s1 = (stb__courier_16_latin_ext_s[i] + stb__courier_16_latin_ext_w[i]) * recip_width;
            font[i].t1 = (stb__courier_16_latin_ext_t[i] + stb__courier_16_latin_ext_h[i]) * recip_height;
            font[i].x0 = stb__courier_16_latin_ext_x[i];
            font[i].y0 = stb__courier_16_latin_ext_y[i];
            font[i].x1 = stb__courier_16_latin_ext_x[i] + stb__courier_16_latin_ext_w[i];
            font[i].y1 = stb__courier_16_latin_ext_y[i] + stb__courier_16_latin_ext_h[i];
            font[i].advance_int = (stb__courier_16_latin_ext_a[i]+8)>>4;
            font[i].s0f = (stb__courier_16_latin_ext_s[i] - 0.5f) * recip_width;
            font[i].t0f = (stb__courier_16_latin_ext_t[i] - 0.5f) * recip_height;
            font[i].s1f = (stb__courier_16_latin_ext_s[i] + stb__courier_16_latin_ext_w[i] + 0.5f) * recip_width;
            font[i].t1f = (stb__courier_16_latin_ext_t[i] + stb__courier_16_latin_ext_h[i] + 0.5f) * recip_height;
            font[i].x0f = stb__courier_16_latin_ext_x[i] - 0.5f;
            font[i].y0f = stb__courier_16_latin_ext_y[i] - 0.5f;
            font[i].x1f = stb__courier_16_latin_ext_x[i] + stb__courier_16_latin_ext_w[i] + 0.5f;
            font[i].y1f = stb__courier_16_latin_ext_y[i] + stb__courier_16_latin_ext_h[i] + 0.5f;
            font[i].advance = stb__courier_16_latin_ext_a[i]/16.0f;
        }
    }
}

#ifndef STB_SOMEFONT_CREATE
#define STB_SOMEFONT_CREATE              stb_font_courier_16_latin_ext
#define STB_SOMEFONT_BITMAP_WIDTH        STB_FONT_courier_16_latin_ext_BITMAP_WIDTH
#define STB_SOMEFONT_BITMAP_HEIGHT       STB_FONT_courier_16_latin_ext_BITMAP_HEIGHT
#define STB_SOMEFONT_BITMAP_HEIGHT_POW2  STB_FONT_courier_16_latin_ext_BITMAP_HEIGHT_POW2
#define STB_SOMEFONT_FIRST_CHAR          STB_FONT_courier_16_latin_ext_FIRST_CHAR
#define STB_SOMEFONT_NUM_CHARS           STB_FONT_courier_16_latin_ext_NUM_CHARS
#define STB_SOMEFONT_LINE_SPACING        STB_FONT_courier_16_latin_ext_LINE_SPACING
#endif

