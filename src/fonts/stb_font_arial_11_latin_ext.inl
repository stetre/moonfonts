// Font generated by stb_font_inl_generator.c (4/1 bpp)
//
// Following instructions show how to use the only included font, whatever it is, in
// a generic way so you can replace it with any other font by changing the include.
// To use multiple fonts, replace STB_SOMEFONT_* below with STB_FONT_arial_11_latin_ext_*,
// and separately install each font. Note that the CREATE function call has a
// totally different name; it's just 'stb_font_arial_11_latin_ext'.
//
/* // Example usage:

static stb_fontchar fontdata[STB_SOMEFONT_NUM_CHARS];

static void init(void)
{
    // optionally replace both STB_SOMEFONT_BITMAP_HEIGHT with STB_SOMEFONT_BITMAP_HEIGHT_POW2
    static unsigned char fontpixels[STB_SOMEFONT_BITMAP_HEIGHT][STB_SOMEFONT_BITMAP_WIDTH];
    STB_SOMEFONT_CREATE(fontdata, fontpixels, STB_SOMEFONT_BITMAP_HEIGHT);
    ... create texture ...
    // for best results rendering 1:1 pixels texels, use nearest-neighbor sampling
    // if allowed to scale up, use bilerp
}

// This function positions characters on integer coordinates, and assumes 1:1 texels to pixels
// Appropriate if nearest-neighbor sampling is used
static void draw_string_integer(int x, int y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0, cd->t0); glVertex2i(x + cd->x0, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t0); glVertex2i(x + cd->x1, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t1); glVertex2i(x + cd->x1, y + cd->y1);
        glTexCoord2f(cd->s0, cd->t1); glVertex2i(x + cd->x0, y + cd->y1);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance_int;
    }
    glEnd();
}

// This function positions characters on float coordinates, and doesn't require 1:1 texels to pixels
// Appropriate if bilinear filtering is used
static void draw_string_float(float x, float y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0f, cd->t0f); glVertex2f(x + cd->x0f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t0f); glVertex2f(x + cd->x1f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t1f); glVertex2f(x + cd->x1f, y + cd->y1f);
        glTexCoord2f(cd->s0f, cd->t1f); glVertex2f(x + cd->x0f, y + cd->y1f);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance;
    }
    glEnd();
}
*/

#ifndef STB_FONTCHAR__TYPEDEF
#define STB_FONTCHAR__TYPEDEF
typedef struct
{
    // coordinates if using integer positioning
    float s0,t0,s1,t1;
    signed short x0,y0,x1,y1;
    int   advance_int;
    // coordinates if using floating positioning
    float s0f,t0f,s1f,t1f;
    float x0f,y0f,x1f,y1f;
    float advance;
} stb_fontchar;
#endif

#define STB_FONT_arial_11_latin_ext_BITMAP_WIDTH         256
#define STB_FONT_arial_11_latin_ext_BITMAP_HEIGHT         94
#define STB_FONT_arial_11_latin_ext_BITMAP_HEIGHT_POW2   128

#define STB_FONT_arial_11_latin_ext_FIRST_CHAR            32
#define STB_FONT_arial_11_latin_ext_NUM_CHARS            560

#define STB_FONT_arial_11_latin_ext_LINE_SPACING           7

static unsigned int stb__arial_11_latin_ext_pixels[]={
    0x00408002,0x00080006,0x20000000,0x00001000,0x00100080,0x00000000,
    0x40001001,0x98006000,0x4032e604,0x079504ab,0x83701555,0xbdddf348,
    0x01b99244,0xeeeec895,0x36a0ce84,0x21c83e63,0x2591663a,0x1d4e2049,
    0x5a9265b8,0x989b31d4,0xcc984dde,0xc85904dc,0x260d7058,0x6ec4eeef,
    0x769d4710,0xd889750b,0x20ea0edd,0x02170685,0x40320164,0x81555052,
    0x0b348852,0x05368a44,0xda81dc01,0xe984c440,0x263a8725,0x20499645,
    0xd822750c,0x442d5260,0x74422110,0x41588b60,0x8108424a,0x5982ce80,
    0x5c1330ec,0x30682110,0x89660e82,0x22341380,0x220dddde,0x22cc5ddc,
    0x22c8b32c,0x5916659b,0x9102cd22,0x02a806ec,0x43bb3077,0x9936cce8,
    0x263a8725,0x10499645,0xb06c5d4b,0x7505ac98,0x049a4c72,0xc9dddbac,
    0x8e526390,0x42ce4c49,0x87507459,0x459a7549,0x0936cce8,0x373623a8,
    0x361e89a6,0x4c970f45,0x64599645,0x45984112,0x3be6912c,0x9ab943ee,
    0x7701b82e,0x26770720,0x391d1936,0x2c8b31d4,0xca926093,0x37a62c0e,
    0x2933a80e,0x5cc0771c,0x4caaf149,0x0e526394,0x3e607472,0x21d42efe,
    0x1c9a7558,0x23ab4cee,0x3a8ea4cc,0x64b534d3,0x99a16279,0x64599645,
    0x2cd62752,0x059a44b2,0xd89a2950,0xb03b83dc,0xa4da1c81,0x88ea1cda,
    0x50498ec5,0x5b0ef547,0x750b7598,0x88933474,0x56257351,0x23a34743,
    0x1ee67c46,0x2a0f4566,0x89a75683,0x4b368727,0x1c8ea699,0x8e4ee69a,
    0x21d0770e,0x45996459,0x4d62752c,0xb3489645,0x95b71c40,0x3b8598c4,
    0x5aa750d0,0x3a87f249,0x930f886c,0x68ba9260,0x43d9262c,0xe88f2e3a,
    0x95dcc760,0x1e5c48cb,0x44750f2e,0x41d12cc6,0xd3aac43a,0x9aa75064,
    0x23a9e21e,0x9534d53a,0x4599e257,0x23b16278,0x13a8ec58,0x223b162b,
    0x4ddddf34,0xb10f4c48,0x20770b9b,0x26b9b705,0x43a87e24,0x3e62eeda,
    0x3a960eee,0x89262c77,0x0f88ea0e,0xb11f6ecc,0x817d7bb1,0x207c40f8,
    0x8b31640e,0x2730ea4b,0x6dc2cd3a,0x3bbb625c,0xb9b70ea2,0x44b93a34,
    0x21d12e1e,0x7c43a0f8,0x0e966950,0x241221f1,0x249a4522,0x0330d32c,
    0x12613093,0x240e60ea,0xa8190930,0x82b806c3,0x0d81623a,0x21d884b8,
    0x90058858,0x21d41d40,0x98d2c40c,0x50930930,0x71498cc1,0x4276f64c,
    0xea84eed8,0x777542ee,0xa96f3a22,0x41222eee,0xedc9224d,0x21b33661,
    0x440f6439,0x26c40ddd,0x80cc82e4,0x362440db,0x1ec43544,0x80f54766,
    0xbbb301ca,0x20f5419b,0x3b5001ea,0x0f4c4d88,0x1327b071,0xb701bbb1,
    0x37625b30,0x0004f60d,0x00000000,0x00000000,0x00000018,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x5d400000,
    0x20528004,0x016c4058,0x220ea039,0x884ba81c,0x106ee603,0xd002a209,
    0x540e6e01,0x10155500,0x2eea0537,0xc8007300,0x07105301,0x91035730,
    0x20040037,0x7016e03d,0x00024409,0x9c03a839,0x9a806a03,0x80c02a03,
    0x4a02a052,0x06071502,0x07300d44,0x6ef40544,0x500aaa81,0x70144c07,
    0x0460d401,0xb86d41cc,0x501cd40e,0x7645d509,0x0baa81ed,0x7102ab88,
    0x2606a035,0x3a61fefd,0x022ea4dd,0x3222c8b3,0xdde985dd,0x226ef4c4,
    0x5916659b,0xc8b32cdc,0x2e2c8b32,0x05916659,0x2c8b3075,0x2cc51775,
    0xeddd88b2,0x4c591660,0x24884dde,0x3626cce8,0x8bb20edd,0x1777220d,
    0x3a87b7b2,0x64459962,0xedec85dd,0x076eec41,0xfe87b7b2,0xd83a248d,
    0x4c5b9d52,0x5c3d1645,0x12d83a24,0x20896c1d,0x112c8b30,0x99645984,
    0x42089645,0x35c16459,0x6ccb22cc,0xd1645984,0xc8b32cc1,0xb16c1d12,
    0x34cee5f9,0x8912cc1d,0x24b87a0d,0x23a96658,0x43d00be8,0x4599624b,
    0x2589660e,0x9237f659,0x2696a049,0x85896459,0x04981266,0x459ac4ea,
    0x4d62752c,0x64599645,0x2cd62752,0x30b3a0b2,0x3ba62c8b,0x26591661,
    0x4b22cc04,0x2a726049,0x049b4392,0x2c436244,0x5017d134,0x21eec887,
    0x2fa26858,0x74404980,0x48dd980b,0x9a3a80ee,0x83b96459,0x1dc0770e,
    0x2cd62750,0x3589d4b2,0xc8b32c8b,0x2cd62752,0x8b3930b2,0x22e16459,
    0x2a591666,0x45993323,0x5d40772c,0x756a9d43,0xd8b12664,0x441d0770,
    0x88ea1eec,0xe83b9a60,0xa87bb220,0xd9113323,0x4c91b03d,0xd15a8c44,
    0x2cc762c4,0x8c4499e2,0x13a8c449,0x2a3b162b,0x3b162b13,0x4ea3b162,
    0x41d8b158,0x22c41d1c,0x8967771d,0x26598ec5,0x23b16269,0xcc98c449,
    0x4d736e48,0x47d1a665,0x2788b30d,0x23a9a608,0x4599a25a,0x26982278,
    0x089a6659,0x892361a6,0x6f54760e,0x0f88741e,0x3a24b87a,0xb0744760,
    0x1d2cd2a3,0x59a543e2,0x1d07c43a,0x59a543e2,0xf107c43a,0x10e87b99,
    0x077ba21f,0x1e83e21d,0x3e21d1e2,0x90ec1d10,0x24c263bd,0x8263c43d,
    0x24b87a0d,0x43a9a25a,0x0f41eeeb,0x8d12d497,0x25a9e21e,0x4c48d868,
    0x80ea3edd,0x6c42eeea,0xedd984ee,0x11f6ecc3,0x7754b79d,0x96f3a22e,
    0x7542eeea,0x2f3a22ee,0x50bbbaa5,0x3baa3447,0xdd50382e,0xeeed885d,
    0x21777542,0x0d43edd9,0xd8837762,0xb05c2eee,0x42776c41,0x0ea1eeeb,
    0x776c4122,0x41eeeb84,0x5c2eeed8,0x48d81eee,0x0000ea00,0x00000000,
    0x00000000,0x0b207400,0x00000000,0x00038000,0x003f2180,0x5c3ea800,
    0x00000005,0x0048d800,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x3980dc00,
    0x4c06ee60,0x0175301d,0x1553024c,0x2260f620,0x00000009,0x88837910,
    0xc805e440,0x88000000,0x02010884,0x48820880,0x0b6202c4,0xa806d400,
    0x024c0018,0x0e01c000,0x22e038a8,0x17006a03,0xa8055cc0,0x05cd40b9,
    0x776e6e4c,0x50b3261e,0x2a0ea097,0x881541de,0x2a48b882,0x80eecc4b,
    0x3ecda809,0xb89fb9d3,0x962750da,0x2e00cc0a,0x5c0ec038,0x50517038,
    0x6881507b,0x4c7992cc,0x64599645,0x31777222,0x37222c8b,0x5ddc885d,
    0x205ddc88,0x2eee440d,0x101f9874,0x3e606011,0x912a4eee,0x3e69dddd,
    0x946d4720,0x4ce41088,0x27777cc3,0x07cd62b5,0xa844623d,0x931d4b13,
    0x1a2f8760,0x8743c851,0x3330743c,0x8a777754,0x98512cc6,0x64599645,
    0x264b87a2,0x5c3d1645,0xe8970f44,0x206c12e1,0x45892e1e,0x85b9b01e,
    0xb1662dcd,0x21dc0ea3,0x764725e9,0xd32c4ea2,0x51d8b309,0x9e469b47,
    0x44eab13a,0x70498ea5,0x32c532a5,0xc8741d9b,0x262c8742,0x0e880ecd,
    0x9b3598d1,0x2591661d,0x85896459,0x22591666,0x9a162685,0x41b06858,
    0xb1266858,0x44e61ddd,0xb32c4e65,0x2e0750e8,0x1c9664c3,0x4b13a893,
    0x22cc15dc,0x59b4750e,0x2b13a9d4,0x31d4b34a,0xb4e52609,0x30232e3a,
    0xb3d30b3d,0x3d008cb8,0x65d66344,0x25916608,0x83b96459,0x72c8b30e,
    0x20ee1d07,0x01d0770e,0x8741dc1b,0x0e40fc68,0x7ccd0e4d,0x40ea2efe,
    0x47464c3b,0x13a8931c,0x326e52ab,0x1d45dfdf,0x2a57166d,0x2f3a2b13,
    0x20498ea5,0x707272b6,0x00ec81bd,0x1bd701d9,0x263443d8,0x2c437ae5,
    0x4762c476,0x8b13c459,0x2788b31d,0x8b33c459,0x2cc1b078,0x3e61d1e2,
    0x54d13a81,0xe8accd13,0x21dc15c1,0x2639b549,0x7559a544,0xd1598fe2,
    0x22cd6203,0x2166950d,0x0498ea38,0x22dd5276,0x0498771a,0x1dc6a126,
    0x4dad1097,0x0e8ee354,0xf88741f1,0x744b87a0,0x70f41f10,0xd12e1e89,
    0x1a3925c3,0x6444b87a,0x22eeecbd,0x76e41edc,0x10e89661,0x4987707b,
    0x223e87f2,0x3b725bce,0x744b30ea,0x32b33d80,0x16f3a23e,0x1263a9ec,
    0x89b12da8,0x24c0ecd8,0xd9b10930,0xbb441a61,0x1d9b11ee,0x2a177754,
    0x76c42eee,0x2eeea84e,0x442776c4,0xed884eed,0x42774c4e,0x0004eed8,
    0x5c598000,0x24c3b804,0x000003f1,0x0004b8b3,0x263a8000,0x3e20eeef,
    0x93000ba0,0xdb0024c0,0x00009ddd,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x88000000,0x008014c4,0x10a50957,0xbc8004cc,0x40422043,0x882d884c,
    0x000081bc,0x10073000,0x00008100,0x0102bc88,0x00900000,0x2000e6e0,
    0x008002aa,0x88197300,0x336214c4,0x03220350,0x2a3882e6,0x883b722a,
    0xb5154098,0x0d5447b9,0x41540e6a,0x2cdc2ddc,0x02a00760,0x883ede98,
    0x4c394ddc,0x982ecc5d,0x4c3b9903,0x36635645,0x25d41204,0x01d00a88,
    0x75cc0aaa,0x44077720,0x6882b85d,0x2a9dddd5,0x1f30b39a,0x1a8d10e4,
    0x8b3599a2,0x422a2268,0x20eab15a,0xeea96459,0x424b14ee,0x11113009,
    0x7777f740,0x743c83a0,0x8888b2e1,0x3e604c08,0x58e65eee,0x88759166,
    0x7777cc19,0xeef98185,0x7cc1985e,0xe9a85eee,0x220eab10,0x3bbe63d8,
    0x3a21a22e,0x03755910,0xd10e4bd3,0x27734448,0x27534468,0x3aac7558,
    0x20b22cc1,0x220b30e8,0x33623dcd,0xca84cdde,0x89660049,0x44ea1f85,
    0x59877325,0x993336e0,0x9b106645,0x3202cc7b,0x881661dc,0x81663dcd,
    0x5265dce8,0x1773a20d,0x688744b3,0x549541e8,0x1c9664c1,0x268891a2,
    0x54d11a2b,0x558eab13,0x27667d9d,0x21e82d99,0x98c41cfb,0x1b354225,
    0xd70498e8,0x1dcddddd,0x56275074,0x20599639,0x64598e49,0x26598c42,
    0x2658e605,0x32cc6205,0x2599dc0b,0x99dc1d49,0x44b22cc5,0x93701ec6,
    0x47464cb3,0x4399a21c,0x4468ea68,0x3aac4ea6,0xd358a556,0x3d85d999,
    0xcdd880e8,0x33b37625,0x7cd661cc,0x931665ee,0x751e22d4,0x2666dd62,
    0xc87dddf3,0x3b1622dd,0x265cdd88,0x36e3eeef,0x3bbe64cc,0x9737623e,
    0x323eeef9,0xe9a4cb11,0xb3162391,0x25cd13a8,0x5264ad20,0xb9a21cda,
    0x26913440,0x26953445,0xb47515c5,0x09716459,0x34cb20b1,0x20b9aa59,
    0x3a04eeed,0x5c3d0b21,0x9359a544,0x1700b31c,0x903e21d0,0x20599a65,
    0x20598e49,0x02ccd32c,0x0c996677,0x22ccea93,0x3689dc59,0x9771b80d,
    0x443f924c,0xb71a2166,0x3a26881d,0xa8f625bc,0x4b22cda3,0xddbbb069,
    0xb33666cc,0x4c7bb799,0xdc881265,0x4eed882d,0x325bce88,0x201662dd,
    0x777541da,0x26ccd982,0x16ee4059,0x666cc0b3,0x9bb01666,0x0eed64cb,
    0x2598b9bb,0x3b6d10e8,0x02044eee,0xd10fc493,0x10034404,0xd1d4000d,
    0x3b659166,0x00004eee,0x77cc3b00,0x000001ee,0xdddf3000,0x4000000d,
    0x006eeef9,0x00ddddf3,0x01bbbbe6,0x3be60000,0x000001ee,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x01b00000,0x08002100,0x42000000,0x029b8000,0x22013300,0x000002ac,
    0x00000000,0x00000400,0x40000000,0x00020000,0x442e5400,0xe88bb502,
    0x517626cc,0x0b207979,0x225881a2,0x204ba8b4,0x4403a829,0x20e601aa,
    0xbb316459,0x6cc59b81,0x40d83b84,0x6e540ddc,0x21624dc1,0x109504d9,
    0x1037720d,0x0ddc819b,0xd826ef4c,0x03b77620,0x89b30937,0x43c82a4a,
    0x99dc0c0e,0xaba82626,0x1018399a,0x15898113,0x0981b377,0x22ea1ae0,
    0xd701ae00,0x542c8b30,0x46210441,0x44211109,0x2a730888,0x041c5224,
    0x4022205c,0x4d620601,0x5262d544,0x2d83a258,0x5983a0d8,0x50111008,
    0x90e87736,0x322dcd85,0x91dcd9a1,0x33625632,0x89b76e1d,0xb9d75dce,
    0x0f73623b,0x33aa1674,0x4059d02e,0x322cc2ce,0x547b9b12,0xac4eab13,
    0x44eab13a,0x75516445,0x4c5b9b05,0x3616e6c3,0x16e6c2dc,0xcc8793b1,
    0x2668ae4e,0x1261b004,0x99077320,0x313ae83b,0x4e62cf4c,0xab54ea58,
    0x96f52313,0x5862751a,0x2ccee3b7,0xb31882eb,0x5a8b3930,0x0b3930d1,
    0x8b316726,0xa966312c,0xac4eab13,0x44eab13a,0x5d90f5c5,0x4589cc99,
    0x732c4e64,0x4b139962,0x4ea1ecd8,0x9f27a268,0x2a1b003b,0x23993323,
    0x5f458e65,0x3903b202,0x5d736e34,0x92919482,0xbaaca82b,0x75d62392,
    0x9bb11cec,0xa83a390b,0x074721a3,0x1620e8e4,0x9737623b,0x44eab13a,
    0x9d562755,0x8ea68858,0x92468726,0x93439343,0x9a277343,0xb3711a1c,
    0x3606224c,0x734ccb30,0x66dc999b,0x389cf44c,0x689d424c,0x139a4c26,
    0x1d4c6e67,0xa74ce273,0x38accee5,0x88d32c8b,0x56a3dccf,0x6e67c458,
    0x1ee67c43,0x2c87c43a,0x559a54d3,0x59a55669,0x89d56695,0x75345225,
    0x4ea351a2,0x5344ea68,0xb13a9a27,0x4a2589d4,0x1d83a249,0x443d1a39,
    0x92639267,0x40dccb43,0x43db9049,0x3320ddd8,0x0f33260d,0xdde83732,
    0xaaae6ec3,0x3666cc48,0x36a688ea,0xd11d41dc,0xd51a23a8,0x666cc5dd,
    0x456f3a26,0x79d15bce,0xc96f3a2b,0x0f65c1dd,0x47107b72,0x76e41edc,
    0x320f6e41,0x0ee5c1dc,0xbb303736,0x22774c7d,0x642eeed8,0x16ee42dd,
    0x0012601a,0x10000000,0x00020800,0xd002c81d,0x903a2c81,0x00000005,
    0x00000000,0x00000008,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00200000,
    0x56404000,0x00110043,0x0055cc02,0x020425c0,0x1006c002,0x29b80080,
    0x04100620,0x0c4c4008,0x4010062a,0x540e602a,0x0320750d,0x18a806d4,
    0xb80000d8,0x3a8360dc,0x21d88688,0x2a849848,0x25ba8550,0x20535048,
    0x8537103a,0x5e54931c,0x6406203c,0x6f4c1ede,0x0353104e,0xdde881d4,
    0x377220dd,0xb8537105,0x2443b128,0x2e0700e0,0x80a20e28,0x8717038b,
    0x5ba8ea28,0x30111766,0x2a206018,0x21a20321,0x9501101b,0xc83e6064,
    0x0d700541,0x45d47293,0x0d70399b,0x1d12ccb1,0x406b825c,0x361e886b,
    0x20970f45,0x2a26886b,0x86b80321,0x445eeef9,0xeef99a26,0x3bbbe65e,
    0x97bbbe65,0x3ba8ea68,0xdcd83311,0x41dcc922,0xa8d41dcc,0x66c4d102,
    0x4542b83d,0x4bd30555,0x07b9b11c,0x9a3a0b3a,0x209151b4,0x05f442ce,
    0xce8342d4,0xb50b3a02,0xd0b13ce4,0x8d10b3a0,0xce80371a,0x9a202cc2,
    0x59816668,0x26881660,0x6d4750da,0x962733dc,0x4732c735,0x18a44445,
    0x16631344,0x913710b5,0x92cc9862,0x4c2cc623,0x23cb859c,0x260d438c,
    0xeec8859c,0x303a0ee1,0x27260b39,0x1d1c9dc5,0x9303a0ee,0x444688b3,
    0xc981a8b9,0x2202cc59,0x20599a26,0x88166059,0x2a3a92e6,0x26872b15,
    0x24ccdb8e,0x1904ccdb,0x6c4d1136,0x201a25cd,0x464c9b0c,0x9bb11c8e,
    0x103a390b,0x8b8ca41f,0x441d1c84,0x445a9a60,0x901d1c87,0x2bca83a3,
    0x1e22ccf1,0x0d107472,0x8e42cd56,0x3bbbe60e,0x4cd13443,0x3e63eeef,
    0x3be63eee,0x3c9a23ee,0x5563a8ea,0x24c74d13,0x370724c7,0x64d112f2,
    0x1d344d32,0x4c9791b8,0x4b239b54,0x6e67c469,0x22e62c43,0x67c4399b,
    0x6896a3dc,0x226647a2,0x443dccf8,0x2743dccf,0x12e1e897,0x447b99f1,
    0x10ee0c86,0x2cc7b99f,0x26689a20,0x59816605,0x2a3a9a20,0x37258ea3,
    0x6ee43a1e,0x2616ee42,0x4d116ea3,0x6dc6ccd9,0xb751cc3d,0x263f924c,
    0x11d46ccd,0x64c0f54d,0x223a83cc,0x20f775c6,0x544eeed8,0x44751a23,
    0x13b7b266,0x2a13bb62,0x54689a23,0x4750b722,0xd1016668,0x4c0b3344,
    0x68816605,0x8ea3a8ea,0x10000005,0x000d1020,0x49304020,0x81d001f8,
    0x1d00002c,0x4c0002c8,0x745903a0,0x00009640,0x225903a0,0xd0666046,
    0xddf32c81,0x9a2688dd,0x266eeef9,0x3e66eeef,0x01a26eee,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x000000e4,0x00080002,0x65c01100,0x3995000c,
    0x88004100,0x0665c001,0x00720000,0x0665c000,0x80000000,0x70a20dcb,
    0x000983b9,0xe81dd880,0x4c0eeefe,0x2eeef980,0x117777cc,0xdc9de47d,
    0x70ee6c0a,0x4b6e1d87,0x406a203a,0x3055443b,0x32d24cbb,0x9b34eeee,
    0x1165261d,0x01263333,0x404c07b5,0x1d41261d,0x81660d44,0x99716459,
    0x9883a1d8,0x21886540,0xd87b9b10,0x20e87948,0x049ca818,0x4b307732,
    0xe89660e8,0x65c30750,0x88c4ea09,0x42661409,0xdcd810a8,0xd8826222,
    0x986623dc,0xcb8771a4,0x50cd2608,0x0464d627,0x6c08cc42,0x135311dc,
    0x641d4126,0x333a61dc,0x3bbbf60b,0x4135316f,0x66c49558,0x9d47b63d,
    0x21663158,0x542c8740,0x30498e83,0x571662c7,0x1d4ae2cc,0x25d9d534,
    0x21dea82b,0x6e6cc686,0xda962734,0x966313dc,0x34931dea,0x437ae0ee,
    0xb13a8149,0x7c3613a6,0x5189d4b0,0x41267d99,0x4cb1cc3a,0x3666a99d,
    0x9952d999,0x20eac87d,0x8654b318,0x3762b13a,0x4f4c685c,0x9acc3a85,
    0x336e5eef,0xa9676c4c,0x9d4b3b63,0x456a683a,0x254e2735,0x69a63434,
    0x22b53439,0x54b9bb15,0x3268acc4,0x9dc6a4dd,0x56275049,0x5b55705b,
    0x95015c73,0x2ea3ba4c,0x4999b71d,0x99d33459,0x544a85d9,0xbb10cefc,
    0x3a8f6cb9,0x434cb2b1,0x3a80ec86,0x9827776c,0x2b8b30e4,0x0ea57166,
    0xcc9a3a9a,0xd0d0750d,0x89d5a598,0x25958ea6,0xbd30ea69,0x6c43b8dd,
    0x2a0930ec,0x44136b34,0x261cc9cc,0x262cc713,0x24987504,0x97267663,
    0x0b316459,0x96435b31,0x34a92669,0x21b3366b,0x47504986,0xdc812659,
    0x1d12cc2d,0x2a1d12cc,0x468ea683,0x21a0ea1c,0x6e4d24c6,0xb358ea1e,
    0x261d4d99,0x0640ee04,0x2f3a2093,0xdaec0935,0xd10dcc85,0x07504981,
    0x674c5bb9,0x4b22cc1b,0xbea980e8,0x89b33662,0x0b79d12e,0x41261a12,
    0xef98763a,0xdf3001ee,0xeef983dd,0xa9a0ea1e,0x2a1d99a3,0x24c68683,
    0x02c7500d,0xb81261d4,0x3e60da83,0x7cc00eee,0x65320eee,0x9dddb004,
    0x543bbbe6,0x98166003,0xeeed9645,0x00000d84,0x4c344c80,0x00000004,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x3bba0000,0x00080044,0x00038820,0x02222108,0x00000000,
    0x00000000,0x00000000,0x00000000,0x20204000,0x20220808,0x4d301008,
    0x1059a268,0x9b0eee4b,0x3a0d705b,0x34a836a4,0x7441bddf,0x5b9d55cc,
    0x9a777764,0x3e62eeef,0x54ea5eee,0x3eeef883,0x3e60ea75,0x3be64eee,
    0x390763ee,0x87659166,0x2a499a2f,0x8f101265,0xf34eeeea,0x26d13f85,
    0xecd8720f,0x9b30ccdb,0x1bd8ea1d,0xcd87b9b1,0x20ea5c1d,0x4057b368,
    0x44eab13a,0x6cc2ce86,0xa764bb20,0x33b92a49,0x3b8696ab,0x261d12cc,
    0x89d4ea05,0x54220b10,0x4762cc13,0x68953c59,0x4ae59166,0xa4cb14ca,
    0x36024c5a,0x74c3a206,0x9b44faa4,0xf1d4725e,0x232e9315,0x856c7508,
    0xb1ccb318,0x36885bd0,0xb1009739,0x59c98b30,0x4c911764,0x8b229349,
    0x68eab11c,0x322cc3b8,0xa9d40b32,0x20b10d8b,0x27d9d53a,0x45987459,
    0x6cc75346,0x2932d999,0x64c7569c,0x2e04985a,0xc987a06a,0x9b44ef26,
    0x8ae392cc,0x3ae3ccdd,0x83a2750d,0x8725cdd8,0x0580fb86,0x4c1e880d,
    0x20e8e40e,0x52624458,0x261eeef9,0x3456ab33,0x751661dc,0xa8fbbbe6,
    0x7c41d953,0xa54ea6ee,0x5dfdf358,0x216ee74c,0x674c1b2c,0xcada2ecc,
    0x3b7a61c9,0xd48824c0,0x37930f60,0xc9b44ef6,0x4931c8e8,0x5c6a512f,
    0x57166953,0x8d13a966,0x73485be8,0x3a268962,0x67c41c81,0xb11623dc,
    0x34493498,0x6f557772,0x2cc3b81e,0x7502ccee,0x058877aa,0xb368ea75,
    0x09d987a2,0x598b1930,0x2a93b164,0x45bacc5b,0x5d57b049,0xc8c984b8,
    0x26d13baa,0x6e439b54,0xb11dddae,0x2b7a21b9,0x23666cc5,0xd8f41edc,
    0x839b9042,0x20203d13,0x8589a23a,0x124d263e,0x01d5620d,0x744b30ee,
    0xa9d40b30,0x5416268b,0x259b4753,0xb00b30e8,0x16459857,0x313625b5,
    0x20931ec9,0x1a62eaaa,0x2775ea4c,0x0fe49368,0x00000000,0x10e88f20,
    0x7764200d,0x03a0ec5e,0x26016259,0x03dddf34,0x2e01d562,0x0f777cc3,
    0x54ddddf3,0x2c4ee753,0x9b4753a8,0x8059a5c5,0x1645986a,0x261741f1,
    0x77cc3a24,0x76c680ee,0x2e934eee,0x24da2775,0x000003f1,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x81040000,0x66408200,0x42664043,0x40444445,0xeea81108,
    0x40e6546e,0x20424088,0x10410820,0x10011010,0x21111108,0x430c1040,
    0x517128b8,0x00082e20,0x93755020,0x75020150,0x8001a800,0x3a204080,
    0x1dcc963a,0x106d6e6c,0x20ee6c13,0x08454440,0xbbd7b108,0x210ee099,
    0x2c36edc0,0x175498e4,0x587c361b,0x66cc776a,0x7b31ebbe,0xeccaac7b,
    0x25876952,0x36323cad,0xd9836720,0x5436ea1d,0xba96ee5c,0x20f2ba24,
    0xda86a80b,0x3707620c,0xc8ae4b88,0x4dc4f570,0x7358eae0,0x7d1ccb11,
    0x4189d4b0,0x09766545,0x23aa1108,0x262c40d8,0x6dd63dbd,0x4cddfd71,
    0x8372a394,0x239ad9ab,0x35aa4c4a,0x8b2c5667,0x201e644a,0x1127625e,
    0x207aa95b,0x86a91dc9,0x27325448,0x1bbbae48,0x43ea057b,0xdddd51a8,
    0x95c2aa61,0x4cd572c9,0x44ea20dd,0x64999b75,0x2b9603a1,0x01254160,
    0x33b37621,0x260e41cc,0x2aae6b15,0x4b682c1b,0x2f221dea,0x30ea1cc9,
    0x399cce67,0x26166596,0x8b6f200f,0x36720d9c,0x9c8736a0,0x2619571d,
    0xe8962a0d,0x4c0a83ca,0x41cda8b4,0x0cc0dc1a,0x88622011,0x2b33a83a,
    0xd13a8e39,0x87139960,0x84045985,0x205cd52c,0x74563986,0x32e070b3,
    0xbb162ea3,0x39875176,0xb1cce673,0xad80d8ac,0x45428a05,0x22051512,
    0x4c11510c,0x1b88eea0,0x2a12aeaa,0x750a8d40,0x03702201,0xe8800000,
    0x0b7725ac,0x91603db9,0x6c4581b9,0xcd984040,0x24c3ddbc,0x6ef4b1cc,
    0x11bbbae3,0x23b9d41f,0x43a8994c,0x4ce67339,0xbbdb5963,0x0d1dcee7,
    0x00000000,0x00000000,0x00000000,0x80000000,0xbdb16005,0x2222267b,
    0x982b8000,0x00000963,0x00000000,0x08800000,0x00eeeea8,0x20eeeea8,
    0x20088888,0x3322dd95,0x001a2ccc,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x54000000,0xb801dded,0x70640b12,0x23237777,
    0x00000005,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x20000000,0x3bbbaa19,0x03200830,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,
};

static signed short stb__arial_11_latin_ext_x[560]={ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,0,0,0,0,0,0,0,0,0,0,
-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,0,0,-1,
0,0,0,0,0,0,0,0,0,-1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,-1,-1,-1,-1,
-1,-1,0,0,0,0,0,0,0,0,-1,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-1,0,-1,0,-1,0,0,0,0,0,0,0,0,0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,-1,-1,-1,-1,-1,-1,0,0,0,0,0,0,0,-1,0,0,0,0,0,0,
-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,1,1,1,
1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1,0,-1,-1,0,
0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,-1,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1, };
static signed short stb__arial_11_latin_ext_y[560]={ 8,0,0,0,0,0,0,0,0,0,0,2,7,5,
7,0,0,0,0,0,0,1,0,1,0,0,2,2,2,3,2,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,2,0,2,0,2,0,2,0,0,
0,0,0,2,2,2,2,2,2,2,1,2,2,2,2,2,2,0,0,0,3,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,8,2,0,0,2,0,
0,0,0,0,0,3,3,5,0,-1,0,2,0,0,0,2,0,4,7,0,0,3,0,0,0,2,-1,-1,-1,-1,
-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,2,0,-1,-1,-1,-1,-1,0,0,0,0,
0,1,0,0,2,2,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,2,2,0,0,0,0,0,0,0,
-1,1,-1,0,0,2,-1,0,-1,0,-1,1,-1,0,-1,0,0,0,-1,1,-1,0,-1,1,0,2,-1,0,-1,0,
-1,0,-1,1,0,0,-1,-1,0,0,-1,1,-1,1,-1,0,0,0,-1,2,0,0,-1,0,0,0,2,-1,-1,0,
0,0,0,0,0,0,0,-1,0,0,2,-1,0,0,0,2,-1,1,-1,0,-1,0,0,2,-1,0,0,2,-1,0,
-1,0,-1,0,0,2,-1,0,0,1,-1,0,0,1,-1,1,-1,1,-1,0,-1,0,-1,0,0,2,-1,0,-1,0,
-1,-1,0,-1,1,-1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,1,1,1,
1,1,1,1,1,1,1,1,1,1,0,2,1,1,1,1,1,1,1,1,1,1,1,1,1,0,2,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1,0,-1,0,-1,
0,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,-2,-2,-1,0,-1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1, };
static unsigned short stb__arial_11_latin_ext_w[560]={ 0,2,4,6,6,9,7,2,3,3,4,6,2,3,
2,3,6,3,5,6,6,6,6,6,6,6,2,2,6,6,6,5,10,8,7,7,7,7,6,8,7,2,5,7,
6,8,7,8,7,8,7,7,6,7,7,10,7,7,6,3,3,3,5,7,3,6,6,5,5,6,4,5,5,2,
3,5,2,8,5,6,6,5,4,5,3,5,5,8,5,5,5,4,2,4,6,6,6,6,6,6,6,6,6,6,
6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,0,2,5,6,6,7,
2,6,3,8,4,5,6,3,8,7,4,6,4,4,2,5,6,2,3,3,4,5,9,9,9,6,8,8,8,8,
8,8,10,7,7,7,7,7,3,3,4,3,8,7,8,8,8,8,8,5,8,7,7,7,7,7,7,6,6,6,
6,6,6,6,9,5,6,6,6,6,2,3,4,3,6,5,6,6,6,6,6,6,6,5,5,5,5,5,6,5,
8,6,8,6,9,7,7,5,7,5,7,5,7,5,7,7,8,6,7,6,7,6,7,6,7,6,7,6,8,5,
8,5,8,5,8,5,7,5,7,5,4,5,4,4,4,4,3,3,2,2,7,4,6,4,7,5,5,6,3,6,
4,6,3,6,4,6,3,7,5,7,5,7,5,6,7,5,8,6,8,6,8,6,10,9,7,4,7,4,7,4,
7,5,7,5,7,5,7,5,6,3,6,4,6,3,7,5,7,5,7,5,7,5,7,5,7,6,10,8,7,5,
7,6,5,6,5,6,5,3,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,8,6,6,6,6,6,6,
6,6,6,6,6,6,6,6,6,6,9,7,6,6,6,6,6,6,6,6,6,6,6,6,6,9,7,6,6,6,
6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,8,6,4,4,8,
6,7,5,7,5,7,5,7,5,7,5,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,
6,6,6,6,6,6,6,6,6,6,8,6,10,9,8,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,
6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,
6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,
6,6,6,6,6,6, };
static unsigned short stb__arial_11_latin_ext_h[560]={ 0,8,4,9,10,9,9,4,11,11,4,5,3,1,
1,9,9,8,8,9,8,8,9,7,9,9,6,8,5,3,5,8,11,8,8,9,8,8,8,9,8,8,9,8,
8,8,8,9,8,9,8,9,8,9,8,8,8,8,8,10,9,10,5,1,3,7,9,7,9,7,8,9,8,8,
11,8,8,6,6,7,8,8,6,7,8,7,6,6,6,9,6,11,11,11,3,7,7,7,7,7,7,7,7,7,
7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,0,8,10,9,5,8,
11,11,2,9,5,5,3,1,9,2,4,6,5,5,3,8,10,2,4,5,5,5,9,9,9,9,9,9,9,9,
9,9,8,11,9,9,9,9,9,9,9,9,8,9,10,10,10,10,10,5,9,10,10,10,10,9,8,9,9,9,
9,8,9,9,7,8,9,9,9,9,8,8,8,8,9,7,9,9,9,8,9,5,7,9,9,9,9,11,10,11,
9,8,9,9,11,8,10,9,10,9,10,8,10,9,9,9,8,9,9,8,9,9,9,8,11,9,9,9,10,11,
10,11,10,10,11,11,9,9,8,8,9,7,9,7,9,8,11,11,9,6,9,11,10,11,11,11,6,9,9,11,
11,8,8,8,8,8,8,9,8,11,9,9,8,8,9,9,10,8,10,9,10,9,9,7,9,8,11,9,9,8,
10,9,10,9,10,8,10,9,11,10,9,9,8,8,10,8,10,8,10,9,10,9,10,9,11,9,9,8,9,11,
9,9,8,9,7,9,8,8,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,9,7,7,11,7,7,7,
7,7,7,7,7,7,7,7,7,7,9,7,7,7,7,7,7,7,7,7,7,7,7,7,7,9,7,7,7,7,
7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,9,9,9,8,10,
9,10,9,10,10,10,10,10,10,10,10,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,
7,7,7,7,7,7,7,7,7,7,10,11,9,9,10,9,7,7,7,7,7,7,7,7,7,7,7,7,7,7,
7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,
7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,
7,7,7,7,7,7, };
static unsigned short stb__arial_11_latin_ext_s[560]={ 255,9,243,62,68,11,141,236,77,164,248,
224,253,191,203,34,43,52,22,149,183,12,156,62,195,209,145,19,166,155,213,
28,118,34,56,216,84,92,109,230,149,206,224,168,176,197,209,146,133,110,125,
102,77,110,141,157,1,247,190,154,170,133,207,195,165,241,85,27,56,7,43,
22,119,116,100,103,100,115,124,248,70,64,110,227,48,1,89,101,139,78,133,
87,1,173,148,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,
45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,255,253,108,
88,193,210,12,15,184,84,173,154,169,191,34,176,231,82,183,188,162,109,200,
188,239,220,178,160,15,168,44,37,178,93,69,119,155,128,6,110,187,204,212,
220,200,228,195,164,33,54,230,43,166,137,68,148,137,9,1,26,222,7,188,
232,210,62,180,218,95,30,52,57,8,1,246,239,253,68,72,243,202,69,188,
181,174,246,163,200,75,143,137,131,125,129,215,135,92,97,76,69,141,235,100,
43,239,28,247,157,207,1,247,239,24,225,217,181,202,195,187,17,4,163,155,
148,183,43,83,178,120,114,184,197,73,67,196,51,50,33,38,22,29,46,203,
193,1,130,241,168,61,159,92,81,95,188,184,70,57,128,236,169,176,141,232,
122,91,49,61,21,240,77,163,157,52,84,34,95,17,88,77,217,149,63,151,
110,102,104,192,206,175,228,158,122,146,249,29,129,115,130,115,225,92,229,75,
135,60,135,43,55,29,171,62,177,195,148,212,104,220,234,163,4,39,81,204,
42,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,123,45,45,36,
45,45,45,45,45,45,45,45,45,45,45,45,45,132,14,45,45,45,45,45,
45,45,45,45,45,45,45,45,170,233,45,45,45,45,45,45,45,45,45,45,
45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,101,118,
25,1,216,15,225,142,233,241,247,1,7,15,21,37,45,45,45,45,45,45,
45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,
45,45,45,51,22,112,102,207,49,45,45,45,45,45,45,45,45,45,45,45,
45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,
45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,
45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,
45,45,45,45,45,45,45,45,45, };
static unsigned short stb__arial_11_latin_ext_t[560]={ 1,74,83,45,13,35,24,83,1,1,83,
83,83,89,89,35,35,74,74,45,74,74,45,83,45,45,83,74,83,89,83,
74,1,74,74,45,74,74,74,45,74,74,45,74,74,74,74,55,74,55,74,
55,74,45,74,74,74,65,74,13,45,13,83,89,89,74,45,83,45,83,74,
45,74,74,1,74,74,83,83,74,74,74,83,74,74,83,83,83,83,55,83,
1,1,1,89,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,
83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,1,54,13,
35,83,65,1,1,89,55,83,83,89,89,45,89,83,83,83,83,89,65,13,
89,83,83,83,83,55,55,55,55,55,55,55,55,55,55,65,1,55,55,55,
55,55,55,55,55,65,55,12,24,13,13,24,83,55,24,24,24,12,45,65,
35,35,55,35,65,35,55,83,65,55,55,45,45,45,65,65,65,45,83,45,
45,45,55,45,83,83,45,45,45,45,1,12,1,45,65,45,45,1,65,13,
45,12,45,12,65,12,45,35,35,65,35,35,65,35,35,35,65,1,35,35,
35,13,1,13,1,13,13,1,1,35,35,65,65,35,83,35,83,35,65,1,
1,35,83,24,1,24,1,1,1,83,24,24,1,1,65,55,65,65,65,55,
24,65,1,35,35,55,65,24,24,24,65,24,24,24,24,24,74,24,65,1,
24,24,65,13,24,13,24,13,65,13,24,1,13,24,24,65,65,13,65,13,
65,13,24,13,35,13,24,1,24,24,65,24,1,24,24,65,35,83,35,65,
65,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,35,83,83,1,
83,83,83,83,83,83,83,83,83,83,83,83,83,35,83,83,83,83,83,83,
83,83,83,83,83,83,83,83,35,74,83,83,83,83,83,83,83,83,83,83,
83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,45,45,
55,65,1,45,1,35,1,1,1,13,13,13,13,13,83,83,83,83,83,83,
83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,
83,83,83,13,1,35,35,1,45,83,83,83,83,83,83,83,83,83,83,83,
83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,
83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,
83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,
83,83,83,83,83,83,83,83,83, };
static unsigned short stb__arial_11_latin_ext_a[560]={ 44,44,56,88,88,140,105,30,
52,52,61,92,44,52,44,44,88,88,88,88,88,88,88,88,
88,88,44,44,92,92,92,88,160,105,105,114,114,105,96,123,
114,44,79,105,88,131,114,123,105,123,114,105,96,114,105,149,
105,105,96,44,44,44,74,88,52,88,88,79,88,88,44,88,
88,35,35,79,35,131,88,88,88,88,52,79,44,88,79,114,
79,79,79,53,41,53,92,118,118,118,118,118,118,118,118,118,
118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,
118,118,118,118,118,118,118,118,44,52,88,88,88,88,41,88,
52,116,58,88,92,52,116,87,63,86,52,52,52,91,85,44,
52,52,58,88,131,131,131,96,105,105,105,105,105,105,158,114,
105,105,105,105,44,44,44,44,114,114,123,123,123,123,123,92,
123,114,114,114,114,105,105,96,88,88,88,88,88,88,140,79,
88,88,88,88,44,44,44,44,88,88,88,88,88,88,88,86,
96,88,88,88,88,79,88,79,105,88,105,88,105,88,114,79,
114,79,114,79,114,79,114,97,114,88,105,88,105,88,105,88,
105,88,105,88,123,88,123,88,123,88,123,88,114,88,114,88,
44,44,44,44,44,44,44,35,44,44,116,70,79,35,105,79,
79,88,35,88,35,88,46,88,53,88,35,114,88,114,88,114,
88,95,114,88,123,88,123,88,123,88,158,149,114,52,114,52,
114,52,105,79,105,79,105,79,105,79,96,44,96,59,96,44,
114,88,114,88,114,88,114,88,114,88,114,88,149,114,105,79,
105,96,79,96,79,96,79,35,118,118,118,118,118,118,118,118,
118,118,118,118,118,118,118,119,118,118,88,118,118,118,118,118,
118,118,118,118,118,118,118,118,135,103,118,118,118,118,118,118,
118,118,118,118,118,118,118,135,105,118,118,118,118,118,118,118,
118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,
118,118,118,118,118,105,88,44,35,123,88,114,88,114,88,114,
88,114,88,114,88,118,118,118,118,118,118,118,118,118,118,118,
118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,
118,118,105,88,158,140,123,96,118,118,118,118,118,118,118,118,
118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,
118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,
118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,
118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,
118,118,118,118,118,118,118,118, };

// Call this function with
//    font: NULL or array length
//    data: NULL or specified size
//    height: STB_FONT_arial_11_latin_ext_BITMAP_HEIGHT or STB_FONT_arial_11_latin_ext_BITMAP_HEIGHT_POW2
//    return value: spacing between lines
static void stb_font_arial_11_latin_ext(stb_fontchar font[STB_FONT_arial_11_latin_ext_NUM_CHARS],
                unsigned char data[STB_FONT_arial_11_latin_ext_BITMAP_HEIGHT][STB_FONT_arial_11_latin_ext_BITMAP_WIDTH],
                int height)
{
    int i,j;
    if (data != 0) {
        unsigned int *bits = stb__arial_11_latin_ext_pixels;
        unsigned int bitpack = *bits++, numbits = 32;
        for (i=0; i < STB_FONT_arial_11_latin_ext_BITMAP_WIDTH*height; ++i)
            data[0][i] = 0;  // zero entire bitmap
        for (j=1; j < STB_FONT_arial_11_latin_ext_BITMAP_HEIGHT-1; ++j) {
            for (i=1; i < STB_FONT_arial_11_latin_ext_BITMAP_WIDTH-1; ++i) {
                unsigned int value;
                if (numbits==0) bitpack = *bits++, numbits=32;
                value = bitpack & 1;
                bitpack >>= 1, --numbits;
                if (value) {
                    if (numbits < 3) bitpack = *bits++, numbits = 32;
                    data[j][i] = (bitpack & 7) * 0x20 + 0x1f;
                    bitpack >>= 3, numbits -= 3;
                } else {
                    data[j][i] = 0;
                }
            }
        }
    }

    // build font description
    if (font != 0) {
        float recip_width = 1.0f / STB_FONT_arial_11_latin_ext_BITMAP_WIDTH;
        float recip_height = 1.0f / height;
        for (i=0; i < STB_FONT_arial_11_latin_ext_NUM_CHARS; ++i) {
            // pad characters so they bilerp from empty space around each character
            font[i].s0 = (stb__arial_11_latin_ext_s[i]) * recip_width;
            font[i].t0 = (stb__arial_11_latin_ext_t[i]) * recip_height;
            font[i].s1 = (stb__arial_11_latin_ext_s[i] + stb__arial_11_latin_ext_w[i]) * recip_width;
            font[i].t1 = (stb__arial_11_latin_ext_t[i] + stb__arial_11_latin_ext_h[i]) * recip_height;
            font[i].x0 = stb__arial_11_latin_ext_x[i];
            font[i].y0 = stb__arial_11_latin_ext_y[i];
            font[i].x1 = stb__arial_11_latin_ext_x[i] + stb__arial_11_latin_ext_w[i];
            font[i].y1 = stb__arial_11_latin_ext_y[i] + stb__arial_11_latin_ext_h[i];
            font[i].advance_int = (stb__arial_11_latin_ext_a[i]+8)>>4;
            font[i].s0f = (stb__arial_11_latin_ext_s[i] - 0.5f) * recip_width;
            font[i].t0f = (stb__arial_11_latin_ext_t[i] - 0.5f) * recip_height;
            font[i].s1f = (stb__arial_11_latin_ext_s[i] + stb__arial_11_latin_ext_w[i] + 0.5f) * recip_width;
            font[i].t1f = (stb__arial_11_latin_ext_t[i] + stb__arial_11_latin_ext_h[i] + 0.5f) * recip_height;
            font[i].x0f = stb__arial_11_latin_ext_x[i] - 0.5f;
            font[i].y0f = stb__arial_11_latin_ext_y[i] - 0.5f;
            font[i].x1f = stb__arial_11_latin_ext_x[i] + stb__arial_11_latin_ext_w[i] + 0.5f;
            font[i].y1f = stb__arial_11_latin_ext_y[i] + stb__arial_11_latin_ext_h[i] + 0.5f;
            font[i].advance = stb__arial_11_latin_ext_a[i]/16.0f;
        }
    }
}

#ifndef STB_SOMEFONT_CREATE
#define STB_SOMEFONT_CREATE              stb_font_arial_11_latin_ext
#define STB_SOMEFONT_BITMAP_WIDTH        STB_FONT_arial_11_latin_ext_BITMAP_WIDTH
#define STB_SOMEFONT_BITMAP_HEIGHT       STB_FONT_arial_11_latin_ext_BITMAP_HEIGHT
#define STB_SOMEFONT_BITMAP_HEIGHT_POW2  STB_FONT_arial_11_latin_ext_BITMAP_HEIGHT_POW2
#define STB_SOMEFONT_FIRST_CHAR          STB_FONT_arial_11_latin_ext_FIRST_CHAR
#define STB_SOMEFONT_NUM_CHARS           STB_FONT_arial_11_latin_ext_NUM_CHARS
#define STB_SOMEFONT_LINE_SPACING        STB_FONT_arial_11_latin_ext_LINE_SPACING
#endif

