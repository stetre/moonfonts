// Font generated by stb_font_inl_generator.c (4/1 bpp)
//
// Following instructions show how to use the only included font, whatever it is, in
// a generic way so you can replace it with any other font by changing the include.
// To use multiple fonts, replace STB_SOMEFONT_* below with STB_FONT_courier_11_latin_ext_*,
// and separately install each font. Note that the CREATE function call has a
// totally different name; it's just 'stb_font_courier_11_latin_ext'.
//
/* // Example usage:

static stb_fontchar fontdata[STB_SOMEFONT_NUM_CHARS];

static void init(void)
{
    // optionally replace both STB_SOMEFONT_BITMAP_HEIGHT with STB_SOMEFONT_BITMAP_HEIGHT_POW2
    static unsigned char fontpixels[STB_SOMEFONT_BITMAP_HEIGHT][STB_SOMEFONT_BITMAP_WIDTH];
    STB_SOMEFONT_CREATE(fontdata, fontpixels, STB_SOMEFONT_BITMAP_HEIGHT);
    ... create texture ...
    // for best results rendering 1:1 pixels texels, use nearest-neighbor sampling
    // if allowed to scale up, use bilerp
}

// This function positions characters on integer coordinates, and assumes 1:1 texels to pixels
// Appropriate if nearest-neighbor sampling is used
static void draw_string_integer(int x, int y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0, cd->t0); glVertex2i(x + cd->x0, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t0); glVertex2i(x + cd->x1, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t1); glVertex2i(x + cd->x1, y + cd->y1);
        glTexCoord2f(cd->s0, cd->t1); glVertex2i(x + cd->x0, y + cd->y1);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance_int;
    }
    glEnd();
}

// This function positions characters on float coordinates, and doesn't require 1:1 texels to pixels
// Appropriate if bilinear filtering is used
static void draw_string_float(float x, float y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0f, cd->t0f); glVertex2f(x + cd->x0f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t0f); glVertex2f(x + cd->x1f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t1f); glVertex2f(x + cd->x1f, y + cd->y1f);
        glTexCoord2f(cd->s0f, cd->t1f); glVertex2f(x + cd->x0f, y + cd->y1f);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance;
    }
    glEnd();
}
*/

#ifndef STB_FONTCHAR__TYPEDEF
#define STB_FONTCHAR__TYPEDEF
typedef struct
{
    // coordinates if using integer positioning
    float s0,t0,s1,t1;
    signed short x0,y0,x1,y1;
    int   advance_int;
    // coordinates if using floating positioning
    float s0f,t0f,s1f,t1f;
    float x0f,y0f,x1f,y1f;
    float advance;
} stb_fontchar;
#endif

#define STB_FONT_courier_11_latin_ext_BITMAP_WIDTH         256
#define STB_FONT_courier_11_latin_ext_BITMAP_HEIGHT         80
#define STB_FONT_courier_11_latin_ext_BITMAP_HEIGHT_POW2   128

#define STB_FONT_courier_11_latin_ext_FIRST_CHAR            32
#define STB_FONT_courier_11_latin_ext_NUM_CHARS            560

#define STB_FONT_courier_11_latin_ext_LINE_SPACING           5

static unsigned int stb__courier_11_latin_ext_pixels[]={
    0x80300400,0x00601000,0x19804603,0x10818060,0x8880aa88,0x80808841,
    0x40202031,0x00180019,0x20818088,0x03006000,0x18022022,0xa9844200,
    0x01000bab,0x53038872,0x98380660,0x1c19943b,0x5c4188a8,0x98289a82,
    0x54188a81,0xa8188c2a,0x1502b809,0x42880b98,0x2603500b,0xba981302,
    0x829a8280,0x982941aa,0x55101501,0x4c054cc1,0x5c04c4c1,0x204c4ca2,
    0x20cdc1bb,0x00a80542,0x110c3355,0x26310ccc,0x22e614a0,0x2614a0b9,
    0x14a0b98b,0x982e62e6,0x2e62e61b,0x21731730,0x220b98b9,0x4c41b981,
    0x22e60840,0x0aaa20b9,0x30210373,0x441b9837,0x30dcc2aa,0x2e617317,
    0x2aa20b98,0x41731731,0x31731aa8,0x08d54417,0x82618113,0x550a099b,
    0x22703510,0x260b85c5,0x4e62e239,0x8a281108,0x8a281108,0x8a281108,
    0x8514331a,0x221450a2,0x30cc6a0a,0x0654dc73,0x2a28e145,0x654dc331,
    0x8d466350,0x46a28e19,0x51428a19,0x50a28e28,0x38a1451c,0x0b85c04c,
    0x0130a026,0x37098375,0x850284c1,0x4389c4a2,0x871388a2,0x871388a2,
    0x451c28a2,0x0a285142,0x941c2826,0x31450e09,0x82670a01,0x270a70a3,
    0x8a385009,0x80a85142,0x450150a2,0x80980542,0x28098509,0x0aa06a66,
    0x350622a5,0x51450a01,0x51428a14,0x21450a28,0x451c28a2,0x0a285142,
    0x941c2826,0x51451218,0x89c28554,0x429c2921,0x42855453,0x051428a3,
    0x10514551,0x51051455,0x5405e4c5,0x514dc409,0x26615544,0x9828dc42,
    0x9aca8a03,0x851c28a2,0x8a1470a2,0x8e1451c2,0x8e1470a3,0x4295e542,
    0x0a6aa283,0x51453147,0x28a6aa38,0x2299c29c,0x851c70a2,0x38a188a3,
    0x238a188a,0x04c28622,0xb8330398,0x3370a288,0x40d56445,0x2280a009,
    0x2aa0cbaa,0x065d541a,0xbaa83555,0x886aaa0c,0x0d5544aa,0x55506aaa,
    0x4aa88503,0x5550a050,0x2239ba83,0xa88a04aa,0x512aa24a,0x25544737,
    0x55506aaa,0x5154e443,0x54e44355,0xc886aaa2,0x9804c2a9,0x88981300,
    0x26e0ca9b,0xca880239,0xba81aa81,0x00000001,0x00000000,0x50018800,
    0x005d4437,0x75100040,0x00200001,0x00000000,0xa8800000,0x2020001c,
    0x0005913b,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x22600000,0x1100c000,0x11008800,0x88080410,
    0x000880aa,0x41800088,0x00000110,0xaa880041,0x40808001,0x08c00110,
    0x10aae600,0x30006022,0x4c044055,0x80021100,0x05d4c299,0x0a9980cc,
    0x2aa20ee2,0x220cd440,0xb985303a,0x2a660b98,0x2605dc40,0x04c4c0a9,
    0x2a0ae066,0x2205d4c1,0x5c0ae0bb,0x5dc47142,0x85711730,0xb982b829,
    0xb882b883,0x2b85140b,0x83b980a8,0x20a6e052,0x4c0ea02a,0x2e61b982,
    0x2aa20b98,0x841ba981,0x22155441,0x262e61aa,0x5044440b,0x46e25514,
    0x71398618,0xa85c4e61,0x757532aa,0x844aaaa1,0x2aa09808,0x05404c2a,
    0x30514088,0x1301ba81,0x1102ab98,0xaba8a250,0x88855731,0x04422088,
    0x22222044,0x441aa880,0x0cc6a1aa,0x2048a145,0x70654dc2,0x51448a14,
    0x5144aaa8,0x53098894,0x70a2705c,0x4a3328a2,0x46650989,0xa9a87138,
    0xbc886653,0x26a2a880,0x4d428a3a,0x4cc1543a,0xaa85141a,0x4c2ddc2a,
    0x89c45140,0x2a1c4e23,0x1c4e22aa,0x29228914,0x0131451c,0x98e098a0,
    0x51401300,0x8a15c4c4,0x50aae262,0x20750555,0x4c22843a,0x28a14208,
    0x20a11554,0x5450c409,0xaa85142a,0x54414cc2,0x2228942a,0x30a250a1,
    0x22851281,0x50c45142,0x20130a28,0x8a385009,0x8a0880a2,0x2aa29218,
    0x88a28050,0x88a38539,0x55542aa9,0x03501a82,0x20e02607,0x38e210a2,
    0xa9c88130,0x1471c422,0x53371c42,0x5bb85144,0x8e4c50c4,0xb770262a,
    0x228a1450,0x21450a18,0x1c280a02,0x22051147,0x453550a1,0x20288a29,
    0x8555b0a3,0x54dc1aaa,0x4c154dc2,0x50981300,0x2284c098,0x2720cbaa,
    0x150a132a,0x55390620,0x2720dccc,0x88e66e2a,0x44a0ca9b,0x440d5542,
    0x28940980,0x55065d54,0x0d554197,0x28832eaa,0x2aa20510,0x2a0d5544,
    0x0a6e23ab,0x439ba850,0x55543aba,0x15800021,0x05e4c009,0xaac82f26,
    0xac82f264,0x2b20004a,0x1980aa4a,0x27700000,0x64c042c8,0x04c00551,
    0x8e4c6f2a,0x0000002a,0x2a1d5d40,0x200003ab,0x2ea20100,0x00040100,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x10000000,
    0x00000040,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0xb88b9800,0x0440aaa0,0x82000010,0x5cca60c0,
    0x8060c000,0x0e13382a,0x05dc4193,0xc8030288,0x0b89b980,0x00041022,
    0x00044022,0x20c0d5d4,0x00604c20,0x01300000,0x0a280000,0x20510373,
    0x41ab81ab,0x82b80989,0x44286c28,0x1c0a80bb,0x984c7138,0x44098330,
    0x20540a01,0x5022261b,0x20a9986a,0x0aa983a8,0x154054cc,0x20ba986a,
    0x5440a809,0x88510263,0x982660ba,0x88aea0aa,0x8d554099,0x83880ba9,
    0x4331a8a2,0x2111abba,0x5cc08808,0x5cca62aa,0x9d435750,0x994c0882,
    0x2098310b,0x4c261309,0x406204c1,0x02ee20c9,0x215c4c35,0x0d5d41aa,
    0x30260375,0x45505557,0x31431aba,0x51555cc1,0x5cc26357,0x4628a2aa,
    0x983328a1,0x40445003,0x28a28108,0x44a3511c,0x49aa8713,0x850d8514,
    0x214c5409,0x286c49aa,0x92310a1c,0x88131209,0x03102601,0x64064c15,
    0x2a809839,0x5141a998,0x8262cca8,0x50262a9a,0x22802614,0x26a248e2,
    0x26e37531,0xc8804a0a,0x4c455550,0x228a0abb,0x133151c2,0x50228514,
    0x2614ea06,0x1142a940,0x219853a8,0x13098a28,0x18813062,0x0c409831,
    0x5071304c,0x998130a2,0x942aa882,0x260bb981,0x81314aa0,0x20413032,
    0x54757032,0x5caa6a19,0x814ce451,0xa88a18a8,0x2aa62acc,0x64dc70a1,
    0x20285142,0x298a82ab,0x1619304c,0x414c5405,0x130d5543,0x7950cc26,
    0x06eaee25,0xc8018813,0x23931d88,0x3370261b,0xab851445,0x260bb982,
    0x654aa2e0,0x260aae1b,0x02ab8260,0x25146312,0xa80a28a2,0x03338a18,
    0x712aa20a,0xcbaa8633,0x450a6aa0,0x04c2a941,0x429aa808,0x4c130552,
    0x26510aad,0x10088150,0x22310260,0x04010571,0x8e66e04c,0x8a0ca9b8,
    0x82614c41,0x3141410b,0x22826098,0x3302ea61,0xab86aa63,0x555c28a2,
    0x55435551,0x00c41acc,0x03acaab8,0x25564c00,0xbca96193,0x93000cc1,
    0x08014161,0x19809808,0x7712bca8,0x80cc0375,0xb8de5419,0x98085913,
    0x0c444aac,0x055c3795,0x25564c31,0x59303795,0x00000895,0x20644644,
    0x00082000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x2a000000,0x261aa881,0x52881802,0x80820000,
    0x02aab980,0x10400001,0x0804c030,0x10406200,0x4010c1d4,0x00406000,
    0x20375000,0x100a83ba,0x01000180,0x2aa88088,0x51228108,0x8602a011,
    0x5c414a08,0x3503a80b,0x80d41450,0x40ba981a,0x039a83a8,0x73066055,
    0x5700a817,0x77128850,0x4c4c1a83,0x4414c0a0,0x05dc40bb,0x41b98154,
    0x203501a8,0x80bb880a,0xaa88dc1a,0xa9b851c0,0x56c0130c,0x05c4e639,
    0x1ba82e17,0xaab98110,0x03280982,0x55573026,0xaab98110,0x0980dd42,
    0xa8e28110,0x0555c41b,0x0831450a,0x5751aba8,0x01300883,0x5414cc02,
    0x80dd4331,0x101ba808,0x31710040,0x209804c7,0x04c700a3,0x0a130a27,
    0x06a6a0aa,0x06a66145,0x35330557,0x35350a28,0x20aa0a28,0x54d41a99,
    0x415428a1,0x262850e2,0x20d4d41a,0x2aa04c09,0x20d4cc49,0x4cdc1a9a,
    0x0550e142,0x05505555,0xaaa85555,0x14514262,0x24862155,0xa8296028,
    0x99813503,0x22555cc2,0x85551032,0x85551062,0x4aab9832,0x82998194,
    0x2ae62aa8,0x26628a4a,0x14514282,0x95573288,0x8a04c098,0x73155440,
    0x399b8955,0x42998e14,0x85330a18,0x8a188a18,0x4531450a,0x2a14d542,
    0x0d55c3ab,0xb83980d4,0xb8062299,0x4c51442a,0x28a24aac,0x8062155c,
    0x299b82ab,0x406228a2,0x4299b8a3,0x52145142,0x04c03128,0x8a205026,
    0x89dc0622,0x4dc70a2c,0x5c286229,0x22862299,0x571a8a18,0x039ba875,
    0x00a0620a,0x2e026013,0x1d554399,0x2a6e218a,0x2e21500c,0x418a0ca9,
    0x83143aaa,0x26e2399b,0x8eaaa0ca,0x266e0ba9,0x4e613143,0x2a15c40a,
    0x2604c3aa,0x7114d540,0x55541953,0xaa882603,0x2a1ccdc4,0x1ccdc1aa,
    0x55506aaa,0x20a28543,0x80ba8818,0x980e4c19,0x072a20bc,0x020b2277,
    0x01095593,0xc9808110,0xc98104aa,0x644ee4aa,0x20020042,0x3225913b,
    0x814262aa,0xbca81009,0x40037951,0x00400400,0x802c89dc,0x0005913b,
    0x03263220,0x00000033,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x10000000,0x000c40a8,
    0x54404401,0x4c71700a,0x04d4c098,0x5530a600,0x2a21bc81,0x4002000a,
    0x89100989,0x01a80aa8,0x502aa202,0x9a98040a,0x88382000,0x082154c0,
    0x22102010,0x4d540000,0x1a80aaa1,0x7710e1c4,0x53303301,0x11011083,
    0x06200811,0x20402ae2,0x22221aba,0xaa86aea1,0x80b81c42,0x4c72a600,
    0x50082aab,0x42010935,0x40d4d408,0x40ab8818,0x4cd4189a,0x2ae614a3,
    0x1440cc09,0xba88e251,0x2270e6a0,0x84405d45,0x08922408,0x40884431,
    0x44a22aa8,0x2a05cdc3,0x0d4d41a9,0x26aa0222,0x25d540c4,0x02202206,
    0x35350222,0x514399b8,0x1141a9a8,0x4a21a9a8,0x0eaae638,0x10883533,
    0x55409ab8,0x81c24d42,0x04444108,0x41111145,0x09b84c18,0x389c4154,
    0x89c47124,0x511c4e23,0x42628a14,0x2228620a,0x29ac88a1,0x04418114,
    0x40b88187,0x305c40b8,0x904c7557,0x55cc18a8,0xab98143a,0x4c45143a,
    0x15544088,0x01826ae6,0x21451c42,0x21357302,0x228a2a9b,0x82e22a9b,
    0x4c431152,0x91214502,0x11450a28,0x51419537,0x8620a84c,0x51428622,
    0x41106028,0x980980c1,0x22620980,0x5c482608,0x0444c42a,0x8988a6aa,
    0xaa851408,0x3828a22a,0x154e4030,0x01595145,0x7550a207,0x20982889,
    0xa9b851b8,0x3870a282,0x80a28514,0x832eaa09,0x55543baa,0x8a0d5541,
    0x0614d542,0x2030666a,0x09809809,0x2ae15554,0x5418a1c9,0xa81882aa,
    0x65d542aa,0x26e204c0,0xb88140ca,0x32618829,0x050042a9,0x3038500e,
    0x20d56441,0xbaa8288a,0x2198150c,0x2aa0cbaa,0x000200cb,0x46440000,
    0xbba800c8,0x21bba801,0x2eea2bba,0x020aeea2,0x25564c04,0x04013008,
    0x2000c400,0x20100aca,0x20260009,0x2ab20aca,0x2ab21303,0x004aeea3,
    0x40072277,0x00000100,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x98000000,0x4044409a,
    0x5d4ea31a,0x5302aa21,0x0d44c415,0x11102aa6,0x04d4c040,0x51052802,
    0x44014c53,0x01001083,0x54400555,0x021aa881,0x84000000,0x08221008,
    0x570dd4c0,0x00110855,0x73155440,0x14901731,0x89c53591,0x8082861b,
    0x96417129,0x56440882,0x30819829,0x11009a81,0x804a0150,0x0ca9b850,
    0x175050f6,0x44cc7530,0x3238a0a9,0x06602662,0x4c5700cc,0x4cd439ac,
    0x50026a0c,0x510c4544,0xaa83a8e2,0x51428e0a,0x188889ec,0x04c1328a,
    0x06a6a143,0x0c450a19,0x0a283533,0x71288111,0x4cc09ab8,0x2066221a,
    0x4cdc299c,0x20438263,0x31055008,0x0a861198,0x18621700,0x44621862,
    0x04c26382,0x004d5c47,0x14189c85,0x4ca18185,0x5c228a00,0x28a2aaaa,
    0x22861885,0x0a550a18,0x55510445,0x9ac88a28,0x5e445142,0x4c2aa881,
    0x4c264850,0x51218920,0x26205c41,0x0660b882,0x30e2a883,0xa9c45533,
    0x7314ce22,0x2188a486,0x0a0880c4,0x2145062a,0x55146601,0x41305141,
    0x18943222,0x4451982a,0x853150a1,0x45144222,0x8a0c88c8,0x10185142,
    0x21544145,0x51209864,0x4c2c4535,0x4c154dc0,0x30c4cc60,0x8b880a94,
    0x5337312a,0x94aa2e22,0x506aae1b,0x11018535,0x320c4414,0x4c060cba,
    0x51418a62,0x01aaa9ec,0x2a2baa8a,0x5554299c,0x5222a941,0x32a6e229,
    0x50a28080,0x4dc41975,0x832a6e22,0x54e4c110,0x80e4d5c2,0x502606a2,
    0x98130511,0x2aae2199,0x26650452,0x4ca18862,0x14575329,0x14dc4280,
    0x0c440a6e,0x8198180a,0x555439ba,0x01530001,0x864c0000,0x13000104,
    0x00c88c88,0x26a00040,0x51008001,0x2bba8017,0xba872277,0x2a60002b,
    0x9839881a,0x2039881b,0x0dcc01b9,0x15100804,0x37750185,0x020aab22,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x20aaa840,0xc8351020,0x822223aa,0x0d5442aa,
    0x550106a6,0xb9805cc3,0x445c002a,0x4c155cc3,0x15511aba,0x5128b983,
    0x10406015,0x885d5d44,0x82222020,0x4401c110,0x30d5dd40,0x01088135,
    0x2ae0e601,0x20383981,0x98554c1a,0x220a3502,0x2666170c,0x111280a8,
    0x8a188c11,0x030cc664,0x05644131,0x81305128,0x1284aac8,0x44518545,
    0x44113070,0x2e660600,0x84c630a9,0xa9a82e2a,0x131c4a24,0x47335011,
    0x14445198,0xa82aee62,0xa98181a9,0x82230302,0x20510888,0x2aea008a,
    0x22314260,0x00109831,0x9c280633,0x02e22ab8,0x21503339,0x0a22a002,
    0x0d45142a,0x88818022,0x8aeea20a,0x8c255752,0x3114d540,0x88a28371,
    0x155429ac,0xac886a2a,0x2aeea229,0x44c14312,0x18183860,0x9954dc57,
    0x00535903,0x54609a85,0x50022832,0x52850141,0x14502604,0x55114b2a,
    0x43aab855,0x571452ca,0x22060088,0x2a503008,0x20ddcc09,0x4e622aaa,
    0x0a285142,0x2bab8e21,0x0a99c514,0x19982862,0x4c0c0986,0x8142880c,
    0x985008a2,0x0c44c4c3,0x1440008a,0x26029c28,0x14505140,0x8a0a2804,
    0x844118a2,0x88440c18,0x5d54c0c1,0xa9b80c1a,0x2a0d56c2,0x428a0cba,
    0x466a2a9c,0x32aa28a1,0x06aaa1ac,0x20aaa606,0x83838981,0x23314502,
    0x404c1aab,0x104c1999,0x55d40d80,0xb88eaa23,0x44aeea0a,0x3260c88c,
    0x440880aa,0x3260c88c,0x32aa20aa,0x3757713a,0xbb895dd4,0x555511ba,
    0x005dc400,0x19100008,0xaaa80191,0x911913ac,0x54001041,0x206b22bb,
    0x644e2bba,0x32a75590,0x06446441,0x000ca880,0x20c444c0,0x0c040200,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x2aa60100,0x01108040,0x220aaa02,0x10b89c40,
    0x20730155,0x8045282a,0x22711aaa,0x42e2710b,0x4aa3512a,0x155731b8,
    0x885d5d44,0x2ae6388b,0x15570402,0x350b894c,0x40aa88d4,0x220b89b9,
    0xba86aea4,0x01555cc0,0x5c355570,0x441040aa,0x80411088,0x1712ba9a,
    0x221a9a81,0x4d543912,0x54cc0444,0x04428941,0x22025030,0x19941540,
    0x144e144a,0x0c426225,0x2318a285,0x51428a09,0x850c1510,0x191cc50c,
    0x83328044,0x82a80c1a,0x214060a2,0x55cc38a2,0x22553709,0x1110c88c,
    0x433731c3,0x5143aab9,0x81710228,0x82a82aa8,0x417301b8,0x5017100a,
    0x02a82845,0x2aa89877,0x188a8514,0x445408c2,0x2a228942,0x2a826181,
    0x04d4c4c5,0x102aa011,0x29881833,0x203018a8,0x20c2818a,0x51285103,
    0x2850c44c,0x14088988,0x104c0285,0x82f26145,0x419301b8,0x01300ba8,
    0x1a814371,0xaa988570,0x2e04c4c2,0x570182aa,0x544ab875,0xa8355302,
    0x4d546298,0x1ce40220,0x37030a2e,0x442ab855,0x1d542bba,0x0e050a14,
    0xaaa80a62,0x2aaa8141,0x2aa25d54,0x2e209829,0x2ae60ca9,0x20c42220,
    0x02601881,0x98509855,0x5c098980,0x282a82a9,0x28a03022,0x0d442894,
    0x8c552806,0x44220988,0x7550c4a1,0x144540c3,0x0501818a,0x56541314,
    0x570eab20,0x03595000,0xba800002,0x8771002b,0x2a1babb8,0x0eab62bb,
    0x202a5775,0x2ee63aac,0xb0645260,0x930aa122,0x0bb98555,0x4c322322,
    0x4330351c,0x4864c1ac,0x7712b8ee,0x5c726375,0x5dd47221,0x4c722771,
    0x90084aac,0x2aac8835,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x44200000,0x84204440,
    0x81040440,0x000029aa,0x82002000,0x105400a0,0x80baaaa8,0x590aaaa8,
    0x4198b257,0xaaaa801a,0x5555532a,0x00004c4c,0x00000000,0x00000000,
    0x1c8b8000,0xab8a6b22,0x105c42bb,0x88a87319,0x22988a61,0x53350738,
    0xb88aa61c,0x6542ea23,0x26886a1a,0x21300a99,0x1333313d,0x315caeae,
    0x5c46a571,0x000003bb,0x00000000,0x00000000,0x20000000,0x18a280ca,
    0x80981313,0x388a282b,0x323260c4,0x41873570,0x82a6639b,0x33315c2b,
    0x03128aa1,0x04444022,0x002a1313,0x00000000,0x00000000,0x00000000,
    0x54000000,0x318a2848,0x44098131,0x12aab83a,0x2a0dc453,0x126aa48b,
    0x2a154c35,0x184622a1,0x03501186,0x00000000,0x00000000,0x00000000,
    0x00000000,0x9c800000,0x32232239,0x45353370,0x11b32bba,0x1101001b,
    0x89a83944,0x00000222,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
};

static signed short stb__courier_11_latin_ext_x[560]={ 0,2,1,0,1,0,1,2,2,1,0,0,1,0,
2,1,1,1,0,0,1,0,1,1,1,1,2,1,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,2,0,0,0,0,0,1,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,2,0,0,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,2,1,0,0,0,
2,0,1,0,0,0,0,0,0,-1,1,0,1,1,2,0,0,2,2,1,1,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,1,1,1,1,-1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,1,1,1,
1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,0,0,
0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1, };
static signed short stb__courier_11_latin_ext_y[560]={ 8,1,2,1,1,1,2,2,2,2,2,2,6,4,
6,1,1,1,1,1,2,2,1,2,1,1,3,3,2,4,2,2,1,2,2,2,2,2,2,2,2,2,2,2,
2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,2,1,10,1,3,2,3,2,3,2,3,2,1,
1,2,2,3,3,3,3,3,3,3,2,3,3,3,3,3,3,2,2,2,4,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,8,3,1,2,3,2,
2,2,2,2,1,3,5,4,2,1,0,2,1,1,1,3,2,4,7,1,1,3,1,1,1,3,0,0,0,1,
0,0,2,2,0,0,0,0,0,0,0,0,2,1,0,0,0,1,0,3,2,0,0,0,0,0,2,2,1,1,
1,2,2,1,3,3,1,1,1,2,1,1,1,2,2,2,1,1,1,2,2,2,3,1,1,1,2,1,2,2,
1,2,0,1,2,3,0,1,0,1,0,2,0,1,0,2,2,2,1,2,0,1,0,2,2,3,0,1,0,1,
0,1,0,2,2,1,0,0,2,2,1,2,1,2,0,1,2,1,0,3,2,1,0,1,2,2,3,0,0,2,
2,2,2,2,2,2,2,0,1,2,3,0,1,2,2,3,1,2,0,1,0,1,2,3,0,1,2,3,0,1,
0,1,0,1,2,3,0,1,2,2,0,2,2,2,0,2,1,2,0,1,0,1,0,1,2,3,0,1,0,1,
0,0,1,0,2,0,1,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,2,3,1,1,1,1,1,1,1,1,1,1,1,1,1,1,3,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,0,
1,0,1,0,1,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,-2,-1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1, };
static unsigned short stb__courier_11_latin_ext_w[560]={ 0,2,4,5,4,5,4,2,3,3,4,6,3,5,
2,4,4,4,5,5,4,5,4,4,4,4,2,3,5,6,5,4,4,6,6,6,6,6,6,6,6,4,6,6,
6,6,6,5,6,6,6,5,6,6,6,6,6,6,4,2,4,2,4,7,2,6,6,6,6,6,5,6,6,5,
4,6,5,6,6,6,6,6,6,5,6,6,6,6,6,6,4,2,2,2,5,6,6,6,6,6,6,6,6,6,
6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,0,2,4,6,5,6,
2,6,4,6,4,5,6,5,6,7,4,6,4,4,2,6,6,2,2,4,4,6,6,6,6,4,6,6,6,6,
6,6,6,6,6,6,6,6,4,4,4,4,7,6,5,5,5,5,5,4,6,6,6,6,6,6,6,5,6,6,
6,6,6,6,6,6,6,6,6,6,5,5,5,5,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,
6,6,6,6,7,6,6,6,6,6,6,6,6,6,6,6,7,6,6,6,6,6,6,6,6,6,6,6,6,6,
6,6,6,6,6,6,6,6,6,6,4,5,4,5,4,5,4,5,4,5,6,5,6,5,6,6,6,6,5,6,
5,6,5,6,5,6,5,6,6,6,6,6,6,6,6,5,5,6,5,6,5,6,6,6,6,6,6,6,6,6,
5,5,5,5,5,5,5,5,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,
6,4,4,4,4,4,4,5,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,
6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,
6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,4,5,5,
6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,
6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,
6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,
6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,
6,6,6,6,6,6, };
static unsigned short stb__courier_11_latin_ext_h[560]={ 0,8,3,8,8,8,7,3,8,8,4,6,4,2,
3,8,8,7,7,8,6,7,8,7,8,8,6,7,6,3,6,7,8,6,6,7,6,6,6,7,6,6,7,6,
6,6,6,7,6,8,6,7,6,7,6,6,6,6,6,8,8,8,4,1,3,6,7,6,7,6,6,7,6,7,
9,6,6,5,5,6,7,7,5,6,7,6,5,6,5,7,5,8,8,8,2,7,7,7,7,7,7,7,7,7,
7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,0,7,7,6,5,6,
8,7,1,7,4,5,3,2,7,1,4,6,5,5,3,7,7,2,3,5,4,5,7,7,7,7,8,8,8,7,
8,8,6,8,8,8,8,8,8,8,8,8,6,7,9,9,9,8,9,4,7,9,9,9,9,8,6,7,8,8,
8,7,7,8,6,7,8,8,8,7,7,7,7,6,7,6,8,8,8,7,7,6,6,8,8,8,7,9,8,8,
7,7,8,8,8,7,9,8,9,8,9,7,9,8,8,7,6,7,7,7,8,8,8,7,8,7,8,8,9,9,
9,9,9,8,8,9,8,8,6,6,7,6,7,6,8,7,8,9,8,5,7,9,9,9,8,8,5,8,8,8,
8,6,6,6,6,6,6,8,7,8,7,8,7,6,7,7,8,7,9,8,9,8,6,6,8,7,8,7,8,7,
9,8,9,8,8,7,9,8,9,9,8,7,6,7,9,7,8,7,9,8,9,8,9,8,8,7,8,8,8,9,
8,8,7,8,6,8,7,6,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,8,7,7,7,
7,7,7,7,7,7,7,7,7,7,7,6,7,7,7,7,7,7,7,7,7,7,7,7,7,8,6,7,7,7,
7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,8,8,8,7,9,
8,9,8,9,8,9,9,9,9,9,9,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,
7,7,7,7,7,7,7,7,7,7,10,10,8,8,9,8,7,7,7,7,7,7,7,7,7,7,7,7,7,7,
7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,
7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,
7,7,7,7,7,7, };
static unsigned short stb__courier_11_latin_ext_s[560]={ 253,136,120,179,161,227,181,125,12,8,84,
213,94,137,110,156,134,228,233,250,189,1,238,21,233,222,253,119,148,113,81,
33,190,199,120,38,227,206,220,239,134,194,207,182,175,168,161,45,154,94,141,
149,127,246,113,106,99,92,87,253,89,153,89,151,253,41,98,28,105,14,8,
112,246,123,122,228,222,15,8,202,186,193,234,175,200,161,246,147,28,7,241,
101,104,107,128,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,
26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,253,253,51,
68,35,48,212,91,159,142,69,58,103,137,14,143,74,126,46,41,253,221,214,
134,253,64,98,51,174,167,160,155,139,232,113,129,50,218,181,22,215,200,172,
49,63,178,153,173,69,35,148,161,167,212,180,79,240,186,193,206,219,36,215,
197,71,85,190,170,84,120,195,142,127,166,197,114,108,102,96,75,84,188,225,
246,239,58,51,77,154,23,1,16,156,22,29,43,247,49,158,165,204,30,28,
183,56,75,8,72,1,42,146,44,91,121,128,149,106,99,92,135,78,163,64,
57,49,42,173,154,141,15,8,127,1,243,84,62,79,56,91,35,207,234,195,
110,185,22,21,35,35,29,146,139,1,129,123,116,110,106,113,119,209,55,62,
82,63,68,56,56,65,168,42,8,22,28,83,1,15,240,99,133,219,210,207,
203,193,177,213,173,200,160,154,191,226,136,232,246,117,184,140,77,21,70,77,
37,63,129,134,247,96,35,15,222,84,91,98,239,105,112,217,124,235,142,229,
240,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,1,26,26,147,
26,26,26,26,26,26,26,26,26,26,26,26,26,14,1,26,26,26,26,26,
26,26,26,26,26,26,26,26,166,21,26,26,26,26,26,26,26,26,26,26,
26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,179,186,
214,136,116,200,103,226,89,233,76,69,62,55,48,41,26,26,26,26,26,26,
26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,
26,26,26,8,1,28,8,15,70,26,26,26,26,26,26,26,26,26,26,26,
26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,
26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,
26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,
26,26,26,26,26,26,26,26,26, };
static unsigned short stb__courier_11_latin_ext_t[560]={ 10,21,72,21,30,21,49,72,40,40,72,
65,72,72,72,30,30,49,49,21,65,57,21,57,21,21,49,49,65,72,65,
57,21,65,65,57,65,65,65,49,65,65,49,65,65,65,65,57,65,21,65,
49,65,49,65,65,65,65,65,1,21,30,72,72,60,65,49,65,49,65,65,
49,57,49,1,57,57,72,72,57,49,49,65,57,49,57,65,57,72,57,65,
21,21,21,72,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,
57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,10,30,57,
65,72,65,21,49,72,49,72,72,72,72,57,72,72,57,72,72,56,49,49,
72,65,72,72,72,49,49,49,49,30,30,30,49,30,30,57,30,21,21,21,
21,21,30,21,30,57,49,1,1,1,30,1,72,40,1,1,1,1,30,57,
40,30,30,30,40,49,30,57,40,30,30,30,40,40,40,40,65,40,57,30,
30,30,40,40,57,57,40,40,40,40,1,30,30,40,49,21,21,30,40,11,
30,11,21,12,40,12,21,30,40,57,40,40,40,30,30,30,40,30,40,30,
30,11,11,1,1,1,30,31,1,31,21,57,57,40,57,40,65,21,40,21,
1,21,72,49,1,11,1,21,21,72,21,21,21,21,57,57,57,57,65,65,
21,49,21,49,21,40,57,49,49,21,49,1,22,11,11,57,57,11,40,11,
40,11,40,1,11,1,11,11,40,1,11,1,1,11,40,57,49,11,49,11,
40,11,11,1,11,1,21,21,40,11,11,11,1,11,11,40,11,57,11,40,
57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,49,57,57,11,
57,57,57,57,57,57,57,57,57,57,57,57,57,49,65,57,57,57,57,57,
57,57,57,57,57,57,57,57,11,65,57,57,57,57,57,57,57,57,57,57,
57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,11,11,
11,49,1,11,1,11,1,11,1,1,1,1,1,1,57,57,57,57,57,57,
57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,
57,57,57,1,1,21,22,1,11,57,57,57,57,57,57,57,57,57,57,57,
57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,
57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,
57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,
57,57,57,57,57,57,57,57,57, };
static unsigned short stb__courier_11_latin_ext_a[560]={ 93,93,93,93,93,93,93,93,
93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,
93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,
93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,
93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,
93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,
93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,
93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,
93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,
93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,
93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,
93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,
93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,
93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,
93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,
93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,
93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,
93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,
93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,
93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,
93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,
93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,
93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,
93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,
93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,
93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,
93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,
93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,
93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,
93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,
93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,
93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,
93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,
93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,
93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,
93,93,93,93,93,93,93,93, };

// Call this function with
//    font: NULL or array length
//    data: NULL or specified size
//    height: STB_FONT_courier_11_latin_ext_BITMAP_HEIGHT or STB_FONT_courier_11_latin_ext_BITMAP_HEIGHT_POW2
//    return value: spacing between lines
static void stb_font_courier_11_latin_ext(stb_fontchar font[STB_FONT_courier_11_latin_ext_NUM_CHARS],
                unsigned char data[STB_FONT_courier_11_latin_ext_BITMAP_HEIGHT][STB_FONT_courier_11_latin_ext_BITMAP_WIDTH],
                int height)
{
    int i,j;
    if (data != 0) {
        unsigned int *bits = stb__courier_11_latin_ext_pixels;
        unsigned int bitpack = *bits++, numbits = 32;
        for (i=0; i < STB_FONT_courier_11_latin_ext_BITMAP_WIDTH*height; ++i)
            data[0][i] = 0;  // zero entire bitmap
        for (j=1; j < STB_FONT_courier_11_latin_ext_BITMAP_HEIGHT-1; ++j) {
            for (i=1; i < STB_FONT_courier_11_latin_ext_BITMAP_WIDTH-1; ++i) {
                unsigned int value;
                if (numbits==0) bitpack = *bits++, numbits=32;
                value = bitpack & 1;
                bitpack >>= 1, --numbits;
                if (value) {
                    if (numbits < 3) bitpack = *bits++, numbits = 32;
                    data[j][i] = (bitpack & 7) * 0x20 + 0x1f;
                    bitpack >>= 3, numbits -= 3;
                } else {
                    data[j][i] = 0;
                }
            }
        }
    }

    // build font description
    if (font != 0) {
        float recip_width = 1.0f / STB_FONT_courier_11_latin_ext_BITMAP_WIDTH;
        float recip_height = 1.0f / height;
        for (i=0; i < STB_FONT_courier_11_latin_ext_NUM_CHARS; ++i) {
            // pad characters so they bilerp from empty space around each character
            font[i].s0 = (stb__courier_11_latin_ext_s[i]) * recip_width;
            font[i].t0 = (stb__courier_11_latin_ext_t[i]) * recip_height;
            font[i].s1 = (stb__courier_11_latin_ext_s[i] + stb__courier_11_latin_ext_w[i]) * recip_width;
            font[i].t1 = (stb__courier_11_latin_ext_t[i] + stb__courier_11_latin_ext_h[i]) * recip_height;
            font[i].x0 = stb__courier_11_latin_ext_x[i];
            font[i].y0 = stb__courier_11_latin_ext_y[i];
            font[i].x1 = stb__courier_11_latin_ext_x[i] + stb__courier_11_latin_ext_w[i];
            font[i].y1 = stb__courier_11_latin_ext_y[i] + stb__courier_11_latin_ext_h[i];
            font[i].advance_int = (stb__courier_11_latin_ext_a[i]+8)>>4;
            font[i].s0f = (stb__courier_11_latin_ext_s[i] - 0.5f) * recip_width;
            font[i].t0f = (stb__courier_11_latin_ext_t[i] - 0.5f) * recip_height;
            font[i].s1f = (stb__courier_11_latin_ext_s[i] + stb__courier_11_latin_ext_w[i] + 0.5f) * recip_width;
            font[i].t1f = (stb__courier_11_latin_ext_t[i] + stb__courier_11_latin_ext_h[i] + 0.5f) * recip_height;
            font[i].x0f = stb__courier_11_latin_ext_x[i] - 0.5f;
            font[i].y0f = stb__courier_11_latin_ext_y[i] - 0.5f;
            font[i].x1f = stb__courier_11_latin_ext_x[i] + stb__courier_11_latin_ext_w[i] + 0.5f;
            font[i].y1f = stb__courier_11_latin_ext_y[i] + stb__courier_11_latin_ext_h[i] + 0.5f;
            font[i].advance = stb__courier_11_latin_ext_a[i]/16.0f;
        }
    }
}

#ifndef STB_SOMEFONT_CREATE
#define STB_SOMEFONT_CREATE              stb_font_courier_11_latin_ext
#define STB_SOMEFONT_BITMAP_WIDTH        STB_FONT_courier_11_latin_ext_BITMAP_WIDTH
#define STB_SOMEFONT_BITMAP_HEIGHT       STB_FONT_courier_11_latin_ext_BITMAP_HEIGHT
#define STB_SOMEFONT_BITMAP_HEIGHT_POW2  STB_FONT_courier_11_latin_ext_BITMAP_HEIGHT_POW2
#define STB_SOMEFONT_FIRST_CHAR          STB_FONT_courier_11_latin_ext_FIRST_CHAR
#define STB_SOMEFONT_NUM_CHARS           STB_FONT_courier_11_latin_ext_NUM_CHARS
#define STB_SOMEFONT_LINE_SPACING        STB_FONT_courier_11_latin_ext_LINE_SPACING
#endif

