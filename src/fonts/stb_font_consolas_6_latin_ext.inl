// Font generated by stb_font_inl_generator.c (4/1 bpp)
//
// Following instructions show how to use the only included font, whatever it is, in
// a generic way so you can replace it with any other font by changing the include.
// To use multiple fonts, replace STB_SOMEFONT_* below with STB_FONT_consolas_6_latin_ext_*,
// and separately install each font. Note that the CREATE function call has a
// totally different name; it's just 'stb_font_consolas_6_latin_ext'.
//
/* // Example usage:

static stb_fontchar fontdata[STB_SOMEFONT_NUM_CHARS];

static void init(void)
{
    // optionally replace both STB_SOMEFONT_BITMAP_HEIGHT with STB_SOMEFONT_BITMAP_HEIGHT_POW2
    static unsigned char fontpixels[STB_SOMEFONT_BITMAP_HEIGHT][STB_SOMEFONT_BITMAP_WIDTH];
    STB_SOMEFONT_CREATE(fontdata, fontpixels, STB_SOMEFONT_BITMAP_HEIGHT);
    ... create texture ...
    // for best results rendering 1:1 pixels texels, use nearest-neighbor sampling
    // if allowed to scale up, use bilerp
}

// This function positions characters on integer coordinates, and assumes 1:1 texels to pixels
// Appropriate if nearest-neighbor sampling is used
static void draw_string_integer(int x, int y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0, cd->t0); glVertex2i(x + cd->x0, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t0); glVertex2i(x + cd->x1, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t1); glVertex2i(x + cd->x1, y + cd->y1);
        glTexCoord2f(cd->s0, cd->t1); glVertex2i(x + cd->x0, y + cd->y1);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance_int;
    }
    glEnd();
}

// This function positions characters on float coordinates, and doesn't require 1:1 texels to pixels
// Appropriate if bilinear filtering is used
static void draw_string_float(float x, float y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0f, cd->t0f); glVertex2f(x + cd->x0f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t0f); glVertex2f(x + cd->x1f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t1f); glVertex2f(x + cd->x1f, y + cd->y1f);
        glTexCoord2f(cd->s0f, cd->t1f); glVertex2f(x + cd->x0f, y + cd->y1f);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance;
    }
    glEnd();
}
*/

#ifndef STB_FONTCHAR__TYPEDEF
#define STB_FONTCHAR__TYPEDEF
typedef struct
{
    // coordinates if using integer positioning
    float s0,t0,s1,t1;
    signed short x0,y0,x1,y1;
    int   advance_int;
    // coordinates if using floating positioning
    float s0f,t0f,s1f,t1f;
    float x0f,y0f,x1f,y1f;
    float advance;
} stb_fontchar;
#endif

#define STB_FONT_consolas_6_latin_ext_BITMAP_WIDTH         256
#define STB_FONT_consolas_6_latin_ext_BITMAP_HEIGHT         40
#define STB_FONT_consolas_6_latin_ext_BITMAP_HEIGHT_POW2    64

#define STB_FONT_consolas_6_latin_ext_FIRST_CHAR            32
#define STB_FONT_consolas_6_latin_ext_NUM_CHARS            560

#define STB_FONT_consolas_6_latin_ext_LINE_SPACING           4

static unsigned int stb__consolas_6_latin_ext_pixels[]={
    0x00410104,0x04204100,0x00260981,0x045044a1,0x00008008,0x40080001,
    0x21a8860b,0x88106a20,0x28330101,0x21500b26,0x408a51b9,0x4411040a,
    0xba861540,0x44105402,0x0aa0441a,0x540a86e0,0x14188870,0x3394282e,
    0x43506475,0x489c6e18,0x204c0a8e,0x50640c0a,0x1980a488,0x2942a04c,
    0x3512942e,0x0c85514a,0x525cc1a8,0x98541c5b,0x239c371b,0x84c3730a,
    0x528a61b9,0xa87170b8,0x73247730,0x0ee62987,0x96a65815,0x4e7772a9,
    0x2442e1c3,0x71baa9ce,0x14553188,0x71ce3147,0x2a65a98e,0x45a994a5,
    0x7950e2a3,0x9ce71e4c,0x2739ce73,0x20e44e73,0x2e16d40c,0x730e1c3a,
    0x4e7306e3,0x986e3733,0x239c371b,0xab9dc473,0x239cea61,0x47731ce3,
    0x8e1dcc73,0x4e7282aa,0xb89443a9,0x55ce70e3,0x9418870b,0x21288e19,
    0xa8ea63a9,0x738aaa2a,0x25470aaa,0x17951d5c,0x9ce739ce,0x2739ce73,
    0x20ae20c8,0x15c3ab83,0x4e61b887,0x227753aa,0x0dc4e61b,0x8e71ce73,
    0xab8e74a9,0x1ce38e73,0x39c738e7,0x2505770c,0x350363ab,0x716cd2a6,
    0x8871dd4e,0x471c7141,0x5c1b0363,0x738aee2b,0x52d98aee,0x2e3da871,
    0x5d52ea2b,0x4eea9753,0x1c7754ba,0x50ae12aa,0x260c187b,0x2147553a,
    0x9d54ea63,0x2a7553a9,0xab8eea4b,0x2a575064,0x23ba8a3b,0xa8eea3ba,
    0x49b8c43b,0x0e61c6a2,0x21c4ab8e,0x06413539,0x1b86a235,0x87339627,
    0x3724dc39,0x49b9dd49,0x0022060c,0x2a000000,0x4005c5c0,0x00040808,
    0x00000004,0x00000800,0x09800000,0x00040822,0x26040810,0x10808860,
    0x40202104,0x26004c09,0x00002040,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x0c441700,0x22e28351,0x0a0a8222,
    0x80a2e311,0x04102080,0x04c01010,0x84400220,0x02a08852,0xa8220401,
    0x82085931,0x080803b9,0x02000410,0x00a80771,0x00d4086a,0x50154c10,
    0xb9844181,0x3b98ee63,0x253bb94a,0x51dcca52,0x5451ddca,0x0e4c263a,
    0xb30eee15,0x09832381,0x754ea8cc,0x21dc6e05,0x385510b8,0x8854550a,
    0x22130e3b,0x5050e72d,0x8260d441,0x4442a219,0x22213871,0x8c44ee21,
    0x5c42a3b8,0x8d4282a3,0x3b88a09a,0x39dcc973,0x71ce39c7,0x273a55ce,
    0x4e71ce73,0x2e7714ab,0x92e7711a,0x4c1733b8,0x0c92e64b,0x3ae48826,
    0x4ba81933,0x383750ee,0x731d4c26,0x31c1cae2,0x39cee675,0x23b98ee6,
    0x70ee63b9,0x5dcee21c,0x8ee69173,0x09cea613,0xa984e753,0x4ae25713,
    0x0e7530aa,0x2739c757,0x38e71ce3,0x4e73ace7,0x4e738e73,0x4e6e9536,
    0x54cee4a9,0x9c738ee4,0x164c5713,0x89773987,0x351c5c73,0x3ab8e387,
    0x3661c38a,0xa9ce7572,0x8e71ce3b,0x71439c73,0x39d2a677,0x171ce973,
    0xa45ceae9,0x2e9173ab,0x5d43873a,0x570e7572,0x477539c7,0xa8eea3ba,
    0x53baa43b,0xba8eea77,0x374ab863,0x9ecd2ae9,0x217374ab,0x552ea4ba,
    0x4e0e0c4a,0x21ddc5bb,0x23733981,0x228aea28,0x385732b8,0xa8eea575,
    0x5d47750b,0x3ba8eea3,0xa55ce728,0x3ba8a3ab,0x995d52e6,0x2e65754b,
    0x4ae25754,0x2ba9c2b8,0xa8f6a573,0x0000003b,0x00020000,0x70000030,
    0x5b304171,0x040006e2,0x000c06e6,0x00000800,0x27180000,0x00002003,
    0x04000000,0x00000880,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x50200000,0x08200c43,0x01904008,
    0x2738a0a8,0x4282a3b8,0x1a88540b,0x02a02054,0x2a608151,0x208302a3,
    0x2170d440,0xb98201a8,0x94020201,0x100502a2,0x01105441,0x81102204,
    0x05477700,0x8eee1411,0x8d44540a,0x147713b8,0x4260a8aa,0x5c462188,
    0x2a738542,0xa54ce72d,0x0c8aa652,0x4a0c8ee2,0x85382a09,0xab9222ba,
    0x8f2a5533,0x64c5b1a8,0x8b265932,0x86e3510a,0x0982a188,0x8b26738a,
    0x0982a2c9,0x30910d5c,0x170e4431,0x4e1504c5,0x514e5173,0x98ee6738,
    0x3873b8ba,0x4e17539c,0x7139ce73,0x3b892aa5,0xba8ecce7,0x526e9574,
    0x4c57109a,0x4dc5714a,0x54c2a2e2,0x4b21c5c3,0x2e1352ba,0x2bb9223a,
    0x9223870e,0x244e63bb,0x49124491,0x751c1c73,0x21ce04c7,0x21c04c13,
    0x2e7773bb,0x9ddce73b,0x9ceea3a9,0x9bab8e73,0x39c3874a,0x4e739c77,
    0x17170e73,0x725d52a6,0x49b9c385,0xb92aa155,0x6549554a,0x7090f2e3,
    0x46624435,0x387b50aa,0x1c3871ce,0x8eaa738e,0x5c70e1c3,0x8a8e0e49,
    0x71270260,0x21c04c51,0x39ce74ab,0x7124ab86,0x4775388e,0x734ababa,
    0x25d4ae65,0x5d52ea39,0x0ae29754,0x0012ae17,0x5d4e7081,0x2e017172,
    0x5cd390b8,0x239c1c5a,0x2ba842d9,0x272d9811,0x4b665b33,0x4e5b32d9,
    0xb32d98a3,0x16ccb665,0x052d9870,0x31de4593,0x262c983b,0x273b4e2d,
    0x39a70473,0x0000039c,0x00000600,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0xa8800000,
    0x09817731,0x04505c08,0x0c4406a2,0x3ba84415,0x220a8622,0x2a3b88a0,
    0x0c443110,0x440a8351,0x80854140,0x22b98080,0x087042b8,0x03531ce0,
    0x2e208310,0x8dcc7731,0x247731b9,0x9ddc0553,0x420445a9,0xa88a1452,
    0x2a609732,0x2ba85372,0x2655304c,0x228b872c,0x3265931a,0x822a5932,
    0x265532a9,0x30e5532a,0x03214e97,0x0640c819,0x1cd43032,0x71c5c717,
    0x8ae298b1,0x4738a142,0x1dc050aa,0x73855c91,0x2a3710dc,0x4157703a,
    0x1554e70a,0x7384c973,0x216d52e6,0x351c4e73,0x7170a6e1,0x41351dd4,
    0x9ddceee3,0x470e1c29,0x13509a82,0x384d426a,0x44753198,0xb88ae22b,
    0x2b88ae22,0x220a98e6,0xac82a20a,0x23da9cc3,0x73b99223,0x71548897,
    0x171c2c88,0x4ce61ce9,0x8647533a,0x277309ab,0x985773bb,0x31ce7731,
    0x4aa9c1c3,0xcb8554e2,0x8a86ae0b,0x4e382aa0,0x70d49573,0x55061c38,
    0x85542aa1,0x1c5930aa,0x55495512,0x4aa92aa4,0x20b892aa,0x8ee1d43b,
    0x38aa63ba,0x0e170e1c,0x5c254aa6,0x27731c2b,0x28eaa3ba,0x551c4eea,
    0x9b870b87,0x5d42e1c4,0x2e6570e3,0x2ea389c1,0x20a39c02,0x4e5b32ba,
    0x96cc1a73,0x045b32d9,0xa95d4aea,0x7145752b,0x2e2e1c77,0x22e17170,
    0x2e17170b,0x49b840b8,0x049b922e,0x5b304380,0x54004b2a,0x985d5c38,
    0x0040002d,0x404b2a00,0x654eee09,0x80077702,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x89dc4100,0x4cb8e73b,0xa8ee06aa,0x1b99ce28,0x98014106,0x1982043c,
    0x21a82154,0x5314a2ba,0x2b886aa7,0x71dc4593,0xb95c4005,0xb98ee639,
    0x94728a74,0x55c26509,0x4190b261,0xba8542ba,0x4a2e5552,0x5282648b,
    0x52c98dcc,0x1b995cca,0x21c92553,0x47530e13,0x87190bcb,0x392ea2c8,
    0x9ecc6e27,0x870252b9,0xb8aa0bca,0x932a1931,0x4cd26e58,0x3ab8b222,
    0x05c1c719,0x442a6953,0xac870a1b,0x4c661ce4,0x9b87223a,0x70e71ce2,
    0x8e2e2b88,0x39ba4e48,0x992ee777,0x43710ee0,0x2a7126e3,0x28813509,
    0x0d83a45c,0x438c8f6e,0xa8eaa2bb,0x51c7534b,0xd9854a57,0x0d88aee2,
    0x9770dcaa,0x269370c8,0xba8b6619,0x95c47192,0x552ae0c8,0x2a63710b,
    0x255cae62,0x42438775,0xa98f2a1d,0x550e24e3,0xb8e0d5c9,0x2ae9371b,
    0x704c5754,0xb8e3a987,0x85542a49,0x30a290aa,0x1ccae697,0x2ae1ddc0,
    0x4005350b,0x5d4262b9,0x20880142,0x0cccb260,0x5750dc22,0x777016cc,
    0x165c0380,0x1ce28381,0x5c38eee0,0x1b1a7248,0x170e1de4,0x5b31ce17,
    0xb4e7770e,0x5cb26153,0x25b31438,0x054f2a73,0x00288575,0x00000004,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x2e697300,0x2e2a8932,0x54c2e0a8,0x239c6a01,0x2a5313b9,
    0x4884043b,0xb9ddcae2,0x2a06263c,0x248a2639,0x2610838a,0x044ea619,
    0x12854092,0x00000037,0x00000000,0x00000000,0x38000000,0x8ea238e7,
    0x4ce263cb,0x3223112b,0x50b87532,0xa9822a53,0x2a638263,0x21554e73,
    0x6c0d8a3a,0x22254711,0x2066693a,0x01209751,0x00000000,0x00000000,
    0x00000000,0x85c00000,0x49c8e4a8,0x088816ae,0x506c3710,0x8828cc59,
    0x225b301b,0x1554e71b,0x47350113,0x87150189,0x00000108,0x00000000,
    0x00000000,0x00000000,0x70000000,0x13d98dcc,0x00000071,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,
};

static signed short stb__consolas_6_latin_ext_x[560]={ 0,1,0,0,0,0,0,1,0,0,0,0,0,0,
1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,
1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,
0,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,-1,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,0,0,0,-1,0,
0,0,0,0,0,0,0,0,0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,-1,0,-1,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0, };
static signed short stb__consolas_6_latin_ext_y[560]={ 4,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,0,3,2,
3,-1,0,0,0,0,0,0,0,0,0,0,1,1,0,1,0,-1,-1,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,-1,-1,0,4,-1,1,-1,1,-1,1,-1,1,-1,-1,
-1,-1,-1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,-1,-1,-1,1,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,1,-1,0,0,0,
-1,-1,-1,0,0,1,2,2,-1,0,-1,0,-1,-1,-1,1,-1,1,4,-1,0,1,-1,-1,-1,1,-1,-1,-1,-1,
-1,-2,0,0,-1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,
-1,-1,-1,-1,1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,
-1,0,-1,-1,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,0,-1,-1,-1,-1,0,1,-1,-1,-1,-1,
-1,-1,-1,-1,0,-1,-1,-2,0,-1,-1,-1,-1,0,-1,-1,0,-1,-1,1,0,-1,-1,-1,0,-1,1,-1,-2,0,
-1,-1,-1,0,-1,0,-1,-1,-1,0,1,-1,-1,-1,0,1,-1,0,-1,-1,-1,-1,0,1,-1,-1,0,1,-1,-1,
-1,-1,-1,-1,0,1,-1,-1,0,0,-1,-1,0,0,-1,-1,-1,0,-1,-1,-2,-1,-1,-1,0,1,-1,-1,-1,-1,
-1,-1,-1,-1,-1,-1,-1,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,-2,-2,-1,-1,-1,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0, };
static unsigned short stb__consolas_6_latin_ext_w[560]={ 0,2,3,4,3,4,4,1,3,3,3,4,3,3,
2,3,4,3,3,3,4,3,3,3,3,3,2,3,3,3,3,3,4,4,3,3,4,3,3,3,3,3,3,4,
3,4,3,4,3,4,4,3,4,3,4,4,4,4,3,2,3,3,3,4,2,3,3,3,3,3,4,4,3,3,
3,4,3,4,3,4,3,3,4,3,3,3,4,4,4,4,3,3,1,3,4,4,4,4,4,4,4,4,4,4,
4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,0,2,3,3,4,4,
1,3,3,4,3,3,3,3,3,3,3,3,3,3,3,4,3,2,1,3,3,3,4,4,4,3,4,4,4,4,
4,4,5,3,3,3,3,3,3,3,3,3,4,3,4,4,4,4,4,3,4,3,3,3,3,4,3,3,3,3,
3,3,3,3,4,3,3,3,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,3,3,3,3,4,3,4,
4,3,4,3,4,3,3,3,3,3,3,3,3,3,5,5,4,4,3,3,3,3,3,3,3,3,3,3,3,4,
3,4,3,4,3,4,3,3,4,3,3,3,3,3,3,3,3,4,3,3,3,3,3,3,4,4,4,3,3,3,
3,4,5,4,4,3,3,3,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,4,5,4,4,4,5,4,
3,3,3,3,3,3,3,3,4,3,4,5,4,3,3,3,3,3,3,3,3,3,4,4,3,3,4,4,4,4,
4,3,3,3,3,3,3,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,
4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,
4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,
4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,
4,4,4,4,4,4,4,4,4,4,4,3,5,4,5,5,4,4,4,4,4,4,4,4,4,4,4,4,4,4,
4,4,4,4,4,4,4,4,4,4,3,3,4,3,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,
4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,
4,4,4,4,4,4, };
static unsigned short stb__consolas_6_latin_ext_h[560]={ 0,6,3,4,6,6,6,3,7,7,4,4,3,1,
2,6,5,4,4,5,4,5,5,4,5,4,4,5,5,3,5,6,7,4,4,5,4,4,4,5,4,4,5,4,
4,4,4,5,4,6,4,5,4,5,4,4,4,4,4,7,6,7,3,2,3,4,6,4,6,4,5,5,5,5,
7,5,5,3,3,4,5,5,3,4,5,4,3,3,3,5,3,7,7,7,2,4,4,4,4,4,4,4,4,4,
4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,0,5,6,4,4,4,
7,6,3,5,3,3,2,1,4,2,3,4,4,4,3,5,6,2,1,4,3,3,5,5,5,5,5,5,5,5,
5,6,4,5,5,5,5,5,5,5,5,5,4,5,6,6,6,6,6,3,6,6,6,6,6,5,4,6,6,6,
6,6,6,6,4,4,6,6,6,6,5,5,5,5,6,5,6,6,6,6,6,4,5,6,6,6,6,7,7,7,
5,5,5,6,6,5,6,6,6,6,6,6,6,6,5,6,4,6,5,5,5,6,5,6,6,5,5,6,6,7,
6,7,6,7,6,7,5,6,4,5,5,5,5,4,5,5,6,7,5,3,5,7,6,7,6,7,3,5,6,6,
7,5,5,4,5,4,5,5,5,6,5,5,5,5,6,5,6,5,6,6,6,6,5,4,5,5,6,5,5,5,
6,6,6,6,5,4,6,6,6,6,5,6,4,5,6,6,6,5,6,6,7,6,6,6,6,5,5,5,5,7,
5,5,5,5,5,5,5,5,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,6,4,4,4,
4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,
4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,
4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,
4,4,4,4,4,4,4,4,4,4,6,7,5,6,6,6,4,4,4,4,4,4,4,4,4,4,4,4,4,4,
4,4,4,4,4,4,4,4,4,4,6,5,6,6,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,
4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,
4,4,4,4,4,4, };
static unsigned short stb__consolas_6_latin_ext_s[560]={ 255,232,125,83,57,65,96,129,1,23,132,
61,116,157,145,120,131,27,241,136,31,161,180,19,197,23,253,201,37,45,251,
128,40,189,207,10,179,249,245,6,237,233,243,224,220,215,211,184,203,152,194,
189,184,231,174,169,164,159,155,45,177,48,41,131,104,124,189,115,75,106,140,
218,29,148,52,165,176,95,91,150,214,247,70,44,239,40,57,36,107,14,62,
56,60,62,140,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,
96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,255,145,17,
128,35,101,66,112,49,205,53,66,136,157,52,151,75,48,71,75,79,156,92,
148,155,88,87,100,126,121,116,112,107,102,97,92,87,79,29,74,70,66,62,
58,25,49,45,41,24,33,32,251,227,235,6,112,246,16,24,28,37,234,92,
49,45,53,61,1,185,214,66,141,124,144,214,206,166,162,158,154,148,146,157,
172,162,167,197,136,117,13,25,21,29,73,14,18,79,75,70,42,37,58,9,
33,5,230,242,226,136,132,192,101,110,70,1,252,21,223,66,238,234,109,113,
222,218,5,210,78,202,92,193,83,62,181,145,126,130,122,138,199,134,142,140,
31,179,83,170,36,116,10,107,101,120,188,88,84,97,203,208,56,198,79,105,
214,218,41,226,230,222,239,20,243,11,247,1,250,245,240,5,19,10,16,218,
53,99,183,200,196,192,188,150,229,176,172,167,163,174,151,119,50,137,133,129,
46,121,117,88,125,209,204,184,54,84,89,94,68,82,223,227,235,152,78,210,
1,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,141,
96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,
96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,
96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,
96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,
96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,
96,96,96,146,27,170,112,157,106,96,96,96,96,96,96,96,96,96,96,96,
96,96,96,96,96,96,96,96,96,96,96,96,96,180,193,167,163,96,96,96,
96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,
96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,
96,96,96,96,96,96,96,96,96, };
static unsigned short stb__consolas_6_latin_ext_t[560]={ 1,1,34,29,9,9,9,34,1,1,29,
29,34,34,34,9,23,34,29,23,34,23,23,34,23,34,29,23,23,34,23,
9,1,29,29,29,29,29,29,29,29,29,23,29,29,29,29,23,29,9,29,
23,29,23,29,29,29,29,29,1,9,1,34,34,34,29,9,29,9,29,23,
23,23,23,1,23,23,34,34,29,23,23,34,29,23,29,34,34,34,29,34,
1,1,1,34,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,
29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,1,23,16,
29,29,29,1,9,34,23,34,34,34,34,29,34,34,29,29,29,34,23,9,
34,34,29,34,34,23,23,23,23,23,23,23,23,23,9,29,23,23,23,23,
23,23,23,23,23,29,23,9,9,1,1,9,34,9,9,9,9,9,16,29,
9,9,9,9,16,9,1,29,29,9,9,9,9,16,16,16,16,9,16,9,
9,9,9,9,29,16,16,16,16,16,1,1,1,16,16,16,16,16,16,16,
16,16,9,9,9,9,9,16,9,29,9,23,16,23,1,16,9,9,16,16,
9,9,1,9,1,9,1,9,1,16,9,29,16,16,16,16,29,16,16,9,
1,16,34,16,1,9,1,9,1,34,16,9,9,1,16,16,29,16,29,16,
16,16,9,16,16,16,16,9,16,9,16,9,1,1,1,23,29,23,23,1,
23,16,16,1,1,1,1,16,29,1,1,1,1,16,1,29,16,1,1,1,
16,1,1,1,1,1,1,1,16,16,16,16,1,23,23,23,23,23,23,23,
29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,1,
29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,
29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,
29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,
29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,
29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,
29,29,29,1,1,23,1,1,1,29,29,29,29,29,29,29,29,29,29,29,
29,29,29,29,29,29,29,29,29,29,29,29,29,1,23,1,1,29,29,29,
29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,
29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,
29,29,29,29,29,29,29,29,29, };
static unsigned short stb__consolas_6_latin_ext_a[560]={ 53,53,53,53,53,53,53,53,
53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,
53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,
53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,
53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,
53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,
53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,
53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,
53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,
53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,
53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,
53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,
53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,
53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,
53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,
53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,
53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,
53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,
53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,
53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,
53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,
53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,
53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,
53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,
53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,
53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,
53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,
53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,
53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,
53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,
53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,
53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,
53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,
53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,
53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,
53,53,53,53,53,53,53,53, };

// Call this function with
//    font: NULL or array length
//    data: NULL or specified size
//    height: STB_FONT_consolas_6_latin_ext_BITMAP_HEIGHT or STB_FONT_consolas_6_latin_ext_BITMAP_HEIGHT_POW2
//    return value: spacing between lines
static void stb_font_consolas_6_latin_ext(stb_fontchar font[STB_FONT_consolas_6_latin_ext_NUM_CHARS],
                unsigned char data[STB_FONT_consolas_6_latin_ext_BITMAP_HEIGHT][STB_FONT_consolas_6_latin_ext_BITMAP_WIDTH],
                int height)
{
    int i,j;
    if (data != 0) {
        unsigned int *bits = stb__consolas_6_latin_ext_pixels;
        unsigned int bitpack = *bits++, numbits = 32;
        for (i=0; i < STB_FONT_consolas_6_latin_ext_BITMAP_WIDTH*height; ++i)
            data[0][i] = 0;  // zero entire bitmap
        for (j=1; j < STB_FONT_consolas_6_latin_ext_BITMAP_HEIGHT-1; ++j) {
            for (i=1; i < STB_FONT_consolas_6_latin_ext_BITMAP_WIDTH-1; ++i) {
                unsigned int value;
                if (numbits==0) bitpack = *bits++, numbits=32;
                value = bitpack & 1;
                bitpack >>= 1, --numbits;
                if (value) {
                    if (numbits < 3) bitpack = *bits++, numbits = 32;
                    data[j][i] = (bitpack & 7) * 0x20 + 0x1f;
                    bitpack >>= 3, numbits -= 3;
                } else {
                    data[j][i] = 0;
                }
            }
        }
    }

    // build font description
    if (font != 0) {
        float recip_width = 1.0f / STB_FONT_consolas_6_latin_ext_BITMAP_WIDTH;
        float recip_height = 1.0f / height;
        for (i=0; i < STB_FONT_consolas_6_latin_ext_NUM_CHARS; ++i) {
            // pad characters so they bilerp from empty space around each character
            font[i].s0 = (stb__consolas_6_latin_ext_s[i]) * recip_width;
            font[i].t0 = (stb__consolas_6_latin_ext_t[i]) * recip_height;
            font[i].s1 = (stb__consolas_6_latin_ext_s[i] + stb__consolas_6_latin_ext_w[i]) * recip_width;
            font[i].t1 = (stb__consolas_6_latin_ext_t[i] + stb__consolas_6_latin_ext_h[i]) * recip_height;
            font[i].x0 = stb__consolas_6_latin_ext_x[i];
            font[i].y0 = stb__consolas_6_latin_ext_y[i];
            font[i].x1 = stb__consolas_6_latin_ext_x[i] + stb__consolas_6_latin_ext_w[i];
            font[i].y1 = stb__consolas_6_latin_ext_y[i] + stb__consolas_6_latin_ext_h[i];
            font[i].advance_int = (stb__consolas_6_latin_ext_a[i]+8)>>4;
            font[i].s0f = (stb__consolas_6_latin_ext_s[i] - 0.5f) * recip_width;
            font[i].t0f = (stb__consolas_6_latin_ext_t[i] - 0.5f) * recip_height;
            font[i].s1f = (stb__consolas_6_latin_ext_s[i] + stb__consolas_6_latin_ext_w[i] + 0.5f) * recip_width;
            font[i].t1f = (stb__consolas_6_latin_ext_t[i] + stb__consolas_6_latin_ext_h[i] + 0.5f) * recip_height;
            font[i].x0f = stb__consolas_6_latin_ext_x[i] - 0.5f;
            font[i].y0f = stb__consolas_6_latin_ext_y[i] - 0.5f;
            font[i].x1f = stb__consolas_6_latin_ext_x[i] + stb__consolas_6_latin_ext_w[i] + 0.5f;
            font[i].y1f = stb__consolas_6_latin_ext_y[i] + stb__consolas_6_latin_ext_h[i] + 0.5f;
            font[i].advance = stb__consolas_6_latin_ext_a[i]/16.0f;
        }
    }
}

#ifndef STB_SOMEFONT_CREATE
#define STB_SOMEFONT_CREATE              stb_font_consolas_6_latin_ext
#define STB_SOMEFONT_BITMAP_WIDTH        STB_FONT_consolas_6_latin_ext_BITMAP_WIDTH
#define STB_SOMEFONT_BITMAP_HEIGHT       STB_FONT_consolas_6_latin_ext_BITMAP_HEIGHT
#define STB_SOMEFONT_BITMAP_HEIGHT_POW2  STB_FONT_consolas_6_latin_ext_BITMAP_HEIGHT_POW2
#define STB_SOMEFONT_FIRST_CHAR          STB_FONT_consolas_6_latin_ext_FIRST_CHAR
#define STB_SOMEFONT_NUM_CHARS           STB_FONT_consolas_6_latin_ext_NUM_CHARS
#define STB_SOMEFONT_LINE_SPACING        STB_FONT_consolas_6_latin_ext_LINE_SPACING
#endif

