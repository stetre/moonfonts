// Font generated by stb_font_inl_generator.c (4/1 bpp)
//
// Following instructions show how to use the only included font, whatever it is, in
// a generic way so you can replace it with any other font by changing the include.
// To use multiple fonts, replace STB_SOMEFONT_* below with STB_FONT_courier_6_latin_ext_*,
// and separately install each font. Note that the CREATE function call has a
// totally different name; it's just 'stb_font_courier_6_latin_ext'.
//
/* // Example usage:

static stb_fontchar fontdata[STB_SOMEFONT_NUM_CHARS];

static void init(void)
{
    // optionally replace both STB_SOMEFONT_BITMAP_HEIGHT with STB_SOMEFONT_BITMAP_HEIGHT_POW2
    static unsigned char fontpixels[STB_SOMEFONT_BITMAP_HEIGHT][STB_SOMEFONT_BITMAP_WIDTH];
    STB_SOMEFONT_CREATE(fontdata, fontpixels, STB_SOMEFONT_BITMAP_HEIGHT);
    ... create texture ...
    // for best results rendering 1:1 pixels texels, use nearest-neighbor sampling
    // if allowed to scale up, use bilerp
}

// This function positions characters on integer coordinates, and assumes 1:1 texels to pixels
// Appropriate if nearest-neighbor sampling is used
static void draw_string_integer(int x, int y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0, cd->t0); glVertex2i(x + cd->x0, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t0); glVertex2i(x + cd->x1, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t1); glVertex2i(x + cd->x1, y + cd->y1);
        glTexCoord2f(cd->s0, cd->t1); glVertex2i(x + cd->x0, y + cd->y1);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance_int;
    }
    glEnd();
}

// This function positions characters on float coordinates, and doesn't require 1:1 texels to pixels
// Appropriate if bilinear filtering is used
static void draw_string_float(float x, float y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0f, cd->t0f); glVertex2f(x + cd->x0f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t0f); glVertex2f(x + cd->x1f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t1f); glVertex2f(x + cd->x1f, y + cd->y1f);
        glTexCoord2f(cd->s0f, cd->t1f); glVertex2f(x + cd->x0f, y + cd->y1f);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance;
    }
    glEnd();
}
*/

#ifndef STB_FONTCHAR__TYPEDEF
#define STB_FONTCHAR__TYPEDEF
typedef struct
{
    // coordinates if using integer positioning
    float s0,t0,s1,t1;
    signed short x0,y0,x1,y1;
    int   advance_int;
    // coordinates if using floating positioning
    float s0f,t0f,s1f,t1f;
    float x0f,y0f,x1f,y1f;
    float advance;
} stb_fontchar;
#endif

#define STB_FONT_courier_6_latin_ext_BITMAP_WIDTH         256
#define STB_FONT_courier_6_latin_ext_BITMAP_HEIGHT         36
#define STB_FONT_courier_6_latin_ext_BITMAP_HEIGHT_POW2    64

#define STB_FONT_courier_6_latin_ext_FIRST_CHAR            32
#define STB_FONT_courier_6_latin_ext_NUM_CHARS            560

#define STB_FONT_courier_6_latin_ext_LINE_SPACING           3

static unsigned int stb__courier_6_latin_ext_pixels[]={
    0x00020000,0x02000000,0x00000000,0x00002000,0x00000000,0x20004040,
    0x20204008,0x80260040,0x01022009,0x08022040,0x8844130c,0x103060c1,
    0x10988444,0x41110411,0x41882209,0x20c42609,0x20986a61,0x0c4260c0,
    0x104c1306,0x98260408,0x104c1510,0x31309833,0x8c518214,0x10441112,
    0x09884c11,0x98cc4131,0x22633328,0x51141512,0x221304c3,0x10982a09,
    0x11888431,0x4cc26653,0x189830a0,0x4c626513,0x22631328,0x8a263112,
    0x444a2628,0x82661331,0x8c446220,0x26513099,0x22651309,0x4a263112,
    0x22311289,0x10451318,0x8ccc3085,0x54331299,0x42108210,0x30845710,
    0x2b884231,0x84210842,0x43186210,0x85446a60,0x44c26210,0x41843112,
    0x18461098,0x210a2331,0x21084210,0x83084210,0x10420810,0x54308c21,
    0x8c20c220,0x2108c210,0x2108c610,0x23184410,0x19884c10,0x4c430662,
    0x11045131,0x29884c43,0x994c4153,0x2e65311a,0x84c4a621,0x4c131298,
    0x104c3110,0x44ca6208,0x984130a1,0x26633319,0x4a261330,0x44a62198,
    0x26253109,0x42625310,0x26131199,0x44c26208,0x82661331,0x8ccc6260,
    0x26131099,0x26213109,0x42623330,0x26313098,0x50c13119,0x0033300a,
    0x98020022,0x00000099,0x54000000,0x54001510,0x00018510,0x0000a500,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x08000000,0x01310404,0x40040000,0x04110208,
    0x20c40084,0x18000200,0x04010100,0x00840001,0x10020020,0x00002088,
    0x00010000,0x40c08010,0x130c4420,0x26130626,0x10302618,0x10a604cc,
    0x13062350,0x204450a2,0x30c1330a,0x26130633,0x08251528,0x82104622,
    0x51041198,0x0c450428,0x88544513,0x22a3130a,0x0c088542,0x30662151,
    0x0c446221,0x11846613,0x1304c433,0x2618884c,0x08543110,0x884c4223,
    0x08426209,0x304cc515,0x5182a633,0x44a304cc,0x46106309,0x2118c631,
    0x11084631,0x31084a2a,0x11145421,0x30843086,0x14410204,0x040a6143,
    0x71042101,0x04082221,0x230a8823,0x11199831,0x2209894c,0x328c6260,
    0x8c6328c6,0x23133512,0x4c331189,0x2a253118,0x4c302a61,0xa98a2618,
    0x10882220,0x23110831,0x2631118a,0x22631109,0x9884c461,0x4c425130,
    0x10823130,0x15128cc4,0x30408aa2,0x81898662,0xa84cc260,0x44621419,
    0x2621510a,0x26333041,0x82611119,0x18c33119,0x4c622333,0x26631119,
    0x42223111,0x44c00001,0x19986262,0x00626002,0x00001880,0x02898400,
    0x20513182,0x206a0420,0x22151040,0x4408082a,0x8200c401,0x10060c08,
    0x00000015,0x26289946,0x4c033021,0x00000001,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x01102040,
    0x02204004,0x2040c001,0x02200440,0x81020c08,0x04002040,0x80401100,
    0x01020400,0x01020004,0x41000220,0x09810098,0x88620826,0x40080000,
    0x30a0c330,0x183330c1,0x54130a0c,0x428110c0,0x21504c18,0x44426098,
    0x304c4261,0x221110c1,0x88260a82,0x8622110a,0x4c311098,0x22231118,
    0x888c1110,0x260a8260,0x21330860,0x44531289,0x04420c22,0x20422a13,
    0x4cc26630,0x82a23110,0x4660c180,0x46663332,0x26333199,0x0998ccc1,
    0x4c666333,0x228c6219,0x4c313198,0x8cc42319,0x44230611,0x8cc42319,
    0x44331088,0x19885119,0x4630c443,0x10842188,0x30c10842,0x46318c61,
    0x84610631,0x22081310,0x330c2209,0x11882623,0x0c611842,0x22144662,
    0x88a85119,0x42221111,0x4cc22219,0x11982221,0x08886611,0x98a26131,
    0x08431328,0x44a26111,0x22233308,0x42225130,0x4a313289,0x0cc4a262,
    0x09866513,0x22098626,0x26253129,0x988c5312,0x46223110,0x42311188,
    0x26131099,0x44c11319,0x82221820,0x26213108,0x42661330,0x22513199,
    0x4c4a2619,0x33001981,0x20000803,0x00000199,0x00000ccc,0x80200000,
    0x50a20052,0x00001441,0x40000104,0x00c00000,0x00008802,0x40528060,
    0x00000052,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000800,0x09800000,0x01300440,0x08822088,
    0x804c1102,0x44000818,0x20440c40,0x04220c20,0x0c080404,0x20888604,
    0x22008410,0x00040260,0x0981004c,0x44008102,0x10104420,0x08260408,
    0x20c42604,0x88666199,0x8a2a3510,0x22151199,0x85442e21,0x22313199,
    0x4450510a,0x144a6a2b,0x998a30a2,0x12898611,0x04208411,0x98662151,
    0x2e233319,0x4c210422,0x0544231a,0x44511541,0x11442a22,0x21826215,
    0x44c26218,0x44318512,0x199944c2,0x44666333,0x2a21510a,0x54198510,
    0x4c410208,0x040822a0,0x4c222111,0x22306a61,0x41530419,0x44331199,
    0x19862219,0x4c450a62,0x4cc26662,0x144c2222,0x37308886,0x253314c4,
    0x041110a8,0x810c6151,0x4c102040,0x42810218,0x4128630a,0x43314198,
    0x08106619,0x4cc33104,0x85442661,0x4c5132a8,0x8a215109,0x263511a8,
    0x4a171019,0x4ccc2a22,0x4a294a30,0x200ccc02,0x4508a10a,0x820d4450,
    0x0c002199,0x510c1501,0x128c2621,0x5442a215,0x82a21510,0x85442a21,
    0x461710a8,0x50a50221,0x8ccc6661,0x22151199,0x14a1510a,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x40000000,0x086218c0,0x40130441,0x20826208,0x01040088,0x20208111,
    0x04182208,0x80018022,0x00000000,0x000600c0,0x00002000,0x084c4318,
    0x02200403,0x31040801,0x98866184,0x22108c60,0x2a213109,0x46318a30,
    0x042a98a1,0x0c2a9862,0x15128c31,0x84618666,0x14466218,0x226130a2,
    0x233314a2,0x2a513289,0x46114a28,0x4cc261a9,0x8cc42a20,0x22515189,
    0x84cc6661,0x42333199,0x20988c21,0x01442621,0x22085104,0x21888c61,
    0x11866231,0x22628a62,0x314c4631,0x54462231,0x14081310,0x18c106a6,
    0x11104311,0x30411104,0x41066251,0xa8853198,0x4450a0c1,0x1102221a,
    0x2a635104,0x4cc66040,0x33041311,0x42288ccc,0x261310a0,0x4c043129,
    0x42884400,0x4c318c62,0x02200c60,0x83180544,0x4c1002a2,0x2215109a,
    0x18544019,0x00a88cc5,0x02a20151,0x88aa2294,0x22943131,0x44c2a199,
    0x4c285132,0x44c02a09,0x30c42a21,0x544a2651,0x46663330,0x00066619,
    0xa88a0988,0x2a211112,0x42a25510,0x00510431,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x04000000,
    0x04080102,0x02008021,0x85409c00,0xa88cc4a0,0x98a13311,0x00026219,
    0x00000000,0x00000000,0x00000000,0x04262000,0x08822211,0x82220986,
    0x86211109,0x21102098,0x221310aa,0x12988e08,0x2a086615,0x2110832b,
    0x004010c0,0x00000000,0x00000000,0x00000000,0x00000000,0x26708880,
    0x0d41332a,0x428a0981,0x8300c628,0x80082660,0x11043330,0x00000004,
    0x00000000,0x00000000,0x00000000,0x00000000,0x46a20000,0x22033300,
    0x0544130a,0x18c66613,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
};

static signed short stb__courier_6_latin_ext_x[560]={ 0,1,0,0,0,0,0,1,1,0,0,0,0,0,
1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,
1,0,0,0,0,0,0,0,0,-1,0,0,0,0,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0, };
static signed short stb__courier_6_latin_ext_y[560]={ 4,0,0,0,0,0,1,0,0,0,0,1,3,2,
3,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,1,0,1,0,1,0,1,0,0,
0,0,0,1,1,1,1,1,1,1,0,1,1,1,1,1,1,0,0,0,2,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,1,0,0,1,0,
0,0,0,0,0,1,2,2,0,0,0,0,0,0,0,1,0,2,3,0,0,1,0,0,0,1,-1,-1,-1,0,
0,-1,0,0,-1,-1,-1,0,-1,-1,-1,0,0,0,-1,-1,-1,0,0,1,0,-1,-1,-1,0,-1,0,0,0,0,
0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,
0,0,-1,0,0,1,-1,0,-1,0,0,0,-1,0,-1,0,0,0,0,0,-1,0,0,0,0,1,-1,0,-1,0,
-1,0,0,0,0,0,-1,-1,0,0,0,0,0,0,-1,0,0,0,0,1,0,0,-1,0,0,0,1,-1,-1,0,
0,0,0,0,0,0,0,-1,0,0,1,-1,0,0,0,1,0,0,-1,0,-1,0,0,1,-1,0,0,1,-1,0,
-1,0,-1,0,0,1,-1,0,0,0,-1,0,0,0,0,0,0,0,-1,0,-1,0,-1,0,0,1,-1,0,-1,0,
0,-1,0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,0,-1,0,-1,
0,-1,0,-1,0,-1,-1,-1,-1,-1,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,-2,-1,-1,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0, };
static unsigned short stb__courier_6_latin_ext_w[560]={ 0,1,3,3,3,3,3,1,2,2,2,3,2,3,
1,3,3,3,3,3,3,3,3,3,3,3,1,2,3,3,3,2,3,4,3,3,3,3,3,3,3,3,4,4,
3,4,3,3,3,3,4,3,3,3,4,4,3,3,3,1,2,1,3,4,2,3,3,3,4,3,3,3,3,3,
3,4,3,4,3,3,3,4,3,3,3,3,4,4,3,4,3,2,1,2,3,4,4,4,4,4,4,4,4,4,
4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,0,1,3,3,3,3,
1,3,3,4,2,3,3,3,4,5,3,3,3,3,2,3,3,1,1,3,3,3,4,4,4,2,4,4,4,4,
4,4,4,3,3,3,3,3,3,3,3,3,4,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,
3,3,3,3,4,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,4,3,4,
4,3,4,3,4,4,3,3,3,3,3,3,3,3,3,4,4,4,3,3,3,3,3,3,4,3,3,3,3,3,
3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,4,3,4,3,4,4,3,3,3,3,
3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,4,4,4,3,4,3,4,3,
3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,4,4,4,3,4,
3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,3,4,4,3,4,4,4,
4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,
4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,3,3,3,3,
3,3,3,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,
4,4,4,4,4,4,4,4,4,4,4,3,4,4,3,3,4,4,4,4,4,4,4,4,4,4,4,4,4,4,
4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,
4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,
4,4,4,4,4,4, };
static unsigned short stb__courier_6_latin_ext_h[560]={ 0,5,3,5,5,5,4,3,5,5,3,3,2,1,
2,5,5,4,4,5,4,5,5,5,5,5,4,4,3,2,3,5,5,4,4,5,4,4,4,5,4,4,5,4,
4,4,4,5,4,5,4,5,4,5,4,4,4,4,4,5,5,5,3,1,2,4,5,4,5,4,4,4,4,4,
5,4,4,3,3,4,4,4,3,4,5,4,3,4,3,4,3,5,5,5,1,4,4,4,4,4,4,4,4,4,
4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,0,5,4,4,3,4,
5,5,2,5,3,3,2,1,5,1,2,4,3,3,2,4,5,1,2,3,3,3,4,4,4,5,5,5,5,4,
4,5,4,5,5,5,5,4,5,5,5,4,4,4,6,6,6,5,5,3,5,6,6,6,5,5,4,5,5,5,
5,5,5,5,4,4,5,5,5,5,4,4,4,4,5,4,5,5,5,5,5,3,4,5,5,5,5,5,5,5,
4,5,5,5,5,4,6,5,6,5,5,5,6,5,5,5,4,5,4,5,5,5,4,5,5,4,5,5,6,5,
6,5,5,5,5,5,5,5,4,4,4,4,4,4,5,4,5,5,4,3,5,5,6,5,5,5,3,5,5,5,
5,4,4,4,4,4,4,5,4,5,4,5,4,4,5,4,5,5,6,5,6,5,4,4,5,4,5,4,5,4,
6,5,6,5,5,4,6,5,6,6,5,5,4,5,5,5,5,5,6,5,6,5,6,5,5,4,5,5,5,5,
4,5,4,4,4,5,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,5,4,4,5,4,4,4,
4,4,4,4,4,4,4,4,4,4,5,4,4,4,4,4,4,4,4,4,4,4,4,4,4,5,4,4,4,4,
4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,5,5,5,4,6,
5,6,5,6,5,6,6,6,6,6,6,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,
4,4,4,4,4,4,4,4,4,4,6,6,5,5,6,5,4,4,4,4,4,4,4,4,4,4,4,4,4,4,
4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,
4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,
4,4,4,4,4,4, };
static unsigned short stb__courier_6_latin_ext_s[560]={ 255,146,7,175,158,55,197,5,205,155,79,
75,96,115,109,1,220,222,189,46,153,216,30,201,252,215,254,253,31,86,23,
212,197,144,230,204,238,226,234,200,214,206,192,157,149,162,218,180,210,124,201,
112,193,98,184,179,175,171,167,106,91,253,43,119,99,140,71,132,50,124,120,
116,112,108,63,98,94,11,39,81,77,72,27,64,162,56,242,47,251,38,1,
116,119,121,132,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,
13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,255,128,5,
1,247,245,178,179,92,191,16,55,111,115,219,126,102,201,47,51,106,185,212,
124,90,82,63,71,153,148,143,122,240,5,38,120,115,249,106,232,14,18,22,
85,26,30,34,69,64,60,75,91,99,224,228,67,188,115,119,131,184,10,93,
100,96,245,88,236,72,55,175,193,5,17,208,208,233,128,237,136,51,68,83,
174,170,166,162,59,89,151,147,143,139,134,130,125,97,118,113,109,104,162,87,
92,1,84,80,76,50,68,64,59,47,41,43,42,38,34,130,26,21,171,13,
9,111,1,127,248,244,240,236,232,228,224,111,205,197,213,217,209,196,221,187,
183,225,19,170,166,58,158,153,148,35,142,138,134,130,56,52,9,18,22,26,
108,30,102,34,94,249,43,87,52,79,75,9,67,13,59,89,103,46,241,36,
85,27,60,123,14,83,5,1,229,67,240,79,135,228,224,189,216,212,208,204,
200,107,191,103,183,95,174,170,180,22,9,244,248,139,32,158,167,81,149,77,
73,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,153,13,13,161,
13,13,13,13,13,13,13,13,13,13,13,13,13,144,125,13,13,13,13,13,
13,13,13,13,13,13,13,13,165,134,13,13,13,13,13,13,13,13,13,13,
13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,139,157,
232,102,71,220,63,236,54,18,46,42,38,34,30,26,13,13,13,13,13,13,
13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,
13,13,13,21,17,178,195,5,187,13,13,13,13,13,13,13,13,13,13,13,
13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,
13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,
13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,
13,13,13,13,13,13,13,13,13, };
static unsigned short stb__courier_6_latin_ext_t[560]={ 1,8,31,8,14,8,25,31,14,14,30,
30,30,30,30,20,14,25,25,14,25,14,14,14,8,8,14,20,31,30,31,
8,14,25,25,8,25,25,25,8,25,25,14,25,25,25,25,14,25,8,25,
8,25,8,25,25,25,25,25,8,8,1,30,30,30,25,8,25,14,25,25,
25,25,25,8,25,25,31,31,25,25,25,31,25,8,25,25,25,25,26,31,
8,8,8,30,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,
26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,1,8,26,
26,25,20,14,8,30,8,31,30,30,30,8,30,30,20,30,30,30,20,14,
30,30,30,30,30,20,20,20,14,14,20,20,20,20,14,20,14,20,20,20,
20,20,20,20,20,20,20,1,1,1,14,14,30,14,1,1,1,14,20,20,
14,14,14,14,14,14,14,20,20,14,14,14,8,20,25,20,25,8,25,8,
14,14,14,14,30,20,14,14,14,14,14,14,14,20,14,14,14,14,20,1,
14,1,14,14,14,1,14,14,14,20,8,20,14,14,14,20,14,14,20,14,
14,1,14,1,8,8,8,8,8,8,8,20,20,20,20,20,20,8,20,8,
8,20,31,8,8,1,8,8,8,31,8,8,8,8,20,20,26,26,26,26,
8,26,8,26,8,20,25,8,25,8,8,1,8,1,8,25,25,8,20,8,
25,8,25,1,8,1,8,8,20,1,1,1,1,1,1,20,1,1,1,1,
1,1,1,1,1,1,1,1,20,8,8,1,1,20,8,20,20,20,1,20,
20,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,1,26,26,1,
26,26,26,26,26,26,26,26,26,26,26,26,26,1,20,26,26,26,26,26,
26,26,26,26,26,26,26,26,1,20,26,26,26,26,26,26,26,26,26,26,
26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,1,1,
1,20,1,1,1,1,1,8,1,1,1,1,1,1,26,26,26,26,26,26,
26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,
26,26,26,1,1,1,1,1,1,26,26,26,26,26,26,26,26,26,26,26,
26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,
26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,
26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,
26,26,26,26,26,26,26,26,26, };
static unsigned short stb__courier_6_latin_ext_a[560]={ 51,51,51,51,51,51,51,51,
51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,
51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,
51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,
51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,
51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,
51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,
51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,
51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,
51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,
51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,
51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,
51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,
51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,
51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,
51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,
51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,
51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,
51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,
51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,
51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,
51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,
51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,
51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,
51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,
51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,
51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,
51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,
51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,
51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,
51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,
51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,
51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,
51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,
51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,
51,51,51,51,51,51,51,51, };

// Call this function with
//    font: NULL or array length
//    data: NULL or specified size
//    height: STB_FONT_courier_6_latin_ext_BITMAP_HEIGHT or STB_FONT_courier_6_latin_ext_BITMAP_HEIGHT_POW2
//    return value: spacing between lines
static void stb_font_courier_6_latin_ext(stb_fontchar font[STB_FONT_courier_6_latin_ext_NUM_CHARS],
                unsigned char data[STB_FONT_courier_6_latin_ext_BITMAP_HEIGHT][STB_FONT_courier_6_latin_ext_BITMAP_WIDTH],
                int height)
{
    int i,j;
    if (data != 0) {
        unsigned int *bits = stb__courier_6_latin_ext_pixels;
        unsigned int bitpack = *bits++, numbits = 32;
        for (i=0; i < STB_FONT_courier_6_latin_ext_BITMAP_WIDTH*height; ++i)
            data[0][i] = 0;  // zero entire bitmap
        for (j=1; j < STB_FONT_courier_6_latin_ext_BITMAP_HEIGHT-1; ++j) {
            for (i=1; i < STB_FONT_courier_6_latin_ext_BITMAP_WIDTH-1; ++i) {
                unsigned int value;
                if (numbits==0) bitpack = *bits++, numbits=32;
                value = bitpack & 1;
                bitpack >>= 1, --numbits;
                if (value) {
                    if (numbits < 3) bitpack = *bits++, numbits = 32;
                    data[j][i] = (bitpack & 7) * 0x20 + 0x1f;
                    bitpack >>= 3, numbits -= 3;
                } else {
                    data[j][i] = 0;
                }
            }
        }
    }

    // build font description
    if (font != 0) {
        float recip_width = 1.0f / STB_FONT_courier_6_latin_ext_BITMAP_WIDTH;
        float recip_height = 1.0f / height;
        for (i=0; i < STB_FONT_courier_6_latin_ext_NUM_CHARS; ++i) {
            // pad characters so they bilerp from empty space around each character
            font[i].s0 = (stb__courier_6_latin_ext_s[i]) * recip_width;
            font[i].t0 = (stb__courier_6_latin_ext_t[i]) * recip_height;
            font[i].s1 = (stb__courier_6_latin_ext_s[i] + stb__courier_6_latin_ext_w[i]) * recip_width;
            font[i].t1 = (stb__courier_6_latin_ext_t[i] + stb__courier_6_latin_ext_h[i]) * recip_height;
            font[i].x0 = stb__courier_6_latin_ext_x[i];
            font[i].y0 = stb__courier_6_latin_ext_y[i];
            font[i].x1 = stb__courier_6_latin_ext_x[i] + stb__courier_6_latin_ext_w[i];
            font[i].y1 = stb__courier_6_latin_ext_y[i] + stb__courier_6_latin_ext_h[i];
            font[i].advance_int = (stb__courier_6_latin_ext_a[i]+8)>>4;
            font[i].s0f = (stb__courier_6_latin_ext_s[i] - 0.5f) * recip_width;
            font[i].t0f = (stb__courier_6_latin_ext_t[i] - 0.5f) * recip_height;
            font[i].s1f = (stb__courier_6_latin_ext_s[i] + stb__courier_6_latin_ext_w[i] + 0.5f) * recip_width;
            font[i].t1f = (stb__courier_6_latin_ext_t[i] + stb__courier_6_latin_ext_h[i] + 0.5f) * recip_height;
            font[i].x0f = stb__courier_6_latin_ext_x[i] - 0.5f;
            font[i].y0f = stb__courier_6_latin_ext_y[i] - 0.5f;
            font[i].x1f = stb__courier_6_latin_ext_x[i] + stb__courier_6_latin_ext_w[i] + 0.5f;
            font[i].y1f = stb__courier_6_latin_ext_y[i] + stb__courier_6_latin_ext_h[i] + 0.5f;
            font[i].advance = stb__courier_6_latin_ext_a[i]/16.0f;
        }
    }
}

#ifndef STB_SOMEFONT_CREATE
#define STB_SOMEFONT_CREATE              stb_font_courier_6_latin_ext
#define STB_SOMEFONT_BITMAP_WIDTH        STB_FONT_courier_6_latin_ext_BITMAP_WIDTH
#define STB_SOMEFONT_BITMAP_HEIGHT       STB_FONT_courier_6_latin_ext_BITMAP_HEIGHT
#define STB_SOMEFONT_BITMAP_HEIGHT_POW2  STB_FONT_courier_6_latin_ext_BITMAP_HEIGHT_POW2
#define STB_SOMEFONT_FIRST_CHAR          STB_FONT_courier_6_latin_ext_FIRST_CHAR
#define STB_SOMEFONT_NUM_CHARS           STB_FONT_courier_6_latin_ext_NUM_CHARS
#define STB_SOMEFONT_LINE_SPACING        STB_FONT_courier_6_latin_ext_LINE_SPACING
#endif

