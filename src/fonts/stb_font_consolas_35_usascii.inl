// Font generated by stb_font_inl_generator.c (4/1 bpp)
//
// Following instructions show how to use the only included font, whatever it is, in
// a generic way so you can replace it with any other font by changing the include.
// To use multiple fonts, replace STB_SOMEFONT_* below with STB_FONT_consolas_35_usascii_*,
// and separately install each font. Note that the CREATE function call has a
// totally different name; it's just 'stb_font_consolas_35_usascii'.
//
/* // Example usage:

static stb_fontchar fontdata[STB_SOMEFONT_NUM_CHARS];

static void init(void)
{
    // optionally replace both STB_SOMEFONT_BITMAP_HEIGHT with STB_SOMEFONT_BITMAP_HEIGHT_POW2
    static unsigned char fontpixels[STB_SOMEFONT_BITMAP_HEIGHT][STB_SOMEFONT_BITMAP_WIDTH];
    STB_SOMEFONT_CREATE(fontdata, fontpixels, STB_SOMEFONT_BITMAP_HEIGHT);
    ... create texture ...
    // for best results rendering 1:1 pixels texels, use nearest-neighbor sampling
    // if allowed to scale up, use bilerp
}

// This function positions characters on integer coordinates, and assumes 1:1 texels to pixels
// Appropriate if nearest-neighbor sampling is used
static void draw_string_integer(int x, int y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0, cd->t0); glVertex2i(x + cd->x0, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t0); glVertex2i(x + cd->x1, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t1); glVertex2i(x + cd->x1, y + cd->y1);
        glTexCoord2f(cd->s0, cd->t1); glVertex2i(x + cd->x0, y + cd->y1);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance_int;
    }
    glEnd();
}

// This function positions characters on float coordinates, and doesn't require 1:1 texels to pixels
// Appropriate if bilinear filtering is used
static void draw_string_float(float x, float y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0f, cd->t0f); glVertex2f(x + cd->x0f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t0f); glVertex2f(x + cd->x1f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t1f); glVertex2f(x + cd->x1f, y + cd->y1f);
        glTexCoord2f(cd->s0f, cd->t1f); glVertex2f(x + cd->x0f, y + cd->y1f);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance;
    }
    glEnd();
}
*/

#ifndef STB_FONTCHAR__TYPEDEF
#define STB_FONTCHAR__TYPEDEF
typedef struct
{
    // coordinates if using integer positioning
    float s0,t0,s1,t1;
    signed short x0,y0,x1,y1;
    int   advance_int;
    // coordinates if using floating positioning
    float s0f,t0f,s1f,t1f;
    float x0f,y0f,x1f,y1f;
    float advance;
} stb_fontchar;
#endif

#define STB_FONT_consolas_35_usascii_BITMAP_WIDTH         256
#define STB_FONT_consolas_35_usascii_BITMAP_HEIGHT        158
#define STB_FONT_consolas_35_usascii_BITMAP_HEIGHT_POW2   256

#define STB_FONT_consolas_35_usascii_FIRST_CHAR            32
#define STB_FONT_consolas_35_usascii_NUM_CHARS             95

#define STB_FONT_consolas_35_usascii_LINE_SPACING          23

static unsigned int stb__consolas_35_usascii_pixels[]={
    0x00010ffb,0xeeee8820,0x2001eeee,0x4001ecba,0x22000019,0x2b37a209,
    0x3bbba000,0x2001eeee,0x510002cb,0x00001379,0x4cc13310,0x00010000,
    0x2609a980,0x00002660,0x99800d4c,0x0fd8ffb0,0x8876c000,0xffffffff,
    0xfffea802,0xffda802f,0x20003dff,0xff11fff9,0x3e007fff,0x2fffffff,
    0x000ffe00,0xfffffff3,0x6400001d,0x01bfe1ff,0x0e77ff40,0x3fffb200,
    0xf32ffeff,0xfa8000bf,0x2a00efff,0x54ffb3ff,0xb0000eff,0x3bfe27ff,
    0x401ccccc,0x1ceffff9,0x777ffe40,0xb0004fff,0x7f64bfff,0xcc803fff,
    0x02ffeccc,0x4005ff10,0xfffffffb,0x00001fff,0x1ffc8dff,0xffffe800,
    0x7f4400ef,0xffffffff,0x00bff32f,0x7f7ffd40,0x4dff106f,0x77fe47fd,
    0x2ffe4000,0x2000bff1,0xd001cffe,0x7dc417ff,0xffd8005f,0xfffb885f,
    0x2ffb8000,0x02ffa880,0x159fff90,0x03fffd73,0x42ffa800,0xb8005ff8,
    0x2ffffedc,0x15bfff30,0x25ffd731,0x20005ff9,0x0bfee6fe,0x7fd87ff2,
    0x2005ffd8,0x3e20effb,0xff88005f,0x5ff9000f,0x0017fdc0,0xe807ffe6,
    0xfb8002ff,0xffdb302f,0x207dffff,0xf103fff8,0xe8000bff,0x01ffb07f,
    0xfffea800,0x203ffd81,0xbff32ffc,0x0bfe2000,0x3ff989ff,0xffe83fec,
    0x0fff8802,0x4002ffc4,0xf5005ffa,0x0bfb005f,0xb8013100,0xfb8003ff,
    0xffffc82f,0x04ffffff,0xf9809ff9,0xf30000ff,0x0ffea09f,0x37ff4000,
    0xf901bfe6,0x017fe65f,0x3607fcc0,0x6c37f45f,0x1fff307f,0x882ffd80,
    0xfa8005ff,0x5ff8802f,0x001ff500,0x13fe6000,0xb0bfee00,0xdfd7dfff,
    0xff107b75,0x9ffb001f,0x03ff6000,0x00006fe8,0x7e45fff1,0x97fe402f,
    0x30005ff9,0x24fe85ff,0x7fd81ffc,0xa813ff20,0xbff106ff,0x05ff7000,
    0x2001ff70,0x4ccc2ff8,0x99999999,0x017fe200,0xfa8bfee0,0x013fa1ff,
    0x5c017fea,0xf88006ff,0x17fdc05f,0x4ffd8000,0xf9003ffa,0x217fe65f,
    0x3fe201a9,0x7ccffe24,0x40ffb04f,0xfd01fff8,0x17fe203f,0x00bfee00,
    0xfd0013fa,0xffffff89,0x202fffff,0xb8005ff8,0x13ff62ff,0xff7007ff,
    0x1ffe2007,0x007fee00,0x0000bff1,0x7ff97fee,0xf32ffc80,0x3fff629f,
    0x9ffb02ff,0x3fa1ffd7,0x701ff606,0xbff509ff,0x002ffc40,0x2a017fdc,
    0x66e4c1ff,0xf8bf93ca,0xffffffff,0x3fe202ff,0x2ffb8005,0xff88bffa,
    0x02ffc802,0x2001ffe0,0xff9006fe,0xff900003,0x201ffe29,0x9ff32ffc,
    0xffffffd3,0xfffd107f,0x07fee5ff,0x7cc07fd8,0x02ffc87f,0x20017fe2,
    0x7e402ffb,0x7ffffdc6,0xaa8bf93f,0xfdaaaaaa,0x17fe202f,0xd8bfee00,
    0x07fe65ff,0x8007ffa0,0x2a000fff,0xff3003ff,0xffd00009,0x6403ffc5,
    0xfdff32ff,0xffb537df,0x9bb9101f,0xb013fe61,0x3ffd00ff,0x2200fff8,
    0xfb8005ff,0x527f400f,0x5ffd7bff,0xf9001bee,0x06fe805f,0x2e2ffb80,
    0x1ff53fff,0x001fff00,0xb000fff4,0x7ec001ff,0xea98000f,0x03ffc6ff,
    0xff997fe4,0xffd80dff,0x077f4004,0x2e01ff60,0x17fe64ff,0x000bff10,
    0xff880dfd,0xffb9bfa2,0xc800ff70,0x7fe402ff,0x17fdc001,0x3f7bfffa,
    0x03fff007,0x800fff40,0x54004ff9,0xff1003ff,0xe83fffff,0x3fe601ff,
    0x0bfff32f,0x7003ffcc,0xffb005ff,0x5cbff300,0x7fc403ff,0xffb31005,
    0x30ffa807,0x53fe45ff,0xffc800ff,0x57ffcc02,0x85ff7001,0xffffffe8,
    0x01ffe800,0x4003ffe0,0xf8001ffc,0xfff1006f,0xff9019ff,0x3fffe207,
    0x801dff32,0xf8800fff,0x0ffb005f,0x7e4dff30,0x2ffc402f,0x37fffe60,
    0x327fb801,0xf737ec7f,0x2ffc800d,0xffffc880,0x817fdc03,0xdffffffb,
    0x00bff601,0x8803ffc4,0xf70005ff,0x37fe003f,0x07ffcc00,0x4bffffa2,
    0xfd805ff9,0x0ffd801f,0x100ffb00,0x17fecfff,0x3017fe20,0x2007ffff,
    0xf1bfa6fc,0x0037dcbf,0x4c00bff2,0x5c03fffe,0x7fd402ff,0xfb04ffff,
    0x3fe6007f,0x05ff7006,0x017fe200,0xfe802ffc,0xeffdabef,0xbff32ffb,
    0x805ffb00,0xdd912ffb,0x007fd83b,0x3ffa1fff,0x02ffc401,0x3fff6ea2,
    0xff2fe402,0xf927fc49,0x2ffc800b,0x5effec40,0x17fdc01a,0x7fff7fc0,
    0x06ffb85f,0x2009ff90,0x6c0007fe,0x5ff800ff,0xffffd100,0x5ff71dff,
    0x36017fe6,0x3fe202ff,0xffffff35,0xf803fec7,0x007ffa7f,0x9800bff1,
    0xafec05ff,0x3fe64ff8,0x90013f62,0xffb805ff,0x17fdc002,0x3227fe20,
    0x7fc43fff,0x1fff800f,0x003ff980,0x4027fcc0,0x362004ff,0xf70befff,
    0x017fe65f,0xfd803ffa,0xd55dfd0f,0x01ff61ff,0xffd9ffe2,0x02ffc402,
    0x3603fe40,0x547ff14f,0x00ffa1ff,0xd805ff90,0xffb8006f,0x707fcc02,
    0xbffb0dff,0x005ffc80,0x00001ffb,0x35500ffd,0x2e026000,0x0bff32ff,
    0x7d40fff0,0x4c3ff33f,0x00ffb2ff,0x7fe4dff3,0x02ffc403,0xb00ffdc0,
    0xc93fe29f,0x01ff10ff,0x402ffc80,0xfb8005ff,0x23fd402f,0x7d40fff8,
    0xfff704ff,0x0bff1003,0x0bfea000,0x64000000,0x0bff32ff,0xf106ff88,
    0x7c3fd4bf,0x300ffb3f,0x27fdcbff,0x0017fe20,0xfd80bfee,0x7fc53fe5,
    0x000df91f,0x7c405ff9,0xffb8005f,0x263fdc02,0xfff907ff,0xfffd959d,
    0x07ff2007,0x06ff8000,0xc8000008,0x0bff32ff,0xfb03ffd8,0x7c3fdc1f,
    0x900ffb3f,0x37fd47ff,0x0017fe20,0xfc80bfee,0x3fafffa5,0x02ffbcfe,
    0x202ffc80,0xb8005ff8,0x37e402ff,0xfc817ff6,0xffffffff,0x01bfe002,
    0x03ff9000,0x0001bfe6,0x3e65ff90,0x1bfea05f,0x3ea1ffd4,0x6cbfe21f,
    0x0ffe807f,0xf1007ffc,0xff7000bf,0xf737dc05,0xfff55fff,0x3f20009f,
    0x17fe202f,0xb8bfee00,0xff727ec0,0xffc9805f,0x2001cfff,0x00002ffa,
    0xfe827fc4,0x200002ff,0xfff32ffc,0xffb5335b,0x0dff103f,0x3f61bff1,
    0x980ffb0f,0x3ffc86ff,0x0017fe20,0xfa80bfee,0xb716f5c7,0x7e40007b,
    0x17fe202f,0x44bfee00,0xeffdefff,0x004ffffe,0x40007ffc,0x000007fe,
    0xffd01ffb,0x6400007f,0xffff32ff,0x3dffffff,0x6407ff20,0x23ffffff,
    0x7fe407fd,0x206ff983,0xb8005ff8,0x3fea02ff,0x20000001,0x3e202ffc,
    0xffb8005f,0xffffff12,0x07ffffff,0x007ffb00,0x0004ff98,0x507ff500,
    0x00001dff,0xd7317fe4,0x07bfffff,0x2e01ffcc,0x7ec2ffff,0x03ffe207,
    0xf881fff4,0xffb8005f,0x0027fc02,0x3ffb0000,0x002ffc40,0xb9517fdc,
    0x59bffffd,0x77fdc000,0xffc80a81,0x3a000000,0x0003106f,0x00980000,
    0x40220000,0x3ff607fd,0x03ffe602,0x20017fe2,0x7e404ffa,0x20000007,
    0x3ea00ffe,0xffb8004f,0x003fea02,0xefffe800,0x7c44fecb,0x4000005f,
    0x00002ffb,0x00000000,0x7fd80000,0x900dff50,0xbff109ff,0x0fff3000,
    0x0003ff98,0x06ff9800,0x4001ffec,0x3ee02ffb,0x7cc00007,0x6fffffff,
    0x00017fdc,0x017fe200,0x00000000,0x20000000,0xffe887fd,0x2fff8801,
    0x8002ffc4,0x7f403fff,0x0600802f,0x203ffe88,0x8001fff9,0x3f202ffb,
    0xd7000006,0x9705dfff,0x20000009,0x000004cb,0x00000000,0x87fd8000,
    0x2a003ffe,0x3fe21fff,0x00aaaaae,0x567fffdc,0x567ff440,0x407f9330,
    0xfcaabdfd,0xfeca86ff,0xaaa805ff,0x202ffdaa,0x000005fd,0x00000008,
    0x00000000,0x00000000,0x1ff60000,0x70009ffb,0x3fe21fff,0x02ffffff,
    0x2fffffc8,0xfffffe88,0x3603ffff,0xffffffff,0x7fffc40d,0xfff800df,
    0x002fffff,0x00000000,0x00000000,0x00000000,0x00000000,0x3fe67fd8,
    0x3fee0004,0xffffff13,0x326005ff,0x32a02ffe,0x00bdfffe,0x7ffffed4,
    0xbdff102d,0x7fffc005,0x0002ffff,0x00000000,0x00000000,0x00000000,
    0x80000000,0x002dc7fd,0x00002640,0x00000000,0x00000098,0x00000000,
    0x00000000,0x00000000,0x00000000,0xfb000000,0x0000000f,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x80000000,
    0x000007fd,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x30004cc4,0x304ccc33,0x00353013,0x004cc400,0x2666aaa2,0x26620999,
    0x40099999,0x20000099,0x0cc40098,0x31000000,0x95300135,0x98000159,
    0xca880003,0x554c009b,0xaaaaaaaa,0xbca8800a,0xbff90009,0x4d7fee00,
    0x5ff32fff,0x3fffff62,0xffc80002,0xffffd502,0x4dffffff,0xfffffffb,
    0x017fe604,0x17ffc400,0x0001ffd0,0x7ffec400,0xfb107fff,0x007fffff,
    0x000dff10,0x7fffffcc,0xfff900ef,0xffffffff,0x7fff4c07,0xf9804fff,
    0xffe800ff,0x265fff12,0xfffe8bff,0x0003ffff,0x7ec17fe4,0xffffefff,
    0x3fee6fff,0x204fffff,0x00005ff9,0x740dfff9,0x000000ff,0xfffffff5,
    0x3fffa0ff,0x003fffff,0x80037fc4,0xfffffffb,0xffc81fff,0xffffffff,
    0xffff303f,0x01bfffff,0x4c03ffe8,0x3ffe27ff,0xdffbff32,0x1fffb537,
    0x17fe4000,0xf707bfea,0x4c4135ff,0x04ffb999,0x00017fe6,0xd037ffe4,
    0x000001ff,0x335dfff1,0xdff70955,0x03fff221,0x006ff880,0x8acfffc8,
    0x41fffeb9,0x9999affc,0xfa809999,0x3fea1cff,0x37fd405f,0xf893fee0,
    0xffff31ff,0x09ffb01b,0x217fe400,0xff701fff,0x13fea00b,0x0005ff98,
    0x405fff10,0x00000ffe,0x4005ffc8,0xfff81ffe,0x1bfe2001,0x07fff100,
    0xf917ffa2,0x3fa0003f,0x1fff303f,0x201fff80,0x3fe21ffe,0x0bfff31f,
    0x0003ffcc,0x7fc45ff9,0x01ffe206,0xf3027fd4,0x440000bf,0x07ff4009,
    0x7ff40000,0x83ffc001,0x26602ffc,0x99eff999,0x64099999,0x7fcc04ff,
    0x007ff20f,0x7017fe60,0xffc809ff,0x88dff304,0xdff31fff,0x00fff801,
    0x4c5ff900,0x3ffc05ff,0x204ffa80,0x00005ff9,0x00ffe800,0x07ff8000,
    0xd80fff80,0x3ffe01ff,0xffffffff,0x3e24ffff,0xffd800ff,0x0007ff24,
    0xf100bff6,0x7fcc01ff,0x83ffc80f,0xbff31fff,0x003ffb00,0x3ff226a6,
    0x881bfe62,0xff5006ff,0x22ffcc09,0x26201aa9,0x00999999,0x33003ffa,
    0xfff10013,0x85ffd000,0x7fc07ff9,0xffffffff,0x2a4fffff,0xff7005ff,
    0x000ffe4d,0x36203ffc,0x7f401fff,0x80fff82f,0xbff31fff,0x405ffb00,
    0xffffffeb,0x0fffc2ff,0x5004ffc8,0x7fcc09ff,0xfffffd35,0xfffff705,
    0x7ff409ff,0x03bff600,0x001bfe20,0xfe99bfee,0x5555402f,0xaaaaeffb,
    0x3fee1aaa,0x4fff1003,0x44001ffc,0x3fe606ff,0x7dc02fff,0x82ffcc6f,
    0xbff30fff,0x305ffb00,0xfffffffd,0xffb85fff,0x3ffee22f,0x09ff5000,
    0x7fd67fcc,0x42ffffff,0xfffffffb,0x403ffa04,0x1000effd,0xf1000dff,
    0x9fff79ff,0x0dff1000,0x0017fec0,0x5ffe4fff,0x26009aaa,0xfff705ff,
    0xf8807fff,0x0bff20ff,0xff987ffc,0x40ffd805,0x99adfff8,0x4c2ffeb9,
    0xffffffff,0x3ea002ff,0x3bfe604f,0xffb9aeff,0x55554c6f,0x3fa04ffc,
    0x0effd80f,0xf9999950,0x999999ff,0x3ffea039,0x10002fff,0x7f400dff,
    0x3ffe001f,0xffffff90,0xff505bff,0xbfffd889,0xfc804ffa,0xf81ffe4f,
    0x0bff30ff,0xffb0ffd0,0x217fe407,0xffffeefe,0x7d4000df,0x3ffe604f,
    0x1fff885f,0xd027fd40,0xeffd81ff,0x3ffff200,0xffffffff,0xff303fff,
    0x40001bff,0x3e006ff8,0x3fa000ff,0xfffff91f,0xb89fffff,0x3ffea3ff,
    0x00bff31e,0x3feafff3,0x4c3ffe04,0x7fc405ff,0x2037fcc6,0x3fea2ffc,
    0x00035312,0xf3027fd4,0x7ff40bff,0x027fd402,0x7fec1ffd,0x7775c00e,
    0xeeefffee,0xfa82eeee,0x540effff,0x7fc401cc,0x07ffe006,0x200ffe80,
    0x4fffeb99,0x7fe4ffea,0x13fea0df,0x7ecfff40,0x43ffa01f,0x7e405ff9,
    0x017fe43f,0xffc8bff2,0x7d400001,0x1bfe604f,0xa807ff90,0x3ffa04ff,
    0x001dffb0,0x001bfe20,0xfff7fff5,0x402ffc8b,0x3a006ff8,0x3fe001ff,
    0x7ffe4007,0xffdbff50,0x09ff507f,0x3ff7fee0,0xf33ff406,0x37fdc0bf,
    0x32007fec,0x37ff22ff,0x3ea00001,0x17fe604f,0xa807ff70,0x3ffa04ff,
    0x000effd8,0x801bfe20,0xff31fff8,0x00fff49f,0xd801bfe2,0xff1002ff,
    0x5ffd000d,0x3bffffe6,0x007ff701,0x0fffffe2,0x7fccffd0,0xfdb99adf,
    0x07ff81ff,0x3e62ffc8,0xefffffff,0x3ea003ce,0x17fe604f,0xa807ff70,
    0x3ffa04ff,0x0000effd,0x90037fc4,0xfffb89ff,0x8801fff2,0x3f2006ff,
    0xbff3003f,0x29ff9000,0x00dffff8,0xc800bff2,0x7400ffff,0x3fffe67f,
    0x1effffff,0xc807ff88,0x7ffdc2ff,0xffffffff,0x4ffa802f,0x7017fe60,
    0xffa807ff,0x3ebffa04,0x440002ff,0x3fa006ff,0xafffd81f,0xff8807ff,
    0x1bfee006,0x0027fe40,0xfff1ffe4,0x03ffd007,0x01fffcc0,0xfff33ff4,
    0x07dfffff,0xfc807ff8,0x66ffec2f,0xffffdccc,0x27fd401f,0xb80bff30,
    0x7fd403ff,0x2e3ffa04,0x20001fff,0x3e006ff8,0xfffd00ff,0xff1009ff,
    0x7ffc400f,0x01fff800,0x361ffe80,0x7fcc03ff,0x7ffcc006,0x262aa800,
    0x001315ff,0x7e403ffc,0x00fff62f,0xa807fff3,0x3fe604ff,0x01ffdc05,
    0xfe813fea,0x03fff90f,0x01bfe200,0xf101fff8,0x2003ffff,0x36002fff,
    0x7fe405ff,0x7ffa8005,0x36037fcc,0x7f4002ff,0x3e60004f,0x3fa0005f,
    0x3ffe601f,0x200fff12,0x7d405ffc,0x17fe604f,0xa807ff70,0x3ffa04ff,
    0x003fff60,0x801bfe20,0x3e603ffd,0x3f6006ff,0x3fe6005f,0x3fff704f,
    0x2fffa800,0xf904ffe8,0xffb800ff,0xf302000f,0x7e4000bf,0xffff103f,
    0x401bfea5,0x7d403ffc,0x17fe604f,0xa807ff70,0x3ffa04ff,0x0077fec0,
    0x801bfe20,0xf701fffb,0x2a007fff,0xaaadffff,0xefffc83c,0x4fffecac,
    0xba9aabc8,0xf304fffe,0xfb737dff,0x7dc003ff,0xfd1001ff,0x017fe61d,
    0x40fff980,0x32ffffe8,0xf9801fff,0x7fd401ff,0x017fe604,0xfa807ff7,
    0x03ffa04f,0x001dffd1,0x20037fc4,0xcaacfffe,0x1ffffffe,0xfffffb00,
    0x3ee09fff,0xffffffff,0xffffff02,0x9807ffff,0xffffffff,0x7666401f,
    0x32004fff,0xbff35fff,0xeffe8000,0xfaeffdab,0x33fffa2f,0xffda99ab,
    0x5555544f,0xaaaadffc,0xb80bff31,0x2aaaa3ff,0xaaadffca,0x101ffd1a,
    0x4400dfff,0x74c006ff,0xffffffff,0x00fffeae,0xfffffd50,0x7f6d407f,
    0x3e00deff,0x3effffff,0x3ffb6200,0xff800cef,0x4003ffff,0xff35fffc,
    0xfe88000b,0x98efffff,0x3ffa22ff,0xffffffff,0xfffff84f,0xffffffff,
    0xb80bff35,0x3fffe3ff,0xffffffff,0x201ffd5f,0x1005fff9,0x2e000dff,
    0x23effffe,0x8006fff8,0x44000998,0x26660009,0x98800009,0x77ffc000,
    0xff88000c,0x00bff31f,0xdfffb100,0x20bfe617,0xffffffda,0xffff00be,
    0xffffffff,0x017fe6bf,0x7ffc7ff7,0xffffffff,0x01ffd5ff,0x402fffd4,
    0x80006ff8,0x00000009,0x00000000,0x20000000,0x13100000,0x26000000,
    0x01880000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x20000000,0x4401aa98,0x001accba,0x530006a2,
    0x4c005579,0x81abccba,0xaaaaaaa9,0x0aaa2aaa,0x800554c0,0x00abcca9,
    0x35799751,0xaaaaaa80,0xaaaaaaaa,0x800d5542,0x5550aaa8,0xaaa88003,
    0x06f2e600,0x00035550,0x41a88555,0x2a009998,0x05fffffd,0xffffff91,
    0xffa807df,0x7fec403f,0x05ffffff,0x3fffffee,0x7fe44fff,0xffffffff,
    0x200dff17,0x3a602ffc,0xffffffff,0x3fffee0d,0xb02effff,0xffffffff,
    0x41ffffff,0xd800fffc,0x3ffee5ff,0x17ff6000,0x3fffff62,0xbff902ef,
    0x26ffa800,0x3e63fffa,0xfffb83ff,0x885fffff,0xffefffff,0x3fa03fff,
    0xff500fff,0xffffffff,0xffffd10f,0x89ffffff,0xfffffffc,0xdff17fff,
    0x40bff200,0xfffffffb,0x3f20ffff,0xffffffff,0xffffd82f,0xffffffff,
    0x27ff40ff,0xd03ffea0,0x3e6009ff,0x7ffd41ff,0x3fffffff,0x000fffa8,
    0xffe8fff2,0x7fff30ff,0xbcffffb8,0xffd8099a,0xff9310ad,0x3fffe03f,
    0xefffc80f,0x7eba98ab,0x41beffd8,0x4cc42b99,0xff999999,0x200dff17,
    0xffe82ffc,0xba98abef,0x826ee0fe,0x40fffeb9,0xaaaaaaaa,0x85ffeaaa,
    0x3a01fffa,0xfffa83ff,0x44ffd801,0x88acfff8,0xf80fffe9,0x3fe002ff,
    0x3ffffe1f,0x5c5fff10,0x22003fff,0x3fa00fff,0xbfff903f,0x00bfff30,
    0x01fffa83,0x7ff88000,0x3200dff1,0x7ffdc2ff,0x20009804,0x0003ffe8,
    0x3601fff5,0xdff906ff,0x202fff40,0xfa80fff9,0x213ffa01,0xf3005ffc,
    0x5fffc8df,0x7c4bffe2,0x7d4000ff,0x27fdc05f,0xfb017b70,0x3f20009f,
    0x1000005f,0x1bfe2fff,0xf117fe40,0x000005ff,0x40027fe4,0x2203fff8,
    0x7fcc3fff,0x3ffe601f,0x80fff601,0x42ffdc00,0xf9007ffa,0x817b707f,
    0x5ff91fff,0x0bff5000,0x0002ffc8,0x0001fff5,0x0000fff6,0xf8bffc40,
    0x5ff9006f,0x0002ffec,0x00ffee00,0x201bff20,0x3f60fffb,0x6ffd804f,
    0x000dff50,0xff07ff98,0x3ffd005f,0xf1fff800,0x7fc000df,0x03ffe01f,
    0x027fec00,0x00bff900,0x5ffe2000,0xf9006ff8,0x07ffe25f,0xff900000,
    0xfffa8003,0x29ffd000,0xf1006ffa,0x5ffd05ff,0x7ff98000,0x9809ff90,
    0xff8006ff,0x004ff99f,0x107fff20,0x4000bffb,0x20001ffe,0x0004fffa,
    0xf17ff880,0x3ff200df,0x000bff32,0x06ff8800,0x01fff440,0xff5fff30,
    0x7fe4003f,0x0037fd46,0xa82ffd40,0x7fe407ff,0x8eed8003,0xb9732ffb,
    0x7f440379,0xfffa8dff,0x3fe0000d,0x7ec0000f,0x00002eff,0x7fc5ffe2,
    0x25ff9006,0x00004ffb,0x007ffa60,0x000dff90,0x09fffff9,0x23fff880,
    0x80001ffe,0x3fe04ffd,0x07ffa01f,0x33ff6000,0xfffffffe,0x3fff200d,
    0x0004ffff,0x0003ffc4,0x7ffffec4,0x7c40000c,0x00dff17f,0x7fe4bff2,
    0xaaaaa883,0xeeea80aa,0x4000efff,0x0000fff9,0x001ffffd,0x3eadff70,
    0xf980005f,0x3ff200ff,0x00dff304,0x3ffff600,0xfffeddef,0x3fff200f,
    0x40000eff,0x00006ffa,0x3fffffee,0xff10001d,0x401bfe2f,0x5ffb2ffc,
    0xffffff30,0xffff703f,0xe8005bff,0x2a0003ff,0x20004fff,0x0ffebffe,
    0x4ffe8000,0xb83ffd40,0xd00003ff,0xd3017fff,0x3fee09ff,0x03ffffff,
    0x7fd41a98,0xea800006,0x003fffff,0xff17ff88,0x4bff200d,0xff982ffe,
    0xa81fffff,0xffffeeee,0x6ffc800d,0x7fff4000,0xff50000f,0x00009fff,
    0x3e00bffb,0x0ffe81ff,0x3ffd0000,0x20fff980,0xf72effd8,0x7d409fff,
    0x1ffe63ff,0xfd980000,0x44004fff,0x0dff17ff,0x7ecbff20,0x3ffb003f,
    0x2fff5400,0x003ffe60,0xfffffb80,0x3ff60005,0x640000ff,0xf9000eff,
    0x06ff889f,0x36006f64,0xffe801ff,0x1037ffa1,0x3605fffb,0xff10ffff,
    0x8000001f,0x002fffe8,0x7fc5ffe2,0x25ff9006,0xfb004ffb,0xfe88003f,
    0x0fffa02f,0xafff8800,0x30002fff,0x80007fff,0x2000fffc,0x7fdc6ffa,
    0x1bfff203,0xb005ff90,0x1bfe65ff,0x320dffb0,0x3fe2ffff,0x0000001f,
    0x4400bffb,0x0fff17ff,0x7d4bff20,0x3ffb005f,0x09ff7000,0x0001bff2,
    0x3fee9ffb,0xffd0000f,0x7fe40001,0xfff8001f,0xf803ff61,0x2e00ffff,
    0xffc803ff,0x9805ff72,0xfff107ff,0x027ff47f,0xffa80000,0x9ffe2007,
    0xffb007ff,0x003ffe63,0x20007ff6,0xff985ffa,0x3ee0001f,0x13ffa0ff,
    0x007ff400,0x01fffc80,0x229ff900,0x7ff406ff,0x3fea00ff,0xd1ffe805,
    0xfff003ff,0x8bffee01,0x0000fffb,0x06ff9800,0xfe97fe60,0x47ff800f,
    0xfd804ffe,0xffb8001f,0x003ffe83,0x50fffe20,0xd0003fff,0xf90001ff,
    0x540001ff,0x07ff76ff,0x402fff98,0x2600fff8,0x0fffa7ff,0x4c0fff30,
    0x7ff40fff,0xb8000005,0x3f2005ff,0x00fff64f,0xffa8dff5,0x0ffec01f,
    0x20fff400,0x40006ffc,0xffb06ffd,0x1ffd000d,0x0effc800,0x8fff8000,
    0x98800ffd,0x0bff9000,0xff91fff4,0x2ffec01f,0xf50dff70,0x1c403dff,
    0x7ffcc006,0x7fcc0b62,0x07ffea1f,0x6c17ff44,0x3f603fff,0x3f62001f,
    0x0fffcc5f,0x3fff5000,0x013ffe20,0x4001ffd0,0x0000effc,0xdff9ff90,
    0x3e200000,0xeb99aeff,0x7ffc46ff,0xfeba9acf,0xfff501ff,0x3ffff603,
    0x7feccbce,0x2b337fe2,0x5fffecba,0x65de77f4,0xffd84fff,0xffca9acf,
    0xfffd105f,0xff9559bf,0x2aab223f,0xefffdba9,0x777fff40,0xeeeeeeee,
    0x13ffe21e,0x003fff70,0xa8007ff4,0xeeeeefff,0x00eeeeee,0x1fffffd4,
    0xff300000,0xbfffffff,0xfffff301,0x83ffffff,0x03fffecb,0x7fffffd4,
    0x3e27ffff,0xffffffff,0xffe85fff,0x0dffffff,0xfffffd88,0x400dffff,
    0xfffffffc,0xff31ffff,0xffffffff,0xffff881b,0xffffffff,0x3ff62fff,
    0x6ffe800f,0x003ffa00,0x7fffffdc,0xffffffff,0xfffff801,0x44000000,
    0x2dfffffd,0x7fffdc40,0xffb03fff,0x322003df,0xbceffffe,0x7ffff6c1,
    0x301cffff,0x5bfffff9,0xffffd700,0x6cc005bf,0xcefffffe,0x3ffffe61,
    0xf101deff,0xffffffff,0x25ffffff,0x5002fffa,0x3a007fff,0xff7000ff,
    0xffffffff,0xb003ffff,0x0000dfff,0x00098800,0x32006660,0x440002bc,
    0x4cccc001,0x00988001,0x00026200,0x2004ccc0,0x00009999,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x001aa880,0x5400d544,
    0x1555402a,0x2a0554c0,0x554401aa,0x5555540a,0xaaaaaaaa,0x006aa22a,
    0x2a615551,0xaaaaaaaa,0x22aaaaaa,0xaaaaaaaa,0x2a0aaaaa,0x1553002a,
    0x4d555554,0xaaaa9800,0x2aaaaaaa,0x2aaaaaa6,0x542aaaaa,0x001aaaaa,
    0xaa81aa80,0xf102a200,0xff9800bf,0x1fffea02,0x805ffff0,0x3fe21ffc,
    0x7ffec06f,0x7fffffc2,0xffffffff,0x80bff50f,0x3fee5ffd,0xffffffff,
    0x3e5fffff,0xffffffff,0xff11ffff,0x4bff200f,0xfffffff8,0xff701dff,
    0xffffffff,0x3fff21ff,0xffffffff,0xfffff10f,0x007bffff,0xff885ff0,
    0x45fff702,0x54005ff8,0xffea82ff,0x7ffc07ff,0x0ffe406f,0x203ffff1,
    0x7c2ffff8,0xffffffff,0x50ffffff,0x7fe40bff,0x3fffee0e,0xffffffff,
    0x3ffe5fff,0xffffffff,0x0fff11ff,0x7c4bff20,0xffffffff,0xfffb84ff,
    0xffffffff,0xfffff90f,0x1fffffff,0x3fffffe2,0x01efffff,0xf985ff10,
    0xffff881f,0x0017fe0f,0x7f543ff5,0x407fffff,0x201fffff,0x3fe61ffc,
    0xfff703ff,0xaaaaa87f,0xfbaaaaaa,0x417fea7f,0x4c40fffa,0xfff99999,
    0x2099999a,0xfff99999,0x3e21999a,0x5ff9007f,0x2667ffe2,0x42ffffdb,
    0x9999dffb,0x3f219999,0x999999cf,0x3ffe2199,0xffcba999,0xff9802ff,
    0x4c07fd41,0x3e1fffff,0x7fdc006f,0x59ffff71,0xfff80fff,0x3ff205ff,
    0x1bf7fe61,0x01ffeff4,0x549ff700,0xfff885ff,0x07ff4002,0x00ffe800,
    0x6401ffe2,0x0fff12ff,0x3ee37fec,0x7fe4004f,0x37fc4003,0x01fffd10,
    0x7dc0ffa8,0xfffff107,0x20037f41,0xbff10ffb,0xf01ffe61,0x203ffbdf,
    0x3fe61ffc,0x7fcc1ffb,0x20003ffa,0x3fea0ffe,0x003ffe85,0x0000ffe8,
    0x7c401ffd,0x5ff9007f,0xf881ffe2,0x13fee0ff,0x007ff900,0xe806ff88,
    0x3fdc04ff,0xff503fe4,0x007fe85f,0x83907fdc,0x7fc07ff9,0xf905ffae,
    0x7c7fd43f,0x7c77e44f,0xff70004f,0x6c5ffa89,0xfd0004ff,0x3fa0001f,
    0x1ffe200f,0xf897fe40,0x0fffc07f,0xc8009ff7,0x7c4003ff,0xfff9806f,
    0x3fb33260,0xffeccccf,0x04c41ccc,0x32003fec,0x7ff9807f,0xffeb7fc0,
    0x2a1ffc80,0x7c7fc8ff,0x0009ff3f,0xff503ffa,0x002ffdcb,0x0001ffd0,
    0xf8803ffa,0x5ff9007f,0xff01ffe2,0x027fdc1f,0x000fff20,0x3a00dff1,
    0x3ffea3ff,0xffffffff,0x003fffff,0x13ae1ff6,0x3e601ff2,0xbb7fc07f,
    0x1ffc84ff,0x3fe63fee,0x3fe1ff52,0x5ffb8004,0xff35ffa8,0x7f40001d,
    0xffd0000f,0x03ffc401,0xff12ffc8,0x23ffd40f,0x64004ffb,0x7c4003ff,
    0x9ff9006f,0x77fe664c,0xceffcccc,0x3f2001cc,0x207ff40f,0xff9806fd,
    0xf8b7fc07,0x0ffe40ff,0x57fe1ff7,0x017fe5fd,0x2a07ffa0,0x1fff8dff,
    0x07ff4000,0x00ffe800,0x6401ffe2,0x0fff12ff,0xf70fffe6,0xffc8009f,
    0x37fc4003,0x205ffb80,0x03ff84fe,0x983ff200,0x37ec3fff,0x203ffcc0,
    0x13ff26ff,0x7fdc3ff9,0x5ff1ff90,0x2a002ffc,0xbff505ff,0x00005ffd,
    0x20001ffd,0x3e200ffe,0xeeeeeeff,0x12fffeee,0xb7555fff,0xff70bfff,
    0x5555555b,0x777fe435,0x4eeeeeee,0x5401bfe2,0x0ffe06ff,0x40005ff1,
    0x3fee1ffb,0x402ff45f,0x7fc07ff9,0xc83ffe26,0x99ff21ff,0x7fc7fdff,
    0x0fff4006,0x6fffffa8,0x1ffd0000,0x03ffa000,0xffffff88,0xffffffff,
    0xfffff12f,0x207fffff,0xfffffffb,0x3f24ffff,0xffffffff,0x1bfe25ff,
    0x883ffcc0,0x17fc43ff,0x43ff5000,0x3a0ffffe,0x7ff9805f,0x3f237fc0,
    0xc87ff23f,0x27fff47f,0xfa801bfa,0x37fea05f,0x80004ffe,0xd0000ffe,
    0x7fc401ff,0xeeeeeeef,0xf12fffee,0xdfffffff,0x7fffdc01,0x4fffffff,
    0x3bbbbff2,0x224eeeee,0xff3006ff,0x30bfe60d,0x540003ff,0xf5ff12ff,
    0x4027fc7f,0x7fc07ff9,0xf93ffcc6,0x2e3fec3f,0x37f41fff,0x403ffd00,
    0xfff9dffa,0x7ff40002,0x1ffd0000,0x803ffc40,0xfff12ffc,0x8077fe4c,
    0x64004ffb,0x7c4003ff,0xdff5006f,0xf507fe60,0x7cc0001f,0x3fadf72f,
    0x26013fe6,0x37fc07ff,0xffc97fec,0xff11ff61,0x200ffd0d,0x7d406ffa,
    0x03fff55f,0x007ff400,0x200ffe80,0xf9007ff8,0x21ffe25f,0xff705ffc,
    0x3ffc8009,0x037fc400,0x5515ffb8,0x5557ff95,0x03555ffb,0xfd3ff980,
    0x7fc3ff29,0x07ff9803,0x7fcc37fc,0x7ec3ff96,0xfe83ec87,0x05ffd007,
    0x3f25ffa8,0xfd0000ef,0x3fa0001f,0x1ffe200f,0xf897fe40,0x2fff887f,
    0x4004ffb8,0x44003ffc,0xffb006ff,0x3ffffe67,0xffffffff,0x44004fff,
    0x31ff8bff,0x07ff17ff,0xf80fff30,0x93ffd06f,0x03ff43ff,0x2a01ff60,
    0xffa806ff,0x002fff45,0x0000ffe8,0x7c401ffd,0x5ff9007f,0x7dc1ffe2,
    0x04ffb86f,0x001ffe40,0x2201bfe2,0xddd31fff,0xfddddfff,0x007dddff,
    0x7fbcff88,0x17fc77f4,0x203ffcc0,0xbff506ff,0x37f43ff9,0x201ff600,
    0xfa802ffe,0x1fffc45f,0x007ff400,0x200ffe80,0xf9007ff8,0x41ffe25f,
    0x7dc1fff8,0x7fe4004f,0x37fc4003,0xb037fec0,0x00bfd0df,0x9fb9ff00,
    0x2ffaffb8,0x407ff980,0x3ffa06ff,0x1bfe1ffd,0x401ffb00,0xf5006ffa,
    0x5fff50bf,0x00ffe800,0x401ffd00,0xf9007ff8,0x81ffe25f,0x7fdc5ffc,
    0x1ffe4004,0x01bfe200,0x6c03fff7,0x004fe85f,0x1ffdff80,0x0ffeffcc,
    0x203ffcc0,0x3fea06ff,0x1bfe1fff,0x401ffb00,0xf5002ffe,0x3fff20bf,
    0x03ffa000,0x007ff400,0x3200fff1,0x0fff12ff,0xf70fffc4,0xffc8009f,
    0x37fc4003,0x04fffe98,0x1ffc27f4,0x7fff4000,0x3ffffd07,0xfeeeeed8,
    0x26eeeeff,0x7ff406ff,0x01bfe1ff,0x2a03ff90,0x3ea006ff,0x1bffa05f,
    0x800ffe80,0xfffccccc,0xf10ccccc,0x3ff200ff,0xc80fff12,0x13fee5ff,
    0x99bff900,0x19999999,0x3733ffe2,0x04fffffe,0x7fc43ff8,0xffe80002,
    0xffff704f,0xffffff81,0x7fffffff,0xff701bfe,0x1bfe23ff,0x203ff900,
    0x2a003ffe,0x3fe205ff,0x1ffd004f,0xffffff00,0x3fffffff,0x6401ffe2,
    0x0fff12ff,0xf71fff88,0xffc8009f,0xffffffff,0xffff10ff,0x5dffffff,
    0x987ff100,0xd80002ff,0xff101fff,0xffff81ff,0xffffffff,0x101bfe7f,
    0x3e23ffff,0x7fe4005f,0x007ffa81,0x2a02ffd4,0xfe803fff,0xffff800f,
    0xffffffff,0x00fff11f,0x7fc4bff2,0x75ffd807,0xfc8009ff,0xffffffff,
    0xfff10fff,0x037bdfff,0x2617fc40,0x000001ff,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0xa8800000,
    0x099aaaaa,0x2aaa2000,0x55400002,0x555101aa,0x20033555,0x880002aa,
    0x4009bcb9,0x000000c8,0x55440072,0x554c4000,0x5300009a,0xaa980035,
    0xaaa98000,0x8013301a,0x03310998,0xff9806a6,0xffffffff,0x7fec000b,
    0x2600007f,0xf303ffff,0xffffffff,0x03ffc05d,0x3fffee00,0xfd102fff,
    0x8800003d,0xfb101ffd,0x407fffff,0xfffffec8,0xeb800cff,0x05ffffff,
    0x3fffff66,0x7fec404f,0x20ffffff,0x7dc05ff9,0x221ff93f,0x82fffffd,
    0xfffffff9,0x000fffff,0x00bffffe,0x7ffff400,0xfffff303,0x1dffffff,
    0x2000fff0,0xfeffffe8,0xfd884fff,0x100002ff,0xd303dffd,0xffffffff,
    0xffff301d,0x1fffffff,0x3ffffa60,0xf707ffff,0xffffffff,0xffff503d,
    0x41ffffff,0x7dc05ff9,0xd13ff93f,0x5fffffff,0x999dff98,0x06fffda9,
    0xbffdff50,0xfff90000,0x3fe607ff,0xfda9999d,0x3ffc0eff,0x0dffd800,
    0xc817ffd4,0x40003fff,0x880dfff9,0xd310cfff,0x7bf30bff,0xfffb5133,
    0x7ffff10d,0x70f95335,0x73159fff,0xff88dfff,0x953109cf,0x202ffcc1,
    0x7ff93ffb,0xff735dff,0x05ff98df,0x2007ffea,0x07ffaffd,0x5f7fcc00,
    0xbff303ff,0x227ffcc0,0xfb8007ff,0x1bfe606f,0x004fffa8,0x409fff70,
    0xfd103ffc,0xfa80105f,0x77fec0ff,0xfff10200,0x8fffa205,0x4c004ffb,
    0x7fdc05ff,0x0bffff93,0xff987ffe,0x01ffec05,0x2ffeb7fc,0x27ffa000,
    0xff303ffb,0x47ffa80b,0xfe8007ff,0x17ff401f,0x01bfff30,0x01fffe40,
    0xfa80dff3,0xffd0005f,0x007ffd43,0x300fff20,0x3ff21fff,0x2ffcc003,
    0x7e4ffee0,0x3ff205ff,0x9017fe62,0xffa807ff,0x0009ff74,0x7fdd3fee,
    0x00bff303,0x3ffc1fff,0x403ffc00,0x74404ffa,0x6c401eff,0x7dc01fff,
    0x06ff803f,0x6c5ff900,0xff8003ff,0x1ffe800f,0x4001dff5,0x7dc05ff9,
    0x80dff93f,0x3fe63ffb,0x007ff405,0x7fc47ff6,0x6ff88007,0x7cc0ffee,
    0x1ffe805f,0xf3001ffe,0xbff300df,0x5fffb100,0x03bffa20,0x2007ff60,
    0xf90007ff,0x007ffc5f,0x401bfe20,0xfff12ffc,0xff30039f,0x93ffb80b,
    0xaa9807ff,0x9817fe61,0x7ff806ff,0x20017ff4,0x3fee1ffd,0x00bff303,
    0x3ffc1fff,0x01ffe200,0xc801bfe2,0x7fcc3fff,0x3ffa005f,0xffffffff,
    0xc981ffff,0xfffffffe,0x00fff12f,0x200bff30,0x3fe63ffb,0x300befff,
    0xffb80bff,0x0007ff93,0x7d417fe6,0x7fd401ff,0x0027fe44,0xffb89ff5,
    0x80bff303,0x3ffc7ff8,0x007ffc00,0x2e003ffc,0xfff54fff,0xffff800b,
    0xffffffff,0x7fec1fff,0xffffffff,0x00dff32f,0x2009ff50,0x7e444ffa,
    0x40dfffff,0x7dc05ff9,0x007ff93f,0x3bbffe60,0x00dfffee,0x7cc2ffd8,
    0xdff1007f,0x2607ff70,0x7fec05ff,0x4003ffc4,0x7cc04ffd,0xfd1000ff,
    0x7ffe41df,0x2fffa002,0xaaaaaaaa,0x3ff60aaa,0xc9999abf,0x0fff12ff,
    0x00bff300,0x5c40ffee,0x21fffffd,0x7dc05ff9,0x007ff93f,0x3ffffe60,
    0x01cfffff,0xfff07ff8,0x03ffb003,0x3e607ff7,0xfffb105f,0x8007ff81,
    0x109dfff9,0x00ffffb5,0x5c17ffea,0xfb004fff,0x3ea0003f,0x3ff200ff,
    0x0003ffe2,0x3200dff1,0xfb8802ff,0x17fe66ff,0x3f27ff70,0xff30003f,
    0xfffddddf,0x7fd409ff,0x809ff905,0xff704ffa,0x33bfe607,0xffffedcc,
    0x0007ff81,0xfffffff7,0x00dfffff,0xa807fff7,0xfc805fff,0xff70003f,
    0x22ffc809,0xf8002ffe,0xffe800ff,0x3ffe2000,0xd80dff30,0x07ff93ff,
    0x417fe600,0x903fffc9,0x3fe605ff,0x807ff407,0xff303ffb,0xffffffff,
    0x01ffe01b,0xffffe980,0x05ff9cff,0x8017ffe4,0x200effe9,0x8000effa,
    0x3a203ffd,0x1bff22ff,0x013ff600,0xd000bff5,0x3ffe23ff,0x27fff700,
    0x30003ffc,0xffc80bff,0x401fff07,0xff901fff,0x81ffdc05,0xeffffff9,
    0x3ffc01bc,0x4d4c4000,0x4413fe61,0x4001effe,0x201fffd8,0x4000dffe,
    0xff505ffc,0x7ffc45ff,0xff30600d,0x3ffe605f,0x7ffd4001,0x2e0bffe0,
    0xff93ffff,0x3fe60007,0x0fffc405,0x3333ffea,0x4ffecccc,0xcccfff88,
    0xeffecccc,0xbff31ccc,0x03ffc000,0x3fee0000,0x0effe982,0x3fff2000,
    0x7ffff302,0x3b753335,0x4ce7ffcc,0x2fffffdb,0x5e7fffdc,0xfc87ecaa,
    0xfca9adff,0x566f44ff,0xfffcb99a,0x56fffe44,0x3ffdffda,0x20007ff9,
    0xfe805ff9,0x7fffe41f,0xffffffff,0xffff987f,0xffffffff,0xf32fffff,
    0x7fc000bf,0x6c000007,0x7ffd40ff,0xff700005,0x3ffaa09f,0xffffffff,
    0x7ffffec1,0x2ff9bfff,0xffffffa8,0xff907fff,0x7fffffff,0xffffffd0,
    0x881bffff,0xffffffff,0xff93ff9b,0x3fe60007,0x40fff805,0xffffffff,
    0x1fffffff,0x7fffffcc,0xffffffff,0xbff32fff,0x03ffc000,0x7ff70000,
    0x003fff88,0x17ffd400,0xffffec88,0xfb80deff,0xf31dffff,0x3fb2205f,
    0x203effff,0xdfffffda,0xffffd901,0x4405bfff,0x11effffd,0x0fff27ff,
    0x02ffcc00,0xff51bfea,0x3333333d,0x009ffb33,0x981ffdc0,0x3e0005ff,
    0x5000007f,0x0bea0dff,0x274c0000,0x01333300,0x00002620,0x440004c4,
    0x26620009,0x99800199,0x30000000,0x7fd40bff,0x01ffe43f,0x0006ffa8,
    0x7cc0ffee,0x3fe0005f,0x75400007,0x00202fff,0x00010000,0x00000000,
    0x00000000,0x00000000,0xceff9800,0xfffedccc,0x000fff84,0x40007ffe,
    0xff303ffb,0x7ffc000b,0xcccccccc,0x7766643c,0x002effff,0x00000000,
    0x00000000,0x00000000,0x00000000,0x7ffcc000,0xffffffff,0x006ffa83,
    0x80027fec,0xff303ffb,0x7ffc000b,0xffffffff,0x7ffffc6f,0x00003fff,
    0x00000000,0x00000000,0x00000000,0x00000000,0xfffff300,0x64059ddf,
    0x7d4003ff,0xff70006f,0x017fe607,0xffffff80,0x46ffffff,0x0abcefff,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x33000000,0x809aa981,0x202a2098,0x999981a9,0x99999999,0x00026621,
    0x26621331,0x44666000,0x98800999,0x09970009,0x0004c400,0x54c002aa,
    0xccccb802,0xcccccccc,0x9833314c,0x99998099,0x66ee4400,0x6eed4000,
    0x03dddddd,0x997fcc00,0x42fffffe,0x9fff56fb,0x3e27ffec,0xffffffff,
    0x3fe67fff,0x9ffd4004,0xf7005ffc,0x17ffe2bf,0x005fff30,0x40003ffa,
    0x3f2006fb,0x7fc402ff,0x7ffec01f,0xffffffff,0x1fff77ff,0x74c2fff4,
    0xff500eff,0x3205ffff,0x3fffee6e,0x005fffff,0x7d5ffcc0,0x2fffffff,
    0x3ffe7bee,0xffffb8ff,0x3ffffe0f,0x7fffffff,0x70017fe2,0x3ffe65ff,
    0x22ffe800,0x3a03fff9,0x3fa005ff,0xbf70000f,0x37fffc00,0x01bfff60,
    0xfffffffb,0x2fffffff,0x3fa0fffb,0xdffb105f,0xffffff01,0x4ffd07ff,
    0xfffffffb,0x4c0005ff,0x99effeff,0x3ee6fffb,0xbff8afde,0x23ffa8ef,
    0xaaaaaaaa,0x7fc5ffea,0x0ffe4006,0xf9807ffd,0x0fffb87f,0x000effb8,
    0x22003ffa,0x06227d41,0x807ffff4,0x03ffbff9,0x3fee0000,0x202ffec7,
    0x3ee0effb,0x8ffff24f,0x44446ff8,0x00088888,0x4ffff980,0xf71fff88,
    0x7fff47ff,0x4009ff11,0x7f40fffa,0x07fec007,0xfc80dff7,0x8bffb04f,
    0x4001fff9,0xfc800ffe,0x6fa93ea3,0x03ffff50,0x07fed3fa,0xffa80000,
    0x4027fec7,0xffb0eff9,0xdefffb81,0x00002fff,0x4fff9800,0x7dcbffa0,
    0x22ffec7f,0xff3005ff,0x81ffb03f,0x47fe84eb,0x3e01fff8,0xfff100ff,
    0x001fff47,0x74007ff4,0x8bf99eff,0xfb01fffd,0x1ff701ff,0x00013fe2,
    0x3237fd40,0x360004ff,0xffff507f,0x00000bff,0x01bfe600,0x3fee7ff9,
    0x3e0ffec3,0xffe8805f,0xf83ff903,0x437fc0ff,0xff504ffc,0x9fffa80b,
    0xd0005ffb,0x3aa001ff,0xfffdfcff,0x43ffdc03,0x7fe43ff8,0xcccccb81,
    0xcccccccc,0xfc8dff34,0x2620003f,0x3bff6200,0x00000004,0xf7017fe6,
    0xb07fee7f,0x00bff0ff,0x7d40bffb,0x0fffe62f,0xfff30bff,0x200bff60,
    0x0effeffc,0x333332a0,0xccccfffc,0xffd503cc,0x3f6007ff,0x887fc84f,
    0xfffd86ff,0xffffffff,0x8bff37ff,0x00003ffb,0x00000000,0x02ffcc00,
    0x7fdcffee,0x7fc3fec1,0x077fdc05,0x7e47ff30,0x0ffe26ff,0x3e217ff4,
    0x3ffa007f,0x7fe401ff,0xffffffff,0x106fffff,0x003bfff9,0xf881fff7,
    0x87ff503f,0xfffffffd,0x17ffffff,0x2eea89dd,0x00000000,0x4c000000,
    0x7fdc05ff,0xfd83ff73,0x2605ff87,0x7c401fff,0x3ff7fa4f,0x2e05ff30,
    0x27fdc5ff,0x09fff500,0xffffff90,0xffffffff,0xeffc88df,0x5c1dffef,
    0xd81ffffc,0x07ff406f,0x00000000,0x00000000,0x7cc00000,0x9ffdc05f,
    0x3fec1ffb,0xff882ffc,0x2bff002f,0x53ff8ff9,0x3fe203ff,0x007ffa0f,
    0x0fffff44,0x01ffd000,0xf35dff90,0x21dffd37,0x980dffff,0x7fcc02ff,
    0x00000004,0x00000000,0x98000000,0x7fdc05ff,0xfd83ff73,0xfb05ff87,
    0xb7f4009f,0x2edfb5fb,0x3ff600ff,0x400dff12,0x0fffdffd,0x01ffd000,
    0x3ea19fb0,0xacd9bee4,0x400f2e01,0x00000ccb,0x00000000,0x00000000,
    0x202ffcc0,0x3ff73ffb,0x5ff87fd8,0x4006ffc8,0x2a7fd7fd,0x407fc9ff,
    0x7ff96ffa,0x65bff200,0xfd0006ff,0xa833001f,0x0000cc4f,0x00000000,
    0x00000000,0x00000000,0x7017fe60,0x07fee7ff,0x8bff0ffb,0x4000fffa,
    0x20ff9ffc,0x806fdcff,0x0ffe8ffe,0x21fffa80,0xe8004ffe,0xf70000ff,
    0xbbbbb80b,0xbbbbbbbb,0x00bbbbbb,0x00000000,0x00000000,0xf3000000,
    0x3ffb80bf,0x7fd83ff7,0x3fe25ff8,0xffb8002f,0x777ec6fd,0xdffb805f,
    0xff8804ff,0x17ffcc3f,0x003ffa00,0x3e02fdc0,0xffffffff,0xffffffff,
    0x000001ff,0x00000000,0x00000000,0x80bff300,0x3ff73ffb,0x5ff87fd8,
    0x3333bffa,0x42cccccc,0x543ffff9,0x8803ffff,0x801fffff,0xff705ffe,
    0x7ff4003f,0x05530000,0xfffffff8,0xffffffff,0x0001ffff,0x00000000,
    0x00000000,0xbff30000,0xf73ffb80,0xf87fd83f,0xfffff35f,0xffffffff,
    0x0ffff889,0x002ffff8,0x900dfffb,0x7f401fff,0xffd000ef,0x00000001,
    0x00000000,0x00000000,0x00000000,0x0bff3000,0xff73ffb8,0xff87fd83,
    0xffffff35,0x9fffffff,0x320dfff0,0xf5001fff,0xffa807ff,0x7ffc402f,
    0x00000005,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,
};

static signed short stb__consolas_35_usascii_x[95]={ 0,7,4,0,1,0,0,7,5,4,2,1,4,4,
6,1,1,2,2,2,0,3,2,1,2,1,7,4,2,2,3,5,0,0,2,1,1,3,3,1,1,2,3,2,
3,0,2,0,2,0,2,1,1,1,0,0,0,0,1,5,2,4,2,0,0,2,2,2,1,1,0,1,2,2,
2,3,2,1,2,1,2,1,3,3,1,2,1,0,1,1,2,2,8,3,1, };
static signed short stb__consolas_35_usascii_y[95]={ 25,0,0,2,-1,0,1,0,-1,-1,0,7,19,14,
19,0,2,2,2,2,2,2,2,2,2,2,7,7,6,11,6,0,0,2,2,2,2,2,2,2,2,2,2,2,
2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,0,0,2,29,0,7,0,7,0,7,0,7,0,0,
0,0,0,7,7,7,7,7,7,7,2,7,7,7,7,7,7,0,-3,0,12, };
static unsigned short stb__consolas_35_usascii_w[95]={ 0,5,11,19,17,19,20,5,10,11,15,17,9,11,
7,16,17,16,16,15,19,14,16,17,16,17,6,9,14,15,14,11,20,20,16,17,17,14,14,17,17,15,12,16,
14,19,16,19,16,20,16,17,17,17,20,19,19,20,17,10,16,10,16,20,12,15,16,15,16,17,18,17,15,15,
13,16,15,17,15,17,16,16,15,14,16,15,17,19,18,17,15,14,4,14,18, };
static unsigned short stb__consolas_35_usascii_h[95]={ 0,26,9,23,31,26,25,9,34,34,16,17,12,4,
7,29,24,23,23,24,23,24,24,23,24,23,19,24,20,9,20,26,33,23,23,24,23,23,23,24,23,23,24,23,
23,23,23,24,23,30,23,24,23,24,23,23,23,23,23,33,29,33,12,4,8,19,26,19,26,19,25,26,25,25,
33,25,25,18,18,19,26,26,18,19,24,19,18,18,18,26,18,33,36,33,8, };
static unsigned short stb__consolas_35_usascii_s[95]={ 255,19,185,227,116,235,161,250,18,6,126,
108,142,229,247,155,234,21,205,130,39,219,1,75,18,91,243,35,124,169,109,
189,55,18,1,45,209,194,179,112,144,128,81,93,76,55,38,199,59,134,162,
63,110,94,222,1,164,184,146,29,172,105,152,142,197,157,218,173,42,139,142,
59,93,109,76,125,77,17,1,189,25,201,238,207,182,222,71,51,89,1,35,
40,1,90,210, };
static unsigned short stb__consolas_35_usascii_t[95]={ 1,38,138,90,1,1,38,65,1,1,138,
138,138,138,90,1,38,90,65,65,114,38,65,90,65,114,65,65,114,138,114,
1,1,114,114,65,90,90,90,65,90,90,65,90,114,90,90,38,114,1,90,
65,90,65,65,90,65,65,65,1,1,1,138,151,138,114,1,114,38,114,38,
38,38,38,1,38,38,138,138,114,38,1,114,114,38,114,138,138,138,38,138,
1,1,1,138, };
static unsigned short stb__consolas_35_usascii_a[95]={ 308,308,308,308,308,308,308,308,
308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,
308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,
308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,
308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,
308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,
308,308,308,308,308,308,308, };

// Call this function with
//    font: NULL or array length
//    data: NULL or specified size
//    height: STB_FONT_consolas_35_usascii_BITMAP_HEIGHT or STB_FONT_consolas_35_usascii_BITMAP_HEIGHT_POW2
//    return value: spacing between lines
static void stb_font_consolas_35_usascii(stb_fontchar font[STB_FONT_consolas_35_usascii_NUM_CHARS],
                unsigned char data[STB_FONT_consolas_35_usascii_BITMAP_HEIGHT][STB_FONT_consolas_35_usascii_BITMAP_WIDTH],
                int height)
{
    int i,j;
    if (data != 0) {
        unsigned int *bits = stb__consolas_35_usascii_pixels;
        unsigned int bitpack = *bits++, numbits = 32;
        for (i=0; i < STB_FONT_consolas_35_usascii_BITMAP_WIDTH*height; ++i)
            data[0][i] = 0;  // zero entire bitmap
        for (j=1; j < STB_FONT_consolas_35_usascii_BITMAP_HEIGHT-1; ++j) {
            for (i=1; i < STB_FONT_consolas_35_usascii_BITMAP_WIDTH-1; ++i) {
                unsigned int value;
                if (numbits==0) bitpack = *bits++, numbits=32;
                value = bitpack & 1;
                bitpack >>= 1, --numbits;
                if (value) {
                    if (numbits < 3) bitpack = *bits++, numbits = 32;
                    data[j][i] = (bitpack & 7) * 0x20 + 0x1f;
                    bitpack >>= 3, numbits -= 3;
                } else {
                    data[j][i] = 0;
                }
            }
        }
    }

    // build font description
    if (font != 0) {
        float recip_width = 1.0f / STB_FONT_consolas_35_usascii_BITMAP_WIDTH;
        float recip_height = 1.0f / height;
        for (i=0; i < STB_FONT_consolas_35_usascii_NUM_CHARS; ++i) {
            // pad characters so they bilerp from empty space around each character
            font[i].s0 = (stb__consolas_35_usascii_s[i]) * recip_width;
            font[i].t0 = (stb__consolas_35_usascii_t[i]) * recip_height;
            font[i].s1 = (stb__consolas_35_usascii_s[i] + stb__consolas_35_usascii_w[i]) * recip_width;
            font[i].t1 = (stb__consolas_35_usascii_t[i] + stb__consolas_35_usascii_h[i]) * recip_height;
            font[i].x0 = stb__consolas_35_usascii_x[i];
            font[i].y0 = stb__consolas_35_usascii_y[i];
            font[i].x1 = stb__consolas_35_usascii_x[i] + stb__consolas_35_usascii_w[i];
            font[i].y1 = stb__consolas_35_usascii_y[i] + stb__consolas_35_usascii_h[i];
            font[i].advance_int = (stb__consolas_35_usascii_a[i]+8)>>4;
            font[i].s0f = (stb__consolas_35_usascii_s[i] - 0.5f) * recip_width;
            font[i].t0f = (stb__consolas_35_usascii_t[i] - 0.5f) * recip_height;
            font[i].s1f = (stb__consolas_35_usascii_s[i] + stb__consolas_35_usascii_w[i] + 0.5f) * recip_width;
            font[i].t1f = (stb__consolas_35_usascii_t[i] + stb__consolas_35_usascii_h[i] + 0.5f) * recip_height;
            font[i].x0f = stb__consolas_35_usascii_x[i] - 0.5f;
            font[i].y0f = stb__consolas_35_usascii_y[i] - 0.5f;
            font[i].x1f = stb__consolas_35_usascii_x[i] + stb__consolas_35_usascii_w[i] + 0.5f;
            font[i].y1f = stb__consolas_35_usascii_y[i] + stb__consolas_35_usascii_h[i] + 0.5f;
            font[i].advance = stb__consolas_35_usascii_a[i]/16.0f;
        }
    }
}

#ifndef STB_SOMEFONT_CREATE
#define STB_SOMEFONT_CREATE              stb_font_consolas_35_usascii
#define STB_SOMEFONT_BITMAP_WIDTH        STB_FONT_consolas_35_usascii_BITMAP_WIDTH
#define STB_SOMEFONT_BITMAP_HEIGHT       STB_FONT_consolas_35_usascii_BITMAP_HEIGHT
#define STB_SOMEFONT_BITMAP_HEIGHT_POW2  STB_FONT_consolas_35_usascii_BITMAP_HEIGHT_POW2
#define STB_SOMEFONT_FIRST_CHAR          STB_FONT_consolas_35_usascii_FIRST_CHAR
#define STB_SOMEFONT_NUM_CHARS           STB_FONT_consolas_35_usascii_NUM_CHARS
#define STB_SOMEFONT_LINE_SPACING        STB_FONT_consolas_35_usascii_LINE_SPACING
#endif

