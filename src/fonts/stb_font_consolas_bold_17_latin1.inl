// Font generated by stb_font_inl_generator.c (4/1 bpp)
//
// Following instructions show how to use the only included font, whatever it is, in
// a generic way so you can replace it with any other font by changing the include.
// To use multiple fonts, replace STB_SOMEFONT_* below with STB_FONT_consolas_bold_17_latin1_*,
// and separately install each font. Note that the CREATE function call has a
// totally different name; it's just 'stb_font_consolas_bold_17_latin1'.
//
/* // Example usage:

static stb_fontchar fontdata[STB_SOMEFONT_NUM_CHARS];

static void init(void)
{
    // optionally replace both STB_SOMEFONT_BITMAP_HEIGHT with STB_SOMEFONT_BITMAP_HEIGHT_POW2
    static unsigned char fontpixels[STB_SOMEFONT_BITMAP_HEIGHT][STB_SOMEFONT_BITMAP_WIDTH];
    STB_SOMEFONT_CREATE(fontdata, fontpixels, STB_SOMEFONT_BITMAP_HEIGHT);
    ... create texture ...
    // for best results rendering 1:1 pixels texels, use nearest-neighbor sampling
    // if allowed to scale up, use bilerp
}

// This function positions characters on integer coordinates, and assumes 1:1 texels to pixels
// Appropriate if nearest-neighbor sampling is used
static void draw_string_integer(int x, int y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0, cd->t0); glVertex2i(x + cd->x0, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t0); glVertex2i(x + cd->x1, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t1); glVertex2i(x + cd->x1, y + cd->y1);
        glTexCoord2f(cd->s0, cd->t1); glVertex2i(x + cd->x0, y + cd->y1);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance_int;
    }
    glEnd();
}

// This function positions characters on float coordinates, and doesn't require 1:1 texels to pixels
// Appropriate if bilinear filtering is used
static void draw_string_float(float x, float y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0f, cd->t0f); glVertex2f(x + cd->x0f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t0f); glVertex2f(x + cd->x1f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t1f); glVertex2f(x + cd->x1f, y + cd->y1f);
        glTexCoord2f(cd->s0f, cd->t1f); glVertex2f(x + cd->x0f, y + cd->y1f);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance;
    }
    glEnd();
}
*/

#ifndef STB_FONTCHAR__TYPEDEF
#define STB_FONTCHAR__TYPEDEF
typedef struct
{
    // coordinates if using integer positioning
    float s0,t0,s1,t1;
    signed short x0,y0,x1,y1;
    int   advance_int;
    // coordinates if using floating positioning
    float s0f,t0f,s1f,t1f;
    float x0f,y0f,x1f,y1f;
    float advance;
} stb_fontchar;
#endif

#define STB_FONT_consolas_bold_17_latin1_BITMAP_WIDTH         256
#define STB_FONT_consolas_bold_17_latin1_BITMAP_HEIGHT        100
#define STB_FONT_consolas_bold_17_latin1_BITMAP_HEIGHT_POW2   128

#define STB_FONT_consolas_bold_17_latin1_FIRST_CHAR            32
#define STB_FONT_consolas_bold_17_latin1_NUM_CHARS            224

#define STB_FONT_consolas_bold_17_latin1_LINE_SPACING          11

static unsigned int stb__consolas_bold_17_latin1_pixels[]={
    0x08b22591,0x99988000,0x20133310,0x00400080,0x40064400,0x54d80dea,
    0x676d403d,0x000076c0,0x20000000,0x00000029,0x00000d44,0x76c00000,
    0xa81bd703,0xf9a7cc4e,0x4007bf34,0x7fffd1fe,0x2e1bffee,0x2a01761f,
    0x77ecc3fe,0x007cc00c,0x3e203bea,0x3ee07f97,0x3fa0ffce,0xcaefd800,
    0x5f55f882,0x0beabf10,0x55f88d90,0x2bbf605f,0x0bf3e02c,0x42faafc4,
    0xb05f55f8,0x6c0595df,0xdd5f902f,0x3e637dc1,0x3ae29f34,0x2ff8802f,
    0x3ee7f955,0x077dc2ac,0x7fc409f9,0x3fbfea1c,0xbfd9306f,0x26015407,
    0x93e60511,0x003fa4f8,0x03ffd5d1,0x20feedf1,0x807f76f8,0xfbb7c45d,
    0xffeae883,0x07b3f101,0x21fddbe2,0x887f76f8,0x001ffeae,0x317ea000,
    0xf113e69f,0x2a0ea009,0xf305f73f,0x207fd03f,0x8ffc42fb,0x7fe43fe9,
    0x06a65fff,0xa81a98aa,0xd3ec3742,0x1005951f,0x88060880,0xefca8060,
    0x20030442,0x00deb800,0x41101822,0x4e980801,0x44e99f54,0x98bf53ea,
    0xdf09f34f,0x2aaaaa60,0x2fb9fd40,0xff102fd8,0xfa83f701,0xff137dc5,
    0x5fb82bb3,0x8bf737d4,0x26fe66fa,0xfd0fbedd,0xd50bfffb,0x3aa019df,
    0x274c0cef,0xfffb0faa,0x01ddb09f,0x6c00eed8,0xddd500ee,0xeeec8ddd,
    0x5dd10eee,0x45f99f44,0xa8bf34fa,0xf98bf54f,0x0fd09f34,0x0bfffff6,
    0x10bee7f5,0x82fb80ff,0x21fdc1fc,0x27fe27fa,0x20ff884e,0x83fe22fd,
    0x3e7ee2fd,0xfd1fafee,0x5c5fd35f,0xb86ffeff,0x4c6ffeff,0xf727d45f,
    0xf8837f5d,0x3fe203ff,0x3ffe203f,0xdddff703,0xeffeec8d,0x4cdff30e,
    0xfa8bf34f,0x4fa8bf34,0x34f989f5,0x101fb09f,0xa85fb333,0xfb85f73f,
    0x6c27d405,0x221fe41f,0x27fff47f,0x0ff13fc8,0xb1fe27f9,0xf5db3f5f,
    0x4fb8bfa3,0x3fa63ff1,0x74c7fe23,0xf517e63f,0x0fcd7f49,0x702fefdc,
    0x7dc0bfbf,0x09f705fd,0x3e617ea0,0x269f32ff,0xf9a7d45f,0x4f9a7d45,
    0x81a8a7cc,0x7ec04efa,0x2fb9fd42,0x3e201fe4,0x2e17f2e6,0x223fc44f,
    0x4c2ffffd,0xf309f56f,0x9dd13ead,0x21f7dd1f,0x557ea0fe,0xf537dc5f,
    0x3e66fb8b,0x1ff27d45,0xf3fb01f5,0x3e7f601f,0xff3fb00f,0x2009f701,
    0xfef985fa,0x17e69f36,0x517e69f5,0xf313e69f,0x1ffb1009,0x3ea17ec0,
    0x1fd85f73,0x3ff67e80,0x7d46f981,0x3ffff505,0x01fd9fe8,0xe83fb3fd,
    0x1f7bf7cd,0x74fb83fa,0x2e7fa87f,0xf33fd43f,0x3f64fa8b,0x36ff07b9,
    0x3f6ff02f,0x0bf6ff02,0x0aaab7ee,0x67cc2fd4,0xf34f99fd,0xbf34fa8b,
    0x85914fa8,0x2fd804f9,0x7d42fd80,0x3fb85f73,0x3fcc7f80,0x7fb17fc4,
    0x21ff5ee0,0x2e06fdfb,0xcde86fdf,0x3a6dcf9f,0x7e4bfa0f,0x7f93fc43,
    0x17e67f88,0x6f7dc9f5,0x5d3ea19e,0xf74fa84f,0x3ee9f509,0xfffffb84,
    0xf30bf506,0x29f3bf59,0x9a7d45f9,0x1527d45f,0x07d34f98,0x0bf600fd,
    0x30bee7f5,0x86f980bf,0xdffc81fc,0x6c8446fe,0xfff885fd,0x0fffe203,
    0x3fbfebb6,0x36f3fa3f,0xf113f26f,0x3e227e4d,0x9f517e66,0x27fffec4,
    0x21fe65f9,0x90ff32fc,0x2e1fe65f,0x500999df,0x3a9f30bf,0x8bf34faf,
    0xb8bf33fb,0xf98df73f,0x0dd09f34,0x7f50bf60,0x01be0bee,0x03f909f7,
    0x3037ffea,0x0dffffdf,0xf9003ff2,0x4eefb01f,0x7ffff42b,0xf51bee0c,
    0x3ea37dcb,0x7f717e65,0x7437df30,0x41ffeeef,0x1ffeeefe,0x7ff777f4,
    0xa8027dc1,0xf74f985f,0x91fe29fd,0xf91fe25f,0x9f317ea5,0x01ba13e6,
    0x4fea17ec,0x02fe82fb,0x07ee03fa,0xdb105f98,0x36017dff,0x03fd803f,
    0x3fd005f5,0xd87fe601,0xd87fe63f,0xf91fe23f,0xff30be05,0x4c7fdddd,
    0x3feeeeff,0x3bbbbfe6,0x8027dc3f,0x24f985fa,0x3bf64fff,0x77ec6fdc,
    0x4c046fdc,0xdf09f34f,0xf507fe00,0x3e60bee7,0x504fc80f,0x6ffc405f,
    0x102f886d,0x4c40df93,0x8ffc06fc,0x007f40b8,0x1bfb7ff6,0x1bfb7ff6,
    0x1bf73bf6,0x0fee0fc4,0x21fdcdf5,0x50fee6fa,0xeeffb8df,0x77ee5c6e,
    0xfb93e64c,0x3fff624f,0x7ffec40d,0x34f9800d,0x827e4c9f,0x226fc99c,
    0x37f73fb9,0x7dc6fa81,0x02bbe00e,0x206fff4c,0xdff701f9,0x077fdc01,
    0x3ffffe60,0x64007f40,0xf900dfff,0xfb101bff,0x3e601bff,0x3e20fec0,
    0xf883fb0f,0xf883fb0f,0x3fffee0f,0x7fffec7f,0x449f30ff,0x200304ff,
    0x9a7cc001,0x01dff34f,0xe87ffffe,0xfff73fff,0x7743f70d,0x01ff5c00,
    0x1a980002,0x2001a980,0x1880aaa8,0x01000400,0x000000c0,0x00000000,
    0x00000000,0x53e60000,0x300264f9,0x33310555,0x40266621,0x11000441,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x01a88d44,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x3b600000,0x0037ae03,
    0x1ed982c8,0x4007b660,0xed980ceb,0x41f6c001,0xcb8800ed,0x76403eed,
    0x000deb80,0x37ae07db,0x13bbae00,0x6c003db3,0x01ed983e,0x6dc0fb60,
    0xdeb81eff,0x07aa9b00,0x906633ae,0x886d417d,0x80bf601c,0x800eeafc,
    0x3fd102f9,0x200ff440,0xd103eaf9,0x0bf6003f,0x3ea01fdc,0x204fefff,
    0xeafc86f8,0x817ec00e,0xd80eeafc,0xe886ecef,0x02fd801f,0x36007fa2,
    0xddffd02f,0xeeafc85f,0x3fcbfc40,0x1fffe7cc,0x3e27f7f7,0x0001bee3,
    0xfffda800,0x20000000,0x0003daf9,0x81be2000,0xfacffff8,0x000bf204,
    0xf8800000,0x0000000f,0x7dc00000,0x4000220e,0x44205119,0xb5db641a,
    0xea83f98d,0xfd500cef,0xdff7019d,0x44e98bff,0x77f543ea,0x037ae00c,
    0xeb80eed8,0x7e42f443,0x9ffff302,0x03fc09f5,0x3aa01ddb,0x7546eeee,
    0xff86eeee,0xdddd500d,0x03bb60dd,0x77777764,0x3bbbbb20,0x900bfe0e,
    0x81dddddd,0x7501bcba,0xe9fb8379,0xf7001fac,0xf70dffdf,0xf88dffdf,
    0x23fff89f,0x727d45f9,0x20dffdff,0xf101bcba,0x8ff307ff,0x05f984fc,
    0xf59ffff3,0x4413ea09,0xff703fff,0xffb8dddd,0x7fd46eee,0xeffb83ff,
    0xfff886ee,0xdffdd903,0x7ff7641d,0x00ff10ee,0x1ddffdd9,0x27ffffdc,
    0x93ffffee,0x84f9efe8,0x47fe24f9,0x3fe23fe9,0x7d47fd31,0x4cbf7f75,
    0xf8a7d45f,0xb87fd31f,0xb84fffff,0x7fb05fdf,0x7ec03fe2,0xcffff880,
    0x01fd04fa,0x5c17f7ee,0x027dc04f,0xbffb5ff1,0xfb804fb8,0x2fd405fd,
    0x3e617ea0,0x417ea007,0x331fe619,0x6d843fcc,0x2fd49f30,0x45fa9bee,
    0x74fee6fb,0x17e66f8e,0x717ea9f5,0x3e6198df,0x0ff9fd87,0x07f96f98,
    0xffa827d4,0xf984facf,0x3fe7f605,0x5c04fb80,0xa9fe604f,0x013ee3ff,
    0x803fe7f6,0x2fd405fa,0xf5003fcc,0x1fd3100b,0x203fa620,0x49f301fa,
    0x73fd43fb,0x327fa87f,0x7f8bf8af,0x29f517e6,0x03fd43fb,0x7f81fd31,
    0x2ff605fb,0x03f400ff,0x09f57971,0xdbfc03f9,0xaadfb82f,0x556fdc2a,
    0xc86ffc2a,0x2ab7ee4f,0x5fb7f82a,0x2a02fd40,0x01ff885f,0x3220bf50,
    0x220fffff,0x40fffffc,0x21deacf8,0x10ff24f9,0x221fe4ff,0x3eaff27f,
    0x17e66f89,0x10ff29f5,0xfffc88ff,0x5d3ea0ff,0x7fff304f,0x2007f700,
    0x037c44fa,0x213ee9f5,0x46fffffb,0x46fffffb,0x3fdafffa,0x1bffffee,
    0x813ee9f5,0x2fd405fa,0x4040dfd8,0x5bfb05fa,0x6fec1fd3,0x76c0fe9a,
    0x3ea5ecf9,0xdf113f25,0x9be227e4,0xbf36dcfa,0x53ea2fcc,0x237c44fc,
    0x0fe9adfd,0x03fccbf2,0xf1001ffb,0x713ea00d,0x997e407f,0x99dfb87f,
    0x4cefdc09,0xfffe9809,0x2677ee0e,0xf997e409,0x5017ea07,0x3ffe60bf,
    0x5fa82fed,0x3fe21ff0,0x7fc43fe0,0x23ea7ea0,0xfb97ea7b,0xdf72fd46,
    0x3fe65fa8,0x7cc7fb4f,0x6fb9fdc5,0x43fe2fd4,0x3bfa0ff8,0xf501ffee,
    0x00fe400b,0x01fe27d4,0x3ffdddfd,0x7dc04fb8,0x0bfea004,0xefe809f7,
    0xf501ffee,0x205fa80b,0x81efffd9,0x7bff05fa,0x6ffc1ffd,0x9d10ffeb,
    0xfa9b6be2,0xfd87fe65,0xfd87fe63,0x7f6ffe43,0x3f23fc46,0x7ec3ff32,
    0x7f5effc3,0xdddff30f,0x13ea07fd,0x0885f980,0x04fa8ff6,0x3bbbbfe6,
    0x2027dc3f,0x7e4004fb,0xf3027dc3,0x07fddddf,0xbf5017ea,0xfa80df00,
    0x99fff505,0x67ffd41f,0x641f90fc,0xb1bee2ff,0xb0dfdbff,0x20dfdbff,
    0xd80dfffe,0x6c6fdcef,0xa86fedff,0x70fccfff,0x506fa87f,0x0fe8009f,
    0x077f6ff4,0x1fdc01fd,0xdff71bea,0xeffb8ddd,0x337e26ee,0x7fdc1ffd,
    0x0fee6eee,0xfdcb8df5,0x7ee5c4ce,0x07f104ce,0x133bf72e,0x004c004c,
    0x20262020,0x900dfffc,0x3e01bfff,0x7fec401c,0xfffc80df,0x6c02600d,
    0x407fc41f,0x754004fa,0x0677ecc2,0x1fd809d1,0xff707fc4,0xffb8ffff,
    0x7f6c7fff,0xfffb81de,0x107f67ff,0x7ffec1ff,0x3ff60fff,0xa880ffff,
    0xfffffb00,0x0000001f,0x80020000,0x000f4c00,0x00004006,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x754013a6,0x54ef540d,0x01f76cc3,0x9d906f54,0x301d9000,
    0x5e54409d,0xeaa6c2aa,0x83d54d81,0x9d3004ec,0x7640ca80,0x00000004,
    0x54005971,0x000000de,0x50276400,0x06a62a85,0x306e20aa,0xfa809fbf,
    0x7ffdc40e,0x3b7fe65f,0x03bea05f,0xfd0017f2,0x84fdf983,0x6fffeff8,
    0x21fe5fe2,0x907f97f8,0xfdf980bf,0x3213fe04,0x77ed405f,0x981b6203,
    0xa805ffff,0x05f980ef,0x20fbffaa,0xf904efd9,0xff83fa0b,0x6fa8bf70,
    0x99547fd8,0x4c0aa00a,0x7e44fedf,0x1540ff13,0xe8002a60,0x0a99541f,
    0x85fa97e4,0x46605119,0x802a6028,0x3601532a,0x2015301f,0x05ebacfb,
    0x8fec0df3,0x015400fe,0x3fee0ff7,0x7fd44eee,0x15306fed,0x87fc1fd0,
    0x0bf60ff8,0x79751ff2,0x00de5403,0x7f43ffb5,0x9750df51,0x2f2ea037,
    0x3fb2ea01,0xd81bca81,0x6541be0f,0x2a0aa81b,0x81bca80a,0x002aa0aa,
    0xf106f2a0,0x98fe6627,0x42aaefba,0x2a03f67e,0x2e02aa0a,0xe803ff02,
    0xaa8bfa1f,0x07f42aa0,0x89fe41ff,0xfb86a07f,0xfd84ffff,0x7f443fff,
    0x23fa5fff,0x7fdc0ef9,0x7fdc4fff,0x7f444fff,0x7ec1ffff,0x67dc3fff,
    0xffd84fc9,0xd07f43ff,0xffffd81f,0x1fd07f43,0xfe981f90,0x5dae4fff,
    0x3ee6c9ff,0x20ffffff,0xd05fcbfc,0xa987f41f,0x07ff02aa,0x9fb12fcc,
    0x21fd07f4,0x983fe0fe,0x4009f56f,0xf71fe619,0xfd83fa29,0xfd0ff88c,
    0x43305fb1,0xf30cc7f9,0xfd0cfd8f,0xfe8a7dc3,0x37fffea0,0xfe8a7dc0,
    0x0fe83fa0,0x07f453ee,0x207f41fd,0x67f41fd9,0x19b1ffb9,0x989ea1bf,
    0x44199efa,0x3fa04fff,0x7fdc3fa0,0x5dffb07f,0x3fa69f50,0xfe83fa5f,
    0x07fc1fd0,0x007f67fa,0xf07f4c40,0x25fb333f,0xe97ec7f8,0x4404fd8f,
    0xd3100fe9,0xfd1fe21f,0x6cccffc3,0xf00dba2f,0x45fb333f,0xf83fa0fe,
    0x22fd999f,0xd83fa0fe,0x1be61fff,0x3eb3a9fb,0xdf303e62,0x447ffdc0,
    0xfd07f42c,0x41fe6621,0x22ffffc8,0xfaffbbfb,0x0fe83fa6,0x03fee3fd,
    0x540dfbf7,0x3fff225f,0xffff10ff,0x1be67fff,0x263fa7f9,0x3f220dff,
    0x3220ffff,0xf30fffff,0xff11fe8d,0x747fffff,0x220bccdf,0x3fffffff,
    0x10fe83fa,0x7fffffff,0x21fd07f4,0x5fa81efa,0xf9cdafdc,0xdf303e64,
    0x3bef7ea0,0xd07f43fa,0x407f881f,0xf70fffb8,0x4bf31bff,0x743fa0fe,
    0x45fffdef,0x3603fff8,0x35bfb1ff,0x27fe21fd,0xdf309999,0x21fd3fc8,
    0x37f64fe9,0x3f60fe9a,0xf30fe9ad,0xff11fe8d,0x5c133333,0x12ffffff,
    0x133333ff,0x21fd07f4,0x99999ff8,0x0fe83fa0,0x1be609f9,0x7f5b29f7,
    0x6f987b9f,0x3ff25f90,0xfd07f42f,0x1007f881,0x8ffea5ff,0xe83fa4fa,
    0x57fffd0f,0x01ff90ff,0x0ff8ffc4,0x0ff41ff1,0x7fc1ff10,0x37d41fd1,
    0x83fe21ff,0x21ff10ff,0x87fea7f8,0x1be201fe,0x00ff4bf7,0x07fd47fa,
    0x1fe803fd,0x3bee1ff5,0x361ff880,0x2aa5f32f,0x07f983e9,0x43ff45f9,
    0x81ff51fe,0xfd0107f8,0xfd83fe23,0x7fd47fa2,0x04411fd0,0x7f401fec,
    0xffd7bff0,0x5d67fd41,0x7f67fec5,0x36ae3fa6,0x3af7fe4f,0x2f7fe0ff,
    0x37fa0ffe,0x3ea1fffd,0x3e65bacf,0xfa8ff20e,0x7e45bacf,0x2a0fffde,
    0x645bacff,0x10fffdef,0xfd89bffd,0x7ec6fedf,0xf00eea9b,0x7fd495bf,
    0x642ffebb,0x40fffdef,0xcef887f8,0x77e46fec,0x77e46fdb,0x1fd0fffd,
    0x037e4c40,0xffa8ff6a,0x7dc0fccf,0x7ec46fff,0x23fa0dff,0x3ea0dffe,
    0x2a0fccff,0x20fccfff,0x1fccffe8,0x237fffdc,0x85fffffd,0x446ffffb,
    0x40fccffe,0x446ffffb,0x20fccffe,0x6447ffc8,0xfc80dfff,0x3ea00dff,
    0x3fee0fff,0x221ffbef,0x70fccffe,0x2399ff99,0x0cffffe8,0x884fffc8,
    0xd0fccffe,0x77fdc01f,0x4077a200,0x01310009,0x98030018,0x88009800,
    0x20131000,0x4400aaa9,0x40022009,0x00220098,0x200300cc,0x100c4000,
    0x6c022001,0x42ffffff,0x00100098,0x30062011,0x00000035,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x20000000,0x098000ed,0x4274c000,0xcb85952a,0x1bd5001b,0xeaa6c000,
    0x33ae0001,0x59750198,0x3bbbaa17,0x64c0004e,0x3bbaa4ed,0x980002ee,
    0x5c8001de,0x795105d3,0x7006f5c5,0xd30da85d,0x3ae3ea89,0x3aa06d42,
    0x07f43eff,0x2e0bea00,0xf981dffe,0x7eff44fd,0x3fff25ff,0x4077d405,
    0x880cefea,0x9107f97f,0x7cc5dffd,0x7443fffc,0xf71fffff,0x2e0bffff,
    0xffc83efe,0x3bbaa4ef,0x77f5c3fe,0x20f7cc03,0xff03efeb,0xffa89f71,
    0x077dc7ff,0x7f11ff5c,0x53ea2fcc,0x0fe23feb,0x8fff77b2,0xd95000fe,
    0xfb9df70f,0x82a6550f,0x2fe9affe,0x409ff731,0xfdff702a,0x144660df,
    0x7f77ffcc,0xd81a8844,0x2e3fd0cf,0xdffb802f,0x07bea1fe,0xff91fe40,
    0x55409ffb,0x7ff7fec0,0x982a1984,0x98399bff,0x6c7f101a,0x3ea2fcc6,
    0x06d8fe24,0x47f4df50,0xffe982ca,0xb07f43ff,0x8379503f,0x213ee2fe,
    0x379506fa,0xfd31ff88,0x206f2a07,0x540c45fd,0x23fc41bc,0x005f71fe,
    0x3fa043fd,0x44ff2001,0x41ff10ff,0x3882aaa9,0x55531bea,0x4c09f905,
    0x7f102aaa,0x8bf307ea,0x54fe24fa,0x49f5001f,0x45fffdfe,0x1fffabfe,
    0x07fc4bfa,0x49ffffd3,0x217ea0fe,0x7ff4c6fa,0x717ea4ff,0xfffe98df,
    0x003fe64f,0x49ffffd3,0xb8ff46f9,0xff01cdef,0xcddbff80,0x7d4ff200,
    0xff70fec5,0x8ff100ff,0xfe87fffb,0x1fffee02,0x427c5fc4,0x127d45f9,
    0x9809f17f,0x3fa1efba,0xf32fe9af,0x98fefb6d,0x742fedff,0xd1ffb9cf,
    0x7527dc1f,0x9cfe87fd,0x87f71ffb,0x4e7f47fa,0x4bf51ffb,0x33fa0999,
    0xdf31ffb9,0xfff71fe8,0x7fcc49ff,0x7ffc4199,0xf900ffff,0xfd83fe67,
    0x01fe6622,0xf33117ea,0x4405fb0f,0x6d807f99,0x4fa8bf30,0xff700db0,
    0x717f43bf,0x3e33ea9f,0x7fdc5f9c,0xb1be60ef,0xfe83fa9f,0xf30fffe2,
    0x7f94fd8d,0x1be67f88,0x4d3f29fb,0x8df34fff,0x54ff14fd,0xffb881ff,
    0xffffff50,0xfb0ffc43,0xfe8ff207,0x882fffef,0x0ffc407f,0x6fb87f88,
    0x5407f880,0xa8bf301f,0x801fa84f,0xd0ffc998,0xf9afd41f,0x24fa9fac,
    0x26febefa,0xeafdc5fa,0x746fdbcf,0xfb8bf507,0x6f889f95,0x2bf717ea,
    0x9f9514fb,0x4bf717ea,0x1fffddfe,0x7dc47fe0,0x3fc0aaaf,0x1fe413ee,
    0x5fdbdd91,0x7440ff10,0x21fe203f,0x86dceff8,0x53e207f8,0x717e61ed,
    0xebcf887f,0x25fb001d,0x453ee0fe,0x47f96def,0x4cbfa0ff,0xfea7dc6f,
    0x25c0cfff,0xa7dc6f98,0x32fd46fb,0xf54fb8df,0xdf34fb8d,0x3fa24fb8,
    0xf301fdcf,0x7407f81f,0x204ff22f,0x07fc02fe,0xfe883fc4,0x883fc403,
    0xf886fffc,0x7f65b607,0x5f91fe21,0x0dd556d8,0x07f47fa0,0x77fe45fd,
    0x91fe26fd,0xd87fe25f,0x4013fd2f,0x43ff1029,0x43ff32fd,0x87fe23fd,
    0x47ff12fd,0x43ff14fb,0xfd0882fd,0x3ff732e3,0x7d407f84,0xd90ffdcf,
    0x6401ffb9,0x10ff105f,0xff1007fd,0x3e205f80,0x3f33f507,0xdcefd83f,
    0xf30fd46f,0xfd999909,0x7ede7f4d,0x0dfffd86,0x7fddeff4,0x3fb7ff60,
    0xf8803fa6,0xdbffb02f,0xedffd8df,0xedffd86f,0x677fdc6f,0x37ff64fe,
    0x1fe806fe,0x987dfffb,0x2eeeeffe,0x50f7ffdc,0xec83dfff,0x65c0effe,
    0xfd1ccffc,0x5c5ddddf,0x41ccffcc,0xfccb82f9,0x29d11ccf,0x6c47fffc,
    0x3a20dfff,0x3a077ea4,0x320cffff,0xd80cffff,0x3ff6201e,0x7fe441ef,
    0x803fa0df,0xf9101ff8,0xff901bff,0xff9101bf,0xffd501bf,0x7fe445df,
    0x1fe800df,0xfffa8062,0x0102ffff,0x3bff6008,0xffffd80b,0xfffff2ff,
    0x7ffec7ff,0x81442fff,0x2ffffffd,0x3e6621f9,0x07e40602,0x0660fffd,
    0x07d10040,0x80c004c0,0x00088018,0x18002003,0x00600600,0x00000310,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x85bd5000,
    0x04e980da,0x20f7fedc,0x2a198ceb,0x1ec85eee,0x300076c0,0x02607ddb,
    0xd50640dc,0x3a24e989,0x76c1cdee,0x3bba6000,0x3bbba65e,0xddd54eee,
    0x7776cddd,0x0f76403d,0xddddddd3,0x3bbbbaa9,0x440ffb85,0x2eeeeeee,
    0x03ea89d1,0x3bbbbb20,0x5bdddb0e,0x7f13eccc,0x209fbf30,0x22feeffe,
    0x23fffcf9,0xfd87feea,0x8007f401,0x984eeff9,0x5c6fa84f,0xfd17f45f,
    0x7ff7fc43,0x06affa4f,0x97bfff60,0xc99ab9ea,0xddddff75,0x37ff77f4,
    0x262fff98,0x4eeffeee,0x4bdddff7,0x440fffea,0x2fffffff,0x24fb8df3,
    0x3fbb205d,0xfdff0eef,0xb2ffc9ff,0x054caa0d,0x40883bee,0x3e203510,
    0x7401fd87,0x05fb000f,0xffb04f98,0xfa81dfff,0x7f88bf56,0x7ff47fea,
    0xbf102fff,0xff3d50bf,0x13eeb71d,0x5fd10fe8,0x205fbfd0,0x04fb85fa,
    0x203feffa,0x0ffa9999,0x14fb8df3,0x7d401dfb,0xff50ff85,0x0fd4fdcc,
    0xf815554c,0xca95402f,0xfb0ff102,0x1fd0d543,0x07f40595,0x99dfa998,
    0x3fb3fe20,0x1fd5fb04,0xa7e47f88,0x1ffdbbfe,0xa85fafb8,0x5d6f7a26,
    0xb83fa04f,0x7e5fdc4f,0xf70bf502,0x0ff84c09,0x3e64fc80,0x3f227dc6,
    0xf0bf501f,0x7e47fc1f,0xf704f8df,0x0ff10fff,0xbfffbfd0,0x3fb0ff10,
    0xdfe83bf2,0x26625fff,0xf1099afe,0x47ffffff,0x20df12fa,0xfb83fff8,
    0x3abf52af,0x3a0ff60f,0x2a2aef8e,0xfbadeec6,0x3fa2aaad,0x6f88ff20,
    0x17ea05f9,0x026677ee,0x3e2007fc,0x2abbe60f,0xffb84fda,0xff85fa82,
    0x4316fc98,0x3e66206d,0xe807f987,0x40ff9aff,0xa9fd87f8,0x57ff40ef,
    0xfff50ff9,0x5547ffff,0x321aadfb,0xfc81fa1f,0x2dffff06,0x5c1fd6fa,
    0x7c5fcc4f,0x7e5aa5ff,0xfff75b9f,0x4d7f4dff,0x47f60ffb,0x0bf502fc,
    0x0bfffff7,0xbf9003fe,0xffffff98,0x83ff904f,0xffff85fa,0x01fa80cf,
    0x7f987f88,0x3fa2fe80,0x7ec3fc41,0x2fe80ffb,0x7d5447fa,0xf980aabf,
    0x3e27f504,0xeffeec85,0x427fe60e,0x221fd5fb,0x447e42fe,0x6daa09df,
    0x4efdd6e4,0x3fffa099,0xc93ea2ff,0x70bf502f,0x205999df,0x3fe200ff,
    0x4ccf7cc1,0x2ffb84fc,0xcff85fa8,0xb4f884fe,0x21fe203d,0x7f401ff8,
    0xff107fa0,0x207fffb0,0x207fa0fe,0x27cc00fe,0x3fecff88,0x2aefca98,
    0x53fa3fc4,0x85ffddfe,0xa85feeff,0xfbadc136,0x2af7fa04,0x7ffffe40,
    0x85fa87ff,0x1ff004fb,0x7cc2fdc0,0x3f227dc6,0xf0bf501e,0xd83ff11f,
    0x2203fd96,0x81bfb07f,0x1fe83fa0,0x5fec3fc4,0x20fe81ff,0x00fe81fe,
    0xfff90098,0xca981dff,0xbfc42aef,0xffd0ffb8,0xddf507df,0x3ed50bfd,
    0x027dd6e5,0x775c01fd,0xa85effee,0x004fb85f,0x0ffc01ff,0x53ee37cc,
    0x2a00efe8,0xf90ff85f,0x4fccfd4b,0x20ff101f,0x2fedfff9,0x41fe83fa,
    0xb9fd87f8,0xd07f40ef,0x201fd03f,0x0ccccccb,0x45fc8df5,0x0eeffeec,
    0x3fffbfe2,0xfb003fa3,0xa933be21,0x5c99ab9e,0x4ddddff7,0x7e4000fe,
    0xf70bf502,0x7ff76409,0x82fdc2ee,0xb27dc6f9,0x77ee5c0b,0x7c43fe4c,
    0xff94e89f,0xffccb8ff,0x7fec41cc,0xe83fa1ef,0x9ff9971f,0x7ec7f639,
    0x3fd07f45,0x3fa01fd0,0x2e1fffff,0x9f500c81,0x37bffe20,0xf1007f41,
    0x53fffc4b,0xbfffffff,0x9fffffee,0x7e4000fe,0xf70bf502,0x7fffec09,
    0x80ffc3ff,0x027dc6f9,0xffffffb0,0xdfd83fe1,0x5f3310fc,0xffffffd8,
    0x07f40202,0x3fff63fd,0x23fb2fff,0x83fa4fe8,0x00fe81fe,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x0eed8000,0xddddddb0,0xbd10fae5,0x8fae2f54,0x366b80ec,0x540ed82e,
    0x774c9b0e,0x77441cde,0x076cfa22,0x7776c5db,0x74c000ac,0xe87ba204,
    0x5541552e,0x20de6540,0x02c98bca,0x03797500,0xa880de54,0x1bca82bc,
    0x55000dc4,0x85510b2a,0xff8802a9,0xfffff03f,0x91fe65ff,0xf12ff89f,
    0x6c07e43f,0xff317f27,0x993e1f70,0x24fffeff,0x53e66ff9,0xf8df70ff,
    0x404ffeef,0x40bf51fa,0x7ff54ff8,0x10fe83fa,0x547fffff,0x3fffffef,
    0x2e1ffecc,0x4c4fffff,0x544ffffe,0x7ec7ffff,0x1ff63fff,0x7f45dff9,
    0x7f45fffd,0x5fb87fa3,0x802fefdc,0x89fec6fb,0xcb7d40ff,0x6c07e44f,
    0x9f71fe67,0xcf99fd98,0x7fd4bf31,0x265fff31,0xff11ff4f,0xff10ff83,
    0x547ff201,0x5ffe605f,0x41fd3ffc,0x449f90fe,0xdafd4220,0x17edf747,
    0x3a3fcc33,0x31ffb9cf,0x5c7337ff,0x321fd14f,0x3eccd47f,0x1ff35ffd,
    0x27e4ffcc,0x9fd83ffa,0x7fc400ff,0x3fcb7cc1,0x81ff7fd0,0x1b6390fb,
    0x317ec3ff,0xffffffff,0x29f917e6,0x9f36fef9,0x20ff63fe,0x203fa0ff,
    0x17ea0efd,0xcf9fcf98,0x7f41fd4f,0x1005df90,0x7cc3ee7f,0x26209f12,
    0xd8df30fe,0x7c09f94f,0x22fd999f,0x3f65c41a,0x20ff45fd,0xfc86fefb,
    0x02fdbfc6,0xbfd827f4,0xfff500ff,0xbf33f709,0x227fb1ba,0xb9ee987f,
    0xa8bf31bf,0x3fb9f35f,0x3f3fe9f3,0xfb57ff05,0xa85fe889,0x3ebe605f,
    0x1fd4f9fd,0xffe887f4,0x3ff220cf,0xf30fffff,0xfc893e27,0xbf50ffff,
    0x05fd5fb8,0x3fffffe2,0x6d77403f,0x1fe83fa7,0x8101ffd8,0x409f74fa,
    0x3fe606fb,0x07ffc03f,0xebfdcfdc,0x5fab7d45,0x987eabf0,0xf9b7d45f,
    0xf4f9dfac,0x3fe05fff,0x7f42ffff,0x540bf506,0x2bf6fd9f,0x503fa0fe,
    0x5fe4dffb,0x7c199cfa,0x3f61fecf,0xf30fe9ad,0x5fb4fb8d,0x2667fe20,
    0x37e20099,0xe83fa7eb,0x27ffc41f,0xff32fc80,0xb007fe20,0x7fd401ff,
    0xee9fa84f,0x7fc45e9f,0x7d4c2fc8,0xf31bfdad,0x9f35fb8b,0x7fd3ebfa,
    0x9ff80efb,0x3a22ffb9,0x02fd40df,0x3e9f73f5,0x3fea3fd5,0xbf4ff300,
    0x3b6604f9,0xf887fc1d,0x6c3ff10f,0x740df92f,0x70f6601f,0x07f4d7bd,
    0xfbfe83fd,0xfd2fc41f,0xd03ffddd,0x0bf5009f,0x41ffbfe8,0xfcfafbfa,
    0x0feafd85,0x7fffffe4,0xfe8bf34f,0x3bee9f34,0x9fb1ff4f,0x27e41ff0,
    0xbf5077ec,0x8f44fdc0,0xffbdf95f,0x36ab321f,0x3faff26f,0x4ccc3abf,
    0x2f7fe099,0x3ff60ffe,0x3fe26fed,0x3fea6dce,0x3ff65bac,0x42666660,
    0xc87fa0fe,0x4c1ff75f,0xdddff32f,0x06fb87fd,0x7dc09f50,0xef98df96,
    0xf709fdb7,0x7f510dfd,0x3e613fb3,0x261ff715,0x7d3ffe4f,0x7c2ff88f,
    0x5c0bf60f,0x40bf51ff,0xd16e80fb,0x321f99ff,0x260dffff,0x5ffe9dfe,
    0x8fffffe6,0x0fccfffa,0x037fff22,0xb8dfffb3,0x3ee6ffff,0x3ffffe66,
    0x8ff41fd3,0x97f60ffa,0xf50fee39,0x7777fc4d,0x04fa82ee,0x3fe23ff1,
    0x7d53fe62,0x3fff884f,0x31b63f50,0x47fffdff,0x53fee4f9,0x41ff70ff,
    0x06feccff,0xeffa8f54,0x01f71eee,0x220088dd,0x02604019,0x20266666,
    0x20030009,0x0404c400,0x004ccccc,0x1fd80000,0xff887fc4,0xa83fffff,
    0xc8bf904f,0x44bfe26f,0x3ffd03ff,0x22f43ee0,0x41defff9,0x53fe24f9,
    0xf97fa0ff,0x000bdfff,0x7fffffd4,0x0fd01f91,0x00000000,0x00000000,
    0xb9800000,0xeaa6c3bb,0x01555551,0x00000000,0x00000000,0x00000000,
    0x00000000,0xed880000,0xd07d502e,0x43ffffff,0x42aaaaaa,0x5443b75d,
    0x09936602,0x6d4026dc,0x3fffe40d,0x74ff2ff1,0x0551ffff,0x6454c2a6,
    0x40d4c572,0x3262a62a,0x309f500b,0x00555555,0x2602c880,0x5d102ded,
    0x20f22950,0xd881deda,0xdeec8751,0xf704db80,0x2fecfe89,0x6641fee8,
    0xf10ccccc,0x41ffffff,0x3a25f97f,0x2abb0eff,0xc81df95f,0x03bea05f,
    0x51446600,0x3fa15555,0xbf70fc80,0x2e7ff9ff,0xf737d45f,0x701ffffb,
    0xffff90df,0x320eb8ff,0x504f980e,0x44bd559f,0x2e28af89,0xed81fd3f,
    0x89fd87fd,0x2fede46f,0x7ec1bffa,0x3e25f30f,0x02f47dc4,0xc9999980,
    0x8fe5be0f,0xfbefcbfa,0x3ffa9f55,0x5701b981,0x90000000,0x73ec263f,
    0xbf1ff3bf,0x2fd83fe2,0x3f633fee,0xa980a883,0x7e44ffaa,0xf305fc8e,
    0xfbd3f109,0x3eff25d3,0x4c7ec7fc,0xa8ff105f,0x7301fb4f,0x06f9a89f,
    0x4fea1ff3,0x54fe24f8,0x3777722f,0x07dc00dd,0x6d47eedd,0x263fff70,
    0x0009d54f,0x80000000,0xdd5f9afb,0xea7c57dc,0x3fc4ff26,0x13ea97ee,
    0x35555555,0x3f20df90,0x655445ff,0x2d31aadf,0x2a4b9eae,0x7cc0cffe,
    0xfd883fb4,0x27cc7f43,0xf817ffc4,0xff89fe06,0xb1b21fec,0x3ffffa1f,
    0x065401ff,0x8802a655,0x0006a209,0x00000000,0x2ff97f50,0x3e27ee5f,
    0xab7ccdd3,0x5027dc4f,0xbfffffff,0x3a00ffa8,0x7ffd40ff,0x2b55ffff,
    0x366b55de,0x7f42efff,0x7f445f98,0x1fb4fa83,0xf01fd310,0x42fdb88d,
    0x0dc2ded9,0x000006e2,0x00000000,0x00000000,0x3fbb3e60,0x227ee4fb,
    0x9fe8dd3f,0x027dc1fd,0x55555551,0x9017fc43,0x5441dfff,0x11aadfca,
    0x7b3d3d1f,0x9b6fe7ae,0xe81fd2fb,0x7ec2eeff,0x65e46f89,0x6ffee46f,
    0x00039d31,0x26666600,0x00001999,0x00000000,0x20000000,0xfefafef8,
    0x4fe27ee3,0x37efdc6e,0xb88027dc,0x6409fd01,0x301df95f,0x22f7209f,
    0x3e220fd9,0x05924c13,0x883bbbbb,0xdee8771d,0x6eeee41b,0x20000001,
    0xffffffff,0x0000001f,0x00000000,0x3fe00000,0x7dc5ffb7,0x88dd3f89,
    0x4fb83fff,0xf90df900,0x5c1ddddf,0x4f982e45,0x03bfbf20,0x000000d4,
    0x00000000,0x55540000,0x00aaaaaa,0x00000000,0x00000000,0x7d57fa00,
    0x3e27ee0f,0x1ff90dd3,0x26009f70,0xffffd83e,0x220000ff,0x004c402c,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,
};

static signed short stb__consolas_bold_17_latin1_x[224]={ 0,3,1,0,0,0,0,3,2,1,1,0,1,2,
3,0,0,0,1,1,0,1,0,0,0,0,3,1,0,1,1,2,0,0,1,0,0,1,1,0,0,1,1,1,
1,0,0,0,1,0,1,0,0,0,0,0,0,0,0,2,0,2,0,0,0,0,1,1,0,0,0,0,1,1,
0,1,1,0,1,0,1,0,1,1,0,1,0,0,0,0,1,1,3,1,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,
3,0,0,0,1,0,0,2,0,0,1,0,1,1,0,1,0,3,3,1,1,1,0,0,0,1,0,0,0,0,
0,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,
0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,
 };
static signed short stb__consolas_bold_17_latin1_y[224]={ 12,0,0,1,-1,0,0,0,-1,-1,0,3,8,6,
8,0,0,1,0,0,1,1,1,1,0,0,3,3,2,5,2,0,0,1,1,1,1,1,1,0,1,1,1,1,
1,1,1,0,1,0,1,0,1,1,1,1,1,1,1,-1,0,-1,1,13,0,3,0,3,0,3,0,3,0,-1,
-1,0,0,3,3,3,3,3,3,3,0,3,3,3,3,3,3,-1,-2,-1,5,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,12,3,-1,0,1,1,
-2,0,0,0,0,4,6,6,0,0,0,1,0,0,0,3,0,5,12,0,0,4,0,0,0,3,-2,-2,-2,-3,
-3,-3,1,1,-2,-2,-2,-3,-2,-2,-2,-3,1,-3,-2,-2,-2,-3,-3,3,-1,-2,-2,-2,-3,-2,1,0,0,0,
0,0,0,-1,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,0,0,0,0,0,0,0,
 };
static unsigned short stb__consolas_bold_17_latin1_w[224]={ 0,3,7,9,9,10,10,3,6,7,8,9,6,6,
4,9,9,9,8,8,9,8,9,9,9,9,4,6,8,8,8,7,10,10,8,9,9,8,7,9,9,8,7,9,
8,9,9,10,8,10,8,9,9,9,10,10,10,10,9,5,9,5,9,10,6,9,8,7,9,9,9,9,8,8,
8,9,8,9,8,9,8,9,8,8,9,8,10,10,10,10,8,7,3,8,9,9,9,9,9,9,9,9,9,9,
9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,0,3,8,9,10,10,
3,9,8,10,7,9,9,6,9,7,7,9,7,7,9,8,9,4,3,7,7,8,10,10,10,7,10,10,10,10,
10,10,11,9,9,9,9,9,9,9,9,9,9,9,10,10,10,10,10,9,10,9,9,9,9,10,8,8,9,9,
9,9,9,9,10,7,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,10,8,10,
 };
static unsigned short stb__consolas_bold_17_latin1_h[224]={ 0,13,5,11,16,13,13,5,17,17,8,9,7,3,
5,14,13,11,12,13,11,12,12,11,13,12,10,12,11,5,11,13,16,11,11,12,11,11,11,13,11,11,12,11,
11,11,11,13,11,16,11,13,11,12,11,11,11,11,11,17,14,17,6,3,4,10,13,10,13,10,12,13,12,13,
17,12,12,9,9,10,13,13,9,10,13,10,9,9,9,13,9,17,18,17,5,11,11,11,11,11,11,11,11,11,
11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,13,16,12,11,11,
18,14,4,13,10,7,5,3,9,4,6,11,7,7,4,13,14,4,3,7,10,7,12,12,12,13,14,14,14,15,
15,15,11,14,14,14,14,15,14,14,14,15,11,15,15,15,15,16,16,9,15,15,15,15,16,14,11,13,13,13,
13,13,13,14,10,12,13,13,13,13,12,12,12,12,13,12,13,13,13,13,13,9,13,13,13,13,13,16,16,16,
 };
static unsigned short stb__consolas_bold_17_latin1_s[224]={ 253,249,187,66,73,239,169,205,39,46,91,
71,143,248,251,107,209,199,184,1,171,127,146,209,29,164,218,249,115,168,229,
58,105,1,106,22,76,153,191,97,219,238,156,96,124,133,86,76,162,62,247,
199,181,232,55,44,33,22,12,33,87,27,158,168,214,180,10,200,60,208,70,
80,61,190,18,51,42,12,231,190,49,117,33,152,159,143,22,1,240,238,52,
54,1,9,195,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,
143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,253,250,157,
136,90,101,5,148,239,148,223,117,177,248,81,231,150,80,109,127,221,229,97,
209,251,135,172,100,221,242,1,130,65,168,117,177,166,188,131,199,158,128,138,
199,179,189,209,209,112,219,44,1,12,125,136,61,23,34,229,239,147,76,122,
31,50,40,1,229,219,55,161,203,110,11,70,90,211,174,12,193,21,32,138,
66,39,107,87,42,19,219,180,120,100,83,116,94, };
static unsigned short stb__consolas_bold_17_latin1_t[224]={ 1,1,88,77,1,20,36,88,1,1,89,
89,88,87,77,20,36,64,50,50,64,50,50,64,50,50,77,36,77,88,64,
50,1,77,77,64,77,64,64,50,64,64,50,77,77,77,77,50,64,1,64,
36,64,50,77,77,77,77,77,1,20,1,88,94,88,77,50,77,36,77,64,
36,64,36,1,64,64,89,77,77,50,50,89,77,36,77,89,89,77,36,89,
1,1,1,88,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,
64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,1,20,1,
50,64,64,1,20,87,36,77,89,88,87,89,87,88,64,89,89,88,36,20,
88,83,89,77,89,50,50,64,36,20,20,20,1,1,1,64,20,20,20,20,
1,20,20,20,1,64,1,20,20,20,1,1,89,20,20,1,1,1,20,64,
36,36,36,36,20,20,20,77,50,36,36,36,36,50,50,64,50,36,64,36,
50,50,50,50,89,50,36,36,36,36,1,1,1, };
static unsigned short stb__consolas_bold_17_latin1_a[224]={ 150,150,150,150,150,150,150,150,
150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,
150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,
150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,
150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,
150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,
150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,
150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,
150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,
150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,
150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,
150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,
150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,
150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,
150,150,150,150,150,150,150,150, };

// Call this function with
//    font: NULL or array length
//    data: NULL or specified size
//    height: STB_FONT_consolas_bold_17_latin1_BITMAP_HEIGHT or STB_FONT_consolas_bold_17_latin1_BITMAP_HEIGHT_POW2
//    return value: spacing between lines
static void stb_font_consolas_bold_17_latin1(stb_fontchar font[STB_FONT_consolas_bold_17_latin1_NUM_CHARS],
                unsigned char data[STB_FONT_consolas_bold_17_latin1_BITMAP_HEIGHT][STB_FONT_consolas_bold_17_latin1_BITMAP_WIDTH],
                int height)
{
    int i,j;
    if (data != 0) {
        unsigned int *bits = stb__consolas_bold_17_latin1_pixels;
        unsigned int bitpack = *bits++, numbits = 32;
        for (i=0; i < STB_FONT_consolas_bold_17_latin1_BITMAP_WIDTH*height; ++i)
            data[0][i] = 0;  // zero entire bitmap
        for (j=1; j < STB_FONT_consolas_bold_17_latin1_BITMAP_HEIGHT-1; ++j) {
            for (i=1; i < STB_FONT_consolas_bold_17_latin1_BITMAP_WIDTH-1; ++i) {
                unsigned int value;
                if (numbits==0) bitpack = *bits++, numbits=32;
                value = bitpack & 1;
                bitpack >>= 1, --numbits;
                if (value) {
                    if (numbits < 3) bitpack = *bits++, numbits = 32;
                    data[j][i] = (bitpack & 7) * 0x20 + 0x1f;
                    bitpack >>= 3, numbits -= 3;
                } else {
                    data[j][i] = 0;
                }
            }
        }
    }

    // build font description
    if (font != 0) {
        float recip_width = 1.0f / STB_FONT_consolas_bold_17_latin1_BITMAP_WIDTH;
        float recip_height = 1.0f / height;
        for (i=0; i < STB_FONT_consolas_bold_17_latin1_NUM_CHARS; ++i) {
            // pad characters so they bilerp from empty space around each character
            font[i].s0 = (stb__consolas_bold_17_latin1_s[i]) * recip_width;
            font[i].t0 = (stb__consolas_bold_17_latin1_t[i]) * recip_height;
            font[i].s1 = (stb__consolas_bold_17_latin1_s[i] + stb__consolas_bold_17_latin1_w[i]) * recip_width;
            font[i].t1 = (stb__consolas_bold_17_latin1_t[i] + stb__consolas_bold_17_latin1_h[i]) * recip_height;
            font[i].x0 = stb__consolas_bold_17_latin1_x[i];
            font[i].y0 = stb__consolas_bold_17_latin1_y[i];
            font[i].x1 = stb__consolas_bold_17_latin1_x[i] + stb__consolas_bold_17_latin1_w[i];
            font[i].y1 = stb__consolas_bold_17_latin1_y[i] + stb__consolas_bold_17_latin1_h[i];
            font[i].advance_int = (stb__consolas_bold_17_latin1_a[i]+8)>>4;
            font[i].s0f = (stb__consolas_bold_17_latin1_s[i] - 0.5f) * recip_width;
            font[i].t0f = (stb__consolas_bold_17_latin1_t[i] - 0.5f) * recip_height;
            font[i].s1f = (stb__consolas_bold_17_latin1_s[i] + stb__consolas_bold_17_latin1_w[i] + 0.5f) * recip_width;
            font[i].t1f = (stb__consolas_bold_17_latin1_t[i] + stb__consolas_bold_17_latin1_h[i] + 0.5f) * recip_height;
            font[i].x0f = stb__consolas_bold_17_latin1_x[i] - 0.5f;
            font[i].y0f = stb__consolas_bold_17_latin1_y[i] - 0.5f;
            font[i].x1f = stb__consolas_bold_17_latin1_x[i] + stb__consolas_bold_17_latin1_w[i] + 0.5f;
            font[i].y1f = stb__consolas_bold_17_latin1_y[i] + stb__consolas_bold_17_latin1_h[i] + 0.5f;
            font[i].advance = stb__consolas_bold_17_latin1_a[i]/16.0f;
        }
    }
}

#ifndef STB_SOMEFONT_CREATE
#define STB_SOMEFONT_CREATE              stb_font_consolas_bold_17_latin1
#define STB_SOMEFONT_BITMAP_WIDTH        STB_FONT_consolas_bold_17_latin1_BITMAP_WIDTH
#define STB_SOMEFONT_BITMAP_HEIGHT       STB_FONT_consolas_bold_17_latin1_BITMAP_HEIGHT
#define STB_SOMEFONT_BITMAP_HEIGHT_POW2  STB_FONT_consolas_bold_17_latin1_BITMAP_HEIGHT_POW2
#define STB_SOMEFONT_FIRST_CHAR          STB_FONT_consolas_bold_17_latin1_FIRST_CHAR
#define STB_SOMEFONT_NUM_CHARS           STB_FONT_consolas_bold_17_latin1_NUM_CHARS
#define STB_SOMEFONT_LINE_SPACING        STB_FONT_consolas_bold_17_latin1_LINE_SPACING
#endif

