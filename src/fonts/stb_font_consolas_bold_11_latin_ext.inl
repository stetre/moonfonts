// Font generated by stb_font_inl_generator.c (4/1 bpp)
//
// Following instructions show how to use the only included font, whatever it is, in
// a generic way so you can replace it with any other font by changing the include.
// To use multiple fonts, replace STB_SOMEFONT_* below with STB_FONT_consolas_bold_11_latin_ext_*,
// and separately install each font. Note that the CREATE function call has a
// totally different name; it's just 'stb_font_consolas_bold_11_latin_ext'.
//
/* // Example usage:

static stb_fontchar fontdata[STB_SOMEFONT_NUM_CHARS];

static void init(void)
{
    // optionally replace both STB_SOMEFONT_BITMAP_HEIGHT with STB_SOMEFONT_BITMAP_HEIGHT_POW2
    static unsigned char fontpixels[STB_SOMEFONT_BITMAP_HEIGHT][STB_SOMEFONT_BITMAP_WIDTH];
    STB_SOMEFONT_CREATE(fontdata, fontpixels, STB_SOMEFONT_BITMAP_HEIGHT);
    ... create texture ...
    // for best results rendering 1:1 pixels texels, use nearest-neighbor sampling
    // if allowed to scale up, use bilerp
}

// This function positions characters on integer coordinates, and assumes 1:1 texels to pixels
// Appropriate if nearest-neighbor sampling is used
static void draw_string_integer(int x, int y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0, cd->t0); glVertex2i(x + cd->x0, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t0); glVertex2i(x + cd->x1, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t1); glVertex2i(x + cd->x1, y + cd->y1);
        glTexCoord2f(cd->s0, cd->t1); glVertex2i(x + cd->x0, y + cd->y1);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance_int;
    }
    glEnd();
}

// This function positions characters on float coordinates, and doesn't require 1:1 texels to pixels
// Appropriate if bilinear filtering is used
static void draw_string_float(float x, float y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0f, cd->t0f); glVertex2f(x + cd->x0f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t0f); glVertex2f(x + cd->x1f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t1f); glVertex2f(x + cd->x1f, y + cd->y1f);
        glTexCoord2f(cd->s0f, cd->t1f); glVertex2f(x + cd->x0f, y + cd->y1f);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance;
    }
    glEnd();
}
*/

#ifndef STB_FONTCHAR__TYPEDEF
#define STB_FONTCHAR__TYPEDEF
typedef struct
{
    // coordinates if using integer positioning
    float s0,t0,s1,t1;
    signed short x0,y0,x1,y1;
    int   advance_int;
    // coordinates if using floating positioning
    float s0f,t0f,s1f,t1f;
    float x0f,y0f,x1f,y1f;
    float advance;
} stb_fontchar;
#endif

#define STB_FONT_consolas_bold_11_latin_ext_BITMAP_WIDTH         256
#define STB_FONT_consolas_bold_11_latin_ext_BITMAP_HEIGHT         94
#define STB_FONT_consolas_bold_11_latin_ext_BITMAP_HEIGHT_POW2   128

#define STB_FONT_consolas_bold_11_latin_ext_FIRST_CHAR            32
#define STB_FONT_consolas_bold_11_latin_ext_NUM_CHARS            560

#define STB_FONT_consolas_bold_11_latin_ext_LINE_SPACING           7

static unsigned int stb__consolas_bold_11_latin_ext_pixels[]={
    0x83b80ee0,0x8073a200,0x14c01018,0x26002cb8,0x01dd72ee,0x910ee099,
    0x001dc00b,0x66400179,0x70000003,0x00006607,0x000000c0,0x81221950,
    0x0000399a,0x2993a877,0x03c2642b,0x3aa0d511,0x4c3ffe41,0x2d9dc80d,
    0x3d50fff2,0x9507e621,0x83722640,0x664c5ded,0x88ffffc2,0xda8ee03d,
    0x6c9b2dc6,0x4c0be5de,0x06ec42cc,0xbb51aafa,0x2fb9aa07,0x7355f499,
    0x3b31325f,0x955703cc,0x1f101ff0,0x647e65d8,0x92643f34,0x3ff20dff,
    0x7d473305,0x40dd8811,0x4fd56669,0x7c1aa2fa,0xa8837621,0x4216c1aa,
    0x22986a0a,0x220d502f,0x96e35c3d,0x5f05424d,0x906aee20,0x30311309,
    0x5cbff903,0x444c996f,0xaa65bee1,0x5cfcca61,0x2a2986a1,0x5fdcc2fe,
    0x91f4b90a,0x2a993dc9,0x9fa81dbf,0x26dc43fe,0x991019f3,0x2f9fd790,
    0x06a9365c,0x106f443f,0x22e8bd99,0xd35d365b,0x260cdfc9,0x5c6ffb86,
    0x649b2dc6,0x7c0be3ff,0x6cb71fcb,0x5b8fff24,0x7f4fd536,0x2995fb73,
    0x7edd365b,0xa74d74c9,0xd71fcef9,0x89b99274,0xb90ccfda,0x7c4c83e6,
    0x137ea551,0x12e74e64,0x7dc1ffbf,0x740ff85f,0x49b7bcdc,0x0fc1aa6c,
    0x57203795,0xd96e0ec8,0x41f13f14,0x6ec0ffff,0xb81d5f30,0x2a9b2dc6,
    0x05f2fa9f,0x25b9e2f3,0x5f53f54d,0x3994d96e,0x3af6eb9d,0xba6cb74c,
    0x3f14cdcd,0x743e61f1,0x41f13f14,0x0f987aaf,0x2646ba64,0x2ffdc0fa,
    0x735dde6c,0xf507bd3d,0x3a17f545,0x4b96bdcc,0x0fc1aa5c,0xb901f959,
    0x25b83ae2,0xf16f364d,0x542fe205,0x5b8d70d7,0x29b2e4f6,0x49ddf02f,
    0xb2e5365b,0x9b4d96e9,0x7d6ed777,0xba6cb74e,0x3364df8d,0x24d9e65b,
    0x2fe65bcd,0x207cc1fb,0x44c8d73b,0xfbd8333d,0x2e4f6643,0x269979b9,
    0x6e645f31,0xaef6e744,0x2a2f9afa,0xfa983f06,0x71745c81,0x5df326cb,
    0x35419bf8,0xd7036fe2,0xb2f88fa8,0x99bfae49,0x5b813f30,0x2b926d36,
    0x7665365b,0x3eeb75c9,0x5ba6cb74,0x177cc9fb,0xf98be2f3,0x3b33ae2e,
    0x4a60fc44,0x5f1320f9,0x7d74cd32,0x17c77d42,0x2a5d3df5,0x557c4fff,
    0x0656d747,0x06a89ff7,0x3f37a23f,0x716c5c81,0x21fa1ecb,0x1aa1ffff,
    0x7fcdbfee,0x93ff62ff,0x7ffd725b,0x3dfff12f,0x4b73d96e,0xa9ecb75c,
    0x4b72f8ef,0xb9ecb74f,0x47e89f35,0x7e84fff9,0xfb0d91f4,0x22f9763f,
    0xa643e64c,0xfb03efea,0x09ffb09f,0xfbbf9835,0x1b9012e1,0x51f83543,
    0x13607e6f,0x7c47d499,0x6980fe22,0x884a82dc,0xaf987902,0xd70a22f9,
    0xf88faa6c,0x25f35f32,0x362f88fa,0x54fa04ff,0x0cc2f88f,0x81e61fc4,
    0x40f403f8,0xc87d4029,0x12647d14,0x3202d80d,0x9d70b603,0x6f7449d9,
    0x2a5fe884,0x23fd72ef,0xd51edfe8,0x25e981fd,0x17f24ffd,0x07f63d70,
    0xd825c15c,0x227f5c0e,0x76efcc4b,0xd713ff61,0x44ffd89f,0xb077402d,
    0xc85b09ff,0xf907985f,0x5b0bf00b,0x5d329700,0x80312645,0x20200401,
    0x0261b23e,0x22133100,0x03300819,0x00088008,0x20260043,0x10006008,
    0x00033101,0x06006000,0x80220200,0x22001101,0x08800080,0x00000220,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x02440010,0x22010000,0x01d86cc5,
    0x02055530,0x504b81dc,0x44e88007,0x5f442dea,0xea81884d,0x2077443e,
    0x5f443eea,0x0059504d,0x01880400,0x32000000,0x65c40910,0x2b32e20c,
    0x544ffffc,0x32e7440f,0x3e6f301f,0xa89fff32,0x22543fff,0xf11d88d9,
    0x6ec43fff,0x4b80fa80,0x77930970,0x1441eed4,0x08888288,0x4c40dd88,
    0x204c4409,0x44440998,0xd837f500,0x646abe85,0x06ec47ff,0x3b61aafa,
    0x03dda85d,0xd902e8f5,0x37fe2175,0x1c41724e,0x23e60a88,0x93af30a8,
    0xf31fb8f9,0x5dc43117,0x2054511a,0x1abb885c,0x55dc41c4,0x5510aaa1,
    0xfc819835,0x23ffe47f,0xde883ffc,0x324d96e0,0x1ffe47ff,0x2e426cb7,
    0x18898198,0x3a2047ea,0x40c44c0d,0x80660150,0xed835c3d,0x2667fdc1,
    0x5ffd30b9,0xf99fffd4,0x1afe65d8,0x3643e6f3,0x263f97f0,0xf0b907e7,
    0x7fd43f97,0x87f2fe3f,0x766446ec,0xfa8fff25,0x208fd411,0x222fa9fa,
    0x9b2dc2a2,0x3f5047ea,0x4d96e5f5,0x542b7aa2,0x4bb3ffff,0x5019f35d,
    0x01ff0379,0xfff103fe,0x440f883f,0x27efcc1f,0x64999ff7,0x84467c45,
    0xf3188bf9,0x1ffcc1db,0x5d8bffe6,0x3c5e69ff,0x1720fcf3,0xbf99e2f3,
    0x1e2f3188,0xf55c81ae,0x33e65f53,0x32067cc0,0x3e799365,0xf9a6cb71,
    0x29b2e40c,0xfc89365b,0xf93310cd,0x87e27e21,0x65645ffb,0x20bfaa0f,
    0x0b902fea,0x2e264132,0x67ec7f37,0x0f51724c,0x2efcc1b2,0xf983ebe6,
    0x4d9724e8,0x27993bbe,0x77c2e41f,0xef81b24e,0x3206b84e,0xf726cb95,
    0x25ffb8bf,0x2799724d,0x726cb71f,0xb926cbff,0x2f84d96e,0xcdd87f10,
    0xa985f505,0x2137321f,0x0b904dcc,0x83e603f1,0x444e9ef8,0xd71724c8,
    0x9a7fd760,0x6de64e8f,0xa87d5e66,0x3f34e8af,0x907e7981,0x6c09f98b,
    0x27e69ff5,0xae40d700,0x3ea1724d,0x4b72fa82,0x71f9e65c,0x97d41ecb,
    0xb2dd725b,0xbb01f887,0x8cc3ff30,0xf9bd12f9,0x7c3d57c3,0x70b907aa,
    0x6c43d80d,0x649b00ef,0x25c83dc5,0x5f31f34d,0x799fc5e6,0x3fffb8fe,
    0x263dfff1,0x7ffc47e7,0x3dfff11f,0xff14d972,0x3ffe63df,0x4b75c82f,
    0x4be6335c,0x3e65f319,0x27e62f9a,0xf11f51fb,0x997cc665,0x1f52f9af,
    0x707985f1,0xf517601f,0xf9bd49ff,0x43f77f31,0xc81fbbf9,0x35402e85,
    0x47d046c8,0x4c67c419,0x89d15f50,0x26033019,0x26b85301,0x981f884d,
    0xf54d9ae6,0xd9ae9d15,0x4d80e884,0x2a5f35f3,0x3fea4fff,0x427f5c4f,
    0x3f61edfe,0x13ffea4f,0xffd89fd7,0x7c41fec4,0x8264099c,0x76ff442d,
    0x49d99d71,0xc84ecceb,0x2e803cc5,0xeb87fdd5,0x2a0b60ef,0x3fee2fff,
    0x2d816c3f,0x30b605b0,0xfe83dbbf,0x3e63f705,0x3fee1edd,0x3dbbf33f,
    0x3baa7f30,0x213fae0f,0x08000200,0x00001000,0xfff70098,0x0704c87f,
    0x4d91f404,0xff89b23e,0x200111ff,0x44026608,0x02000081,0x00401004,
    0x4c066201,0x06620401,0x40198808,0x00006608,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x0200cc00,0x201dd100,
    0x004e8829,0x06603ba2,0x3ba203b2,0x00bb2000,0x226f4400,0x09d100ec,
    0x8001b900,0x004002ec,0x54c4e880,0x8077441a,0x15c543e8,0x2a60f6dc,
    0xb819502a,0x00755703,0xfd301bb1,0x2355f45f,0x1d880888,0x6abe8088,
    0x36604444,0x8880881c,0x1177b608,0x5ded8311,0x203105d8,0xb5031009,
    0x36a0607b,0x8188883d,0x6fffd85d,0x0221ecd7,0x1110b326,0x3fe02201,
    0x880882fc,0x41d980dd,0x4ecc2cc9,0x937ffc0d,0x1119f109,0x3f20c44c,
    0x2e1e643f,0x18899365,0x0914d96e,0x3fe4d96e,0x2605426f,0x05422ffe,
    0x7ff4c0cc,0xf90fff22,0xd303307f,0x501985ff,0x41987fff,0x9ae2e8eb,
    0x9325f73d,0xd9ae0bb8,0xf13ffe63,0xfff98ae5,0x2205dc44,0x165c42cb,
    0x6b802ee2,0x40f503fe,0x3f51ffff,0x236d45f5,0x7fc5365b,0xa6cb71ff,
    0x26cb7079,0xffff8b5c,0x21119f11,0x3e2992fb,0x19f11fff,0x3ea7ea11,
    0x45f53f52,0x9f11ffff,0x40ff8111,0x3e188bf9,0x3a9b1fff,0xb9ecd70b,
    0x37e2996f,0x1ecd71fd,0x7c3f71f3,0x3f71f301,0xf87f77e2,0x1d67c3ac,
    0x203fbbf1,0xb85fd56b,0x9720be06,0x96e35c4d,0x96e2e44d,0x4393f34d,
    0x1ae1365b,0xf707a8b9,0xa8b9132d,0xca6cb907,0xa82f9365,0x90bfaa07,
    0x9f417c0d,0x9ecd74ee,0xd74c9fdb,0xe99eb9f4,0xf07cde63,0x87cde603,
    0x6fc4fa6b,0x2e0efc41,0xcb5c0fa6,0xf03dc4dc,0xb926c337,0x9b2dc6b8,
    0x9b2dc5c8,0x5c3f7be6,0x91ae1365,0xfb706b8b,0x5c5c8993,0xdae49b06,
    0x19bf9724,0x4dcc81ae,0x3e4ffaec,0x1753619b,0xcdb9ecd7,0xa6cd94cd,
    0x263ffffb,0x80fc2fff,0x9b22fff9,0x31bf664d,0x9b364dfb,0x3d57dae0,
    0xf82633e2,0x64b70fff,0xd96e35c5,0xd96e2e43,0x23f11f33,0x1ae0f65b,
    0xb707b8b9,0x45c899b9,0xae4b707b,0xfff9725b,0x57c0f70f,0x49b2e47a,
    0x1d70ffff,0x3e875c5d,0x2a9bf1b7,0x4d72f89f,0x13a3e63d,0x3a3e6066,
    0x8be27ea4,0xfa841f50,0x85f13f50,0xf77f3bb1,0x22fffa83,0xf9af982f,
    0x23ea35c2,0x2a2e42f8,0x4f32f88f,0x5f11f51f,0x22e45d8c,0xb7098cf8,
    0x45c89bf1,0xf3098cf8,0x2be65f35,0x220be2f9,0x7f3098cf,0x457d43f7,
    0x3620be4e,0xf5d76fff,0x27ed6e1d,0xb35c9ffb,0x40fabcc7,0x1f57982d,
    0xff127fec,0x27ffc49f,0x3fe13ff6,0x4ecceb9e,0x19bf85a8,0x35c27f5c,
    0x2e427fec,0x4f327fec,0xf13ff61f,0xa85c83df,0x36b72fff,0x7d42e44f,
    0x13fae2ff,0x9bf89fd7,0xb97ffd41,0x7dc4ecce,0x066fe3ff,0x7cd6e000,
    0x8f66b804,0x2010fe79,0x0800fe79,0x74000020,0x206a1b23,0x9801ffff,
    0x8802ffff,0x9801ffff,0x880007e7,0xb801ffff,0x3fe29f35,0x000001ff,
    0x400ffffc,0x4041b23e,0x0001ffff,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x2aaa8000,0x2e216f54,0x7700620b,0x55313a20,0x20e4d445,
    0x77541aa9,0xeea83203,0xb8b79103,0x1cdc41ed,0x1660b7aa,0x1260aaaa,
    0x64405451,0x6541b901,0x216f541b,0x07642aa9,0x3aa0d54c,0x225a803e,
    0x26a000ee,0x2a03b839,0x5505910c,0x20220b90,0x0d70fbde,0x101104b8,
    0x6f7cc1bb,0x10b3260f,0xfff70133,0xf9804cc4,0xb700882c,0x16a01101,
    0x1dec42e4,0x3620fcf3,0x32b20602,0x6c40440f,0xc980880d,0x804cc42c,
    0x2222b8f8,0x5c07c408,0x1664c4aa,0x07660ecc,0x40bb88bb,0x7f31ffff,
    0x881327f5,0x8817c0bb,0x223e60bb,0xf02ee21f,0x65c43fff,0x3ffff11f,
    0x7dc3e5cc,0x23ba83ef,0xba8992fb,0x54165c43,0x41f9e63b,0xbffb03ba,
    0xff91fa98,0x0de549ff,0x543ffff1,0x80ff81bc,0x3e0abfb9,0x7f731fff,
    0x10a8a215,0x2a288545,0x08854510,0x5f07def4,0x23999f50,0x6f42c8a9,
    0x740be0fb,0x7cf30fbd,0xf83ef7a1,0x1fbdf882,0x373e62e4,0x2fa8db87,
    0x7dc373f2,0x6e7e4996,0xf90eb3e0,0x1f9e61b9,0xf10373f2,0x7e6f445d,
    0x65642e41,0x5642e40f,0x0bfaa0fc,0xf8333f6a,0x0ccfda82,0x2798fcf3,
    0x98fcf31f,0xf32647e7,0x4dfc7f57,0x3e207e61,0x57f31fde,0x7cc17c7f,
    0x7cf33fab,0x47f57f31,0xf9ae19bf,0x4d362e41,0x45365b87,0xc9fdb81f,
    0xbf103f14,0xf981f883,0x03f11fb9,0x7a85f65c,0x305c83f3,0x305c83f5,
    0x26e643f5,0x9bf80f98,0x98afee21,0x3f3cc7e7,0x4f31f9e6,0x67d4991f,
    0x3fffe1cc,0x443ffee0,0x33ea5f1f,0x2a0be1cc,0x4f31cccf,0x3999f51f,
    0x6c87fffc,0x3e8b907e,0xaecb70f3,0xdcdb80f9,0x2601f34c,0x403e66fd,
    0x1f31edfe,0x8aff4f40,0x2e41edfe,0x907f37a2,0x1fcde88b,0x7cc1eabe,
    0x30ffff80,0xf3cc79fb,0xf31f9e63,0x47e798fc,0x7c07e65c,0xf883e202,
    0x407e65d0,0x401f982f,0x203f31f9,0xfb8fa82f,0x23762e41,0x53e5b87d,
    0xb7088cf8,0x33e29bf1,0x87d42088,0x44088cf8,0x2233e269,0x20babe60,
    0x545c8698,0x45c83f37,0x3e63f37a,0x1f881fbb,0x83f102f8,0xf31fb9f9,
    0x27e63f73,0xf73f31fb,0xfff71723,0x440cdfc1,0x1743e23f,0x5fc1fff7,
    0x3ffee099,0x3ee2fc40,0x866fe0ff,0x641edfe8,0x43e7fcc5,0x2a1fc9eb,
    0x36b70fff,0x43ffea4f,0x7d44fff8,0x22fa80ff,0x3720fffa,0x85f502fc,
    0x76ff445c,0x3fa22e41,0xd99d71ed,0xf87ff609,0x1ffd819b,0xfe87b7fa,
    0x3b7fa1ed,0x6c7b7fa1,0xffff0105,0x87c41103,0xfff8082e,0x8020082f,
    0x01ffff80,0x01ffff88,0x0077fee0,0x004f9adc,0x01100002,0x837f43e0,
    0x8082e408,0x041ffff8,0x040d91f4,0x040ffffc,0x00802008,0x00002202,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x87100000,0x4e54399a,0x32a03b82,0x3b205910,0x883ac980,
    0x400ec84e,0x33502440,0x65407707,0x2a205910,0x2a1c40ac,0x14e54399,
    0x219501dc,0x399302c8,0x544e8800,0x5401029c,0x314c350c,0x2cb88355,
    0x55c1554c,0x4406e63a,0x44db884e,0x6d5c4aab,0x4c1664c3,0x880ecc1d,
    0x884ffd80,0x74c02200,0x5c0f32ff,0x1664c4aa,0x07660ecc,0xa83f7bd1,
    0x712aae1f,0x2cc987b5,0x0ecc1d98,0xf107de7c,0x2ae02201,0x43ffe43d,
    0x4e9ae1d9,0x59f0b326,0x4c0dd887,0x3f660d9d,0xdf880884,0x02ee20ff,
    0xbb881771,0x2205dc40,0x7fffc0bb,0x3e17ee61,0x881ff00f,0x3f3088cf,
    0x40bb8837,0x5dc40bb8,0xd705dc40,0x32a0c0fc,0x20de541b,0x5e541bca,
    0xf30de541,0x3ee61f51,0xaecbb0ab,0x8fd42a28,0x42e6b260,0x510f89f8,
    0x41df8854,0x51442a28,0x3ea1f501,0x27ae3fff,0xfbbf13de,0x47f77e23,
    0xf11fddf8,0x37e23fbb,0x220be1fd,0x3aa0fcdf,0x42fea82f,0xf9df307a,
    0xd07def43,0x5ef41f7b,0x43ef7a0f,0x8f307e6c,0x2b20fcac,0x3f2b20fc,
    0xc83f2b20,0xf1f30fca,0x8667ed43,0xf31f89f8,0x40cf98fc,0x365ceeaa,
    0x1f9e65bc,0x2799bf66,0x20fcf31f,0x326627c9,0x32f3720f,0x6b9f4d74,
    0x27d35cfa,0xd35cfa6b,0xf70cdfc7,0x09b991fc,0x06b89b99,0x7cd3a1f3,
    0x57f33fab,0x3eafe67f,0x27f57f33,0x321fb8fa,0x41fa986f,0x7d4c1fa9,
    0x260fd4c1,0x5f3f31fa,0xcdd80f98,0x2e1f9e65,0x566445ff,0x798bbe66,
    0x21f5087e,0xf3cc7e79,0xf881df83,0x974f7d43,0xb365366c,0xd94d9b29,
    0x9366ca6c,0x4d90ffff,0x21eabe3e,0x83dc7aaf,0x67d53679,0x999f51cc,
    0x47333ea3,0x3a1cccfa,0x85f11fdf,0xd11fcde8,0x37a23f9b,0xf9bd11fc,
    0x47f37a23,0x7cc5f779,0x261ff980,0x4bea07e7,0x743ceedc,0x223f3cc7,
    0xf9e64fff,0x360fcf31,0x3f60bb00,0x3e27ea4f,0x25f13f52,0xf52f89fa,
    0x27ea5f13,0x2a0be2f8,0x7f31f99f,0x5dfcc3f7,0x2633e21f,0x4cbe2f30,
    0x981f981f,0x801f981f,0x7a877e1f,0x7cdea3f3,0x547e6f51,0x4dea3f37,
    0x12ecf31f,0xf317603f,0x4c663f73,0x10b93d2f,0xfb9f987f,0x27e60d41,
    0xf73f31fb,0x0fb80c83,0x3ff60790,0x3627fec4,0x27fec4ff,0x37f13ff6,
    0x2e4ffd83,0x3ae4ecce,0x7fd44ecc,0x89fff32f,0x3ee0fffb,0x3ffee0ff,
    0x403ffee0,0x44ffa61f,0xfd11edfe,0x37fa23db,0x3dbfd11e,0x4c7b7fa2,
    0x7ec1ffaf,0x7f42641f,0x9fff51ed,0xcaf767dc,0x3dbfd05f,0xedfe82d8,
    0x887b7fa1,0x4ce7c42f,0x00000040,0xfff80000,0x323e801f,0x006c8fa6,
    0x40100400,0x40300200,0x04010040,0x00004010,0x00413201,0x00441001,
    0x80200802,0x7ffdc000,0x0000003f,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x89644000,0xe8815c43,
    0x224e880e,0x83201c9a,0x4e880ee8,0x86aee200,0x88102dea,0x22001c9a,
    0x744000ee,0x1000100e,0x42a28800,0x2c8710c9,0x21aa8800,0x2a0710c9,
    0x2600000c,0x000ca80c,0x199a6f32,0xb5ec7ff9,0x0fb3e22d,0x02202222,
    0x203f9df3,0x2022221f,0x44eec808,0x0441fcbf,0xdf32ffec,0x3fec41fb,
    0x3fe02222,0x2044447f,0x4b73fffa,0x713ffe4d,0x3f3ccbff,0x2216c7aa,
    0x98f5a81d,0x6c7aa2cc,0x7541d982,0x427fec47,0x81d981d8,0xaeda85fa,
    0x2a7ebba3,0x8b5f792f,0xff889979,0xffff11ff,0x12743e63,0xd9763f95,
    0x547fffe5,0x2f33ca8c,0x3fffea78,0x4c7e1f33,0x33a1f88f,0x5f01ff01,
    0x2d316c33,0xb7188bf9,0x99ee126c,0x4f32f88f,0x216a761f,0x5ee4c2aa,
    0x360aaa2f,0x2b8a85a9,0x22e1f7a6,0x10aaa0fa,0xee883935,0x9330d705,
    0xeab8a6cb,0x900eee80,0x4f31720b,0x3f7bd14d,0xf87e27e2,0x68cf9d82,
    0x99893bbe,0xf79f10fc,0xf31f9e61,0x2fea8153,0x316c1bf8,0xb2dc1b2b,
    0xb92e4c49,0x3f3cd3ee,0x76407454,0x1f6ef4c6,0x1d150dd9,0xa85f9ff0,
    0xec83e607,0x07ef7cc6,0x1ae0b7b9,0x5b1724d8,0x2aafe981,0x98b905c8,
    0xf9ae5f17,0x7f173761,0x2d34f433,0x7f1009f9,0x9e64ffb8,0x3fddf71f,
    0x77426e64,0x5755b0ef,0xba7fd76b,0x4fea9365,0x4d777776,0x56c1fc9f,
    0x5590d700,0x0b60d709,0x3d42b97c,0x98d709d0,0x1f31f88f,0x2e1ae0b7,
    0xda9725bc,0x3eb363ed,0xb905c83e,0x324fff98,0x1ff987e6,0x9d87fffc,
    0xfff168cf,0x7cc5d83d,0x7cf32fa9,0x5f274f51,0xc97c40f5,0x4b95aedb,
    0x41ecb74d,0x327f92f8,0x4dd9ff34,0x6b84dada,0x217f77e4,0x2fada86b,
    0x20f500fc,0x798d705d,0x77676c7e,0x9ed86b83,0x1d12f9af,0xfca6cd3f,
    0x8b905c81,0xf71f5079,0x82f85d83,0xd73ca8cb,0xa81f726c,0x41985d0f,
    0xf33e89f8,0x3ea03f77,0x299dd991,0xf54e8afa,0x5f305f11,0x4cbe23ea,
    0x0b61d107,0x995d11ae,0x47446b81,0x980fc3ce,0x27b609fb,0x9e635c09,
    0x7dd9971f,0xfeb80d70,0x31f64b24,0xb90bddff,0x40f31720,0x2641edfe,
    0x3b20cdfc,0x3b77e64e,0x21339f11,0x2d85ffd8,0x3ae5feb8,0x3fe24ecc,
    0x3eefae2f,0xd8fffee4,0x3ffe64ff,0xf327fe44,0x32fe4b20,0x47c5ffff,
    0x3fffe62c,0x87b51592,0xffff881f,0x27ffff33,0xf32ffff9,0x262dc0fc,
    0x0002ffff,0x3fe20100,0xffff11ff,0x990000c3,0x003ffff0,0xfff70662,
    0x0004007f,0x7006c8fa,0x0107f33f,0x03000100,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0xa9800000,0x59930029,0xcb880000,
    0x93000102,0x40cc0055,0x5554003b,0x4c001222,0x000002cc,0x8e547750,
    0x414e5438,0x439aa83b,0x00002aaa,0x80488799,0xb025c0ca,0x3ffeabff,
    0x9ffff93f,0xb10fbfea,0x24ffd83b,0xffa83ea8,0x24e9ae3e,0x7f443acf,
    0x5401f11f,0x333724da,0x9931fa4c,0xc87d3d45,0x261fffc5,0x8357f307,
    0x77fcc0ff,0x87fffe24,0x7b30dcfc,0x87b570b6,0x4ddc2cc9,0x7fdc5c84,
    0x0ffffc3e,0x00f98db5,0x412e0766,0x26622ef8,0x2a2e41fa,0x2aa2fa8e,
    0x0fcc75c2,0x2a3aa0fa,0x89eafa2f,0x435c81df,0x0aaa00f8,0x4c93bd59,
    0xfd2882a1,0x5c54ffff,0x98263e22,0x416e4fff,0x9bcc2fea,0x3e22e41f,
    0x45adc981,0x5541c9a8,0x5442aa82,0x2a36e1c9,0x6b80be2f,0x505447cc,
    0x15541555,0xc80becb8,0x8f5c5c85,0xd91bb24d,0x84cfa17c,0x7d49b1eb,
    0x237ecc2e,0x330f883d,0xc8646ec8,0x698ba04b,0x9ff1f4f5,0x9fbbe25f,
    0x1727f379,0x3e626e64,0x22e40fa9,0xe9bb80f9,0x07ef7cc0,0x8dd90dd9,
    0xb70fdef9,0x0337f26c,0x5d8f98d7,0xc83fb322,0xbfd3d06e,0x7ffc1f88,
    0x1763ffe7,0xfeef98d7,0xfb7c5f43,0x3a65d8ff,0x91fa841e,0x87c4bfff,
    0x4646b87f,0xd97649dd,0xff55adcb,0x2b97c7ff,0x263f15f1,0xf82e4fa7,
    0x7f7cc7aa,0x67c2e40d,0x4c16c088,0x35c1f88f,0x447cc6b8,0xf2ecb71f,
    0x46b81fff,0xf980edf9,0xaf986b82,0xd986c82e,0x44f9aa1d,0x2f9a886b,
    0x4d52b9f4,0x3dffd14f,0x7b13ffe2,0x20ee1f10,0x489c646b,0x7f65c3f2,
    0xf1f4f54c,0x47e1f103,0xb91fcaf9,0x43f77f30,0x5c87f179,0x2a0ffe98,
    0xf9e62fad,0x46b835c1,0xf2dc7e79,0x8d7017c9,0x4e885df9,0xf9b90d70,
    0xb902f885,0x41fc9ea8,0x86c9986b,0xfc9ea83e,0x819dd911,0x4ce7443c,
    0x20335f10,0x48bce46b,0xfddfa9ae,0x3f1f4f53,0x4c7e1f10,0x21721cdf,
    0x264ecceb,0x05c85f37,0xce8e8897,0x5c1f9e63,0x2798d706,0x3f93d71f,
    0x35c0cdfc,0xfb13a3e6,0x1f0d7033,0x206c9bfa,0x0effd45c,0x225ffff3,
    0x3fee0dff,0x37fea0ff,0x5c0eecc1,0x9ffffe40,0x260ffff8,0xdd92ffff,
    0x983329dd,0x4f52fabf,0x3e207e3e,0x641e63f0,0x99b23e85,0x3fe24eff,
    0x320d41ff,0x9e63da8a,0x5ffff31f,0x4cbfffe6,0x6ffdc7e7,0x98ffffc1,
    0x1f32ffff,0x3ffe25f3,0x5ffff31f,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x80000000,0x20f40048,
    0x0f322cb8,0x00000000,0x03b80000,0x00000000,0x2aaa0000,0x10402002,
    0x20aa05c7,0x2ea0b9ab,0x415dc41b,0x05dc43b9,0x44173571,0x2b92a0bb,
    0x044a8057,0x3cc664c1,0x6c2c57c0,0xb1b6a1ad,0x2e4eb4c5,0xf97cde66,
    0x21ffff02,0xd73f99fb,0x3a12e1ec,0x2992fb83,0xbb3ffffa,0x7f17baec,
    0xf327ffcc,0xc8b909ff,0xdb54ffff,0x3ccffaa5,0x65c4b83f,0x32f24cee,
    0x90eb3e0f,0x5ef41b9f,0x99dd550f,0x443f77e2,0x9f31feef,0x9f887ee0,
    0x37d530f9,0x0be0393f,0x15d702f8,0x4d7598b6,0xf275e64d,0x3ee0be05,
    0x6cd73fbb,0xe82aaaa3,0x65bee19b,0x21f93314,0x3e1f89f8,0xf9bcc6bb,
    0x43f71f33,0x2e40aaaa,0x4cf4f6e2,0xc98fcf36,0xb73b2cee,0x21fa98d5,
    0x40fc41df,0x222eaaf9,0x74d76adc,0xd11eefa3,0xfa80ed8b,0x7ccfd42f,
    0x82f80fde,0x641cdfca,0x5755b0ef,0x87e27e6b,0x817c6bf9,0xceecb82f,
    0x27d33d74,0x3a0fecc8,0x27f6e1ef,0x361fc44c,0x17fd45cd,0x2f33e9e6,
    0xfd9910f9,0x65ec5c81,0x9e6b77b3,0x15bb511f,0x44f3ae36,0x3661fcde,
    0x2a03e66f,0xbb91cccf,0x4d9ae77b,0x3b607c3e,0xf301bd10,0x4ce7d43f,
    0x2f81f88f,0x21acfa98,0x76de46fe,0x31eafe5a,0xf02f87ff,0x775e4fff,
    0x7ffff74b,0x13f22f98,0xb133736e,0x883ff30b,0xfbaf987f,0x305fff31,
    0xca8b905f,0x2619912b,0x25c1fb8f,0x2f517276,0x87cc21f9,0x3e608cf8,
    0x545c9e81,0x33a2f89f,0x6c17a26b,0x3eabe20e,0x4f359950,0x3e02f81f,
    0x6646b982,0x33724cee,0xf07d7cc4,0xc866fe05,0x4d75bbcb,0xd313a23d,
    0x9bf1b707,0x85d807dc,0x77cc3feb,0x13a3e61c,0x917209d1,0x937729bb,
    0x2221edfe,0x3b77aa09,0x23dbfd14,0x7544fef8,0x3ffee0ff,0x49dd9f70,
    0x37e64ffd,0xb80991fd,0x3cc030c5,0x1337f03f,0xb8d702f8,0x3ea4fbbe,
    0x26dbcc2e,0x0be099bf,0x4d75a8b6,0xd067f63d,0x6d6e1339,0x1339f14f,
    0x5d7c44c8,0xbcc1e60f,0x067f60fa,0x21331172,0x4c040998,0x0101ffff,
    0x10000401,0x47500080,0x0000002b,0x7fc0fcf3,0x2617c2ff,0x3f72ffff,
    0x40ff87f3,0x3fe7f179,0x360be2ff,0x7b35d6a2,0xe87fffe2,0x26b73fff,
    0x7ffff74f,0xbd3644c8,0x3e7983cc,0x83ffff13,0x0000005c,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x73510000,0x2a2b8b83,0x45ccca61,
    0x02eeee0b,0xa8577077,0x371c4e20,0x0001a8e6,0x39910530,0x6d400530,
    0x10033224,0x89d55c77,0x0550bbbb,0x105dddcc,0x0c982ec0,0x99a86aa6,
    0x5dd45913,0x4dddddd2,0x0000004b,0x77cc0000,0x3f3be0fd,0xec9ecd72,
    0xd9914ded,0xdb83b81f,0x22d31746,0x2fe25d8f,0x5b1d10f9,0x320e8da8,
    0x99b10cbb,0xbb04b83b,0x77b2f998,0x97ae4d8d,0x77715bbd,0x26d93217,
    0xf51fccc9,0x4374933f,0x0ddcc1d8,0x8ecc9557,0x33333cca,0x00005433,
    0x20000000,0x3e1f88f9,0x227e2572,0xb597790f,0x2ee62f98,0x3235c1bb,
    0x9f15accb,0xb85ff50d,0x327a0f9d,0x171ffd44,0x36e691bb,0x8b72a1bd,
    0xf33d1fe8,0x792dc7c8,0x2aaaa2b7,0xd036c990,0x0bfeab23,0x00000000,
    0x00000000,0x9e600000,0x66c07e1f,0x2aeeb25b,0x332a2745,0x2e35c2cc,
    0xbf14bfec,0xb503fe0b,0x363e21f1,0x43b77a23,0x9548dd9b,0x447459dd,
    0x2a9b330e,0xb32dc2ff,0x6664403d,0x4400001c,0x00000001,0x00000000,
    0x30000000,0x203f0fcf,0x2eb22ef9,0x023b65ab,0x2a35c0aa,0x1f13fddf,
    0x25ddc89d,0x6dc3d8f8,0x82ee20f8,0x5c0daad8,0x2e130c44,0x066c00bc,
    0x00005995,0x00000000,0x00000000,0x00000000,0x43f3cc00,0x591fa01f,
    0x3fe2b577,0x222641ff,0x5f32ffff,0x7cde25f5,0x07f11f52,0x10004201,
    0x00750177,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,
};

static signed short stb__consolas_bold_11_latin_ext_x[560]={ 0,2,1,0,0,0,0,2,1,1,0,0,1,1,
1,0,0,0,0,0,0,0,0,0,0,0,2,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,
1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,
2,0,0,0,1,0,0,1,0,0,1,0,1,1,0,0,0,1,2,1,1,0,0,0,0,0,0,0,0,0,
0,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,
0,-2,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,0,0,0,-1,0,
0,0,0,0,0,0,0,0,0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,-1,0,-2,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0, };
static signed short stb__consolas_bold_11_latin_ext_y[560]={ 8,0,0,0,-1,0,0,0,-1,-1,0,2,5,4,
6,0,0,0,0,0,0,0,0,0,0,0,2,2,2,3,2,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,2,0,2,0,2,0,2,0,0,
0,0,0,2,2,2,2,2,2,2,0,2,2,2,2,2,2,0,-1,0,3,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,2,-1,0,1,0,
-1,0,0,0,0,2,4,4,0,0,0,1,0,0,0,2,0,3,8,0,0,2,0,0,0,2,-1,-1,-1,-2,
-2,-2,0,0,-1,-1,-1,-2,-1,-1,-1,-2,0,-2,-1,-1,-1,-2,-2,2,-1,-1,-1,-1,-2,-1,0,0,0,0,
0,0,0,-1,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,0,0,0,0,0,0,0,
-1,0,-2,0,0,2,-1,0,-1,0,-2,0,-1,0,-1,0,0,0,-1,0,-2,0,-2,0,0,2,-1,0,-1,0,
-2,0,-2,0,0,0,-1,-2,0,0,-2,0,-1,0,-2,0,0,0,-2,2,0,0,-1,0,0,0,2,-1,-2,0,
0,0,0,0,0,0,0,-1,0,0,2,-1,0,-1,0,2,-1,0,-2,0,-1,0,0,2,-1,0,0,2,-1,0,
-1,0,-1,0,0,2,-1,0,0,0,-1,0,0,0,-2,0,-1,0,-2,0,-2,-1,-1,0,0,2,-1,0,-1,0,
-2,-1,0,-2,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,-3,-2,-1,0,-1,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0, };
static unsigned short stb__consolas_bold_11_latin_ext_w[560]={ 0,2,4,6,6,7,7,2,4,4,6,6,4,4,
4,6,6,6,6,6,6,6,6,6,6,6,2,4,6,6,5,5,6,7,6,6,6,6,6,6,6,6,5,6,
5,6,6,6,6,7,6,6,6,6,7,6,7,6,6,4,6,4,6,7,4,6,6,6,6,6,6,6,6,6,
5,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,5,2,5,6,6,6,6,6,6,6,6,6,6,
6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,0,2,5,6,6,6,
2,6,5,6,4,6,6,4,6,5,5,6,4,4,6,6,6,4,2,4,4,6,7,7,7,5,7,7,7,7,
7,7,7,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,
6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,
7,6,7,6,7,6,6,6,6,6,6,6,6,6,7,7,6,6,6,6,6,6,6,6,6,6,6,6,6,6,
6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,5,5,6,6,6,6,6,5,
6,8,8,7,7,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,7,7,6,6,7,6,6,6,7,6,
6,6,6,6,6,6,6,6,6,6,6,7,6,6,6,6,6,6,6,6,6,6,7,7,6,6,6,6,6,6,
6,6,6,6,6,6,6,5,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,
6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,
6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,
6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,
6,6,6,6,6,6,6,6,6,6,7,6,7,6,8,7,6,6,6,6,6,6,6,6,6,6,6,6,6,6,
6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,
6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,
6,6,6,6,6,6, };
static unsigned short stb__consolas_bold_11_latin_ext_h[560]={ 0,9,4,8,11,9,9,4,12,12,6,6,5,2,
3,10,9,8,8,9,8,9,9,8,9,8,7,8,7,4,7,9,11,8,8,9,8,8,8,9,8,8,9,8,
8,8,8,9,8,11,8,9,8,9,8,8,8,8,8,11,10,11,5,2,3,7,9,7,9,7,8,9,8,8,
11,8,8,6,6,7,9,9,6,7,9,7,6,6,6,9,6,11,12,11,4,8,8,8,8,8,8,8,8,8,
8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,0,9,11,8,7,8,
12,10,3,9,7,6,4,2,6,3,5,7,5,5,3,9,10,4,2,5,7,6,8,8,8,9,9,9,9,10,
10,10,8,10,9,9,9,10,9,9,9,10,8,10,10,10,10,11,11,6,11,10,10,10,11,9,8,9,9,9,
9,9,9,10,7,8,9,9,9,9,8,8,8,8,9,8,9,9,9,9,9,6,9,9,9,9,9,11,11,11,
9,9,10,9,11,9,10,9,10,9,11,9,10,9,9,9,8,9,9,9,10,9,10,9,11,9,9,9,10,11,
11,11,11,11,11,11,9,10,8,8,10,8,9,8,10,8,11,11,10,6,9,11,10,11,11,11,6,9,10,11,
11,8,8,8,8,8,8,9,8,11,9,9,8,9,11,9,10,9,11,9,10,9,9,7,9,8,11,9,9,8,
10,9,10,9,10,8,10,9,11,11,9,9,8,9,11,9,10,9,11,9,11,10,10,9,11,9,9,8,9,11,
10,9,8,10,8,9,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,10,8,8,8,
8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,
8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,
8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,
8,8,8,8,8,8,8,8,8,8,11,11,9,9,11,11,8,8,8,8,8,8,8,8,8,8,8,8,8,8,
8,8,8,8,8,8,8,8,8,8,11,9,11,11,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,
8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,
8,8,8,8,8,8, };
static unsigned short stb__consolas_bold_11_latin_ext_s[560]={ 255,252,134,180,17,8,16,146,1,9,85,
99,124,197,168,228,151,209,216,144,237,116,101,9,87,37,253,102,237,139,231,
241,56,148,156,73,213,220,59,130,73,163,250,46,53,66,94,1,123,63,130,
191,144,137,38,31,115,108,101,71,235,76,106,202,192,182,80,196,45,203,17,
73,1,248,88,234,227,22,1,217,38,115,8,189,170,161,15,50,64,205,29,
94,6,121,161,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,
95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,255,251,127,
73,224,59,14,242,186,66,151,78,154,197,92,180,118,168,251,113,173,158,249,
149,210,129,156,71,194,165,177,122,65,57,108,213,205,1,1,9,43,59,209,
16,179,31,24,44,23,92,113,120,23,147,174,244,188,65,37,51,202,177,135,
163,156,149,142,135,128,198,210,170,108,101,94,87,173,223,192,199,50,185,36,
29,22,15,8,36,1,244,237,230,223,216,223,230,193,186,141,172,237,158,134,
143,85,129,8,115,106,101,93,85,52,71,64,57,127,43,156,29,114,15,8,
1,149,160,15,71,78,85,43,50,191,58,114,128,78,88,78,187,221,30,64,
92,99,43,170,57,72,99,29,22,57,36,30,154,133,8,244,80,44,87,24,
177,230,209,94,108,206,22,195,50,155,184,105,221,126,242,163,175,198,202,36,
206,213,121,112,228,148,235,191,66,119,122,1,245,165,201,16,216,100,184,141,
212,181,226,167,134,162,233,140,136,123,107,52,107,184,247,241,177,80,80,137,
142,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,170,
95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,
95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,
95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,
95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,
95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,
95,95,95,48,81,150,198,24,33,95,95,95,95,95,95,95,95,95,95,95,
95,95,95,95,95,95,95,95,95,95,95,95,95,41,219,1,245,95,95,95,
95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,
95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,
95,95,95,95,95,95,95,95,95, };
static unsigned short stb__consolas_bold_11_latin_ext_t[560]={ 1,1,85,57,1,57,57,85,1,1,85,
85,85,85,85,14,57,57,57,57,57,57,57,67,57,67,57,67,76,85,76,
47,1,67,67,47,67,67,76,57,76,67,26,76,76,76,76,57,76,1,76,
47,76,57,76,76,76,76,76,1,14,1,85,85,85,76,47,76,57,76,76,
57,76,67,1,67,67,85,85,76,57,47,85,76,47,76,85,85,85,47,85,
1,1,1,85,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,
67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,1,37,1,
67,76,67,1,14,85,57,76,85,85,85,85,85,85,76,76,85,85,57,14,
85,85,85,76,85,57,57,67,47,47,47,57,14,14,26,67,26,47,57,37,
26,37,57,57,26,67,26,26,26,26,1,1,76,1,26,26,26,1,47,67,
47,47,47,47,47,47,14,76,67,47,47,47,47,57,57,67,67,47,67,47,
47,47,47,47,85,47,37,37,37,37,1,1,1,37,37,26,37,1,37,26,
37,26,37,14,37,26,37,37,37,67,37,37,37,26,37,26,37,1,37,37,
37,26,1,14,14,14,14,14,14,26,26,67,67,26,67,37,57,14,67,14,
14,26,85,26,14,26,14,14,14,85,37,26,1,1,76,57,67,67,76,76,
26,57,1,57,37,67,37,1,37,14,26,14,26,14,26,26,76,26,57,14,
26,26,67,14,26,14,26,14,67,14,37,14,1,37,37,67,37,1,47,14,
47,1,47,1,14,14,47,1,37,57,67,57,1,14,47,67,14,76,57,76,
67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,14,
67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,
67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,
67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,
67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,
67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,
67,67,67,1,1,37,47,1,1,67,67,67,67,67,67,67,67,67,67,67,
67,67,67,67,67,67,67,67,67,67,67,67,67,1,47,14,1,67,67,67,
67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,
67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,
67,67,67,67,67,67,67,67,67, };
static unsigned short stb__consolas_bold_11_latin_ext_a[560]={ 97,97,97,97,97,97,97,97,
97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,
97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,
97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,
97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,
97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,
97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,
97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,
97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,
97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,
97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,
97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,
97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,
97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,
97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,
97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,
97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,
97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,
97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,
97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,
97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,
97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,
97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,
97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,
97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,
97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,
97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,
97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,
97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,
97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,
97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,
97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,
97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,
97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,
97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,
97,97,97,97,97,97,97,97, };

// Call this function with
//    font: NULL or array length
//    data: NULL or specified size
//    height: STB_FONT_consolas_bold_11_latin_ext_BITMAP_HEIGHT or STB_FONT_consolas_bold_11_latin_ext_BITMAP_HEIGHT_POW2
//    return value: spacing between lines
static void stb_font_consolas_bold_11_latin_ext(stb_fontchar font[STB_FONT_consolas_bold_11_latin_ext_NUM_CHARS],
                unsigned char data[STB_FONT_consolas_bold_11_latin_ext_BITMAP_HEIGHT][STB_FONT_consolas_bold_11_latin_ext_BITMAP_WIDTH],
                int height)
{
    int i,j;
    if (data != 0) {
        unsigned int *bits = stb__consolas_bold_11_latin_ext_pixels;
        unsigned int bitpack = *bits++, numbits = 32;
        for (i=0; i < STB_FONT_consolas_bold_11_latin_ext_BITMAP_WIDTH*height; ++i)
            data[0][i] = 0;  // zero entire bitmap
        for (j=1; j < STB_FONT_consolas_bold_11_latin_ext_BITMAP_HEIGHT-1; ++j) {
            for (i=1; i < STB_FONT_consolas_bold_11_latin_ext_BITMAP_WIDTH-1; ++i) {
                unsigned int value;
                if (numbits==0) bitpack = *bits++, numbits=32;
                value = bitpack & 1;
                bitpack >>= 1, --numbits;
                if (value) {
                    if (numbits < 3) bitpack = *bits++, numbits = 32;
                    data[j][i] = (bitpack & 7) * 0x20 + 0x1f;
                    bitpack >>= 3, numbits -= 3;
                } else {
                    data[j][i] = 0;
                }
            }
        }
    }

    // build font description
    if (font != 0) {
        float recip_width = 1.0f / STB_FONT_consolas_bold_11_latin_ext_BITMAP_WIDTH;
        float recip_height = 1.0f / height;
        for (i=0; i < STB_FONT_consolas_bold_11_latin_ext_NUM_CHARS; ++i) {
            // pad characters so they bilerp from empty space around each character
            font[i].s0 = (stb__consolas_bold_11_latin_ext_s[i]) * recip_width;
            font[i].t0 = (stb__consolas_bold_11_latin_ext_t[i]) * recip_height;
            font[i].s1 = (stb__consolas_bold_11_latin_ext_s[i] + stb__consolas_bold_11_latin_ext_w[i]) * recip_width;
            font[i].t1 = (stb__consolas_bold_11_latin_ext_t[i] + stb__consolas_bold_11_latin_ext_h[i]) * recip_height;
            font[i].x0 = stb__consolas_bold_11_latin_ext_x[i];
            font[i].y0 = stb__consolas_bold_11_latin_ext_y[i];
            font[i].x1 = stb__consolas_bold_11_latin_ext_x[i] + stb__consolas_bold_11_latin_ext_w[i];
            font[i].y1 = stb__consolas_bold_11_latin_ext_y[i] + stb__consolas_bold_11_latin_ext_h[i];
            font[i].advance_int = (stb__consolas_bold_11_latin_ext_a[i]+8)>>4;
            font[i].s0f = (stb__consolas_bold_11_latin_ext_s[i] - 0.5f) * recip_width;
            font[i].t0f = (stb__consolas_bold_11_latin_ext_t[i] - 0.5f) * recip_height;
            font[i].s1f = (stb__consolas_bold_11_latin_ext_s[i] + stb__consolas_bold_11_latin_ext_w[i] + 0.5f) * recip_width;
            font[i].t1f = (stb__consolas_bold_11_latin_ext_t[i] + stb__consolas_bold_11_latin_ext_h[i] + 0.5f) * recip_height;
            font[i].x0f = stb__consolas_bold_11_latin_ext_x[i] - 0.5f;
            font[i].y0f = stb__consolas_bold_11_latin_ext_y[i] - 0.5f;
            font[i].x1f = stb__consolas_bold_11_latin_ext_x[i] + stb__consolas_bold_11_latin_ext_w[i] + 0.5f;
            font[i].y1f = stb__consolas_bold_11_latin_ext_y[i] + stb__consolas_bold_11_latin_ext_h[i] + 0.5f;
            font[i].advance = stb__consolas_bold_11_latin_ext_a[i]/16.0f;
        }
    }
}

#ifndef STB_SOMEFONT_CREATE
#define STB_SOMEFONT_CREATE              stb_font_consolas_bold_11_latin_ext
#define STB_SOMEFONT_BITMAP_WIDTH        STB_FONT_consolas_bold_11_latin_ext_BITMAP_WIDTH
#define STB_SOMEFONT_BITMAP_HEIGHT       STB_FONT_consolas_bold_11_latin_ext_BITMAP_HEIGHT
#define STB_SOMEFONT_BITMAP_HEIGHT_POW2  STB_FONT_consolas_bold_11_latin_ext_BITMAP_HEIGHT_POW2
#define STB_SOMEFONT_FIRST_CHAR          STB_FONT_consolas_bold_11_latin_ext_FIRST_CHAR
#define STB_SOMEFONT_NUM_CHARS           STB_FONT_consolas_bold_11_latin_ext_NUM_CHARS
#define STB_SOMEFONT_LINE_SPACING        STB_FONT_consolas_bold_11_latin_ext_LINE_SPACING
#endif

