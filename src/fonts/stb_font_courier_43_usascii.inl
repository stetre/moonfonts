// Font generated by stb_font_inl_generator.c (4/1 bpp)
//
// Following instructions show how to use the only included font, whatever it is, in
// a generic way so you can replace it with any other font by changing the include.
// To use multiple fonts, replace STB_SOMEFONT_* below with STB_FONT_courier_43_usascii_*,
// and separately install each font. Note that the CREATE function call has a
// totally different name; it's just 'stb_font_courier_43_usascii'.
//
/* // Example usage:

static stb_fontchar fontdata[STB_SOMEFONT_NUM_CHARS];

static void init(void)
{
    // optionally replace both STB_SOMEFONT_BITMAP_HEIGHT with STB_SOMEFONT_BITMAP_HEIGHT_POW2
    static unsigned char fontpixels[STB_SOMEFONT_BITMAP_HEIGHT][STB_SOMEFONT_BITMAP_WIDTH];
    STB_SOMEFONT_CREATE(fontdata, fontpixels, STB_SOMEFONT_BITMAP_HEIGHT);
    ... create texture ...
    // for best results rendering 1:1 pixels texels, use nearest-neighbor sampling
    // if allowed to scale up, use bilerp
}

// This function positions characters on integer coordinates, and assumes 1:1 texels to pixels
// Appropriate if nearest-neighbor sampling is used
static void draw_string_integer(int x, int y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0, cd->t0); glVertex2i(x + cd->x0, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t0); glVertex2i(x + cd->x1, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t1); glVertex2i(x + cd->x1, y + cd->y1);
        glTexCoord2f(cd->s0, cd->t1); glVertex2i(x + cd->x0, y + cd->y1);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance_int;
    }
    glEnd();
}

// This function positions characters on float coordinates, and doesn't require 1:1 texels to pixels
// Appropriate if bilinear filtering is used
static void draw_string_float(float x, float y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0f, cd->t0f); glVertex2f(x + cd->x0f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t0f); glVertex2f(x + cd->x1f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t1f); glVertex2f(x + cd->x1f, y + cd->y1f);
        glTexCoord2f(cd->s0f, cd->t1f); glVertex2f(x + cd->x0f, y + cd->y1f);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance;
    }
    glEnd();
}
*/

#ifndef STB_FONTCHAR__TYPEDEF
#define STB_FONTCHAR__TYPEDEF
typedef struct
{
    // coordinates if using integer positioning
    float s0,t0,s1,t1;
    signed short x0,y0,x1,y1;
    int   advance_int;
    // coordinates if using floating positioning
    float s0f,t0f,s1f,t1f;
    float x0f,y0f,x1f,y1f;
    float advance;
} stb_fontchar;
#endif

#define STB_FONT_courier_43_usascii_BITMAP_WIDTH         256
#define STB_FONT_courier_43_usascii_BITMAP_HEIGHT        168
#define STB_FONT_courier_43_usascii_BITMAP_HEIGHT_POW2   256

#define STB_FONT_courier_43_usascii_FIRST_CHAR            32
#define STB_FONT_courier_43_usascii_NUM_CHARS             95

#define STB_FONT_courier_43_usascii_LINE_SPACING          20

static unsigned int stb__courier_43_usascii_pixels[]={
    0xc8000000,0x0b800801,0x10880000,0x26133333,0x02209999,0x00810020,
    0x00ec1e80,0x04000000,0x5e54c000,0x73000001,0x4cc40037,0x99999999,
    0x2201da81,0x0002cdca,0x980009f9,0x403d402f,0x2600006e,0xffffd5fc,
    0x3ffffe5f,0x2019fd1f,0x25f300f9,0x3e2001fa,0x93001fc3,0x80019bfd,
    0xbdfffdb8,0x3ffea000,0x3f24ffff,0x7fffc6ff,0x3fffff23,0x7fdc03df,
    0xffffffff,0x9837fc2f,0x0effefff,0x0027e400,0x3ea01f60,0x000fdc00,
    0x510bff80,0x37e5f755,0x3f221aaa,0x3a01f506,0x400df10f,0x00fe22f8,
    0x7ee77fd4,0xdff5001f,0x03dfd959,0x11aefd88,0x9f91df95,0xbfccb859,
    0x5309cfe8,0x5fdc07fd,0xaaaaaaaa,0x5437fc41,0x3fea21ef,0x013f2000,
    0xb803f980,0x005f801f,0x4c00fa80,0xf5009f2f,0xf701f507,0x3003fc89,
    0x4017c43f,0x7ec40cfb,0x806fdc01,0x3f602fe8,0x3ef74c03,0x01eedf80,
    0x0fb81fdc,0xd0dff000,0x017e201f,0x20004fc8,0xfd9100fd,0x83519fff,
    0x6c0001fb,0x9f2f9805,0x3ea13e00,0x7c41ff80,0x21fa800f,0x27c402f9,
    0x5fb817a0,0xa82fd880,0xfff1003f,0x003ffe00,0x07dc1fdc,0x545ff800,
    0x00fe401f,0x4f880000,0x9559ff30,0xf88bfffd,0x02740004,0x004f97cc,
    0xa81f50bd,0x007fb06f,0x00fcc1f5,0x0f5003f2,0xdd0017e2,0xfa800bf0,
    0x005ff007,0x00fb85e8,0x6e8bfd00,0x0004f880,0x101f9000,0x3fa201df,
    0x0000fc85,0x4be6013a,0x50bd004f,0x502fd81f,0x41f700df,0x0fe600fa,
    0x3f207e60,0x31fcc000,0x0ff0005f,0x2a001be0,0x0000fb87,0x01fcc9fd,
    0x000007d8,0x7f904f88,0xf885f880,0x013a0004,0x8027cbe6,0x220fa85e,
    0x00ff407f,0x401f71ee,0x3f8800fb,0xd80027cc,0x0001f70f,0x017e00fb,
    0x1f70be20,0xa93fa000,0x03f7000f,0x0fb80000,0x0aa00fd0,0xe80007e4,
    0x9f2f9804,0x3ea17a00,0xf700ff20,0x3dc7c809,0x7c401f20,0x80007dc3,
    0x000f92f9,0x027c01f2,0x07dc3f80,0x8ff60022,0x2bea007b,0xfffffffa,
    0x2001ffff,0x0013a05f,0x4000fe60,0xf2f9804e,0x2a17a009,0x300bfe0f,
    0xd99988ff,0x99fc999f,0x93036c09,0x06c87ffd,0x7dcfe200,0x007d8000,
    0x5f1000bf,0xffeb9fb8,0x7fb01dff,0x5f3003e4,0x99999971,0x2003fb99,
    0x01b601fb,0x8003ec00,0xf2f9804e,0x2a17a009,0x801ff30f,0x3ff21ff8,
    0xffffffff,0x13a0ffff,0x3f37ff62,0x20002f43,0x0005f34f,0x01be00ff,
    0xff707ea0,0xff977bff,0x36c7f907,0x9800fe00,0x80bd001f,0x40000dfa,
    0x4f8003f9,0x09f2f980,0x43ea17a0,0x5ff007fa,0x4ef4ccc4,0x1999ee99,
    0x11fec1fc,0x0004f87f,0x800bf2ec,0x5ff007fa,0xe987d800,0x85fb101b,
    0x001762fc,0x0fcc007f,0x5c017d40,0x0001bdff,0x3f9800dd,0x09f2f980,
    0x1f503f20,0x7f401bee,0x0bd17a03,0x21fd43f8,0x001fc3f8,0x03fa9b60,
    0x200fff10,0xf7000fff,0x0fd80005,0x005d8bee,0x3f3001fc,0x4400dd00,
    0x0bdfffeb,0x2005f500,0xf9800fea,0x3ea009f2,0x7e43ea1d,0x409fb005,
    0x3e02f44f,0x1fc43e43,0xbd00017a,0x74c03fd8,0xfbf007de,0x05fb803d,
    0x2e3f8800,0xf001761f,0x00fcc007,0x44000bea,0x003ffdba,0x3ffd00dd,
    0x27cbe600,0x2a9ff700,0x2009fb0f,0xf0fe05fc,0x2ec3f809,0x01b61fc4,
    0xfd889f00,0xdf9311ae,0x2fe00f91,0x5309cfe8,0x00001bfd,0x361fa97a,
    0x001fc006,0x06d803f3,0x13f62000,0xd5007ea0,0x4be6009f,0x37fa004f,
    0x13f61f51,0xf882fe40,0x0fe027c3,0x43f881f9,0x3e20007c,0xfffff502,
    0x803e49ff,0x3ffff63f,0x00002fff,0x7c8d336c,0x800be200,0x0fe601f9,
    0x01f20000,0x2fc802f4,0x09f2f980,0x1f50bee0,0x7ec01bf2,0xdfdddb34,
    0xbdddfddd,0x27d43f83,0x03f50fe2,0x3007f200,0x0f903795,0x32e60fe0,
    0x9000001a,0x000fb80f,0x7cc003f3,0x0001f601,0x5c017cc0,0x03f8801f,
    0x009f2f98,0x5c3ea1b6,0x27fd007f,0xeefeeed9,0x1deeefee,0x5f7ec27c,
    0x06e83fa9,0x0005f880,0x0fe00f90,0xd8000000,0x800fd405,0x3e6000fb,
    0x2007f101,0x0fe20029,0x74017e20,0x9f2f9804,0x3ea17a00,0xf001ff50,
    0x987e605f,0xb82f402f,0x40ffffff,0x7e4003fa,0x0f900001,0x00000fe0,
    0x4404f800,0x00fd004f,0x1f901f98,0xa801b600,0x01f9001f,0x5f3009d0,
    0x42f4013e,0x03ff10fa,0xf501ff88,0x3600fcc1,0x154d4c06,0xf5001fe8,
    0x3e400009,0x00003f80,0x005f5000,0x4f8801fd,0x440fcc00,0x13f6004f,
    0x8801ba20,0x804e804f,0x2009f2f9,0x3a0fa85e,0x037d402f,0x00fd41f7,
    0x440001f2,0x77dc02fe,0x1f200000,0x40001fc0,0x1ba001e9,0x807f5031,
    0x7cc000fd,0x2000fc81,0xd500cffd,0x0fc8003f,0x7cc02740,0x17a009f2,
    0x05fa83ea,0x8f701fe4,0x17d400fa,0xdfe88000,0x09fb730a,0x00f90000,
    0x740000fe,0x0fec404f,0xfe83fff5,0x0007f701,0x05f883f3,0x77fdeec0,
    0x01efeecd,0x7404f880,0x9f2f9804,0x3ea17a00,0xf8807fc0,0xf71f200f,
    0x00017a00,0xfffffb88,0x500002ef,0x355fb555,0xaadfaa98,0x3f20002a,
    0xfb988abe,0x27ffec2f,0x6546ffe6,0x3f30005f,0x4c001fb8,0x9dfdb711,
    0x0fd80005,0x3e6013a0,0x17a009f2,0x09f903ea,0x8d9013ee,0x05f7007c,
    0xdfe88000,0x2600000a,0xffffffff,0x7fffffc7,0x20001fff,0xffffffd9,
    0x2fffb80e,0xfffffd88,0x07e60004,0x540000bf,0xf300000f,0x4c02f407,
    0x3a009f2f,0x7cc0fa85,0xd803fd07,0xfd003646,0x98024c05,0x044013fe,
    0x4cccc400,0x99988199,0x00009999,0x002aea20,0xba880395,0x7cc0000a,
    0x00007ea1,0x00000fa8,0x807d81b6,0x1009f2f9,0xb01f505f,0x805fa85f,
    0x30036c5d,0xb5337bfd,0xfff700bf,0x337bdfff,0x00000bfb,0x00000000,
    0x00000000,0x6e83ee00,0x07d40000,0x05f30000,0x5f300fee,0x0f91013e,
    0x1be603ea,0x89d003fd,0x7ec4005d,0x803fffff,0xbbcdfff9,0x0cffffed,
    0x00000000,0x00000000,0xd0000000,0x00017d4f,0x00003ea0,0x77f40dd0,
    0x5fdddd72,0x437bbbbe,0x1f503ffc,0x27cc7f20,0x00440980,0x00335300,
    0x4d4400a8,0x00000000,0x00000000,0x00000000,0x005c97e6,0x000fa800,
    0x300fd400,0x3bbbb279,0xbddddd1e,0x58803321,0x00598ec0,0x00000000,
    0x00000000,0x00000000,0x00000000,0x1fd88000,0x28800000,0x00100000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x44000000,
    0xfcbaaaaa,0x0000001f,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x5c000000,0xdeffffff,0x00000001,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x31000000,
    0x00001333,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x4cccccc0,0x19999999,
    0x000aeea0,0x00000000,0x1bb98800,0xedb98000,0x971000bc,0x0000159d,
    0xa800cccc,0x98800bdc,0x00000099,0x01bdca88,0x20099880,0x00001999,
    0x3fffe200,0xffffffff,0x6fec41ff,0xf8800efd,0x2a06ffff,0x404fffff,
    0xb8000ff8,0x0dffffff,0x301ffff5,0xffddfffd,0xefffb807,0x80002eff,
    0x4407fffc,0x2effeffe,0x00ffffe0,0xfffb8000,0x7001ffef,0xbfffffff,
    0x07fffea5,0xbfd50000,0x2aab7e23,0xcaaaaaaa,0x9106741f,0x33fae00d,
    0x3b2e202c,0x7fc401cf,0x33fa2000,0x53ff730a,0xdf7079bf,0x04fd8815,
    0xfe981bf9,0x55440003,0x0bfa207d,0x2a605fb1,0x800003fa,0x0c0adfd8,
    0xaadffe80,0x2a62eccb,0x200001fc,0xf16ffff8,0x507dc007,0x005f101f,
    0xbd000fe6,0x003fe200,0x36202fe8,0xbf100fcf,0x542fb801,0x007ec03f,
    0x3207c800,0x007f601f,0x9800007f,0x640003ff,0x3f30003f,0x7fd40000,
    0x00190fff,0xc8132374,0x801b6004,0xff1001fa,0x00bee001,0x03007ff4,
    0x01ba3740,0x400017e2,0x807f307c,0x01fc05f8,0x03df1000,0x000df000,
    0x00000fcc,0x00dffff1,0x0790fe20,0x7f3002dc,0x0001ba00,0x2005f880,
    0x00000ff8,0x801fc4f7,0xf900006d,0x7dc01ee0,0x0000fe01,0x80001fd8,
    0x260003f8,0x4c00001f,0x70001dfd,0x3a06b81f,0x4036c003,0x000002fa,
    0xfb0007e6,0x3ee00001,0x2e003f30,0x0f900007,0x1fc401b6,0x200007f0,
    0x300003fb,0x7cc0005f,0x00000001,0x5f10db00,0x98001f50,0x0037402f,
    0x003ee000,0x00001f90,0x2005f176,0x1593006c,0x017a0f90,0x20fe05d8,
    0xe800aca8,0x3e600006,0x07e60002,0x00015773,0x07f10000,0x3f6ab7ea,
    0x40db0002,0x000002fa,0x7d4003e4,0x3fa80000,0x1f4402ec,0xfffffb50,
    0x5d83e47d,0x3f81f600,0x3fffffae,0x005f101e,0x7ffffdc0,0xffffffff,
    0x7dc7e603,0x005fffff,0x0fd40000,0x01bddb10,0x2f9802e6,0xffb00dd0,
    0x7003ffff,0x0fc8001f,0x42fdc000,0x07ec03fa,0x511aefa8,0x5c1f29f9,
    0x01ff3007,0x8567ecfe,0xf984feb9,0x32e20000,0xccccdfdc,0x3e601bcc,
    0x730adfc9,0x000000bf,0x26000364,0x6c00cfeb,0x9802f986,0x01fdcccc,
    0x6c001f98,0x3322000f,0x3ee04fed,0x817f4c1d,0x6fd404fa,0x003f307c,
    0x33e03ffd,0x3f2202fd,0x3ae63dc4,0x3e6002df,0x3fe60002,0x00fea02f,
    0x027c0000,0x0e7f64c0,0x6d85f300,0x007ea000,0xf88013e2,0x3fe6000f,
    0xffa806ff,0x501effef,0x3fe6009f,0xf901ba07,0x3ffe03f5,0x6c3f9001,
    0x3b37bf65,0x2f9800df,0x0bfe6000,0x99701be0,0x3f300099,0x33ff2600,
    0x99b60001,0x3ea0002f,0x005f7001,0x20003ffa,0x200efca8,0xffedeffb,
    0xc800db01,0x037e207f,0x40be27f6,0x3e2004ff,0x41fe53a6,0x2f9805fb,
    0x00be6000,0xfff007dc,0x0f90009f,0x01cefc98,0x365f3000,0x0fd40006,
    0x4405fd00,0x0000fcfd,0x7e40ff4c,0xf82fc883,0x407f8002,0xffdbdff9,
    0x1fe05f32,0x6f43ee00,0x0bea01fc,0x40005f30,0x3f5001f9,0x01bffe60,
    0xefa82740,0x8000101c,0x0002f9ed,0xd1000fd4,0x3ee6139f,0x0000fa9f,
    0x0fe47d88,0x0f98fee0,0x9807e800,0x2a0befeb,0x000df01f,0x0fff65f3,
    0x5f301f60,0x00fcc000,0xff901fa8,0x5f30005f,0xffb80620,0xf98001ef,
    0xfa80006f,0xfffb8001,0x1f50dfff,0x8be60000,0x5cdb003f,0x00f90007,
    0x7c03f200,0x327f0004,0x01f5006f,0x300017cc,0x07ea003f,0x8002fff4,
    0x7db0007b,0x0005f931,0x500007fb,0x2620003f,0x00fa81bb,0x7d53a000,
    0x2e1f3000,0x00f90007,0x4f81b600,0x3ee7f000,0x405f3001,0x260002f9,
    0x03f5001f,0x0001fff3,0x1ea0017a,0x3600075c,0x3f500007,0x7d400000,
    0x5f200000,0x4be2006c,0x7e8000f9,0x04f98000,0x3e6001be,0x22005f31,
    0x00be602f,0x5001f980,0x07ff703f,0x000be200,0x017c4136,0x00007f30,
    0x000007ea,0x00000fb8,0x1003e576,0x40017c5f,0xfe80007f,0x2001fe00,
    0x4013e0fb,0x0be601f9,0x001f9800,0x0dfd03f5,0x0007dc00,0x007b00f4,
    0x500003ec,0x4000003f,0x2200006d,0x2003f54f,0x001b60fa,0xb8000ff9,
    0x01ffc03f,0x07c8dd10,0x7cc01f70,0x07e60002,0x3e20fd40,0x1b60002f,
    0x5d01ec00,0x000fe600,0x0001fa80,0x0c09f500,0x7c43f600,0x546e8805,
    0xfff3003f,0x02fdc000,0xc800fffc,0x2027c41f,0x17cc04f8,0x003f3000,
    0x00fa07ea,0x0003f880,0x003ea0d7,0x200003ec,0x800001fa,0xdf300ef9,
    0x42fc8805,0x3f6204fa,0x5404fa81,0x88007cdf,0xcf800dfd,0x1fe402fd,
    0x3f602fc8,0x0017cc00,0x2a003f30,0xa800001f,0x33a0000f,0x2a60faa1,
    0xaadfbaaa,0x1fa80000,0xaaaa8800,0x400efeca,0x889bdfea,0xf903ffb9,
    0x3fee615d,0x42bbee02,0x9f94fca8,0xb9855479,0x65c03ffc,0x139fb3fc,
    0xb00ffaa6,0xfd51139f,0xfb999505,0x7999999b,0x337f72a0,0x9bfb9702,
    0x2dc00005,0x3bf62000,0xffff03ff,0x0bffffff,0x33332e20,0xccccdfdc,
    0xfff700bc,0x8007dfff,0xffffffeb,0x7ff4c01e,0xa800efff,0x3efffffd,
    0xfc9bfff2,0x01ceffff,0x323fffe8,0x1effffff,0xffffb700,0x3fffa03f,
    0xffffffff,0xfffe80ef,0xfffd06ff,0x00000bff,0x2aa60000,0x26666200,
    0x20019999,0xfffffffa,0xffffffff,0x06666201,0x55dcc000,0x55d4c000,
    0x15950000,0x03751000,0x32a20000,0x5710000a,0x00000003,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00091000,0x99999900,0x09999999,0x00333300,0x26666200,0x02000019,
    0x13310000,0x00054400,0x0166edc4,0x44000100,0x00800009,0x00044000,
    0x99999991,0xccccc981,0x003ea04c,0xeeed8800,0xeeeefeee,0x077faa0d,
    0x003ffff5,0xfffffd00,0x2e20001f,0x00cefffd,0x037ff400,0x003ff6a2,
    0xfefffe88,0xed9801ef,0x170cefff,0xffffdb88,0x32a000df,0x2a2ceffe,
    0xffeb9802,0x98550cef,0x0eeeefee,0x77ff7754,0x001f500d,0x0fe20000,
    0x86ffff88,0x0001fca9,0xfcaaaa88,0xeff98000,0x03ffecac,0x0dd7f500,
    0xfddffb71,0x33fa2001,0x9017f541,0xfb7579ff,0x7fe47f5f,0xffcbaace,
    0x677fdc02,0xd8dfecba,0x37ffea05,0xdbfffdbb,0x8007f106,0x00fa807c,
    0x7f100000,0x7ffffd40,0x0003f500,0x0003ea00,0x3a201df7,0xb5e8004f,
    0x237df90d,0xff8800fa,0x5c07f400,0xffb100cf,0xd300f7c7,0x037f603f,
    0x905effb8,0x7e4c03df,0x007f106f,0x0fa807c8,0xf1000000,0x7fffc407,
    0x0007ea06,0x0007d400,0x3f600bf7,0x6c7ee003,0x0fa80886,0x8802fb80,
    0x8027cc4f,0x2013e3fe,0x03fb86f8,0xf70bfd10,0x837d400b,0x3e4003f8,
    0x00007d40,0x403f8800,0x2a01dfd9,0x5000001f,0x17e2001f,0x1001fb00,
    0x50036c9f,0x00bd001f,0x003ee3e4,0x007d1fd4,0x06f983ee,0x3e22fcc0,
    0x106e8006,0x87c8007f,0xfffffff8,0x3fffffff,0x03f88000,0x007ea000,
    0x007d4000,0x4c001fc8,0x20fd804f,0x03ea006d,0xfb8002e0,0x7f001b60,
    0x45f30004,0x5e8001fc,0x5c000fdc,0x8007f104,0xfb99707c,0x9999999b,
    0xf1000037,0x7d400007,0xf5000001,0x009f1001,0x7f301f60,0x3ea006d8,
    0xfb800000,0x03001f20,0x9d17c400,0xbb0aa000,0x7f100000,0xa807c800,
    0x0000000f,0x400007f1,0xfffe81fa,0x3ea006ff,0x000fa800,0x37401f30,
    0x1f50036c,0x8db00000,0x000001fb,0x07e21f70,0x003f8000,0x003f8800,
    0x07d403e4,0xf8800000,0x3ea00003,0xccffda81,0x003ea002,0x5f0001f2,
    0x1b60bea0,0x0000fa80,0x3a217d40,0x4000001f,0x003ea5e8,0x000fcc00,
    0x001fc400,0x03ea01f2,0x7c400000,0x3ea00003,0x000efa81,0xdb001f50,
    0x884e8000,0x400db05f,0x200000fa,0xbfd105f9,0xb8000015,0x001f21ff,
    0x00007b80,0xc8007f10,0x000fa807,0x07f10000,0x20fd4000,0x20000dfb,
    0x04e800fa,0x7e436c00,0x5400db01,0xf100000f,0xffea801d,0x50002cdf,
    0x06c81bfd,0x001f2000,0x001fc400,0x03ea01f2,0x1000d400,0x0153007f,
    0x13f21fa8,0x003ea000,0xd900013e,0x1b604f88,0x0000fa80,0x2000ee88,
    0x3fffdca8,0x05dff300,0xc80001b2,0xf1000007,0x807c8007,0xbd0000fa,
    0x201fc400,0x2a03fffd,0x003fd89f,0xb001f500,0x45d8000b,0x01b600fd,
    0x40000fa8,0x80000ee8,0xfb804fc9,0x0003e402,0x99700f90,0x81999999,
    0x3e4003f8,0x80007d40,0x0fe2005e,0x07ffff98,0x00ffabea,0x800fa800,
    0x1fc0006c,0x06d807f3,0x80003ea0,0x00000ef9,0x3ee027dc,0x0007dc00,
    0x7400fb80,0xffffffff,0x2001fc41,0x00fa807c,0x4400bd00,0x3ffe603f,
    0xdff500ff,0x200001dd,0x07b800fa,0x6e87e200,0x2a006d80,0xdf30000f,
    0x36000001,0x5403cc06,0xf300001f,0x81b60003,0x0374004f,0xe80007d4,
    0x007ea005,0x5409fffd,0x00ef88ef,0x800fa800,0xf70002fa,0xfffffff8,
    0x0fffffff,0x40007d40,0x18800ef9,0x000fa800,0x0003f880,0x20005f10,
    0x8017206d,0x0fa804f8,0x400bd000,0x1ca800fc,0xdf10fd40,0x0fa80001,
    0x2000dd00,0x5555546f,0xafeaaaaa,0x000fa802,0xb80077d4,0x01f98007,
    0x001f9000,0x40017e00,0x003ea06d,0x7cc01fd4,0x01dd0003,0x0000bf10,
    0x77cc1fa8,0x03ea0000,0x2001fcc0,0xdb0002fb,0x0007d400,0x64001df5,
    0x07dc001f,0x05f88000,0x3ea1d880,0x206d8003,0xee8805f8,0x200df000,
    0x80bfea4a,0x00000fe8,0x77cc0fd4,0x01f50000,0xa800fec0,0x1b60005f,
    0x7000fa80,0xbf9000bf,0x2037c400,0x7f700099,0x207fcc00,0x36c000fd,
    0xe880fee0,0x3bee002f,0xff95311b,0x0adfe88b,0x0005fd73,0x2603f500,
    0xfa8000ef,0x0ffa2000,0x0001df50,0x1f50036c,0x400bf700,0x2013ff20,
    0x3fa01fe8,0xbf7003ff,0x81efa801,0x36003ff8,0x0aefb806,0x0007fd73,
    0xfffffff7,0x7fdc05bf,0x000dffff,0x403f5000,0x54000ef9,0xdfd8000f,
    0x1dfb710a,0x006d8000,0x9f7003ea,0xfc87cc00,0x2621bffa,0x3e602ffb,
    0x32007fff,0xb730abff,0x7e4401bf,0x326209be,0xfd7005ff,0x003dffff,
    0x09bcba80,0x0d65cc00,0x65c40000,0xfd7101fd,0x32e2399d,0xcdfdcccc,
    0x200bcccc,0xfffffffb,0x99930003,0x664c79fd,0xcccfdccc,0x99fd0bcc,
    0x99999999,0x456a3fb9,0xfffffffd,0x7ffc400d,0x7ecc004f,0x03efffff,
    0x3ffffaa0,0x001cffff,0x001aca88,0x00000000,0x7fcc0000,0xfff301ff,
    0x3fea7fff,0xffffffff,0x801fffff,0x0002bca8,0x7fffffdc,0xfffff70e,
    0xffffffff,0x3fffffa5,0xffffffff,0x32e6201f,0x2e2000ab,0x2620002c,
    0x40000acb,0x009abca9,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0xccccc880,0x1bcccccc,0x99999500,0x66644099,0x9911cccc,0x20399999,
    0x3cccccca,0x33333326,0xcccccccc,0x666644cc,0x6665c003,0x26666644,
    0x59999910,0x66666644,0xcccc984c,0x6666643c,0x33332204,0x9999952c,
    0x99999999,0xcccccc83,0x66666440,0x666664c4,0x0abccccc,0x33333260,
    0x4ccccccc,0x3bbfbba2,0xdfffeeee,0x77f75c00,0x3ba605ee,0xb11eefee,
    0x05ddddff,0x3bfbbbae,0x3bbbbea5,0xeeeefeee,0xdb10feee,0x22001fff,
    0x360defff,0x2605eefe,0x224effee,0xdeeefeee,0x77ff7540,0x2f7ff6c4,
    0x9dffdd30,0x3bbbbbae,0x2eeeeeef,0x3bbbfb62,0x77f774c1,0x3fbbaa0d,
    0xffeeeeee,0xdddf503f,0xdddddddd,0x405f301f,0x9801ffb8,0x0f90002f,
    0xf30003e4,0xf501fa85,0xf303ee01,0x3f2009f7,0x0df100fb,0x2602fc40,
    0x09f9002f,0xf3000fd8,0x003ea007,0xf5002f98,0x4c07c803,0x01fa86fd,
    0x0be60fb0,0x2003ba20,0x09f0005e,0xf30003dc,0xf501fa83,0xf303ee01,
    0x9f100f95,0x27d401f5,0x4c00ee80,0x03fd802f,0xdd005f88,0x0007d400,
    0x3ea005f3,0xa803e401,0x400fd44f,0x05f302fb,0x2e013e60,0x0fd4000f,
    0x20001f50,0x80fd40fa,0x81f700fa,0x403f8af9,0x400fa8fb,0x0fec02fb,
    0xb1017cc0,0x17dc005f,0xa8007f20,0x0be6000f,0x3200fd40,0xa83f2007,
    0x02fcc01f,0x2ec005f3,0x2001fc40,0x80fcc06d,0x50f703ed,0x403ea03f,
    0xd97cc0fb,0x0faaf406,0xf700fd80,0x40be6007,0xd8001fe8,0x009f300f,
    0x26000fa8,0x03f5002f,0x3e2007c8,0xdd007ea2,0x0017cc01,0x01b200db,
    0x7c403f88,0x906ff982,0x2a03f50d,0x981f700f,0x2a05f52f,0x1001f51f,
    0x05f981dd,0x3a20be60,0x9f10001f,0x2a001ba0,0x0be6000f,0x3200fd40,
    0xf327c007,0x200fe401,0x7f1002f9,0x400be600,0x83f800fb,0x5d81fbfb,
    0x1f500f98,0x8be61ea0,0x7d4db05e,0x44bf3000,0x3e6000ee,0x00077cc2,
    0x3f70bee0,0x001f5000,0xfa8017cc,0x1003e401,0x3e60287f,0x002f9804,
    0x2f4001f9,0x9f005e80,0xd07f1dd0,0x0fa80609,0xb8be6020,0xf51fc40f,
    0xd9fdc001,0x17cc001f,0x00001df5,0x027c43ba,0x2000fa80,0x3f5002f9,
    0x2e007c80,0x0df1001f,0xd100be60,0x0fb8009f,0xe8017cc0,0x85e9fc45,
    0x0fa8004f,0x3e17cc00,0x03ea3e44,0x05fbfb00,0x3ee5f300,0x2600000f,
    0x0001db4f,0xf98003ea,0x803f5002,0x0df5007c,0x98007ec0,0xca9999bf,
    0x88003ffe,0x003e403f,0xf71fa8bb,0xf50007f0,0x42f98001,0xa89f10fb,
    0x4fe8000f,0xf95f3000,0x00005ffd,0x0017efdc,0x4c001f50,0xffffffff,
    0x401fffff,0x0efb807c,0x4007f500,0xfffffff9,0x20000bff,0x013e206d,
    0xf33e46c8,0x40017c45,0x7cc000fa,0x0fb9fc42,0x220007d4,0xf30005ff,
    0x37f229fd,0xbfd00000,0x00fa8000,0x33337e60,0xfdcccccc,0x5557e401,
    0x0dffecaa,0x800bf100,0xbaaaacf9,0x540001ff,0x003f501f,0x9f17a3dc,
    0x54000fcc,0x17cc000f,0xfa85eb6c,0x7dfec000,0x3ff98004,0x00005fa8,
    0xa80003f5,0x0be6000f,0x3200fd40,0xefffffff,0x07f4001d,0x4c0be600,
    0x7c0002fe,0xa800dd04,0x6d87f30f,0x2a0003ea,0x17cc000f,0x540fefcc,
    0x4bf2000f,0x7cc002fc,0x000bea03,0x00007ea0,0x7cc001f5,0x803f5002,
    0x009999fc,0x000bee00,0xfd880be6,0x21f20002,0x7cc003f8,0x0fa81f71,
    0x3ea000f7,0x817cc000,0x01f506fd,0x1fd13ea0,0x2017cc00,0x540000fd,
    0x7d40001f,0x00be6000,0x1f200fd4,0x04f98000,0x017cc2dc,0x980007ec,
    0x0007e42f,0x4436cbe2,0x2000f93f,0x7cc000fa,0x2a035302,0x85f8800f,
    0x3e6006f8,0x002fc402,0x00007ea0,0x7cc001f5,0x803f5002,0xd100007c,
    0xf30f900d,0x00df1005,0x017e2f40,0xd04f9fc0,0x54001b6b,0x17cc000f,
    0x800fa800,0x09f300fe,0x2e00be60,0x3ea0000f,0x07d40001,0x2005f300,
    0x03e401fa,0x801fd800,0x002f987c,0x2a0007f5,0x0003f50f,0x5c0be6fe,
    0x2a000bd7,0x17cc000f,0x400fa800,0x17dc01fc,0x44017cc0,0x3ea0004f,
    0x07d40001,0x2005f300,0x03e401fa,0x801fd400,0x002f987c,0x220003f6,
    0x4000db4f,0x3e607cce,0xf50004ea,0x02f98001,0x5401f500,0x03fb003f,
    0xfb002f98,0x00fd4000,0x8003ea00,0x3f5002f9,0x40007c80,0x1f2005f8,
    0xf8800be6,0xf1f90005,0x76ec0007,0x01fe7c05,0x4000fa80,0xf50002f9,
    0x8017e201,0x3e600ee8,0x005f3002,0x00007ea0,0x7cc001f5,0x803f5002,
    0x7ec0007c,0x5c5f2000,0x03ccdfdc,0x000bcfb8,0x0003fbe6,0x6c03ffc8,
    0xcb8802ff,0xccccfdcc,0x9bfb7103,0xdccb8079,0xfd910bdf,0x3260179b,
    0x710befdc,0x0799bfb9,0x101ccee8,0x9bfb9997,0x33260799,0xccdfdccc,
    0x372a0bcc,0x5c40bcdf,0x262cdfdc,0xccccfecc,0xcef800bc,0xcccccccc,
    0xfff37ecc,0x001dffff,0xe8005ffd,0x7dc0005f,0x0ffd401f,0x7ffffd40,
    0x80efffff,0xfffffffa,0xfffff100,0x3ffea5ff,0xff702fff,0x3e63ffff,
    0x0fffffff,0x413ffee0,0xfffffff9,0xfb80ffff,0xffffffff,0x3fa2ffff,
    0x4c1fffff,0x26ffffff,0xfffffffb,0xff801fff,0xffffffff,0x0007ffff,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0xccb80000,0xcccccccc,0x0ccccccc,0x99999991,0x99999999,
    0xccccb899,0x01bccccc,0xcccccc88,0x0abccccc,0x33333200,0xb8003ccc,
    0x2200cccc,0x0ccccccc,0x99999993,0x20001999,0x03acefd9,0x26288000,
    0x40000000,0xba980001,0x999801ab,0xffeed809,0xeeeeeeee,0xd10feeee,
    0xdddddfdd,0xfddddddd,0xeeeffed8,0x03fffeee,0x3bbfbba2,0xfffeeeee,
    0xeeed8802,0x000feffe,0x027ff76c,0xddfdddd3,0x3fbbbaa1,0x001eeeef,
    0xffddffb8,0x7dc00006,0x0019fd0f,0x01f50000,0x3fffea00,0x83d1efff,
    0x7405ffff,0x407dc004,0x1ee002f9,0xfb51036c,0x803f300b,0xb0003fd9,
    0x40007f1d,0xf7001fff,0x00017a00,0x038837e6,0x3bfaa000,0x00fff221,
    0x01f50000,0x1adfd880,0x0ff7faa6,0xe809fffd,0x407dc004,0x1ee002f9,
    0x5fb8036c,0xd800fcc0,0x9fc4001f,0x33e0006d,0x00f7006e,0x3600017a,
    0x3000000f,0x6cc05dfb,0x000002ef,0xfd8001f5,0x43ffb802,0x7403fffd,
    0x407dc004,0x1ee002f9,0x3f70036c,0x9800fcc0,0x87dc005f,0x7f0001fa,
    0x0f7007f5,0x200017a0,0x8800005e,0x2a003ffc,0x00001dfe,0xf50007d4,
    0x21fe4005,0x7402fffc,0x407d4004,0x1ee002f9,0x1ba0036c,0x36001f98,
    0x3e2f4006,0x367f0004,0x803dc00f,0x6d80005e,0x7fdc0000,0xff70000c,
    0x2a000019,0x0bf1000f,0x7dc2f880,0x027401ff,0x17cc1220,0x1b607300,
    0x2607f300,0x01b6001f,0x03e42f98,0x09f13f80,0x0bd007b8,0x003f7000,
    0x01bff500,0x9ff91000,0x01f50000,0x20007ea0,0x07ffd40b,0x01dc13a0,
    0x0ec0be60,0xd000db00,0x4007e60b,0x1f2003f8,0x3e000be6,0x7b807f23,
    0x0000bd00,0xe980017a,0x800001ef,0x0002ffc8,0x3dc003ea,0xfff30000,
    0x17609d00,0xf105f300,0x0036c007,0x01f98364,0x2000fe88,0x000bd04f,
    0x2e05e87f,0x000bd007,0x30007e60,0x00005dfb,0x05dfb300,0x2001f500,
    0x7c00006d,0xb04e806f,0x82f9800b,0x1b6003f8,0x7cc1ee00,0x3df95301,
    0xb80fd400,0x21fc000f,0x00f702fa,0x2200017a,0xf91006fd,0x0000007f,
    0x443bfd50,0xdccccccb,0xccccccdf,0x00001763,0xffd00bff,0x00bfffff,
    0xffffff98,0x1b6003ff,0x2603ea00,0xffffffff,0x6c002fff,0x000fe206,
    0x701fb07f,0x0017a00f,0x07f7ff50,0x37fee595,0x00000000,0x7f449ff7,
    0xffffffff,0x26ffffff,0x6c00007c,0xccee803f,0x4005fccc,0xcccccdf9,
    0x01b6003f,0x3e603ea0,0xdccccccd,0x8800dffe,0x0036c03f,0x213e60fe,
    0x00bd007b,0xfc867cc0,0xf912ffc0,0x0000007f,0x0006ff54,0x7d4003ea,
    0x36600000,0xbb04e800,0x882f9800,0x01b6003f,0x3e603ea0,0x01df7001,
    0x7d400fb8,0x640fe001,0xe803dc0f,0x11f20005,0x8817d4bd,0x00002efd,
    0x007bfa60,0x88007d40,0x0000004f,0x017609d0,0x0be05f30,0xc8006d80,
    0x4003f306,0x77f405f9,0xeeeeeeee,0x40fe004f,0x803dc5f8,0xf872005e,
    0x1fb2fa84,0x01efe980,0x3bf62000,0x07d40002,0x8003f900,0x3a0001fb,
    0x98001104,0xd800302f,0x304e8006,0x0fb8003f,0xdddddf30,0x0fdddddd,
    0x5f501fc0,0x05e803dc,0x817cd3e0,0x2005f8fd,0x0000dfea,0x000fff22,
    0x20007d40,0xfe9802fe,0x02740006,0x005f3000,0x006d85c8,0x1f9817c4,
    0xb817c400,0x00be6007,0xb9ba01fc,0x400bd007,0x2209f14f,0xb8001fff,
    0x5c000cff,0x00000cff,0xd10003ea,0x654c35bf,0xe80004ff,0x3e600004,
    0x6c36c002,0x80fe4006,0x7c4001f9,0xe8009d03,0x9807f005,0x3a00f73f,
    0x7f93e005,0x80017ee0,0xa803ffc8,0x00000dfe,0x70000fa8,0xffffffff,
    0x3a000019,0x3e600004,0x6c36c002,0x817ea006,0x7d4001f9,0x4001f981,
    0x03f800fb,0x007b8fc8,0x727c00bd,0x0dfd107f,0x5dfb1000,0x003dfd30,
    0x007d4000,0x2af2a600,0x74000009,0x3e600004,0x6c36c002,0x01ff3006,
    0xd1000fcc,0x2001b20f,0x03f803f8,0x007bdf88,0x227c00bd,0x7fd51dfe,
    0x800059bf,0x3ff25fe9,0xa8000002,0x0000000f,0x009d0000,0x0017cc00,
    0x301b61b6,0xf9801df9,0x03fd1001,0x36c000fe,0xfb801fc0,0x00bd007e,
    0x7ffe427c,0x0bff71ff,0x3c96a000,0x22000000,0x00000004,0x77e65400,
    0x002ccccc,0x99bfb971,0x99999999,0x7f654dd9,0xfecccccc,0xb97100df,
    0x999999bf,0x983ffd99,0x03ccdfdc,0x33f732e2,0x3bf2e20b,0x3fa00bcc,
    0xfcccc887,0xccccccce,0x7304fccc,0x00000037,0x00000000,0x00000000,
    0x3ffffa00,0x005fffff,0xfffffff3,0xffffffff,0x7fff4dff,0xadffffff,
    0x7fffcc00,0xffffffff,0xffb80adf,0x300effff,0x5fffffff,0x7fffffcc,
    0x21fe601f,0xfffffffa,0xffffffff,0x000004ff,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x51000000,0x30001577,0x00155975,0x4c000000,
    0x00001acb,0x654c0000,0x800001ac,0x000001a8,0x20000000,0x0000abb9,
    0x2a200000,0x00ba881b,0x01999970,0xfffffd30,0xfd3005ff,0x59ffffff,
    0x7ffffecd,0x7fffdc01,0x3fff203f,0x2203ffff,0xf102ffff,0x5403ffff,
    0xfffffffd,0x7ffec01e,0x7ffecc3f,0x3fffe62e,0xffffffff,0xfffffb1f,
    0xffff10df,0x3fea7fff,0xfffff52f,0x7fc401bf,0xff886fff,0x3fee6fff,
    0x5ffffb9f,0x013fffee,0x2017fffe,0x2a61befc,0xff500dfe,0x7fe4c437,
    0x79bf930f,0xfecb8801,0xacfe981c,0x01bfb510,0xb80bf72e,0xf501fdcc,
    0x7544359d,0x3332601f,0x273ff23f,0x9bf31fd9,0xb9999999,0x3f3261df,
    0x99702cce,0x2e2379fd,0x0adfcafd,0x5c01df71,0x9702cdfe,0x6dc45dfd,
    0xfc89dfef,0xfc89cfcb,0x3fffe601,0x4027e401,0x01ff05fb,0x27c0ff98,
    0xf105e800,0x06fa803d,0xf98017c4,0x3e200201,0x362fe007,0x3e63904f,
    0xd01fe802,0x027c400d,0x5407fff3,0x0ff4403f,0xf9817ea0,0x84ffd85f,
    0x3fff205e,0x0027cc05,0x02f985f5,0x06d81fb0,0x3fa07f00,0x409f3000,
    0x3f3002f8,0x03f70000,0x00bfb3e0,0x3f600fcc,0x4007ea01,0x3fe601fb,
    0x8806e803,0x0bf501fe,0xbf506f98,0x7f403ee0,0x037400ff,0xbf107e40,
    0x1ee12200,0x0fcc1fec,0x320017dc,0x005f101f,0x200007e6,0xfff003f8,
    0x64048003,0x005f802f,0x04f980bd,0xd1001f70,0x805fa83f,0x03f301f9,
    0x3fe203ea,0x017cc04f,0x3f617cc0,0x07e60003,0x03ee1bfe,0x27c0017a,
    0xf3002f88,0x7f100003,0x0003be00,0x2007f700,0x17d400fb,0x5400be60,
    0x3fb1001f,0x7cc013ee,0x2a03f301,0x0fffa80f,0x4cccfd40,0x99999999,
    0xffd83f99,0x8800abcd,0x07e7d43f,0x001fc1b2,0x05f105d8,0x71007e60,
    0x79bdddd9,0x00fe007f,0x009f5000,0x1b6027c4,0x5400be60,0x67ec001f,
    0x07e6004f,0x0fa80fcc,0xc803ffc8,0xffffffff,0xffffffff,0xfffd9304,
    0x2f4019ff,0x9d0fe3b6,0x20005f30,0x005f107c,0x7e4407e6,0xfeecdeff,
    0x07f003ff,0x02fcc000,0x7f103e40,0x2005f300,0xfe8001fa,0x80fcc005,
    0x01f501f9,0xf7001fff,0x55555557,0x55555555,0x77ed4c00,0xb4f8d902,
    0x7cc17c4d,0x20f90002,0x3f3002f8,0x30077fa0,0x00fe007f,0x002fcc00,
    0x1f903f98,0x2005f300,0x7e4001fa,0x3e6002fe,0x2a03f301,0x01ffcc0f,
    0x00001f98,0x81fd8800,0x2a3f50fa,0x3e03f30f,0x20db0003,0x3f3002f8,
    0x22005f90,0x007f003f,0x001dd100,0x27c436c0,0x5002f980,0x9fe4003f,
    0x3f3002fd,0x7d407e60,0x10037d40,0x0200009f,0x3e613a00,0xb9fc4db2,
    0x40017a07,0x005f104f,0x013e07e6,0x7f003f88,0x0ee88000,0x217d4000,
    0x5f3000fb,0x4007ea00,0x01fe43fc,0x1f980fcc,0x00701f50,0x80001f90,
    0x36c002f8,0x6d87f4f8,0x00fdc0bb,0x7c407ee0,0x983f5002,0x0fe6001f,
    0x20001fc0,0x00dc01fd,0x8017a2f4,0x3f5002f9,0x3207fb00,0x80fcc03f,
    0x01f501f9,0x01ba2000,0x02fc4220,0x56ec17a0,0x27cfd41f,0x4c003ba0,
    0x402fc04f,0x27c41ffb,0x003ffa80,0x7ec0007f,0xb804e801,0x4003f51f,
    0x3f5002f9,0x6402fd80,0x407e603f,0x01f501f9,0x0efcc000,0xf8afe440,
    0x05f9003f,0x3e21b7ee,0x77cc02fd,0x4037d401,0x3ff600fd,0x400fe81f,
    0xf003fffc,0x0bf20007,0x4f8027c0,0x2f9800db,0x6c03f500,0x09f7002f,
    0x0fcc07e6,0x00000fa8,0x304e7f4c,0x2219ff95,0x209aefff,0x2603feb9,
    0x1ffb03ff,0x139fd300,0x0037f6a2,0x2a22fbe6,0xcdf9bfec,0x446fbe60,
    0xdf8cfeca,0x999930bc,0x999999df,0x99df5017,0x99999999,0x33f2009f,
    0xfb95002f,0x3726079b,0x3fae0cdf,0x99702cce,0x37225bff,0x6fcc1cdf,
    0x05e7d40c,0x3ff20000,0x1dffffff,0xfffea9e8,0x402effff,0xdf501ff8,
    0xffffc800,0x54003fff,0x0effffff,0xea85fff3,0x1effffff,0x325ffff1,
    0xffffffff,0xc81fffff,0xffffffff,0x004fffff,0x6c00fff1,0x706fffff,
    0x745fffff,0xd05fffff,0x2abfffff,0x4c3fffff,0x7fd42fff,0x3000002f,
    0x80015795,0x01abcba9,0x10000000,0x00035973,0x004de544,0x01bcba80,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00040000,0x776c00a0,0x2777744e,0x55555555,0x55555555,0x400a6355,
    0x30001bb8,0x11111017,0x11111111,0x11111111,0x777775c1,0xeeeeeeee,
    0x000001ee,0x00000000,0x00000000,0x80000000,0x3f20006c,0x4fffe802,
    0xff27fffc,0xffffffff,0xffffffff,0xf5013eed,0x41807fff,0x3ea3fffd,
    0xffffffff,0xffffffff,0xf70fffff,0xffffffff,0x03ffffff,0x00000000,
    0x00000000,0x00000000,0x00d90000,0x003ffea0,0xfd87fffb,0x4cccc3ff,
    0x99999999,0x7e419999,0x911bf705,0x4c7ee0bf,0x2a27ffff,0xaaaaaaaa,
    0xaaaaaaaa,0x2a61aaaa,0xaaaaaaaa,0x00aaaaaa,0x00000000,0x00000000,
    0x00000000,0x006c8000,0x0ef8df98,0x90bfff20,0x00005fff,0x4c1bf700,
    0x20dfb84f,0x3ffe64fb,0x000000ff,0x00000000,0x00000000,0x00000000,
    0x00000000,0x20036400,0x0bf30ee8,0x2e0fffdc,0x00000fff,0x261df500,
    0x3b3fe603,0x4fffe84f,0x00000000,0x00000000,0x00000000,0x00000000,
    0x2e000000,0x2a23640b,0xfb83fb04,0x81fff303,0x00007ffa,0x00174c00,
    0x5405bd91,0x0000001b,0x00000000,0x00000000,0x00000000,0x00000000,
    0x645f7fec,0x0effda8e,0x2fc817dc,0xf987ff88,0x77776c6f,0xeeeeeeee,
    0x004eeeee,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0xeb880000,0xcfffffff,0x7404fa81,0x886ff80f,0x666645ff,0xcccccccc,
    0x03cccccc,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x44000000,0x2201dffc,0x86f8806f,0x09ff04fe,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x77ec0000,0x003f200f,
    0x0bf217cc,0x000017e4,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x05f9afb8,0x81100022,0x000a2028,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0xf72fcc00,
    0x00000007,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x22000000,0x00fec0ee,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x40fdc000,0x000005e8,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x80000000,0x00022018,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
};

static signed short stb__courier_43_usascii_x[95]={ 0,9,4,3,4,3,4,8,11,5,0,2,5,3,
8,4,4,4,3,3,3,3,5,3,4,5,8,5,0,1,0,0,3,0,1,2,2,1,2,2,1,4,3,1,
2,0,0,0,3,1,1,3,2,1,0,0,1,1,3,0,0,0,4,1,8,2,0,3,2,2,3,2,1,3,
3,3,3,0,2,2,0,2,3,3,2,1,1,1,1,2,4,0,10,0,3, };
static signed short stb__courier_43_usascii_y[95]={ 31,7,8,6,5,7,11,7,7,7,7,10,25,19,
26,5,7,7,7,7,7,7,7,7,7,7,14,14,10,16,10,8,6,9,9,8,9,9,9,8,9,9,9,9,
9,9,9,8,9,8,9,8,9,9,9,9,9,9,9,7,5,7,7,39,6,14,7,14,7,14,7,14,7,6,
6,7,7,14,14,14,14,14,14,14,9,14,14,14,14,14,14,7,7,7,17, };
static unsigned short stb__courier_43_usascii_w[95]={ 0,5,14,17,15,17,15,6,7,7,15,19,9,17,
7,15,15,15,16,16,16,16,15,16,15,15,7,10,19,20,19,14,16,23,20,19,20,19,20,20,21,15,20,21,
19,23,22,19,18,20,22,17,19,21,23,23,21,20,16,7,15,7,15,24,7,19,21,18,21,18,18,20,20,17,
13,19,17,23,19,19,21,21,18,16,19,20,21,21,20,20,15,8,3,8,17, };
static unsigned short stb__courier_43_usascii_h[95]={ 0,25,11,28,30,25,21,12,29,29,15,20,12,3,
6,30,25,24,24,25,24,25,25,25,25,25,18,21,20,8,20,24,28,22,22,24,22,22,22,24,22,22,23,22,
22,22,22,24,22,28,22,24,22,23,22,22,22,22,22,29,30,29,11,3,7,18,25,18,25,18,24,25,24,25,
33,24,24,17,17,18,25,25,17,18,23,18,17,18,17,25,17,29,29,29,6, };
static unsigned short stb__courier_43_usascii_s[95]={ 173,234,33,117,31,18,151,246,101,109,1,
207,242,128,95,15,240,76,92,96,59,217,189,1,113,151,246,245,167,48,187,
127,135,84,63,142,42,22,1,162,197,181,225,138,131,92,108,39,219,152,1,
109,72,183,24,48,116,160,238,80,47,72,17,103,69,100,167,227,129,1,205,
75,224,57,1,1,21,218,177,59,195,173,120,20,205,79,155,37,197,36,139,
63,97,88,77, };
static unsigned short stb__courier_43_usascii_t[95]={ 27,1,151,1,1,35,109,109,1,1,151,
109,132,151,151,1,1,61,61,35,61,1,35,35,35,35,60,35,109,151,109,
61,1,109,109,61,109,109,109,61,86,86,60,86,109,86,109,61,86,1,86,
61,86,61,86,86,86,86,86,1,1,1,151,151,151,132,35,109,35,132,35,
35,35,35,1,61,61,132,132,132,1,1,132,132,60,132,132,132,132,35,132,
1,1,1,151, };
static unsigned short stb__courier_43_usascii_a[95]={ 364,364,364,364,364,364,364,364,
364,364,364,364,364,364,364,364,364,364,364,364,364,364,364,364,
364,364,364,364,364,364,364,364,364,364,364,364,364,364,364,364,
364,364,364,364,364,364,364,364,364,364,364,364,364,364,364,364,
364,364,364,364,364,364,364,364,364,364,364,364,364,364,364,364,
364,364,364,364,364,364,364,364,364,364,364,364,364,364,364,364,
364,364,364,364,364,364,364, };

// Call this function with
//    font: NULL or array length
//    data: NULL or specified size
//    height: STB_FONT_courier_43_usascii_BITMAP_HEIGHT or STB_FONT_courier_43_usascii_BITMAP_HEIGHT_POW2
//    return value: spacing between lines
static void stb_font_courier_43_usascii(stb_fontchar font[STB_FONT_courier_43_usascii_NUM_CHARS],
                unsigned char data[STB_FONT_courier_43_usascii_BITMAP_HEIGHT][STB_FONT_courier_43_usascii_BITMAP_WIDTH],
                int height)
{
    int i,j;
    if (data != 0) {
        unsigned int *bits = stb__courier_43_usascii_pixels;
        unsigned int bitpack = *bits++, numbits = 32;
        for (i=0; i < STB_FONT_courier_43_usascii_BITMAP_WIDTH*height; ++i)
            data[0][i] = 0;  // zero entire bitmap
        for (j=1; j < STB_FONT_courier_43_usascii_BITMAP_HEIGHT-1; ++j) {
            for (i=1; i < STB_FONT_courier_43_usascii_BITMAP_WIDTH-1; ++i) {
                unsigned int value;
                if (numbits==0) bitpack = *bits++, numbits=32;
                value = bitpack & 1;
                bitpack >>= 1, --numbits;
                if (value) {
                    if (numbits < 3) bitpack = *bits++, numbits = 32;
                    data[j][i] = (bitpack & 7) * 0x20 + 0x1f;
                    bitpack >>= 3, numbits -= 3;
                } else {
                    data[j][i] = 0;
                }
            }
        }
    }

    // build font description
    if (font != 0) {
        float recip_width = 1.0f / STB_FONT_courier_43_usascii_BITMAP_WIDTH;
        float recip_height = 1.0f / height;
        for (i=0; i < STB_FONT_courier_43_usascii_NUM_CHARS; ++i) {
            // pad characters so they bilerp from empty space around each character
            font[i].s0 = (stb__courier_43_usascii_s[i]) * recip_width;
            font[i].t0 = (stb__courier_43_usascii_t[i]) * recip_height;
            font[i].s1 = (stb__courier_43_usascii_s[i] + stb__courier_43_usascii_w[i]) * recip_width;
            font[i].t1 = (stb__courier_43_usascii_t[i] + stb__courier_43_usascii_h[i]) * recip_height;
            font[i].x0 = stb__courier_43_usascii_x[i];
            font[i].y0 = stb__courier_43_usascii_y[i];
            font[i].x1 = stb__courier_43_usascii_x[i] + stb__courier_43_usascii_w[i];
            font[i].y1 = stb__courier_43_usascii_y[i] + stb__courier_43_usascii_h[i];
            font[i].advance_int = (stb__courier_43_usascii_a[i]+8)>>4;
            font[i].s0f = (stb__courier_43_usascii_s[i] - 0.5f) * recip_width;
            font[i].t0f = (stb__courier_43_usascii_t[i] - 0.5f) * recip_height;
            font[i].s1f = (stb__courier_43_usascii_s[i] + stb__courier_43_usascii_w[i] + 0.5f) * recip_width;
            font[i].t1f = (stb__courier_43_usascii_t[i] + stb__courier_43_usascii_h[i] + 0.5f) * recip_height;
            font[i].x0f = stb__courier_43_usascii_x[i] - 0.5f;
            font[i].y0f = stb__courier_43_usascii_y[i] - 0.5f;
            font[i].x1f = stb__courier_43_usascii_x[i] + stb__courier_43_usascii_w[i] + 0.5f;
            font[i].y1f = stb__courier_43_usascii_y[i] + stb__courier_43_usascii_h[i] + 0.5f;
            font[i].advance = stb__courier_43_usascii_a[i]/16.0f;
        }
    }
}

#ifndef STB_SOMEFONT_CREATE
#define STB_SOMEFONT_CREATE              stb_font_courier_43_usascii
#define STB_SOMEFONT_BITMAP_WIDTH        STB_FONT_courier_43_usascii_BITMAP_WIDTH
#define STB_SOMEFONT_BITMAP_HEIGHT       STB_FONT_courier_43_usascii_BITMAP_HEIGHT
#define STB_SOMEFONT_BITMAP_HEIGHT_POW2  STB_FONT_courier_43_usascii_BITMAP_HEIGHT_POW2
#define STB_SOMEFONT_FIRST_CHAR          STB_FONT_courier_43_usascii_FIRST_CHAR
#define STB_SOMEFONT_NUM_CHARS           STB_FONT_courier_43_usascii_NUM_CHARS
#define STB_SOMEFONT_LINE_SPACING        STB_FONT_courier_43_usascii_LINE_SPACING
#endif

