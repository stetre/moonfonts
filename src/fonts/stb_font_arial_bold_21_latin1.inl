// Font generated by stb_font_inl_generator.c (4/1 bpp)
//
// Following instructions show how to use the only included font, whatever it is, in
// a generic way so you can replace it with any other font by changing the include.
// To use multiple fonts, replace STB_SOMEFONT_* below with STB_FONT_arial_bold_21_latin1_*,
// and separately install each font. Note that the CREATE function call has a
// totally different name; it's just 'stb_font_arial_bold_21_latin1'.
//
/* // Example usage:

static stb_fontchar fontdata[STB_SOMEFONT_NUM_CHARS];

static void init(void)
{
    // optionally replace both STB_SOMEFONT_BITMAP_HEIGHT with STB_SOMEFONT_BITMAP_HEIGHT_POW2
    static unsigned char fontpixels[STB_SOMEFONT_BITMAP_HEIGHT][STB_SOMEFONT_BITMAP_WIDTH];
    STB_SOMEFONT_CREATE(fontdata, fontpixels, STB_SOMEFONT_BITMAP_HEIGHT);
    ... create texture ...
    // for best results rendering 1:1 pixels texels, use nearest-neighbor sampling
    // if allowed to scale up, use bilerp
}

// This function positions characters on integer coordinates, and assumes 1:1 texels to pixels
// Appropriate if nearest-neighbor sampling is used
static void draw_string_integer(int x, int y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0, cd->t0); glVertex2i(x + cd->x0, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t0); glVertex2i(x + cd->x1, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t1); glVertex2i(x + cd->x1, y + cd->y1);
        glTexCoord2f(cd->s0, cd->t1); glVertex2i(x + cd->x0, y + cd->y1);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance_int;
    }
    glEnd();
}

// This function positions characters on float coordinates, and doesn't require 1:1 texels to pixels
// Appropriate if bilinear filtering is used
static void draw_string_float(float x, float y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0f, cd->t0f); glVertex2f(x + cd->x0f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t0f); glVertex2f(x + cd->x1f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t1f); glVertex2f(x + cd->x1f, y + cd->y1f);
        glTexCoord2f(cd->s0f, cd->t1f); glVertex2f(x + cd->x0f, y + cd->y1f);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance;
    }
    glEnd();
}
*/

#ifndef STB_FONTCHAR__TYPEDEF
#define STB_FONTCHAR__TYPEDEF
typedef struct
{
    // coordinates if using integer positioning
    float s0,t0,s1,t1;
    signed short x0,y0,x1,y1;
    int   advance_int;
    // coordinates if using floating positioning
    float s0f,t0f,s1f,t1f;
    float x0f,y0f,x1f,y1f;
    float advance;
} stb_fontchar;
#endif

#define STB_FONT_arial_bold_21_latin1_BITMAP_WIDTH         256
#define STB_FONT_arial_bold_21_latin1_BITMAP_HEIGHT        136
#define STB_FONT_arial_bold_21_latin1_BITMAP_HEIGHT_POW2   256

#define STB_FONT_arial_bold_21_latin1_FIRST_CHAR            32
#define STB_FONT_arial_bold_21_latin1_NUM_CHARS            224

#define STB_FONT_arial_bold_21_latin1_LINE_SPACING          14

static unsigned int stb__arial_bold_21_latin1_pixels[]={
    0x40cc8e5c,0x990002a9,0x201c8805,0x059105fe,0x8800ffc8,0x5305512a,
    0x3ff60555,0x00179501,0x002aa155,0x532c9830,0x55510555,0xa9815555,
    0xacca8802,0x99e5c000,0x01bb982c,0x01bcca88,0x80322b88,0x21e5c5ff,
    0xd83ff2fe,0xefb8006f,0xa80fec00,0x403fc06f,0x6fa803fc,0xfff90df5,
    0x1ffbf50d,0x801fff90,0x003ff2fe,0x653ea2e8,0x7fec6fff,0x42ffffff,
    0xfd9106fd,0x05ffffff,0x3eadffd0,0x77ffff44,0xfffff700,0x7fec019f,
    0x17ea07ef,0x1cb83ff1,0x06fd8199,0x4c00ee80,0x0037206f,0x0b9007f9,
    0x13a6bd30,0xb10f3ff2,0x9507d51b,0x1ed807ff,0x3c4003db,0x7f6553ea,
    0x3ffffee6,0x7ec2ffff,0xaceffa86,0x03feb988,0x7d4f7fe6,0x3eaffea4,
    0xefffb83f,0x3604fffd,0x3602db99,0x0002fc85,0x00001bf6,0x0aa63fd8,
    0x1fe6154c,0x8aa60553,0x455302a9,0x8154c5fc,0x04fd82a9,0x015e5d44,
    0x89f516e0,0x3fffa6fb,0x4005fd6f,0xfc801ff9,0xfa8ff503,0x6543ff24,
    0x1177fc42,0x2a201ffd,0x2a602bcb,0xb85ec802,0x363bf65e,0x42f643ef,
    0x07fc45eb,0x1ff20ff9,0x07fc8ffa,0x83fe4ff9,0x917f27fc,0x21ff20ff,
    0x3fee05fd,0x201effff,0x7d45ffeb,0xfff37dc4,0x20bfadff,0x4bfe25ec,
    0x5eabeec8,0x51fea0fb,0x077fcc9f,0xb503ff90,0xffff7017,0xffb03dff,
    0x3fea5eb8,0xffb2ff41,0x549fffff,0x22ff41ff,0x83fe46fa,0x25fc87fc,
    0x4ff907fc,0x4ff907fc,0x83fe45fc,0x05fc87fc,0xffbffff9,0xffe883ff,
    0x13ea6fff,0x7ffe4df7,0xfb05fd6f,0xfe89fd4d,0xf35fffef,0xfa8df703,
    0x0ffffe24,0x640037f4,0xfffdffff,0x323fec1f,0xf327fc7f,0x4effec5f,
    0x3fe1ffd9,0xf70bfe64,0xf907fc8b,0x7e4df70f,0x7e4ff907,0x7e4ff907,
    0xfc83fe45,0xf986fc87,0x3ff222ef,0x7ddffe46,0xb89f53ff,0x3fffe66f,
    0xdfb05fd6,0x649fd3e4,0x320fe4ff,0xfd27d45f,0xf81bfffb,0x7fcc005f,
    0x1bff222e,0x47fc8ffb,0xb1ff27fc,0x27fcc3ff,0x43fe4ff9,0x83fe44fd,
    0x27fa87fc,0x4ff907fc,0x4ff907fc,0x83fe45fc,0x2ff987fc,0xfc80ffe4,
    0x5e57fe2f,0xb85930ab,0xb7fe4c6f,0x26fd82fe,0x4c1ff15e,0xf317e2ff,
    0xf34fa89f,0x83bffa2f,0x7e4005ff,0x45ff901f,0x23fe47fd,0x89fd1ff9,
    0x25ff87fd,0x09fd1ff9,0x07fc87fd,0x3ff30ff9,0x3fe41ff2,0x9ff20ff9,
    0x83fe45fc,0xbffb07fc,0xff1037f4,0x0fcffe29,0x2a0df700,0xfb05fd6f,
    0x27dcfe2d,0x27c43fe6,0xfa81dff7,0x7e45ff54,0x001bfe3f,0x7fc40dfd,
    0xff91ff64,0x3ff39fd0,0x5ff87fd8,0x0ffce7f4,0x1ff21ffc,0x7fcc3fe4,
    0x3f20ff91,0x7e41ff27,0xff917f27,0x7dc1ff20,0xf017fe5f,0x273fe2bf,
    0x837dc007,0xb05fd6fa,0x7ec7eadf,0x5f53fd43,0x7d427fdc,0x643fff14,
    0x4c1ff65f,0x017fe0bd,0x23fecbff,0xcffb87fc,0x20ffd86f,0x7fdc4ff9,
    0x89fb06fc,0x0ff907fc,0x83fe4ff3,0x41ff27fc,0x917f27fc,0x21ff20ff,
    0xff11cff9,0x3a6ff809,0x25974cef,0x837dc1a8,0xb05fd6fa,0x7f4fe6df,
    0x6f8afec3,0x2a1ffdc4,0x4fffee4f,0x0ffee3fc,0x7fc47ff6,0xfb37fc04,
    0xf887fc8f,0xffd83fff,0x42ffc88d,0x903ffff8,0x80ffc89f,0x26fa87fc,
    0x7fc80ffc,0x3f203ff2,0xff917f27,0xf70ff901,0x440bff0d,0x3bff65ff,
    0x9f53ff9a,0xdf506fb8,0x9bf60bfa,0x7d4df75f,0xb02fe8cf,0x5c4fa8bf,
    0x40efefff,0xfc9adffe,0x102ffc4f,0x23fecbff,0xfffb07fc,0xfffffb01,
    0x3ff60bff,0xb8bf700f,0x87fd80ff,0x03fee5fb,0x0ffb9ff6,0x17f27fd8,
    0xffb01ff7,0xffd0bf90,0x88ffea01,0x26fffffe,0x837dc4fa,0xb05fd6fa,
    0xff8becdf,0xffffffee,0xf51bee02,0x5fffd309,0xffffff30,0x0ffe81ff,
    0x7ec7ff50,0xfa83fe47,0xf5dfb05f,0x7fd40bff,0xf71fe605,0xb0ffd05f,
    0x417fdc7f,0x0bfee7fe,0x45fc9ffa,0x7fe82ffb,0xffc85fc8,0x41ffe884,
    0x21ceffe8,0x837dc4fa,0xb05fd6fa,0xc8a7dcdf,0x1cefb8ce,0xa8df7031,
    0x1bfee04f,0x5efffe44,0x884ffc80,0x1ff61ffe,0x3fea0ff9,0x004dfb02,
    0x3a017fd4,0x2fffe61f,0xf84ffc99,0x2fffe60f,0x264ffc99,0xfc99bfff,
    0xf317f24f,0xff9337ff,0x3a09fb09,0xffc9beff,0x2017b04f,0x837dc4fa,
    0xb05fd6fa,0x005fe8bf,0x1fea13f2,0x71e549f5,0x77dc01ff,0x5f7ff402,
    0x6c4fffc9,0xfd53007f,0x8037ec0f,0xa807fea9,0x7fffe44f,0x7d40ffff,
    0xfffffc84,0x7fe40fff,0x20ffffff,0x3f209efc,0x0fffffff,0x4c0ffee2,
    0xffffffff,0x200f880d,0xdf9314fa,0x17f5bea0,0xf88bff73,0xe9881adf,
    0x37ff504f,0xaffb93ea,0x44406fc8,0x3fe600fd,0x0dffffff,0x7c403fec,
    0x3f603fff,0xffff8806,0xd70fd003,0xb01bffff,0x3ffae01f,0xfd700dff,
    0xfc81bfff,0x7ff5c6ff,0x7fe40dff,0x3ff2201f,0x1aa03eff,0x3ff29f50,
    0x3adf506f,0x0ffff22f,0x3bffff22,0x204ffffe,0x9f56fff8,0x3fffffe8,
    0x01baaa60,0x3bffff22,0x200ffb03,0x76403efe,0x07dfd005,0x13017d40,
    0x98027c40,0x7004c000,0x04c0bddd,0x4005bd90,0x80530018,0xbddd74fa,
    0x0e5cf260,0x73007df9,0x017bdfd9,0x3eaddb30,0x0e76d444,0x002f7b20,
    0x00000310,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x2002ff98,0x22005ff9,0x000005fe,
    0x01542e60,0x01a98d4c,0x5510ffec,0x07fc86a2,0x2a001bf6,0xff1001ff,
    0x01ff7007,0x0398dcc0,0x0001ffd0,0x1d400bfd,0x202ffcc0,0x801550a9,
    0x3fd800cb,0x3f7fa200,0x03fa2003,0x400bf700,0x02fefffa,0x09f75fb8,
    0xf537efdc,0x7fb17eeb,0x000bfa20,0x7e4005fd,0x013f2004,0x27f7ffc4,
    0x037efdc0,0x4003bea0,0x3a202fd8,0x3f602fdf,0x7f805fd3,0x4003e880,
    0x00dd8aeb,0xd000f620,0x465c00b2,0xea800cda,0x36207d54,0x53aa7d55,
    0x205d84ea,0x3a6004d8,0x0026c002,0x8d9802e4,0x74400cc9,0x64005d75,
    0xfffb000d,0x15d701df,0x4bb201bb,0x17e602ec,0x05797510,0x0af2ea20,
    0x15e5d440,0x003f9d00,0x4000aaa8,0xa9800aaa,0x26055302,0x2aaaa62a,
    0x2a0aaaaa,0x155300aa,0x2aaaaaa6,0x2aa00aaa,0x02aa600a,0x55500aa2,
    0x0aaa8001,0x7f6ffd40,0x2aaaa65f,0x530aaaaa,0x55555555,0x5c07f701,
    0x1effffff,0x3ffffee0,0x3fee01ef,0x401effff,0x2003fff8,0x2003fff8,
    0xd803fff8,0x20ffb07f,0x3fff27fd,0x22ffffff,0xff885ffa,0x3fffff26,
    0xf102ffff,0x7fe407ff,0x2207fb84,0x22003fff,0x7ec03fff,0x324eaebb,
    0xffffffff,0xfffff92f,0xfb05ffff,0x3ffff203,0xc81ffffd,0xfffdffff,
    0xffffc81f,0x201ffffd,0x2006fffb,0x2006fffb,0xd806fffb,0x20ffb07f,
    0x3bff27fd,0x41eeeeee,0x7fec1ffd,0x3bbbff22,0xf701eeee,0x7fe40dff,
    0x703fdc1f,0x5c00dfff,0x7f406fff,0xdff906bb,0x23dddddd,0xeeeeeffc,
    0x307f81ee,0x7e445dff,0x177fcc6f,0xf98dff91,0x3ff222ef,0x3ffffa06,
    0xffffd001,0x3fffa003,0x83fec01f,0x4ffb07fd,0x22000ffc,0x17fe66ff,
    0xd0001ff9,0x3203ffff,0x3fdc6fff,0x03ffffd0,0x07ffffa0,0x906effb8,
    0xff9001ff,0x82fc4001,0xff901ffc,0xc80ffe45,0x07ff22ff,0x7cc17fe4,
    0x9805ffaf,0x805ffaff,0x05ffaff9,0x7fd83fec,0x7fe4ffb0,0x9ffdc000,
    0x7fe40ffe,0x57fcc000,0xfff905ff,0x983fdc7f,0x805ffaff,0x05ffaff9,
    0x0b7fffe2,0xf9001ff9,0x1fd4001f,0x3e206fe8,0x881bfa4f,0x81bfa4ff,
    0x7fc84ff8,0xfc801ffb,0xc801ffb7,0x401ffb7f,0x0ffb07fd,0x9ffc9ff6,
    0x20099999,0x82ffcffe,0x99999ffc,0x36ff9009,0xeffc80ff,0x20ff70ff,
    0x01ffb7fc,0x1ffb7fc8,0x7fffe440,0x2667ff24,0x3ff20999,0x80999999,
    0x0bff01fc,0x17fe5ff8,0x2ffcbff0,0xff117fe0,0x880ffe69,0x07ff34ff,
    0xff9a7fc4,0x6c1ff603,0x64ffb07f,0xffffffff,0x3fffe606,0xfffff905,
    0xff10dfff,0x320ffe69,0xf74ff9ef,0x269ff10f,0x3fe203ff,0x7007ff34,
    0x3f21ffdf,0x6fffffff,0x3ffffff2,0x107e86ff,0x6ff809ff,0xff809ff1,
    0xf809ff16,0xf0ffdc6f,0x0ffdc0df,0x7fdc0dff,0xfd81bfe1,0x360ffb07,
    0x3ffff27f,0x6406ffff,0xff900fff,0x0dffffff,0x37fc3ff7,0x9ffdb7e4,
    0x1ffb87fb,0xffb81bfe,0x2e01bfe1,0x3ff27fd6,0x26ffffff,0xfffffffc,
    0xf037c46f,0x2ffc40bf,0x7fc40bff,0xf8817fe5,0x557ff45f,0xfd01ffda,
    0x3ffb555f,0x2aabffa0,0xffb01ffd,0x7ec1ff60,0x0003ff27,0xf9027fc4,
    0x7ff4001f,0x41ffdaaa,0x7dff16fc,0x55ffd0ff,0x3a03ffb5,0xffdaaaff,
    0xb5cff441,0x01ff92fd,0x2001ff90,0x3ffa04fa,0x747ff500,0x7ff500ff,
    0xfa807ff4,0x3fffe63f,0x985fffff,0xffffffff,0xffff985f,0xb05fffff,
    0x41ff60ff,0x03ff27fd,0x027fc400,0x26001ff9,0xffffffff,0xf737e45f,
    0xff98ffdf,0x5fffffff,0xffffff98,0xefd85fff,0xf90ff9ec,0x1ff9001f,
    0xc80bf200,0xffe884ff,0x2213ff21,0x3ff21ffe,0x21ffe884,0xfffffffc,
    0x7fe40fff,0xffffffff,0x7ffffe40,0xd80fffff,0x20ffb07f,0x03ff27fd,
    0x027fc400,0x32001ff9,0xffffffff,0xd1bf20ff,0xffc8ffff,0xffffffff,
    0x7ffffe40,0x540fffff,0x24ffffff,0xfc800ffc,0x01fd000f,0xc9beffe8,
    0xffe84fff,0x4fffc9be,0xc9beffe8,0x2ffc4fff,0x7fc3ffa8,0xf87ff505,
    0x07ff505f,0x1ff60ffb,0x3ff93fec,0x01333333,0xf9027fc4,0x3333333f,
    0xfa82ffc1,0xf31bf23f,0x05ff8fff,0x5ff87ff5,0xb307ff50,0xffc85dff,
    0x09999999,0x33333ff9,0x400cc133,0xfffffff9,0xfff980df,0x80dfffff,
    0xfffffff9,0x0bfea0df,0x3fea6ff8,0xfa9bfe02,0x21bfe02f,0x0ffb07fd,
    0xfffc9ff6,0x04ffffff,0xfc813fe2,0xffffffff,0x7c05ff54,0x321bf26f,
    0x0bfea7ff,0x3fea6ff8,0xc81bfe02,0xfffff906,0x3f29ffff,0xffffffff,
    0xff910004,0xc8807dff,0x403effff,0x3effffc8,0x3200ffd8,0x01ffb1ff,
    0xffd8ffe4,0xb07ff200,0x41ff60ff,0x3fff27fd,0x04ffffff,0xfc813fe2,
    0xffffffff,0x6401ffb4,0x10df91ff,0x07fecfff,0x3f63ff90,0x07ff200f,
    0xfffc8254,0x94ffffff,0xffffffff,0x3100009f,0x00062000,0x000000c4,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x80000000,0x802bcba8,0x207933c9,0x2200acb9,
    0x332001cc,0x00b32203,0x65c05433,0x32a03971,0x99705931,0x202cc800,
    0x33202cc8,0x2a601990,0x265c0312,0x00332600,0xa8801995,0x33260510,
    0x405dd101,0x362bcca8,0x805fd103,0xeffffffb,0x7ddbea01,0xfffffc85,
    0x401bee01,0x3f600efa,0xdff901fe,0x25fd01fb,0x25fb02fe,0x1fe883fc,
    0x401df500,0xff01fffe,0xfd807fe3,0x3fa203ee,0x00ffa002,0xf80bfdf3,
    0x3205edff,0x07ff105f,0x3fffffee,0x27704fde,0x3ffff206,0x301ffffd,
    0xf50f2679,0x80bff79f,0x0fe801fc,0x3be33ee0,0x4ec9be80,0x072e3970,
    0x01fe87fc,0x3ba00bf1,0x3e6ff200,0x33219906,0x0bff9100,0x2600dd10,
    0xc8fe804f,0xb73d503f,0x80fd803b,0xffc82ee8,0x6ffffdff,0x4c177a60,
    0x3f222eff,0x7dc0006f,0x0001bf67,0x00000000,0xff998800,0x0001ff99,
    0x00000000,0x07fb17b0,0x00000000,0x88000000,0x42eff981,0x14406ffc,
    0x3203ffb0,0xdd9502ff,0x3e6fc819,0xbfd9304f,0x37fb2609,0x9bfd9304,
    0x137fb260,0x226ff64c,0xfffffffe,0xa8bd91ff,0x776440ee,0xbdd9101d,
    0x37bb2203,0x3ef6e201,0x9dd9501f,0x67765401,0x33bb2a00,0x33bb2a00,
    0x3bdd9100,0x3ffb0f90,0x82ffff98,0xe84dfec9,0x13fe206f,0x3ffffff2,
    0x7fd5bf62,0xfffff980,0x7fffcc6f,0x7ffcc6ff,0x7fcc6fff,0x7cc6ffff,
    0x3a6fffff,0xffffffff,0xfa8dfb1f,0x3fffe20f,0x7ffc42ff,0x7fc42fff,
    0xfc82ffff,0xc86fffff,0x82ffffff,0x2ffffffc,0xffffffc8,0xfffffc82,
    0x7fffc42f,0x7c3ec2ff,0x7d7fcc6f,0x7fffcc4f,0x02ffc6ff,0xbff717fe,
    0x361ffd73,0x360ffb6f,0x47fc88df,0x7fc88dfd,0x7e446fec,0x6446fec7,
    0x446fec7f,0x92fd87fc,0x546fd87f,0x2bbf60ff,0x3f60ffd8,0x20ffd8ae,
    0xffd8aefd,0x32fbfee0,0x3fee1fff,0x20ffeb9d,0xfeb9dffb,0x277fee0f,
    0x3ee0ffeb,0x0ffeb9df,0x3f62bbf6,0xf883fa0f,0x227fa25f,0x46fec5ff,
    0x3fe27fc8,0x3a37fc04,0xd9ffd46f,0x209ff96f,0x107fee08,0x220ffdc1,
    0x1107fee0,0x8220ffdc,0x87fc1ffb,0x237ec1fe,0x7ff10ffa,0xff897fc4,
    0x7c4bfe23,0xf8bfe23f,0xd17fdc7f,0x23ffa8df,0x1ffd46fe,0x3ffa8dfd,
    0x7ff51bfa,0xff88ffe2,0xff887fa2,0x7fc5fd14,0x3fee0886,0xf8817fe1,
    0x213fe24f,0x74dfb5ff,0xfdb983ff,0x6dcc1fff,0x5cc1ffff,0x4c1ffffd,
    0x41ffffdb,0x1ffffdb9,0xff55ff75,0x51bf6157,0x3bfe61ff,0xf34ffeee,
    0x9ffddddf,0x3bbbbfe6,0x89ff14ff,0x9ff14ff8,0x3fe2bff0,0xff15ff84,
    0x3e2bff09,0xf35ff84f,0x9ffddddf,0x5bfe17fc,0x17fe23fd,0x3ffff6e6,
    0x2151ffa1,0x3fe23ffa,0xdfb5ff83,0xf70fff44,0x43ff99ff,0xffccfffb,
    0x333ffee1,0x3ffee1ff,0x3ee1ffcc,0xd1ffccff,0xffffffff,0xf71bf63f,
    0x3bbfe61f,0xff33eeee,0x27dddddd,0xeeeeeff9,0xf09ff13e,0x20ffe2bf,
    0x07ff15ff,0x0ffe2bff,0x1ffc57fe,0xeff9affc,0xf13eeeee,0xfdffe87f,
    0x2e1ffcc4,0x1ffccfff,0x7fc4fff2,0x7f41ffeb,0xfda7fcc6,0xf8a7fc46,
    0x447fea4f,0x47fea4ff,0x3fea4ff8,0x7d49ff11,0x549ff11f,0x9bfd71ff,
    0x36199dfd,0xf07fdc7f,0x07ff007f,0xff007ff0,0x3a3ff98d,0xd27fcc6f,
    0x24ff98df,0x27fcc6fe,0x4ff98dfd,0xff300ffe,0x84fffb87,0x3fe21ffe,
    0xfd07fea4,0xffff55df,0x267ffb09,0x2dfb1ffd,0x3e69fd18,0x4c7ff22f,
    0x47ff22ff,0x3ff22ff9,0x7e45ff31,0x645ff31f,0x64bf61ff,0x11ffb82f,
    0x77ec1ffd,0x7ec3df50,0x6c3df50e,0x43df50ef,0xffb33ffc,0xd99ffec3,
    0x4fff61ff,0x3f61ffd9,0x43ffb33f,0xffb33ffd,0xfa877ec3,0x889ff31e,
    0xfb89cfff,0x17fcc4ff,0xff983ff9,0xcfffffff,0x7ffff440,0x23bf63ff,
    0x3a1fffff,0x2fffedff,0x3ffb7ffa,0x3b7ffa2f,0x3ffa2fff,0x3a2fffed,
    0x2fffedff,0x40ff43fe,0xfefefff9,0x3bffea0f,0x7ffd45ff,0x7fd45ffe,
    0x7c45ffef,0x43ffffff,0xffffffe8,0x7ffff443,0x7ff443ff,0x7443ffff,
    0x43ffffff,0x5ffefffa,0xff513fe6,0xbfffffff,0xfdbffd01,0xfd9105ff,
    0x1fffbdff,0x2effec88,0xeffab7ec,0x4f7fecc3,0x3ff664fe,0x3664fe9e,
    0x24fe9eff,0xfe9effd9,0x27bff664,0x7cdf14fe,0x33ffee07,0x7f540ff9,
    0xfea80cef,0xfea80cef,0xfd880cef,0xd9102fff,0x32205dff,0x9102effe,
    0x2205dffd,0x502effec,0x4419dffd,0x27be23ee,0x03effffc,0x3a7bff66,
    0x2a0c404f,0x0004406f,0x20011002,0x00110008,0x00440022,0x18009826,
    0x88004400,0x40011000,0x00220009,0x02200088,0x11000880,0x18815000,
    0x00004400,0x00000020,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x80000000,0x77100ccb,0x91015c01,
    0x9100e405,0x7100e405,0x200b2205,0x4c001cb8,0x33c980cc,0x55440079,
    0x88005530,0x554c01aa,0x0165cc00,0x00de6544,0x00006aa2,0x00566544,
    0x06666662,0xa9801a98,0x17fbe600,0x203fbbe2,0x9fb300f9,0xfd981ae0,
    0x7dc0d704,0x01fc87fe,0x07ffffe4,0xf503fe80,0x9801bead,0x00dfb1ff,
    0x42ffffdc,0x03ffffd8,0x05fffff7,0x3fffffee,0xffffc80d,0xfb00d305,
    0x409ffbbf,0x1ffffffc,0x0f7fff44,0x06ffffe4,0x0ff23fa2,0xd05f5171,
    0x13fbe209,0x77c40be2,0x202f884f,0x7c45f77d,0x4dffc405,0x4f9804fd,
    0x1e4cf260,0x363ff300,0xdff1006f,0xffc87ffb,0x7d43fffd,0xa87febdf,
    0xfffddfff,0x7f77fdc4,0x203fdc2f,0x05fa81ed,0x3ffffffd,0x6ffdfff8,
    0x7feeffcc,0x37dc0003,0x898807d4,0x2205c84f,0x05c84f89,0x927d5be2,
    0x1ffa803f,0x00000df7,0x8ffcc000,0xff9006fd,0xff89bf61,0xdf91bfa4,
    0x3f217fc4,0x7f47ff87,0xff71bf64,0x5554f6c0,0xff0bf30a,0xfb833337,
    0x6c3ff31f,0xec9fee5f,0x26077545,0x00fe24fa,0x03f313e2,0x1f989f10,
    0x14fabfc0,0xbff100bf,0x3b209ff3,0xec877545,0x22077545,0x1ff9beed,
    0x7dfb1dfb,0x7fd4bff0,0x7dc3ff31,0x0117f61f,0x55303ff2,0xdfb04c41,
    0x2277ff64,0xeeef98fa,0x7cc3f32f,0x02ff400f,0x4ff527ec,0x87fd46fd,
    0x325f89ea,0xd89f1006,0xd89f1005,0xfd9fd805,0x32003f91,0xb00dffff,
    0xb0ffa8df,0x20ffa8df,0xfefffff8,0xfffffb1f,0x24ff89ff,0x3ff32ff9,
    0xdf917fd4,0x37ffe200,0xff71000b,0x37fffec7,0xbd0fcdb2,0xfbff51f4,
    0x919ff03b,0x2affea07,0x51bf64fe,0x7fff41ff,0x22005f11,0x4003ea4f,
    0x003ea4f8,0x7c57ffa6,0x3ffee005,0x2a37ec05,0xa8dfb0ff,0x2fff60ff,
    0xfb1fffb8,0x3ffd33bf,0xff993fe2,0xffc8ffa3,0xdddffdb3,0xfffffd80,
    0x1ffec02d,0xd0abff66,0x3ea6be67,0xfffc9723,0x3fe25fff,0xa83ffffe,
    0x7ec5ffff,0x2607fd46,0x07222ec1,0x263e86a2,0x7435101b,0x09816443,
    0x815447f2,0x51fffffd,0x7d46fd81,0xfa8dfb0f,0xfb1bfe0f,0x987ff63f,
    0x47ff13ff,0x3fee3ff8,0xfd3fffdc,0x300fffff,0x09fffffb,0x2e17ff6c,
    0x3e65f07f,0x935c3fff,0x7ff935df,0x3673ffe2,0x7fff447f,0x51bf62ff,
    0x1f9801ff,0x7dc01fec,0x00bfdf90,0x03fd81f7,0xfff55f88,0x4dffe41d,
    0x20ffbeff,0x87fd46fd,0x87fd46fd,0x7fdc3ff8,0x9ff0dfb1,0xff98ffe2,
    0x33fff222,0xbff553ff,0x65440055,0x7dc01fff,0x6c1fee0f,0x8bf33f34,
    0xaffc404d,0x3fe27ff8,0x7e43bf62,0xfb8dfb0f,0x3227400f,0x17c403ff,
    0x8803f27b,0x01ffe42f,0xb9fc8fe4,0xfa97fa2f,0x37ec6fff,0x37ec3fee,
    0x7fc43fee,0xfd8ffd43,0x3fe5ff87,0x220bfe64,0x7c45ff32,0x0e54402f,
    0x2201ffd4,0x41fee3ff,0x3ee3f36b,0x3fa00be2,0xbfd17fe6,0xff88ffe2,
    0xffb8ffb3,0xfa83ea00,0x836403fa,0x236406f9,0x4403fafa,0xafcdfe5f,
    0x7fe44ff8,0x2e3fec2f,0xb8ffb0ff,0x917fe0ff,0x83ff63ff,0x97fa4ff9,
    0x82661ffa,0x3bee0ffb,0x437fc400,0x5d913ff9,0xff717fcc,0x87e6fe60,
    0x65c1f76e,0xffd27fc2,0x7ff14ff8,0xffb97fc4,0x401ffd11,0x3e73e63e,
    0x503f100c,0x0fc401df,0x019f39f3,0x2aff0fe4,0x447ff64f,0x2e0efffd,
    0x1ffd11ff,0x7f447fee,0x4cfff60f,0xbffb1fff,0x5c3ff911,0xe8dfd1ff,
    0x54bfd35f,0xb99bccff,0x44e7fec0,0x3f61ffea,0x5c7fd88e,0x05f700ff,
    0x3ff217dc,0x7d43ff70,0x7c7ff53f,0x21ff90ef,0xfefefff9,0xfb8d700f,
    0xbb03ffff,0xd801bf50,0x7ffffd45,0xfc8bf103,0x3fe62fb9,0xffffffff,
    0xfdfff30f,0x3fe61ffd,0x20ffefef,0xfefffff9,0xfffdfb1f,0xfff88bff,
    0x7fd42fff,0x3f21ffff,0x4fffffff,0x7fffffc4,0x7ffcc4ff,0x7fd44fff,
    0x17bf706f,0xf105fb71,0xd0bfffff,0xa8dfffff,0x44ffffff,0xff9cfffb,
    0x2202f880,0x883f303f,0x981fffff,0x80fe201f,0x7ffcc1fc,0x7fff4c0e,
    0xfb85f73f,0x20ff9cff,0xff9cfffb,0x46fffcc0,0xf59fb1ff,0x3fa20bff,
    0xffd702ff,0xcbdf983d,0xd886fffe,0x303effff,0x3603bffb,0x3f6a06ff,
    0x2601cfff,0xb104fffc,0xb501bfff,0x06019fff,0x1a802880,0x55510530,
    0x00530155,0x501e4035,0x01013003,0x8003000c,0x80040008,0x40110008,
    0x31001300,0x08800800,0x20002600,0x18006000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x0bccb980,0x15995100,0xa8802640,0x54002bcb,0x2605532a,0x332a202a,
    0x2aaa601b,0x55501aaa,0x98015530,0xaaaaaaaa,0x26661aaa,0x88099999,
    0x3ed82bca,0x33202f64,0x00aaa801,0x2aaaaaa6,0x01ee880a,0x39700153,
    0x2aaaaaa6,0x4c02a982,0x3fffffff,0x7f6ffec0,0x801fb04f,0xeffffffb,
    0x32ffb001,0x20ff907f,0xcffffffb,0xfffffc80,0x7fdc1eff,0x74037f41,
    0xffffffff,0xfff34fff,0xb89fffff,0x21efffff,0x037ec4ff,0xf8805ff7,
    0x3ff203ff,0x45ffffff,0x7fe42ff9,0xff701dff,0x3fffff25,0x1ff61eff,
    0xedffff98,0x3db01fff,0xfb85fa88,0x3ffff202,0x801ffffd,0x20ff97fd,
    0xfffb87fc,0xc84fffde,0xfffeeeff,0xa97fe21f,0x7fd402ff,0xeeeeffec,
    0xffff33ee,0x7c49ffff,0x25fecbef,0x837ec4ff,0x5c02fff9,0x3f206fff,
    0xfffeeeef,0xfc87ba24,0x985ffdef,0xdff92fff,0x6cffffdd,0x7fff107f,
    0x6c37fd41,0x2617730e,0x9827cc5f,0x3f222eff,0x97fd806f,0x11ff20ff,
    0x7f445dff,0x5c3fe40f,0x8ffdc5ff,0x6fe806fe,0x26600ffb,0x20efd999,
    0x8ffcc6fc,0x837ec4ff,0x7402fffe,0xf901ffff,0x06ff881f,0x3fea5ff8,
    0x5ffffb11,0xffb03ff2,0x7dc1ff65,0x4159702f,0xfdff50fa,0x0df07e65,
    0x7e407ff2,0xcbfec02f,0xc8ff907f,0x0bda81ff,0xffd83fe4,0x3eb3fe21,
    0x97fd402f,0xf10007fd,0xf82ca83f,0xfd89ff3f,0x2ffefb86,0x3febfe60,
    0xb01ff905,0x459900df,0x9ff73ff8,0x03ff25ff,0x1ff69ff3,0x64003fec,
    0xd2ec9f15,0xfe80fd87,0x013fe206,0x41ff2ffb,0x037f47fc,0xfa83fe40,
    0x7effe42f,0x366fe806,0x199999ff,0x9001fe40,0xb17fe3ff,0xf9ff98df,
    0x6dff202f,0x9ffc80ff,0x03ffb999,0x2e3ff700,0xf92ff88c,0xb3ffa81f,
    0x117fe0ff,0x74133333,0x2e405f53,0x17fe0bee,0xfd80bff0,0x3f20ff97,
    0x2002ffc7,0x24ccffec,0xfb953ff9,0x2079dfff,0x3ff63ff9,0x00ffffff,
    0x32001ff3,0xd1bfe3ff,0xf8bfe8df,0x29ff102f,0xffc83ff9,0x03ffffff,
    0x20dfd100,0x7ff92ff8,0x23fff955,0x8bff07fd,0x23fffffa,0x5c01f52f,
    0x3e227cc6,0x037fc04f,0x83fe5ff6,0x02ffc7fc,0x3fffffe0,0x7dd3fe67,
    0x6fffffff,0x7ec1ffb0,0x0fffffff,0x32009fb0,0x97ffc3ff,0x57f26ffa,
    0xff702ff8,0x7e437fc3,0xefffffff,0x44073221,0xff101ffe,0x3fffff25,
    0x1ff64fff,0x3fea37f4,0x45363fff,0x44d8aa2f,0x05ff86f8,0xfb017fe2,
    0x3203ff2f,0x0037fc7f,0x8667ff66,0x75533ffa,0x30555bff,0xfd999dff,
    0x1ff9800f,0xf84ff880,0x6fffffff,0x3fe21ff3,0x555ffd02,0xffc83ffb,
    0xffea9999,0xd105ff30,0x7fc405ff,0xddffff92,0x907fd85b,0x3fe601ff,
    0x99ed9ae3,0x3fa0be5f,0xa807ff40,0xe85313ff,0xb01ff76f,0x307fd8ff,
    0x07fc817b,0x332a5ff7,0x83ccdffc,0xfffffffc,0x37dc007f,0xff07fa80,
    0x2df9dfd9,0xfffffffc,0x7fffcc7f,0x645fffff,0x3ff980ff,0xfe885ff3,
    0x97fc402f,0xfd800ffc,0x209ff507,0x4fe63ffa,0xf70dffc8,0xfc83f901,
    0x1ffe884f,0xaffc1ff9,0x7fe82ffb,0x7ec1ffdc,0xe83fe41f,0xffff70ff,
    0xf88dffff,0xffeeeeef,0x027ec007,0x9ff03c98,0x7fffe406,0x7e47ffff,
    0xffffffff,0x203ff20f,0x87e23ffa,0x8802ffe8,0x01ff92ff,0x7e40ffb0,
    0xffc99bff,0x8217dc3f,0x07f502fb,0xf937dffd,0x6ffd49ff,0xff34ffb9,
    0x9ff9337f,0x935bffd0,0x3ff909ff,0x47ffd553,0xadffbaa9,0x40ffe42a,
    0x99999ffd,0x003fe809,0x9ff01993,0xa9999880,0x2ffc1bff,0x3f23ffa8,
    0xfeba999f,0xfc8db11f,0x81aaaadf,0x1ff92ff8,0xd80ffb00,0xffffffff,
    0x8bdfb80d,0x2202fdb9,0xffff985f,0x740dffff,0x20efffff,0xfffffffc,
    0xffff980f,0xfc80ffff,0x5fffffff,0x440ffe20,0xfffb06ff,0x88dfffff,
    0xff7001ff,0x0009ff01,0xffa85ff1,0xfc9bfe02,0xffffffff,0xfff03625,
    0x107fffff,0x03ff25ff,0x2e01ff60,0x02defffd,0x67fffed4,0x9107e801,
    0x207dffff,0x81dfffe8,0x0dffffeb,0x37fff220,0xffff900b,0xf8805bdf,
    0x07ff703f,0x3ffffff6,0x07fcc6ff,0xd80ffb80,0xff88003e,0x9007fec2,
    0x3fff23ff,0x803effff,0xfffffffa,0x92ff883f,0xffb001ff,0x00008800,
    0x01880013,0x06200188,0x88000980,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x55554c00,0x6441aaaa,
    0x91ee8bee,0x87dd917d,0x553002a9,0x2a98aa60,0x79300553,0x9954cf26,
    0x3b62002a,0x441ee8be,0xdd702ccb,0x17bfd700,0xaa98154c,0x5531e5c2,
    0x1aaa9801,0x530aaaa8,0x70551015,0x21510199,0x5c2f6428,0xa86aa25e,
    0xaaaaaaaa,0xfc8bba22,0x4fffffff,0x37ffffa2,0xffdfb1ff,0x7fe49fff,
    0x80ffc800,0x2ff90ffc,0x5fb806fd,0x65ff2bf7,0xfff1006f,0xe83ffbff,
    0xff904fff,0x7ffff440,0x303ff25f,0xff885fff,0xc801ff91,0xfff84fff,
    0x709ff92f,0x4fefa8ff,0x45edfff8,0x2ff41ffa,0x7ffc7ff3,0x26ffffff,
    0x3ff22ff8,0x23eeeeee,0xffb9cffc,0x35dffb1f,0x3ff23ffd,0x80ffc800,
    0x2ff90ffc,0x3c9806fd,0x65ff2793,0x7ffb006f,0x4c3fff71,0xd701adff,
    0x45ffe40d,0x1ff92ffb,0x9817ffcc,0x801ff95f,0x7cc6fffc,0xfff92fff,
    0x3e27fb83,0x3aa2fd8e,0xff81ddb9,0xf98bfe64,0x3bbbba3f,0x3a26fffe,
    0x003ff22e,0x3ff91bfe,0xff987ff6,0xdfffff94,0x80ffc85d,0x2ff90ffc,
    0x800006fd,0xdff006fc,0x3ea1ffc8,0x00cc401f,0x90ab8dff,0x3ffe21ff,
    0x03ff2002,0x41ffff90,0xf92ffffb,0x07fb8dff,0x9ff20000,0x1ffcc7fc,
    0x007ffe60,0xf1003ff2,0xb1ffa89f,0x32bff0ff,0xffffffff,0x3203ff24,
    0x36ff90ff,0x213baa6f,0xcaf5c5eb,0x44eec8ef,0x7fd43ff8,0x1ddffd91,
    0x7c41fea0,0x47fe403f,0x5c03ffe8,0x801ff95e,0x363feefc,0xff92ffdf,
    0x43fdc7ff,0x4675c5eb,0xff984eec,0xff989fd1,0x0bffe202,0x2007fe40,
    0x7fd44ff8,0xbff0ffb1,0x2eaafff2,0x3ff90fff,0x1ff93333,0x9b7edff2,
    0x8ff906ff,0xfdff97fc,0x7fc4bfff,0xfd8ffd44,0xfb00ffff,0x013fe20b,
    0x7ffd3ff9,0x3f2ff900,0x677e400f,0x3feffe5f,0x1ffdff92,0x1ff21fee,
    0xffffddf9,0xff39fd0b,0x201ff883,0x32003ffe,0x5fffffff,0x3ff237fc,
    0x7c43ffb1,0xa81ff94f,0xffff93ff,0x21ffffff,0xf1dfb7fc,0x1ff201df,
    0x37ff2ff9,0x3a0ffe88,0x88ffec6f,0xfb01affb,0x22ffc05f,0xfdff92cb,
    0xff9009ff,0xf9003ff2,0x3fe6ff5d,0x3df92ff9,0x21fee9ff,0x6ffe47fc,
    0x5c0ffe88,0xff06fcff,0x017ff603,0xffffff90,0x32ffd8bf,0x3ff63fff,
    0x92ffc88d,0x4ff981ff,0xfffffff9,0x5ff21fff,0x00efeefd,0x2ff91ff2,
    0x3fee0ffc,0x3273ff20,0x3fea1fff,0x807ffb01,0x7ff32ffd,0x3ffffff2,
    0xcbfe401f,0x77e400ff,0x9dfb9ff8,0x36df92ff,0xc87fb9ff,0x707fe47f,
    0xfff881ff,0x701ff03f,0x32201dff,0x267ff21c,0x7fc40999,0xb1ffffff,
    0xbfffffff,0x3f207fe4,0x333ff92f,0x321ff933,0xfffffb7f,0x323fe401,
    0xfa8ff97f,0x3fffe21f,0x3ea1ffef,0x03ffc81f,0xffffff98,0x26ffff26,
    0xbfe406ff,0x7e400ffc,0x37fd7fd6,0x45bf25ff,0xc87fbeff,0x2a3fe47f,
    0xfffd81ff,0xff30fd00,0x17fc401f,0x22001ff9,0x1ffadffc,0xbfff5dfb,
    0xfeeeffc8,0x1ff90fff,0x3f21ff90,0x9fffffb7,0x3f23fe40,0xffa8df97,
    0x4df7ec41,0x07fea1ff,0x026a13fe,0x439dffd3,0x3ff24ffc,0x7e5ff204,
    0xcb7e400f,0xff99ffef,0x7fdcdf92,0x47fc87fe,0x0ffd47fc,0xfb02ffd4,
    0x401fff88,0x3ff22ff8,0xf9844000,0x804dfb1f,0xfffffffc,0x203ff21e,
    0x2ff90ffc,0x1ffb9ffd,0x7fc8ff90,0x1ffa8df9,0x83fea066,0x4fe81ffa,
    0xfd817fcc,0x107fe40c,0x3f203fff,0xc801ff97,0x2ffff56f,0x8df92ff9,
    0xfc87fffe,0x3ea37e47,0x02ffa81f,0x3ffe88ea,0x03ff2000,0xb1ff9800,
    0x7ff900df,0xff903555,0x321ff901,0x7f4dfb7f,0xfc8ff906,0xffa8df97,
    0x6ccbff21,0x40ffd47f,0xfea9bffa,0x8bf3100f,0x7fdc0ffc,0x3f2ff906,
    0x099999af,0x3ffe2df9,0x3f25ff35,0x43fffcc6,0x237e47fc,0x3aa61ffa,
    0x4732207f,0x9999effc,0x90f2a199,0x4c0001ff,0x00dfb1ff,0xf9001ff9,
    0x21ff901f,0x54dfb7fc,0x47fc82ff,0xa8df97fc,0x3ffe21ff,0x7d43ffff,
    0xffffd01f,0x2eaa03ff,0x407fe44f,0x7fc84ffe,0xfffffff9,0xfe9bf2df,
    0x325ff33f,0x87ffc86f,0x237e47fc,0xfff11ffa,0x97fcc07f,0xfffffffd,
    0x8df90fff,0x20000ffc,0x0bd91ee9,0x9001ff90,0x1ff901ff,0x237edff2,
    0x47fc86fd,0xa8df97fc,0x7f6cc1ff,0x1ffa81de,0x02f7b2a0,0x64167744,
    0xfff980ff,0xffcbfe41,0x96ffffff,0x98ffe4df,0x10df92ff,0x8ff90fff,
    0x0ffd46fc,0xf9807dfd,0xfffffb2f,0x321fffff,0x0000006f,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x402aaa00,0x35510aa9,0x55455510,0xa81aa982,0x880aaa1a,0x555530aa,
    0x2aa60355,0x2aaaaaaa,0x2aaaaaa6,0x55530aaa,0x20033555,0x410001cc,
    0xaaaaaaaa,0x01cc882a,0x273bf6e6,0x9302ceec,0x75c09bfd,0xec880bdf,
    0x22f641de,0x35300eea,0x19dd9500,0x1deabec8,0x7c42ffd4,0x20fff46f,
    0x1ff63ffc,0xff317ffa,0xc80ffe47,0xffff90ff,0xfc83dfff,0xffffffff,
    0xfffff90f,0x3f25ffff,0xefffffff,0x2017fc00,0x2e9bdeda,0xff103003,
    0x3fffe207,0xffffffff,0x7ffffcc2,0x7fff446f,0x7ffc45ff,0x1bf62fff,
    0x3f601ff5,0x7fffe404,0x3fbf62ff,0x1ffd81ff,0x3e617fec,0x71bfe66f,
    0x7ffc43ff,0xf30ffdc7,0xc9bfe09f,0xfffeeeff,0x3fbbae1f,0x90eeeeff,
    0xddddddff,0x3bbff23d,0x406fffee,0x3ff602ff,0x0066ffff,0x40ffe206,
    0xffc88efc,0x20ffb89f,0x7fc88dfd,0x7dc5ffe4,0x22bbf62f,0x8dfb0ffd,
    0x9fb00ffa,0x5ceffdc0,0xdffb0ffe,0x9bfe2095,0xff905ff9,0xf307ffa7,
    0x7fffdc7f,0x3fe1ff21,0x323ffa87,0x05ffb87f,0x7e403ff2,0x0ffc800f,
    0x3107ff44,0x1337ff33,0x7cc67fdc,0x030030ff,0x3fea0800,0x82217f44,
    0x1bfe1ffb,0x8ffe2157,0x8dfb2ff8,0x9fb00ffa,0x3ea37f40,0x001ffb3f,
    0x3ffa7ff7,0xf9fff100,0xd97fe09f,0x3fa3ffdf,0x641ffc85,0x41ff20ff,
    0xff901ffc,0x003ff201,0x3ee03ff2,0x3fffee1f,0x3fe6ffff,0x0d3fff26,
    0xeeeeb8c0,0x5c45eeee,0xeeeffffd,0x6dcc4ffe,0xff11ffff,0xeeff9807,
    0xdfb4ffee,0xdd10ffa8,0x1dddfffd,0x3fe13fe2,0x7400ffb5,0x402ffcff,
    0x206ffffa,0x36ffe6fd,0x307ff15f,0x45ff89ff,0x5ff507fc,0x6403ff20,
    0x999999ff,0x3603ff20,0x7fffdc7f,0xff16ffff,0x57fa7ee7,0xfff91801,
    0x5cdfffff,0xeffcdfff,0x2e4eeeee,0x1ffccfff,0xf9809ff1,0x3eeeeeef,
    0x0ffb8dfb,0xfffffff3,0x0ffe21ff,0x037ed7fe,0x0bffff30,0x807fff60,
    0x9ff98ffb,0x03ff57fa,0x2ff99ffa,0xff983fe4,0x201ff903,0xfffffffc,
    0x3bbff26f,0x444fffee,0x99bff999,0x5f55ff10,0x8c00d7fa,0xccccccca,
    0xf997fe3c,0x27fc404f,0x2ffc3ff5,0x03ff8b2e,0x3fee3fec,0xdfd99910,
    0x37f41999,0x37ed3fe6,0x03fff200,0x00fffec0,0x2ff75ff3,0x07fb9ff8,
    0x3fe47fee,0xff983fe4,0x201ff904,0xfffffffc,0x3ffff26f,0xf801dfff,
    0x7fbff02f,0x400d3fe2,0xf1013301,0x87ffe47f,0x5ff32ef9,0xffb0ffe4,
    0xfd8ffe65,0x2e3df50e,0x1ffd11ff,0xfd813f60,0x23ffb33f,0x7c4006fd,
    0xfff5004f,0x5ffc40df,0x36ffa5fd,0x53fe206f,0x07fc85ff,0x3f207ff3,
    0x01ff900f,0xfd77ff90,0x0bfe005f,0xfc8affe4,0x1030031f,0x3ff607ff,
    0xefffffed,0x6fff46ff,0x3e62fffe,0x546fffff,0x25ffefff,0xfefefff9,
    0x409fb00f,0xffffffe8,0x1001bf63,0xff1009ff,0x7407ffbf,0x3f22ffef,
    0x7f404ffe,0xfc82ffaf,0x205ff507,0xff900ffc,0x41ff9001,0xee803ffe,
    0xfdfff101,0x0c00c9ff,0xd881ffc4,0xfe98cfff,0x7ecc0dff,0x4c4fe9ef,
    0xa81ceffe,0x5c0ceffe,0x0ff9cfff,0xc8809fb0,0x7ec2effe,0x27fc4006,
    0x7c5ffec0,0xfff901ff,0x7fffd41f,0x7f7fdc02,0x3a0ff907,0x1ff900ff,
    0x2003ff20,0x3fe20ffc,0x55554c1f,0x3b62aaaa,0x0c2effec,0x00aa80c0,
    0x22002008,0x88004000,0x00001800,0x00000880,0x2a027fc4,0x1bfea6ff,
    0x2237ffd4,0x4400ffff,0xf904ffff,0xffb5333f,0x807fe407,0x99999ffc,
    0x81ff9099,0x7fdc6ffb,0x26ffffff,0x4d402209,0x29999999,0x00000000,
    0x00000000,0x00000000,0x27fc4000,0xd83fff10,0xfff883ff,0x006ffe84,
    0x3203fffb,0xffffffff,0x807fe405,0xfffffffc,0x01ff94ff,0x7fdc7ffb,
    0x06ffffff,0x00000000,0x00000000,0x00000000,0x00000000,0xfc813fe2,
    0x1fff884f,0xfc82ffe8,0xdff5004f,0x7ffffe40,0xffc802de,0xfffff900,
    0x3f29ffff,0x0fff880f,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x42e20000,0x64c000b8,0x00882cee,0x33ae0003,
    0x74c4eec8,0x04eeeeee,0x576c0000,0xdb51dfd9,0x361f641b,0xea976c3e,
    0xc93ba63e,0x80eeb85e,0x797103ca,0x22039503,0x102ee22c,0x03910375,
    0x27950b22,0xeeeeeee8,0xdddd10ee,0x2e1ddddd,0x9807752b,0x9ff10ffc,
    0xffff7001,0x577447ff,0xc82fbbdc,0xf90fe8bf,0x4bffffdd,0xfffffffa,
    0x1b50ba25,0x437c57ec,0xfffffefe,0x70effffc,0x337fccff,0x8fff43ff,
    0x3fea0ffe,0x7c42ff41,0x77fc40ff,0x2ffff47f,0x77c4ffa6,0xfddf10fe,
    0xfb81f885,0x45bf66ff,0xffffffff,0xfffff10f,0x3fe1ffff,0x36a0ffd6,
    0xff10ffff,0x7f403bff,0xff997f22,0x44ffffff,0x647fb6f9,0xffe88dff,
    0xff755510,0xa97fec5f,0x23fe24ff,0x5fff44fc,0xc8bfffa8,0x23ff32ff,
    0xdf90fffb,0xffceff88,0x3e64ff82,0x3fffb82f,0x50fd8d44,0x7c43f69f,
    0xf51713fe,0xbafc7665,0x3a4ebfbe,0x5bf63f34,0xbbbbbbb8,0x777710bb,
    0x3e1ff977,0x5c4ffd6f,0x40befffe,0x3efffeb8,0x201befe8,0x6ffcdffb,
    0x37d57f44,0xffb83ff2,0x887ffb00,0x0effcfff,0x17fc6fe4,0x26ff8ffd,
    0x4ffa3ff9,0x9fd2fffd,0x09ffff70,0x06fc9ff2,0xb70ffbff,0x47f23fff,
    0x7f3313fb,0x5f906fb8,0x4b7ffb26,0x5c8fe2f8,0xff880000,0x5bf6bfd0,
    0x01cffff8,0x1ffff930,0x5f7fffd4,0xff327ec0,0x7fc6fe41,0x3ea3fe42,
    0x04ffc81f,0x01dffff1,0x1ff75ff1,0x4bff1bfa,0x57f23ff8,0xff8cfcff,
    0x40dffb01,0x07ff2ff9,0xb8ffeff7,0xf71fd9df,0x7f30bee5,0x7ec4fa98,
    0x207f7444,0xf50fdbec,0x3bbbba25,0x8800eeee,0x2e7f90ff,0x05fff15f,
    0x03ffea00,0x8dffffd7,0x87fe23fe,0x41ff9cfe,0x0ffd47fc,0xf7017fee,
    0x67f405ff,0x8bfd1ff9,0x8ffe24ff,0xf9efaff9,0x3f607fbe,0x37f600ff,
    0x3fe80ffa,0x567dcdf9,0xd7df11ff,0x3aa7f30f,0x33f65f89,0x1ba3fa09,
    0x1e45df91,0xfffffff1,0xff1001ff,0x0d442a21,0x019ffffb,0x5ffffb88,
    0x5ffb5108,0xffb877e4,0x3f27fe20,0x3ea37e45,0x03bfea1f,0x2fffffa8,
    0x4fd8efa8,0x49ff17fa,0x77fc3ff8,0x09fdff4f,0x817fffee,0xa85fdffa,
    0x25ff10ff,0x22fcefe8,0xf982dfeb,0x5c7fffa3,0x4a25ffff,0x91001019,
    0x99999999,0x01771001,0xffffc880,0x7ffed42d,0x17fcc0cf,0x7fe43ff1,
    0x5c0effff,0x7e45fd5f,0xf98ffd46,0x219999ff,0xfff9effa,0x37d4ff42,
    0x49ff17fa,0x7fe43ff8,0x03fffb2f,0x7ff7bff1,0x417fffc0,0x21e5c3cb,
    0x2a200800,0x2aa60cc1,0x000002aa,0x00000000,0x1fffd710,0x02fbffe2,
    0xffdeffc8,0x3ffffe65,0xafd85fff,0x51bf26f9,0x3fff63ff,0x3f27ffff,
    0x5c9ff10e,0xfe83fd4f,0xff127fc5,0x50fffa87,0x3ffa0fff,0x3203ffd0,
    0x000007ff,0x00000000,0x00000000,0x2a000000,0x05bf10fd,0x3fffae20,
    0x8a9a640d,0x31a880e9,0xf51bf215,0x3ffff63f,0x205c7fff,0x1a895438,
    0x27fc5fe8,0xdff07ff1,0x7dc27fc4,0x41bfe63f,0x2ee04ff9,0x22101a81,
    0x16f541cc,0x4cc4b322,0x32bd9099,0x3e21990c,0xffffffff,0xfffff13f,
    0x007fffff,0x0c180000,0x00031000,0x00000000,0x00000000,0x00000000,
    0x7fc40000,0x9dfff714,0x2fdc5b53,0xfb83f222,0x53fffea5,0x3e3ff6fc,
    0xbbbbb10f,0x225bbbbb,0xdddddddd,0x000002dd,0x00000000,0x00000000,
    0x00000000,0x00000000,0x22000000,0xffff54ff,0xc85fffff,0x8fd5531f,
    0x7fffd46f,0x42ee9b74,0x000000bb,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x7ff00000,0x3f2a276a,0x6dc104ff,0x544040bd,
    0x00001aaa,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x01005fd0,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x0054c000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
};

static signed short stb__arial_bold_21_latin1_x[224]={ 0,1,1,0,0,0,0,0,0,0,0,0,1,0,
1,-1,0,1,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,1,0,1,1,1,0,1,1,0,1,
1,1,1,0,1,0,1,0,0,1,-1,0,0,-1,0,1,-1,0,1,-1,0,0,1,0,0,0,0,0,1,1,
-1,1,1,1,1,0,1,0,1,0,0,1,0,0,0,0,0,0,1,0,0,2,2,2,2,2,2,2,2,2,
2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,1,0,0,0,0,
1,0,0,-1,0,0,0,0,-1,-1,0,0,0,0,1,1,-1,1,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,-1,0,1,1,1,1,-1,0,-1,-1,-1,1,0,0,0,0,0,1,0,1,1,1,1,-1,1,1,0,0,
0,0,0,0,0,0,0,0,0,0,-1,1,-1,-1,0,1,0,0,0,0,0,0,0,1,1,1,1,0,1,0,
 };
static signed short stb__arial_bold_21_latin1_y[224]={ 17,3,3,3,2,3,3,3,3,3,3,5,14,10,
14,3,3,3,3,3,3,3,3,3,3,3,7,7,5,7,5,3,3,3,3,3,3,3,3,3,3,3,3,3,
3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,19,3,7,3,7,3,7,3,7,3,3,
3,3,3,7,7,7,7,7,7,7,3,7,7,7,7,7,7,3,3,3,8,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,17,7,3,3,5,3,
3,3,3,3,3,7,7,10,3,1,3,4,3,3,3,7,3,9,17,3,3,7,3,3,3,7,0,0,0,0,
0,0,3,3,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,5,2,0,0,0,0,0,3,3,3,3,
3,3,3,2,7,7,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,5,6,3,3,3,3,3,3,3,
 };
static unsigned short stb__arial_bold_21_latin1_w[224]={ 0,4,7,11,10,16,14,4,6,6,7,11,3,6,
3,7,10,7,10,10,11,10,10,10,10,10,4,4,11,11,11,11,19,14,12,13,12,11,10,14,12,4,9,13,
10,14,12,14,11,15,13,12,12,12,14,18,13,14,12,5,7,5,9,12,5,10,10,10,11,10,7,11,10,3,
5,10,3,15,10,11,10,11,7,10,7,10,11,15,11,11,10,7,3,7,11,10,10,10,10,10,10,10,10,10,
10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,0,4,10,11,10,11,
3,10,7,15,7,10,11,6,15,12,7,10,6,6,5,9,12,3,6,5,7,10,16,16,16,11,14,14,14,14,
14,14,19,13,11,11,11,11,6,6,7,7,14,12,14,14,14,14,14,9,15,12,12,12,12,14,11,10,10,10,
10,10,10,10,16,10,10,10,10,10,5,5,7,7,11,10,11,11,11,11,11,10,11,10,10,10,10,11,10,11,
 };
static unsigned short stb__arial_bold_21_latin1_h[224]={ 0,14,6,15,17,15,15,6,18,18,7,11,7,4,
3,15,15,14,14,15,14,15,15,14,15,15,10,14,11,7,11,14,18,14,14,15,14,14,14,15,14,14,15,14,
14,14,14,15,14,16,14,15,14,15,14,14,14,14,14,18,15,18,8,2,4,11,15,11,15,11,14,14,14,14,
18,14,14,10,10,11,14,14,10,11,15,11,10,10,10,14,10,18,18,18,5,12,12,12,12,12,12,12,12,12,
12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,0,14,18,15,11,14,
18,18,3,15,8,10,7,4,15,2,7,13,8,8,4,14,18,3,4,8,8,10,15,15,15,14,17,17,17,17,
17,17,14,18,17,17,17,17,17,17,17,17,14,17,18,18,18,18,18,10,16,18,18,18,18,17,14,15,15,15,
15,15,15,16,11,14,15,15,15,15,14,14,14,14,15,14,15,15,15,15,15,11,12,15,15,15,15,18,18,18,
 };
static unsigned short stb__arial_bold_21_latin1_s[224]={ 250,231,247,122,211,63,80,157,36,56,203,
222,219,193,249,246,140,228,217,187,172,222,233,139,244,151,249,212,1,223,13,
150,171,184,199,78,64,90,1,1,47,248,55,141,161,172,187,40,236,28,102,
174,77,65,49,30,16,1,236,89,32,146,157,212,174,178,129,189,117,200,110,
98,87,83,165,64,60,101,58,234,24,12,246,25,198,211,145,117,133,219,69,
191,199,108,162,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,
139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,250,249,131,
162,36,107,142,203,204,16,167,47,235,193,206,225,211,116,196,189,187,162,152,
200,180,183,175,90,46,29,12,118,153,196,181,61,76,46,119,214,114,141,222,
234,107,243,91,99,92,168,31,1,16,228,116,80,1,63,43,95,76,126,35,
56,67,78,89,100,111,17,161,130,238,145,156,167,155,250,200,75,178,208,190,
202,214,226,44,150,127,134,95,1,106,24,13,1, };
static unsigned short stb__arial_bold_21_latin1_t[224]={ 16,88,118,39,20,56,56,127,1,1,118,
103,118,127,99,20,56,72,72,56,72,56,56,72,56,56,88,72,118,118,118,
72,1,72,72,72,103,103,88,72,88,72,72,88,88,88,88,72,72,39,103,
56,103,72,103,103,103,103,88,1,72,1,118,127,127,103,56,103,56,103,88,
88,88,88,1,88,88,118,118,103,88,88,103,118,56,103,118,118,118,88,118,
1,1,1,127,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,
103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,16,39,1,
56,118,72,1,1,127,72,118,118,118,127,56,127,118,103,118,118,127,72,1,
127,127,118,118,118,56,56,56,88,20,20,20,20,20,20,72,1,20,20,20,
20,20,1,20,20,72,20,20,20,20,1,1,118,39,1,1,1,1,20,88,
39,39,39,39,39,39,39,103,88,39,39,39,39,88,1,88,88,39,88,39,
39,39,39,39,103,103,39,56,56,56,1,1,1, };
static unsigned short stb__arial_bold_21_latin1_a[224]={ 84,100,143,167,167,267,217,72,
100,100,117,176,84,100,84,84,167,167,167,167,167,167,167,167,
167,167,100,100,176,176,176,184,293,217,217,217,217,201,184,234,
217,84,167,217,184,251,217,234,201,234,217,201,184,217,201,284,
201,201,184,100,84,100,176,167,100,167,184,167,184,167,100,184,
184,84,84,167,84,267,184,184,184,184,117,167,100,184,167,234,
167,167,150,117,84,117,176,226,226,226,226,226,226,226,226,226,
226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,
226,226,226,226,226,226,226,226,84,100,167,167,167,167,84,167,
100,222,111,167,176,100,222,166,120,165,100,100,100,173,167,84,
100,100,110,167,251,251,251,184,217,217,217,217,217,217,301,217,
201,201,201,201,84,84,84,84,217,217,234,234,234,234,234,176,
234,217,217,217,217,201,201,184,167,167,167,167,167,167,267,167,
167,167,167,167,84,84,84,84,184,184,184,184,184,184,184,165,
184,184,184,184,184,167,184,167, };

// Call this function with
//    font: NULL or array length
//    data: NULL or specified size
//    height: STB_FONT_arial_bold_21_latin1_BITMAP_HEIGHT or STB_FONT_arial_bold_21_latin1_BITMAP_HEIGHT_POW2
//    return value: spacing between lines
static void stb_font_arial_bold_21_latin1(stb_fontchar font[STB_FONT_arial_bold_21_latin1_NUM_CHARS],
                unsigned char data[STB_FONT_arial_bold_21_latin1_BITMAP_HEIGHT][STB_FONT_arial_bold_21_latin1_BITMAP_WIDTH],
                int height)
{
    int i,j;
    if (data != 0) {
        unsigned int *bits = stb__arial_bold_21_latin1_pixels;
        unsigned int bitpack = *bits++, numbits = 32;
        for (i=0; i < STB_FONT_arial_bold_21_latin1_BITMAP_WIDTH*height; ++i)
            data[0][i] = 0;  // zero entire bitmap
        for (j=1; j < STB_FONT_arial_bold_21_latin1_BITMAP_HEIGHT-1; ++j) {
            for (i=1; i < STB_FONT_arial_bold_21_latin1_BITMAP_WIDTH-1; ++i) {
                unsigned int value;
                if (numbits==0) bitpack = *bits++, numbits=32;
                value = bitpack & 1;
                bitpack >>= 1, --numbits;
                if (value) {
                    if (numbits < 3) bitpack = *bits++, numbits = 32;
                    data[j][i] = (bitpack & 7) * 0x20 + 0x1f;
                    bitpack >>= 3, numbits -= 3;
                } else {
                    data[j][i] = 0;
                }
            }
        }
    }

    // build font description
    if (font != 0) {
        float recip_width = 1.0f / STB_FONT_arial_bold_21_latin1_BITMAP_WIDTH;
        float recip_height = 1.0f / height;
        for (i=0; i < STB_FONT_arial_bold_21_latin1_NUM_CHARS; ++i) {
            // pad characters so they bilerp from empty space around each character
            font[i].s0 = (stb__arial_bold_21_latin1_s[i]) * recip_width;
            font[i].t0 = (stb__arial_bold_21_latin1_t[i]) * recip_height;
            font[i].s1 = (stb__arial_bold_21_latin1_s[i] + stb__arial_bold_21_latin1_w[i]) * recip_width;
            font[i].t1 = (stb__arial_bold_21_latin1_t[i] + stb__arial_bold_21_latin1_h[i]) * recip_height;
            font[i].x0 = stb__arial_bold_21_latin1_x[i];
            font[i].y0 = stb__arial_bold_21_latin1_y[i];
            font[i].x1 = stb__arial_bold_21_latin1_x[i] + stb__arial_bold_21_latin1_w[i];
            font[i].y1 = stb__arial_bold_21_latin1_y[i] + stb__arial_bold_21_latin1_h[i];
            font[i].advance_int = (stb__arial_bold_21_latin1_a[i]+8)>>4;
            font[i].s0f = (stb__arial_bold_21_latin1_s[i] - 0.5f) * recip_width;
            font[i].t0f = (stb__arial_bold_21_latin1_t[i] - 0.5f) * recip_height;
            font[i].s1f = (stb__arial_bold_21_latin1_s[i] + stb__arial_bold_21_latin1_w[i] + 0.5f) * recip_width;
            font[i].t1f = (stb__arial_bold_21_latin1_t[i] + stb__arial_bold_21_latin1_h[i] + 0.5f) * recip_height;
            font[i].x0f = stb__arial_bold_21_latin1_x[i] - 0.5f;
            font[i].y0f = stb__arial_bold_21_latin1_y[i] - 0.5f;
            font[i].x1f = stb__arial_bold_21_latin1_x[i] + stb__arial_bold_21_latin1_w[i] + 0.5f;
            font[i].y1f = stb__arial_bold_21_latin1_y[i] + stb__arial_bold_21_latin1_h[i] + 0.5f;
            font[i].advance = stb__arial_bold_21_latin1_a[i]/16.0f;
        }
    }
}

#ifndef STB_SOMEFONT_CREATE
#define STB_SOMEFONT_CREATE              stb_font_arial_bold_21_latin1
#define STB_SOMEFONT_BITMAP_WIDTH        STB_FONT_arial_bold_21_latin1_BITMAP_WIDTH
#define STB_SOMEFONT_BITMAP_HEIGHT       STB_FONT_arial_bold_21_latin1_BITMAP_HEIGHT
#define STB_SOMEFONT_BITMAP_HEIGHT_POW2  STB_FONT_arial_bold_21_latin1_BITMAP_HEIGHT_POW2
#define STB_SOMEFONT_FIRST_CHAR          STB_FONT_arial_bold_21_latin1_FIRST_CHAR
#define STB_SOMEFONT_NUM_CHARS           STB_FONT_arial_bold_21_latin1_NUM_CHARS
#define STB_SOMEFONT_LINE_SPACING        STB_FONT_arial_bold_21_latin1_LINE_SPACING
#endif

