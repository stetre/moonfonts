// Font generated by stb_font_inl_generator.c (4/1 bpp)
//
// Following instructions show how to use the only included font, whatever it is, in
// a generic way so you can replace it with any other font by changing the include.
// To use multiple fonts, replace STB_SOMEFONT_* below with STB_FONT_times_10_latin_ext_*,
// and separately install each font. Note that the CREATE function call has a
// totally different name; it's just 'stb_font_times_10_latin_ext'.
//
/* // Example usage:

static stb_fontchar fontdata[STB_SOMEFONT_NUM_CHARS];

static void init(void)
{
    // optionally replace both STB_SOMEFONT_BITMAP_HEIGHT with STB_SOMEFONT_BITMAP_HEIGHT_POW2
    static unsigned char fontpixels[STB_SOMEFONT_BITMAP_HEIGHT][STB_SOMEFONT_BITMAP_WIDTH];
    STB_SOMEFONT_CREATE(fontdata, fontpixels, STB_SOMEFONT_BITMAP_HEIGHT);
    ... create texture ...
    // for best results rendering 1:1 pixels texels, use nearest-neighbor sampling
    // if allowed to scale up, use bilerp
}

// This function positions characters on integer coordinates, and assumes 1:1 texels to pixels
// Appropriate if nearest-neighbor sampling is used
static void draw_string_integer(int x, int y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0, cd->t0); glVertex2i(x + cd->x0, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t0); glVertex2i(x + cd->x1, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t1); glVertex2i(x + cd->x1, y + cd->y1);
        glTexCoord2f(cd->s0, cd->t1); glVertex2i(x + cd->x0, y + cd->y1);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance_int;
    }
    glEnd();
}

// This function positions characters on float coordinates, and doesn't require 1:1 texels to pixels
// Appropriate if bilinear filtering is used
static void draw_string_float(float x, float y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0f, cd->t0f); glVertex2f(x + cd->x0f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t0f); glVertex2f(x + cd->x1f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t1f); glVertex2f(x + cd->x1f, y + cd->y1f);
        glTexCoord2f(cd->s0f, cd->t1f); glVertex2f(x + cd->x0f, y + cd->y1f);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance;
    }
    glEnd();
}
*/

#ifndef STB_FONTCHAR__TYPEDEF
#define STB_FONTCHAR__TYPEDEF
typedef struct
{
    // coordinates if using integer positioning
    float s0,t0,s1,t1;
    signed short x0,y0,x1,y1;
    int   advance_int;
    // coordinates if using floating positioning
    float s0f,t0f,s1f,t1f;
    float x0f,y0f,x1f,y1f;
    float advance;
} stb_fontchar;
#endif

#define STB_FONT_times_10_latin_ext_BITMAP_WIDTH         256
#define STB_FONT_times_10_latin_ext_BITMAP_HEIGHT         80
#define STB_FONT_times_10_latin_ext_BITMAP_HEIGHT_POW2   128

#define STB_FONT_times_10_latin_ext_FIRST_CHAR            32
#define STB_FONT_times_10_latin_ext_NUM_CHARS            560

#define STB_FONT_times_10_latin_ext_LINE_SPACING           6

static unsigned int stb__times_10_latin_ext_pixels[]={
    0x00000000,0x00000000,0x4c000000,0xa8000500,0x35010809,0x80406403,
    0x20000039,0x90000000,0x026e0001,0x00115026,0x01004c02,0xb3024097,
    0x1c406201,0xb80e6048,0x501d981c,0x02825c0b,0x7100a051,0x0cb81cc0,
    0x48040388,0x5ce4c060,0x2054d543,0x2a095038,0x81835104,0x710311aa,
    0x44c0b981,0x2a140880,0x81950311,0x10802010,0x026026a0,0x009a8066,
    0x40210135,0x2a042010,0x5c19b809,0x75402019,0x0cdc1b10,0x5502a6aa,
    0x0ea80773,0x431661b1,0x40212258,0x2e021010,0x190655c0,0x2a6aa1c1,
    0x53550a60,0x88e08381,0x55410830,0x2ea2a3b9,0x51dce4c2,0x2a83621d,
    0x10ea82a8,0x6c43aa1b,0x75432ae0,0x5c1915b8,0x3621d50d,0x11302260,
    0x46eb7a20,0x82261458,0x44992658,0x2c42e972,0x42663b8a,0xb571343b,
    0x86643e61,0x541d103b,0x506d4113,0x26499625,0x26499622,0x1718a4c2,
    0x3174b86b,0x2dc91289,0x516218b3,0x88488198,0x228b1145,0x4d34113a,
    0x28b124c2,0x8ab962ae,0x88475305,0x4b157145,0x4057343b,0xb8a2c455,
    0x343c9623,0x1d4d1275,0xd1160173,0x3244cc19,0x14cd0ee9,0x206e6877,
    0x41a46a54,0x95c0ae55,0x998ee1d2,0x2a628b10,0x2c43540c,0xd114588a,
    0x9e8ab819,0x8b124c09,0x2532ca62,0x87395505,0xb9653145,0x54057343,
    0x598a2c0c,0x16659962,0xb99e8137,0x7312b263,0x46c43ae0,0x9a1dce62,
    0x5cd0ee29,0x55525481,0x2b865418,0xb9a13570,0x228b1623,0x15d41c98,
    0x828b0a2c,0x26b620eb,0x22c4982c,0x2732ce62,0x833b9a85,0x89673146,
    0x04499265,0x99851a12,0x5cddc3a9,0x3d0f3660,0x459cc773,0x44750c1b,
    0x32c42a0e,0x4cb114c9,0x44d20a64,0x4819b9ab,0x47621126,0x45896638,
    0x43535146,0x14686bba,0x8750c51a,0x87305d2d,0x1d5b1146,0x2503ab62,
    0xb9ba823a,0xa83ab620,0x554c0a9a,0x2ea06209,0x440900b9,0x20a8542e,
    0x8b398ea6,0x20b9ba83,0x3550e29a,0x2aa14c15,0x51c1c0a9,0x4c188110,
    0x359109aa,0x3a999815,0x9705cdd4,0xa8391479,0x4dd40b9b,0x02e6ea0b,
    0x37903215,0x000b9ba8,0xbadb8e40,0x00000082,0x20080770,0x2a1a8028,
    0x643e61ac,0x21d1950c,0x8660201b,0x00e4c000,0x302aa110,0x03b81333,
    0x08010000,0x06dc7500,0x00802004,0x00010000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x80206660,
    0x9a818a80,0x02a60104,0xb8026a00,0x20133009,0x806ea02a,0x20310105,
    0x5ed5c102,0x0626001b,0x0580016a,0x000c4002,0x02660315,0x9a804204,
    0x20135000,0x0b809500,0x88498628,0x95011104,0x2aa05101,0x201443b9,
    0x055500a8,0x4406600c,0x1b883b80,0x64239828,0x12038810,0x0cab8084,
    0x060ae008,0x2602a062,0x50355018,0x880a9419,0x20510503,0x2602102a,
    0x83043b9c,0xa9dcd544,0x4441b10e,0x86c43aa0,0x10ea9449,0x1b13541b,
    0x506c43aa,0x87541535,0x2a6aa0d8,0x30d40e60,0x06547739,0xb8354032,
    0x2a6aa0ca,0xd5044ea0,0x305506c4,0x263b9aa8,0x06c43aa2,0x88815355,
    0xb1354020,0x2a6aa2c1,0x43ea0c40,0x218b30c9,0x24c90649,0xb88a2c4a,
    0x228b10da,0x828b102b,0x14588a5d,0x8b124cb1,0x26499622,0x4c6a0a9b,
    0x190730c5,0x2750aea0,0x124cb108,0x14bb019d,0x2619332a,0x2c435144,
    0x3126588a,0x6c0da4c9,0x32c490a5,0x2e2c55c9,0x2663b853,0x0ae48120,
    0x93a8a2c4,0x02b8a2c4,0x3ca828b1,0x3b8a2c45,0x2e28b134,0x505b3343,
    0x30998ee3,0x77501907,0x2e0ce88d,0x2075c343,0xb2a853ca,0x5402b861,
    0x0ee28b10,0x8174890d,0x70cc53ca,0x42ca6687,0xb11dc19e,0x15c90248,
    0x04dc28b0,0x8224c516,0x2ad94145,0x343b8a2c,0x9a1dc516,0xb8d40db9,
    0x20d89623,0x072283e8,0x9a1dc3ae,0x2b650ea1,0xb8649542,0x28b0a202,
    0x4890d0ee,0x455b2817,0x4cd0ee28,0xb30b30b3,0x30cb32c4,0x3411261b,
    0x343cd98a,0x4135530a,0x3e894146,0x26588a34,0x2588a344,0x836b2a49,
    0x12c4b31a,0x23a81505,0x89d430db,0xb9ba9265,0x543e8940,0x4498629c,
    0x228d0aa0,0x99212658,0x7d128175,0x24996258,0x24c0ead8,0x223a9998,
    0x54c38862,0x2e6ea09a,0x750542a0,0x50710173,0x24981737,0x05cdd438,
    0x7502a6aa,0xa9aa8173,0x30d41c40,0x98287533,0x37505400,0x054d5417,
    0x87124c24,0x554c182a,0x3750a609,0x0a9aa817,0x24987038,0x26aa2438,
    0x03ae000a,0x88637008,0xca808002,0x0c40101a,0x01000010,0x10000800,
    0x0081c985,0x205c4000,0x00050000,0x1800612e,0x2aa00020,0x4000dc40,
    0x00000009,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x084c4000,0x40b006cc,0x2088839b,0x081b10ea,
    0x88808000,0x35414c40,0x211001b1,0x02000000,0x4c040000,0x0190b01f,
    0x47cc2988,0x440981d8,0x018a82cc,0x30a04055,0x203f1053,0x574c6660,
    0x4395541c,0x88022010,0x2c435700,0x574c350a,0x882ae0ca,0x5c14dc3c,
    0x7114bb01,0x3053a885,0xa9987739,0x40b21baf,0x0ab84abd,0x20680ca8,
    0x1b868081,0x02601768,0x0626066e,0x81852804,0x9a20d00b,0x22cda0a8,
    0x43aa11f8,0x221d50d8,0x02a6aa0d,0x21458811,0x44930e81,0x02204441,
    0xa8377b57,0x260a853c,0x4598518a,0xa8269261,0x222cc502,0x41a02102,
    0x9a07e649,0x6746cab9,0x46cab980,0x4c3ea089,0x4d95730c,0x3f10b9b8,
    0x1a072ba6,0x8e87e258,0x2c4a682c,0xb114588a,0x8b15724c,0x68733145,
    0x32c55da2,0x11d5c473,0x56ca0432,0x0ba8e662,0x2663b862,0x21cf4570,
    0x26624cba,0x8eae2799,0x341759bb,0x04906890,0x083ce81b,0x458ab836,
    0x8360853b,0xd1a0b9b8,0x3511a166,0x8257468d,0x88a2c526,0x26877145,
    0x51468b29,0x29b4681b,0x21906d4b,0x1280640e,0x7306d47d,0x4b11dc50,
    0x4aa15a2c,0x3268390d,0x28eac1d0,0x83448234,0x79683b82,0x16530ee0,
    0x21dc067a,0xd1a0b9b8,0x1b8d0591,0x82cb468b,0x16145966,0x399a1dc5,
    0x20b9ba8b,0x29134598,0x72cc4b39,0x26032165,0x25988e24,0x89662839,
    0xa8269265,0x49324c92,0xc9ac8b2b,0x912abe60,0x85981068,0x4c19d0f9,
    0xb30b3985,0x2eaa1660,0x095d1a09,0x458e43f3,0x21743e66,0x1a146966,
    0x44932c45,0xb8380ead,0x2b63e639,0x2e1d5b10,0x20ab2239,0x2e0e200c,
    0x31036239,0x2e1d4ccc,0x262bafaa,0x5d5dc29c,0x730ab220,0x2240d412,
    0x10744846,0x841d0388,0x24c0ead8,0x829420e8,0x4382cb46,0x21a0ead8,
    0xa81f9829,0x4dd40b9b,0x054d540b,0x0000aa00,0x1f440000,0x10000510,
    0x00000010,0x81300000,0x955f30d9,0x036ab720,0xb55b9051,0x903ae001,
    0x0421b55b,0xe87cc7e6,0x7cc00d42,0x08001441,0x00000040,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00a806ea,0x09a81500,0x1c406e00,0x0ddc14c4,
    0x0018020c,0x955f3000,0x40013000,0x44088298,0x88002019,0x0000d408,
    0x0220c044,0x20000402,0x41540400,0x77355189,0x795510cc,0x1d50cab8,
    0x40e60362,0x8040082b,0x8710300b,0xab838829,0x9998a6e0,0x99813409,
    0x71018099,0x85501503,0x25980aa9,0x57441b99,0x0ab81543,0x8897066e,
    0x482425c3,0x91054d54,0x0cc910c4,0x51269018,0x52c587e2,0x0a2c4227,
    0x261981c4,0x55c41cae,0x4955f30d,0x4020dab8,0x14408440,0x44c45273,
    0x86a7a09c,0x309aad98,0x9848955f,0x30cc4aaf,0x1b30955f,0x2361262a,
    0x10975d31,0x04449545,0x20840402,0x44996208,0x1028e0a3,0x0573f107,
    0x11c8b134,0x0a2c419d,0x0654c354,0x1275166d,0x8927504d,0x257312b9,
    0x312bbcaa,0xa9866c57,0x1862d0c1,0x82686739,0x41342bca,0x209a0ca9,
    0x10b85aa8,0x2d4d0d35,0x2c725751,0x32a61953,0x2e257510,0x5caea259,
    0x404d2343,0x68354054,0x8b334057,0x8b075c1c,0x98857502,0x20b23a1c,
    0x0d4f409b,0x199b826e,0x32623337,0x4333719a,0x183533da,0x866c611a,
    0x1b86a7a1,0x221a9e8d,0x86a7a1c9,0x8dc50b0c,0x2173c685,0x4c436390,
    0x2e39311c,0x436a6e10,0x0d0ee10b,0x33103231,0x682ba817,0x8d1a0893,
    0x51a3a865,0x9a8d7750,0x2612ba1a,0x218b43cd,0x846e3cd9,0x4ae6a11b,
    0x58d42370,0x21313713,0x2664aaf9,0x45a09c8d,0x45a24a61,0x1686a6a1,
    0x204586c3,0x268d0b1c,0x52caa11b,0x46a6a353,0x322f211b,0x32c42370,
    0x502e6509,0x0d775054,0xd04d54cd,0x2a1a9a98,0x2b2a0b9b,0xb872280b,
    0x2165a3cc,0x4234150a,0x33a2150a,0x32e39d11,0x39d10cea,0x9998a6e2,
    0x33307019,0x37046833,0xccb84685,0x2b6611a3,0xad886a0e,0x4495340e,
    0xb8aaa0ce,0x279973cc,0x53950ce8,0x35506744,0x59509815,0x91415314,
    0x1f980683,0x20100400,0x98036e3a,0x56545d0f,0xa92abe61,0x000001ac,
    0x02980000,0x012abe60,0x3012abe6,0x0000955f,0x01555d30,0x01000000,
    0x20408000,0x71d42620,0x0007e61b,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x26a00000,0x09981600,
    0x05a838c8,0x44040201,0x00080800,0x020100c8,0x00404022,0x882c8000,
    0x00424428,0x2e0d8864,0x313083be,0x40b009b8,0x4062a018,0x2000002a,
    0x56437711,0x01101441,0x10006ea2,0xca855011,0x21c41c40,0xba886249,
    0x040aaa23,0x88480ca8,0x5d448c83,0x9828eaa0,0x8881844a,0x9125c181,
    0xf861041b,0x898c42af,0x08805c41,0x044c0550,0x57515008,0x82603570,
    0x40710008,0x2e0e2038,0x20388174,0x10040840,0x3550a190,0x3ea48dc1,
    0x04441930,0x4e204022,0x5290dc45,0xaf984809,0x92abe64a,0x502221f8,
    0x0fc47e23,0x222855fb,0x7cc1c41f,0x204884aa,0x4aaf9838,0x6445b922,
    0x534bb819,0x50ae6219,0xd503540d,0x43541560,0xb1570ca9,0x1572c55c,
    0x441454cb,0x5c595c3d,0x23ab8853,0x2ae23ab8,0xa88aee63,0x062eaa6a,
    0x04d02ba6,0x7313409a,0x0d1a2445,0x43428553,0x5404d06a,0x1341aa06,
    0xf81d295c,0x15530c8a,0x4cdc7262,0xba815d41,0x95057502,0x98857501,
    0x2996531c,0x442594cb,0x223d8191,0x419e859c,0x74321d0c,0x9cc3a190,
    0x940742e5,0xa9e82c3b,0x9a0d4f41,0xd254199b,0x0c455068,0x3a0aea1a,
    0x02ba81a9,0x353d0575,0x22684d5c,0x32a19dab,0x2e353508,0x435dd411,
    0xbba86bba,0xd7750906,0x2731a9a8,0x2732ce65,0x42153285,0x5982a859,
    0x595cb2b8,0x32732cae,0x22616370,0x20920ba9,0x83168316,0xd1c046e6,
    0x41455068,0xb435dd46,0x435dd418,0x31686bba,0x2e388ec4,0x239d09b2,
    0x19d13bcb,0x32283914,0x18839141,0xccb87228,0x221d5b13,0xd5b10ead,
    0x52ca8541,0x30298575,0x44559109,0x8ab222ac,0x27222cba,0x24b88c42,
    0x82344dca,0x6744d046,0x23413551,0x34145506,0x82341c8a,0x0e450722,
    0x26b2211a,0x36af6a0a,0x5400061c,0x71d436e3,0x0db8ea1b,0x6dc75077,
    0x10000000,0x20041808,0x000000eb,0x00102000,0xf992abe6,0x007e64aa,
    0x07e63f30,0x8fcc08aa,0x7cc36e3a,0xdb8ea4aa,0x986dc750,0x00004aaf,
    0x00000002,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x71000000,0x04000037,0x77072e04,0x0db8fcc3,
    0x102ee020,0x01bb8008,0x1cb81770,0x404014e4,0x1022043b,0x79102001,
    0x30010021,0x0a60bb85,0x0bb88000,0x04ea8004,0x37660004,0x4499f986,
    0x77055c08,0x7330d4c7,0x882211d4,0x87334088,0x2020a20b,0x565c32a4,
    0x95970224,0x20010084,0x044240aa,0x315e4c93,0x930654c3,0x458ab820,
    0x20415c28,0x259c4008,0x00772249,0x38570a6a,0x83b95d44,0x711c101d,
    0x8ae6219a,0x05414c18,0xb8654195,0x162ae58a,0x82021ccd,0x210439a8,
    0x4d456530,0x1572ca63,0x511cd44b,0x20214473,0x19120ca9,0x07262041,
    0x530ca989,0x21981116,0x57312ba8,0x59c4ae62,0xa9922124,0x8ae20e0c,
    0x42171db8,0x2004c1ca,0x26e0d028,0x4c959719,0xb311ddc2,0x4b29865c,
    0x8e668b29,0x0b9263bb,0x4c9324cb,0x532c2eb2,0x85cb2996,0x4932c2e5,
    0x32624acb,0x42848361,0x11641a9a,0x52ca6393,0x4ee6a773,0x4666e10b,
    0x1691199b,0x64c45309,0x05350711,0xc9846e91,0x4255dc4b,0x08dc1a02,
    0x4c4a9653,0x4531cdc2,0x4594cb29,0x48298a66,0x4912246e,0x5246eb4a,
    0x2ca61d19,0x891b9237,0x5352ca64,0x39891263,0x8721de5c,0xd5b11a9a,
    0xb9622c41,0x1b846e11,0x4876ba21,0x88d4d428,0x381dcd43,0x2ca619b1,
    0x261c2ca6,0x19d108d4,0x530e2ca6,0x886c4150,0xd5b10ead,0x82f63e21,
    0x27224829,0x8a412242,0x6c43829c,0x453910ea,0x532429c8,0x123bcb96,
    0x54389b89,0x0ef2e240,0x20d81b0a,0x19d10cd8,0x80cc33a2,0x2f2e0544,
    0xccaa8713,0x14415750,0x16531653,0x55f35051,0x0e8ca809,0x0a84a851,
    0x2a000000,0x2cc02cc4,0x801a98b3,0x30000028,0x0074654b,0x2e22ccb3,
    0x5985c409,0x9cb8dc00,0x00053972,0x21b30330,0x2d404cdb,0x21880298,
    0x2ee0e8ca,0x000400e8,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x90000000,0xa8000853,0x0081b10e,
    0x02020202,0x00820402,0x064b71d5,0x913541b7,0x86c43ea1,0x74c02020,
    0x44fcc4ba,0x200020dc,0x1041cb80,0x03e60400,0x3a611111,0x700084ba,
    0x00fcc017,0x88000f98,0x1d4022b9,0x45160710,0x65dc59a8,0x27150e64,
    0x0570dab8,0x5d2e498a,0x930a69a0,0x436149b0,0x5d62ee18,0x268b1570,
    0x2e67a65a,0x442e950c,0x166e239a,0x55795502,0xae818294,0xb5341022,
    0x57311ccc,0x68aea208,0x07419530,0xb885d5d4,0x22ae199b,0x35404e65,
    0x16151458,0x06543653,0x54c9398b,0x42ac4800,0x4099d8ab,0x853ca849,
    0x0d690549,0x1ae99653,0x43b88e8f,0x2e585c35,0x95970d99,0xa8cde4c4,
    0x26e622aa,0x8409dda0,0x654f1ae9,0x498666e0,0x10ad042e,0x140f4393,
    0x29823703,0x5414dccb,0x3914582b,0x29925316,0x41370762,0x91264ac9,
    0x56440ba8,0x284982c9,0x20ad053b,0x4a60b9ac,0x11d1a345,0x2e0bb877,
    0x3245e491,0x12b9a965,0xb988a6a6,0x409dda09,0x2cc4d1a0,0x8dc90237,
    0x2a6a0da0,0x818a0d31,0x2ca60ce8,0xb55505b3,0x2b6628d0,0x5314e4c5,
    0x31e6cc58,0x58489165,0x260ba5b0,0x707d1283,0x11253019,0x93341d5b,
    0x8910ea68,0x272629c8,0x5772ca62,0x1829419d,0x41023ae8,0x239b9266,
    0xb1240ce8,0x65c23419,0x7508d13b,0x438e2175,0xb730ead8,0x75072281,
    0x0a62c073,0x45458362,0x91653098,0x0a80c448,0x4c0bc817,0x01620e24,
    0xaaae9800,0x025c3e60,0x232a0100,0x2aa0000e,0x981f32aa,0x55d31888,
    0x16600015,0x80955f30,0x8004aaf9,0xd9ca8029,0x406dc750,0x3b836200,
    0x32a0e880,0x43a32a1a,0x03b96659,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x759d1000,0xdab81083,
    0xb98a21db,0x4c3ea6ba,0x8ea7d30c,0x9700194b,0x06ef6ae3,0x41cae984,
    0x0cae9840,0x4a723771,0x4c7e20f9,0xd88f981f,0x312eba61,0x2643e63f,
    0x300775d3,0x2be6755d,0x2000083a,0x80010810,0x41010008,0x2a600000,
    0x49cb9883,0x82208642,0x0a570360,0x22ac1562,0x42080989,0x2e6e210c,
    0x2ae2cda3,0x1255a3d8,0x1aa3d801,0x4d03b40d,0x3a9a345a,0x1a881b34,
    0x1809a09a,0x9926054c,0x0ab2a29e,0xb9a85cc9,0x5cc47773,0x1b5b5952,
    0x0c92614c,0x2e39c9a8,0xada853d0,0x770ee6a1,0x2d406760,0x44a40bb8,
    0x85c0c849,0x30b23a0e,0x98b2d165,0x54d51264,0x019d0346,0x4f468f1a,
    0x254f43b9,0x875d0353,0x2e621a9e,0x890d4c09,0x1c16cc3b,0x414cb10a,
    0x556731cc,0x217026a2,0x433ba983,0x40640d2b,0xb302cc58,0x2aa0ecc0,
    0x242520ad,0x2246e064,0x8b3984ae,0x2244809e,0x068d2aba,0x1a340f3a,
    0x43b88e8d,0x3530d98e,0x316831d0,0x2604dcc4,0x41b5121a,0x75240db9,
    0x885306c3,0x556732b9,0x21331452,0x88473280,0x0c83dcac,0x8106c0d8,
    0x8b133048,0x3130adaa,0x88190901,0x42cb429c,0x81a0ead8,0x696ca244,
    0x07968234,0x4d1a24cd,0x8859343a,0x02341a2a,0x2cc0a983,0x32a1b335,
    0x5c1020da,0x8209529c,0x03b8e8ca,0x6dc72004,0x3a2002ba,0xdc94e5c2,
    0x40da84aa,0xda837659,0xd88b3000,0x361f3002,0x980f9802,0x17499665,
    0x2abe63f1,0x86743a64,0x7c42aae9,0x99321f30,0x4c00caae,0x2557c40e,
    0x00000004,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x28000000,0x04001318,
    0xab99d420,0x4a635319,0x27555318,0x3555338b,0x550d5554,0x00000355,
    0x00000000,0x00000000,0x00000000,0x00000000,0x24acb800,0x3124c2a9,
    0x50d4c133,0x0b94d4b5,0x820a388e,0x301881a9,0x00aaaaa0,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x14a594c0,0x099988ea,
    0x249986a6,0x10850274,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x4594c000,0x0a05541a,0x20882631,0x00000018,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00074654,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
};

static signed short stb__times_10_latin_ext_x[560]={ 0,1,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,0,0,-1,0,0,0,0,0,0,0,
-1,0,0,0,0,0,-1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,0,0,0,
0,0,0,0,-1,0,0,0,0,-1,0,0,0,0,1,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,-1,0,0,0,0,0,0,0,0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,-1,0,-1,0,-1,0,0,0,0,0,0,0,-1,0,0,0,0,0,0,
0,0,0,0,0,0,0,-1,0,-1,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,1,1,1,
1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,0,0,-1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1, };
static signed short stb__times_10_latin_ext_y[560]={ 8,1,1,1,1,1,1,1,1,1,1,2,7,5,
7,1,1,1,1,1,1,2,1,2,1,1,3,3,2,4,2,1,1,1,2,1,2,2,2,1,2,2,2,2,
2,2,2,1,2,1,2,1,2,2,2,2,2,2,2,1,1,1,1,9,1,3,1,3,1,3,1,3,1,1,
1,1,1,3,3,3,3,3,3,3,2,3,3,3,3,3,3,1,1,1,5,2,2,2,2,2,2,2,2,2,
2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,8,3,2,1,2,2,
1,1,2,1,1,3,4,5,1,1,1,2,1,1,1,3,2,4,7,1,1,3,1,1,1,3,0,0,0,0,
0,0,2,1,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,3,1,0,0,0,0,0,2,1,1,1,
1,2,2,1,3,3,1,1,1,2,1,1,1,2,1,2,1,1,1,2,2,3,3,1,1,1,2,1,1,2,
0,2,0,2,1,3,0,1,-1,1,0,2,0,1,0,1,2,1,0,2,0,2,0,2,2,3,0,1,-1,1,
0,2,0,2,1,1,-1,-1,2,1,0,2,0,2,0,2,2,1,0,3,2,1,-1,1,2,1,3,0,0,2,
1,1,1,2,1,2,1,0,1,2,3,0,1,1,1,3,0,2,0,2,0,1,1,3,0,1,2,3,0,1,
0,1,-1,1,1,3,0,1,2,2,0,1,2,2,0,2,0,2,0,2,0,1,0,1,2,3,-1,1,-1,1,
0,0,1,0,2,0,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,2,2,1,2,2,2,
2,2,2,2,2,2,2,2,2,2,1,3,2,2,2,2,2,2,2,2,2,2,2,2,2,1,3,2,2,2,
2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,1,0,1,0,
1,0,1,-1,1,-1,0,-1,0,-1,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,
2,2,2,2,2,2,2,2,2,2,-2,-1,-1,1,-1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,
2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,
2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,
2,2,2,2,2,2, };
static unsigned short stb__times_10_latin_ext_w[560]={ 0,2,4,5,5,8,7,2,3,3,4,5,2,3,
2,3,5,3,5,4,5,4,5,5,4,5,2,2,5,5,5,4,9,7,6,6,7,6,5,7,7,3,4,7,
6,8,8,7,5,7,7,5,6,7,7,9,7,7,6,3,3,3,5,6,2,4,6,4,5,4,4,5,5,3,
3,5,3,7,5,5,6,5,4,4,3,5,5,7,5,5,4,3,2,4,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,2,4,5,5,5,
2,4,3,7,4,5,5,3,7,6,4,5,3,3,2,5,6,2,3,3,3,5,7,7,7,4,7,7,7,7,
7,7,9,6,6,6,6,6,3,3,3,3,7,8,7,7,7,7,7,5,7,7,7,7,7,7,5,5,4,4,
4,4,4,4,6,4,4,4,4,4,3,3,3,3,5,5,5,5,5,5,5,5,5,5,5,5,5,5,6,5,
7,4,7,4,7,5,6,4,6,4,6,4,6,4,7,6,7,5,6,4,6,4,6,4,6,5,6,4,7,5,
7,5,7,5,7,5,7,5,7,5,3,4,3,4,3,4,4,3,3,3,7,5,4,4,7,5,5,6,3,6,
3,6,4,6,4,6,3,8,5,8,5,8,5,6,6,4,7,5,7,5,7,5,8,7,7,4,7,4,7,4,
5,4,5,4,5,4,5,4,6,3,6,4,6,3,7,5,7,5,7,5,7,5,7,5,7,5,9,7,7,5,
7,6,4,6,4,6,4,4,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,7,5,5,5,5,5,5,
5,5,5,5,5,5,5,5,5,5,7,5,5,5,5,5,5,5,5,5,5,5,5,5,5,8,5,5,5,5,
5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,7,4,3,3,7,
5,7,5,7,5,7,5,7,5,7,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5,5,5,5,5,7,4,9,6,7,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5, };
static unsigned short stb__times_10_latin_ext_h[560]={ 0,8,4,8,8,8,8,4,9,9,5,6,3,2,
2,8,8,7,7,8,7,7,8,7,8,8,6,7,6,2,6,8,9,7,6,8,6,6,6,8,6,6,7,6,
6,6,7,8,6,9,6,8,6,7,7,7,6,6,6,9,8,9,5,1,3,6,8,6,8,6,7,7,7,7,
9,7,7,5,5,6,7,7,5,6,7,6,6,6,5,7,5,9,9,9,2,6,6,6,6,6,6,6,6,6,
6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,0,7,8,8,6,6,
9,9,2,8,4,6,2,2,8,1,4,6,5,5,3,7,8,2,3,5,4,6,8,8,8,7,8,8,8,8,
8,8,6,9,8,8,8,8,8,8,8,8,6,9,9,9,9,9,9,4,8,9,9,9,9,8,6,8,8,8,
8,7,7,8,6,7,8,8,8,7,7,7,7,6,8,6,8,8,8,7,7,4,6,8,8,8,7,9,9,8,
8,7,8,7,9,7,9,8,10,8,9,7,9,8,8,8,6,8,8,7,8,7,8,7,8,7,8,8,10,9,
9,8,9,8,9,9,9,9,6,7,8,6,8,6,8,6,8,9,8,5,7,9,10,9,8,9,5,8,8,8,
9,7,7,6,7,6,7,9,7,8,7,9,7,7,8,7,9,7,9,7,9,8,8,6,8,7,8,7,8,7,
9,8,10,8,9,7,9,8,9,9,8,8,6,7,9,7,9,7,9,7,9,8,9,8,8,7,10,8,9,9,
8,8,7,8,6,8,7,7,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,8,6,6,9,6,6,6,
6,6,6,6,6,6,6,6,6,6,8,6,6,6,6,6,6,6,6,6,6,6,6,6,6,8,6,6,6,6,
6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,8,8,8,7,9,
8,9,8,10,8,10,9,10,9,10,9,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,
6,6,6,6,6,6,6,6,6,6,10,10,9,8,10,8,6,6,6,6,6,6,6,6,6,6,6,6,6,6,
6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,
6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,
6,6,6,6,6,6, };
static unsigned short stb__times_10_latin_ext_s[560]={ 90,162,29,208,70,120,232,252,232,208,229,
183,48,57,61,178,188,198,202,158,218,224,132,247,97,76,253,253,164,77,189,
163,240,19,157,1,137,176,170,98,149,145,93,129,122,113,98,220,98,163,84,
20,71,27,107,83,46,38,31,220,94,119,242,83,45,235,115,223,231,213,52,
57,63,69,236,13,73,234,1,151,41,35,224,208,48,123,145,115,199,77,219,
237,186,196,51,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,
194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,90,253,240,
129,247,54,21,203,73,102,12,176,67,57,117,90,7,182,215,248,38,192,171,
64,41,211,34,60,228,236,62,140,244,9,31,186,209,201,1,57,194,217,135,
142,149,163,167,182,200,72,89,105,156,212,224,23,224,147,9,1,201,82,188,
108,39,199,194,156,208,145,169,229,80,75,153,250,63,73,77,109,114,163,102,
96,90,104,110,17,157,56,50,44,7,141,179,25,17,245,1,126,142,145,134,
215,1,204,189,177,28,183,175,168,129,157,150,8,138,182,125,187,110,1,62,
92,16,43,9,69,123,56,155,171,177,185,137,234,8,66,249,104,237,218,226,
17,214,195,50,222,77,217,172,113,205,155,151,144,24,1,135,228,151,240,131,
170,120,75,92,228,13,240,44,81,209,86,241,67,17,62,106,11,48,58,241,
19,218,24,197,39,61,57,164,29,150,84,135,131,68,89,19,34,97,38,81,
44,64,98,49,249,35,25,31,161,67,136,1,250,193,201,167,180,26,165,172,
213,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,122,194,194,191,
194,194,194,194,194,194,194,194,194,194,194,194,194,12,78,194,194,194,194,194,
194,194,194,194,194,194,194,194,26,92,194,194,194,194,194,194,194,194,194,194,
194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,35,43,
252,116,126,130,112,51,53,187,82,96,45,120,24,90,194,194,194,194,194,194,
194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,
194,194,194,37,32,102,85,8,209,194,194,194,194,194,194,194,194,194,194,194,
194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,
194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,
194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,
194,194,194,194,194,194,194,194,194, };
static unsigned short stb__times_10_latin_ext_t[560]={ 11,22,73,22,41,41,41,66,1,1,66,
66,73,73,73,41,32,50,50,41,50,50,32,50,32,41,58,50,66,73,66,
32,1,58,66,32,66,66,66,22,66,66,58,66,66,66,58,32,66,1,66,
32,66,58,58,58,66,66,66,1,22,12,66,73,73,58,22,58,22,58,58,
58,58,58,1,58,58,66,73,58,58,58,66,58,58,58,58,58,66,58,66,
12,12,12,73,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,
58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,11,21,41,
41,58,66,12,1,73,32,73,58,73,73,32,73,73,58,66,66,73,50,41,
73,73,66,73,66,32,32,41,50,32,41,41,41,41,41,66,12,41,41,41,
41,41,41,41,41,58,12,12,12,12,1,1,73,41,1,22,22,12,41,58,
41,41,32,32,50,50,32,58,50,32,32,41,41,50,50,50,66,41,58,41,
41,41,50,50,73,58,41,41,41,58,1,12,41,41,41,41,50,12,50,1,
32,1,32,12,50,12,32,32,32,58,32,32,50,32,50,32,50,32,58,32,
32,1,12,12,32,12,32,1,1,1,1,58,50,32,66,21,66,22,58,22,
12,22,66,50,12,1,12,22,12,66,22,22,22,12,50,50,58,50,58,50,
12,50,22,50,12,50,50,22,50,12,50,12,50,22,22,22,66,32,50,22,
50,22,50,1,22,1,22,12,50,12,22,12,12,22,22,66,50,12,50,12,
50,12,50,12,12,12,22,22,50,1,22,12,1,22,22,50,22,66,22,50,
50,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,22,58,58,1,
58,58,58,58,58,58,58,58,58,58,58,58,58,32,66,58,58,58,58,58,
58,58,58,58,58,58,58,58,32,66,58,58,58,58,58,58,58,58,58,58,
58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,32,32,
32,50,1,22,1,22,1,22,1,1,1,1,1,1,58,58,58,58,58,58,
58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,
58,58,58,1,1,1,32,1,32,58,58,58,58,58,58,58,58,58,58,58,
58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,
58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,
58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,
58,58,58,58,58,58,58,58,58, };
static unsigned short stb__times_10_latin_ext_a[560]={ 36,48,59,72,72,120,112,26,
48,48,72,81,36,48,36,40,72,72,72,72,72,72,72,72,
72,72,40,40,81,81,81,64,133,104,96,96,104,88,80,104,
104,48,56,104,88,128,104,104,80,104,96,80,88,104,104,136,
104,104,88,48,40,48,68,72,48,64,72,64,72,64,48,72,
72,40,40,72,40,112,72,72,72,72,48,56,40,72,72,104,
72,72,64,69,29,69,78,112,112,112,112,112,112,112,112,112,
112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,
112,112,112,112,112,112,112,112,36,48,72,72,72,72,29,72,
48,110,40,72,81,48,110,72,58,79,43,43,48,83,65,36,
48,43,45,72,108,108,108,64,104,104,104,104,104,104,128,96,
88,88,88,88,48,48,48,48,104,104,104,104,104,104,104,81,
104,104,104,104,104,104,80,72,64,64,64,64,64,64,96,64,
64,64,64,64,40,40,40,40,72,72,72,72,72,72,72,79,
72,72,72,72,72,72,72,72,104,64,104,64,104,64,96,64,
96,64,96,64,96,64,104,93,104,72,88,64,88,64,88,64,
88,64,88,64,104,72,104,72,104,72,104,72,104,72,104,72,
48,40,48,40,48,40,48,40,48,40,102,80,56,40,104,72,
72,88,40,88,40,88,59,88,50,88,40,104,72,104,72,104,
72,87,101,71,104,72,104,72,104,72,128,104,96,48,96,48,
96,48,80,56,80,56,80,56,80,56,88,40,88,62,88,40,
104,72,104,72,104,72,104,72,104,72,104,72,136,104,104,72,
104,88,64,88,64,88,64,40,112,112,112,112,112,112,112,112,
112,112,112,112,112,112,112,104,112,112,72,112,112,112,112,112,
112,112,112,112,112,112,112,112,104,76,112,112,112,112,112,112,
112,112,112,112,112,112,112,112,78,112,112,112,112,112,112,112,
112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,
112,112,112,112,112,104,64,48,40,104,72,104,72,104,72,104,
72,104,72,104,72,112,112,112,112,112,112,112,112,112,112,112,
112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,
112,112,104,64,128,96,104,72,112,112,112,112,112,112,112,112,
112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,
112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,
112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,
112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,
112,112,112,112,112,112,112,112, };

// Call this function with
//    font: NULL or array length
//    data: NULL or specified size
//    height: STB_FONT_times_10_latin_ext_BITMAP_HEIGHT or STB_FONT_times_10_latin_ext_BITMAP_HEIGHT_POW2
//    return value: spacing between lines
static void stb_font_times_10_latin_ext(stb_fontchar font[STB_FONT_times_10_latin_ext_NUM_CHARS],
                unsigned char data[STB_FONT_times_10_latin_ext_BITMAP_HEIGHT][STB_FONT_times_10_latin_ext_BITMAP_WIDTH],
                int height)
{
    int i,j;
    if (data != 0) {
        unsigned int *bits = stb__times_10_latin_ext_pixels;
        unsigned int bitpack = *bits++, numbits = 32;
        for (i=0; i < STB_FONT_times_10_latin_ext_BITMAP_WIDTH*height; ++i)
            data[0][i] = 0;  // zero entire bitmap
        for (j=1; j < STB_FONT_times_10_latin_ext_BITMAP_HEIGHT-1; ++j) {
            for (i=1; i < STB_FONT_times_10_latin_ext_BITMAP_WIDTH-1; ++i) {
                unsigned int value;
                if (numbits==0) bitpack = *bits++, numbits=32;
                value = bitpack & 1;
                bitpack >>= 1, --numbits;
                if (value) {
                    if (numbits < 3) bitpack = *bits++, numbits = 32;
                    data[j][i] = (bitpack & 7) * 0x20 + 0x1f;
                    bitpack >>= 3, numbits -= 3;
                } else {
                    data[j][i] = 0;
                }
            }
        }
    }

    // build font description
    if (font != 0) {
        float recip_width = 1.0f / STB_FONT_times_10_latin_ext_BITMAP_WIDTH;
        float recip_height = 1.0f / height;
        for (i=0; i < STB_FONT_times_10_latin_ext_NUM_CHARS; ++i) {
            // pad characters so they bilerp from empty space around each character
            font[i].s0 = (stb__times_10_latin_ext_s[i]) * recip_width;
            font[i].t0 = (stb__times_10_latin_ext_t[i]) * recip_height;
            font[i].s1 = (stb__times_10_latin_ext_s[i] + stb__times_10_latin_ext_w[i]) * recip_width;
            font[i].t1 = (stb__times_10_latin_ext_t[i] + stb__times_10_latin_ext_h[i]) * recip_height;
            font[i].x0 = stb__times_10_latin_ext_x[i];
            font[i].y0 = stb__times_10_latin_ext_y[i];
            font[i].x1 = stb__times_10_latin_ext_x[i] + stb__times_10_latin_ext_w[i];
            font[i].y1 = stb__times_10_latin_ext_y[i] + stb__times_10_latin_ext_h[i];
            font[i].advance_int = (stb__times_10_latin_ext_a[i]+8)>>4;
            font[i].s0f = (stb__times_10_latin_ext_s[i] - 0.5f) * recip_width;
            font[i].t0f = (stb__times_10_latin_ext_t[i] - 0.5f) * recip_height;
            font[i].s1f = (stb__times_10_latin_ext_s[i] + stb__times_10_latin_ext_w[i] + 0.5f) * recip_width;
            font[i].t1f = (stb__times_10_latin_ext_t[i] + stb__times_10_latin_ext_h[i] + 0.5f) * recip_height;
            font[i].x0f = stb__times_10_latin_ext_x[i] - 0.5f;
            font[i].y0f = stb__times_10_latin_ext_y[i] - 0.5f;
            font[i].x1f = stb__times_10_latin_ext_x[i] + stb__times_10_latin_ext_w[i] + 0.5f;
            font[i].y1f = stb__times_10_latin_ext_y[i] + stb__times_10_latin_ext_h[i] + 0.5f;
            font[i].advance = stb__times_10_latin_ext_a[i]/16.0f;
        }
    }
}

#ifndef STB_SOMEFONT_CREATE
#define STB_SOMEFONT_CREATE              stb_font_times_10_latin_ext
#define STB_SOMEFONT_BITMAP_WIDTH        STB_FONT_times_10_latin_ext_BITMAP_WIDTH
#define STB_SOMEFONT_BITMAP_HEIGHT       STB_FONT_times_10_latin_ext_BITMAP_HEIGHT
#define STB_SOMEFONT_BITMAP_HEIGHT_POW2  STB_FONT_times_10_latin_ext_BITMAP_HEIGHT_POW2
#define STB_SOMEFONT_FIRST_CHAR          STB_FONT_times_10_latin_ext_FIRST_CHAR
#define STB_SOMEFONT_NUM_CHARS           STB_FONT_times_10_latin_ext_NUM_CHARS
#define STB_SOMEFONT_LINE_SPACING        STB_FONT_times_10_latin_ext_LINE_SPACING
#endif

