// Font generated by stb_font_inl_generator.c (4/1 bpp)
//
// Following instructions show how to use the only included font, whatever it is, in
// a generic way so you can replace it with any other font by changing the include.
// To use multiple fonts, replace STB_SOMEFONT_* below with STB_FONT_courier_46_usascii_*,
// and separately install each font. Note that the CREATE function call has a
// totally different name; it's just 'stb_font_courier_46_usascii'.
//
/* // Example usage:

static stb_fontchar fontdata[STB_SOMEFONT_NUM_CHARS];

static void init(void)
{
    // optionally replace both STB_SOMEFONT_BITMAP_HEIGHT with STB_SOMEFONT_BITMAP_HEIGHT_POW2
    static unsigned char fontpixels[STB_SOMEFONT_BITMAP_HEIGHT][STB_SOMEFONT_BITMAP_WIDTH];
    STB_SOMEFONT_CREATE(fontdata, fontpixels, STB_SOMEFONT_BITMAP_HEIGHT);
    ... create texture ...
    // for best results rendering 1:1 pixels texels, use nearest-neighbor sampling
    // if allowed to scale up, use bilerp
}

// This function positions characters on integer coordinates, and assumes 1:1 texels to pixels
// Appropriate if nearest-neighbor sampling is used
static void draw_string_integer(int x, int y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0, cd->t0); glVertex2i(x + cd->x0, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t0); glVertex2i(x + cd->x1, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t1); glVertex2i(x + cd->x1, y + cd->y1);
        glTexCoord2f(cd->s0, cd->t1); glVertex2i(x + cd->x0, y + cd->y1);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance_int;
    }
    glEnd();
}

// This function positions characters on float coordinates, and doesn't require 1:1 texels to pixels
// Appropriate if bilinear filtering is used
static void draw_string_float(float x, float y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0f, cd->t0f); glVertex2f(x + cd->x0f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t0f); glVertex2f(x + cd->x1f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t1f); glVertex2f(x + cd->x1f, y + cd->y1f);
        glTexCoord2f(cd->s0f, cd->t1f); glVertex2f(x + cd->x0f, y + cd->y1f);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance;
    }
    glEnd();
}
*/

#ifndef STB_FONTCHAR__TYPEDEF
#define STB_FONTCHAR__TYPEDEF
typedef struct
{
    // coordinates if using integer positioning
    float s0,t0,s1,t1;
    signed short x0,y0,x1,y1;
    int   advance_int;
    // coordinates if using floating positioning
    float s0f,t0f,s1f,t1f;
    float x0f,y0f,x1f,y1f;
    float advance;
} stb_fontchar;
#endif

#define STB_FONT_courier_46_usascii_BITMAP_WIDTH         256
#define STB_FONT_courier_46_usascii_BITMAP_HEIGHT        184
#define STB_FONT_courier_46_usascii_BITMAP_HEIGHT_POW2   256

#define STB_FONT_courier_46_usascii_FIRST_CHAR            32
#define STB_FONT_courier_46_usascii_NUM_CHARS             95

#define STB_FONT_courier_46_usascii_LINE_SPACING          22

static unsigned int stb__courier_46_usascii_pixels[]={
    0x030fb600,0x4c000000,0x10003b91,0x4012a1b7,0x4b20005b,0xd4eeeeec,
    0x6c7ddddd,0xb8388002,0xcca88001,0x2a20001b,0x98000bcb,0x00530000,
    0x40002aa2,0x0009aa98,0xfe800088,0x00002f44,0xff95f800,0x6ffdc00d,
    0x1f200f90,0xec9fdc00,0xdff6feee,0x0ff45ddd,0x9f03ee00,0x7fff4c00,
    0x4003ffff,0x5ffffffa,0xefffd880,0x0ffe2001,0xfffffe98,0xfff91003,
    0x2001bfff,0x2001dffc,0x00fe44fe,0x3ee00000,0x400ff222,0x803e41ee,
    0x7f88007c,0x404fb740,0x7dc005fa,0x54013e20,0xb730acff,0x3bf200bf,
    0x40bf730b,0x5fb32ef8,0x417fea00,0xec9adffa,0x6ffdc05f,0x2ffca9ab,
    0x37fffd40,0xf889fd00,0x40000005,0x300df06e,0x980f905f,0x020bcfeb,
    0xb7403fc8,0x01fe804f,0x07f11f20,0xb801df90,0x13ea00ef,0x0bb05f98,
    0x3ea003ee,0x01ff885f,0x3bf209f9,0x807fa601,0x00fffffd,0x3f905970,
    0x2a000000,0x900fb03f,0x7441f20f,0xcfffefff,0x01ff106d,0x5009f6e8,
    0x23e400df,0x6fd402f9,0x40bf5000,0x887c806e,0x007f101f,0x3fb0bff3,
    0x4d81fe80,0x5c0df100,0x0006ffff,0x00009f10,0x7c81fa00,0x0f907d80,
    0x5cc19ff1,0x9f907ffd,0x013edd00,0x7d800ff4,0x1ba017cc,0x2e0bee00,
    0x41f9802f,0x4026406a,0x27cc4ff9,0x00027d40,0xfc8807e4,0x200001ef,
    0x000000fd,0x0f901fd4,0x21f20fb0,0x3fdc01fe,0x6e801ff8,0x13ee009f,
    0x07ea3740,0xf0002fb8,0x7c00df0d,0x13603d44,0xfb13fe60,0x001fa003,
    0x1100bea0,0x9f300000,0xfd800000,0x3601f200,0x3f98f907,0xdf50dd00,
    0x027dba00,0xbd007f88,0xdf101fb8,0x31fdc000,0x22fc007f,0x05f102f8,
    0x6f87ff10,0x000bee00,0x20003f50,0x99999998,0xfd809999,0xf3000000,
    0xd807c809,0x1fb8f907,0x7fb03300,0x027dba00,0xbf005fd0,0x5f500fb8,
    0x2a5f8000,0x0bf1002f,0x00d901d9,0x09f0ffe2,0x0001fd40,0x7cc001f2,
    0xffffffff,0x3fa82fff,0x1fb00000,0x7d807c80,0x00fb8f90,0x00bfe200,
    0x2004fb74,0x44f805fc,0x01f700fc,0x3ee6d800,0x3fffaa01,0xf939fd05,
    0x17fc003d,0x7c4007f3,0x13e60004,0xccccb800,0x2fdccccc,0x00000fd0,
    0x0f900bf1,0x51f20fb0,0x7d40007f,0x3edd000f,0x03fee004,0x55bf7553,
    0x15555fb5,0x320001f2,0x7f441f27,0x2e05fcdf,0x7100cefe,0x3ea2ff85,
    0x002fc002,0x0000efb8,0x502fa800,0xc800007f,0x807c801f,0xe88f907d,
    0xff70002f,0x04fb7400,0xfa87fea0,0xffffffff,0xb3ffffff,0x3f70000d,
    0x0ffa21f6,0x5c4000bf,0x0ffc2efe,0x6e8003f7,0xfedcc980,0x20000005,
    0x01ba02fa,0x005f8800,0x06f805f7,0x9dfd30f9,0x1bf60015,0x009f6e80,
    0x2a617fcc,0xeaaacfca,0xbd0aaaae,0x25f50000,0xf82fc87d,0x7f5c4005,
    0x43fd00be,0x374001fb,0x37fffec0,0x37fffcc0,0x202fa800,0x900002fb,
    0x37e6003f,0x3209f900,0x3fff6a07,0xbfd00ade,0x04fb7400,0x980ffe20,
    0xdb02f42f,0x23f70000,0xbf05f87d,0x7bfd7300,0x5c3fd001,0x0374001f,
    0x0dfeca88,0x07fffee0,0x2017d400,0xf880006f,0x6ffdc006,0x640bff70,
    0xfdca8807,0x04ff82ff,0x0027dba0,0x1fa813fe,0x00f902fc,0x23ecf900,
    0x20bf03f8,0x00bdfeb9,0x3f707ec0,0x0006e800,0x3fa03df5,0x2a0004ff,
    0x00fdc02f,0x000bee00,0x3f63fff3,0x001f204f,0x3fe27f4c,0x27dba004,
    0xb813fa00,0xf7027c1f,0x26d80001,0xf82fc47d,0x056ff645,0x5c1fb000,
    0x0374001f,0x881fd300,0x0000ffff,0xbf100bea,0x006f8000,0x74c1ffc4,
    0x000f902f,0x17fa1fd8,0x009f6e80,0x3ee03ff8,0x5f5027c0,0x365f8000,
    0x5f81fe87,0x64c02b22,0x23e403cd,0x2fc002fa,0x70fe6000,0x80007fff,
    0x1fc802fa,0x005f5000,0x3e203fa8,0x8000f905,0x01bf63f9,0x4009f6e8,
    0x2aaa2ff8,0xfbaabfda,0x37c0aaad,0x6c7f7000,0x20aefa87,0x3bee005f,
    0x3100efdb,0x7c003f98,0x46e80004,0x80006ffd,0x5f8802fa,0x000fd000,
    0x07d801f9,0xf80008f9,0xe801ff25,0x7d4009f6,0xfffff11f,0xffffffff,
    0x02fb8bff,0x3e46f880,0xfeefffb8,0x42fa800e,0x3e2006d8,0x00fe2004,
    0xff83ee00,0xfa80001f,0x001fb002,0xc8003fa8,0xf907d807,0x3e0007d4,
    0x4003fee4,0x5c009f6e,0x266620ff,0xbfb999fd,0x01ff0199,0x7dc2fb80,
    0xfdfd9100,0x209f005f,0x1be003f8,0x0002fb80,0x9ff51fb8,0x0bea0000,
    0x20027cc0,0x7c8000fe,0x4f907d80,0x3ea003fb,0x4007fe63,0x64009f6e,
    0x2a37406f,0x0dfa801f,0xf50bf700,0xf1000003,0xb002ec03,0x03fa001f,
    0xfc9f2000,0xf500000f,0x007ec005,0x90004f98,0x320fb00f,0x2007fee7,
    0x02fe86f9,0x8013edd0,0x22f403fd,0xdf7001fa,0x80efc803,0x800003f9,
    0x002dc079,0x9f3009f5,0x4bf10000,0x200002fc,0x3e6002fa,0x001fb003,
    0x1f601f20,0xbfff73e4,0x03ff9303,0x5ba00bf7,0x1ff1004f,0x07dc5f80,
    0x159ff700,0x809fd751,0x8800006e,0x2a13a02f,0x400fe80b,0x000dc0fd,
    0x000107f6,0x4002fa80,0x04f9807e,0x3601f200,0x47d4f907,0xfffffffc,
    0x1ff100df,0x013edd00,0x27c02fdc,0x930003f2,0x7dffffff,0x0005f700,
    0x3e60bd00,0x20ffff42,0x9f900df9,0x8803bfd0,0x000003fd,0x54002fa8,
    0x007e403f,0xfb00f900,0x54431f20,0x800acffc,0xf6e803fc,0x00bfa009,
    0x007c89f1,0x02b7fea0,0x000ef880,0x88e7c400,0x7ffc44eb,0x9befb83f,
    0x880dfdb8,0x989bdffc,0x0003ffca,0x005f5000,0x2fc40dd0,0x201f2000,
    0x200f907d,0x37cc007c,0x804fb740,0x3f8807f9,0xfa8003ec,0xf501002f,
    0x006cc01d,0x9ffdfd30,0x407fffa0,0x4ffffffa,0xfffed880,0x0001efff,
    0x00bea000,0x7e40bee0,0x02f40001,0x03e40fe4,0xfd8007c8,0x04fb7402,
    0xf9803fd8,0x220036c3,0xdefeeffd,0x1fda88ab,0x98acefc8,0x8000efca,
    0x2e200aa9,0xabb9801c,0xbba88000,0x0000000a,0xf0001fa8,0x000bf10d,
    0xfa802fa8,0xf9007c84,0x80df3000,0xf9809f6e,0xe85f3006,0x7fff4006,
    0xffffddef,0x3ea03fff,0x0cffffff,0x00000000,0x00000000,0x1ee00000,
    0x5c2fb800,0xfb50002f,0x1f7ec00f,0x01f200f9,0xcca97ec0,0x99df6fcc,
    0x017ec399,0x02f41fa8,0x4402aee0,0x3000acca,0x00015597,0x00000000,
    0x00000000,0x000bd000,0x01be37c4,0x000bfe80,0x35c7fae2,0x10007c80,
    0x3ffffa9d,0xffffff6f,0x0e0027cb,0x0000006a,0x00000000,0x00000000,
    0x00000000,0x000ff200,0x0bea3f70,0x00000000,0x00025400,0x21333330,
    0x00099999,0x00000000,0x00000000,0x00000000,0x00000000,0x4fd98800,
    0x00850000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0xf9800000,0xffffffff,0x00000003,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x64400000,0x0abccccc,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x30000000,0x2aa20035,0x13530001,
    0x00008000,0x26003754,0xdca88099,0x7310000a,0x3330159b,0x3bbbba03,
    0x2eeeeeee,0x002aa200,0x3bbaa000,0x3333101e,0x33331001,0x05eeed81,
    0xa8088000,0x4c04eeee,0x2fffffec,0xffffff50,0xfffb1009,0x440019ff,
    0x5c0007db,0x3ffe007f,0x3fffea6f,0x2004efff,0xffffffe9,0xbffff31e,
    0xdddddff0,0x803bdddd,0xfffffec8,0x36a00003,0xfff02fee,0x7d409fff,
    0x321fffff,0x00006fee,0xf30effe4,0x7dc09fff,0x2cb9acef,0xb9abefd8,
    0xfd101efd,0x1ffb537b,0x7fff5c40,0x3fdc0007,0x2dd99500,0x2a21bffb,
    0xffc805fe,0x27fee61b,0xf81bcdf9,0xfd100004,0xbfd7559f,0xfa800001,
    0x79dfb502,0x7ee5c403,0x001b602e,0x6ffffa80,0x20ffffe2,0x2000efd8,
    0x1bea04fb,0xef9817f4,0x6ffff4c0,0x5c0007da,0x9fb0007f,0x5fb8019f,
    0x88037ee0,0x7c03fcfd,0xef980004,0x001bee01,0xe805f500,0x01fc8006,
    0xb000036c,0x7c1fffff,0x7fc42fff,0x02fcc004,0x0bee27d4,0xce989f50,
    0x20003e41,0xfb0004c9,0x2fd4009f,0xfd002fcc,0x004f807f,0xb801ff80,
    0x2a00003f,0x017dc02f,0xdb00bf10,0x7fdc0000,0x7fff46ff,0x40017ec1,
    0x8fb000fc,0x01fb006f,0x00001f20,0x00dfb000,0x0fe81fb0,0x00ffe600,
    0xfa80009f,0x001f6004,0xe802fa80,0x007f2006,0x880001b6,0x7ec1effc,
    0x013ee0ff,0xf7003740,0x4c00fe63,0x00f9004f,0xfd800000,0x22f88002,
    0xfc8004f8,0x00027c03,0x3f7001b6,0x0bea0000,0x2200bee0,0x00db005f,
    0x32011000,0x03be27ff,0x5002f400,0x8007ea3f,0x00f9006e,0xfd800000,
    0x4c9f0000,0x3fb8002f,0x200027c0,0x17cc0008,0x40dedcc0,0x0dd002fa,
    0x36003f70,0xabdca886,0xffb80000,0x8000bee6,0xb9ee006c,0x03ee000f,
    0x31001f20,0x00033333,0x6d8001f6,0x260007ee,0x2227c03f,0x20000009,
    0xffb101fa,0x549fffff,0x05f7002f,0xdb002fc4,0x7fffff44,0x540003ff,
    0x001b65ff,0x3a003f50,0xb8007ea5,0x007c802f,0x3fffffee,0x00fb0007,
    0x03f536c0,0xf807f500,0xfffffdac,0x6c00001d,0x9cfe880f,0x2abfb510,
    0x81ba002f,0x5b6001fb,0x2a61bff9,0x30000dfe,0x002749ff,0x32007fc0,
    0x400be22f,0x7c803ff8,0x3332e200,0xfb0007ec,0x997e0003,0x3fb8003f,
    0x6fffffc0,0x004ffdbb,0xd109f500,0xadfa803d,0x0bee002f,0x3b6002fc,
    0x7e400efa,0x5ff10006,0xdd730fe2,0x2fe98059,0x5e83fe98,0x007ff900,
    0xf90000f9,0x00ff6000,0x09f0fe60,0xe807fb00,0x9fb101be,0x0ef88000,
    0x98007f44,0x7c002fff,0x4001fb86,0x2e006ffd,0x1d90003f,0x7ff447ea,
    0x200dffdd,0xffeeffe8,0x805f902f,0xc804fbfa,0x07c80007,0x001ffb00,
    0x0fec1fd8,0x007ff500,0x000fec00,0xfb81fe88,0x17fe4002,0xdf07ee00,
    0x03ffb000,0x0000fe80,0x3fe88fb8,0x7e406fc8,0x00efffff,0xa7dc0bf6,
    0x007c805f,0xb0007c80,0x7dc00bff,0x1006f883,0x00007ffd,0x44002fc4,
    0x00bb01fe,0x2000bfa0,0x000bee5f,0x26000ff6,0x016e4c3f,0x01fe9fb8,
    0x3f620fea,0x07faa21b,0x5cd67f44,0x2017e5fd,0x7c80007c,0xdf7db000,
    0x037e4401,0x74c03df5,0x00003faf,0x3a2003ec,0x000fe02f,0x5c0017ec,
    0x2000df1f,0xbf0001fd,0x027fffcc,0x400ff7d4,0x07ba20fd,0x36205f90,
    0x223effff,0x007c804f,0xb0007c80,0x26b3fead,0x00dffba9,0x4cd67fd4,
    0x3f98efca,0x07dc0000,0x202fe880,0xf70002f9,0x2f7e0005,0x1fb0002f,
    0xfd9ba000,0x5400ffff,0x7f3004ff,0x7e800fe4,0xf980a980,0x0007c803,
    0xdb0007c8,0x7ffffecc,0x3a2002ff,0x0dffffff,0x800007f3,0xfe9801fa,
    0x000fdc01,0x70002fa8,0x6c000dff,0xc9f60007,0x9807ffff,0x93e000ff,
    0x07e6004e,0x802fb800,0x7c80007c,0x260db000,0x20000abb,0xf981bba8,
    0x7dc00003,0x00ffcc01,0xb80017cc,0x3fe0002f,0x03f60002,0xff337400,
    0x17e007ff,0x0be2bd00,0x40009f00,0x07c800fd,0x0007c800,0x000000db,
    0x000fe600,0xf980f900,0x00fe001f,0x00017ec0,0xfd8000dd,0x889f0001,
    0x1f6001cb,0x07eabf00,0x2000bd00,0x0f9005fa,0x000f9000,0x000001b6,
    0x0017d400,0xfa81ba00,0x036c001f,0x0002ff80,0xd80005f7,0x3f98004f,
    0x03f50000,0x1fc4fe20,0x0009f100,0x32003ff1,0x07c80007,0x0000db00,
    0x03ee0000,0x27d40004,0x8001efa8,0x7e4003fb,0x0dd0002f,0x03ffb000,
    0x64c0fe80,0x17e2002d,0x0bf17d40,0x40017d40,0x1f2003fc,0x001f2000,
    0x0000036c,0xf037c400,0x3be2001b,0x000efa80,0x4c003fa0,0xa8002fff,
    0xfd80002f,0x0bf2006f,0x009ffff3,0x3e2017dc,0x44017e46,0x7ec4006f,
    0x003e4005,0xd8003e40,0x00000006,0xf7017f44,0x2fe9807f,0x2000efb8,
    0x402fe882,0x002fadfb,0xb00006e8,0x4403df3d,0xfffc85fd,0xfd1000ff,
    0x207f6203,0x3fa202fe,0x13fea001,0x0001f200,0x36c001f2,0x98000000,
    0xe9803feb,0xca98acef,0x05fa83ff,0x74417c40,0xfb531adf,0x07337ea9,
    0x8000fea0,0xff36eccb,0xff731159,0x3ffff209,0x67f44007,0x03feb98a,
    0x5135bfd1,0xac887ff7,0x2ffeca98,0x33333220,0xcccccfec,0x33332e2c,
    0xccccfecc,0x3ffa1ccc,0x06ffffff,0x3fffa000,0x002fffff,0x7ffffedc,
    0x99f900ef,0x99999999,0x2207fb99,0xefffffec,0x8ffffea3,0xfffffffd,
    0x74004fff,0x3f626fff,0x01ffffff,0x00ffffe2,0x3fffae20,0xffb802ff,
    0x980effff,0xbdffffff,0x7fffcc00,0xffffffff,0xfffd14ff,0xffffffff,
    0x65c7ffff,0x3ccccccc,0x332e0000,0x000abccc,0x0055dcc0,0x3ffffff2,
    0xffffffff,0xacb8803f,0xccca8000,0x2ccccccc,0x97300000,0x32e20035,
    0xbb980001,0x5dcc4001,0x1bb9800a,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0xeec80000,
    0xeeeeeeee,0x4c02eeee,0x4409bdca,0x22000999,0xaccdeedc,0x027776c0,
    0x00008000,0x027776c4,0x3bba6000,0x80006eee,0x002bdca8,0x99999880,
    0x01999999,0x159bb973,0x9b951000,0x98808157,0x22019999,0x20199999,
    0xeeeeeefe,0x3feeeeee,0xfffffd10,0x3fea1bff,0xffc803ff,0x7ffffeef,
    0x002ff76c,0x0004e800,0x017fbb62,0xdddb3000,0x4c000ffd,0xfffffffe,
    0xfff70003,0xffffffff,0x3fae29ff,0x2fffffff,0xffffb300,0xf519ffff,
    0x7ffffcc1,0xfffb86ff,0xdd04ffff,0xb83f9800,0x93109cff,0x79bf51df,
    0x00dfb801,0x02f40333,0x005f8000,0x00017e00,0x8003e400,0x730acefb,
    0x88001dfb,0xfaaaaaaa,0xff0aaaae,0xffa8839f,0x5effdc04,0xdffb7511,
    0xaeeaa83f,0xaaa881aa,0xbb00abfc,0x541fb800,0x7f4c01ef,0xdf1002fc,
    0x00bd0000,0x0017e000,0x00005f80,0x9000f900,0xefc801df,0x17e00000,
    0xfe8805f8,0x001df901,0x3a03ffd1,0x01fa8006,0x1fa00044,0x7c400df1,
    0x7f5002ff,0x00bd0000,0x0017e000,0x00005f80,0xa800f900,0x17ee005f,
    0x205f8000,0x0df1004f,0xe8001df5,0x000dd01f,0x800003f5,0x00fec4f8,
    0x400bfea0,0xe80000fc,0xbf000005,0x02fc0000,0x07c80000,0x2001be20,
    0xf00003fc,0x9001f40b,0x007fc41f,0x6e80fdc0,0x001fa800,0x3e0fd400,
    0x05fd0005,0x00003f20,0x9800017a,0x9999ef99,0xf0019999,0x2000000b,
    0x0bf2007c,0x001fe200,0x00002fc0,0x01fd43f5,0x1ba05880,0x0007ea00,
    0x3f88fb00,0x205f9000,0x99fd9998,0x00199999,0x4cccc0bd,0xfffff009,
    0xffffffff,0x8bf00bff,0x001bccb9,0xf1007c80,0x17dc000b,0x002fc000,
    0x7e43f500,0xdd000000,0x003f5000,0x7d45f800,0x05f70001,0xfffffff3,
    0xdfffffff,0x3fe0bd00,0xa82fffff,0xcccefccc,0x01cccccc,0xfffd15f8,
    0x0001dfff,0x1fa803e4,0x017e2000,0x00017e00,0x003747d8,0x000dd000,
    0x400003f5,0x017d42fa,0x9702fb80,0x9999fd99,0xd0039999,0x33ff6a0b,
    0x05f800bc,0x3e77e000,0x3bee21cf,0x00f90000,0xd00003ee,0x0bf0000f,
    0x893e6000,0x2000004f,0x1fa8006e,0x03f20000,0x320007f1,0x01f9002f,
    0x2a0bd000,0x5f8001ff,0x3ffe0000,0x017e600e,0x7d803e40,0x00fd8000,
    0x0002fc00,0x5f50ffdc,0x37400000,0x000fd400,0x17e0bf00,0x8017f400,
    0xe80000fc,0x000efb85,0x40000bf0,0x7c800eff,0x200f9000,0xfb80006e,
    0x02fc0000,0x81dfd500,0x000001fb,0x3ea001ba,0x5f300001,0x7000bf20,
    0x3f2005ff,0x45e80000,0x20000dfc,0x3e00005f,0x05f5000e,0x3e00f900,
    0x1fa80005,0x002fc000,0xb8177fdc,0x2000001f,0x1fa8006e,0x01f90000,
    0xf98007f4,0x1f9002ff,0x22bd0000,0xf80004fd,0x17e00005,0x8003f880,
    0x00dd007c,0x0043f700,0x7c002fc0,0x00fdc02e,0x4cccccc4,0x006e8099,
    0x00001fa8,0x2ff980dd,0x17df7dc0,0x0000fc80,0x03fe8de8,0x000bf000,
    0xf1002fc0,0x00f90007,0x360001f6,0xf000f70f,0x009f000b,0xff8803f5,
    0x6fffffff,0xfa8006e8,0x3f980001,0x9bdfea80,0xa8dfeb99,0x01f9002f,
    0xffffd000,0x17e00007,0x005f8000,0x32000fe2,0x001f7007,0x01f27e80,
    0x3e0017e0,0x803f9804,0xfcaaaaaa,0x8006e81b,0xb80001fa,0xff91000f,
    0x549dffff,0x01f9002f,0xb3dfd000,0xbf00007f,0x02fc0000,0x90007f10,
    0x007ea00f,0x1f25f880,0x20017e00,0x009f000b,0x6d80fdc0,0x001fb800,
    0x30006e80,0x5f501595,0x0003f200,0x2fd83ba0,0x002fc000,0x4400bf00,
    0x07c8003f,0x4000bf10,0x001f22fc,0x000009f1,0x2e0006e8,0x000f701f,
    0xf10000fb,0x54000007,0x01f9002f,0xfb0bd000,0x02fc0005,0x400bf000,
    0x7c8003f8,0x000bf200,0x00f91fe2,0x00003fa8,0x80017e40,0x03f301fb,
    0x80006f80,0x000001fa,0x7e400bea,0x85e80000,0xd0002fe8,0x2fc0000b,
    0x0007f100,0x06e800f9,0x3e42fc80,0x0007f200,0x01fd1000,0x7c03f700,
    0x013ea004,0x0001f600,0x2005f500,0xe80000fc,0x005fd105,0x00001fb0,
    0x3f88017e,0x4007c800,0xf7000dfa,0x2007f90b,0xca8005f9,0x1bf3000b,
    0x201fb800,0xfe8802fd,0x04f80000,0x17d40000,0x0000fc80,0x3fa205e8,
    0x027dc002,0x5f80edc4,0x000fe200,0x3f2001f2,0x077e401e,0x3006fec4,
    0xfd8001ff,0xf7001fff,0x3f22005f,0x80bfa201,0x80002fe8,0x000001fa,
    0xfc8017d4,0x05e80000,0x20017f44,0x55309dfe,0x3e01dffb,0x00fe2005,
    0x54001f20,0xca88acff,0x7dc00dfe,0xfca88acf,0xfff8002f,0x3a6004ff,
    0x5311abdf,0x8801dffb,0xca88adfe,0xb00003ff,0x5000000f,0x9999305f,
    0x999999fd,0x332e0199,0x3f72205f,0xc8803ccf,0xffffffff,0xefcca82d,
    0xfb9701cc,0x6664199d,0xccfecccc,0x201ccccc,0xffffffe8,0x3fa6002e,
    0x00dfffff,0x3ffffb00,0xffff9000,0x039fffff,0x7fffec40,0x00001eff,
    0x30000136,0xffffffff,0x3fffee7f,0xffffffff,0xffe882ff,0x3ffe605f,
    0x1000efff,0x80157975,0x3ffffffd,0xfffffe88,0xffffd11f,0xffffffff,
    0x26007fff,0x20001bcb,0x001acb98,0x001cca80,0x5665cc40,0x5cc00009,
    0x000001ac,0x99100000,0x39999999,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x40000000,
    0x4c005eec,0x080abdcb,0xabccba80,0x4ccccc00,0x99999999,0x22099999,
    0x99999999,0x31000099,0x33333333,0x4ccc4003,0x4cc00999,0x4cc09999,
    0x88019999,0x40999999,0x99999999,0x40999999,0x19999998,0x02666620,
    0x400ccccc,0x30099998,0x001fffff,0x00ffdf30,0x3fffffaa,0x01f51eff,
    0x3fffffaa,0x7c4bb3ff,0xffffffff,0xffffffff,0xfffff13f,0xffffffff,
    0x3fea003b,0xffffffff,0xf100ceff,0x0fffffff,0x7fffffec,0xfffff93f,
    0x7fcc09ff,0x7c7fffff,0xffffffff,0x222fffff,0xffffffff,0xfffffb86,
    0x7ffffc2f,0x3ffea04f,0xffb81fff,0xfd0003ff,0xff900fb1,0x3ee62159,
    0xfc80fbcf,0x3f6621af,0x2b7e26fe,0xafeaaaaa,0x3fbaaaaa,0x2abbeaaa,
    0xffdcaaaa,0xbf755004,0xd9755555,0x3f6a07ff,0x2602aaab,0x0aeeaaaa,
    0x555bf751,0xfbaaa803,0x556fc2ad,0xaaaaaaaa,0x7d5542fc,0xa881aaae,
    0xb982cffb,0x5400aaff,0xfd02cfda,0x2e000dff,0xfd80fb3f,0x7fe4400d,
    0x402fd40f,0x0fe26ffa,0x0fe207c8,0x7ec402f4,0x013e2005,0x7d40bfa6,
    0x02fc0001,0x7dc000dd,0x74009f01,0x4017a00f,0xfb803fd8,0x817e6003,
    0x002ffff8,0x81f66f88,0x7dc005fa,0x70037c0f,0x901fc4df,0xe81fc40f,
    0x00ff2005,0xfd0027c4,0x0005f303,0x07ee04f8,0x9f037400,0xd00bf200,
    0x05fd100b,0x4400fec0,0x3fea00ff,0x3f90006f,0x0ff883ec,0x260fe800,
    0x9be2003f,0x81f203f8,0x00bd03f8,0x9f1006e8,0x4c27c400,0x3e20003f,
    0x0013e203,0x04f80fe6,0x5e805f98,0x0017f4c0,0xfb003fa2,0x2fffc803,
    0x6c5f8800,0x0007f507,0x01fa83ee,0x07f12ec0,0x07f103e4,0x1f70017a,
    0x8009f100,0x304f886e,0x0be609ff,0xf9000fb0,0x22027c01,0x05e800ef,
    0x40007fe6,0x0fee06f9,0x001bffa0,0x41f607ec,0x0e20006c,0x088005f3,
    0x07c80fe2,0x02f40fe2,0x22003ee0,0x83e4004f,0x0dff905f,0x5f5007ea,
    0x7c05f800,0x800fec04,0x01df505e,0xa84fb800,0xfff9805f,0x84fa8001,
    0x0009d07d,0x0005f880,0x0f9017c4,0x05e817c4,0xf8803740,0xe8374004,
    0x01f9dd05,0x0bf001f7,0x26017d40,0x8013ea00,0x00efb85e,0x445f9000,
    0xffb800ef,0x20fd0005,0x002f887d,0x004fc800,0x01f200c0,0x7002f403,
    0x13e2005f,0xdb04f880,0x05f39f10,0x03f200f9,0x20003ec0,0x2f4006f8,
    0x000017f2,0x00ff43fa,0x8001ffd8,0x50fb02fb,0x2000003f,0x0000aefd,
    0x20007c80,0x6fd8805e,0x4013e200,0x0f901fe8,0x3217e5f5,0x007f1007,
    0xe80009f1,0x92f4000f,0x200000df,0x003fcef8,0x220013fe,0x2e1f606f,
    0x2000000f,0xabdfffea,0x03e40000,0x2e60bd00,0x2000dffc,0xfe8804f8,
    0xfb03ee03,0x0036c3ec,0x03f700db,0x001fdc00,0xdfffdaf4,0xfa800000,
    0x0264004f,0x3601fc80,0x0000fb87,0xfeca8800,0x90002eff,0x7ff4000f,
    0xefffffff,0x9cf88002,0xfeca9999,0x20fd404f,0xbd07ee5f,0x200fd400,
    0x3e60006e,0xfddd0005,0x007ff917,0x03ff9800,0x9f300000,0x0fb87d80,
    0x88000000,0x8003feb9,0x3ba0007c,0xefeccccc,0xfff10000,0x9fffffff,
    0x4c5f3001,0x9f0fe23f,0x2605f800,0xfd10003f,0x3ffa0001,0x001ff442,
    0x03fdfd00,0xfd8000c0,0x7d43ec00,0x00000002,0x20027ec4,0x17a0007c,
    0x00077ec4,0x55556fc4,0x220009aa,0xdd07ee3f,0x32001fc4,0x001f900f,
    0x8000bf20,0x07f601fe,0x22bf6000,0x1df000ff,0x401fd400,0x003f987d,
    0xfb000000,0x003e4001,0xefb80bd0,0x027c4000,0x747f1000,0x5f30fc87,
    0xf03f9800,0x13ea000b,0x02f40710,0x70001be2,0x802fcc9f,0xfb000efb,
    0x99999999,0x22199fd9,0x0000005f,0x4005f500,0x17a0007c,0x8003be60,
    0x400004f8,0xf309f14f,0x20007ea5,0x002fa86e,0xfa806f88,0xf500bd01,
    0x1be60009,0x7d4013ee,0xfffd801f,0xffffffff,0x03f61fff,0x006c4000,
    0x32004f80,0x017a0007,0xf10027d4,0x5e800009,0x553e05f5,0x1fb8001f,
    0xfd8003ec,0xd01fa801,0x003f600b,0x3601fd10,0x5ff3002f,0x83ec0000,
    0x500005f9,0x7f10007f,0x0003e400,0x17e400bd,0x0004f880,0x00fcb6c0,
    0x0003eefb,0x04f893e2,0x5003fb80,0x4017a03f,0x7ec003f9,0x003fa202,
    0x00017f44,0x0bf207d8,0x7d57a200,0x02fa8005,0xe8001f20,0x80374005,
    0x400004f8,0x7dc0df7c,0x360007c9,0x30003f27,0x0fd400bf,0x1fa005e8,
    0x9803fb80,0x0722006f,0x103ec000,0x7cc003fd,0x005ff51f,0x90007fc4,
    0x02f4000f,0x22013ea0,0x5c00004f,0x3e203f9f,0x2a0006db,0xd000df2f,
    0x0fd4001f,0x3ee005e8,0x005f9802,0x000013ea,0x2203ec00,0xffa804fe,
    0x00bffea2,0x90007fa6,0x02f4000f,0x2200fec0,0x5400004f,0x77401fcf,
    0x6fc0005e,0x7e4002fa,0x80fd4002,0x17e2005e,0x8001df10,0x000002fc,
    0xe8807d80,0xca88acef,0x57d40efe,0x5309befd,0xcb807ff9,0xcccfeccc,
    0xf99700cc,0x1005999d,0x664479df,0xcccccefc,0xff98000c,0x04ffc807,
    0x07f7e400,0x3333f600,0xcccccccc,0x332e1fdc,0x402cccef,0x910cccfc,
    0x40799bfd,0x2cffccc9,0x32a00000,0x00ccfecc,0x7fffff54,0x21d104ff,
    0xfffffffa,0xffe800df,0xffffffff,0xfffe881f,0x9005ffff,0x7ffccdff,
    0xffffffff,0x5ff88001,0x003ffa80,0x0027fc40,0x7fffffec,0xffffffff,
    0xffffd11f,0xf980bfff,0xfff30fff,0x7dc0dfff,0x004fffff,0x3fff6000,
    0x1001ffff,0x00015975,0x02af2ea2,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x99999880,
    0x19999999,0x00999998,0x10133331,0x10013333,0x98333333,0x99999999,
    0x99999999,0x26666209,0x99999999,0x4c099999,0x99999999,0x4ccc4000,
    0x99988001,0x99999881,0x00099999,0x4cccccc0,0x31000099,0x33333333,
    0x33330001,0x33331003,0x3ffea001,0xffffffff,0x3ffe5fff,0xffa87fff,
    0x7fc3ffff,0x7d405fff,0xb5ffffff,0xffffffff,0xffffffff,0x3ffe29ff,
    0xffffffff,0x2fffffff,0x3ffffff6,0x0bdeffff,0x17ffffc0,0x3ffff600,
    0x3ffffe24,0xffffffff,0x7ff4003e,0x06ffffff,0xfffffa80,0x01ffffff,
    0x3fffffe0,0x3fffea04,0x555001ff,0x555fb555,0x7d4c3555,0xaa882aae,
    0x54c0adfb,0x2202ffea,0x1acfcaaa,0x557fb553,0x55555555,0x55549f75,
    0xaaaaaaef,0x2fcaaaaa,0x2ab3f2a6,0xeffdbaaa,0x3f7eaa01,0x3f7e2005,
    0x7d5540ad,0xbaaaaaae,0x3001efec,0xbdf55555,0x5550003f,0x55559f95,
    0xbfea9800,0x7f55400a,0x7c80002b,0x1002f400,0xddfb007f,0x7017d400,
    0x4f88001f,0xf9800bd0,0xa802fa82,0x667c03ff,0xf3f9001f,0x200bf009,
    0x30000ffa,0x0009f17f,0x00003f50,0xfa8017e6,0x1f200004,0x4400bd00,
    0xfafd803f,0x405f5004,0x7c4000fb,0x9800bd04,0x002fa82f,0x67c03fd1,
    0x5f8804f8,0x00bf009f,0xc8002fcc,0x0000fd0f,0x400003f5,0x6e8802fc,
    0x03e40000,0xf88017a0,0x1fb7d803,0x5c05f500,0x27c4000f,0x7cc005e8,
    0x2002fa82,0x6d3e05f8,0xf8fdc00f,0x4005f804,0x4bf0007c,0x540002fa,
    0x7400001f,0x00fe400f,0x001f2000,0x1fc400bd,0x05f8bec0,0x3ee02fa8,
    0xd04f8000,0x82f9800b,0x7dc002fa,0x0fe69f02,0x4027cdd0,0x0fd4005f,
    0xf88bea00,0x0fd40005,0x13e60000,0x00004f98,0x2f4007c8,0xb007f100,
    0x2a017e4f,0x003ee02f,0x02f402e0,0x17d405c0,0x4f837400,0x22fa81ba,
    0x005f804f,0x360007e4,0x0000fc87,0x000007ea,0x07f40bf2,0x03e40000,
    0xf88017a0,0x3747d803,0xfb80bea0,0xd0007700,0x8003620b,0xfb8002fa,
    0x0bea4f81,0x2013e3ec,0x037c005f,0x3e613e20,0x07ea0003,0x07740000,
    0x00000bf2,0x17a003e4,0xd803f880,0xf501fd47,0xe807dc05,0x305e8006,
    0x17d4005f,0x7c17cc00,0x1fcc3744,0x017e013e,0x2001fec4,0x00dd01fb,
    0x0000fd40,0x3e64f980,0x32000005,0x002f4007,0x0fb007f1,0x0bea01fb,
    0x0dd00fb8,0x3e60bd00,0x00bea002,0x13e0fe20,0x40fc83f7,0x205f804f,
    0x003feb98,0x07ee06e8,0x000fd400,0x3a3f9000,0x2000000f,0x77f4007c,
    0xeeeeeeee,0x7d803fee,0x5f505f98,0x77777dc0,0xe8006fee,0xfeeeeeef,
    0x00bea002,0x227c27c0,0x217e24f8,0xeeff804f,0xffffeeee,0x03f98002,
    0x540013e2,0x2000001f,0x002fcee8,0x003e4000,0x3bbbbbfa,0x3feeeeee,
    0x3f907d80,0x7dc05f50,0x6feeeeee,0xeeefe800,0x2002feee,0x9f0002fa,
    0x21f909f0,0x804f81fb,0xeeeeeeff,0x00cffffe,0xfb003f20,0x007ea000,
    0xbff50000,0xf9000000,0x2005e800,0x07d803f8,0x05f50df1,0x06e807dc,
    0x5f305e80,0x0017d400,0x884f84f8,0x13e0dd3f,0x2a6017e0,0xbf000efd,
    0x0005f500,0x000003f5,0x00001fb0,0xe800f900,0x00fe2005,0x43fa81f6,
    0x03ee02fa,0x2f400374,0x2a002f98,0x2f88002f,0xf5fb04f8,0x3e013e05,
    0x037dc005,0x55556fd4,0x05fbaaaa,0x2001fa80,0x07c80018,0x0f900000,
    0x22005e80,0x407d803f,0x80bea0fe,0x005700fb,0x006c0bd0,0x50005f50,
    0x2609f03f,0x013e07ff,0x3ea0017e,0x7fffec01,0xffffffff,0x0fd4000f,
    0x9000f900,0x2000000f,0x02f4007c,0xfb007f10,0x3ea4f980,0x0003ee02,
    0x1000bd00,0x0005f509,0xe813e0f9,0x2013e03f,0x4f88005f,0x26673e20,
    0xa9999999,0x0fd4003f,0x9000f900,0x2000000f,0x02f4007c,0xfb007f10,
    0x3ea3f900,0x0003ee02,0x5000bd00,0x002fa83f,0x009f05e8,0x5f804f80,
    0x540fb000,0x0374001f,0xc8007ea0,0x007c8007,0x00f90000,0x3e2005e8,
    0x8807d803,0x5c05f56f,0x7400000f,0x41fa8005,0x7e4002fa,0x80009f03,
    0x005f804f,0x036c0dd0,0x5000fdc0,0x03e4003f,0x00003e40,0x74007c80,
    0x00fe2005,0x57dc01f6,0x03ee02fa,0x00bd0000,0x2fa83f50,0xf81bee00,
    0x027c0004,0x7c4002fc,0x0007f104,0x7d4009f1,0x001f2001,0x000001f2,
    0x17a003e4,0xd803f880,0x3ebfa007,0x0003ee02,0x5000bd00,0x002fa83f,
    0x27c03ff5,0x2013e000,0x7f44005f,0x0001f701,0x1fa801f6,0x2001f200,
    0x0000007c,0x05e800f9,0x3600fe20,0x3fbe6007,0x0003ee02,0x5000bd00,
    0x202fa83f,0x401ffda8,0x27c0004f,0xd3002fc0,0x002f405f,0x2a005f50,
    0x01f2001f,0x80001f20,0xecccccc8,0x2ccccccf,0x799df995,0x9df99910,
    0xcfecb819,0x7fec03cc,0x67f66542,0x002ccccc,0x333bf32e,0xcccccccc,
    0xb951fdcc,0xb99999bf,0x2201dfff,0x2cccefcc,0x77e66640,0x77e6643c,
    0xcccccccc,0xc982fffd,0x01cccefc,0x3bf33322,0x3333223c,0xcccccdfd,
    0x07eccccc,0x7f66665c,0x000ccccc,0xffffff98,0xffffffff,0xffffff94,
    0xfffff50d,0x7ff443ff,0x4406ffff,0x7ffe42ff,0x5fffffff,0xffffd100,
    0xffffffff,0x23ffffff,0xfffffffc,0x401defff,0xfffffffa,0x3fffa204,
    0x3fa26fff,0xffffffff,0x00adffff,0xfffffff7,0x7fffcc07,0x3fe66fff,
    0xffffffff,0xffffffff,0x7ffff407,0x1fffffff,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x01a88000,0x00000cc8,0x0ed40000,0x40009500,0x1acddcb8,0x65cc4002,
    0x30000abd,0x0059bb97,0xbcdca980,0xba88000a,0x88009bcd,0x4c400999,
    0x33300999,0x4cc40033,0x04cc4099,0x006f72a6,0xffffd300,0x7ff901db,
    0x00000000,0x4001ffb3,0xfd88007c,0xdfffffff,0x7fd401fa,0x04ffffff,
    0xfffffb50,0x8005ffff,0xffffffd8,0x440bb3ff,0xfffffffc,0x3ffe203f,
    0x3ffe206f,0xfffd84ff,0xffb805ff,0xff30ffff,0x3fff62bf,0x8000efff,
    0xfebbeff9,0x0bbfaa05,0x22000000,0x4000cffc,0x7f44007c,0x7fe4c09d,
    0x7df9102f,0x0f7ed443,0x826f7fe0,0x5003fea8,0x544137ff,0xf506fefe,
    0x754c13bf,0xf99500ef,0xfcccb80d,0xccefc984,0xfdcb8801,0x4efe5c2d,
    0xf7109cfe,0x1fe8001d,0xdff70018,0x20000003,0x0000dffb,0x3fc800f9,
    0xb02ff980,0x1ff5009f,0x1ff00040,0x800efa80,0xef986ffa,0x00efb801,
    0x9f100374,0x900036c0,0x77ff401f,0x8017e601,0x900005f9,0x00001bff,
    0x007bfea0,0xf800f900,0x20bf2006,0x3e6003fb,0x7f700006,0x20037c40,
    0x07f446fb,0xe809f500,0x813e2006,0xdb0000fb,0x800ffe80,0x5f5000fb,
    0x7e440000,0x300000cf,0x00005dfd,0x0dd001f2,0x3e207440,0x03fb8006,
    0x6c09f000,0x46f8001f,0xfb8001fc,0x8801ba01,0x40be604f,0x809f01ed,
    0x5f3001fe,0x000fe600,0x0fff6600,0x3ffd8800,0x03e40000,0x0000fee0,
    0x3a0001f9,0x09f00006,0x3b8002fc,0xf880037c,0x8801ba04,0x20fe204f,
    0x3f884ff9,0xf1002f40,0x00374007,0x5dfd5000,0x67fe4400,0x7c800000,
    0x677ec400,0x1b60009a,0x400fc800,0x9abccba9,0x05f304f8,0x00fe2000,
    0x1ba06d80,0x7404f880,0xa87efc85,0x002f401f,0x7d4007f1,0x5c000002,
    0x7dc01dff,0x000000df,0x754001f2,0x1cefffff,0xa80017e0,0xfffb881f,
    0xffffffff,0x0003f504,0x3bbbbea0,0xeeeeeeee,0x3a07eeee,0x013e2006,
    0x3f5bd0f9,0x05e807c8,0xb000fe20,0x1000000d,0xea819ff9,0x980001ef,
    0xdaaaaaaa,0xaaaaaaaf,0x6dd4c402,0x7c40cffe,0x0fe60004,0x1357dff3,
    0x09f95331,0x400003f2,0xeeeeeefa,0xeeeeeeee,0x0dd00eee,0x2a027c40,
    0x3e2fe61f,0x2f403744,0x4007f100,0x00003fd8,0x21dff500,0x00006ffb,
    0x3ffffffe,0xffffffff,0x88002fff,0x02fc1efc,0x7443f500,0x413e002f,
    0x100001fb,0x4000005f,0x13e2006e,0x87e45f30,0x74027c7d,0x00fe2005,
    0x407f7fd4,0x44000098,0xfe984ffc,0x9880002e,0xfd999999,0x19999999,
    0x227cc000,0x3f20007d,0xf0007f20,0x000be609,0x00005f80,0xf8801ba0,
    0x97a4f804,0x005f32fa,0x1fc400bd,0x7c46fe40,0x000ffd85,0x00cffc88,
    0x000f7f54,0x400f9000,0x47c8001a,0xdd0001fb,0x4f8005e8,0x00009f10,
    0x000007ec,0x3e2006e8,0x7f36d804,0x001f74f8,0x1fc400bd,0x5f713e20,
    0x400177c4,0x4001dffb,0x0000dffb,0x3a007c80,0x20fb8006,0xfb8006f8,
    0x30013e23,0x00fec09f,0x17e60880,0x036c0000,0xf7009f70,0x97d81f91,
    0x8017a00f,0x0fd403f8,0x02fb87f4,0x0177f540,0x19ff9100,0x03e40000,
    0xe8001fd0,0x2004fa87,0x007f85f9,0xf8813fee,0x44fb8006,0x388003fb,
    0x32007f20,0xafa804ff,0x5eafa85e,0x4400bd00,0x983ec03f,0x2001fd4f,
    0x0003ffd9,0x00fff660,0xd003e400,0x3f6003ff,0x801bfb03,0x3fc80ffb,
    0x27f7f440,0x2007bea0,0xfe80efe9,0xffc8800c,0x4409f500,0x8804fefe,
    0xfbf03fdf,0x8017a007,0x02f403f8,0x100bf5f9,0x00019ff9,0x0bbfa600,
    0x400f9000,0x09bdfffe,0x809ff733,0x988abffc,0xd100dfeb,0xb731139f,
    0x333be7ff,0x359ff703,0x33ff6ea2,0x2afff200,0xdffb7511,0x8aefd803,
    0xf8bffdb9,0x7ff403ce,0x403ff900,0x2ccffcca,0x79df9930,0xfe881f60,
    0x6ffdc01f,0x50000000,0x20003dff,0x2332007c,0xfffffffc,0xfd3002ef,
    0x07ffffff,0xfffffb10,0x7ffc1bff,0x3ff6205f,0x0cffffff,0xffffd300,
    0x005bffff,0x3fffff62,0xdfff10df,0x2a05fc80,0x3ff200ff,0xf703ffff,
    0x2e0bffff,0x817ee02f,0x0001effa,0xbff70000,0x007c8001,0x2f32a620,
    0x7510001a,0x53000359,0x00003599,0x4d5e5cc4,0x97310000,0x54000157,
    0x00001bcb,0x00000000,0x80ee8800,0xfd81fff9,0x0000002e,0x01ffc880,
    0x00001f20,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x4457fd40,0x4cefaffb,0x000000ee,0x00326000,0x00000398,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x3ffffa60,0x01dff50f,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x2eea2000,0x26666001,0x26620099,0x99809999,0x26620099,
    0x09988099,0x73039b51,0x26620039,0x02ae2019,0x4ccccccc,0x09999999,
    0x80001d80,0xaaaa9800,0x8aaaaa21,0xaaaaaaa9,0xaaaaaaaa,0x2e602aaa,
    0xbbb88002,0xbbbbbbbb,0xbbbbbbbb,0x0001bbbb,0xfffd8000,0xf883ffff,
    0x0fffffff,0x13fffffe,0x3fffffe2,0x273ffee2,0x324ffffe,0x201effff,
    0x40fffffb,0x84ffffea,0xffffffff,0x03ffffff,0x20001fcc,0xfffc806b,
    0x3fffe22f,0x3fffffa6,0xffffffff,0x41ffffff,0x01efffe8,0xfffff504,
    0xffffffff,0xffffffff,0x00000bff,0x9ff99300,0x332e0179,0x6d42cdfe,
    0x9500bcff,0x5c417ffb,0x98affefc,0x71cfdafd,0x665c40df,0x9ffb10fd,
    0xef8bf913,0xcccccccc,0x4c01ffcc,0x3e60003f,0x7ffdc04f,0x2ffffc1f,
    0x33333331,0x33333333,0xfe881333,0x102ffa8b,0x4444447f,0x88888888,
    0x88888888,0x00000008,0x4001fc80,0x04fc807e,0x7c00ef98,0x7ffc41ff,
    0x7002fc84,0x20bfd11f,0xd802fc4a,0x03f9802f,0x7f9df100,0x07fffcc0,
    0x0013fff6,0x217f4000,0x7fc43fe8,0x00000000,0x10000000,0x1fcc009f,
    0x2604fc80,0x2ff800ef,0x3e60bfb0,0xff5f7003,0x805f8005,0x7f3003fc,
    0x747fa000,0xffff101f,0x007fff90,0x05f10000,0x3eeb7f62,0x3333261f,
    0xcccccccc,0x0003cccc,0x6c000000,0x01fb000f,0x7cc27e40,0x409f000e,
    0x09f100fc,0x007ffee0,0x9f700f20,0x7cc17bb0,0x403b6a23,0x03fe22fc,
    0x7dc37ffc,0x000002ff,0x3ffee000,0x7fffcc0e,0xffffffff,0x0004ffff,
    0x4c000000,0x04f8803f,0x3ea5fc80,0x813e000e,0x09f100fc,0x0003bee0,
    0xb82fd400,0xbfabefff,0x705fffda,0x20df309f,0xffa85ffe,0x2aaaa61f,
    0xaaaaaaaa,0x02aaaaaa,0x26035100,0xdddddddd,0xdddddddd,0x00000003,
    0xb807e800,0xbf70001f,0xf8001df5,0x4403f204,0x03f7004f,0x1bea0000,
    0x3ffff260,0x300adfff,0x427dc0df,0xff984ffd,0x7fffff47,0xffffffff,
    0x01ffffff,0x00000000,0x00000000,0xf00bea00,0xffb8000b,0x04f8000e,
    0x27c403f2,0x0000fb80,0x000ef980,0x005fffcc,0xfb003fe2,0x882ffc85,
    0x999987ff,0x99999999,0x00999999,0x00000000,0x00000000,0x2a06e800,
    0x7dc0002f,0x09f0005f,0x4f8807e4,0x0001f700,0x000ff880,0x804fefa8,
    0x3fd001fe,0xff80ffdc,0x00000005,0x00000000,0x00000000,0xe80fdc00,
    0x6fdc0006,0x7c000dfb,0x4403f204,0x01f7004f,0x0ff44000,0xfcb7c400,
    0x800fea02,0x81fe65f8,0x000003fd,0x00000000,0x00000000,0x2fc40000,
    0x70001fcc,0x0077d4bf,0x07e409f0,0xf7004f88,0x7ec00001,0x23fd0002,
    0x00600fe8,0x40350220,0x000000b8,0x00000000,0x00000000,0x0fc80000,
    0xc80007ec,0x00efa85f,0x07e409f0,0xf7004f88,0x3f600001,0x87f90002,
    0x000006f9,0x00000000,0x00000000,0x00000000,0x7c400000,0x40013e24,
    0x3bea05fc,0x3204f800,0x009f100f,0x200003ee,0x45c803fc,0x07f705f9,
    0x00000000,0x00000000,0x00000000,0x00000000,0x1f70fd80,0x009f9000,
    0x4f801df3,0x7c403f20,0x001f7004,0xb004fb80,0x2e00c88f,0x00000001,
    0x00000000,0x00000000,0x00000000,0xf9fcc000,0x04fc8005,0xf803be60,
    0x4403f204,0x01f7004f,0x002fd400,0x000000fb,0x00000000,0x00000000,
    0x00000000,0x00000000,0x0017ef74,0x3999ffb7,0x3ffb32e0,0x9df9910c,
    0x8399f907,0x3223cef8,0xccdfdccc,0x101ccccc,0x999999ff,0x0fd99999,
    0x00000000,0x00000000,0x00000000,0x00000000,0x7d400000,0x7fec006f,
    0xe882ffff,0x51ffffff,0x90dfffff,0xff885fff,0x3fffea6f,0xffffffff,
    0xfff303ff,0xffffffff,0x0000ffff,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,
};

static signed short stb__courier_46_usascii_x[95]={ 0,9,5,3,4,3,5,9,11,5,0,2,5,3,
9,4,4,4,3,3,4,3,5,4,4,5,9,6,0,2,0,0,4,0,1,2,3,1,3,2,2,4,3,1,
2,0,0,0,3,2,1,3,2,1,0,0,1,1,4,0,0,0,4,1,8,2,0,3,2,2,4,2,1,3,
3,3,3,0,2,2,0,2,3,4,2,1,1,1,2,2,4,0,11,0,3, };
static signed short stb__courier_46_usascii_y[95]={ 33,7,8,6,6,7,11,8,8,8,8,11,27,20,
28,5,7,7,7,7,8,8,7,8,7,7,15,15,11,17,11,9,7,9,9,9,9,9,9,9,9,9,9,9,
9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,8,5,8,7,42,6,15,8,15,8,15,8,15,8,7,
7,8,8,15,15,15,15,15,15,15,9,15,15,15,15,15,15,8,8,8,18, };
static unsigned short stb__courier_46_usascii_w[95]={ 0,6,15,18,16,18,16,6,8,8,16,20,10,18,
7,16,16,16,17,18,16,18,16,16,16,16,7,10,20,21,20,15,16,25,22,20,20,21,20,21,21,16,21,23,
21,25,23,21,20,21,24,18,20,22,25,24,22,22,17,7,16,7,16,25,8,21,23,19,22,20,19,21,22,18,
14,21,18,25,21,20,23,22,20,17,20,22,23,23,21,22,16,9,3,9,18, };
static unsigned short stb__courier_46_usascii_h[95]={ 0,27,12,30,31,27,23,13,31,31,15,21,12,3,
6,32,27,26,26,27,25,26,27,26,27,27,19,23,21,9,21,25,29,24,24,25,24,24,24,25,24,24,25,24,
24,24,24,25,24,29,24,25,24,25,24,24,24,24,24,31,32,31,12,3,7,19,26,19,26,19,25,26,25,26,
34,25,25,18,18,19,26,26,18,19,25,19,18,19,18,26,18,31,31,31,7, };
static unsigned short stb__courier_46_usascii_s[95]={ 245,202,162,125,74,183,1,249,91,116,128,
60,241,219,241,33,209,52,153,226,1,134,1,1,18,35,241,245,39,178,18,
190,166,177,154,18,107,85,64,206,18,1,168,194,203,128,40,146,104,144,79,
39,58,228,150,125,218,225,176,108,16,100,145,219,241,120,217,142,171,162,41,
112,104,69,1,61,127,64,230,99,88,18,90,81,83,183,18,206,42,194,111,
60,70,50,200, };
static unsigned short stb__courier_46_usascii_t[95]={ 25,1,164,1,1,1,142,36,1,1,164,
142,91,168,56,1,1,36,36,1,91,36,36,64,36,36,36,1,142,164,142,
64,1,117,117,91,117,117,117,64,117,117,64,91,117,117,117,64,91,1,91,
91,91,64,91,91,91,117,91,1,1,1,164,164,104,142,36,142,36,142,64,
36,64,36,1,64,64,164,142,142,36,64,164,142,64,142,164,142,164,36,164,
1,1,1,164, };
static unsigned short stb__courier_46_usascii_a[95]={ 390,390,390,390,390,390,390,390,
390,390,390,390,390,390,390,390,390,390,390,390,390,390,390,390,
390,390,390,390,390,390,390,390,390,390,390,390,390,390,390,390,
390,390,390,390,390,390,390,390,390,390,390,390,390,390,390,390,
390,390,390,390,390,390,390,390,390,390,390,390,390,390,390,390,
390,390,390,390,390,390,390,390,390,390,390,390,390,390,390,390,
390,390,390,390,390,390,390, };

// Call this function with
//    font: NULL or array length
//    data: NULL or specified size
//    height: STB_FONT_courier_46_usascii_BITMAP_HEIGHT or STB_FONT_courier_46_usascii_BITMAP_HEIGHT_POW2
//    return value: spacing between lines
static void stb_font_courier_46_usascii(stb_fontchar font[STB_FONT_courier_46_usascii_NUM_CHARS],
                unsigned char data[STB_FONT_courier_46_usascii_BITMAP_HEIGHT][STB_FONT_courier_46_usascii_BITMAP_WIDTH],
                int height)
{
    int i,j;
    if (data != 0) {
        unsigned int *bits = stb__courier_46_usascii_pixels;
        unsigned int bitpack = *bits++, numbits = 32;
        for (i=0; i < STB_FONT_courier_46_usascii_BITMAP_WIDTH*height; ++i)
            data[0][i] = 0;  // zero entire bitmap
        for (j=1; j < STB_FONT_courier_46_usascii_BITMAP_HEIGHT-1; ++j) {
            for (i=1; i < STB_FONT_courier_46_usascii_BITMAP_WIDTH-1; ++i) {
                unsigned int value;
                if (numbits==0) bitpack = *bits++, numbits=32;
                value = bitpack & 1;
                bitpack >>= 1, --numbits;
                if (value) {
                    if (numbits < 3) bitpack = *bits++, numbits = 32;
                    data[j][i] = (bitpack & 7) * 0x20 + 0x1f;
                    bitpack >>= 3, numbits -= 3;
                } else {
                    data[j][i] = 0;
                }
            }
        }
    }

    // build font description
    if (font != 0) {
        float recip_width = 1.0f / STB_FONT_courier_46_usascii_BITMAP_WIDTH;
        float recip_height = 1.0f / height;
        for (i=0; i < STB_FONT_courier_46_usascii_NUM_CHARS; ++i) {
            // pad characters so they bilerp from empty space around each character
            font[i].s0 = (stb__courier_46_usascii_s[i]) * recip_width;
            font[i].t0 = (stb__courier_46_usascii_t[i]) * recip_height;
            font[i].s1 = (stb__courier_46_usascii_s[i] + stb__courier_46_usascii_w[i]) * recip_width;
            font[i].t1 = (stb__courier_46_usascii_t[i] + stb__courier_46_usascii_h[i]) * recip_height;
            font[i].x0 = stb__courier_46_usascii_x[i];
            font[i].y0 = stb__courier_46_usascii_y[i];
            font[i].x1 = stb__courier_46_usascii_x[i] + stb__courier_46_usascii_w[i];
            font[i].y1 = stb__courier_46_usascii_y[i] + stb__courier_46_usascii_h[i];
            font[i].advance_int = (stb__courier_46_usascii_a[i]+8)>>4;
            font[i].s0f = (stb__courier_46_usascii_s[i] - 0.5f) * recip_width;
            font[i].t0f = (stb__courier_46_usascii_t[i] - 0.5f) * recip_height;
            font[i].s1f = (stb__courier_46_usascii_s[i] + stb__courier_46_usascii_w[i] + 0.5f) * recip_width;
            font[i].t1f = (stb__courier_46_usascii_t[i] + stb__courier_46_usascii_h[i] + 0.5f) * recip_height;
            font[i].x0f = stb__courier_46_usascii_x[i] - 0.5f;
            font[i].y0f = stb__courier_46_usascii_y[i] - 0.5f;
            font[i].x1f = stb__courier_46_usascii_x[i] + stb__courier_46_usascii_w[i] + 0.5f;
            font[i].y1f = stb__courier_46_usascii_y[i] + stb__courier_46_usascii_h[i] + 0.5f;
            font[i].advance = stb__courier_46_usascii_a[i]/16.0f;
        }
    }
}

#ifndef STB_SOMEFONT_CREATE
#define STB_SOMEFONT_CREATE              stb_font_courier_46_usascii
#define STB_SOMEFONT_BITMAP_WIDTH        STB_FONT_courier_46_usascii_BITMAP_WIDTH
#define STB_SOMEFONT_BITMAP_HEIGHT       STB_FONT_courier_46_usascii_BITMAP_HEIGHT
#define STB_SOMEFONT_BITMAP_HEIGHT_POW2  STB_FONT_courier_46_usascii_BITMAP_HEIGHT_POW2
#define STB_SOMEFONT_FIRST_CHAR          STB_FONT_courier_46_usascii_FIRST_CHAR
#define STB_SOMEFONT_NUM_CHARS           STB_FONT_courier_46_usascii_NUM_CHARS
#define STB_SOMEFONT_LINE_SPACING        STB_FONT_courier_46_usascii_LINE_SPACING
#endif

