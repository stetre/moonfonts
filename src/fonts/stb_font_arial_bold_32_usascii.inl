// Font generated by stb_font_inl_generator.c (4/1 bpp)
//
// Following instructions show how to use the only included font, whatever it is, in
// a generic way so you can replace it with any other font by changing the include.
// To use multiple fonts, replace STB_SOMEFONT_* below with STB_FONT_arial_bold_32_usascii_*,
// and separately install each font. Note that the CREATE function call has a
// totally different name; it's just 'stb_font_arial_bold_32_usascii'.
//
/* // Example usage:

static stb_fontchar fontdata[STB_SOMEFONT_NUM_CHARS];

static void init(void)
{
    // optionally replace both STB_SOMEFONT_BITMAP_HEIGHT with STB_SOMEFONT_BITMAP_HEIGHT_POW2
    static unsigned char fontpixels[STB_SOMEFONT_BITMAP_HEIGHT][STB_SOMEFONT_BITMAP_WIDTH];
    STB_SOMEFONT_CREATE(fontdata, fontpixels, STB_SOMEFONT_BITMAP_HEIGHT);
    ... create texture ...
    // for best results rendering 1:1 pixels texels, use nearest-neighbor sampling
    // if allowed to scale up, use bilerp
}

// This function positions characters on integer coordinates, and assumes 1:1 texels to pixels
// Appropriate if nearest-neighbor sampling is used
static void draw_string_integer(int x, int y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0, cd->t0); glVertex2i(x + cd->x0, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t0); glVertex2i(x + cd->x1, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t1); glVertex2i(x + cd->x1, y + cd->y1);
        glTexCoord2f(cd->s0, cd->t1); glVertex2i(x + cd->x0, y + cd->y1);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance_int;
    }
    glEnd();
}

// This function positions characters on float coordinates, and doesn't require 1:1 texels to pixels
// Appropriate if bilinear filtering is used
static void draw_string_float(float x, float y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0f, cd->t0f); glVertex2f(x + cd->x0f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t0f); glVertex2f(x + cd->x1f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t1f); glVertex2f(x + cd->x1f, y + cd->y1f);
        glTexCoord2f(cd->s0f, cd->t1f); glVertex2f(x + cd->x0f, y + cd->y1f);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance;
    }
    glEnd();
}
*/

#ifndef STB_FONTCHAR__TYPEDEF
#define STB_FONTCHAR__TYPEDEF
typedef struct
{
    // coordinates if using integer positioning
    float s0,t0,s1,t1;
    signed short x0,y0,x1,y1;
    int   advance_int;
    // coordinates if using floating positioning
    float s0f,t0f,s1f,t1f;
    float x0f,y0f,x1f,y1f;
    float advance;
} stb_fontchar;
#endif

#define STB_FONT_arial_bold_32_usascii_BITMAP_WIDTH         256
#define STB_FONT_arial_bold_32_usascii_BITMAP_HEIGHT        132
#define STB_FONT_arial_bold_32_usascii_BITMAP_HEIGHT_POW2   256

#define STB_FONT_arial_bold_32_usascii_FIRST_CHAR            32
#define STB_FONT_arial_bold_32_usascii_NUM_CHARS             95

#define STB_FONT_arial_bold_32_usascii_LINE_SPACING          21

static unsigned int stb__arial_bold_32_usascii_pixels[]={
    0x7665c400,0x0000bcde,0x37a67999,0x1f75402c,0x40bbb2a0,0x13b62ee9,
    0x4cccccc8,0x33333326,0x00009801,0x379db953,0x00020001,0x0bbbae00,
    0x401eeec8,0x00200000,0x676e54c0,0x3ba0001b,0xffda8005,0xffffffff,
    0x7ffc003e,0x0dffff56,0xfd027fdc,0x3f605fff,0x407fee0f,0x27ffffff,
    0x3ffffffb,0x20037c40,0xffffffd8,0xd5002fff,0x3ba1bfff,0x301b103e,
    0x7fc0dfff,0xfffb307f,0xe93bb63b,0xfffb53ee,0xffd3001b,0x3dffffff,
    0x04ff9800,0x3ffffa60,0xfffeeeef,0xff000dff,0x3fffeadf,0x09ff703f,
    0x0bffffee,0xff113fe6,0x3ffffe0d,0x3fffee7f,0xfb5103ff,0xff70017f,
    0xffffffff,0x7e401bff,0xf9ffffff,0x0ffb84ff,0x501fffd0,0xff709fff,
    0xff3fffff,0x5e7ffcbf,0x1effffff,0x3ffffee0,0x4fffffff,0x00bfee00,
    0x05ffffdc,0x1ffff730,0x26dfff00,0x706fffdc,0x3ffa09ff,0xffe81cdf,
    0xf82ffd81,0x264cceff,0x83fffdcc,0xfffffffa,0xffff500c,0xffffbdff,
    0x3fea0bff,0xffffffff,0x7ffec4ff,0x07fff700,0xf983fffb,0xffffffff,
    0x3ffe5fff,0xffffffff,0xfffa80ff,0xfffdefff,0xfb005fff,0xfff7001f,
    0xffd88007,0x80999806,0xff707ffd,0x817ffe09,0xff506ffa,0x00bfff0d,
    0xf987fff3,0xffffffff,0xfffff885,0xffffe982,0x1dffff82,0x89ffffb5,
    0xf100fffd,0xdfff0dff,0x25dfffd0,0x25ffffea,0x89dfffff,0x443ffffc,
    0x882fffff,0x802ffffe,0xff9807ff,0xf900101e,0xfb80009f,0x09ff707f,
    0xfe813ffe,0x0bffe04f,0xf300bfff,0xfffe87ff,0x1fffdffc,0x007fffe4,
    0xf51bfff6,0x3ffa0dff,0x07ffec4f,0x541fffb0,0x7fcc3fff,0xbfffd07f,
    0x4c1ffffc,0x7fec7fff,0x7fec00ff,0x2ffcc06f,0x303ffa20,0xd31bffd9,
    0x03ffa3dd,0xfb85eee8,0x4ffb80ff,0x303fff88,0x7ec03fff,0x02fffc6f,
    0xf31fffcc,0x3adf17ff,0x3ffe25ff,0xfff8803f,0x0bffee3f,0xeba7ffdc,
    0x85eeffff,0x3f63fffa,0x7ffdc0ff,0x4bfff504,0xfd00ffff,0x7fffc1ff,
    0xffff8803,0x00ffee03,0xffa87ff7,0xffdfffff,0x407ff10f,0xffb86fff,
    0x84ffb80f,0xf903fff8,0x7ffb80ff,0x4c02fffc,0x3fea3fff,0x5556f88f,
    0x03fffcc3,0x6c9fff90,0xff301fff,0x3ffff29f,0xff886fff,0x217ffe6f,
    0xf302fffc,0x3fffcbff,0x223fffb0,0x32007fff,0x3f604fff,0x237f401f,
    0xfccffffa,0x7f47ffff,0x21bffe05,0xfb81fffa,0x3fff884f,0x980dffd0,
    0x3ffe1fff,0x3fff9805,0x3e27ffea,0x2fffd406,0x4bfff500,0xf301fffd,
    0x3fff29ff,0xf906ffff,0x5fff51ff,0x205fffb0,0x3fe5fff8,0x3fff206f,
    0x00bfff52,0xf02fffd4,0x3ff980ff,0xf117ffe6,0x6fc8bfff,0x2a1bffe0,
    0xffb82fff,0x81fff984,0x4c05fff8,0x3ffe2fff,0x3fff9805,0x3ebbffe6,
    0x27ffdc06,0x4dfff300,0xf502fffd,0x3fa629ff,0xf3009aff,0x1fff97ff,
    0x205fff90,0x3fe5fff9,0x3fff207f,0x009fff71,0x983fffcc,0x7fe405ff,
    0x203fff61,0x7dc3fffd,0x21bffe07,0xfb85fff8,0x0fffc84f,0x404fff98,
    0x3fe4fff8,0xfff9805f,0x7fffff43,0x1fffec06,0x4ffff300,0xf903fffc,
    0xfffd89ff,0xfeffe800,0xfff704ff,0x97ffea07,0xfb00ffff,0x3fff21ff,
    0x3ffe2004,0x03ffb80f,0xff887ff4,0x3fff703f,0x3fe07fc8,0x9fffb06f,
    0x9327fdc3,0x3ea0dfff,0xfff803ff,0x2017ffe5,0x7cc3fff9,0x1cffffff,
    0x004fffc8,0xfa9fffe6,0x7fc40fff,0x7ffec4ff,0xffffb800,0xfff301ff,
    0x97fffa0d,0xf884ffff,0x3fff27ff,0x3ffe6004,0x803ffb07,0x3ffee6ff,
    0x81fff700,0x3ffe06fe,0xfffff306,0x7c53fee1,0xf501ffff,0xffd005ff,
    0x402fffcd,0xfa83fff9,0x3fffffff,0x002fffdc,0xfe8dfff5,0xffd9cfff,
    0x7fec4fff,0xfff8800f,0x7ff407ff,0xfffd31df,0x7ffffcbf,0x9fffd50c,
    0x002fffdc,0x3a0dfff5,0x24ff807f,0x3f607ffc,0x027fc46f,0x7cc0dfff,
    0x9ff70fff,0x807fffe2,0xd801fffb,0x17ffe7ff,0x40fffe60,0xffffffc8,
    0x1bffea4f,0x45fffb80,0xfffffffa,0x6c4fffef,0xfb000fff,0xfa809fff,
    0xfffeffff,0x3ffe5fff,0xfffeffff,0x3ffea0ff,0x3ffee006,0x405ff885,
    0x3ff63ff8,0x513ffa06,0x7ffc05ff,0xffffd106,0x7c53fee1,0xf500efff,
    0xffb005ff,0x402fffcd,0x4403fff9,0x0fffffff,0xd03ffff3,0x83fffe85,
    0xdffffffa,0x7ec4fff9,0xff5000ff,0xff9003ff,0xff9fffff,0x677ffcbf,
    0x2fffffff,0x00ffffcc,0xa84fffe8,0x3ff803ff,0x7d41bffa,0x1bfe23ff,
    0x320dfff0,0x3ee2dfff,0x3fff6e4f,0x05fff305,0x7fcbffd0,0xfff9805f,
    0x6c77c403,0x3ffa3fff,0x577fd45f,0x301ffffb,0x3e67bfd9,0x7ffec4ff,
    0xdfff5000,0x7fffd400,0x25fff99e,0xfff76fff,0x3ffa01df,0xfffb806f,
    0x01ffc81f,0x3ff24fe8,0x1fffe80f,0xf805ffd1,0xbfff06ff,0xfd09ff70,
    0x3ffe01ff,0x24ffe803,0xf9805fff,0x3e2103ff,0x549fff16,0x3ea3ffff,
    0x5fffffff,0x7fff5000,0x000fffd8,0x0007fffd,0x7ffcc131,0x311bffe5,
    0xbffff500,0x3fffea01,0x001ffd04,0x7ffdcdfb,0x47fffe43,0xf805ffd9,
    0xfff986ff,0xa84ffb82,0xffd01fff,0x47fff009,0xf9805fff,0x5bff63ff,
    0x0fffa6f8,0x35dffffb,0xffffffd3,0x0ccef981,0x6c2fffb8,0x98812fff,
    0x00ffffda,0xbfff3000,0x00037ffc,0x57dffffb,0xfffffb73,0x00dff101,
    0xffe87fea,0xffffecef,0x004fffff,0xff50dfff,0x09ff703f,0x3605fff1,
    0x7fcc05ff,0x017ffe1f,0xfc8fffe6,0xf16f8aff,0xffe885ff,0xffffffff,
    0x7c40efff,0xf531dfff,0xffc81fff,0x7fec7fff,0x0004ffff,0xf97ffe60,
    0x220006ff,0xfffffffe,0x02ffffff,0x22009ff5,0x3ffe65ff,0xfffdefff,
    0x3e003fff,0xfffa86ff,0x884ffb80,0xff703fff,0x0fffa80f,0x26017ffe,
    0x3fea3fff,0xfd9efbff,0xfff900ff,0xffffffff,0x7ec19fff,0xffffffff,
    0xfff984ff,0x7ffe47ff,0x400005ff,0x3fe5fff9,0xfc80006f,0xffffffff,
    0x3ff200ef,0x8fff2002,0xb13efec8,0x4c4159df,0x0dfff009,0xf701fff7,
    0x7fff109f,0x807ffe60,0x7ffc5ffc,0x3fff9805,0x7fffffec,0x4c03ffff,
    0xdfffffed,0x25ffffec,0xffffffe8,0xf700dfff,0x75c1dfff,0x00003dff,
    0x3e5fff98,0x300006ff,0xdfffffdb,0x01ffd007,0x017ffc40,0x0fffcc00,
    0xfb86fff8,0x4ffb80ff,0x7407fff0,0x3ffa03ff,0x402fffc1,0x7443fff9,
    0xffffffff,0x80a98004,0xd981fffc,0x01cefffe,0x00001330,0x66644000,
    0x000f3322,0x0004cc00,0x26000aaa,0x0000cfff,0x2609fff9,0xffc86fff,
    0x209ff707,0x3ea05fff,0x0dff105f,0xf300bfff,0x3ff207ff,0x0002dfff,
    0x0009b300,0x00000000,0x00000000,0x00000000,0x7fffd400,0x2a6201ac,
    0xcb85fffe,0x7515ffff,0x3ee0ffff,0x7fffd04f,0x01ffd015,0xfff05ff7,
    0x5544555d,0x5403fffb,0x000000ef,0x00000000,0x00000000,0x00000000,
    0x10000000,0xdffffffd,0xffffdb9b,0x3ffa07ff,0xfff53fff,0x3fee09ff,
    0xfffff904,0xd07ff505,0x3fffe0df,0x3ffee7ff,0x7c403fff,0x00000006,
    0x00000000,0x00000000,0x00000000,0xeb800000,0xffffffff,0x00cfffff,
    0x4bfffff1,0x00fffffa,0x3e209ff7,0xfd02ffff,0xf02ffa8d,0x5cffffff,
    0x03ffffff,0x3a602f44,0xeeeeeeee,0x06eeeeee,0x00000000,0x00000000,
    0x00000000,0x22000000,0xefffeecb,0xfd8802cd,0x3fea0bdf,0x3fee00be,
    0x17ff6404,0x3f62ffa8,0x3bbbb606,0x3bbbaa6e,0x300002ee,0xffffffff,
    0xffffffff,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x33322000,0xcccccccc,0x0004cccc,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0xdd971000,0x8800379b,
    0x53002bba,0x64001579,0x13bae1ee,0x05999500,0xacddca98,0x3dec9801,
    0x001eea80,0x337b6ea2,0x76e4c002,0x400001cd,0x3322ccc8,0xa880003c,
    0x54c001bb,0x333000ac,0x83333333,0x6c404ccc,0xffffffff,0x7ec401df,
    0x301effff,0x9ffffffd,0x43fff001,0x5c003ffd,0xfb104fff,0x9fffffff,
    0x7ffffdc0,0x01bfa00e,0xffffffb8,0xfc803fff,0x04ffffff,0x3ffe6000,
    0x00dfff14,0xfffffb80,0x7ff4c01f,0x2a00efff,0xffffffff,0x1fffe0ff,
    0xffffff98,0x1fffffff,0xffffff30,0xff883fff,0x5fffffff,0x3e3ffc40,
    0x7dc001ff,0xfffa84ff,0xffffffff,0x5fffc40e,0xff704ffd,0x3fff6005,
    0xffffffff,0x3fffee04,0x003fffff,0x29fff300,0x0006fff8,0x3ffffff2,
    0xfff502ff,0x03ffffff,0x3ffffff2,0x3fe0ffff,0xffff307f,0xffffbdff,
    0xfff01fff,0xdffffbff,0xddffffe8,0x2a03ffff,0x3ffe26ff,0x7ffdc000,
    0x7ffffcc4,0xffffffdf,0xf8a7fdc5,0x00dfd07f,0x37ffffee,0x1fffffec,
    0x265ffff0,0x00007ffe,0x3e29fff3,0xf30006ff,0xfffddfff,0xffffd10d,
    0x20dffffd,0xfffffffd,0x3ffe0fff,0x7ffffd07,0x9ffff930,0x20dfffb8,
    0xff11fffe,0x7ffcc1ff,0x993fee05,0xfb8006ff,0x7fff44ff,0x7ffecc1e,
    0xe8fff21f,0x17fdc0ff,0x82fffe80,0x885ffff9,0x7fd45fff,0xf980000f,
    0xdfff14ff,0x3fff2000,0x70bfff62,0x3a619fff,0xfff82fff,0x2aaaaaae,
    0x7dc0cccc,0x7f401fff,0x7fff47ff,0x98e6f5c0,0xffe84fff,0x3faaaa67,
    0xeffdaacf,0x3fee001a,0x3bffee4f,0x97fffa00,0x3ffa2ffd,0x88037f41,
    0x3ee06fff,0xffff07ff,0x003ffec1,0xa7ffcc08,0x0086fff8,0x2237ffc4,
    0x7fec6fff,0x37ffdc1f,0x000fffe2,0x04fffe80,0x262bde88,0x22005fff,
    0xffe84fff,0x3fffff65,0xffffffff,0x3fee004f,0x0ffffe4f,0x6437bf50,
    0x83ffe3ff,0xf1002ffb,0x32203fff,0xfffb02aa,0x017ffeeb,0x8dfffea8,
    0xff14fff9,0x3fffaadf,0x4fffa80d,0x7fc7ffe8,0xffff887f,0x00bffe60,
    0x7cc5eed8,0x40000fff,0x0663fffa,0xf98fffd0,0x3fff63ff,0xffffffff,
    0x2e004fff,0xfff14fff,0xffb8000f,0xfe8fff14,0x7fff4006,0xf10001cf,
    0xffffdfff,0x3fff2003,0xfffbffff,0xf9dfff14,0x83ffffff,0xfd83fffb,
    0x1bffe0ff,0xf70ffff4,0x159955ff,0xf51fffe0,0x70000dff,0xfff75fff,
    0x3ffe609f,0x0efffddf,0x3bff732e,0xccfffccc,0x3ffee002,0x00dfff34,
    0xdbfff880,0x0bfee5ff,0xfffff700,0x40017bff,0xeffffffb,0xffff7001,
    0xffffffff,0x3ffffe29,0xffffffff,0x20bfff20,0x3fa1fffc,0xffff80ff,
    0x3fffff22,0xff82ffff,0x2fffdc7f,0x7ffe4000,0xeffffffe,0xffffe880,
    0x7fe404ff,0x001bfe64,0xfaa7ffdc,0xc80005ff,0x20ffffff,0xfb0006ff,
    0xffffffff,0xfff9005b,0x22001bff,0xb51dffff,0x3e29ffff,0xb88cffff,
    0x3f24ffff,0xfffc82ff,0x50bfff62,0x7f47ffff,0xffffffff,0x23fffc2f,
    0xf504fffc,0x7fffffff,0x3ffffff6,0x985ffffd,0xdffffffe,0xb8bff600,
    0xf70004ff,0x3fff29ff,0xfb500004,0x17fdc19d,0xffff7000,0x07ffffff,
    0x3fffff62,0xff5000ff,0x3fffa0df,0x05ffff14,0x7ecffff3,0xfffc82ff,
    0x47bffea3,0x23ffffe9,0xfcbdffff,0x3fe0ffff,0x2fffdc7f,0xffffffa8,
    0xffffb3ff,0x17fff449,0xfdbffff5,0x3fe03dff,0x00fff61f,0xba7ffdc0,
    0x00005fff,0xeb8dff00,0x5c400cef,0xfffffffd,0x7fff4c4f,0x366ffffe,
    0x7ffdc0ac,0x29fff702,0x3a07fff8,0xfffb0fff,0x87fff905,0xfffffffd,
    0xb913ffff,0xfffe887d,0xf31fffe4,0x3fea0dff,0x93ffffff,0xfb81ffff,
    0xdfff14ff,0x137ffd43,0x333fff33,0x01335ffd,0xaa7ffdc0,0x00006fff,
    0x362ffb80,0x00efffff,0xfffd9510,0x7ffec1ff,0xcffff98d,0x7ec4fff9,
    0xfff501ff,0x81bffe29,0xff91fffd,0x5fff905f,0xfffffe88,0x002fffdf,
    0xff97ffee,0x07fff87f,0xffb55551,0x17ffee7f,0x7d57ffe6,0xfffd83ff,
    0xffffffb1,0xffffffff,0x7ffdc009,0x00dfff34,0x7fc0002a,0x36bbfea6,
    0xf50003ff,0x3fe23fff,0x7fffdc6f,0x7ec1fffe,0xfff301ff,0x81bffe29,
    0xff92fffc,0x3fff905f,0x277ffae0,0x2001fffc,0x3fe7fff8,0x3fffd87f,
    0x27fff900,0xff05fffa,0x03fff2df,0x7ecfffea,0xffffffff,0x534fffff,
    0xfff90599,0x07fffe27,0x007dff50,0xffb17fdc,0xec9bfea7,0x7fe402ff,
    0x07fff54f,0xdffffffb,0x203fffb0,0xff14fffa,0x7ffec0df,0xb07fff71,
    0xd8001fff,0x22001fff,0x3ffe7fff,0x07fffc87,0x267fff90,0xff987fff,
    0x03fffb5f,0x3b27fff7,0xffeeefff,0xf53eeeef,0xfff909ff,0x02ffff45,
    0x801bfffa,0x8fff46ff,0x3ff27ff8,0x7ffe406f,0x205fff94,0x82fffffe,
    0xf702fffb,0x3ffe29ff,0x1fffd00f,0x3a13ffea,0x7c0207ff,0x97530fff,
    0x4dfff503,0xff987fff,0x3ee00eff,0x3ffa3fff,0xa7ffdc2f,0xfd84fffc,
    0x07ffc2ff,0x3e607ffb,0xfffe86ff,0x0ffffe61,0x01ffffd4,0x7f42ffb8,
    0x543ffe0f,0xf102ffff,0x3fee3fff,0xffff305f,0xbfff505f,0x453fffa0,
    0xf983ffff,0x3ffe27ff,0x22fffcc7,0x7d42ffeb,0x3ffee4ff,0x24fffc85,
    0xff707fff,0x95359fff,0x47fffffd,0xd52efffb,0x3fea3fff,0xfff712ff,
    0x23ffc41f,0xff101ffe,0xffd55fff,0xfffc81ff,0xffeb9adf,0xff000fff,
    0x263ffb0d,0x3ffe27ff,0xfda9bdff,0x3fe67fff,0xff710bff,0xf09fffff,
    0x7ecc9fff,0xfff14fff,0x7ff545ff,0x67ffe43f,0x41fffe88,0xf71efffa,
    0x7fc41fff,0xfff70bff,0x03fffc1f,0xfffffffb,0xbfffffff,0xffffff81,
    0x7ec4ffff,0xffffffff,0x12ffd43f,0xffb80fff,0xffffffff,0xffffe882,
    0xffffffff,0x05ff7001,0x3fea5ff9,0x7ffffcc6,0xffffffff,0x7ffffec3,
    0xffffffff,0x7fdc6fff,0xffffefff,0xffff14ff,0xffffdfff,0xffff981f,
    0xd06fffff,0xffffffff,0xffff90bf,0x89ffffff,0x7dc07fff,0xffffffff,
    0xfd302eff,0x1dffffff,0xfffffe88,0xffc85fff,0x201bfe64,0xfffffffe,
    0x7ffe404f,0x2fffffff,0x4c1bfe00,0x3ffebfff,0xffffffb8,0x882fffff,
    0xfffffffd,0xfffeadff,0xfffffc83,0x14fff9ff,0xfff99fff,0x2a03ffff,
    0xffffffff,0xfffff301,0x7f409fff,0x4fffffff,0x8807fff8,0xefffffeb,
    0xffd8803c,0x7dc03fff,0xb02fffff,0x27fdc5ff,0xfffffb80,0xffb5003e,
    0x0019ffff,0xf9017fdc,0x440bffff,0xeffffffc,0x7ff5401d,0x7e42efff,
    0x3fffee04,0x229fff1e,0xffd73fff,0xfe9801bf,0x4c00dfff,0x03effffe,
    0xefffffa8,0x00ffff02,0x0001a988,0x220004c4,0x55540099,0x0006aa60,
    0x40003331,0xb00009a8,0x9d9500bd,0x0d4c4007,0x80353000,0x00131001,
    0x10003100,0x33100033,0x03310001,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x03333200,
    0x20399970,0x2009bba8,0x2e6005ed,0x3260bced,0xcccccccc,0x2e2ccccc,
    0x97003ccc,0x66644999,0x6664c02c,0x07332e0c,0x00ccccb8,0xcc899991,
    0x993002cc,0x02666499,0x33333260,0xcccccccc,0x999973cc,0x15559999,
    0x00799900,0xccccccb8,0x3e00aaaa,0x7ec00fff,0x7ff442ff,0xfb01efff,
    0xfff5001f,0x7fdc3fff,0xffffffff,0x3ea3ffff,0x7cc02fff,0x7fec3fff,
    0xffd100ff,0x3fffc8bf,0x5fffff10,0x917ffea0,0x3200dfff,0x3ffe5fff,
    0x7ffd4007,0xffffffff,0xffd6ffff,0xffffffff,0x3e203dff,0x7f4006ff,
    0xffffffff,0xffff04ff,0x2fffd801,0x3fffffa6,0xffb83fff,0x7fffc402,
    0x7ffdc7ff,0xffffffff,0x7fec3fff,0x3ff600ff,0xffff886f,0x1ffff905,
    0x505fffa8,0x209fffff,0x7cc3fffc,0xff800fff,0x1fffe2ff,0xfffff500,
    0xffffffff,0x3fffadff,0xffffffff,0xff882fff,0x7ff4006f,0xffffffff,
    0x7ffc1eff,0x7ffec00f,0x37ffff62,0x4c0fffff,0x7fcc04ff,0x7dc29aef,
    0xffffffff,0x443fffff,0xf504ffff,0x3ea03fff,0x7fcc2fff,0xfff983ff,
    0xfffff907,0x07fffa0d,0x300ffffe,0xfff8ffff,0x7ffd4007,0xffffffff,
    0xffd6ffff,0xffffffff,0x881fffff,0x74006fff,0xffffffff,0x7c6fffff,
    0x7ec00fff,0xdfff12ff,0x41fffec1,0x7fd406ff,0x7d40004f,0xff706fff,
    0xfffd01ff,0xefffd809,0x81bfff60,0xfe81ffff,0xf80fffff,0xfff907ff,
    0x4fffc80d,0x0003fffc,0x406fff98,0x9101fffe,0xf885ffff,0x7f4006ff,
    0xffe981ff,0x3fffe2ff,0x97ffec00,0x7d42fffa,0x0ffd85ff,0x00fffee0,
    0xfffff980,0x17fffa00,0x801dfff7,0xf54ffff8,0x7ec03fff,0x7ffc42ff,
    0x7cc2ffff,0xfff306ff,0x7fffc01f,0x043fffc1,0x37ffcc00,0x007fffa0,
    0xf889fffb,0x7f4006ff,0x3ffe01ff,0x03fffe4f,0x885fffb0,0x83fffa81,
    0xeeb82ffb,0x01eeefff,0x3ffffa20,0x7fffcc01,0x05ffff12,0x27fffee0,
    0x5c04ffff,0x7fd44fff,0x5c4fffbf,0x3fa04fff,0xfff303ff,0x26ffff0f,
    0x001dfffd,0xe80dfff3,0x7dc01fff,0x7ffc46ff,0x24eeed86,0x3201fffe,
    0x3ffe5fff,0x7ffec00f,0x3fffd002,0xf909ff30,0x5fffffff,0x7fffec00,
    0xdfff9003,0x0017fff6,0xfffffffd,0xdfff300d,0xff8fffc8,0x17ffec6f,
    0x20dfff70,0xff84fffc,0xfffffaff,0xff9802ff,0x7fff406f,0x27ffe401,
    0xfb1bffe2,0x7ff41dff,0x3fff201f,0x003fffe4,0x4c05fffb,0x203ffffd,
    0xfffc86ff,0x002fffff,0x009ffff9,0x7effffc4,0x4c000fff,0x1fffffff,
    0xf8ffff00,0x1fffb6ff,0x1007fff4,0xfd03ffff,0xffff03ff,0xffffdfff,
    0xdfff300f,0x01fffe80,0x10bfffee,0x7fe4dfff,0x7fff40ff,0x5ffff101,
    0x2007fffc,0x3202fffd,0x7402ffff,0x7e4c40ff,0x80099bff,0x006ffffa,
    0xffffffa8,0xff70003f,0x6c009fff,0xfff31fff,0x44bffee7,0xfe806fff,
    0x7ffcc3ff,0x5fffff06,0x017fffcc,0xd01bffe6,0xdddddfff,0x0dfffffd,
    0x3eedfff1,0xffe81fff,0xfb9999af,0x3fe1ffff,0x7fec00ff,0x3fff602f,
    0x3ff200cf,0x07fff702,0x77fffcc0,0xfffb0000,0x44000dff,0x001fffff,
    0x7dcffff2,0x9fff11ff,0x2013ffea,0x7e46fffb,0xffff03ff,0x05fff707,
    0x406fff98,0xfffffffe,0x0dffffff,0xfaefff88,0xffd01fff,0xffffffff,
    0xfff89fff,0x7ffec01f,0x3ff6ee02,0x9ff502ff,0x00fffee0,0x0fffff44,
    0xffff1000,0x7ec0003f,0x2005ffff,0xffb5fffa,0xf96ffe8f,0xff1005ff,
    0x7fff43ff,0x03ffff00,0x9807fff5,0x7f406fff,0xffffffff,0x3e202cff,
    0x2fffffff,0x3fffffa0,0x5fffffff,0x401fffe8,0x1002fffd,0x3e20dfff,
    0x7fff706f,0x3ffff600,0xffc80002,0x3ea0004f,0x02ffffff,0x3edfff10,
    0x7ffe45ff,0x000fffd8,0x3e69fffb,0x3ffe05ff,0x3fffa80f,0x037ffcc0,
    0x32effffa,0x401efffe,0xfffffff8,0x3fffa05f,0xefffffff,0x03fffd02,
    0x002fffe8,0x7407fff6,0x7fff707f,0x9ffff900,0x3fee0000,0xff10004f,
    0x1fffffff,0x2bfffa00,0x7fd43fff,0x006fffaf,0x7e5bffea,0x3ffe03ff,
    0x09fff507,0x406fff98,0x7e41fffe,0x3e203fff,0xffffffff,0x35fffd02,
    0xfd001333,0xffe803ff,0x3fea001f,0x03ff904f,0xa807fff7,0x0005ffff,
    0x013ffee0,0x4ffffec0,0x9005ffff,0x3fffdfff,0xffefff88,0x7ffc004f,
    0x00fffe9f,0x7d41fffe,0x7fcc04ff,0x7fff406f,0x2ffffe81,0x9fffff10,
    0x3fa0dfff,0xfb0001ff,0x7fc409ff,0x1db971ff,0x209fff90,0xffb83ffa,
    0x3ffe603f,0x200000ef,0x8004fffb,0xf73ffffa,0xf5005fff,0x20ffffff,
    0x2ffffffe,0x77ffe400,0x7fc05fff,0x9fff507f,0x06fff980,0x440ffff4,
    0x880fffff,0xff94ffff,0x3fffd07f,0x3ffee000,0xffff901f,0x7c1fffe4,
    0xff102fff,0x07fff70b,0x07ffffa2,0xfff70000,0xfff88009,0x7ffff46f,
    0x7fffc400,0xfff905ff,0x98001fff,0x2fffffff,0xa83fffc0,0x7cc04fff,
    0x7ff406ff,0xffff701f,0x4dfff10b,0x740ffff8,0x10001fff,0x37bfffff,
    0x49ffffb7,0xb32ffffa,0x7401ffff,0x3fffb87f,0x5bffff90,0x55555555,
    0x3fee0055,0x7fec004f,0x7ffcc1ff,0xfffe805f,0xfff502ff,0x3e000fff,
    0x807fffff,0xff507fff,0xfff9809f,0x0ffff406,0x85ffffb0,0x7e46fff8,
    0x7fff44ff,0x3ff20001,0xffffffff,0x7fec0fff,0xffffffff,0x20ffe402,
    0xfb03fffb,0xffffffff,0x0fffffff,0x013ffee0,0x04ffffa8,0x805ffff7,
    0x00fffffd,0x0bfffff1,0x3ffff200,0x7fff804f,0x809fff50,0x7406fff9,
    0x3e201fff,0x7fc46fff,0x7fffc46f,0x007fffa1,0xfffff900,0x03dfffff,
    0xffffffd1,0xff5009ff,0x03fffb87,0xfffffffb,0xffffffff,0x3ffee00f,
    0xffff1004,0xffffe80d,0x3fffee00,0x7ffff406,0xfff30003,0xfff003ff,
    0x13ffea0f,0x80dfff30,0x5401fffe,0x3e24ffff,0xfffb86ff,0x007fffa5,
    0x3fffa600,0x400cefff,0x1efffffb,0xb8bff100,0xffb03fff,0xffffffff,
    0x00ffffff,0x4013ffee,0x401ffffc,0x205ffff9,0x404ffff9,0x001ffffb,
    0x01ffffa0,0xfa83fffc,0x7fcc04ff,0x7fff406f,0xffffd801,0x20dfff11,
    0xffd2fffe,0x4400003f,0x10001a99,0x2aa00033,0x00000002,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x33200000,0x0199974c,0x991ccc98,0x4c019999,0x553ccccc,0xcb800155,
    0x665400cc,0x3332e4cc,0xcccccccc,0x933320cc,0x5400cccb,0x32201ccc,
    0x2ea200cc,0x999700ab,0x99999999,0x26621999,0x99999999,0x32e00099,
    0xccccb83c,0x0aaabccc,0x33332000,0x79993001,0x7f4fbba6,0xfd7fffef,
    0xffb80bff,0xffffff2f,0x7fffe407,0x05fffd6f,0x01fffe80,0x87ffffe6,
    0xfffffffe,0x20ffffff,0xffd0ffff,0xfffc803f,0x07fff603,0x3fffff66,
    0x7fff40df,0xffffffff,0xfffb1fff,0xffffffff,0x3fe6009f,0xffffe85f,
    0xffffffff,0x7fd4000c,0xff5005ff,0x53ffe6df,0x7fffffff,0x405ffffd,
    0xfff2fffb,0x7f40bfff,0xffd6ffff,0xffe8005f,0xffff301f,0xffffe83f,
    0xffffffff,0x43fffe0f,0x6401fffe,0xff703fff,0xfff983ff,0x0fffffff,
    0x3ffffffa,0xffffffff,0xffffffb1,0x09ffffff,0x0bfffd10,0xfffffffd,
    0x1dffffff,0x7fffec00,0xfffa800f,0x3e9fff36,0xd7ffffff,0x201fffff,
    0xfff2fffb,0x3e20ffff,0xfd6fffff,0xfe8005ff,0xfff881ff,0xfffe82ff,
    0xffffffff,0x3fffe0ff,0x803fffd0,0xf983fffc,0x7f41ffff,0xfffeefff,
    0x3ffffa5f,0xffffffff,0xffffb1ff,0xffffffff,0xffff9009,0xfffffd0b,
    0xffffffff,0x3fe2009f,0xa804ffff,0xfff36fff,0x3fffffe9,0xfffffd7f,
    0x4bffee09,0x1fffffff,0xffffffa8,0x005fffd6,0x441fffe8,0xd02ffffe,
    0xf0003fff,0x3ffa1fff,0x7ffe401f,0x3ffff223,0x3ffe61ff,0x3fffe61e,
    0x003fffd0,0x55555550,0x01dfff75,0x5fffffa8,0x101fffe8,0x200ffff9,
    0x7ffffffc,0x06fffa80,0xfebfffc0,0xb81fffff,0xdfff2fff,0xff907fff,
    0x3fadfffd,0x7f4002ff,0x3ffa21ff,0x3ffa02ff,0xfff8001f,0x03fffd0f,
    0xf73fffc8,0x3fffffff,0x6c27ffe4,0xfffd2fff,0xf9000003,0xff8801ff,
    0xfe85ffff,0x7ffc01ff,0xffff800f,0x5402fffe,0x7c006fff,0xffffd7ff,
    0xfff70dff,0x3f7bffe5,0xfcfff86f,0x5fffd6ff,0x1fffe800,0x00bffffa,
    0x0003fffd,0x3fa1ffff,0x7fe401ff,0xbbfffb3f,0x6e543fff,0x2fffb81e,
    0x0003fffd,0x02fff980,0xfffeffd8,0x01fffe85,0x5403fff4,0xfffadfff,
    0x2fffcc05,0x75fffe00,0x2fffffff,0xff97ffdc,0x20fffbef,0xfffafff8,
    0x005fffd6,0xfb1fffe8,0xfd007fff,0xff0003ff,0x3fffa1ff,0x9fffe401,
    0xfff91efd,0xfffe8003,0x003fffd1,0x05ffe800,0xff9fffa8,0x1fffe85f,
    0x017ffe60,0x3e2bfff6,0x3e600fff,0x7fc004ff,0xf7fffd7f,0x7fdc1fff,
    0xf3dfff2f,0x7ffdc5ff,0xffd6fff8,0xffe8005f,0x5ffffd9f,0x35fffd00,
    0x01333333,0x3fa1ffff,0xaaaaabff,0xb3fffdaa,0x01fffc87,0xe9fffe20,
    0xaaaabfff,0x801aaaaa,0x4401fffb,0xbfff3fff,0x557fffd0,0xffff9555,
    0x7fff8803,0x8813fff6,0x7c003fff,0x2fffd7ff,0x3ee4fffe,0x2dfff2ff,
    0x3ff64fff,0x3fadfff6,0x7f4002ff,0xfffffeff,0xfffe800f,0xffffffff,
    0xd0ffff86,0xffffffff,0x7fffffff,0x00fffe40,0x747fffd0,0xffffffff,
    0x803fffff,0xfd806fff,0x217ffe6f,0xfffffffe,0x01efffff,0x264fffb8,
    0x7fc07fff,0x7ffc003f,0x3e6fffd7,0xfff71fff,0x7edbffe5,0x7d3ffe6f,
    0x5fffd6ff,0xffffe800,0x05ffffff,0xffffffe8,0xf86fffff,0xfffd0fff,
    0xffffffff,0x6407ffff,0xfb001fff,0xfffe8dff,0xffffffff,0x7fd403ff,
    0x7ffd402f,0x3a17ffe1,0xffffffff,0x800effff,0x7fc1fffe,0x3ffa02ff,
    0xbfffc002,0x3ff27ffe,0x25fff76f,0xfff76fff,0x3e5fff31,0x5fffd6ff,
    0xffffe800,0x3ffffdff,0x7fffff40,0x86ffffff,0xffd0ffff,0xffffffff,
    0x407fffff,0xd801fffc,0x7f41ffff,0xffffffff,0x7403ffff,0x7fc407ff,
    0x42fffc3f,0xfffffffe,0x3fffffff,0x21bffe60,0x3a05fffc,0x9fff31ff,
    0x7f5fffe0,0x3fffe27f,0xff2fffbb,0x2bffe6df,0xfff0fffb,0x00bfffad,
    0x7fffffd0,0x803ffff6,0x999afffe,0xff809999,0x3fffd0ff,0x03fffc80,
    0x8807fff2,0xe82ffffe,0x80001fff,0x6c04fff9,0x5fff86ff,0x981fffe8,
    0x03ffffc9,0x3339fff9,0x01ffff53,0x7fcc3ff6,0x2ffff04f,0x7fd47ffe,
    0xf2fffcff,0x67ffcdff,0x3ffe6ffd,0x005fffd6,0x24ffffe8,0x205ffff8,
    0x8001fffe,0xffd0ffff,0xfffc803f,0x07fff203,0x02ffffd8,0x0003fffd,
    0x403fff90,0xcccdfffa,0x0ccefffc,0xb803fffd,0xfff05fff,0xffffffff,
    0x3f209fff,0x413ffe67,0xfffd7fff,0xffffffb0,0xd9bffe5f,0x24ffffff,
    0xfffd6fff,0xfffe8005,0x2ffffb84,0x003fffd0,0x3a1ffff0,0x7e401fff,
    0x3ff203ff,0xffffb01f,0x0ffff405,0x2fff4000,0x3ffffee0,0xffffffff,
    0x03fffd1f,0x40ffff88,0xfffffffa,0x7fffffff,0x7fccff70,0x2ffff04f,
    0xff987ffe,0xff2fffff,0x7fffdcdf,0x5bffe2ff,0x4002fffe,0xfd01fffe,
    0xffd01fff,0xfff0003f,0x07fffa1f,0x407fff90,0xfd81fffc,0x7f401fff,
    0x440001ff,0x7dc03fff,0xffffffff,0xfd1fffff,0xff9803ff,0x7ffec0ff,
    0xffffffff,0xea82ffff,0xff03fb85,0x41fffaff,0x2ffffffc,0x7fccdfff,
    0x3fe0ffff,0x05fffd6f,0x01fffe80,0xd0bffff5,0xf0003fff,0x3ffa1fff,
    0x7ffe401f,0x07fff203,0x005ffff7,0x0003fffd,0x402fffb8,0xeeeeeeea,
    0x1eeffffe,0xc803fffd,0x7fc47fff,0xaaaaaaff,0x05fffdaa,0xff80ff40,
    0x40fffd7f,0xf2fffffe,0xffff8dff,0xeb7ffc6f,0xaaaacfff,0xfd1aaaaa,
    0x7ff403ff,0x7fff42ff,0xffff8001,0x803fffd0,0x3203fffc,0x3fe21fff,
    0xcccccfff,0x7fffd1cc,0x55555555,0xfff90355,0xfff00003,0x57fffd0b,
    0xffd95555,0xfffc89ff,0xffff9804,0x453ffe60,0x3ffe05fd,0x540fffd7,
    0xff2fffff,0xffffd8df,0xfeb7ffc4,0xffffffff,0xffd4ffff,0x7ffcc03f,
    0x3fffa0ff,0xffff8001,0x803fffd0,0x3203fffc,0x3fea1fff,0xffffffff,
    0xffffd3ff,0xffffffff,0xfffb09ff,0xfff00001,0xfffffd0b,0xffffffff,
    0xffff81df,0x9fffd001,0xfaa7ffcc,0x5fffe00d,0x7ec07ffe,0xdfff2fff,
    0x42ffffb8,0xfffd6fff,0xffffffff,0x3fffa9ff,0x7fffe401,0x007fffa4,
    0x743fffe0,0x7e401fff,0x3ff203ff,0x3ffff61f,0xffffffff,0xffffffd3,
    0xffffffff,0x00fffd09,0x217ffe00,0xfffffffe,0x1fffffff,0x003fffd4,
    0x7ccffff7,0x3e00a4ff,0x0fffd7ff,0xf2ffff88,0xfff98dff,0xeb7ffc0f,
    0xffffffff,0xfd4fffff,0xff8803ff,0xfffd1fff,0xffff0003,0x007fffa1,
    0x6407fff9,0xfff11fff,0xffffffff,0x3fffa7ff,0xffffffff,0xfff84fff,
    0xfff00006,0xfffffd0b,0x5bdfffff,0x013fff60,0x32ffff88,0x00009fff,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x20000000,0x02bccba8,0x33333332,0x00009aab,0x00800026,
    0x30000c00,0x00040003,0x571b8800,0x5eee8000,0x405ddd50,0x20001998,
    0x00008000,0x64010022,0xddd906ee,0x81ddd901,0xfffffffb,0xfffff82e,
    0x3fffffff,0xffffb300,0xfb3005bf,0x88019dff,0x0cffffec,0x3ffff220,
    0x65400cff,0x001deffe,0xc97fe4c0,0xf8000bff,0xfff706ff,0x07ffdc07,
    0xb15ddd10,0x3bb63bff,0x5dfffb33,0xd71eee98,0xfec87dff,0x7ffdc2df,
    0x17fffc42,0x3f637ffc,0xffffffff,0x7ffffc3f,0xffffffff,0x3ffee01e,
    0x03ffffff,0x3ffffff2,0xfff502ff,0x03ffffff,0xfffffff1,0x3fa01dff,
    0x3fffffff,0xfffea800,0x9ffff92f,0x37ffc003,0x203fffb8,0x2200fffb,
    0xfffdcfff,0xf59fff0f,0x47ffffff,0xffdbfff9,0xfe8bffff,0x222fffff,
    0x7fd44fff,0x7ffcc4ff,0x37fffee3,0x2ffffdbb,0x3ffffffe,0xffffffff,
    0xeffff980,0x81ffffed,0xfffffffb,0x7fcc1fff,0xffffffff,0x7ffff40f,
    0x85fffffe,0xfffffffd,0xb8804fff,0x2fffffff,0xbffffff9,0x0dfff005,
    0xb80fffee,0x3e200fff,0x6fffffff,0x3ffffffe,0x30fffffe,0xfdffffff,
    0xffffffff,0x741fffff,0x7ffe46ff,0x0fffe47f,0xf503ffff,0x7fffcdff,
    0xffffd981,0x40fffc84,0x7c45fff9,0xfb88bfff,0x7fff45ff,0x7fffb32d,
    0x506fffd4,0xffd8ffff,0xffda8cff,0xff9301ff,0x45bfffff,0xfffffeb8,
    0xfff00bef,0x0fffee0d,0x200fffb8,0xacfffff8,0x3ffffe3d,0x4bfffe62,
    0x20effff9,0x30effffe,0x7dc5fffd,0x3fffa0ff,0x9bffa0ff,0x3a05fff9,
    0x3fffe7ff,0x3fffea01,0x417ffec1,0x9fff901a,0x2a3fffb0,0xff986fff,
    0x40654c4e,0x3fe27ffe,0xfffb80ff,0x7fffed46,0x4c00cfff,0xfffffffc,
    0x837ffc1c,0x2e03fffb,0x3e200fff,0x3fe04fff,0xfffc83ff,0x81ffff33,
    0x5c1ffffa,0x3fe63fff,0xfdfff13f,0x93ffe27f,0x3601cca8,0xffff0fff,
    0x4fffd803,0x6fffffdc,0x7ffec00b,0x73fffa81,0x00207fff,0x3fffae20,
    0x407fff50,0xff90fffe,0x005bffff,0xffffd710,0x37ffc5ff,0xfd3fffb8,
    0xffffffff,0x3e27ffff,0x3fe00fff,0xfffb80ff,0x30ffff33,0xff50dfff,
    0x55ffe89f,0x2bff9dff,0x8001fffb,0x3fe5fff9,0x7fd401ff,0x7fffc45f,
    0x80beffff,0xccccfffe,0xf93fffcc,0x440005ff,0xffffffdb,0x05fff90f,
    0xfc8fffec,0x0000bfff,0x5ffff930,0xfb837ffc,0xffffd3ff,0xffffffff,
    0x1fffe27f,0x2a0ffff0,0xfff34fff,0x0dfff30d,0xfc89fff5,0xf39ff97f,
    0x01bff6ff,0x8ffffa60,0x4c01ffff,0xff986fff,0xffffffff,0x7fffffc2,
    0x4fffffff,0x0003fffb,0xffffffd1,0x3f61ffff,0x3ff201ff,0xdffff92f,
    0xd7100005,0x7fc5ffff,0x7fff707f,0x3ffffffa,0x3fffffff,0xf80dfff1,
    0xfff507ff,0x217ffe69,0xfa85fff9,0x7ffcc4ff,0xfff2ffe9,0x8009fff3,
    0x7c5ffff9,0x7c401fff,0x3f6a07ff,0x0fffffff,0x3bbbfffe,0xb4eeeeee,
    0x88005fff,0x8aceffff,0xff90fffd,0x7ffec03f,0xffffff71,0xd980039f,
    0x1fffffff,0x7e41fffe,0xdddd93ff,0xddddfffd,0x1bffe25d,0x2a0ffff0,
    0xfff34fff,0x09fff30b,0xff09fff5,0x361fffbf,0x01fffdff,0x17fffe60,
    0x2007fffe,0x9800ffff,0x22ffffeb,0x2001fffe,0x7703fffb,0x1fffe415,
    0xfa87fff4,0x3ffa03ff,0x3ffee20f,0x00beffff,0xfffffd71,0xfffd05df,
    0x07fffd01,0x1007ffdc,0xff80dfff,0x9fff507f,0x2617ffe6,0xffa84fff,
    0xffffc84f,0x3fffee6f,0x3fe2007f,0xffff04ff,0xffff8803,0x64172ea0,
    0x3ff63fff,0x09aca84f,0xf30dfff5,0x7fff4fff,0x10ffff80,0x3ea0dfff,
    0x3faa06ff,0x0cffffff,0xffffffb3,0x7fec03bf,0x7fffe44f,0x03ffee03,
    0x406fff88,0xff507fff,0x17ffe69f,0x2a13ffe6,0xffa84fff,0x3fe64fff,
    0x32004fff,0x3fe04fff,0x7fcc01ff,0x17fffc7f,0xf30fffec,0x7fc45fff,
    0x3fffa0ff,0x9fffb32d,0x3217fff4,0x3fa0ffff,0xff913eff,0xf93005ff,
    0x325fffff,0x0cffffff,0xeffffb80,0x3ffffffd,0x803ffee0,0x7c06fff8,
    0xfff507ff,0x217ffe69,0xfa84fff9,0xffff04ff,0xfffff85f,0x1bffa002,
    0x803ffff0,0x7dc6fffa,0xffdcefff,0xfffd86ff,0x2ffffdef,0x7fffffd4,
    0x320fffff,0xfecdffff,0x3a21ffff,0xffffffff,0x644005ff,0xff92ffff,
    0xfd0005df,0xf3dfffff,0x7fdc07ff,0x3ffe200f,0x83fffc06,0xff34fffa,
    0x9fff30bf,0x209fff50,0x6c0ffffd,0x7c007fff,0x7ffc04ff,0x7ffdc01f,
    0xfffffc85,0xb00fffff,0xffffffff,0x3fffee0b,0x441fffff,0xffffffff,
    0x7442fffd,0xffffffff,0x3aa0000c,0x003bf92f,0x7fffec40,0x03fff88d,
    0x8803ffee,0x7fc06fff,0x9fff507f,0x2617ffe6,0xffa84fff,0xdfff504f,
    0x00bfff70,0x7c03eee8,0x7fc01fff,0xffb503ff,0x8019ffff,0x2dffffeb,
    0x7fffecc0,0xffb300df,0xfff11bff,0xfffb710b,0x400005df,0x00001519,
    0x00000098,0x80dfff10,0xff507fff,0x17ffe69f,0x2a13ffe6,0x00004fff,
    0xff000000,0x3f2203ff,0x333006ff,0x00660001,0x1000ccc0,0x33000033,
    0x00000000,0x00000000,0x00000000,0x00000000,0xff000000,0xffff80df,
    0xffccaaab,0x00001fff,0x00000000,0x00000000,0xdb277744,0xdddddddd,
    0x3bba63dd,0x5eeec82e,0xb80bbbae,0x3a602eee,0x000000ee,0xff80fb20,
    0x2799936f,0x950cccc8,0x55554599,0x7c001aaa,0x7ffc06ff,0xffffffff,
    0x00005fff,0x00000000,0x00000000,0x3e5fff88,0xffffffff,0x3ff21fff,
    0x3ffea0ff,0x17ffe61f,0x200ffff8,0x3a04fffd,0xffffffff,0xb03fffff,
    0xb7ffc07f,0xff16fffb,0x3fff61ff,0x3fffffe4,0x7ffc004f,0x7ffffc06,
    0xffffffff,0x00000003,0x00000000,0xf1000000,0x7fffcbff,0xffffffff,
    0x8affff41,0xfe83ffff,0xfffa80ff,0x3fffe604,0xffffd00f,0xffffffff,
    0x3fc85c7f,0x76fff871,0x3fe2dfff,0x9fffb0ff,0x7ffffffc,0x37ffc004,
    0x3fffffe0,0x00bdefff,0x00000000,0x00000000,0x3fe20000,0x2aaaaa5f,
    0x85ffffca,0xfcaffff9,0xfff705ff,0x03fffb07,0x1fffffec,0xffffffe8,
    0x3fffffff,0x97fb9ff3,0xb7ffc1ff,0xff16fffb,0x3fff61ff,0x3fffffe4,
    0x0000004f,0x00000000,0x00000000,0x00000000,0xfffd1000,0x3ffee01d,
    0x100fffff,0xff88dfff,0x3ffe206f,0x99707ffe,0x99999999,0x3fea5999,
    0x2fffffff,0xfffaafcc,0xfc9fffe5,0x2eeee3ff,0x00002bbb,0x00000000,
    0x00000000,0x00000000,0xfe880000,0x7ec00fff,0x402fffff,0x3ee1fffd,
    0x3ff203ff,0x002fff9f,0x3ff26000,0x4fc809bf,0x7f49fff1,0x07ffea6f,
    0x00000000,0x00000000,0x00000000,0x00000000,0xffffd800,0xffff8801,
    0xfff9804f,0x403fffa4,0xffd4fff8,0x4400000d,0xf905fffe,0x917ffc1f,
    0x7ffccbff,0x00000000,0x00000000,0x00000000,0x00000000,0xfff90000,
    0x7fe4005f,0xffd002ff,0x813ffe2f,0xff50fffc,0xeeeec85f,0xeeeeeeee,
    0x27bfa22e,0x0f7c44ff,0xeea87bb2,0x0002f743,0x00000000,0x00000000,
    0x00000000,0x80000000,0x003ffffb,0x3fffffe6,0xafffb800,0xf101fffb,
    0x5fff8bff,0x7ffffff4,0x3fffffff,0x7fdc7fea,0x00000140,0x00000000,
    0x00000000,0x00000000,0x00000000,0xffffa800,0x3ffa2004,0x8805ffff,
    0x6ffecfff,0x90bffee0,0x7ff43fff,0xffffffff,0x224c3fff,0x6dc4000c,
    0xd89c02cd,0x00000eee,0x00000000,0x00000000,0x00000000,0xff300000,
    0xfc8009ff,0x3ffffdff,0xfffffd80,0x1fffe03f,0xec97ffe6,0xeeeeeeee,
    0x0002eeee,0xfffff980,0x97aa1cff,0x0004fff9,0x00000000,0x00000000,
    0x00000000,0x3fe20000,0xfffff15f,0x35555555,0xb8ffffa8,0x4c01ffff,
    0x00ffffff,0x2a035551,0x000002aa,0xffff0000,0xffffffff,0xfff98bff,
    0x00000000,0x00000000,0x00000000,0x00000000,0x3eebfff1,0xffffffff,
    0x3fe25fff,0x3fff62ff,0xffffe806,0x00000005,0xf0000000,0xfffffdff,
    0x50bfffff,0x000007ff,0x00000000,0x00000000,0x00000000,0x57ffe200,
    0xfffffffb,0x365fffff,0x7fc45fff,0x7fdc04ff,0x000001ff,0x00000000,
    0x764c17f0,0x00dfffff,0x00000353,0x00000000,0x00000000,0x00000000,
    0x57ffe200,0xfffffffb,0xf75fffff,0xff701fff,0x7fc403ff,0x0000006f,
    0x00000000,0x37993006,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
};

static signed short stb__arial_bold_32_usascii_x[95]={ 0,2,1,0,0,1,1,1,1,0,0,1,1,0,
2,-1,1,2,0,1,0,1,1,1,1,0,2,2,1,1,1,1,0,0,2,1,2,2,2,1,2,1,0,2,
2,2,2,1,2,1,2,1,0,2,-1,0,0,-1,0,2,-1,0,1,-1,0,1,1,1,1,0,0,1,2,2,
-2,1,2,1,2,1,1,1,1,0,0,1,0,0,0,0,0,0,2,0,0, };
static signed short stb__arial_bold_32_usascii_y[95]={ 25,4,4,4,2,4,4,4,4,4,4,7,21,15,
21,4,4,4,4,4,4,4,4,4,4,4,10,10,7,9,7,4,4,4,4,4,4,4,4,4,4,4,4,4,
4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,28,4,9,4,9,4,9,4,9,4,4,
4,4,4,9,9,9,9,9,9,9,4,10,10,10,10,10,10,4,4,4,12, };
static unsigned short stb__arial_bold_32_usascii_w[95]={ 0,5,12,16,15,24,20,5,8,9,11,15,5,9,
4,9,14,10,15,14,16,15,14,14,14,15,5,5,15,15,15,16,28,21,18,19,18,16,15,20,17,6,14,19,
15,20,17,21,16,21,19,17,17,17,21,28,20,21,17,8,9,8,15,18,7,14,16,15,15,15,11,15,14,4,
8,15,4,23,14,16,16,15,11,15,10,15,16,23,16,16,14,11,4,11,16, };
static unsigned short stb__arial_bold_32_usascii_h[95]={ 0,21,8,22,26,22,22,8,28,28,10,16,9,5,
4,22,22,21,21,22,21,22,22,21,22,22,15,20,16,11,16,21,28,21,21,22,21,21,21,22,21,21,22,21,
21,21,21,22,21,24,21,22,21,22,21,21,21,21,21,27,22,27,12,3,5,17,22,17,22,17,21,23,21,21,
28,21,21,16,16,17,22,22,16,17,22,16,15,15,15,22,15,28,28,28,6, };
static unsigned short stb__arial_bold_32_usascii_s[95]={ 252,239,222,52,105,104,147,235,68,77,204,
165,216,241,251,242,201,122,133,19,181,232,22,166,37,216,117,245,117,188,133,
1,1,217,198,84,18,149,81,1,104,97,69,61,45,24,6,220,237,121,201,
129,183,1,146,117,96,74,56,87,34,96,172,121,239,85,184,69,168,53,44,
143,168,248,30,221,1,208,193,100,203,187,181,37,159,149,155,232,138,170,123,
56,51,39,222, };
static unsigned short stb__arial_bold_32_usascii_t[95]={ 1,76,115,30,1,30,30,115,1,1,115,
98,115,115,76,1,30,76,76,53,76,30,30,76,30,30,115,76,98,115,98,
98,1,76,76,30,98,76,76,30,76,76,30,76,76,76,76,1,53,1,53,
30,53,53,53,53,53,53,53,1,53,1,115,26,124,98,30,98,30,98,53,
1,53,30,1,53,76,98,98,98,1,1,98,98,1,98,115,98,115,1,115,
1,1,1,124, };
static unsigned short stb__arial_bold_32_usascii_a[95]={ 127,153,217,255,255,407,331,109,
153,153,178,268,127,153,127,127,255,255,255,255,255,255,255,255,
255,255,153,153,268,268,268,280,447,331,331,331,331,306,280,356,
331,127,255,331,280,382,331,356,306,356,331,306,280,331,306,433,
306,306,280,153,127,153,268,255,153,255,280,255,280,255,153,280,
280,127,127,255,127,407,280,280,280,280,178,255,153,280,255,356,
255,255,229,178,128,178,268, };

// Call this function with
//    font: NULL or array length
//    data: NULL or specified size
//    height: STB_FONT_arial_bold_32_usascii_BITMAP_HEIGHT or STB_FONT_arial_bold_32_usascii_BITMAP_HEIGHT_POW2
//    return value: spacing between lines
static void stb_font_arial_bold_32_usascii(stb_fontchar font[STB_FONT_arial_bold_32_usascii_NUM_CHARS],
                unsigned char data[STB_FONT_arial_bold_32_usascii_BITMAP_HEIGHT][STB_FONT_arial_bold_32_usascii_BITMAP_WIDTH],
                int height)
{
    int i,j;
    if (data != 0) {
        unsigned int *bits = stb__arial_bold_32_usascii_pixels;
        unsigned int bitpack = *bits++, numbits = 32;
        for (i=0; i < STB_FONT_arial_bold_32_usascii_BITMAP_WIDTH*height; ++i)
            data[0][i] = 0;  // zero entire bitmap
        for (j=1; j < STB_FONT_arial_bold_32_usascii_BITMAP_HEIGHT-1; ++j) {
            for (i=1; i < STB_FONT_arial_bold_32_usascii_BITMAP_WIDTH-1; ++i) {
                unsigned int value;
                if (numbits==0) bitpack = *bits++, numbits=32;
                value = bitpack & 1;
                bitpack >>= 1, --numbits;
                if (value) {
                    if (numbits < 3) bitpack = *bits++, numbits = 32;
                    data[j][i] = (bitpack & 7) * 0x20 + 0x1f;
                    bitpack >>= 3, numbits -= 3;
                } else {
                    data[j][i] = 0;
                }
            }
        }
    }

    // build font description
    if (font != 0) {
        float recip_width = 1.0f / STB_FONT_arial_bold_32_usascii_BITMAP_WIDTH;
        float recip_height = 1.0f / height;
        for (i=0; i < STB_FONT_arial_bold_32_usascii_NUM_CHARS; ++i) {
            // pad characters so they bilerp from empty space around each character
            font[i].s0 = (stb__arial_bold_32_usascii_s[i]) * recip_width;
            font[i].t0 = (stb__arial_bold_32_usascii_t[i]) * recip_height;
            font[i].s1 = (stb__arial_bold_32_usascii_s[i] + stb__arial_bold_32_usascii_w[i]) * recip_width;
            font[i].t1 = (stb__arial_bold_32_usascii_t[i] + stb__arial_bold_32_usascii_h[i]) * recip_height;
            font[i].x0 = stb__arial_bold_32_usascii_x[i];
            font[i].y0 = stb__arial_bold_32_usascii_y[i];
            font[i].x1 = stb__arial_bold_32_usascii_x[i] + stb__arial_bold_32_usascii_w[i];
            font[i].y1 = stb__arial_bold_32_usascii_y[i] + stb__arial_bold_32_usascii_h[i];
            font[i].advance_int = (stb__arial_bold_32_usascii_a[i]+8)>>4;
            font[i].s0f = (stb__arial_bold_32_usascii_s[i] - 0.5f) * recip_width;
            font[i].t0f = (stb__arial_bold_32_usascii_t[i] - 0.5f) * recip_height;
            font[i].s1f = (stb__arial_bold_32_usascii_s[i] + stb__arial_bold_32_usascii_w[i] + 0.5f) * recip_width;
            font[i].t1f = (stb__arial_bold_32_usascii_t[i] + stb__arial_bold_32_usascii_h[i] + 0.5f) * recip_height;
            font[i].x0f = stb__arial_bold_32_usascii_x[i] - 0.5f;
            font[i].y0f = stb__arial_bold_32_usascii_y[i] - 0.5f;
            font[i].x1f = stb__arial_bold_32_usascii_x[i] + stb__arial_bold_32_usascii_w[i] + 0.5f;
            font[i].y1f = stb__arial_bold_32_usascii_y[i] + stb__arial_bold_32_usascii_h[i] + 0.5f;
            font[i].advance = stb__arial_bold_32_usascii_a[i]/16.0f;
        }
    }
}

#ifndef STB_SOMEFONT_CREATE
#define STB_SOMEFONT_CREATE              stb_font_arial_bold_32_usascii
#define STB_SOMEFONT_BITMAP_WIDTH        STB_FONT_arial_bold_32_usascii_BITMAP_WIDTH
#define STB_SOMEFONT_BITMAP_HEIGHT       STB_FONT_arial_bold_32_usascii_BITMAP_HEIGHT
#define STB_SOMEFONT_BITMAP_HEIGHT_POW2  STB_FONT_arial_bold_32_usascii_BITMAP_HEIGHT_POW2
#define STB_SOMEFONT_FIRST_CHAR          STB_FONT_arial_bold_32_usascii_FIRST_CHAR
#define STB_SOMEFONT_NUM_CHARS           STB_FONT_arial_bold_32_usascii_NUM_CHARS
#define STB_SOMEFONT_LINE_SPACING        STB_FONT_arial_bold_32_usascii_LINE_SPACING
#endif

