// Font generated by stb_font_inl_generator.c (4/1 bpp)
//
// Following instructions show how to use the only included font, whatever it is, in
// a generic way so you can replace it with any other font by changing the include.
// To use multiple fonts, replace STB_SOMEFONT_* below with STB_FONT_arial_21_latin1_*,
// and separately install each font. Note that the CREATE function call has a
// totally different name; it's just 'stb_font_arial_21_latin1'.
//
/* // Example usage:

static stb_fontchar fontdata[STB_SOMEFONT_NUM_CHARS];

static void init(void)
{
    // optionally replace both STB_SOMEFONT_BITMAP_HEIGHT with STB_SOMEFONT_BITMAP_HEIGHT_POW2
    static unsigned char fontpixels[STB_SOMEFONT_BITMAP_HEIGHT][STB_SOMEFONT_BITMAP_WIDTH];
    STB_SOMEFONT_CREATE(fontdata, fontpixels, STB_SOMEFONT_BITMAP_HEIGHT);
    ... create texture ...
    // for best results rendering 1:1 pixels texels, use nearest-neighbor sampling
    // if allowed to scale up, use bilerp
}

// This function positions characters on integer coordinates, and assumes 1:1 texels to pixels
// Appropriate if nearest-neighbor sampling is used
static void draw_string_integer(int x, int y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0, cd->t0); glVertex2i(x + cd->x0, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t0); glVertex2i(x + cd->x1, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t1); glVertex2i(x + cd->x1, y + cd->y1);
        glTexCoord2f(cd->s0, cd->t1); glVertex2i(x + cd->x0, y + cd->y1);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance_int;
    }
    glEnd();
}

// This function positions characters on float coordinates, and doesn't require 1:1 texels to pixels
// Appropriate if bilinear filtering is used
static void draw_string_float(float x, float y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0f, cd->t0f); glVertex2f(x + cd->x0f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t0f); glVertex2f(x + cd->x1f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t1f); glVertex2f(x + cd->x1f, y + cd->y1f);
        glTexCoord2f(cd->s0f, cd->t1f); glVertex2f(x + cd->x0f, y + cd->y1f);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance;
    }
    glEnd();
}
*/

#ifndef STB_FONTCHAR__TYPEDEF
#define STB_FONTCHAR__TYPEDEF
typedef struct
{
    // coordinates if using integer positioning
    float s0,t0,s1,t1;
    signed short x0,y0,x1,y1;
    int   advance_int;
    // coordinates if using floating positioning
    float s0f,t0f,s1f,t1f;
    float x0f,y0f,x1f,y1f;
    float advance;
} stb_fontchar;
#endif

#define STB_FONT_arial_21_latin1_BITMAP_WIDTH         256
#define STB_FONT_arial_21_latin1_BITMAP_HEIGHT        128
#define STB_FONT_arial_21_latin1_BITMAP_HEIGHT_POW2   128

#define STB_FONT_arial_21_latin1_FIRST_CHAR            32
#define STB_FONT_arial_21_latin1_NUM_CHARS            224

#define STB_FONT_arial_21_latin1_LINE_SPACING          14

static unsigned int stb__arial_21_latin1_pixels[]={
    0x4c1c9a5c,0x80990002,0x40fa601b,0x0274c02a,0x20262110,0xbd502aa9,
    0x98016540,0xed800110,0x03d90002,0xd700aaa6,0x500aa003,0x40015997,
    0x101913c9,0x2e600377,0x5554402c,0x1910aaaa,0x2afb1762,0x40036c2f,
    0x01a603fa,0x01a601db,0xb74007ee,0x6ffd82fa,0x704fcf98,0x3f9805ff,
    0x67e400dd,0x1fcc001f,0x880fff90,0x20db006e,0xffddfffb,0xa7fc403f,
    0x777e40f9,0x3ffea06f,0xffc84ffe,0x30ffffff,0x5517d41f,0x00db02a2,
    0x02d809d0,0x07b007a2,0x57200790,0x207d81ea,0x7403d55d,0x5c974c05,
    0x1765d300,0x32009700,0x801d8807,0x0dff442a,0xf701fdcc,0x9f107cc3,
    0x6fcc17d4,0x4c7f930a,0xed9affff,0x09703e61,0x00006d80,0x0054c7a8,
    0x260f9853,0xa98a600a,0x47d8a600,0x20a600a9,0x65d4405d,0x9751000a,
    0x2ea20015,0x03e400ac,0x00159751,0xf5003fd0,0x1f31ee07,0x10b217cc,
    0x43fa01df,0xdb1ffffc,0x26a20f98,0xb0eb80eb,0xb85bdb3d,0x3a0eb80e,
    0xfb00fdc4,0x00fdc9d0,0xb00fdcfb,0x07ee3ecf,0x206d87d8,0xeffefffa,
    0x3bffea00,0x3ea00eff,0x00effeff,0x3ffea0f9,0xb900effe,0x9db517dc,
    0x6407d52a,0x3fa07cc7,0x300fdc01,0x3ffffa17,0x20f98db1,0xe83f9bf9,
    0x3afbff65,0x3a0fe62f,0x3f707e65,0x73e43ec0,0xf73ec03f,0x8fb3ec03,
    0x21f601fb,0x43df706c,0xfb80efb8,0x03bee21e,0xfb887bee,0xfb87c80e,
    0x03bee21e,0xf71fc5b6,0x7cbdbd7b,0x07cc7c83,0x7d80ffee,0x7fffe400,
    0x20f98db1,0xf98dd3f9,0x1fb13f62,0xa8be6374,0xb00fdc0f,0x3ee1f50f,
    0x1fb9f601,0x5c7d9f60,0x2e1f601f,0x2a06f887,0x5037c45f,0x206f88bf,
    0x447c85fa,0x217ea06f,0x3ea1f36d,0x0b91ffc3,0x320f98db,0xe81efdae,
    0x7ffcc006,0x0f98db1f,0x90fdcfe6,0x7d41fd8f,0x47c87ee2,0x201fb87c,
    0xf71f987d,0x3f73ec03,0xb8fb3ec0,0x261f601f,0x200fe41f,0x007f20fc,
    0x00fe41f9,0xc8f903f2,0x207e401f,0x4374d76d,0xf11ae2fc,0x5f10f989,
    0x1be1ffd4,0x47ff2600,0xf306446d,0x44f93e27,0x224f887d,0x0db13e4f,
    0x43ec03f7,0x403f73f9,0xd807ee7d,0x03f71f67,0x23fb83ec,0x22fa807d,
    0x22fa807d,0x42fa807d,0x5403ec7c,0x14db6c2f,0x641f707f,0xf3037ea5,
    0xfd10fe21,0x30003f43,0x2601b63f,0x0fd5f63f,0xb13e21b6,0x0db07eaf,
    0x43ec03f7,0x403f73f8,0xd807ee7d,0x03f71f67,0x25fa83ec,0x24f9806f,
    0x24f9806f,0x44f9806f,0x4c037c7c,0x53eb6c4f,0x4e8db03f,0x83e60fee,
    0x91fcc2fe,0x40e4401f,0x300db1f9,0x364fd47f,0x0bea07ec,0xf90d93f5,
    0x3ec03f70,0x01fb8fd4,0x201fb9f6,0x3f71f67d,0x1fc43ec0,0x97e2017e,
    0x25f8805f,0x45f8805f,0x4402fc7c,0x54eb6c5f,0x2e5f885f,0x261fcc0f,
    0x433fa20f,0x80fea1f8,0xb1f982fc,0x3e60a88d,0x6c1fe7c3,0x7c07e42f,
    0x40fa83fc,0x21f601fb,0x403f70fb,0xd807ee7d,0x03f71f67,0x743dc3ec,
    0x3a3f9806,0x3a3f9806,0x643f9806,0x7cc03747,0xf16cb6c3,0x7f33fd89,
    0x01f31760,0xb0bd5ff9,0x20bf305f,0xf98db1f9,0xff90fe60,0xb39ffb01,
    0x03ff207f,0x05f50be6,0xf5364374,0x5f537405,0xa8fb3740,0x321ba02f,
    0x5400fc86,0x5003f21f,0x2007e43f,0x323e41fa,0x20fd400f,0x3f21f56d,
    0xfdefeebd,0x1f31b204,0x441bfa60,0xffdbbdfe,0x1b63f300,0x21fcc1f3,
    0xf7db06f9,0x37cc07df,0x03f887f0,0xf897a17e,0x3f897e03,0x447d97e0,
    0x3617e03f,0x7404fa86,0x3a027d47,0x3a027d47,0x27d47c87,0x45b61fa0,
    0x22bbf23f,0x81312dfe,0x2007cc7c,0xfb7103fd,0x7cc017df,0x20f98db1,
    0x817c43f9,0x3e20026d,0x3fe1f202,0x7cc3fb80,0x7dc07fc1,0x7dc07fc3,
    0x03fe1f63,0x41b60fee,0x05f902fd,0x0bf205fb,0x17e40bf6,0x817ec3e4,
    0x2a6d82fc,0x1ba6004f,0x4c1f31ee,0x7c03740b,0x363f3002,0x7f307cc6,
    0x01b607c8,0x2f880f90,0x6dd67fcc,0xf985d85f,0x85fdbacf,0xfdbacff9,
    0x7fcc3ec5,0xd05fdbac,0x55efec0b,0x3f603feb,0x03febabd,0x3aeaf7f6,
    0x360f903f,0x3febabdf,0x0dfc8bd0,0x5c077d40,0xf983e60f,0x2e202f43,
    0xb1f9802f,0x3e60f98d,0x6c07fbb3,0x07fbb006,0xffb50d70,0x0f8819df,
    0x9dfffb50,0x3fff6a01,0x1e7ec0ce,0x33bfff6a,0x201fecc0,0x02dfffdb,
    0x2dfffdb8,0xdfffdb80,0x207eca82,0x82dfffdb,0xfea83fca,0xffecbcdf,
    0x4cb7e603,0x75efec0f,0x3ee6202f,0xdb1f9803,0x4fe60f98,0x02e403ed,
    0x3a003ed8,0x4c802202,0x88001100,0x817bb200,0x013f2008,0x00400010,
    0xeeb80100,0xec801006,0x7f6e5403,0xeb800bce,0xda881f36,0x6f4c02de,
    0x321d3003,0x00007cc4,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x44000000,0x030002a1,0x44001b90,
    0x013a6000,0x221313ae,0x81442601,0x06ec01ec,0x00261880,0x88002ea8,
    0x744002a1,0x0bb0001e,0xec8014c0,0x03109803,0x002b2e60,0x09100595,
    0x07efffcc,0xf9803e00,0x0b326003,0x2a01fb80,0x5d7e3fbf,0xdeffc80f,
    0x5404f885,0x27ee002f,0x3ec004f8,0x37bfea00,0x3b7ba007,0x00fdc000,
    0x00e7f5c4,0x4405f7f7,0xfa80f94f,0x00dffeff,0x0d500dd1,0x002ca9dc,
    0x012e02cc,0x90012370,0x75d36207,0x203aa9b1,0xb80cb89d,0x4004c805,
    0x003e88ea,0x570016c4,0x75c0072a,0x6c004d89,0xedff9803,0x93d881fe,
    0x5cfa201b,0x887bea06,0x0be205fb,0x5d4409b0,0x1e4000ac,0x2aaaaaa6,
    0x3a200aaa,0x2aaa601e,0x40aaaaaa,0x41a881a8,0x88a600a9,0x5002aa1a,
    0x00aa8015,0x8000aa80,0xaa8000aa,0x00aa8000,0x5fa547ec,0x2aaaaaa6,
    0x55530aaa,0x41555555,0x17ee05f9,0x2a05f000,0x0effefff,0x70fff6e0,
    0xffffffff,0x1ffcc03f,0xffffff70,0x3f983fff,0x37e43f98,0x31fccf90,
    0x02fcc0df,0x3000ffe6,0xf98007ff,0x7fcc003f,0x1ffcc003,0x3aa557e0,
    0x3fffffee,0xfff71fff,0x43ffffff,0x87ec01fc,0x4c0ea85c,0x443df707,
    0xcfd80efb,0x2bee4ffb,0x01999999,0xf7036f64,0x33333335,0x7f307f30,
    0xf904ffc8,0x0ff21fcc,0x3b2007f4,0x6f64006d,0x36f64006,0x01b7b200,
    0xe80dbd90,0x2bee0956,0x21999999,0x99999afb,0x5c036c19,0x1f70db1f,
    0x06f885b8,0x25f717ea,0x3f70fdcb,0x7d67c000,0x8003f701,0x43f983f9,
    0x7c81fefc,0x1fd10fe6,0xcf802fc8,0x33e001fa,0x33e001fa,0x33e001fa,
    0x33e001fa,0x33f201fa,0x003f704a,0x5f8007ee,0x0db3f980,0xc83e81f7,
    0xb07e401f,0xf70c56cf,0x2bea0003,0x03f704f8,0xf983f980,0x437cfe43,
    0x2a0fe67c,0x2013e65f,0x004f8afa,0x009f15f5,0x013e2bea,0x027c57d4,
    0x04f8afa8,0x205f7fec,0x3f7001fb,0x2017e200,0xf70db4f9,0x3ec0fc41,
    0x4bd17d40,0x0003f707,0xb80fd9f6,0x1fcc001f,0x23f21fcc,0xf33e44fb,
    0x774bf207,0x3f67d800,0x3f67d800,0x3f67d800,0x3f67d800,0x3f67d800,
    0x7ffe4400,0x5c007ee2,0x01be001f,0x5c36cfea,0x37c1ea0f,0x2bf27cc0,
    0xdddf705a,0x2209dddd,0x2e0fea4f,0xeeeeeeef,0xf983f984,0x1fe87e43,
    0x103f99f2,0x1003f9fd,0x201fd49f,0x00fea4f8,0x01fd49f1,0x03fa93e2,
    0x07f527c4,0x21fd5950,0xeeeeeefb,0x3bbbee4e,0x3ec4eeee,0x86d8fdc0,
    0x7c1320fc,0x365f8805,0x5c2e2796,0xeeeeeeef,0x6f83f704,0xeeeeefb8,
    0x83f984ee,0x887e43f9,0x3f99f26f,0x4013fea0,0x2037c1fb,0x2037c1fb,
    0x2037c1fb,0x2037c1fb,0x4037c1fb,0x3ee7f54a,0x4eeeeeee,0x3bbbbbee,
    0x21fdc4ee,0x361ff129,0x0be0fd86,0x1fcc0374,0x3f21d3f7,0xd0003f70,
    0x3fd9999f,0x4c001fb8,0x643f983f,0x3e53ee0f,0x07d807f3,0x33333fa0,
    0x33fa01fe,0x201feccc,0xfeccccfe,0x3333fa01,0x3fa01fec,0x41fecccc,
    0x3e6953e8,0x2e003f73,0x0fec001f,0x6c5fbdf7,0x4c3fa20f,0x801f900f,
    0x3ffa21fa,0x07ee3fb9,0xfffff300,0x1fb8bfff,0x4c1fcc00,0x3a07e43f,
    0x0fe67c9f,0x3e600fb0,0x5fffffff,0xffffff30,0x3fe60bff,0x05ffffff,
    0xfffffff3,0x3ffe60bf,0xf85fffff,0x5c3f2956,0x03f7001f,0xabdfe880,
    0x6fd46ffc,0xd70feeaa,0x3a027d40,0x3effe887,0x32000fdc,0x5c1fd00f,
    0x1fcc001f,0x03f21fcc,0x7ccfbdf1,0xc803ec03,0x901fd00f,0x203fa01f,
    0x01fd00fc,0x03fa01f9,0x07f403f2,0x3f36fbee,0x5c007ee5,0xdb88001f,
    0x2febceff,0x3eb3fff2,0x2fd807b0,0x2fa05f90,0x8003f700,0xb8fea05f,
    0x1fcc001f,0x03f21fcc,0x3f99ffee,0x5f803ec0,0x17e0fea0,0x05f83fa8,
    0x817e0fea,0x205f83fa,0xfffb83fa,0x007ee0be,0x40000fdc,0x20184b80,
    0xbdfd8009,0xf103feba,0xcccdfb80,0x3ea2cccc,0xfb9be202,0xcccccccd,
    0x7cc1fcc2,0xfe807e43,0xfb00fe67,0x4405f500,0x1017d46f,0x202fa8df,
    0x017d46f8,0x02fa8df1,0x05b81be2,0x99999bf7,0x337ee599,0x02cccccc,
    0x00000000,0x05bfffb7,0x3fee02d4,0x3fffffff,0x3f9003f6,0x3fffffee,
    0x1fcc3fff,0x03f21fcc,0x07f33fc4,0x0fd807d8,0x1fb0fe40,0x3f61fc80,
    0xfb0fe400,0x361fc801,0x80fe400f,0xffff704a,0x2e7fffff,0xffffffff,
    0x0000003f,0x50008000,0x00000005,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x91c98000,
    0x0072e607,0xca80072a,0x20065c01,0x32602a08,0x1cc80791,0x43797300,
    0x000cc83a,0x1970072a,0x03c8e4c0,0x32e018aa,0x0072a000,0x20880197,
    0x1c89100a,0x2e601970,0x2015c01b,0x7d400bb8,0xbff70bf2,0x06f880ff,
    0xdf701be0,0x66ffd40d,0x17e5f507,0xfa8092a8,0xfbdffeff,0x2003fa82,
    0x377dc06f,0x817e5f50,0x300edee8,0x037c009f,0xfa81bbee,0x9ae07cdf,
    0x5efc80f9,0x01fbcf88,0x77e401f5,0x42a201ff,0xf327cc1a,0x801f9807,
    0x2fe600fb,0x715904f8,0x542a203b,0x80eb6201,0x7fdc1ef9,0x2003ee03,
    0x2fe600fb,0x215104f8,0x1ffaa01a,0x2e003ee0,0x22fe600f,0xb715904f,
    0x0f52e405,0x889f17f5,0x3f107f11,0x09f1fc40,0x7c1fa800,0x00000004,
    0x00000000,0x06f88062,0x0000bff1,0x00000000,0x009f13b3,0x00000000,
    0x0b91f400,0xd05f9800,0x3a1fa809,0x16f6d406,0x01fa83ee,0x209dfd93,
    0x304efec9,0x2609dfd9,0x9304efec,0x32609dfd,0x1fb84efe,0x41fdce88,
    0x101dfec8,0x2203bfd9,0x9101dfec,0x6dc03bfd,0xdb501fdc,0x6f6d405b,
    0x0b7b6a02,0x642deda8,0xffeeefee,0x1d50b90e,0x35c4e988,0x3fab7c40,
    0xff7bff10,0x417a3e47,0x5febbefa,0x7f5df7d4,0x75df7d45,0x5df7d45f,
    0x5f7d45fe,0x77d45feb,0x3ec5febb,0x447f75d8,0x43ffbdfe,0x3ffbdfe8,
    0x7fdeff44,0x7deff443,0x6f7f443f,0x6ffc46ff,0x7fc43ffb,0x7c43ffbd,
    0x443ffbdf,0x23ffbdff,0xfcccfdcb,0xf70db0cd,0x265c8ea1,0xfdf7001f,
    0x360fec09,0x17ccf91f,0x23f40fe8,0x3a3f40fe,0x3fa3f40f,0x03fa3f40,
    0x740fe8fd,0x336c37c7,0x360fec9f,0xfb07f60f,0x3f60fec1,0x1fb07f60,
    0x1fd10fe4,0x87f60fec,0xb0fec1fd,0x361fd83f,0x2e0fec1f,0x0db03e66,
    0x37be21f7,0x4007d12f,0x3e204ffa,0x4f93fa85,0x80880df8,0x320220fc,
    0x3f20220f,0x83f20220,0x220fc808,0xbf10fc80,0x93e20ec8,0x3e3f985f,
    0x17e3f985,0x985f8fe6,0xf70df13f,0x3ea17e25,0x7f50bf13,0x4fea17e2,
    0x43fa85f8,0x1b61ea5c,0xc85303ee,0xcfc81b85,0x7cc111fe,0x8f94f883,
    0xcb881efa,0x5c40fffe,0x440fffec,0x40fffecb,0x0fffecb8,0x7fff65c4,
    0x7ff65c40,0x0fb9be0f,0xeef99fcc,0xf34feeee,0x9fdddddd,0x3bbbbbe6,
    0xdddf34fe,0x3e69fddd,0x7f33f984,0x0fe69f10,0x41fcd3e2,0x107f34f8,
    0x1723e89f,0x003ee1b6,0x43fc81f5,0xd1df33fb,0x7c417d4f,0x3ff30f94,
    0x6566ffd4,0x337fea0f,0x3fea0fca,0x2a0fcacd,0x0fcacdff,0x32b37fea,
    0x337fea0f,0x23fa0fca,0x31fb81fa,0x999999df,0x3333be65,0x9df32ccc,
    0x26599999,0xccccccef,0x9f107f32,0x53e20bea,0x54f882fa,0x2a9f105f,
    0xfd4f882f,0xffffffff,0x03f21b63,0x7fdc2f88,0x3bea3743,0x2a17e24f,
    0x3e20f93f,0x1f90df14,0x43f21be2,0x10fc86f8,0x221f90df,0xf10fc86f,
    0x7d41f90d,0x44fd02fd,0x05f8805f,0xf8805f88,0xf50bf005,0x3ea17e27,
    0x7f50bf13,0x4fea17e2,0x53fa85f8,0x59f755f9,0x3f61b615,0x3f513600,
    0x642fc47d,0x643f40ff,0xd0e2f91f,0xfd10fe6b,0xfd10fe61,0xfd10fe61,
    0xfd10fe61,0xfd10fe61,0xfd10fe61,0xf904fe81,0x7dc0fe85,0x5f703fa2,
    0x8bee07f4,0xb17dc0fe,0x3f43fb0f,0x90fd0fe4,0x7e43f43f,0x87f21fa1,
    0x3603e66b,0x403fa20f,0x74dfc46b,0xf703f60b,0x9befa89f,0x7d5f24fd,
    0x3fa1fc9c,0x21ffea8a,0xffea8afe,0x3aa2bfa1,0x22bfa1ff,0x3fa1ffea,
    0x21ffea8a,0xffea8afe,0x2f7ffe21,0xf982feba,0x4c5fb9be,0x45fb9bef,
    0x5fb9bef9,0x7dcdf7cc,0x6cd77d45,0x4df7d44f,0x5f7d44fd,0x77d44fd9,
    0x7d44fd9b,0x6c4fd9be,0x6fd41ee4,0x980feeaa,0x7f774c1f,0x2affea2e,
    0x544fedfd,0x3e44effe,0xd987dfd7,0x23f9bfff,0xf9bfffd9,0x2ffff663,
    0x3ff663f9,0x3663f9bf,0x23f9bfff,0xf9bfffd9,0x7ffe53a3,0x3fa602df,
    0xfe980cef,0xfe980cef,0xfe980cef,0xfe980cef,0xffd503ff,0x3ffaa09d,
    0xdffd504e,0x3bffaa09,0x81723e84,0x0facfffc,0x83e803e8,0xd13ffffa,
    0x1000220b,0x11000880,0x44002200,0x20011000,0x0440c008,0x44002200,
    0x20011000,0x00110008,0x00440022,0x01100088,0x3001104c,0x22009300,
    0x00002200,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x2e000000,0x3700e401,0x07702b80,0x0e5c00dc,
    0x003c864c,0x8002a8a6,0x0a9801a9,0x20165440,0x801acca8,0x980000aa,
    0x998801bb,0x53101999,0x59951001,0x06ee6001,0x15302980,0x203714c0,
    0x405fb12a,0x05fb105c,0x37e607d4,0x007cc0fd,0x8fd417e2,0x43ee005f,
    0x3fea006d,0xffd704ff,0x37fee09f,0xfffa82ff,0xff904fff,0x01b109ff,
    0x7f6677e4,0x3ffff604,0xfffe987f,0xefff980e,0x3f202fff,0x204fecce,
    0x5c4fffeb,0x4c9f601f,0x0befedb0,0xfbf807d4,0xd703f102,0x200f6174,
    0x215100ec,0x43ee001a,0x3bf1006d,0xdfb87f91,0xdf987f71,0xef88dd10,
    0x987f9309,0xb87f70cf,0x101bb00f,0x2ab7e09d,0x877c42aa,0x177c44f9,
    0x3760bfa6,0xf884e880,0x7dc5f50d,0x07a9f601,0xf882f8db,0x9d02f802,
    0x2a5c93a0,0x0000000f,0x0db0fb80,0x8fb03f20,0x2e0fd87f,0xf70fd41f,
    0x7d8df103,0x407dc5f8,0x09aaa8dd,0x03f889d1,0x875c0fb8,0x1ba00fe8,
    0x88ddccbb,0x3a07dc4e,0x7d807ee6,0xf1b607e2,0x3e009b05,0x93606b82,
    0x5c80fa4d,0x50b90ea8,0xadec981d,0xfb3db0fb,0xf50bd05b,0x3ea17e23,
    0x2e007f21,0x0885302f,0xdfd72fc4,0xccf8b4cb,0x541f11fe,0x805f801f,
    0x85d402fa,0x3af3f269,0x0fdc1f13,0x201fb9fa,0x36c1f47d,0x001d70be,
    0x403f30be,0x07d4be6a,0x21f70db0,0x220fb86d,0x0fefdcff,0x7fd7dffb,
    0x12f984f8,0x5c5f509f,0xbff9802f,0x2fc88000,0x4b8f7f6a,0x5b26c1f1,
    0x05f657dc,0x4165c67c,0xa5c000fc,0x2d9220f9,0x3ee277e6,0x7d807ee3,
    0x3e36c2e4,0xf8007e62,0xb100fa22,0x201f4bff,0xdb0fb86d,0x07f41f70,
    0x13f61ff3,0x20fe21fb,0x361f63f9,0x55bf933f,0x77ffcc03,0x3ffd801c,
    0x896c0fb8,0x2e1fa99f,0x3f77ff64,0x3fb3e23f,0x01fa1efe,0x2035cb60,
    0x7fffc44b,0xfb00fdc3,0x4c6d8798,0x0aca8fa0,0x5c2e4130,0x89ea0981,
    0x7dc36c1b,0x41f70db0,0xfb0fe85f,0x7f13fb83,0x6fd47f10,0xf94ffc89,
    0x5007ffff,0x401dfffb,0x7dc2ffcb,0xfff88f40,0x1b92d42e,0x9ff33f44,
    0x86f97a61,0xd2eeeee9,0x4b501323,0x2ffcdfd8,0x87d807ee,0xd9036c2f,
    0x40376764,0x01fe40fa,0x5ecfa9f4,0x6c3ee1b6,0x7f30fb86,0x21b61f90,
    0x307f14f8,0xeffeb85f,0x003ec2f9,0x200ff930,0x903ee0fd,0x0ba23e27,
    0x25f70079,0xb0fb87f9,0xeeee981f,0x21e6793f,0x07ec790b,0x00fdc3f6,
    0x6d89b0fb,0x98d41f30,0x70be200f,0x26a807ff,0x1b61f33e,0x6436c3f2,
    0xf707f30f,0x93e21b61,0x501f984f,0x0fb07e63,0x17dc0350,0x1f71fd40,
    0x261f15a8,0x22007a1f,0xf30bf14f,0xf3007ee7,0x88be96a7,0x85f87a5c,
    0x405f52fa,0x36c6b86e,0x0db017c4,0x74fd44d8,0x2f89f403,0x7ec36cbe,
    0x21fb0db0,0xb0fd85f8,0x2f47f50f,0x701307dc,0xe804f81f,0x3c8fe606,
    0x03ee2fa8,0x641f15f1,0xa82c8f56,0x3ea17e2f,0xf980bf32,0x3f265f13,
    0x7c4f50df,0x7f13f983,0x07c42fc0,0x220bb0db,0x11ae00de,0x2017d37f,
    0x25f17c6b,0x43fa20fd,0x83fa20fd,0xfb0ff87e,0x3ee1fc85,0x21f23740,
    0x40075c5e,0x41f903fc,0x2a3ec0fd,0x202f981f,0x207ec1fa,0x320fe47d,
    0x4417f20f,0x10be63fd,0x21b20fd4,0x203fe0fc,0x6c7d03fb,0x7cc07d46,
    0x260fcc04,0xf02efeee,0x21f34d85,0xfeeaadfa,0xdd55bf50,0x5577cc1f,
    0x9ffb0ffe,0xff889fb3,0x7c41feab,0x2e0fd99d,0xcacdefef,0x2b3bfa23,
    0x6fcc4feb,0x7d43fd9a,0x8acf982d,0xf981fca8,0x444fdaad,0x84fc9aef,
    0xfdbbdefc,0x567cc0df,0x981fca88,0x44fc9adf,0xfdbacff9,0x26d97205,
    0xeff881f8,0x803e81ee,0xf50d703e,0xfffc89fb,0x3ff20fac,0x7540facf,
    0xbb0fbdff,0x2207fff7,0xb502effe,0xcfa83bff,0x85fffdba,0x02efffec,
    0x105bffb3,0x36e60ffb,0x2a00bdff,0xb103fffd,0x6d409fff,0x201dfffe,
    0x0bdffdb9,0x33fffea0,0xefffda80,0x6d9ea00c,0x999980ea,0x88024c09,
    0x05403500,0x80060030,0x20030008,0x00010008,0x80060026,0x00000008,
    0x00200080,0x00000110,0x08800620,0x00000600,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x220a6000,
    0x4000acba,0x0b2e602a,0x55555530,0x402a6001,0x002a602a,0x55555553,
    0x1a803555,0x87a60754,0x983b23c8,0x09999999,0x53005540,0x80135555,
    0xaa981bb8,0x8800aaaa,0x2aaaaa64,0xaaaa882a,0x64c1aaaa,0x990e9aee,
    0xa985bdb3,0xfa8db000,0x00effeff,0xfff50fd0,0x3f209ffd,0x1dffffff,
    0x3bffff90,0x6f882fb8,0xffffff80,0x203fffff,0x207dc5f9,0xd8bee2f9,
    0xfffff10f,0x7cc09fff,0x3fff203f,0xfb03ffff,0x7e43dfdf,0x1dffffff,
    0xfffc9fa0,0x2e2fffff,0xffffffff,0x3f33fe24,0x7dfdb0fe,0x00fe45fd,
    0x87bee298,0xe800efb8,0x9856fcc7,0x9afc83fc,0x40ffc999,0x0bf50cf9,
    0x803f90dd,0x99ef9bfb,0xd1009999,0x4c0fb8bf,0x8310fe2f,0xfeaaaaaa,
    0x81b7b201,0xd9999afc,0xd11fd42f,0x4ccd7e4d,0x6c40ffca,0x266bf27f,
    0xf71ffa99,0x13333337,0x1ff307f4,0x21fb13f6,0xf88001fc,0x2017ea06,
    0x403be27e,0x80fe40fe,0x5c3ec5fa,0xf11fd40f,0x2fcfd00b,0x22ff6c00,
    0x017cc0fb,0x13ea0062,0x203f59f0,0xe8bf00fc,0x3f91fb86,0xffa97ee0,
    0x5407f27e,0x2005f73f,0xfb0fe85f,0xdf92fa83,0xc8399bdd,0xfc803f95,
    0x3f73f400,0x3f205cc0,0x2a83f601,0x0fd82fa8,0x3fa801fb,0x1f50017e,
    0x4c0fb8bf,0x5b85d12f,0x2a037c40,0xf904f8af,0x03317e01,0x807f25f3,
    0xf91bf0fe,0x4f980fe4,0x7f3005f7,0x21f61f90,0xdddf94f8,0xb6c9fffd,
    0x02fa807d,0x000fb3f4,0x1fb807f2,0xf980fd80,0x7e804f9c,0x7f1002fc,
    0x981f717e,0x6b87f12f,0x36007e40,0x3f203f67,0xb002fb80,0xc807f21f,
    0xf93e431f,0x7dcbee03,0xb83f9802,0x9f10db0f,0x3fa207f2,0x201bedb1,
    0xd3f404f9,0x7fb5000d,0x03fa8555,0xbf9027d4,0x43fa801f,0x6eeeeeff,
    0xf717e5d8,0x7f12fa83,0x17e206c8,0x1fd49f10,0x7f7777e4,0x45fb002f,
    0x0fea01fc,0x4c1fc9f2,0x3bbee7fb,0x3e23eeee,0x1fb0fd85,0x03f92fa8,
    0x5fb6d3ea,0x7405f880,0x3a001be7,0x4c5eeefe,0x03be603f,0xfffffff7,
    0xf03fa0df,0x8ddddddf,0xf717e0fb,0x7f12fd87,0x07f207c8,0x86f83f70,
    0xffeeeefc,0x217ec01e,0x0fea01fc,0xffffc9f2,0x3ee2ffff,0x43eeeeee,
    0xfb0ff87e,0x3f90fc85,0xeb6d3e60,0x403f9806,0x4001fa7e,0x0bee01fc,
    0x544077d4,0x2aaafdaa,0xaaaadfa8,0x42f9805f,0x55ffdc5f,0x87f12ffc,
    0x201ba07d,0xfeccccfe,0x74c07e41,0x320fea07,0x20bee01f,0x3337f27c,
    0x17dc0aac,0xeaaef980,0x39ffb0ff,0x80fe47fb,0x3f2db1fc,0x200fd400,
    0x8803f27e,0x900fe41c,0x40bf701f,0x99fd9998,0xffffe809,0xfd805fff,
    0x2effeeee,0xf5fff7f7,0x1fb0fe25,0xf9807f50,0x5fffffff,0x2fb807e4,
    0x07f20f90,0x27c81fc8,0x5f7001fc,0x6fff4c00,0xff7db0fc,0xaabfc87d,
    0x5b66fdba,0x33f404fa,0x3ea6e83f,0xf90bf203,0x2e1fe203,0x7ffdc05f,
    0x4c6fffff,0xf99999cf,0xeeeec805,0x1f72effe,0x3a1fc406,0x400fc80f,
    0x41fd00fc,0x07f500fc,0x80fe412a,0x64f906f8,0x05f7001f,0x43ee1100,
    0x7fe4026d,0x20dfffff,0x640bf66d,0xf893e22f,0x7cc17ec4,0xd881fc85,
    0x0027d42f,0x03f603e4,0xbf0002fc,0x7c400fb8,0x37407f43,0x7f502fc0,
    0x1fd807e4,0x881fc800,0x64f903fd,0x05f7001f,0xdb0fb800,0x3335f900,
    0xbfb1b603,0xb07fd757,0x885fd79f,0xffdbbdfe,0xcccdfc80,0x7fc44ffd,
    0x01cccccc,0x04f981f2,0x333333be,0x2e2fc03c,0x21fc400f,0x405f80fe,
    0x9be202fa,0xfcccccfc,0x203b204f,0xfdcccdfc,0xfc9f204f,0x005f7001,
    0x0db0fb80,0x36003f90,0xdfffdb86,0x7dff9102,0x3bff6e20,0xffff900b,
    0xff503bdf,0x07ffffff,0x01fb03e4,0x7ffffffc,0x2a2fc05f,0x21fc400e,
    0x01fc40ed,0x3f9003f6,0x3bfffff2,0x407ec02d,0xdefffffc,0x3f93e402,
    0x000bee00,0x01721d50,0x800007f2,0x20004000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x80000000,0x88a600a9,0x7700531a,0x0014c326,0x1d37dd93,0xe883cb88,
    0x5f6dc404,0xa88054c1,0x0a98b262,0x220154c0,0x401530aa,0x203c9829,
    0x80eb8660,0x543510eb,0xaaaaaaaa,0x55002aa2,0x8aa01541,0x20551029,
    0x300550a8,0x74cfa615,0x9f601fbb,0xd00db3f9,0x036c7eed,0xefccff88,
    0x13bfa21f,0xfe8817e2,0x3f20febd,0x741ff980,0xc801f90f,0x3fee02ff,
    0x3e40df91,0xf10bfba2,0x7cc3f9df,0x93ea5e83,0xfffffffe,0x981be65f,
    0xc81fe45f,0x2a07ee2f,0x71fb81ff,0x2a7d805f,0x3f79f34f,0x27f33ec0,
    0x532a806d,0x7f401b61,0xf987fe20,0xfb004c03,0x1f92fc43,0xe881ff98,
    0xfc801f93,0x47ffa05f,0x8f904ffc,0x2a1fc8fd,0x8dd07b54,0x893ea2f9,
    0xfd999999,0xfe81fe43,0x7d41fe80,0x76c1fcc4,0x3e27d83f,0x9893e205,
    0x807ee260,0x36cfe67d,0x201b6000,0x21fd85f8,0x00d401fa,0x7e4330df,
    0x4007fe60,0x67e400fc,0x1fdf880f,0xf903fdf9,0x3ee00000,0x09f51f21,
    0xfd10bf70,0xf302fc81,0x5f837c4d,0x5f86dbf8,0x1fb807ec,0x6c03f700,
    0x236cfe67,0x217443ea,0x43eed8ed,0x91fb83f9,0x3e01ddfd,0x9009f103,
    0x807fe61f,0x801f92e8,0xeb82fafc,0xdf3f91fb,0x85d10f90,0x83eed8cc,
    0xf513e4f8,0x206fa809,0x013e65fa,0x403fa9f7,0x7dcfcc7d,0x5f50fe60,
    0xfb801ba0,0x3f99f601,0x4427d4db,0x5effec3f,0x20fe64fe,0x9bfb71fb,
    0x2605f501,0x98fc803f,0x9fc401ff,0x47e400fc,0x1fbce85e,0xc89f71f9,
    0x76c3f887,0xd84fdcef,0x3f983f57,0x9003fe20,0x2003ba5f,0x2e02fdfd,
    0x17cdee1f,0x30bf01f7,0x7fdc007f,0x7fffffff,0xfab6cfe6,0xfd87f104,
    0x217e3f43,0x407ea1fd,0x17e206f9,0xffafc8ea,0xc9fc400e,0x5c7e400f,
    0x3ee7e60f,0x87fa1f91,0x6c3f887c,0x7d43ec3f,0x03f886c9,0xd1003fd1,
    0x22003f9f,0x17cc04ff,0x0db27cbd,0x01f903f2,0x6666fdc0,0x3e67eccc,
    0x409f5db3,0x207ec3f8,0x883f20fc,0x207ea1ff,0x3f400ef8,0x7dff92f4,
    0x93f880bf,0x98fc801f,0x8fddae2f,0x64df10fc,0x3ec3f887,0x7e7c07e4,
    0xfb02f883,0x27fd4007,0x00bff100,0x7d8be29f,0x21fcc13e,0x0fdc004f,
    0xd9fccfb0,0x3e204fff,0x07dc3ec3,0xfff99ff3,0x3a20fd43,0xaef9800e,
    0x3bf21fc9,0x7c407fb0,0xfc801f93,0xfb9f4bd0,0xa7dc1f91,0x6c3f887c,
    0xfc80fb86,0xf705f00f,0x00fb0009,0x403fdfe8,0x7d41f56c,0x9ba02f98,
    0x33e981fa,0x6c03f77d,0x67ecfe67,0x87f101fc,0x4c0fb86d,0x20fb9cfd,
    0x417d41fa,0x5bffd300,0x3fe21fc8,0x3f27f101,0xfb87e400,0x23f70f98,
    0x64ff40fc,0x36c3f887,0x37cc07dc,0x06fa83f0,0x6400fb00,0x201fe8bf,
    0x7c46c8fa,0x3ee00fba,0x53ea0db1,0x201fbcf9,0xb6cfe67d,0x3f880ee8,
    0x107dc36c,0x1fa83f20,0x03740fd4,0x303f207f,0x64fe20df,0x987e400f,
    0x47ee6caf,0x6f7c40fc,0x36c3f887,0x17c407dc,0x07fc4190,0x3007d800,
    0x1037ccbf,0x99d09f5f,0xf8cf880d,0x3ee0ee03,0x3f99f601,0x4427d4db,
    0x7dc36c3f,0x8df11760,0x4c5f81fa,0x20fea03f,0x84fc80fc,0x801f93f8,
    0x8fb7a0fc,0x701f91fb,0x87f10fff,0xc80fb86d,0x00ff4007,0xf100fb00,
    0x204fb81f,0xeec81fde,0x0fbed803,0x2fa63d10,0x99f601fb,0x2fd8db3f,
    0x21b61fc4,0x2f7ea0fb,0x0fd41fec,0x3fedf7dc,0xc83fca88,0x885fd00f,
    0x9999f93f,0xb83f2799,0x647ee0ff,0x10ffd00f,0xfb86d87f,0x980ff760,
    0x999df93e,0xd8099999,0xd01fd807,0x41ff205f,0xf9801ffa,0xf986205e,
    0x9f601fbb,0xf88db3f9,0xdb0fe20e,0xeca81f70,0x01fa80ce,0x4405bd71,
    0x01f902cc,0x3f883fe6,0xfffffff9,0x5f983f2b,0x00fc8fdc,0x87f10ff1,
    0x360fb86d,0xca7cc03e,0xffffffff,0x203ec07f,0x3fe204fb,0x3e05fa80,
    0x00bfa007,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x55555530,0x2aa61555,0x301aaaaa,
    0x55555555,0x000c4055,0x2aaaaa08,0x0b92aaaa,0xeed981d5,0x05bfb53d,
    0x413bfb26,0x701bedb8,0x32207dfd,0x36a01dfe,0x6c6642de,0x39db32de,
    0x1f76c664,0x5c77a732,0x8005b80e,0x2627445c,0xe889d31e,0x3bbbba64,
    0xf70004ee,0xffffffff,0x3ffffee3,0x7e40dfff,0xffffffff,0x880f900f,
    0x067aceeb,0x7dc36c60,0x3aef7ea0,0x4fdbefef,0x7f5df7d4,0x75eff445,
    0x6567ec0f,0x5eff445f,0x6ffc43ff,0x3fb63ffb,0xcdfbffcd,0x33bfb66f,
    0x3bfb64fd,0xbf05f30f,0xc9723f30,0xf71fea0f,0x83fa1fd8,0xfeccccc8,
    0x2e0019d3,0x999999af,0x32a07ee1,0x4cccc45f,0x201999df,0x2ffee07c,
    0x20062ffd,0x41f70db1,0x544ff86e,0xfd03fa2f,0x17e21fd8,0x360ec89f,
    0xfb07ec1f,0x7fb1fd83,0x1f50ffcc,0x6cfb0ff6,0xfa8bd03f,0x43f54e82,
    0x87ff22f9,0xfcb7c45e,0x325f9802,0x7dc01dff,0x403f7001,0x027c407e,
    0x17e60f90,0x8c00cbfd,0x260fb86d,0x4f80fe80,0xf83f2022,0x0f7c1986,
    0x4fe617e0,0xb3fa85f8,0x7cc7f81f,0x21f90fb2,0x41f700fd,0xf88fc87d,
    0x3efa4f84,0xbf305f13,0x0df1009f,0x017dfd71,0x3ee003f7,0x8803f601,
    0x3332204f,0xf92cccfe,0x187e6e45,0xf70db180,0xffeca881,0x6feeeeef,
    0x7fff65c4,0x2a009f10,0x7cc2dfff,0x4feeeeee,0x29f107f3,0x7cc5f87d,
    0x21f70db3,0x44fe207d,0xfd9fcc4f,0xd3f36c80,0x7e403eab,0x00ee8806,
    0x2e27fecc,0x03f7001f,0x9f1017e2,0x7ffffcc0,0x21fb4fff,0x031fa8ea,
    0x3f21b630,0x2b37fea0,0xccccccfe,0x2b37fea4,0x007f30fc,0x877fedc4,
    0xcccccef9,0xf105f52c,0x313e1b69,0x3ee1b67f,0x56d80db0,0xdd2fb83f,
    0x5dee7ea0,0x7fec0bb7,0x000ff400,0xeefb8ff7,0x2e4eeeee,0xfdccccdf,
    0x027c401f,0x45f60f90,0x0063f71f,0x87ec36c6,0x83f40df8,0x3f21be20,
    0x0750bf10,0xbf13fc88,0xf50bf100,0x313e1b67,0x3ee1b67f,0x9fa80db0,
    0x3e6dd06d,0x26bb7f03,0x9f503f9f,0x017ec0bf,0x20effe44,0xeeeeeefb,
    0x3fffee4e,0xf1002eff,0xc83e4009,0x43f63e9f,0x41fb1801,0x87f30fe8,
    0xa7cc2ff9,0x07f443f9,0x7ccbd0fd,0x1fd1fc43,0x21fa2fb8,0x9f0db1fc,
    0x70db3f98,0x3e01b61f,0x27f103fc,0x3fdd80fc,0x3e203fbe,0x7f907f55,
    0x0cffda80,0x2e003f70,0x00bf621f,0xf90027c4,0xf897bea0,0x7d460066,
    0x20feeaad,0xedeb8aee,0x746ea9bf,0x1ffea8af,0x3f26bbe6,0x6d4dfe41,
    0x26fbe61f,0x5f7d45fb,0x21b64fd9,0x6d9fcc4f,0x00db0fb8,0x7d401ff9,
    0x1ff709d0,0x0fd837ec,0xaefb87f6,0xdfd2aaaa,0x003f7007,0x07fa07ee,
    0xa8013e20,0x2e73fa04,0x860061ff,0x0facfffc,0xc8fbff66,0x6cc1cfff,
    0x43f9bfff,0x882dffe9,0x981effec,0xa80ceffe,0x36c4effe,0x6cfe627c,
    0x0db0fb86,0x1500bf30,0x71be20a2,0x887f707f,0x3ffff26f,0x003b7fff,
    0xfb800fdc,0x400ff881,0x332204f8,0x32cccccc,0x839ffd9f,0x00181801,
    0x4400c011,0x40022000,0x00088008,0x00000011,0x00000000,0x00000000,
    0x0fdc0000,0xf701fb80,0x204f880b,0xfffffff9,0x5004534f,0x33333333,
    0x00000005,0x00000000,0x00000000,0x00000000,0x00000000,0xb8000000,
    0xccccccdf,0x7403f72c,0x013e202f,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x7dc00000,0xffffffff,0x7cc03f73,
    0x009f100f,0x00000000,0xa80a0500,0x100c9802,0xbb981595,0x2e01c981,
    0xbb86ee21,0x72bbbbbb,0x57777777,0x05910190,0x32b8ae57,0x0000887d,
    0x417705dc,0x2e1731b8,0x77777712,0x00037777,0x00000000,0x222ea5d1,
    0x13a1f51e,0xf986c880,0x7ec5f981,0xd801fb01,0xdb5bd04f,0xb0fde7c4,
    0xfd889f9f,0x27f7bf12,0xffffffff,0xfffffff6,0x4c0f84df,0x57e25cae,
    0x3e6bf15f,0x3f661ec3,0x261910ce,0xf31fd44f,0x8afc7ea7,0xdddddddd,
    0x000003dd,0xfb000000,0x43ffffff,0xa803f35e,0x1f984ffd,0x0ff6bf70,
    0x6fcc04b8,0x43e6380f,0x3e27f118,0x2fbf8f30,0x888ae453,0x116c8888,
    0x4c111111,0x393fcfcf,0xbf5f8874,0x5c2b97e2,0xffbdf14e,0x1b21ffff,
    0x221513dc,0x0000350a,0x00000000,0x44efc400,0xd97cc3fb,0x77f5c40e,
    0x403f300b,0x5443fffb,0x1aaaaaaa,0x5c1fc764,0x7cc1fffd,0xf05f1ae5,
    0x9005f305,0xbf93000d,0x4f8d15c3,0x0e8a7c9f,0x21457aa6,0x0021deda,
    0x00000001,0x00000000,0x3607dc00,0x5f88fc86,0x54077ff2,0x2aacfcaa,
    0xff986fe8,0x24ffffff,0xfa8d93f8,0x4c41f88a,0x07c4f54e,0x00bee17c,
    0xaaaaab64,0x2fa22aaa,0x0fb7a21f,0x12e8f67d,0x000bed83,0x00000000,
    0x00000000,0x86c80000,0xdd1fb87c,0x3fe01ffc,0x47ffffff,0x9985fdfd,
    0x20999999,0x545f30fb,0x751fd88f,0xd917f2e4,0x01fb8be0,0x7fffdb20,
    0x5266ffff,0x0980983b,0x20004c13,0x713cccc9,0x77777777,0x00000057,
    0x00000000,0x83f50000,0xfba7c45e,0x033ff6a1,0x26bea666,0x7dcff619,
    0x7c03b205,0x3bf62f44,0xfbdf13ea,0x80eff545,0xbdddf72f,0x26661100,
    0x00099999,0x50000000,0x3229ffff,0xcccccccc,0x0000002c,0x00000000,
    0xcff98000,0x8b644feb,0xbff9103f,0x2607e605,0xd80fdc3f,0x4c1c980f,
    0x014c000c,0x33109801,0x00000333,0x00000000,0x00000000,0x00000000,
    0x80000000,0xdeffdee8,0x1723f32f,0x21bfae20,0x020101f9,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0xc820b800,
    0x00054330,0x007a616a,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
};

static signed short stb__arial_21_latin1_x[224]={ 0,1,0,0,0,1,0,0,1,1,0,1,1,0,
1,0,0,2,0,0,0,0,0,0,0,0,1,1,1,1,1,0,1,-1,1,0,1,1,1,1,1,1,0,1,
1,1,1,0,1,0,1,0,0,1,0,0,0,0,0,1,0,0,0,-1,0,0,1,0,0,0,0,0,1,1,
-1,1,1,1,1,0,1,0,1,0,0,1,0,0,0,0,0,0,1,0,0,2,2,2,2,2,2,2,2,2,
2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,2,0,0,0,-1,
1,0,0,0,0,1,1,0,0,-1,1,0,0,0,2,1,0,1,0,0,0,1,0,0,0,1,-1,-1,-1,-1,
-1,-1,0,0,1,1,1,1,0,1,-1,0,-1,1,0,0,0,0,0,1,0,1,1,1,1,0,1,1,0,0,
0,0,0,0,0,0,0,0,0,0,0,1,-1,0,0,1,0,0,0,0,0,0,1,1,1,1,1,0,1,0,
 };
static signed short stb__arial_21_latin1_y[224]={ 17,3,3,3,2,3,3,3,3,3,3,5,15,11,
15,3,3,3,3,3,3,3,3,3,3,3,7,7,5,7,5,3,3,3,3,3,3,3,3,3,3,3,3,3,
3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,19,3,7,3,7,3,7,3,7,3,3,
3,3,3,7,7,7,7,7,7,7,3,7,7,7,7,7,7,3,3,3,8,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,17,7,3,3,5,3,
3,3,3,3,3,7,7,11,3,1,3,5,3,3,3,7,3,9,16,3,3,7,3,3,3,7,0,0,0,0,
0,0,3,3,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,6,3,0,0,0,0,0,3,3,3,3,
3,3,3,3,7,7,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,6,6,3,3,3,3,3,3,3,
 };
static unsigned short stb__arial_21_latin1_w[224]={ 0,3,6,11,10,15,13,3,5,5,7,9,3,6,
3,6,10,6,10,10,10,10,10,10,10,10,3,3,9,9,9,10,18,14,11,13,12,11,10,13,12,3,8,12,
9,14,12,14,11,14,13,12,12,12,13,18,13,13,12,4,6,5,9,12,5,10,9,10,10,10,6,10,9,2,
4,9,2,14,9,10,9,10,6,9,6,9,10,14,10,10,9,6,3,6,11,10,10,10,10,10,10,10,10,10,
10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,0,3,10,10,10,12,
3,10,6,14,7,9,9,6,14,12,6,10,6,6,4,9,11,3,5,5,7,9,16,16,16,10,14,14,14,14,
14,14,18,13,11,11,11,11,4,4,7,6,14,12,14,14,14,14,14,9,14,12,12,12,12,13,11,10,10,10,
10,10,10,10,16,10,10,10,10,10,4,5,7,6,10,9,10,10,10,10,10,10,10,9,9,9,9,10,9,10,
 };
static unsigned short stb__arial_21_latin1_h[224]={ 0,14,6,15,17,15,15,6,18,18,7,10,5,2,
2,15,15,14,14,15,14,15,15,14,15,15,10,13,10,7,10,14,18,14,14,15,14,14,14,15,14,14,15,14,
14,14,14,15,14,16,14,15,14,15,14,14,14,14,14,18,15,18,8,2,4,11,15,11,15,11,14,14,14,14,
18,14,14,10,10,11,14,14,10,11,15,11,10,10,10,14,10,18,18,18,4,12,12,12,12,12,12,12,12,12,
12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,0,14,18,15,10,14,
18,18,3,15,8,10,7,2,15,2,6,12,8,8,4,14,18,3,5,8,8,10,15,15,15,14,17,17,17,17,
17,17,14,18,17,17,17,17,17,17,17,17,14,17,18,18,18,18,18,9,15,18,18,18,18,17,14,15,15,15,
15,15,15,15,11,14,15,15,15,15,14,14,14,14,15,14,15,15,15,15,15,9,12,15,15,15,15,18,18,18,
 };
static unsigned short stb__arial_21_latin1_s[224]={ 251,170,183,203,188,35,242,190,33,52,168,
71,194,204,252,248,92,190,54,138,97,171,182,128,222,103,252,248,61,158,243,
166,180,139,154,25,177,1,209,193,1,14,16,85,103,113,128,1,197,223,13,
125,27,233,234,215,201,187,174,84,246,154,102,238,221,100,82,111,71,132,56,
45,35,253,175,18,253,154,169,143,231,220,179,122,149,73,186,207,222,159,233,
199,206,102,204,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,
62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,251,124,16,
114,40,65,247,210,231,207,112,197,148,204,156,211,176,40,141,120,216,108,235,
227,198,135,127,51,18,1,225,63,128,173,158,143,113,39,78,221,54,27,199,
211,251,94,66,74,39,81,160,139,124,1,109,81,89,58,39,89,71,99,241,
12,23,34,45,56,67,78,83,74,104,115,126,137,98,118,141,28,148,149,159,
170,181,192,1,91,51,238,51,215,61,22,12,1, };
static unsigned short stb__arial_21_latin1_t[224]={ 19,87,115,39,20,55,39,115,1,1,115,
115,115,120,98,20,55,71,71,55,71,55,55,71,55,55,87,87,115,115,102,
71,1,71,71,71,71,102,71,55,87,87,71,87,87,87,87,71,71,20,102,
55,102,55,87,87,87,87,87,1,55,1,115,115,115,102,55,102,55,102,87,
87,87,70,1,87,55,102,102,102,71,71,102,102,55,102,102,102,102,87,102,
1,1,1,115,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,
102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,19,71,20,
55,115,71,1,1,115,55,115,102,115,120,55,120,115,102,115,115,115,71,1,
115,115,115,115,115,55,55,39,87,20,20,20,20,20,20,71,1,20,20,20,
20,1,20,20,20,71,20,1,1,1,20,1,115,39,1,1,1,1,20,71,
39,39,39,39,39,39,39,102,87,39,39,39,39,87,71,87,87,39,87,39,
39,39,39,39,115,102,20,55,39,55,1,1,1, };
static unsigned short stb__arial_21_latin1_a[224]={ 84,84,107,167,167,267,201,57,
100,100,117,176,84,100,84,84,167,167,167,167,167,167,167,167,
167,167,84,84,176,176,176,167,305,201,201,217,217,201,184,234,
217,84,150,201,167,251,217,234,201,234,217,201,184,217,201,284,
201,201,184,84,84,84,141,167,100,167,167,150,167,167,84,167,
167,67,67,150,67,251,167,167,167,167,100,150,84,167,150,217,
150,150,150,100,78,100,176,226,226,226,226,226,226,226,226,226,
226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,
226,226,226,226,226,226,226,226,84,100,167,167,167,167,78,167,
100,222,111,167,176,100,222,166,120,165,100,100,100,173,162,84,
100,100,110,167,251,251,251,184,201,201,201,201,201,201,301,217,
201,201,201,201,84,84,84,84,217,217,234,234,234,234,234,176,
234,217,217,217,217,201,201,184,167,167,167,167,167,167,267,150,
167,167,167,167,84,84,84,84,167,167,167,167,167,167,167,165,
184,167,167,167,167,150,167,150, };

// Call this function with
//    font: NULL or array length
//    data: NULL or specified size
//    height: STB_FONT_arial_21_latin1_BITMAP_HEIGHT or STB_FONT_arial_21_latin1_BITMAP_HEIGHT_POW2
//    return value: spacing between lines
static void stb_font_arial_21_latin1(stb_fontchar font[STB_FONT_arial_21_latin1_NUM_CHARS],
                unsigned char data[STB_FONT_arial_21_latin1_BITMAP_HEIGHT][STB_FONT_arial_21_latin1_BITMAP_WIDTH],
                int height)
{
    int i,j;
    if (data != 0) {
        unsigned int *bits = stb__arial_21_latin1_pixels;
        unsigned int bitpack = *bits++, numbits = 32;
        for (i=0; i < STB_FONT_arial_21_latin1_BITMAP_WIDTH*height; ++i)
            data[0][i] = 0;  // zero entire bitmap
        for (j=1; j < STB_FONT_arial_21_latin1_BITMAP_HEIGHT-1; ++j) {
            for (i=1; i < STB_FONT_arial_21_latin1_BITMAP_WIDTH-1; ++i) {
                unsigned int value;
                if (numbits==0) bitpack = *bits++, numbits=32;
                value = bitpack & 1;
                bitpack >>= 1, --numbits;
                if (value) {
                    if (numbits < 3) bitpack = *bits++, numbits = 32;
                    data[j][i] = (bitpack & 7) * 0x20 + 0x1f;
                    bitpack >>= 3, numbits -= 3;
                } else {
                    data[j][i] = 0;
                }
            }
        }
    }

    // build font description
    if (font != 0) {
        float recip_width = 1.0f / STB_FONT_arial_21_latin1_BITMAP_WIDTH;
        float recip_height = 1.0f / height;
        for (i=0; i < STB_FONT_arial_21_latin1_NUM_CHARS; ++i) {
            // pad characters so they bilerp from empty space around each character
            font[i].s0 = (stb__arial_21_latin1_s[i]) * recip_width;
            font[i].t0 = (stb__arial_21_latin1_t[i]) * recip_height;
            font[i].s1 = (stb__arial_21_latin1_s[i] + stb__arial_21_latin1_w[i]) * recip_width;
            font[i].t1 = (stb__arial_21_latin1_t[i] + stb__arial_21_latin1_h[i]) * recip_height;
            font[i].x0 = stb__arial_21_latin1_x[i];
            font[i].y0 = stb__arial_21_latin1_y[i];
            font[i].x1 = stb__arial_21_latin1_x[i] + stb__arial_21_latin1_w[i];
            font[i].y1 = stb__arial_21_latin1_y[i] + stb__arial_21_latin1_h[i];
            font[i].advance_int = (stb__arial_21_latin1_a[i]+8)>>4;
            font[i].s0f = (stb__arial_21_latin1_s[i] - 0.5f) * recip_width;
            font[i].t0f = (stb__arial_21_latin1_t[i] - 0.5f) * recip_height;
            font[i].s1f = (stb__arial_21_latin1_s[i] + stb__arial_21_latin1_w[i] + 0.5f) * recip_width;
            font[i].t1f = (stb__arial_21_latin1_t[i] + stb__arial_21_latin1_h[i] + 0.5f) * recip_height;
            font[i].x0f = stb__arial_21_latin1_x[i] - 0.5f;
            font[i].y0f = stb__arial_21_latin1_y[i] - 0.5f;
            font[i].x1f = stb__arial_21_latin1_x[i] + stb__arial_21_latin1_w[i] + 0.5f;
            font[i].y1f = stb__arial_21_latin1_y[i] + stb__arial_21_latin1_h[i] + 0.5f;
            font[i].advance = stb__arial_21_latin1_a[i]/16.0f;
        }
    }
}

#ifndef STB_SOMEFONT_CREATE
#define STB_SOMEFONT_CREATE              stb_font_arial_21_latin1
#define STB_SOMEFONT_BITMAP_WIDTH        STB_FONT_arial_21_latin1_BITMAP_WIDTH
#define STB_SOMEFONT_BITMAP_HEIGHT       STB_FONT_arial_21_latin1_BITMAP_HEIGHT
#define STB_SOMEFONT_BITMAP_HEIGHT_POW2  STB_FONT_arial_21_latin1_BITMAP_HEIGHT_POW2
#define STB_SOMEFONT_FIRST_CHAR          STB_FONT_arial_21_latin1_FIRST_CHAR
#define STB_SOMEFONT_NUM_CHARS           STB_FONT_arial_21_latin1_NUM_CHARS
#define STB_SOMEFONT_LINE_SPACING        STB_FONT_arial_21_latin1_LINE_SPACING
#endif

