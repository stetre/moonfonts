// Font generated by stb_font_inl_generator.c (4/1 bpp)
//
// Following instructions show how to use the only included font, whatever it is, in
// a generic way so you can replace it with any other font by changing the include.
// To use multiple fonts, replace STB_SOMEFONT_* below with STB_FONT_arial_bold_31_usascii_*,
// and separately install each font. Note that the CREATE function call has a
// totally different name; it's just 'stb_font_arial_bold_31_usascii'.
//
/* // Example usage:

static stb_fontchar fontdata[STB_SOMEFONT_NUM_CHARS];

static void init(void)
{
    // optionally replace both STB_SOMEFONT_BITMAP_HEIGHT with STB_SOMEFONT_BITMAP_HEIGHT_POW2
    static unsigned char fontpixels[STB_SOMEFONT_BITMAP_HEIGHT][STB_SOMEFONT_BITMAP_WIDTH];
    STB_SOMEFONT_CREATE(fontdata, fontpixels, STB_SOMEFONT_BITMAP_HEIGHT);
    ... create texture ...
    // for best results rendering 1:1 pixels texels, use nearest-neighbor sampling
    // if allowed to scale up, use bilerp
}

// This function positions characters on integer coordinates, and assumes 1:1 texels to pixels
// Appropriate if nearest-neighbor sampling is used
static void draw_string_integer(int x, int y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0, cd->t0); glVertex2i(x + cd->x0, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t0); glVertex2i(x + cd->x1, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t1); glVertex2i(x + cd->x1, y + cd->y1);
        glTexCoord2f(cd->s0, cd->t1); glVertex2i(x + cd->x0, y + cd->y1);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance_int;
    }
    glEnd();
}

// This function positions characters on float coordinates, and doesn't require 1:1 texels to pixels
// Appropriate if bilinear filtering is used
static void draw_string_float(float x, float y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0f, cd->t0f); glVertex2f(x + cd->x0f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t0f); glVertex2f(x + cd->x1f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t1f); glVertex2f(x + cd->x1f, y + cd->y1f);
        glTexCoord2f(cd->s0f, cd->t1f); glVertex2f(x + cd->x0f, y + cd->y1f);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance;
    }
    glEnd();
}
*/

#ifndef STB_FONTCHAR__TYPEDEF
#define STB_FONTCHAR__TYPEDEF
typedef struct
{
    // coordinates if using integer positioning
    float s0,t0,s1,t1;
    signed short x0,y0,x1,y1;
    int   advance_int;
    // coordinates if using floating positioning
    float s0f,t0f,s1f,t1f;
    float x0f,y0f,x1f,y1f;
    float advance;
} stb_fontchar;
#endif

#define STB_FONT_arial_bold_31_usascii_BITMAP_WIDTH         256
#define STB_FONT_arial_bold_31_usascii_BITMAP_HEIGHT        128
#define STB_FONT_arial_bold_31_usascii_BITMAP_HEIGHT_POW2   128

#define STB_FONT_arial_bold_31_usascii_FIRST_CHAR            32
#define STB_FONT_arial_bold_31_usascii_NUM_CHARS             95

#define STB_FONT_arial_bold_31_usascii_LINE_SPACING          20

static unsigned int stb__arial_bold_31_usascii_pixels[]={
    0x80000266,0x98800098,0x00998800,0x01980310,0x3aa9ddd1,0x3a1eeeee,
    0x404eeeee,0x880001a8,0x08800000,0x20cc4000,0x03000198,0x3000c000,
    0x000c0013,0xfe800131,0x3b260006,0x2dffffff,0x0dfffa80,0x4c05ff90,
    0xf900fffe,0xbfff101f,0x3fffffee,0x3fffffe1,0x0027d405,0x7ffff64c,
    0xca8000cd,0x0cdefffd,0xf07ffc00,0xcb8801ff,0x02dffffe,0x3fffb260,
    0x1ffa01de,0x1bfffb10,0x0027fc40,0x7000bfea,0xfffffffd,0x405fffff,
    0x80fffffa,0xff502ffc,0xff101fff,0x57ffe209,0x1ffffffb,0x17fffffe,
    0x0effff5c,0xfffffc80,0x002fffff,0xffffffb1,0x2005ffff,0x3fe26ff8,
    0x7fffdc07,0x0effffff,0x7ffffe40,0xc80dffff,0x3ffa00ff,0xf900ffff,
    0xdff0001f,0x3fff6200,0xdcaaabcf,0xa80dfffe,0xc83fffff,0xfffd02ff,
    0x3ffb01ff,0x98966640,0x3e1fffb9,0x44099dff,0xfffffffd,0xfffd100e,
    0xffffffff,0xffe880bf,0xffffffff,0xffa805ff,0xd817fea4,0xffffffff,
    0x880effff,0xfffffffe,0xfa86ffff,0x1bff502f,0xff107ff9,0x3ff20009,
    0x6fffcc02,0xbfff5002,0x17ffe620,0x3e20bff2,0xf9809dff,0x7d40006f,
    0x13ffe1ff,0xffffffc8,0xffb04fff,0xd7537bff,0x6c07ffff,0xa9bdffff,
    0x02ffffeb,0xff71ffe4,0x3ffff209,0xffecaabe,0xfffc85ff,0xffec9acf,
    0x27fc42ff,0xff52ffc8,0x001ff90b,0x881bfe60,0x88003ffe,0x3f603ffd,
    0x82ffc85f,0x3602fff8,0x555403ff,0x21fffa81,0xff104fff,0xff99f5bf,
    0xffffa81f,0xffffb103,0x7ffff701,0x07fffec0,0x7ec3ffb0,0xffffa82f,
    0x3ffff203,0x07fffe60,0x7437ffe4,0x23ffb06f,0x7fc46ff8,0x7ffc0004,
    0x305ffb02,0x2aaa1597,0x3201ffd1,0x2ffc86ff,0x301fff98,0x7c401fff,
    0xfffa85ff,0x5413ffe1,0xf4fa8fff,0xffff83bd,0x4fffe803,0x803ffff8,
    0x3f64fffe,0xffffffff,0x360fffff,0xfe804fff,0x3fffa2ef,0x3bffe203,
    0x6c07fe41,0x8dff11ff,0x40000ffc,0xffa85ffc,0x7ffffcc4,0xf34fff9f,
    0x1fff207f,0x3e60bff2,0xdff701ff,0x85fff880,0x3fe1fffa,0x2fff504f,
    0x7fcc04fa,0xffa800ff,0x7fffc47f,0x6fffa800,0x3ffffff6,0xffffffff,
    0x01ffff10,0xfff10330,0x2015300f,0xffc82ffb,0x7c4bff32,0xfb80004f,
    0x4c6fe87f,0xfffeffff,0x1bf62fff,0x7e43ffdc,0x1fff982f,0x880bffb0,
    0xffa85fff,0x413ffe1f,0x4faafff8,0x027ffd40,0xf98ffff0,0x3fe004ff,
    0xffffb0ff,0xffffffff,0x3ffea1ff,0x7fcc0005,0xf980005f,0x95ffa84f,
    0x07fe49ff,0x7ffd4000,0xf98ffe60,0xffb11dff,0x83fdc1ff,0xffc87ffb,
    0x80fffa82,0x4404fff8,0xffa85fff,0x813ffe1f,0x04fefffe,0x001fffdc,
    0x7dc3fffd,0x3fa003ff,0x3ffc81ff,0x3ee0ffee,0x540004ff,0x00004fff,
    0x3ffa0dff,0xff10ffff,0x3e600009,0x87ff21ff,0xffa86ffd,0x407fd47f,
    0x7e42fff9,0x07ffc82f,0x8807fff3,0xffa85fff,0x813ffe1f,0xbefffffb,
    0x05fffb00,0x917ffec0,0x6c005fff,0xffd82fff,0x320bff61,0x99703fff,
    0x32799999,0x00003fff,0xfb101ffb,0x7fe43dff,0xff100000,0xf33ff47f,
    0x3ffe05ff,0xf807fcc5,0x3ff21eff,0x82fffcc2,0x4402fffa,0xffa85fff,
    0x013ffe1f,0xfffffffb,0x05fffb09,0xb17ffec0,0x6c005fff,0xfff82fff,
    0x3203ffe0,0xffb03fff,0x32dfffff,0x00003fff,0x4c405ff7,0x2a27fc40,
    0xff8002cc,0xfc97fe4f,0x0fffe06f,0x7fdc0ff7,0x25ff96ff,0x01fffff8,
    0x8803fff7,0xffa85fff,0x013ffe1f,0x3fffffae,0x3fff20ef,0x3fffa003,
    0x00ffff21,0x441fffe8,0x1ffe26ff,0xd827ffd4,0x6fffffff,0x0009fff7,
    0x0013fe60,0x7f443ff2,0x2000efff,0x93fe5ffe,0xff305ffe,0x406fd83f,
    0xff96fffb,0x07fffe25,0x400fffb8,0xfa85fff8,0x13ffe1ff,0xfffffb80,
    0x13ffee4f,0x20ffff80,0x2004fffb,0xffb0ffff,0xffffffff,0x3e21ffff,
    0x999705ff,0x3eadfff9,0x008805ff,0x44006ff8,0x33ff64ff,0x3a005ffd,
    0x45ff14ff,0xff503fff,0x204ff81f,0xf96fffe8,0x3fffe25f,0x03ffee04,
    0x50bfff10,0x7ffc3fff,0x2f3ea004,0x3fe67fff,0x2a0b886f,0x7fcc7fff,
    0xfff3007f,0x7ffffecf,0xffffffff,0x03fffa0f,0x45bffe20,0xfd806fff,
    0x0ffb00bd,0xf10ffc80,0x007ffcff,0x3fe3fff8,0x6c0fffe2,0x07fec6ff,
    0x27bfffb0,0xff912ffc,0x3fe605ff,0x7ffc401f,0x21fffa85,0x2a004fff,
    0x21fff74f,0x643ffff8,0xbfffd3ff,0x03ffff88,0x365fffe8,0xffffffff,
    0x20ffffff,0x8804fffd,0x3ffe6fff,0x3ffe602f,0x03ff702f,0xf993fe20,
    0x007ffa5f,0x7ff17ffc,0x7cc2fff4,0x13fee5ff,0x644fff88,0x7ffc42ff,
    0x05fff106,0xa85fff88,0x3ffe1fff,0x2a9db904,0x41fff34f,0x361ffffb,
    0xffffffff,0x2ffffb81,0x03ffff20,0x1fff1ffe,0x1ffffd40,0x4dfff910,
    0xb00efffa,0x7cc0ffff,0x1ff9003f,0xffb27fd4,0x3fff1005,0xfffb2ff4,
    0xa7fff441,0x2a00effb,0x7fe41fff,0x207ffb82,0x7c402fff,0xfffa85ff,
    0x6c13ffe1,0x74fa8fff,0xfffd0fff,0x3ffea37f,0x3fa04fff,0xa98acfff,
    0x983ffffe,0x1bfe26ff,0x37ffff60,0xfffca89a,0x7fff46ff,0xffeb99bf,
    0x2ffc03ff,0x2627fc40,0x07ffa5ff,0xb83ffea0,0xffff30ff,0xffffff99,
    0xb801dfff,0x2ffc87ff,0xb00fff98,0xff8807ff,0x1fffa85f,0x7dc13ffe,
    0xe9cfbeff,0xfff985ff,0xffffffff,0x3e602fff,0xffffffff,0xf506ffff,
    0x02ffd49f,0x7fffff44,0xffffffff,0x7fffcc3f,0xffffffff,0x807fe805,
    0x7fc40ffd,0x2003ffe6,0x7fc46ffb,0x3ffffee4,0xffffffdf,0x0fff7005,
    0xff305ff9,0x17ff203f,0x50bfff10,0x7ffc3fff,0x3ffffa04,0x00ffffff,
    0xffffffb1,0xbfffffff,0x3fff6203,0x3fffffff,0xfb8fff20,0x3ff2003f,
    0xffffffff,0xffb100df,0xbfffffff,0x807ff200,0xffb04ff8,0x200bff99,
    0xffd83ffd,0x4b7fb661,0x4c1bdfea,0x86ffc809,0xff982ffc,0x0fff501f,
    0xa85fff88,0x3ffe1fff,0x3fffe604,0x802fffff,0xefffffda,0x07ffffcc,
    0x7ffffed4,0x7ff401de,0x000bff61,0xffffff93,0x3ae0039b,0x02efffff,
    0xd80ffea0,0xfff300ff,0x3e001dff,0xfff880ff,0x7f440001,0x86ffc82f,
    0xff882ffc,0x07ffa01f,0xa84fffa8,0x3ffe1fff,0x7ffec404,0x88000dff,
    0x3ffe9819,0x00066200,0x0aaa8555,0x02a62000,0x00662000,0xd101aa80,
    0xddb8807d,0x9ff3000b,0x01fffd40,0x05fffa80,0xff90dffb,0x07fff105,
    0x6e41ffd4,0x5533ffff,0x7fc3fff9,0x5c01aadf,0x8000005f,0x0000006b,
    0x00000000,0x00000000,0x80000000,0x7dc00ffc,0x101aceff,0x1bfffb53,
    0x2fffedc4,0xff817fe4,0xdfd02cff,0x3fffffd0,0x3fffffee,0x3fffffe1,
    0x0027d405,0x00000000,0x00000000,0x00000000,0x00000000,0x004ff880,
    0xffffffd3,0xfffffbbd,0xfff507ff,0x5ff905ff,0x3fffff20,0x221ffb80,
    0x2e3fffff,0x21ffffff,0x05ffffff,0x3e601f4c,0xffffffff,0x03ffffff,
    0x00000000,0x00000000,0x00000000,0xff700000,0xffda8003,0xffffffff,
    0xff500bef,0x3ff20bff,0xffffd102,0xc897fe01,0x664c2cde,0x3320cccc,
    0x0002cccc,0xffffff30,0xffffffff,0x0000007f,0x00000000,0x00000000,
    0x00000000,0x880013b6,0xcceedcca,0xcde9801b,0x00bbae01,0x2a01dd97,
    0x000000ee,0xb8800000,0xbbbbbbbb,0x01bbbbbb,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x31000000,0x00440000,0x54c26600,
    0x2aaa00aa,0x5442aaa2,0xba800acc,0x155510bc,0x21599510,0x4400aaa8,
    0x40001000,0xb880eeeb,0xd101cded,0x4c0007dd,0x400cdedb,0xccccccc9,
    0x36e602cc,0x90000cee,0x77741ddd,0x8813bba4,0x02effffc,0x7ffee440,
    0x26000cef,0x7fff74ff,0x453ffe60,0xfff9bfff,0xfd101eff,0xff35ffff,
    0xfffe983f,0x0fffaaff,0x5fffec88,0x4000f910,0x74c0fffc,0x82ffffff,
    0x0004fff8,0xfffffff7,0x7fffe407,0x705fffff,0x5fffffff,0x1fffd000,
    0xfff2fffc,0x3fffe60b,0x3004ffff,0xffffffff,0x3ee007ff,0x0dfff12f,
    0x7c47fff2,0xfffffdff,0x7fc41fff,0xfdffffff,0x3ffe61ff,0xffdfffff,
    0xffffe80f,0x07ffa86f,0x83fff200,0xfffffff8,0x7ffc41ff,0xfffc8004,
    0x02ffffff,0xfffffffb,0xfffb0bff,0x01ffffff,0x20fffe80,0x3ffe5fff,
    0x9bfffd05,0xa803fffd,0xffffffff,0xd802ffff,0x3fff60ff,0x226ffe81,
    0xcbffffff,0x7ec6ffff,0xffeacfff,0x3ffa1fff,0xfffeabff,0x7ffcc0ff,
    0xffe84eef,0x3ff20007,0x37ffee0f,0x445fffc9,0xf8004fff,0xffc9bfff,
    0xfffff07f,0x98bfffff,0xfd9cffff,0x7f4004ff,0x97ffe0ff,0xff883ccc,
    0x027ff44f,0x26f7fff6,0x0ffffeb9,0x3ea37fc0,0x7ffcc3ff,0x13fffe24,
    0x265fffd1,0x7d40ffff,0xfff51fff,0x1ffff70d,0x403fffa8,0x20007ffe,
    0x3fe0fffc,0x07ffec6f,0x8009fff1,0x7f42fffa,0x7ffc41ff,0x3fff6003,
    0x0037ffc0,0xff83fffa,0x3fe2005f,0x027ff45f,0x7c41bffe,0x3e601fff,
    0x46fff84f,0x3e21fffc,0xffa81fff,0x07fff74f,0x7e47fffa,0xfffd02ff,
    0x01fffb81,0x55fffd53,0x17995103,0x7d43fff2,0x7ffcc3ff,0x453ffe24,
    0xb980accb,0x1fffc85c,0x800fffcc,0x9984fff9,0xfffe8001,0xaa97ffe0,
    0x3ffff02a,0x980bffea,0x3f205fff,0x3fee02ef,0x21fffc82,0x7fc46ffe,
    0xbfff107f,0x6407fff2,0xfffb1fff,0x43fff601,0xabfffda9,0x7ffffe42,
    0x7ffcc4ff,0xfffcafff,0x885fff70,0x3fe25fff,0xfffffacf,0x7ffc001f,
    0x30fffb87,0x17ffd401,0x3ffa0000,0xf97ffe0f,0xfff705ff,0x01ffff7d,
    0x00cffff8,0x407fec00,0xff33fff9,0x5fff887f,0x7edbffe0,0xfff700ff,
    0x403fffa3,0xff90fffc,0x41ffffff,0xfffffffc,0x3ffffe64,0x0fffffff,
    0xff03fff9,0x7fffc4bf,0xffffffff,0x7fed4402,0xdfffc83f,0xfb82efff,
    0xbdec99ff,0xfffd0000,0xff2fffc1,0x7fff40bf,0xd801ffff,0x1bdfffff,
    0x206ff800,0xfff76ffe,0x05fff881,0x7fe5bffe,0x3fff900f,0x6c03fff6,
    0xfff90fff,0x541fffff,0x2ccffffc,0x2afffffa,0x90fffffe,0xfff03fff,
    0x7ffffc4d,0x6ffffbae,0x1ffffec0,0xffffffe8,0x7fe44fff,0xefffffcf,
    0xfffe8001,0xff97ffe0,0x3ffee05f,0xf1000dff,0xffffffff,0x9ff30039,
    0x74fffdc0,0xfff885ff,0x29fff106,0xfb01fffb,0x3fff23ff,0x21fffd01,
    0xcdfffeca,0x50fffd04,0xfb81dfff,0xfffb0fff,0x44ffff01,0x7443ffff,
    0x3fa02fff,0xfff00eff,0xfffffdff,0x7ffffec5,0x00ffffff,0xf07fff40,
    0x2fffcbff,0xffffffb8,0x7ff4c003,0x4fffffff,0x1017fdc0,0x5fffbfff,
    0x03ffff10,0x3ea7fff7,0xfff884ff,0x0bfff71f,0xc81ffff5,0x7f401fff,
    0x2fffc87f,0x3a1ffff0,0xfff80fff,0x41bffe27,0x3e04fffa,0x443ffffe,
    0x3ee24ffe,0xfffb0fff,0xfff9119f,0xfffe800b,0xff97ffe0,0x7ffec45f,
    0x531fffff,0xfffb7001,0x40bfffff,0x7ec00ffd,0xf107ffff,0x7d45dfff,
    0x3ffe0fff,0xfffd50bf,0x77fffc3f,0xfffffd9a,0x00fffe40,0x3f61fffa,
    0xfffb00ff,0x203fff61,0x3fe27fff,0xbfff105f,0x5fffb100,0x7fff4020,
    0xd0ffffb1,0x74001fff,0x3ffe0fff,0xfb17ffe5,0xfffb1dff,0x00dff91d,
    0x3ffff6a2,0x0fff03ff,0x9fffff50,0x3ffffe20,0x4fffffef,0x77ffffdc,
    0x21ffffff,0xfffffffb,0x640fffff,0x7f401fff,0x07ffe87f,0x7e43fff2,
    0x6fff81ff,0xf813ffe2,0xff1006ff,0xffc800bf,0x0bfff93f,0x4003fff9,
    0x3fe0fffe,0x897ffe5f,0x3fa26fff,0x05fffdff,0xbfffd500,0x200bff10,
    0x101fffff,0xfffddfff,0xfb01dfff,0xfbdfffff,0xfffb83ff,0xfffcbfff,
    0x00fffe40,0x3f61fffa,0xfffb00ff,0x207ffee1,0x3fe25fff,0xbfff106f,
    0x07ffec00,0x27fff500,0xfa83fffb,0x175312ff,0x7c1fffd0,0x97ffe5ff,
    0x7cc3fffa,0x42ffffff,0x2200edcb,0xffa87fff,0xdfff9003,0xcafffc40,
    0x5c04ffff,0xfc8dffff,0xeeca81ff,0x90fff91c,0xfe803fff,0x1fffc87f,
    0x2e1fffd0,0x7fcc2fff,0x1fffe24f,0xaaa7ffcc,0x1fffd04c,0x3202aa62,
    0xfff52fff,0x23fff70b,0xfe83fffb,0xf2fffc7f,0x7ffecbff,0xfffffa81,
    0x04fffd86,0x7e43fffc,0xfff9001f,0x2fffc407,0x83300066,0x4001fffc,
    0xffc87ffd,0x3fff401f,0x441fffdc,0xff10ffff,0x2fffb8bf,0x207fffe2,
    0xffb3fffc,0x7fff983f,0x3a0ffff2,0xfff11fff,0x0fffd81f,0xf88bfff3,
    0x2fffc6ff,0x7fe4bfff,0xffff903f,0x1ffff70b,0x217ffee0,0xff1007fe,
    0x7fc401ff,0x9000005f,0x3bea3fff,0x0dffd04d,0xd803fff9,0x3e210fff,
    0x3faa2fff,0x3ff60fff,0x8dfff12f,0x20effff8,0xf70ffffb,0x3f663bff,
    0x3ffe65ff,0xbfff711f,0x51dfffc8,0x7fc4dfff,0xffea9dff,0xf2fffc4f,
    0x7ffd4bff,0x3fff222f,0x3e20efff,0xa89cefff,0x443ffffd,0x2e6605ff,
    0x4405fffe,0x00005fff,0x223fff90,0xa89cffff,0xfc84fffc,0x7fec01ff,
    0x3ff24fff,0xffffeeff,0x3ffea0ff,0x43ffffef,0xeffffff8,0x744fffff,
    0xffffffff,0x7ffec0ff,0x1fffffef,0x7fffffc4,0x7e41ffff,0xffffffff,
    0xf2fffc0e,0xfffe8bff,0xfffffeff,0x2a1fffff,0xffffffff,0x540effff,
    0x3ff603ff,0x4401ffff,0x00005fff,0x6c3fff90,0xffffffff,0xffc80fff,
    0x7ffd401f,0x3ff625ff,0xffbeffff,0x7fffe40f,0x7c40dfff,0xffffebff,
    0x7fc40dff,0x1fffffff,0xfffffe88,0xff501fff,0x07ffffff,0xffffffd1,
    0xbfff03ff,0x3a22fffc,0xffffffff,0x86fffccf,0xfffffffc,0xfc80dfff,
    0x3fff201f,0xff8803ff,0x9000005f,0x7ec43fff,0xefffffff,0x03fff901,
    0x0bffff90,0x51bffff7,0xfd501fff,0x3e209fff,0xffffb2ff,0x7ffe4409,
    0x7dc00cff,0x400dffff,0x1effffd8,0x7ffffe40,0x4bfff02e,0xfd705fff,
    0x4c3bffff,0xffb300fe,0x407dffff,0x76d407fe,0x2aa001cd,0x3000001a,
    0x99301555,0xc8059bdd,0x31001fff,0x00031003,0x200004c4,0x0ccc0009,
    0x0004c400,0x44000998,0x0000009a,0x2200a988,0x01331001,0x0000aaa0,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0xbdeeca80,0xefec9800,0x1bbba02c,0x009ddd10,
    0x77775400,0xeeeeeeee,0x2f77646e,0x8f7774c0,0x203eeed8,0x323eeed8,
    0xdd301eee,0x776c09dd,0x017776c6,0xd51eeed8,0xdddddddd,0x43dddddd,
    0x6c004eee,0xeeeeeeee,0xd100bcee,0xe88007dd,0x7ddd55ee,0xffffff90,
    0x7ffec03d,0xf80dffff,0x7fc407ff,0xfffb706f,0x3fee017d,0xffffffff,
    0x7fcc7fff,0x7ff403ff,0x7fffdc4f,0x1dfff900,0xb81fffe4,0xf107ffff,
    0xfffb8dff,0x7fff9805,0x3fffffea,0xffffffff,0x017ffe2f,0xfffffff0,
    0x3dffffff,0x009fff10,0xf76fff88,0xfffd89ff,0x81ffffff,0xfffffffb,
    0x7fff85ff,0x237ffc40,0xffffffea,0xfffb83ff,0xffffffff,0xfffb87ff,
    0xffff700f,0x0bfffd01,0xa85ffff3,0xffd05fff,0xff501fff,0xffff889f,
    0x27ffdc00,0xfffffff5,0xffffffff,0x002fffc5,0x3ffffffe,0xffffffff,
    0x027ffc41,0x5dbffe20,0x3fea4fff,0xffffabff,0x8bffff85,0x7c1fffea,
    0x7fc407ff,0x3fffe66f,0x2fffffff,0x5555554c,0x5ffffcaa,0x109fffd0,
    0x2605ffff,0x7f42ffff,0xfff885ff,0xfffff887,0x2fffc82f,0x403fffe8,
    0x2a21fffe,0xfffdaaaa,0x20aaaaad,0x7c005fff,0xcbaaafff,0x44ffffdc,
    0x4004fff8,0xff76fff8,0x0fffec9f,0xf983fffa,0x7ffd44ff,0x203fffc2,
    0x3fa6fff8,0xff711cff,0x7c4001ff,0xf300efff,0xffc83fff,0x7ffdc05f,
    0x1ffff70f,0x503fffa0,0x0bffffff,0xf701fffd,0x7fcc0dff,0xfff7006f,
    0x0bfff007,0x407fff80,0x7c47fffb,0x7c4004ff,0x9fff76ff,0x7e43fff4,
    0x3ffe64ff,0x21fffc42,0x7c407fff,0xdfff36ff,0x00bffee0,0x01ffffe8,
    0xf337ffe4,0xfd001fff,0xffff19ff,0x17ffe405,0x3ffbfff2,0x106fff87,
    0x2e01ffff,0xf7004fff,0xfff007ff,0x405e654b,0xff807fff,0x3ffe21ff,
    0x21aaaa84,0xff76fff8,0x42fffc7f,0x7fc5fff9,0x07ffd44f,0xf101fffe,
    0x3ffaadff,0x09fff101,0x0bffff60,0x4bfffe20,0x3003fffd,0xfffdffff,
    0x4fffa80b,0x7fdefff4,0x13ffe60f,0xd03fffd8,0x2e003fff,0xff803fff,
    0xffffe8df,0x03fffc3f,0xf107fffc,0xfffc89ff,0x5bffe20e,0x3fe3fffa,
    0x6fff986f,0x5cdfffe4,0xfff86ffe,0x37ffc407,0x7fff5004,0x9ffff700,
    0x7fffd400,0x4006fffa,0xfffffffc,0x2fffc400,0xff37fff1,0x17ffdc5f,
    0x10dfff50,0x5c00dfff,0xff803fff,0xffffffff,0x1fffe2ff,0x88ffff50,
    0x3fee4fff,0x7ffc40ef,0x745fff36,0x7fdc0fff,0xffffb87f,0xfff05fff,
    0x6fff880f,0x3fffa200,0x7fffcc00,0xfffd8005,0x4001ffff,0x3fffffe8,
    0x54ffff00,0x9fff1fff,0x2007ffe4,0x7dc0ffff,0x3ee003ff,0xfff803ff,
    0xffeaacff,0x2bfffe5f,0xffdcbaaa,0x7ffc43ff,0x01ffff54,0x3e2dfff1,
    0x3fff21ff,0x1ffffa23,0x3fffffa2,0x0ffff01f,0x006fff88,0x809ffff3,
    0x00effff8,0xfffff880,0xff50004f,0x7ec00dff,0x4fff91ff,0x3ffa7ffd,
    0x3fffc807,0x0007fff4,0xf007fff7,0xff889fff,0x3ffffe7f,0xffffffff,
    0xcfff885f,0x101ffffa,0x7ffcdfff,0x3bfffe20,0x0ffffffc,0x3fffffa2,
    0xfff82fff,0x37ffc407,0x27fffcc0,0x07ffff40,0xffff7000,0x3f60001f,
    0x7000ffff,0x3ffa5fff,0x223ffee5,0xfa805fff,0x3ffe26ff,0x7ffdc005,
    0x0ffff803,0x3fe7ffe8,0xffffffff,0xff102eff,0x03ffffdf,0xff37ffc4,
    0xffffa81f,0x27ffffff,0xb33efff8,0xfff85fff,0x37ffcc07,0x13fffe20,
    0x0bffff60,0x3fffa000,0xfff50002,0x2600dfff,0xfff8cfff,0x2abffe63,
    0xff003fff,0x3ffee3ff,0x7ffdc002,0x07fff803,0x7ffcfffb,0xffffeeef,
    0x7fffc403,0x2201ffff,0x1ffa6fff,0x4f7fff44,0x3fea6ffe,0x2fffc42f,
    0xf301fffe,0xffd80bff,0xfffb803f,0xfb00003f,0xf10003ff,0x7fffffff,
    0x2bbffe00,0x7ffc1fff,0x001fffbc,0x3fa9fff9,0x7dc000ff,0xfff803ff,
    0x21fffb06,0x7fd47fff,0x3fe204ff,0x06ffffff,0xfd9bffe2,0x3fe09806,
    0x41fff25f,0x7ff47ffd,0x3ffe600f,0x027ffc05,0x02ffffd4,0x3fffb000,
    0xdfffb000,0x001ffff9,0xdffbfffb,0xffbdff90,0x7ffcc00f,0x005fff8e,
    0x803fffb8,0xffb05fff,0x21fffe1f,0x104ffffa,0xffdfffff,0x3ffe205f,
    0x3001bf26,0x7ff49fff,0x0fffd80f,0xa80bfff6,0x3e604fff,0x7fc402ff,
    0x400006ff,0x4001fffd,0xfd2ffffa,0xff700bff,0xf509ffff,0x00bfffff,
    0xffdfffe8,0xffb8002f,0x5fff803f,0x3e1fffb0,0xfff907ff,0xffff105f,
    0x20ffff17,0x3ae6fff8,0x207f6d44,0x3f21fffc,0x7fff82ff,0xd037ffe4,
    0x74c07fff,0x3fa200ee,0x00000fff,0x000fffec,0x4cbffff1,0x4c03ffff,
    0x82ffffff,0x3ffffff8,0x7fffdc00,0xf70007ff,0xfff007ff,0x43fff60b,
    0x3fa07fff,0x7fc40fff,0x13ffee5f,0x201bffe2,0x3ee4fffa,0x7ffdc6ff,
    0xbfff911e,0xbeffff98,0xffffeb99,0xff900000,0x555559ff,0x00155555,
    0x8007fff6,0x640ffffd,0x2200ffff,0x00ffffff,0x03fffffd,0xfffff880,
    0xff70004f,0xbfff007f,0x7c3fff60,0x3fe607ff,0x7ffc45ff,0x207fff44,
    0xdd36fff8,0x7fffc45d,0x82ffffff,0xffeffffe,0xffd81fff,0xffffffff,
    0x774c04ff,0x3fff602e,0xffffffff,0xb003ffff,0x2a003fff,0xe882ffff,
    0x7f405fff,0x3f206fff,0xd0007fff,0x003fffff,0x00fffee0,0x7ec17ffe,
    0x0ffff0ff,0x22ffffc8,0x7d44fff8,0x7ffc45ff,0xa87fff56,0xffffffff,
    0xfffff102,0x2207ffff,0xfffffffd,0x4c00dfff,0x3f603fff,0xffffffff,
    0x03ffffff,0x003fffb0,0x40bffff1,0x203ffffa,0x204ffffc,0x005ffffa,
    0x0fffff70,0x1fffdc00,0xd82fffc0,0xffff0fff,0x4dfffd00,0xfd84fff8,
    0x3ffe21ff,0x507fff56,0x03bffffd,0xfffffc88,0xffeb801e,0x002effff,
    0x6c07fff3,0xffffffff,0x3fffffff,0x03fffb00,0x01ffff90,0x00ffffd8,
    0x405ffff5,0x003ffff8,0x09ffff10,0x1fffdc00,0xd82fffc0,0xffff0fff,
    0x9ffff300,0x2613ffe2,0x3fe26fff,0x07fff56f,0x98000cc4,0x3310001a,
    0xff300013,0x0000007f,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x3bbbb600,0x02ceeeee,0xd803dddb,
    0x3bbba4ee,0x3bb600ee,0xdddb0eee,0xeeed8001,0x3bbba600,0x80dddb0d,
    0x1005eee8,0xeed85fff,0xeeeeeeee,0xddddb3ee,0xdddddddd,0x77776c9d,
    0x01ccdeee,0x3bbbbbb6,0x101cdeee,0x7dc01555,0xdfd9306f,0xdd500079,
    0x551001dd,0xfffff035,0xbfffffff,0x05ffff81,0xfff37ff4,0x3e605fff,
    0xfd0fffff,0xff8001ff,0xffd100ff,0x3fffc3ff,0x01bffe20,0x3e17fff4,
    0xffffffff,0xfff4ffff,0xffffffff,0x7ffcbfff,0xffffffff,0xffff80cf,
    0xffffffff,0x2fffa86f,0x90dfff30,0xdfffffff,0x7ffec003,0xfff9803f,
    0xffffff83,0xffffffff,0x0bffffe0,0x3fe6ffe8,0xf704ffff,0x3a1fffff,
    0x7c000fff,0xfe880fff,0x7ffc2fff,0x37ffc407,0x17fffdc0,0x3ffffffe,
    0xf4ffffff,0xffffffff,0x7cbfffff,0xffffffff,0x7c1fffff,0xffffffff,
    0x545fffff,0xfe882fff,0x7ffe46ff,0x0effffff,0xfffff880,0x3fff9806,
    0xcaaffff8,0x4fffffcc,0x03fffffe,0xfff37ff4,0x3f60dfff,0xfd0fffff,
    0xff8001ff,0x7ff440ff,0x7fff82ff,0x037ffc40,0x0bffffe6,0x5555ffff,
    0x3e355555,0xaaaaafff,0x3e1aaaaa,0xcccaafff,0x7c5ffffe,0xaaaaafff,
    0x21ffffeb,0x74c2fffa,0x3e66ffff,0xfeb9cfff,0xffc804ff,0x4c02ffff,
    0xfff83fff,0x9ffff207,0x04ffffff,0x7ffcdffd,0xff80ffff,0xfd0fffff,
    0xff8001ff,0x7ffec0ff,0x0ffff02f,0x406fff88,0x42fffffe,0x7c007fff,
    0xff0007ff,0x7ffd40ff,0x01fffe2f,0x5447fff9,0xfff910aa,0x7fdcdfff,
    0x37ffcc3f,0x7fffffc0,0x5554405f,0x207fff81,0xff0ffff8,0xd03fffff,
    0x6fffcdff,0x7fcc2fff,0xfd0fffdf,0xff8001ff,0x3fff60ff,0x1fffe02f,
    0x40dfff10,0x2ffffffc,0x2003fffc,0xf0007fff,0xffb80fff,0x01fffe6f,
    0xd009fff3,0xdfffffff,0x740fffec,0x7fd407ff,0x00fffecf,0x03fffc00,
    0x7fc3fffe,0xe86fffff,0x37ffe6ff,0x7fdc4ffd,0xfd0fffce,0xff8001ff,
    0xffff90ff,0x07fff807,0x9837ffc4,0x2fffcfff,0x2003fffc,0xf0007fff,
    0xfff00fff,0x01fffe1f,0xd003fff7,0xdffd19ff,0x3ffe0330,0x47ffec06,
    0x0003fffb,0xf303fffc,0x77ffcfff,0x7f43fffe,0x2f7ffe6f,0x67fec6ff,
    0xffd0fffc,0xfff8001f,0x3ffffc8f,0x407fff80,0xfd06fff8,0x85fff57f,
    0x7c007fff,0xff0007ff,0xfffb00ff,0xa81fffe3,0xbd007fff,0x0037ff43,
    0x4409fff5,0xfff16fff,0xfff8000d,0xbffff507,0x7fd6fffc,0x9bffa0ff,
    0xfff9dfff,0x3f2bffe0,0x1fffd0ff,0xcffff800,0x803fffff,0xffffffff,
    0x6fffffff,0xff56ffc8,0xeffff85f,0x1eeeeeee,0x3ffffffe,0x47ffffff,
    0xfc807fff,0xfffff2ff,0xffffffff,0x3a06001d,0x3fa006ff,0x3fee02ff,
    0x0bfffa3f,0xeffff800,0xffffffee,0x6d7ffe2f,0x3ffa4fff,0x7fd7ffe6,
    0x91fff32f,0x3ffa1fff,0x7ffc000f,0xffffffff,0x7ffffc00,0xffffffff,
    0x7ffcc6ff,0xf85fff51,0xffffffff,0x3ffe2fff,0xffffffff,0x3fffc7ff,
    0xf9fffe40,0xffffffff,0x0001ffff,0xd8037ff4,0x7f405fff,0x3ffee0ff,
    0x3ffe0005,0xffffffff,0xafffc4ff,0xfd1ffff8,0xdafffcdf,0x2dff75ff,
    0xffd0fffc,0xfff8001f,0xffffffff,0x7ffffc05,0xffffffff,0x1fff46ff,
    0xff85fff5,0xffffffff,0x3fffe2ff,0xffffffff,0x03fffc7f,0xffa7ffdc,
    0xffffffff,0x0003ffff,0x3601bffa,0x2600ffff,0x7fc45fff,0xff0000ff,
    0xffffffff,0xbfff07df,0xfeb7ffdc,0x5d7ffe6f,0x29ffd7ff,0xffd0fffc,
    0xfff8001f,0xfff9bfff,0x3fffe03f,0xbaaaaaaa,0x3ff26fff,0x217ffd46,
    0xccccffff,0x3fe1cccc,0x999999ff,0x7ffc1999,0x3fffc807,0x5555ffff,
    0xbffff955,0xd017774c,0xffd80dff,0x7fe401ff,0x3fffd82f,0xf82eee98,
    0xaacccfff,0x17ffe01a,0xffd7fffd,0xf9afffcd,0x92fff9ff,0x3ffa1fff,
    0x7ffc000f,0x3fff24ff,0x0ffff00f,0xf36fff88,0xf95559ff,0x3fe559ff,
    0x7ffc007f,0xffff0007,0x25fffb00,0x7c407fff,0xfff50fff,0x037ff405,
    0x003ffffb,0xddddffff,0x30dfffdd,0xfff07fff,0x3ffe000f,0x7ffffcc5,
    0x97ffe6ff,0x0fffefff,0x3fa1fff9,0x7fc000ff,0x7ffc44ff,0x0ffff05f,
    0xf76fff88,0xffffffff,0x3febffff,0x7ffc007f,0xffff0007,0x23fffd00,
    0xfc807fff,0x5fff52ff,0xd837ff40,0xa801ffff,0xffffffff,0x42ffffff,
    0xff83fff9,0xfff0007f,0xfffff90b,0xb2fffcdf,0x64dfffff,0xfffd0fff,
    0xffff8001,0x2ffffb80,0x4407fff8,0xfff76fff,0xffffffff,0x1fffebff,
    0x00ffff00,0x501fffe0,0x7ffcffff,0x4fffc807,0x7405fff5,0xfffd86ff,
    0xfffd001f,0xffffffff,0xff98bfff,0x07fff83f,0x10bfff00,0x4dffffff,
    0x3fee5fff,0x3ff24fff,0x01fffd0f,0x00ffff80,0xf81ffffd,0x7fc407ff,
    0xfffff76f,0xffffffff,0x001fffeb,0x2000ffff,0x3a207fff,0x3ffe2fff,
    0x7fffc407,0xfd00fec2,0xffffb8df,0xdfff1001,0x75555555,0x8001ffff,
    0xf0007fff,0x3fea0bff,0x3ffe6fff,0x3ffffe65,0x743fff22,0xaaaabfff,
    0x3fe2aaaa,0xfff300ff,0x07fff8bf,0x8037ffc4,0x7fc2fffa,0x7ffc007f,
    0xaaaaaaaf,0x3ffe2aaa,0xfcaaaaaf,0x7ffc6fff,0xbaaaaaaf,0x7c0fffff,
    0x9bffa00f,0xcceffff8,0x7e44cccc,0xffd803ff,0x4277743f,0xf0007fff,
    0x7fec0bff,0x17ffe6ff,0x641fffff,0xfffd0fff,0xffffffff,0x3fffe1ff,
    0x3ffff600,0x101fffe2,0x2a00dfff,0x7ffc2fff,0x7fffc007,0xffffffff,
    0xffff0fff,0xffffffff,0xffff83ff,0xffffffff,0x3fa63fff,0x737ff403,
    0xffffffff,0xfff8ffff,0xfffa800f,0x7c2fffc6,0xff0007ff,0x7ffc40bf,
    0xb17ffe6f,0xffc8dfff,0xfffffd0f,0xffffffff,0x803fffe1,0xf0fffff8,
    0xff880fff,0xfff5006f,0x007fff85,0x7ffffffc,0xffffffff,0xfffffff0,
    0x03bfffff,0xffffffff,0x89ffffff,0xffe804fa,0x3fffff66,0x27ffffff,
    0x2006fffa,0x3fe2ffff,0x07fff85f,0x80bfff00,0x3fe6fffb,0x27ffdc5f,
    0x7f43fff2,0xffffffff,0xfff0ffff,0xfffb801f,0x80ffff4f,0x5006fff8,
    0xfff85fff,0x7fffc007,0xffffffff,0xffff0fff,0x59ddffff,0x7fffffc0,
    0x1cefffff,0x3ffa0010,0xffffff16,0x4fffffff,0x2003fffd,0x3fe5fffc,
    0x0000005f,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x33332e00,0xcccccccc,0x00000010,0x99971008,
    0x2aaa0159,0x40555501,0x000abcba,0x03799975,0x055e5cc0,0x2ccca980,
    0x2a055550,0xaaa881aa,0x2a155511,0x2aaaa0bc,0x98aaaa00,0x55502aaa,
    0x4eeb8035,0x88555440,0xcba81bcb,0x2777440a,0xfffffffd,0x363fffff,
    0x4000002e,0xfffd86da,0x441effff,0xffd05fff,0xffffd30f,0x7f4c05ff,
    0x05ffffff,0x7fffffdc,0x3ff6203f,0x642fffff,0x7fcc0fff,0x1fffb86f,
    0xff95fff1,0x1fffdcff,0x225fff88,0x7d44fffe,0x7e400fff,0x7ffcc06f,
    0x5fffffb9,0x5fffffd1,0xfd2fffc4,0xffffffff,0x3ff63fff,0x200000bf,
    0x7d46ffeb,0xffffffff,0x17ffe20f,0x3ea3fff4,0xffffffff,0xfffff883,
    0x903fffff,0xffffffff,0xffff10df,0x45ffffff,0x7dc2fff9,0x7fec0fff,
    0x3fbffe27,0x3fe24fff,0x5fff706f,0x11ffff98,0x9005ffff,0xff980dff,
    0xffffffef,0xfffffedf,0xbfff11ff,0x7ffffff4,0x366fffff,0x01cfffff,
    0xffff9100,0x77ffc4df,0x3fffeb9a,0x7417ffe2,0x7fff47ff,0x0ffffbad,
    0x4457ffe4,0x5c1fffea,0xfebeffff,0x7fec4fff,0xfffdacff,0x3627ffc6,
    0x7fc2ffff,0x3fffe24f,0x7ec1feff,0x7ffe81ff,0x36dfff90,0xf9004fff,
    0xfff980df,0xfffc9bef,0xffeaadff,0x09fff14f,0x70fffdc0,0xbfffffff,
    0x3ff66005,0x264fffff,0x7fd40fdc,0x17ffe24f,0xff73fff4,0x4fff887f,
    0x64437fec,0x3ffe209b,0x7fffcc2f,0xb0bfff31,0x7fe45fff,0x27ffffc6,
    0x7c45fff3,0x26024fff,0x7fcc4fff,0x3fffa04f,0x000efffd,0xf980dff9,
    0x7ff41fff,0x3ffe20ef,0x9801fd45,0xfb503fff,0x17dfffff,0xfffffd50,
    0xa80015df,0x3fe24fff,0x4fffd05f,0xfe81fffd,0x7fffe47f,0x7fd400ac,
    0x9fff703f,0x260bffee,0x1fffa81a,0x4dfffff3,0x7fc47ffc,0xffe800ff,
    0x007ffe47,0xfffffff1,0x33332e03,0xccccfffe,0x217ffe64,0xff83fffc,
    0x8017ec6f,0xb8805ffe,0x4ffffffe,0xfffffff7,0x6dcc0039,0x224fffff,
    0xffd05fff,0x557fff4f,0x47ffdaaa,0xfffffffa,0xfffc80bd,0x2bfff100,
    0x8000fffc,0x9ff73fff,0x3ffa1fff,0x037ffc45,0x3e1fffb8,0xffb805ff,
    0x3fa03fff,0xffffffff,0x3fe67fff,0x2fffc84f,0xfb16fff8,0x3ffee00b,
    0x7fecc000,0xffffb6ff,0x7e44005b,0xffffffff,0x417ffe24,0x3ffe7ffe,
    0xffffffff,0x7ffdc0ff,0x43ffffff,0x7fc07ffe,0x01fffb6f,0x36bffb00,
    0x8affdaff,0x7fc42fff,0xfff1005f,0x00bffea9,0x007ffff4,0xfffffffd,
    0x4cffffff,0xffc84fff,0x16fff81f,0x3fe001bf,0xfb50004f,0x3fff6dff,
    0xfd1000be,0xff37bfff,0x2fffc49f,0x3fe7ffe8,0xffffffff,0xfc981fff,
    0x3fffffff,0xf803fff6,0x1fffb6ff,0x1fff5000,0x9ff71fff,0xf881fff7,
    0x3f6005ff,0x00fffb7f,0x13ffffe6,0xffffffe8,0x27ffffff,0xfc83fff9,
    0x6fff81ff,0xfffb8006,0x3fae2001,0xff96ffff,0x8039ffff,0x7c43fffc,
    0x3ffe24ff,0x74ffff05,0x300007ff,0x4dffffb7,0xf301fffb,0x3fff29ff,
    0xf1013501,0x26dff9ff,0x85ffdeff,0x2004fff8,0xfffafff9,0xfffe8804,
    0x32001fff,0x7fcc06ff,0x1fffc83f,0x0006fff8,0x2a00dffd,0xeffffffd,
    0x7fffed43,0xfe80beff,0x4fff987f,0x7c437ffc,0x3fff67ff,0x4c41ab82,
    0xffe882ca,0x417ffe67,0xff73fffc,0x7fff709f,0x9fffffb0,0x17fffffc,
    0x0027ffc4,0x3ffffffa,0xefffd800,0x9000efff,0xff980dff,0x1fffc83f,
    0x2666fff8,0x3ffea009,0x3fff2202,0x401dffff,0xffffffc9,0x3fffe1cf,
    0x22fffec0,0x7f41fffe,0x3ffea7ff,0x97ffe60d,0xf80ffff8,0x7fffc6ff,
    0xdfff931d,0x867fffc4,0xb81fffe9,0x322fffff,0x880fffff,0x5c004fff,
    0x805fffff,0xfd8efffa,0xff9005ff,0x3fff980d,0xf81fffc8,0x3fff66ff,
    0x80fffb00,0xcffffffd,0x7fdc4000,0x3f66ffff,0xffecbeff,0x7ffe45ff,
    0xfffffddf,0x6fffff47,0x640ffffd,0xecbdffff,0x7fcc3fff,0xffffefff,
    0x7fffdc1f,0x05ffffef,0x41fffff1,0x105ffffa,0x88009fff,0x402fffff,
    0xf11ffff8,0xf9005fff,0xfff980df,0x81fffc83,0x7fec6fff,0x809fff04,
    0x00befffd,0xfffea800,0x3ffffe66,0x47ffeeff,0xffffffe8,0x7447ffcd,
    0xffffffff,0xfffffb02,0x260bffff,0xffffffff,0xffff902f,0x401dffff,
    0x7c46fffe,0xff103fff,0xffb0009f,0xfffb00ff,0x0ffffb89,0x2037fe40,
    0xfc83fff9,0x6fff81ff,0x2607ff44,0x7ec01fff,0x3000002d,0xffe98dfb,
    0x3fff54ff,0x3efffd88,0x3b20fff7,0x401cefff,0xefffffea,0x7ff64c02,
    0x75400dff,0x00bfffff,0x741fffdc,0xff100fff,0xff30009f,0xfffb809f,
    0x0bfffd06,0x4c009988,0xffc83fff,0x86fff81f,0x7fe42ee8,0x000d400f,
    0x10388000,0x04c00013,0x00131000,0x00133310,0x20001310,0x00000099,
    0x00000000,0x00000000,0x00000000,0x007ffd80,0x00000000,0x00000000,
    0x00000000,0x50000000,0x32ea2355,0x5555501b,0x05555555,0x20009988,
    0x99970099,0x99999999,0x9f775499,0xdd94eee9,0x0355103d,0x7ff40010,
    0x00000006,0x00000000,0x00000000,0x00000000,0xd17fff00,0xf07fffff,
    0xffffffff,0xffc80dff,0x40bfa007,0xfffffffe,0x2e7fffff,0xfff54fff,
    0x88bfff6b,0x0beffffd,0xff000f44,0x000000bf,0x00000000,0x00000000,
    0x00000000,0x37ffe000,0xffffffff,0x7fffffc2,0x206fffff,0x003ffff8,
    0x3ffa03fd,0xffffffff,0x3ffee7ff,0x36bfff54,0x3ffa2fff,0xceffffff,
    0xf1001ffe,0x000009ff,0x00000000,0x00000000,0x00000000,0x3ffe0000,
    0xffeaacff,0x7777746f,0x05ffffde,0x41bffff2,0x98fd8bf8,0x3ffffa4c,
    0xffffffff,0x553ffee7,0xfffb5fff,0x7fffffc5,0xffffffff,0x00000001,
    0x00000000,0x00000000,0x00000000,0x7fc00000,0x7ffc44ff,0xfffe8807,
    0x3fffe206,0xfffa82ff,0x007ffefe,0x4fffe600,0xff94fff8,0x5456fc3f,
    0xffffffec,0x0000000d,0x00000000,0x00000000,0x00000000,0x7c000000,
    0xfffd07ff,0x1dfffb00,0x7ef7fdc0,0xffdb886f,0x0003dfff,0xf8bffe20,
    0x8fff53ff,0x33bb2603,0x00000002,0x00000000,0x00000000,0x00000000,
    0xff000000,0x3fff60df,0x3ffff600,0x2fffe200,0x3201fff9,0xccb80fff,
    0xcccccccc,0x07ff44cc,0x3fe23ffb,0x00000006,0x00000000,0x00000000,
    0x00000000,0x00000000,0x20dfff00,0xf900fffd,0xfb803fff,0x0bffd0ff,
    0x03bf3ff2,0xfffffffd,0x88ffffff,0x260cc419,0x44444409,0x00000008,
    0x00000000,0x00000000,0x00000000,0x00000000,0xfd82fffc,0xfffb80ff,
    0x5fff802f,0xf703ffee,0xfd1bfa5f,0xffffffff,0x0000ffff,0xffffff10,
    0x0000005f,0x00000000,0x00000000,0x00000000,0x00000000,0xfd82fffc,
    0x7ffd40ff,0xfffa803f,0x213ffe21,0xfd07aa5c,0xffffffff,0x0000ffff,
    0xffffff10,0x0000005f,0x00000000,0x00000000,0x00000000,0x00000000,
    0xfd82fffc,0x3ffe60ff,0xdffd004f,0x101fffb0,0x00000000,0x7fffc400,
    0x00002fff,0x00000000,0x00000000,0x00000000,0x00000000,0x417ffe00,
    0xff10fffd,0x55555dff,0x33322155,0x01ccc982,0x00000000,0x6eeec400,
    0x00001ddd,0x00000000,0x00000000,0x00000000,0x00000000,0x417ffe00,
    0xff70fffd,0xffffffff,0x000003ff,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x17ffe000,0xfb87ffec,0xffffffff,
    0x00001fff,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0xbfff0000,0x5c3fff60,0xffffffff,0x0001ffff,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,
};

static signed short stb__arial_bold_31_usascii_x[95]={ 0,2,1,0,0,1,1,1,1,0,0,1,1,0,
1,-1,1,2,0,1,0,1,1,1,1,0,2,2,1,1,1,1,0,0,2,1,2,2,2,1,2,1,0,2,
2,1,2,1,2,1,2,1,0,1,-1,0,0,-1,0,1,-1,0,1,-1,0,0,1,1,1,0,0,1,1,1,
-2,1,1,1,1,1,1,1,1,0,0,1,0,0,0,0,0,0,2,0,0, };
static signed short stb__arial_bold_31_usascii_y[95]={ 25,5,5,4,3,4,4,5,4,4,4,8,21,15,
21,4,5,5,5,5,5,5,5,5,5,5,10,10,7,10,7,4,4,5,5,4,5,5,5,4,5,5,5,5,
5,5,5,4,5,4,5,4,5,5,5,5,5,5,5,5,4,5,4,28,4,10,5,10,5,10,4,10,5,5,
5,5,5,10,10,10,10,10,10,10,5,10,10,10,10,10,10,4,4,4,12, };
static unsigned short stb__arial_bold_31_usascii_w[95]={ 0,5,11,16,15,23,19,5,8,8,11,15,5,9,
5,9,14,9,15,14,15,14,14,14,14,15,5,5,14,15,14,15,27,20,17,18,17,16,14,19,16,5,14,18,
15,21,16,20,16,21,18,17,17,17,20,27,19,20,17,8,9,8,14,17,7,15,15,14,15,15,11,15,15,5,
8,15,5,22,15,15,15,15,11,15,9,14,16,22,16,15,14,11,4,10,16, };
static unsigned short stb__arial_bold_31_usascii_h[95]={ 0,20,8,22,25,22,22,8,27,27,11,15,9,5,
4,22,21,20,20,21,20,21,21,20,21,21,15,20,16,10,16,21,27,20,20,22,20,20,20,22,20,20,21,20,
20,20,20,22,20,23,20,22,20,21,20,20,20,20,20,26,22,26,12,3,5,16,21,16,21,16,21,21,20,20,
26,20,20,15,15,16,21,21,15,16,21,16,15,15,15,21,15,27,27,27,6, };
static unsigned short stb__arial_bold_31_usascii_s[95]={ 251,249,214,161,102,227,1,226,66,1,186,
209,248,232,246,39,151,199,209,182,109,197,212,1,17,1,246,193,31,198,16,
50,10,225,175,198,157,140,125,178,92,243,227,73,57,35,18,140,1,118,208,
21,174,32,153,125,105,84,66,93,217,84,171,118,248,46,166,125,135,77,113,
97,192,248,75,227,242,225,140,109,65,81,163,93,125,62,175,140,192,49,156,
54,49,38,232, };
static unsigned short stb__arial_bold_31_usascii_t[95]={ 1,52,111,1,1,1,29,111,1,1,111,
95,95,118,90,29,29,74,74,29,74,29,29,95,52,52,74,74,95,111,95,
52,1,74,74,1,74,74,74,1,74,52,29,74,74,74,74,1,74,1,52,
29,52,52,52,52,52,52,52,1,1,1,111,25,105,95,29,95,29,95,29,
29,52,29,1,52,29,95,111,95,29,29,95,95,29,95,95,95,95,29,111,
1,1,1,111, };
static unsigned short stb__arial_bold_31_usascii_a[95]={ 123,148,210,247,247,395,321,106,
148,148,173,259,123,148,123,123,247,247,247,247,247,247,247,247,
247,247,148,148,259,259,259,271,433,321,321,321,321,296,271,345,
321,123,247,321,271,370,321,345,296,345,321,296,271,321,296,419,
296,296,271,148,123,148,259,247,148,247,271,247,271,247,148,271,
271,123,123,247,123,395,271,271,271,271,173,247,148,271,247,345,
247,247,222,173,124,173,259, };

// Call this function with
//    font: NULL or array length
//    data: NULL or specified size
//    height: STB_FONT_arial_bold_31_usascii_BITMAP_HEIGHT or STB_FONT_arial_bold_31_usascii_BITMAP_HEIGHT_POW2
//    return value: spacing between lines
static void stb_font_arial_bold_31_usascii(stb_fontchar font[STB_FONT_arial_bold_31_usascii_NUM_CHARS],
                unsigned char data[STB_FONT_arial_bold_31_usascii_BITMAP_HEIGHT][STB_FONT_arial_bold_31_usascii_BITMAP_WIDTH],
                int height)
{
    int i,j;
    if (data != 0) {
        unsigned int *bits = stb__arial_bold_31_usascii_pixels;
        unsigned int bitpack = *bits++, numbits = 32;
        for (i=0; i < STB_FONT_arial_bold_31_usascii_BITMAP_WIDTH*height; ++i)
            data[0][i] = 0;  // zero entire bitmap
        for (j=1; j < STB_FONT_arial_bold_31_usascii_BITMAP_HEIGHT-1; ++j) {
            for (i=1; i < STB_FONT_arial_bold_31_usascii_BITMAP_WIDTH-1; ++i) {
                unsigned int value;
                if (numbits==0) bitpack = *bits++, numbits=32;
                value = bitpack & 1;
                bitpack >>= 1, --numbits;
                if (value) {
                    if (numbits < 3) bitpack = *bits++, numbits = 32;
                    data[j][i] = (bitpack & 7) * 0x20 + 0x1f;
                    bitpack >>= 3, numbits -= 3;
                } else {
                    data[j][i] = 0;
                }
            }
        }
    }

    // build font description
    if (font != 0) {
        float recip_width = 1.0f / STB_FONT_arial_bold_31_usascii_BITMAP_WIDTH;
        float recip_height = 1.0f / height;
        for (i=0; i < STB_FONT_arial_bold_31_usascii_NUM_CHARS; ++i) {
            // pad characters so they bilerp from empty space around each character
            font[i].s0 = (stb__arial_bold_31_usascii_s[i]) * recip_width;
            font[i].t0 = (stb__arial_bold_31_usascii_t[i]) * recip_height;
            font[i].s1 = (stb__arial_bold_31_usascii_s[i] + stb__arial_bold_31_usascii_w[i]) * recip_width;
            font[i].t1 = (stb__arial_bold_31_usascii_t[i] + stb__arial_bold_31_usascii_h[i]) * recip_height;
            font[i].x0 = stb__arial_bold_31_usascii_x[i];
            font[i].y0 = stb__arial_bold_31_usascii_y[i];
            font[i].x1 = stb__arial_bold_31_usascii_x[i] + stb__arial_bold_31_usascii_w[i];
            font[i].y1 = stb__arial_bold_31_usascii_y[i] + stb__arial_bold_31_usascii_h[i];
            font[i].advance_int = (stb__arial_bold_31_usascii_a[i]+8)>>4;
            font[i].s0f = (stb__arial_bold_31_usascii_s[i] - 0.5f) * recip_width;
            font[i].t0f = (stb__arial_bold_31_usascii_t[i] - 0.5f) * recip_height;
            font[i].s1f = (stb__arial_bold_31_usascii_s[i] + stb__arial_bold_31_usascii_w[i] + 0.5f) * recip_width;
            font[i].t1f = (stb__arial_bold_31_usascii_t[i] + stb__arial_bold_31_usascii_h[i] + 0.5f) * recip_height;
            font[i].x0f = stb__arial_bold_31_usascii_x[i] - 0.5f;
            font[i].y0f = stb__arial_bold_31_usascii_y[i] - 0.5f;
            font[i].x1f = stb__arial_bold_31_usascii_x[i] + stb__arial_bold_31_usascii_w[i] + 0.5f;
            font[i].y1f = stb__arial_bold_31_usascii_y[i] + stb__arial_bold_31_usascii_h[i] + 0.5f;
            font[i].advance = stb__arial_bold_31_usascii_a[i]/16.0f;
        }
    }
}

#ifndef STB_SOMEFONT_CREATE
#define STB_SOMEFONT_CREATE              stb_font_arial_bold_31_usascii
#define STB_SOMEFONT_BITMAP_WIDTH        STB_FONT_arial_bold_31_usascii_BITMAP_WIDTH
#define STB_SOMEFONT_BITMAP_HEIGHT       STB_FONT_arial_bold_31_usascii_BITMAP_HEIGHT
#define STB_SOMEFONT_BITMAP_HEIGHT_POW2  STB_FONT_arial_bold_31_usascii_BITMAP_HEIGHT_POW2
#define STB_SOMEFONT_FIRST_CHAR          STB_FONT_arial_bold_31_usascii_FIRST_CHAR
#define STB_SOMEFONT_NUM_CHARS           STB_FONT_arial_bold_31_usascii_NUM_CHARS
#define STB_SOMEFONT_LINE_SPACING        STB_FONT_arial_bold_31_usascii_LINE_SPACING
#endif

