// Font generated by stb_font_inl_generator.c (4/1 bpp)
//
// Following instructions show how to use the only included font, whatever it is, in
// a generic way so you can replace it with any other font by changing the include.
// To use multiple fonts, replace STB_SOMEFONT_* below with STB_FONT_courier_14_latin_ext_*,
// and separately install each font. Note that the CREATE function call has a
// totally different name; it's just 'stb_font_courier_14_latin_ext'.
//
/* // Example usage:

static stb_fontchar fontdata[STB_SOMEFONT_NUM_CHARS];

static void init(void)
{
    // optionally replace both STB_SOMEFONT_BITMAP_HEIGHT with STB_SOMEFONT_BITMAP_HEIGHT_POW2
    static unsigned char fontpixels[STB_SOMEFONT_BITMAP_HEIGHT][STB_SOMEFONT_BITMAP_WIDTH];
    STB_SOMEFONT_CREATE(fontdata, fontpixels, STB_SOMEFONT_BITMAP_HEIGHT);
    ... create texture ...
    // for best results rendering 1:1 pixels texels, use nearest-neighbor sampling
    // if allowed to scale up, use bilerp
}

// This function positions characters on integer coordinates, and assumes 1:1 texels to pixels
// Appropriate if nearest-neighbor sampling is used
static void draw_string_integer(int x, int y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0, cd->t0); glVertex2i(x + cd->x0, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t0); glVertex2i(x + cd->x1, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t1); glVertex2i(x + cd->x1, y + cd->y1);
        glTexCoord2f(cd->s0, cd->t1); glVertex2i(x + cd->x0, y + cd->y1);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance_int;
    }
    glEnd();
}

// This function positions characters on float coordinates, and doesn't require 1:1 texels to pixels
// Appropriate if bilinear filtering is used
static void draw_string_float(float x, float y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0f, cd->t0f); glVertex2f(x + cd->x0f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t0f); glVertex2f(x + cd->x1f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t1f); glVertex2f(x + cd->x1f, y + cd->y1f);
        glTexCoord2f(cd->s0f, cd->t1f); glVertex2f(x + cd->x0f, y + cd->y1f);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance;
    }
    glEnd();
}
*/

#ifndef STB_FONTCHAR__TYPEDEF
#define STB_FONTCHAR__TYPEDEF
typedef struct
{
    // coordinates if using integer positioning
    float s0,t0,s1,t1;
    signed short x0,y0,x1,y1;
    int   advance_int;
    // coordinates if using floating positioning
    float s0f,t0f,s1f,t1f;
    float x0f,y0f,x1f,y1f;
    float advance;
} stb_fontchar;
#endif

#define STB_FONT_courier_14_latin_ext_BITMAP_WIDTH         256
#define STB_FONT_courier_14_latin_ext_BITMAP_HEIGHT        110
#define STB_FONT_courier_14_latin_ext_BITMAP_HEIGHT_POW2   128

#define STB_FONT_courier_14_latin_ext_FIRST_CHAR            32
#define STB_FONT_courier_14_latin_ext_NUM_CHARS            560

#define STB_FONT_courier_14_latin_ext_LINE_SPACING           7

static unsigned int stb__courier_14_latin_ext_pixels[]={
    0x03800010,0x44c05000,0x804c0182,0x51301108,0x50a00980,0x01555007,
    0x00821853,0x20020186,0x30000502,0x0ae18601,0x000000c0,0x000a0026,
    0x701cc018,0x2a800c80,0x4dc406e0,0x53102a82,0x30777051,0x0aa05171,
    0x070a2a62,0x02206250,0x10241975,0x75710379,0x22055057,0x4c0ee00c,
    0x70732603,0x443ac880,0x5c2d88bc,0x900dc0b1,0x00ada881,0x00e01957,
    0x20054409,0x0830c019,0x04062601,0x81031301,0x41018980,0x410199c0,
    0x02066620,0x90088066,0x04018298,0x40088020,0x81313809,0x0dc70110,
    0x00010010,0x4c04100e,0x02231029,0x3104c0a5,0x12bbbb88,0x288f265b,
    0xc996c415,0xb1054a23,0x5288f265,0x3c996c41,0x4432a732,0x2627932d,
    0x3265b149,0x2ddd4123,0x757100a2,0x42ddd457,0x2a2bbab8,0xbab885bb,
    0x2055ce2b,0xc8b85bba,0x88b77500,0x3627932d,0x10387932,0x510f265b,
    0x1b535503,0x986e0288,0x1c1b11c3,0x8310c42a,0x22188543,0x0c42a1c1,
    0xb0543831,0x0a871c41,0x54150e38,0x4c910cc1,0x4ca62401,0x29891221,
    0x31224433,0x0cc0ddc5,0x82bcb891,0xa8712219,0x038150e0,0x0a98150e,
    0x36a62c38,0x22838e02,0x442a1c74,0x0a871223,0x50e24471,0x1c488e21,
    0x0e38482a,0x2a1c7015,0x8920e1c0,0x8380a203,0x48380a24,0x037b00a2,
    0x350b8907,0x2a1c4838,0x438150e0,0x54c150e2,0x090a22a9,0x445c0735,
    0x470b8cc3,0x43870543,0x43870543,0x43870543,0x54590543,0x470150e0,
    0x382a0543,0x4c6120a8,0x4c2a0e01,0x4c2a0e01,0x1c1b9c01,0x1c387054,
    0x20a87054,0x470e0543,0x1c4c0543,0x1538688e,0x2a205dc0,0x05438a1a,
    0x82a1c387,0x4150e1c3,0x4150e1c3,0x21c1bb8b,0x150e380a,0x22241c70,
    0x0710cbbd,0x4071241c,0xa80e2483,0x241c7d14,0x392a19b3,0x382a1c48,
    0xccec8854,0x54150e4c,0x5dc44aab,0x0389c439,0x151640ee,0x20a8705c,
    0x0a8705c4,0x2a1c1712,0x21c17120,0x20705c03,0x170382e3,0x35048866,
    0x88663090,0x2198c244,0x020c2448,0x020910cc,0x0b8910cc,0x081c170e,
    0x90e1c170,0x555d4380,0x32202e04,0x5e442bbb,0x6e5e441a,0x106af222,
    0x6445b979,0x65e441ab,0x86af222d,0x2f2201c8,0x88ea621a,0x47101abc,
    0x55104bba,0x41977b10,0xbd884bba,0x12eea0cb,0x5032ef62,0x812eea05,
    0x0977502a,0xc8835791,0x105501ab,0xabb83579,0x154c42da,0xc998330e,
    0x01002180,0x02004008,0x04008010,0x0200554c,0x000406aa,0x04400008,
    0x20088010,0x00004400,0x80100001,0x20000400,0x15500200,0x1b912db8,
    0x00005554,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x2e009800,0x01004303,
    0x44020391,0x10208533,0x10088099,0x10391035,0x82030c04,0x20000980,
    0x0402a008,0x13002000,0x94000a03,0x02a00028,0x0382ea00,0x2b222aac,
    0x5d543aad,0xa8388a81,0x4e1200cb,0x16eb221a,0x2ae60446,0x5dd40703,
    0x9c429982,0x40dd640b,0x2aaa050a,0x5c0e55c2,0x1bba82bc,0x30320170,
    0xc88f263b,0x24643baa,0x40ee02a8,0x556443ba,0x5105502b,0x39306607,
    0x39440013,0x1302110e,0x2600c0c4,0x0e111882,0x0cc44c47,0x040700c4,
    0x26620601,0x88260101,0x21101301,0x08440200,0x56411188,0x41525c5b,
    0x80221444,0x23100401,0x02070e08,0x98381d44,0x4b62099c,0x431c23c9,
    0x2e3baac8,0xbac88e61,0x53550705,0x4c40661b,0x2ea0b98b,0x5540705b,
    0x265b10ad,0x4493313c,0x0dc7932d,0xbaac8873,0x44b75913,0x5c47932d,
    0x26aa2bba,0x204330da,0x0a21538b,0xc88b7750,0x556445ba,0x36a6aa3b,
    0xaab890e0,0x641ccc5a,0x8701c1ce,0x8890380a,0x1c3871c2,0x1161c144,
    0x85470377,0x00e12219,0x70150e0e,0x38e05438,0x1c394448,0x2624150e,
    0x0ab8b0e2,0x26151738,0x10cc2621,0x8890e1c9,0xbab8b0e2,0x54351c0c,
    0x81c0cecd,0x70150e03,0x11700510,0x41c01987,0x81702428,0x4241c2a3,
    0x54383803,0x02a1c380,0x02887117,0x85438066,0x090a2028,0x2ae38751,
    0x3a554710,0x14406648,0x71c48510,0x15071083,0x701c0e07,0x198380a8,
    0x02ee0262,0x07106ee2,0x1512688e,0x541c2a38,0x1c1c01c0,0xa870e02a,
    0x0cc0bb80,0x0ddc4131,0x0066150e,0x43833447,0x38582ea3,0x5dc41507,
    0x20988661,0x04871a23,0x05b5b509,0x86eaea07,0x9d910543,0x09551c43,
    0x1c170077,0x64737710,0x3b2e3baa,0x49070a9c,0x870ccecb,0x1c054383,
    0x0770150e,0xb8255471,0x0e2150e0,0x64737710,0x93a63a9b,0x2eaf620d,
    0x85c09071,0xb892aa38,0x4336639b,0x04c6a0d8,0x1301c0e7,0x0181c170,
    0x9017070b,0x400710a8,0x0a800a83,0x40424433,0x0705c143,0xb81c170e,
    0x51270b00,0x848705c1,0x01908e01,0x33026004,0x20a89244,0x040e0385,
    0x7382a388,0x03202ba8,0x6406af22,0x1babd880,0x2b203266,0x1002a3ba,
    0x02a88553,0x97751266,0x757506a0,0x886af220,0x55e442a9,0x88064cc1,
    0x5591babd,0x1abc8877,0x2065dec4,0x40382a98,0x2a0aa02a,0x5d5644bb,
    0x0dd5ec43,0x0d40aa62,0x506e6664,0x1006000a,0x40440180,0x00200aaa,
    0x40005540,0x000201a8,0x54c04004,0x55540200,0x00804400,0x54022004,
    0x0000000a,0x22004010,0x00015500,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x88000000,
    0x88440aaa,0x0010c000,0x20020140,0x99900018,0x40000003,0x00603cc9,
    0x02180600,0x01118186,0x14010c00,0x0e319800,0x04000c97,0x64280510,
    0x0b265b14,0x01ddc063,0x0197503b,0x00dc0e32,0x02440533,0x44000e2e,
    0x55609104,0x655c0102,0x55c06e00,0x80cba80c,0x4ba80cba,0x9750a600,
    0x59106e01,0x4e383955,0x38871c28,0x0e20a660,0x0e1c0c88,0x00a94415,
    0x50040001,0x22004071,0x3300201a,0xc996c415,0x000e0383,0x2082ddd4,
    0x10401500,0x08010020,0x0f265b10,0x21c02004,0x21c71c09,0x440a20e3,
    0x0026441a,0x22150e1c,0xaac88621,0x2d555c2b,0x0c4b5557,0x5d564431,
    0x98310c42,0x1305abcd,0x0a80a870,0xb1045445,0x10ccb623,0x2d88ec49,
    0x32a0c4a2,0x6d4cb511,0x64c7662a,0x1c0b6a63,0xadac882a,0x3263b33a,
    0x2380c4e3,0x541c70e3,0x0e015300,0x8702b6a2,0x22388543,0x5470e1c4,
    0x8e21a8e1,0x710e1c48,0x38cdc244,0x0e1d4dcc,0x754dcc15,0x88b53710,
    0x2241c713,0xc9a87138,0x714a239c,0x0a92e070,0x54381cd4,0x5c71ca20,
    0x2ccb82a4,0x20c8e2a8,0x87537503,0x0382a9a9,0x150e1c0e,0x44870e1c,
    0x07108710,0x2121c387,0x4ccdc1c3,0x4382a1c0,0x31ac8e0a,0x126a0217,
    0x49a81507,0x270a1930,0x703828ac,0x2a702a71,0x42054380,0x1538b863,
    0x22a8211c,0x87038323,0x3838980a,0x82e1c0e0,0x7570e1c3,0x04812019,
    0x65d5c387,0x2661c380,0x144384d9,0x32510a87,0x81e54470,0xd8241c1d,
    0x666d5dc1,0x22e66e0c,0x22e70381,0x41c4e20a,0x70380543,0x38382a2e,
    0x38e1c71c,0x439999b1,0x0384aaba,0x2ee21c0e,0x3890541b,0x04c6a06e,
    0x20a82635,0x150371c4,0x0272ae24,0x705c150e,0x0a150cb8,0x88660e07,
    0x0e470704,0x703373b8,0x2a0ab8e0,0x20b84aab,0x571c0e03,0x33333661,
    0x8e1c71c3,0x848700e3,0x40e50e03,0x5b979103,0x5471121c,0x91054710,
    0x121c5b97,0x38b72f22,0xbb886233,0x0d5e442b,0xac8aeb32,0x2a0703ba,
    0x2a0e04bb,0x5c4bcdbb,0x20701933,0x4c382ea3,0x201caa81,0x005d4703,
    0x4289c705,0xcabb88e3,0x0b6aaee1,0x81ce1c07,0x3660202a,0x3321b10c,
    0x99990dcc,0x9b30101b,0x20203621,0x1dcdd8db,0x84404008,0xcec80200,
    0x67640101,0x77010441,0x8f3b2634,0x6dc364e9,0x0101b912,0xd30e7644,
    0x853006c9,0x4970a319,0x20100881,0x910ccecb,0x1329999d,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000080,0x80060000,0x08050004,0x20002802,0x00030c02,
    0x013002a2,0x1881400c,0x05575000,0x22041028,0x0c000181,0x00500603,
    0x77710388,0xaac0a605,0x14c03882,0x0c07a154,0x44156d4c,0x0375900c,
    0x42aac06e,0x2ea03ac8,0x2058dc0c,0x15cdc052,0x6440655c,0x1c40aa00,
    0x06440260,0x4481bac8,0x6d4c0cab,0x2032e602,0x06440cab,0x0e0a2090,
    0x00028815,0xb0288144,0x0700cc00,0x00400800,0x01002080,0x91028800,
    0x00004100,0x5d414401,0x8020005b,0x9a80821a,0x04100403,0x2a602e00,
    0x54c28280,0x65556440,0x02600981,0x156d4c91,0x53038126,0x55b5305b,
    0xa982da98,0x16d4c2ad,0x4c3babc8,0x5b5302da,0x267900e0,0x3623b11d,
    0x39555912,0x86618862,0x2aab2248,0x40b6a61c,0x055b5348,0x559102a7,
    0x2ab22395,0x55b531ca,0xa9a98130,0xa98e0662,0x8261c2a9,0x5cc3a9b9,
    0x0e0e63a9,0x9a80e038,0x39a80e03,0x039a80e0,0x26a14c33,0x9c0e6a03,
    0x221c3818,0x84c38713,0x48392238,0x7350261c,0x9c40e2c0,0x704c3838,
    0x5c41c098,0x1c4c2c99,0x71305071,0xa8703138,0x0e6150e0,0x80e0380e,
    0x380e0153,0x5380e015,0x9c383301,0x202a700a,0x21c399bb,0x13849a83,
    0x20e38703,0x380c4e0a,0x20716015,0x1384aaba,0x1c062703,0x55d4221c,
    0xa82a244a,0x665c4aab,0x87144382,0x40709128,0x89c40e03,0x44e20703,
    0x44e20703,0x711c1983,0x1c4e20e2,0xccb8705c,0x9703b05c,0x0e387059,
    0x10599712,0x71220e27,0xcb8330e0,0x02ccb82c,0x121c0707,0x43857791,
    0x438211c4,0x2c150e0a,0x6676541c,0xa879d930,0x20704aab,0x0704aaba,
    0x2612aaea,0x955751c1,0x70955750,0x1c0e1c38,0x41504238,0x1c488664,
    0x4aaba821,0x6dc1c1a8,0x11c1b912,0x0e042382,0x555dc20e,0x0c4edc2d,
    0x1c5b5577,0x8577711c,0x1542bbb8,0x40e0380e,0x381c0cc3,0x4381c0cc,
    0x4530cc19,0x330e0cc3,0x070e1c38,0x911c1c0e,0x5dd45b97,0x30e38384,
    0x20038483,0x7071c1c2,0xbabb8838,0x53350020,0x99b30081,0x08010799,
    0x1e764c60,0x5c2a8154,0x261b912d,0x4b6e3cec,0x9d930dc8,0xdc896dc7,
    0xb8af3720,0x2e1b912d,0x221b912d,0x3625d13d,0xcec85d34,0x33333661,
    0x4c040083,0xb73ccccd,0x0c437225,0x50079d93,0x33333663,0x79999b33,
    0x020f3b26,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x41000000,0x44000c40,0x54000311,
    0x20540000,0x05317019,0x2a700057,0x88c00881,0x14502c81,0x300022a2,
    0x94000799,0x18198c28,0x94072203,0x20e66428,0x1c8819bb,0x4c4cccb8,
    0x29807602,0x55037590,0xb8873320,0x25b529ba,0x00b80bca,0x41a8e071,
    0x2e0ee01a,0x22038298,0x1cba881c,0x21654dd4,0xbba8198b,0x216a6e20,
    0x90000ccc,0x07750399,0x94473397,0x5035380a,0x40600077,0x11c18353,
    0x01440005,0x04c01002,0x0cc38154,0x260700a8,0x0098199c,0x4c04c02a,
    0x4544099c,0x1c188620,0x01151032,0x10b98153,0xb5301530,0x10c43105,
    0x382e0c43,0x4310c431,0xa9813018,0x2b6a62ad,0x01982622,0x2218862e,
    0xa81caaac,0x65556440,0x9855b531,0x80543a9b,0x26ea0cc3,0x20c4623a,
    0x2e2099c9,0x26ea2c99,0x3266e23a,0x88267262,0x88e25a9b,0x44170a24,
    0x4d4c5a9b,0x21e5442a,0x9a82a9a9,0x89223883,0x13871223,0x44712447,
    0x41d4dcc4,0x83220e03,0x47133039,0xa8261c48,0x261c3a9b,0x054381c0,
    0x8330e015,0xbab88543,0x44381c29,0x10e150e0,0x2604e4c1,0x21c3810b,
    0x5cc1d10b,0x28e26010,0x3838981c,0x1c387015,0x70e3870e,0x150e1c38,
    0xd9c0e038,0x21c70198,0x438189c3,0x380c4e0a,0x99528870,0x86613859,
    0x21ccccd8,0x01c0e02a,0x239999b1,0x404e4c03,0x0e1c3ca8,0x88155771,
    0x555d43ca,0x50eeab24,0x13889557,0x21c38707,0x0e38f623,0x10e1c387,
    0x5c0e0385,0x38e03bb8,0x10b32e1c,0x5c39999b,0x0e0702cc,0x4e700815,
    0x02a01c0a,0x1c107038,0x50381070,0x80905438,0x43870a0a,0x24380b84,
    0x2a12aaea,0x02415120,0x15120a8e,0x38150e24,0x5c5d40e0,0x90543303,
    0x80704238,0x440e0423,0x05c42bbb,0x20eaabae,0x2a1cabb8,0x42eaea00,
    0x220babb8,0x7711cabb,0xbaba8175,0x88775590,0x7102dcbc,0x21dd5645,
    0x222daabb,0xdaabb82a,0xc88330e2,0x2f222dcb,0x22a982dc,0x222dcbc8,
    0x2e22dcbc,0x0e0382bb,0x8703aac4,0x0e2dcbc8,0x1cabb88e,0x08070e0e,
    0x22004000,0x01666540,0x01100201,0x00402002,0x20aaa002,0x08000200,
    0x37225b70,0x20040080,0x0080100a,0x1e764c04,0x00079d93,0xccd98080,
    0x4c0883cc,0x933ccccd,0x0000079d,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x54c00000,0x541dc428,
    0x20040002,0x0e440a9c,0x1281ccc8,0x77501305,0x03188001,0x01c88022,
    0x088c0644,0x2b980b98,0x00cc2200,0x100a9c40,0x02ccc88c,0x44602e01,
    0x32200880,0x8c388a81,0x5c122019,0x238a40cb,0x10320312,0x20195539,
    0x1a9c1aa9,0x443ba800,0x4132c99b,0x441ccb83,0x59770151,0x54406a70,
    0x419940bc,0x71388729,0x9cc88320,0x2201c0ca,0xbbbb881c,0x55e40332,
    0x99406c2a,0x382cbb81,0x97077035,0x100e0733,0x4c904c71,0x700b8198,
    0x54c44385,0xac881500,0x40a81caa,0x50480443,0x4c02a601,0x2015300a,
    0x02a01528,0x0705428e,0x1c41b017,0x0c413393,0x43623831,0x43112019,
    0x4c01300d,0x04c02600,0x3318705c,0x21b95730,0x2a6661c3,0x1c1c0660,
    0x75059555,0x04c38753,0x01c75375,0x26ea0e54,0x154d4c3a,0x530aa6a6,
    0xa9ba8553,0x1d4dd40c,0x272225ce,0x0666622b,0x4ce4c709,0x14488e20,
    0x0de6cce9,0x373091c0,0x3a9b9875,0x711d4dcc,0x0e1c5933,0x43873397,
    0x2a63872b,0x3824c40a,0x382b8e38,0x20627054,0x40838543,0x02a1c3a8,
    0x1c4c0e26,0x32243898,0x2382a1c0,0x872f2238,0x1644999b,0x70e03815,
    0x2070b8cc,0x33333323,0x4150e125,0x0a870543,0x870e0887,0x44288e0b,
    0x55423871,0x27070381,0x9b10a628,0x665c3999,0x66666c42,0x01757711,
    0x6666c42e,0x12aaea1c,0xba895575,0x150a24aa,0x0e6666c4,0x24170a87,
    0x5dc5c241,0x470e0381,0x540a1aa8,0x40470150,0x28871443,0x880e510e,
    0x21c5d13d,0x21a8a143,0x20705282,0x82b8e383,0x38211c03,0x21c00a80,
    0x87121c03,0xd89121c4,0xa8ce01c0,0x0641c150,0x1501c01c,0x10a8b224,
    0x002a1c38,0x150e0a87,0x041c2a1c,0x261c3804,0x65642aaa,0x0382aa80,
    0xba82ea5b,0x5dc40daa,0x88e0e1ca,0x2a21cabb,0x20dd6542,0x2e1cabb8,
    0x2ee2daab,0x2aee2daa,0x2ab262da,0x2aee20cb,0x7753b31c,0x85c1bbb8,
    0x75007221,0x65e44375,0x5777912d,0x260dded4,0x217c2bbb,0x5c42bbb8,
    0x5ddc42bb,0x02eaee22,0x227b10aa,0x0020082e,0x0199d970,0x81100002,
    0x83ccccd9,0x40080008,0x00801008,0x44004004,0xb8080400,0x2aa65ccd,
    0x20200800,0x04008021,0x01002008,0x00002008,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x88000000,
    0x87730621,0x200083b8,0x06440353,0x0081d544,0x80200400,0x00403aba,
    0x01440200,0x42eaea01,0x3104c03a,0x0aa17910,0x80000550,0x400d4c0a,
    0x08088c40,0x5c054e20,0x2204419b,0x71289223,0x20f438a4,0x50059103,
    0x2a614501,0x4b620aa9,0xb75913c9,0x00aa9a98,0x16eea011,0x91056d54,
    0x07547755,0x64aeeae2,0x5c038529,0x01930e61,0xb1007007,0x9ba83775,
    0x7c40383a,0x41b53553,0x419bdbb8,0x320c01c8,0x28e1c3aa,0x200e199c,
    0x2201300c,0x10498152,0x38513313,0x311c3854,0xb530a357,0x02443305,
    0x80288907,0x0a5594c4,0x071c0627,0x70e21c0b,0x21c38170,0x44730543,
    0x2c38540b,0x1530950e,0x27931d98,0x71c38661,0x191c52ea,0x992eae0c,
    0x4dd43a9b,0x41b940ca,0x870a2252,0x8ca0330a,0x70735051,0x0a21c090,
    0x64051060,0xaaab8529,0x44388b84,0x0ea383ab,0x4380b98e,0x9999b128,
    0x403a9c63,0x120a2428,0x4b855353,0x0b82e02a,0xbb8e7392,0x20a921ac,
    0x224150e0,0x2388d40c,0x50e18832,0x250ddc41,0x5383129a,0x700a8381,
    0xa8262198,0x52a00cc2,0x705106c2,0x489c9817,0x2aab2a66,0xb1573330,
    0x38e3cec8,0x26722a20,0x22386d45,0x4c0e0666,0x0a9c5c38,0x97970722,
    0x825dce5b,0x700b920c,0x0a851288,0x1294a298,0x700a870a,0x88528ca1,
    0x24838713,0xaa8e21c3,0x00710174,0x707090a5,0x50cc7107,0xb8ea1987,
    0x710c4383,0x71d43957,0x2ee23d87,0x2a241c39,0x8b9c4aab,0x22e0620a,
    0x10110c80,0x31710d89,0x4482a1c5,0x442ee00d,0x4170a351,0x26215123,
    0xaba85309,0x4910cc4a,0x39c2c143,0x52830904,0x2e0661d8,0x81054900,
    0x19750429,0x80b81c38,0x06832ee0,0x38350e1c,0x00ab8e24,0x108e6038,
    0xc81b0995,0x215ddc41,0x20cbaac9,0x55530a21,0x43579105,0x54c3baac,
    0x0cc382aa,0x57512eea,0x2eaf6207,0x44573751,0x2940cbbd,0x30eeab6a,
    0x2ee60193,0x806b2a02,0x333a60c8,0x1003500b,0x54c40419,0x4165dc42,
    0x8e2daabb,0x021b60ba,0x00417950,0x20040703,0x00aaaa00,0x00040100,
    0x1b912db8,0x44004010,0x1100a880,0x00171750,0x02005554,0x00000000,
    0x05540000,0xd3008010,0x001106c9,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x0a150000,
    0x10100100,0x38000009,0x000a9c40,0x8b8298b8,0x01cb8829,0x00800000,
    0x41d402a6,0x11999999,0x44005199,0x2000004c,0x80440621,0x88150353,
    0x8003704c,0x85770308,0x5d543cca,0x2b660e04,0x1b12c80a,0x72d5e6cc,
    0x97039100,0x05709579,0xa8838164,0x3b10c8ad,0x6d644b62,0x0655c3aa,
    0x330aa6a6,0x38100871,0x8056d449,0x80ada883,0x221bbad8,0x65dc1223,
    0x0b816442,0x2a05c070,0x8284c1ad,0x26033019,0x31381c01,0x85d999b0,
    0x98c4719b,0x31a81981,0x831188e3,0x02a88331,0x389c438e,0x03871ca2,
    0x81983898,0x70138100,0x700e0380,0x460e1c38,0x0cccc419,0x07033331,
    0x0de6c066,0x9824c066,0x33209304,0x26ee1cce,0x2e0e1c39,0x4e5c0999,
    0x8e126239,0x2ae20999,0x2672e29b,0x0380aa23,0x238424d4,0x557501c0,
    0x00849889,0x0d4e0381,0x0d5c0c5c,0x38714438,0x2e399cb8,0x266e4999,
    0x221bb849,0x88d47049,0x0380e049,0x82e0700e,0x22e665c3,0x0b84d999,
    0xd98e0e0e,0x41702a84,0x40701443,0x64c1cea8,0x33b223ce,0x83824380,
    0x4e038100,0x4c39b809,0x479d901e,0x0b8482a3,0x2411208e,0x703806d4,
    0x40701c38,0x20700e03,0xb870e1c3,0x1c3809ca,0x01331c1c,0x8870e015,
    0xc9850e02,0x01c07009,0x705b5577,0x40702010,0x2a60e143,0x4310e143,
    0x1c1dcbc8,0x0640320e,0x8e0701cc,0x40701c2a,0x20500e03,0x3870e1c3,
    0x1c386233,0x11994c1c,0x1c380543,0x11c380a2,0x80e01393,0x70282043,
    0x40702010,0x4380e1c3,0x3840e1c3,0x0c2e1c38,0x701c0c2e,0x0e06f360,
    0x5c333b2e,0xd970ccec,0x66664199,0x3a27b11c,0x4ba67b12,0x1dcdd8db,
    0x5cba27b1,0x2e60ccec,0x9951dcdd,0xe89ec459,0xc887b932,0x75c4ccce,
    0x41cec80c,0x200cccdc,0x333b2e28,0x33333330,0x44333b2e,0x974cccec,
    0x3b22199d,0x33a64ccc,0x115400bc,0x6dcba27b,0x3336e5cc,0x4333b2e5,
    0xd70ccecb,0xccecb859,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x50000000,0xc8839815,
    0x5d402b84,0x00498482,0x001bb880,0x00000190,0x00000000,0x00000000,
    0x00000000,0x30098026,0x0404c015,0x790ab6a6,0x2da98766,0x3a981170,
    0x3501c0e0,0x80e030e2,0x382baad8,0x2d88bc88,0x55570bb8,0x2d88ec4b,
    0x221775b5,0x5e45b11d,0x2ab223ba,0x2ab6a1ca,0x2a23954a,0x102b6a25,
    0xea857559,0x564436e0,0x23b33aad,0x223953c9,0x933710da,0x21d4dcc3,
    0x5542a8a9,0x20fe22a9,0x9a838703,0x01c01703,0x104c4e07,0xa9c06638,
    0x7511c381,0x206e3833,0x0d470ab8,0x70e1c4e2,0x0cc299c4,0x70261c53,
    0x838a5138,0xb8870e03,0x39447713,0x382a4b8e,0x208870d4,0x1c440543,
    0x4054150e,0x53838703,0x0e027501,0x02ae7038,0x704989c4,0x14387339,
    0x8b833751,0x842a700c,0x70935038,0x4c254c38,0x406271c1,0x22b27053,
    0x890e0382,0x087173a8,0x2a7170c7,0x01c382a0,0x55d4510e,0x2eef624a,
    0x9703800b,0x71388b99,0x3848aa98,0x00ddc0e0,0x70e07071,0x443dccb8,
    0x30579702,0xd80902a5,0x80cbac81,0x71c1981d,0x17360599,0x2062e66e,
    0x032eae03,0x40e75151,0x02a2e703,0x41070a27,0x43870543,0x81c05403,
    0x2aaea1c3,0x381d8544,0x80dec0e0,0x70e07038,0x0511c438,0x2ae0d42e,
    0x04c6a3ca,0x2a01c81c,0x71c19849,0xb819c084,0x28703373,0xb9441b8e,
    0x71c0e071,0x88173815,0x2e20baab,0x5555c2ba,0x2eaae22d,0x20707f10,
    0x8330e1c3,0x20384cbc,0x7306e703,0x21c381c0,0x1c0a2383,0x4710a80e,
    0x4070380a,0x21987129,0x070e0e29,0x380c99dc,0x1444871c,0x5470381c,
    0x101ccc0b,0x20020080,0x764c0808,0x74d3623c,0x37225b72,0x6764c040,
    0x4333b2e3,0x6747d14a,0x99d975cc,0x974cf621,0x50bcccd9,0x66cc79b9,
    0x27b30950,0x640dcccc,0x0b3ae1ce,0xc93625d3,0x33662bcd,0x336e3ccc,
    0x911a3b81,0x3669999d,0x36e1b10c,0x6441d912,0xd93a61ce,0x00001d80,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x06200000,0x208a8831,0x0c01800a,0x51026218,
    0x05098062,0x8310c4a2,0x84c03118,0x000c4620,0x26306233,0x80401981,
    0x04013109,0x88662131,0x26220999,0x3154c188,0x8221a987,0xba830721,
    0x1402bbbb,0x87732654,0x446d43ba,0x8b88e60c,0x700ae259,0x22488280,
    0x4e64d43c,0x0754dcc2,0x264885dc,0x26eaaa64,0x25d4dcc3,0x2a537571,
    0x45cc4bbb,0x1cce642d,0x22320931,0x41b13b84,0x8e449148,0x2a66a1c8,
    0x26f27664,0x14214382,0x42f82e2e,0x30547003,0x22354875,0x8a2511cb,
    0x0cc64e4c,0x2e202173,0x0a000701,0x21432607,0x0ba86723,0x86c71c28,
    0x550aa1c2,0x2e0e2710,0x20e0a80c,0x0b11b103,0x98d88755,0x410e1985,
    0x261c7284,0x740cc143,0xbdbb8f41,0x12a89c01,0x25ac8a67,0x2299c353,
    0x41d5ce0e,0x8ee02ba8,0x2e1bbdbb,0x70a1bbbb,0x3bcdaba8,0x0ee70c94,
    0x5e471c28,0x50a21c3b,0xbc838660,0x01c1c281,0x5b10f295,0x4e03d2d8,
    0x1ca07019,0x82e0a8c7,0x05c5c09a,0x40065419,0x20c18301,0x86e229b9,
    0x1dc5d438,0x0371070a,0x9054000e,0x5dc07238,0x405d4150,0x0762920a,
    0x40502a1c,0x17283b9d,0x981c1c28,0x55388954,0xa80d89d8,0x50617038,
    0x8826238e,0x08866619,0x00294406,0x00000000,0x2b21d562,0x00ae23ba,
    0x79102807,0x6ddd4399,0x5d6644bc,0x64417502,0x17712ccb,0xbab88957,
    0x50de6542,0x0db85131,0x6c4f6219,0x2177b752,0x3e887148,0x488c85b3,
    0x77b50590,0x1b2badcb,0x00000000,0x00000000,0x14040000,0x20040180,
    0x44082200,0x10510010,0x00080200,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x44000000,0x002a2a8b,
    0x15ddddc4,0x88872015,0x44608888,0x2eeeeee0,0x1bbbb91b,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x4c000000,0x98fe2997,
    0x45c00712,0x25d10b9b,0x2aaaaaa8,0x00000cca,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x22000000,0x85104777,0x77777128,
    0x00001305,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x06a90000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,
};

static signed short stb__courier_14_latin_ext_x[560]={ 0,2,1,1,1,1,1,2,3,1,0,0,1,1,
2,1,1,1,1,1,1,1,1,1,1,1,2,1,0,0,0,0,1,0,0,0,0,0,0,0,0,1,1,0,
0,0,0,0,1,0,0,1,0,0,0,0,0,0,1,0,0,0,1,0,2,0,0,1,0,0,1,0,0,1,
1,1,1,0,0,0,0,0,1,1,0,0,0,0,0,0,1,0,3,0,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,2,1,0,1,0,
3,0,1,0,0,0,0,1,0,-1,2,0,2,2,2,0,1,2,2,2,1,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,1,1,1,1,-1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,
0,0,0,0,0,1,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,1,0,1,0,1,0,1,0,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,1,1,0,1,0,0,1,0,
1,0,1,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,
1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,0,
0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1, };
static signed short stb__courier_14_latin_ext_y[560]={ 10,2,2,1,1,2,3,2,2,2,2,3,8,6,
8,1,2,2,2,2,2,2,2,2,2,2,4,4,3,5,3,2,2,2,2,2,2,2,2,2,2,2,2,2,
2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,2,2,12,1,4,2,4,2,4,2,4,2,2,
2,2,2,4,4,4,4,4,4,4,2,4,4,4,4,4,4,2,2,2,5,2,2,2,2,2,2,2,2,2,
2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,10,4,1,2,3,2,
2,2,2,2,2,4,6,6,2,1,1,2,2,2,1,4,2,5,9,2,2,4,2,2,2,4,0,0,0,1,
0,0,2,2,0,0,0,0,0,0,0,0,2,1,0,0,0,1,0,4,2,0,0,0,0,0,2,2,1,1,
2,2,2,1,4,4,1,1,2,2,2,1,2,2,2,2,1,1,2,2,2,3,4,1,1,2,2,1,2,2,
1,2,0,2,2,4,0,1,0,2,0,2,0,2,0,2,2,2,1,2,0,2,0,2,2,4,0,2,0,2,
0,2,0,2,2,1,0,0,2,2,1,2,1,2,0,2,2,2,0,4,2,2,0,2,2,2,4,0,0,2,
2,2,2,2,2,2,2,0,1,2,4,0,2,2,2,4,1,2,0,2,0,1,2,4,0,1,2,4,0,2,
0,1,0,2,2,4,0,2,2,2,0,2,2,2,0,2,1,2,0,2,0,1,0,1,2,4,0,2,0,2,
0,0,1,0,2,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,
2,2,2,2,2,2,2,2,2,2,2,4,2,2,2,2,2,2,2,2,2,2,2,2,2,1,4,2,2,2,
2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,2,0,2,0,
2,0,2,0,1,0,0,0,0,0,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,
2,2,2,2,2,2,2,2,2,2,-2,-1,0,1,0,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,
2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,
2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,
2,2,2,2,2,2, };
static unsigned short stb__courier_14_latin_ext_w[560]={ 0,3,5,6,6,6,6,3,3,3,5,7,4,6,
3,6,6,6,5,6,5,6,6,5,6,6,3,4,6,7,6,5,5,8,7,7,7,7,7,7,7,6,7,8,
7,8,7,7,6,7,8,6,7,7,8,8,7,7,6,3,5,3,6,8,3,7,7,6,8,7,6,7,7,6,
4,7,6,8,7,7,7,8,6,6,7,7,8,8,7,8,6,3,1,3,6,7,7,7,7,7,7,7,7,7,
7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,0,3,5,7,6,7,
1,7,5,8,4,7,7,6,8,9,4,7,4,4,3,7,6,3,3,4,5,7,8,8,8,5,8,8,8,8,
8,8,8,7,7,7,7,7,6,6,6,6,8,7,7,7,7,7,7,5,7,7,7,7,7,7,6,7,7,7,
7,7,7,7,8,6,7,7,7,7,6,6,6,6,7,7,7,7,7,7,7,7,7,7,7,7,7,8,7,8,
8,7,8,7,8,8,7,6,7,6,7,6,7,6,7,8,8,8,7,7,7,7,7,7,8,7,7,7,7,7,
7,7,7,7,7,7,7,7,7,7,6,6,6,6,6,6,6,6,6,6,8,7,7,5,8,7,7,7,6,7,
6,7,6,7,6,7,6,7,7,7,7,7,7,7,7,6,7,7,7,7,7,7,8,8,8,6,8,6,8,6,
6,6,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,8,8,8,7,8,
7,6,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,6,7,7,7,
7,7,7,7,7,7,7,7,7,7,8,8,7,7,7,7,7,7,7,7,7,7,7,7,7,8,8,7,7,7,
7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,8,7,6,6,7,
7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,
7,7,7,7,7,7,7,7,7,7,8,7,8,8,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,
7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,
7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,
7,7,7,7,7,7, };
static unsigned short stb__courier_14_latin_ext_h[560]={ 0,9,4,10,11,9,8,5,10,10,5,7,4,1,
3,11,9,8,8,9,8,9,9,9,9,9,7,8,7,3,7,9,9,8,8,9,8,8,8,9,8,8,9,8,
8,8,8,9,8,10,8,9,8,9,8,8,8,8,8,10,11,10,4,2,3,7,9,7,9,7,8,9,8,8,
11,8,8,6,6,7,9,9,6,7,9,7,6,7,6,9,6,10,10,10,3,8,8,8,8,8,8,8,8,8,
8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,0,9,9,8,6,8,
10,9,2,9,4,6,4,1,9,1,4,8,5,5,3,9,9,2,4,5,4,6,8,8,8,9,10,10,10,9,
10,10,8,11,10,10,10,10,10,10,10,10,8,9,11,11,11,10,11,5,9,11,11,11,11,10,8,9,10,10,
9,9,9,10,7,9,10,10,9,9,8,9,8,8,9,8,10,10,9,9,9,7,7,10,10,9,9,12,11,11,
9,9,10,9,10,8,11,10,11,9,11,9,11,9,10,9,8,9,9,9,10,9,10,9,10,8,10,9,11,11,
11,11,11,11,11,12,10,10,8,8,9,8,9,8,10,8,10,10,10,6,9,11,11,11,11,11,6,10,10,11,
11,8,8,8,8,8,8,10,9,11,9,10,8,8,9,9,10,9,11,9,11,10,8,7,10,9,11,9,10,8,
11,10,11,9,11,9,11,9,11,11,10,9,8,9,11,9,10,9,11,9,11,10,11,10,10,8,10,9,10,11,
10,10,9,10,8,10,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,9,8,8,10,8,8,8,
8,8,8,8,8,8,8,8,8,8,9,7,8,8,8,8,8,8,8,8,8,8,8,8,8,10,7,8,8,8,
8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,10,9,10,8,11,
9,11,9,11,10,11,11,11,11,11,11,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,
8,8,8,8,8,8,8,8,8,8,12,12,10,10,11,10,8,8,8,8,8,8,8,8,8,8,8,8,8,8,
8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,
8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,
8,8,8,8,8,8, };
static unsigned short stb__courier_14_latin_ext_s[560]={ 255,250,99,242,172,63,25,206,49,206,210,
24,251,161,105,49,56,32,54,125,99,235,200,250,189,54,250,251,66,117,17,
34,48,16,75,168,135,143,151,154,8,1,146,90,168,185,202,138,120,9,176,
113,194,105,210,159,127,112,105,252,128,215,228,136,113,234,183,219,79,242,83,
1,67,60,115,46,39,176,121,226,203,132,99,10,211,73,160,1,144,191,169,
205,209,211,125,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,
149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,255,61,65,
125,106,109,219,88,145,96,240,152,216,161,120,151,235,22,195,185,109,40,176,
132,224,190,245,136,216,207,242,162,74,90,106,129,123,132,46,142,165,189,234,
25,33,242,210,99,187,26,158,174,198,181,215,200,227,223,231,247,9,157,241,
181,1,17,156,148,140,229,49,118,221,17,94,173,234,70,142,248,48,205,33,
41,17,9,1,32,58,173,1,211,203,26,99,124,171,163,197,148,217,133,150,
249,156,102,166,87,182,25,115,85,225,164,102,132,25,110,9,64,196,234,226,
94,25,56,133,218,210,164,187,9,149,141,38,30,234,15,227,8,83,1,67,
60,53,129,55,71,94,110,206,190,113,244,237,239,87,101,157,164,172,179,227,
188,40,179,32,154,86,55,77,196,113,40,79,219,195,74,70,81,48,72,226,
48,17,79,203,98,141,141,64,156,42,117,17,1,180,79,117,109,148,124,82,
180,116,188,102,57,43,40,1,196,138,241,121,33,105,235,196,26,220,33,213,
94,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,242,149,149,249,
149,149,149,149,149,149,149,149,149,149,149,149,149,9,90,149,149,149,149,149,
149,149,149,149,149,149,149,149,171,40,149,149,149,149,149,149,149,149,149,149,
149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,162,18,
147,63,134,71,120,219,107,9,91,83,75,67,59,51,149,149,149,149,149,149,
149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,
149,149,149,17,1,65,129,35,90,149,149,149,149,149,149,149,149,149,149,149,
149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,
149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,
149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,
149,149,149,149,149,149,149,149,149, };
static unsigned short stb__courier_14_latin_ext_t[560]={ 1,58,104,14,14,58,88,97,37,37,97,
97,97,104,104,14,58,88,88,58,88,58,68,48,58,68,88,68,97,104,97,
69,68,88,88,68,88,88,88,68,88,88,68,88,88,88,88,68,88,37,88,
68,88,68,88,88,88,88,88,26,1,26,97,104,104,88,68,88,68,88,88,
69,88,88,1,88,88,97,97,88,58,48,97,97,58,97,97,97,97,68,97,
26,26,26,104,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,
79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,1,68,68,
79,97,79,26,68,104,68,97,97,97,104,68,104,97,79,97,97,104,68,68,
104,97,97,97,97,68,68,68,68,37,37,37,68,37,37,79,1,37,37,37,
37,48,37,37,37,79,69,1,1,1,37,1,97,58,1,1,1,14,37,79,
58,37,37,58,58,58,26,97,58,26,48,58,58,79,58,79,79,58,79,37,
37,59,59,59,97,97,37,48,48,48,1,1,14,48,48,37,48,37,79,1,
37,14,48,1,48,1,59,37,58,68,58,58,58,48,58,48,48,26,68,37,
48,14,14,14,14,14,14,14,1,37,37,79,79,48,79,48,79,37,79,37,
37,37,97,48,14,14,14,1,1,97,26,26,1,14,79,79,79,79,79,79,
26,58,14,59,26,79,79,58,48,26,48,14,48,14,26,79,97,26,48,14,
48,26,79,14,26,14,48,14,48,14,48,14,14,26,48,79,48,14,48,26,
48,14,48,14,26,1,26,26,79,26,48,26,14,26,14,58,26,79,26,79,
79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,58,79,79,14,
79,79,79,79,79,79,79,79,79,79,79,79,79,69,97,79,79,79,79,79,
79,79,79,79,79,79,79,79,26,97,79,79,79,79,79,79,79,79,79,79,
79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,26,69,
26,79,1,68,1,58,1,26,1,1,1,1,1,1,79,79,79,79,79,79,
79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,
79,79,79,1,1,26,26,1,26,79,79,79,79,79,79,79,79,79,79,79,
79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,
79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,
79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,
79,79,79,79,79,79,79,79,79, };
static unsigned short stb__courier_14_latin_ext_a[560]={ 119,119,119,119,119,119,119,119,
119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,
119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,
119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,
119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,
119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,
119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,
119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,
119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,
119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,
119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,
119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,
119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,
119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,
119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,
119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,
119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,
119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,
119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,
119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,
119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,
119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,
119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,
119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,
119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,
119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,
119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,
119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,
119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,
119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,
119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,
119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,
119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,
119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,
119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,
119,119,119,119,119,119,119,119, };

// Call this function with
//    font: NULL or array length
//    data: NULL or specified size
//    height: STB_FONT_courier_14_latin_ext_BITMAP_HEIGHT or STB_FONT_courier_14_latin_ext_BITMAP_HEIGHT_POW2
//    return value: spacing between lines
static void stb_font_courier_14_latin_ext(stb_fontchar font[STB_FONT_courier_14_latin_ext_NUM_CHARS],
                unsigned char data[STB_FONT_courier_14_latin_ext_BITMAP_HEIGHT][STB_FONT_courier_14_latin_ext_BITMAP_WIDTH],
                int height)
{
    int i,j;
    if (data != 0) {
        unsigned int *bits = stb__courier_14_latin_ext_pixels;
        unsigned int bitpack = *bits++, numbits = 32;
        for (i=0; i < STB_FONT_courier_14_latin_ext_BITMAP_WIDTH*height; ++i)
            data[0][i] = 0;  // zero entire bitmap
        for (j=1; j < STB_FONT_courier_14_latin_ext_BITMAP_HEIGHT-1; ++j) {
            for (i=1; i < STB_FONT_courier_14_latin_ext_BITMAP_WIDTH-1; ++i) {
                unsigned int value;
                if (numbits==0) bitpack = *bits++, numbits=32;
                value = bitpack & 1;
                bitpack >>= 1, --numbits;
                if (value) {
                    if (numbits < 3) bitpack = *bits++, numbits = 32;
                    data[j][i] = (bitpack & 7) * 0x20 + 0x1f;
                    bitpack >>= 3, numbits -= 3;
                } else {
                    data[j][i] = 0;
                }
            }
        }
    }

    // build font description
    if (font != 0) {
        float recip_width = 1.0f / STB_FONT_courier_14_latin_ext_BITMAP_WIDTH;
        float recip_height = 1.0f / height;
        for (i=0; i < STB_FONT_courier_14_latin_ext_NUM_CHARS; ++i) {
            // pad characters so they bilerp from empty space around each character
            font[i].s0 = (stb__courier_14_latin_ext_s[i]) * recip_width;
            font[i].t0 = (stb__courier_14_latin_ext_t[i]) * recip_height;
            font[i].s1 = (stb__courier_14_latin_ext_s[i] + stb__courier_14_latin_ext_w[i]) * recip_width;
            font[i].t1 = (stb__courier_14_latin_ext_t[i] + stb__courier_14_latin_ext_h[i]) * recip_height;
            font[i].x0 = stb__courier_14_latin_ext_x[i];
            font[i].y0 = stb__courier_14_latin_ext_y[i];
            font[i].x1 = stb__courier_14_latin_ext_x[i] + stb__courier_14_latin_ext_w[i];
            font[i].y1 = stb__courier_14_latin_ext_y[i] + stb__courier_14_latin_ext_h[i];
            font[i].advance_int = (stb__courier_14_latin_ext_a[i]+8)>>4;
            font[i].s0f = (stb__courier_14_latin_ext_s[i] - 0.5f) * recip_width;
            font[i].t0f = (stb__courier_14_latin_ext_t[i] - 0.5f) * recip_height;
            font[i].s1f = (stb__courier_14_latin_ext_s[i] + stb__courier_14_latin_ext_w[i] + 0.5f) * recip_width;
            font[i].t1f = (stb__courier_14_latin_ext_t[i] + stb__courier_14_latin_ext_h[i] + 0.5f) * recip_height;
            font[i].x0f = stb__courier_14_latin_ext_x[i] - 0.5f;
            font[i].y0f = stb__courier_14_latin_ext_y[i] - 0.5f;
            font[i].x1f = stb__courier_14_latin_ext_x[i] + stb__courier_14_latin_ext_w[i] + 0.5f;
            font[i].y1f = stb__courier_14_latin_ext_y[i] + stb__courier_14_latin_ext_h[i] + 0.5f;
            font[i].advance = stb__courier_14_latin_ext_a[i]/16.0f;
        }
    }
}

#ifndef STB_SOMEFONT_CREATE
#define STB_SOMEFONT_CREATE              stb_font_courier_14_latin_ext
#define STB_SOMEFONT_BITMAP_WIDTH        STB_FONT_courier_14_latin_ext_BITMAP_WIDTH
#define STB_SOMEFONT_BITMAP_HEIGHT       STB_FONT_courier_14_latin_ext_BITMAP_HEIGHT
#define STB_SOMEFONT_BITMAP_HEIGHT_POW2  STB_FONT_courier_14_latin_ext_BITMAP_HEIGHT_POW2
#define STB_SOMEFONT_FIRST_CHAR          STB_FONT_courier_14_latin_ext_FIRST_CHAR
#define STB_SOMEFONT_NUM_CHARS           STB_FONT_courier_14_latin_ext_NUM_CHARS
#define STB_SOMEFONT_LINE_SPACING        STB_FONT_courier_14_latin_ext_LINE_SPACING
#endif

