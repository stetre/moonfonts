// Font generated by stb_font_inl_generator.c (4/1 bpp)
//
// Following instructions show how to use the only included font, whatever it is, in
// a generic way so you can replace it with any other font by changing the include.
// To use multiple fonts, replace STB_SOMEFONT_* below with STB_FONT_courier_bold_9_latin_ext_*,
// and separately install each font. Note that the CREATE function call has a
// totally different name; it's just 'stb_font_courier_bold_9_latin_ext'.
//
/* // Example usage:

static stb_fontchar fontdata[STB_SOMEFONT_NUM_CHARS];

static void init(void)
{
    // optionally replace both STB_SOMEFONT_BITMAP_HEIGHT with STB_SOMEFONT_BITMAP_HEIGHT_POW2
    static unsigned char fontpixels[STB_SOMEFONT_BITMAP_HEIGHT][STB_SOMEFONT_BITMAP_WIDTH];
    STB_SOMEFONT_CREATE(fontdata, fontpixels, STB_SOMEFONT_BITMAP_HEIGHT);
    ... create texture ...
    // for best results rendering 1:1 pixels texels, use nearest-neighbor sampling
    // if allowed to scale up, use bilerp
}

// This function positions characters on integer coordinates, and assumes 1:1 texels to pixels
// Appropriate if nearest-neighbor sampling is used
static void draw_string_integer(int x, int y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0, cd->t0); glVertex2i(x + cd->x0, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t0); glVertex2i(x + cd->x1, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t1); glVertex2i(x + cd->x1, y + cd->y1);
        glTexCoord2f(cd->s0, cd->t1); glVertex2i(x + cd->x0, y + cd->y1);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance_int;
    }
    glEnd();
}

// This function positions characters on float coordinates, and doesn't require 1:1 texels to pixels
// Appropriate if bilinear filtering is used
static void draw_string_float(float x, float y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0f, cd->t0f); glVertex2f(x + cd->x0f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t0f); glVertex2f(x + cd->x1f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t1f); glVertex2f(x + cd->x1f, y + cd->y1f);
        glTexCoord2f(cd->s0f, cd->t1f); glVertex2f(x + cd->x0f, y + cd->y1f);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance;
    }
    glEnd();
}
*/

#ifndef STB_FONTCHAR__TYPEDEF
#define STB_FONTCHAR__TYPEDEF
typedef struct
{
    // coordinates if using integer positioning
    float s0,t0,s1,t1;
    signed short x0,y0,x1,y1;
    int   advance_int;
    // coordinates if using floating positioning
    float s0f,t0f,s1f,t1f;
    float x0f,y0f,x1f,y1f;
    float advance;
} stb_fontchar;
#endif

#define STB_FONT_courier_bold_9_latin_ext_BITMAP_WIDTH         256
#define STB_FONT_courier_bold_9_latin_ext_BITMAP_HEIGHT         68
#define STB_FONT_courier_bold_9_latin_ext_BITMAP_HEIGHT_POW2   128

#define STB_FONT_courier_bold_9_latin_ext_FIRST_CHAR            32
#define STB_FONT_courier_bold_9_latin_ext_NUM_CHARS            560

#define STB_FONT_courier_bold_9_latin_ext_LINE_SPACING           4

static unsigned int stb__courier_bold_9_latin_ext_pixels[]={
    0x4c002200,0x50260700,0x20c60220,0x180880a9,0x01aa8108,0x460c0630,
    0x000c0001,0x00840000,0xdd700400,0x0180445d,0x06063010,0x03181804,
    0x03033033,0x77070488,0x10510705,0x51505305,0x22620ca8,0x428a8382,
    0x2e29428a,0x57019305,0x8fe064c3,0x12090b48,0x3b073064,0x1dc5752c,
    0xac438696,0x41c3ad8c,0x972ec2ab,0x1440c985,0x542ab838,0x26154c1b,
    0xd3155c2a,0x9e6dc14c,0x3b92d9dc,0x3721d45b,0xc8a6e2d9,0x8a6e2d9d,
    0x26e2d9dc,0xb8b67722,0x8b67722d,0xb3b90cad,0xb7276cc5,0x65ddc585,
    0xca86eea1,0x5c59912b,0x7952c583,0x22b962c5,0x46591cda,0x50b6e08d,
    0x2755839b,0xb873ae1b,0x70e75c2d,0x5c2db85b,0x8b67722d,0x4cd11ceb,
    0xa97cdd42,0x8e4aa392,0x64aa1cb8,0x95493551,0x5493551c,0x926aa392,
    0x22ea392a,0xe872550d,0x40e4aa2e,0x58362ea5,0xbb9dc74c,0x1f5770fa,
    0x98b1254c,0x0fabbac5,0x5526383a,0x8b03a353,0x2750d8ba,0x1d4aac1a,
    0x8ba95cee,0x54ae770d,0xb1750d8b,0x54362ea1,0x95cee392,0x8d8bb368,
    0x472554ae,0x2dd4392a,0x46547255,0xca8e4aa5,0xa8e4aa58,0x8e4aa58c,
    0x1c954e65,0x392a83ba,0x23996582,0x43275585,0x24434326,0x1958b316,
    0x930c1d1a,0x23426236,0xb39964fd,0x36581311,0x9960364a,0x9ccb01b3,
    0x2732ce65,0x4036392a,0x9ec87ae2,0x5432751b,0x9b36a193,0x2d26193a,
    0x5a4c3275,0xb49864ea,0x2370c9d4,0x5c32751b,0x32752fad,0x71b96390,
    0x2b7fa2c3,0x6ccfdb13,0xfd14887e,0xed9ac58b,0x93b962c7,0x50727b53,
    0x272371b8,0x1f32c3da,0x5c6e10e4,0x71b84391,0x1b8dc6e3,0xc864ea37,
    0x963a3821,0x37624deb,0xda937624,0x49bb12fe,0xbb12fde8,0x897ef449,
    0x3f7a24dd,0x6c49bb12,0x2137624d,0xb526ec42,0x226ec45d,0x222c882e,
    0x2234c469,0x3d03624a,0x254d312c,0xdbd10e96,0xd8871623,0x87b7a24d,
    0xe889515b,0x49bb11ed,0xbb11ede8,0xb126ec49,0x126ec49b,0xdd503dbd,
    0x80000a1d,0x00000000,0x40000000,0x20000028,0x2e1e4409,0x910e5c1c,
    0x04110017,0x10404397,0x00000200,0x001e5c22,0x00000000,0x17abf000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x05100000,0x00063062,0x83181000,
    0x20203031,0x40203010,0x03750008,0x44010002,0xb8118100,0x20b36e4d,
    0x41101301,0x0442d8cb,0x840c0018,0x0440dd40,0x20018c04,0x43023031,
    0x37507038,0x41742bb8,0x21cb85d8,0x20dcc0c9,0x2165c2ab,0x2155c28a,
    0x57707048,0x3216cee4,0x2e0aee0d,0x037632e0,0x4c193032,0x36326194,
    0x05102e20,0x0c954773,0x0aae0ee2,0x42ab8577,0x40edc28a,0x81930703,
    0x80c882ca,0x9dc8c0c9,0x6473ae2d,0x0b6e2d9d,0x90b05995,0x2a275c59,
    0x5b3b91cd,0x9dc95e54,0x3a93ae2d,0x35275c37,0x21c95473,0x21e540e9,
    0x0e4aa3ca,0x6dc2eb26,0xd116ec2c,0x71ccd4b9,0x1ccd459b,0x1ca83255,
    0x951ec66c,0xb96c65c3,0xb1752d8c,0xd8977621,0x5177625d,0x2d9ad879,
    0x95521766,0x54ae771c,0x362ea392,0xb0b676a0,0x6d269530,0x9546a750,
    0x21f5771c,0x6d26392a,0xa4c3a950,0x54b1750d,0x1175c192,0x2574495d,
    0xf7303255,0x43632697,0x5910d889,0x932c5d4b,0x962ea1b1,0x272a193a,
    0x4aae720d,0x1b10d9ca,0x4b2c6c4b,0x4cb57339,0x96ae65ab,0x47d44ae8,
    0xd10f641c,0x80d8e4aa,0x3996392a,0x4161552a,0x6c5bb148,0x32550988,
    0x92a9a191,0x5b0b7623,0x7116ec49,0x58193a96,0x9512e544,0x740c9d4b,
    0xb9d14cfb,0x1d92ef54,0xd12ce2b7,0x6c59c4b9,0x715c724d,0x5c7259f9,
    0x1f503ea2,0x1661b8dc,0x51166166,0x0bdba8b9,0x2af324f4,0x50872193,
    0x1b8dc327,0xfea937aa,0x889a440e,0x27b5391d,0x3b66193a,0x89864ea7,
    0x983e61d8,0xfbd11d88,0x22c1eec5,0x37aa5dea,0x6ec26ec5,0x8b5914df,
    0xde885048,0x44b5912f,0x10e42fde,0xfbfa8bbd,0x0b0bbd11,0xd89bb116,
    0x82e360b8,0xbbd50b8d,0x260ebaa8,0x6c4e0ede,0x47b7a24d,0x37624dd8,
    0x10501dc4,0x8977ae95,0x9bb11ede,0x37626988,0xa8977ae4,0x002ef5c4,
    0x40203b30,0xec808000,0x220a25b8,0xb71d9003,0x69808000,0x4fd8081f,
    0x7d4027ec,0x1fdf50fe,0x0103fbea,0xaf41d1d9,0x0000005e,0x87103990,
    0x00000bc8,0x20001cb8,0x000003cb,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0xad800000,0x022002d9,0x418c18c0,
    0x06ee000a,0x2609b704,0xb70c0180,0x000005b3,0x81031100,0x84dd8818,
    0x10001080,0x36e00000,0x22030182,0x041cda81,0x22020100,0x3ea28300,
    0x4072a1c8,0x64c1ca83,0x9d1064c0,0x45c1cb87,0x882c0c81,0x82a01982,
    0xa8544bc9,0x3790b2a0,0x55c0cb88,0xb02c4384,0x83750710,0x81bb302e,
    0xf0aee0e8,0x0645d49d,0x82ab8557,0x21a9d429,0x10aee3bb,0x40e02e07,
    0x17b75146,0x26b60e54,0x4439712d,0x3776e5dd,0x4d435b11,0x50e66a39,
    0x5d82c579,0x6ec426dc,0x441df34d,0x5e4c1bce,0xd9873350,0x8876f445,
    0x580e45dd,0xbb11ccd4,0x6c1cca8b,0xb10dca81,0x32c2e8bb,0x276a0f27,
    0x2b17661d,0x49151098,0x20e541ca,0x3776e1ca,0x5541b360,0x1b3950eb,
    0x750e47d4,0x6c64588b,0x1750322a,0x972c5d4b,0x438ac3f9,0x23720585,
    0x6c493935,0x8e4ecc1a,0x1ec858ba,0x216225ec,0x8ba8b058,0x4ed42c45,
    0x54bbf10d,0x21620e9c,0x8dc725bc,0x2d261cd8,0xb5390f64,0x65532a67,
    0x1b3950d9,0x64c3672a,0x442730b9,0x643a3b25,0x5edd4571,0x8b0d7b50,
    0x6ed411b0,0xb3896713,0xfb95ede4,0x02c2c3ee,0x64764dd9,0x20aa0323,
    0x493d0b38,0x90586ef9,0x7127ec41,0x54ea1616,0xb0c865a2,0x44320581,
    0x9a7624de,0x49e87de9,0x54c7b7a2,0x64ae395c,0x95c72571,0x05cd87e8,
    0x5177a214,0x376a1d75,0x50582c2f,0xd12fde88,0x177ea5fb,0x38ac2c0a,
    0x05067b6a,0xddd87bb5,0x4c5fbd11,0x0ab60ede,0x32224c16,0xb0bf7a20,
    0x5c1bbdd0,0x13f7665d,0x744dd98b,0x996712de,0x76f4c58c,0x885221c0,
    0x977a25de,0x2b225de8,0x0e202c19,0x07476404,0xfb17f620,0x28000507,
    0xbfd30e20,0xe8fbbee1,0x00e26efd,0xd5e80020,0xfb1055cb,0x8800120b,
    0x800105fd,0x802fec40,0x97c76410,0x57a2f9ec,0x3260e25e,0x81008041,
    0x7042eeec,0x00000051,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x0c0c6000,0x4003776e,0x04042000,
    0x00080018,0x0180c046,0x100000c0,0x05d98000,0x80881080,0x10831700,
    0x0c000c00,0x80440004,0x50000808,0x0c985950,0x2e726144,0xbb838240,
    0xbd105d42,0xe884fb89,0x3a2172e1,0x5702ea39,0x70b02885,0x642ca855,
    0x6ec0b84d,0x321fbaa4,0xa82ba81e,0x4388380b,0x1454373a,0x0510f36e,
    0x98288577,0x5443dc83,0x440bb809,0x5880dd84,0x376e1ca8,0x21bbb70d,
    0x21ca87e8,0x32a0dddb,0x103776e1,0x65428d8d,0xa813d32e,0x39b709dc,
    0xd886eedc,0x885e4c5d,0x05e4c5dd,0x0bc9836b,0x742c1a91,0x20e5c449,
    0x2eec45d9,0x1d4a872a,0x9ba97762,0x2a17662f,0x4b632e1c,0x2d22399a,
    0x17661766,0x5e4c3971,0x56542b83,0x2173930e,0x5910b9c9,0x43ab2a33,
    0x5950b9c9,0x82e7261d,0x51edc5d8,0x2eaa1d39,0xa83a72a3,0x73930d8a,
    0x27662c41,0x3b31621c,0x98fe6c39,0x17fa1c9d,0x1dbd30ea,0x1ec85ba8,
    0x3ab2a2c4,0x8b112b60,0x7643ad8d,0x443ab2a1,0x962ea58d,0x1ec81929,
    0x2dd41ec8,0x90b09993,0x1fa2399b,0xeeec8fd1,0x22399b92,0x8e66e47e,
    0x4c3607e8,0x20d864b2,0x36191cca,0xe8954aa0,0x202a8b07,0x4b501545,
    0xb0b4982a,0x54bd5e81,0x849e86bd,0x30e66e45,0x9db8b01f,0xb924f41b,
    0x107d4399,0xd0b49967,0x5493d093,0x362e66bd,0x37620ea0,0x2335911e,
    0x2b819ac8,0x3223dbb1,0x3dbb119a,0x6cc66b22,0x98bf665d,0x91114fdd,
    0x5527eecc,0x0cd64472,0xb0777616,0x6ec3bbb0,0xd88eeec1,0x2440585d,
    0x74c5fbb5,0x3622c0ed,0x209511ed,0x2626f5c5,0xdbb10ede,0x7ef44583,
    0xbd30b762,0x876f4c1d,0xdb92fdda,0x3204058b,0xddd92eee,0xdd902005,
    0x7764085d,0x0209002e,0x90103991,0x777649dd,0x810bfb12,0x00085fd8,
    0x00000004,0x6c57abd0,0x265c085f,0x20297f62,0xd808bd5e,0xaf40004f,
    0x02f57a5e,0x00003980,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0xcdb80000,0x02100041,0x04044031,
    0x2ea00000,0x950aee61,0x70a2e003,0x96400057,0x64dc403d,0x54006ea0,
    0x8317003c,0x5c1dc28b,0x350dd42b,0x20100071,0x5d41ba80,0x0205e4c1,
    0x50089977,0x5cee3037,0x13aa0e22,0x20398515,0x57703883,0x7706eec4,
    0x886eedc5,0xd5950e9e,0x971076e1,0x260e5c43,0x46e2ec2c,0xb90aee2b,
    0x260e5433,0xb12ba22c,0x21ccd47b,0x82ee21ca,0x266a399a,0x5dc2ce63,
    0x98480b82,0x30e5c45d,0x20d4393b,0x0a61c8da,0x82c6072a,0x25cc1cb8,
    0x2e21bbb7,0x542ecc1c,0x96cd6c1c,0x32e23bab,0x482e7261,0x47337219,
    0x2dd41cd9,0x1cb996ea,0x21b8dc58,0x6540b82b,0x193710d9,0x836172a2,
    0x2b2a58ba,0xba8f2e0e,0x8962ea58,0x2572b8b3,0x26e23bb8,0x2a0f640c,
    0x15c0aa5b,0x857154aa,0xca40eaca,0x265ba821,0x73930fbd,0x7642dd41,
    0xa83ab2a1,0x79911c8f,0x1fa25ba8,0x362191d5,0x4b3d11ed,0x2f6a6bda,
    0x36167666,0x4379370b,0x92775459,0x19dc8ae3,0x88b0bbd5,0x8e66e4b3,
    0x2ce23b88,0x3fbd1671,0xb89665e4,0x20cee44d,0x1af6a49e,0x22cc3bbb,
    0x22cc372a,0x5b11ccdc,0x6d47b762,0x886c6e6b,0x435ed47e,0x3337249e,
    0x702f6ea1,0x9135ed47,0x40e88335,0xb52ce20d,0x3f76a5fb,0xb1616712,
    0x50581bd7,0x05c5de88,0x744582c4,0x3dbb12fd,0x3f7a23b8,0x905fbd12,
    0x2e3774c5,0x74c05c0c,0x5fbb50ed,0x664582c4,0x3622c0e9,0x493911ed,
    0x897eed44,0x26b224dd,0x4c5fbb51,0xdbb10ede,0x2075d543,0x4bf76a3b,
    0x3222eeec,0x2e8eb802,0x5d1d9000,0x30037fa6,0x81441bfd,0x22277540,
    0x006ff4c2,0x00000008,0x77ccd3f0,0xe89dd50f,0x85100bd5,0x4c00dfe9,
    0x54040dfe,0x8000512c,0xe802eeec,0xec808bd5,0x032ea0e8,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x0e5cc000,0x2e0dd408,0x0a145c2b,0x0000b722,0x001a8000,
    0x00b67720,0x4cd46f2a,0x37260003,0x36e00281,0x002bb82a,0x70aee000,
    0xbb80009b,0x715e541c,0xd980a83b,0x54736e3d,0x0cc88373,0x167662ec,
    0x45dd8832,0x10e541ca,0x459c479d,0x2212a0cb,0x5dc0ae05,0x22ca8582,
    0x76c4392a,0x2a1f3752,0x1176258b,0x6c4dc7bb,0x2a3d82c0,0x55dc3d8b,
    0x0e607929,0x2aeae176,0x2dc32932,0x36e2ee88,0x5d3951c9,0x744362ea,
    0x4ee5883c,0x443a952b,0x887a0575,0x20e5ccb3,0x86ce5458,0x2f60d9ca,
    0x215c4c81,0xb8e1a8c8,0x970d4a20,0x711ddc41,0x10c95477,0x268647bb,
    0x188b0b38,0xa976edcd,0x8f6a1dfd,0x17770e65,0x57073625,0x144ae160,
    0x23ad85bb,0x574a82d8,0x26586c6e,0xb0435b13,0x2095b02c,0x322fa859,
    0xb3b32e8e,0x2571c8b0,0x37a2571c,0x54598281,0xb7711cdc,0x0e665459,
    0x36e21dbd,0x3a936e24,0xb10de419,0x17ef44fd,0x1371e416,0x3606c437,
    0x20dc6e39,0x3b12aacc,0x90b0598d,0x22265355,0x590bba0d,0x6449dd50,
    0x86e370ee,0x32585c0c,0x200f9821,0x88505a85,0xde88b0b3,0xb5177a25,
    0x70b0485b,0x489c4591,0xfbb1e45c,0x32e065c1,0x0aa1eec0,0x00c89a62,
    0xdd887b0b,0x3774c484,0x59109bb1,0x05859c47,0x5477910b,0x206f45de,
    0x6403a82a,0xda89bb11,0x445bb53d,0x89511edd,0x30dfe9d8,0x21c41bfd,
    0xfb12e8ec,0x0002010b,0x881bfd30,0x883e884d,0x3be6044d,0x01fdf30f,
    0x65c5ee98,0x3f620621,0x201bbee5,0x36c1eeeb,0x7c764000,0x261bfd32,
    0x20000dfe,0xdd12fadb,0x9301cc83,0x20000007,0x000004cb,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x1cda8000,0x0e4339b7,0x3262da5c,0x81bb30ba,0x0e66a1da,0x36e1e540,
    0x26edc41c,0x65417373,0x44363261,0x15e541cb,0x83713506,0x7136e1bb,
    0x66dc3bbb,0x2ee0e541,0x7505e4c2,0x2a0e5c43,0x4222229c,0xddd884db,
    0x80982aa4,0x232e5dd8,0x45b1972d,0x5363d8cd,0x985bb74d,0x3586a750,
    0xd11ddec1,0x4bfb98b1,0x4358337a,0x3ba658ba,0xa895d10e,0x36760d8a,
    0x52feb658,0x9d70d9ca,0x972dd43f,0x9cc083f9,0xb072e63d,0x22ad8c83,
    0x5950d8aa,0x3661dc1d,0x2a0ae1c9,0x0b672a5b,0xb9031b04,0x36615cb1,
    0x896ae60c,0x1676258d,0x95c55739,0x41b1931c,0x58262b0a,0x641b5b10,
    0x267df42f,0x227dceab,0x25ac4b38,0x57745ca8,0xb1bab12a,0x5c7299f1,
    0x6d4fbd32,0x4af6f26b,0x2711ccca,0xd12cecc5,0x741e988b,0x99b92aae,
    0x40aa2cc3,0x935ed459,0x1b040ae3,0x598dd905,0x42cc5d50,0x207d40fa,
    0x5622cfcb,0x411f7a65,0x4563da9c,0x3aa1ba43,0xd26feec1,0x2206c3b9,
    0xdbf12fde,0x4aa2ef54,0x90ceda1c,0x37a29bbd,0xda963265,0x8bbf52fd,
    0x3f762088,0x2d92ce21,0x550bae39,0x0f6ec472,0xb0777616,0xd12fdda8,
    0x22b040bb,0xb067b6a3,0xb8d87b30,0x225ec2c0,0x6641fbfa,0x44ee3262,
    0x5c7b7a25,0x2ba23eef,0x020ff22d,0xefa837e6,0x0c44401e,0x22776404,
    0x0106efd9,0x82f8eb81,0x0028052a,0x7dcba3b2,0x90bf23ee,0xe98109dd,
    0x3a6040df,0x301000df,0x3bbee311,0x4dbbf7a3,0x81970dfe,0x3f60fefa,
    0x98fe3b24,0x647981f6,0x10131eee,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x6dc7676a,
    0xa8f7662c,0x26b63ddd,0xb9dcb62d,0x96cedc4d,0xbb10dddb,0x0c0e6dcb,
    0x02602ecc,0x5c2eeee0,0x93712b8b,0x20072e61,0x1730b9b9,0x2b95c017,
    0x842020ae,0x23223bb8,0x10202104,0x40832608,0x0821cccc,0x23555300,
    0x6645639d,0x23bbb704,0x6c64cb49,0x8d8ae360,0x8723ea49,0x2162f8ec,
    0x27264bc9,0x1551620b,0x3d90581b,0x85819b10,0x2b52bead,0x4c67720e,
    0x3074c59d,0x6e74479b,0xccbc8930,0x43b51662,0x9b710c9c,0xc89a1fb8,
    0x64c6ea39,0x4e325571,0x95c44448,0xce992238,0x2155530b,0x0889238c,
    0x2655b190,0x173a27de,0x0f743b5b,0xcc82f6ea,0x3e6162cd,0x2c1fa20e,
    0xfca954aa,0x2e24f41c,0x22ff441e,0x2f639d8c,0x2ce205c3,0x6f44b3b1,
    0x30e17641,0xcc8b0ddd,0xcb857953,0x429a5ec0,0xb8931dac,0x43265772,
    0x400a6028,0x7775c530,0x20018212,0x232611b0,0x5b16b225,0x55409d83,
    0x2b6720eb,0x9c99c562,0xb066b224,0x744392a8,0x1076f4c0,0x42dc81b9,
    0x3e65beae,0xec93baa0,0xa86112e8,0xf3f92e9e,0xd3f02e65,0x3006ff4c,
    0x3fbe6153,0x4cc08420,0x5cc2ea0a,0x00000000,0x20000000,0xc97cf645,
    0x1bf35b8e,0x47642fd4,0xbaf53a0e,0x91d93eef,0x44bbbb27,0x13bb25fd,
    0x42f57a12,0x000421d9,0x00000000,0x00000000,0x00000000,0x00000000,
    0x3fd80000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x22000000,0x55554408,
    0x00000002,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0xdd880000,0x2aaa25dd,0x0000002a,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,
};

static signed short stb__courier_bold_9_latin_ext_x[560]={ 0,1,1,0,0,0,0,1,2,0,0,0,1,0,
1,0,0,0,0,0,0,0,0,0,0,0,1,1,-1,0,0,0,0,-1,0,0,0,0,0,0,0,0,0,0,
0,-1,-1,0,0,0,0,0,0,0,-1,-1,0,0,0,1,0,0,0,-1,1,0,-1,0,0,0,0,0,0,0,
0,0,0,-1,0,0,-1,0,0,0,0,0,0,-1,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,
1,0,1,-1,1,0,-1,0,-1,-1,1,0,1,1,1,0,0,1,1,1,1,0,0,-1,0,0,-1,-1,-1,-1,
-1,-1,-1,0,0,0,0,0,0,0,0,0,-1,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,0,
-1,0,-1,0,-1,0,0,0,0,0,0,0,0,0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,-1,0,-1,0,-1,0,-1,0,0,0,0,0,0,0,0,-1,-1,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,-1,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,-1,0,-1,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0, };
static signed short stb__courier_bold_9_latin_ext_y[560]={ 6,0,1,0,0,1,1,1,0,0,0,1,4,3,
5,0,0,0,0,0,0,0,0,0,0,0,2,2,1,2,1,1,0,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,7,0,2,0,2,0,2,0,2,0,0,
0,0,0,2,2,2,2,2,2,2,1,2,2,2,2,2,2,0,0,0,2,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,6,2,0,1,1,1,
0,0,1,1,0,2,3,3,1,-1,0,0,0,0,0,2,0,2,5,0,0,2,0,0,0,2,-1,-1,-1,-1,
-1,-1,1,1,-1,-1,-1,-1,-1,-1,-1,-1,1,-1,-1,-1,-1,-1,-1,2,0,-1,-1,-1,-1,-1,1,0,0,0,
0,1,1,0,2,2,0,0,0,1,0,0,0,1,0,1,0,0,0,1,1,1,2,0,0,0,1,0,0,1,
0,1,-1,0,1,2,-1,0,-1,0,-1,0,-1,0,-1,0,1,0,0,1,-1,0,-1,0,1,2,-1,0,-1,0,
-1,0,-1,0,1,0,-1,-1,1,0,-1,1,0,1,-1,0,1,0,-1,2,1,0,-1,0,1,0,2,-1,-1,1,
0,1,0,1,0,1,0,-1,0,1,2,-1,0,1,1,2,0,1,-1,0,-1,0,1,2,-1,0,1,2,-1,0,
-1,0,-1,0,1,2,-1,0,1,1,-1,0,1,1,-1,1,0,1,-1,0,-1,0,-1,0,1,2,-1,0,-1,0,
-1,-1,0,-1,0,-1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,1,1,1,1,0,2,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1,0,-1,0,-1,
0,-1,0,-1,0,-1,-1,-1,-1,-1,-1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,-3,-1,-1,0,-1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1, };
static unsigned short stb__courier_bold_9_latin_ext_w[560]={ 0,2,3,5,5,5,5,2,2,3,5,5,3,5,
2,5,5,5,5,5,5,5,5,5,5,5,2,3,6,5,5,5,4,6,5,5,5,5,5,5,5,5,5,5,
5,6,6,5,5,5,5,5,5,5,6,6,5,5,5,3,5,3,5,7,3,5,6,5,5,5,5,5,5,5,
4,5,5,6,5,5,6,5,5,5,5,5,5,6,5,5,5,3,2,3,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,2,4,5,5,5,
2,5,3,6,3,5,6,5,6,7,3,5,3,3,3,5,5,2,3,3,3,5,5,7,5,4,6,6,6,6,
6,6,6,5,5,5,5,5,5,5,5,5,6,6,5,5,5,5,5,4,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,6,5,
6,5,6,5,7,5,5,5,5,5,5,5,5,5,5,6,6,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,6,5,4,5,5,5,5,5,5,
5,5,5,5,5,5,5,6,5,6,5,6,5,6,5,5,5,5,5,5,5,5,6,6,5,5,5,5,5,5,
5,5,5,5,5,5,5,5,5,5,5,6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,6,6,5,5,
5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5,5,5,5,5,6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,6,6,5,5,5,
5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,6,5,5,5,5,
5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5,5,5,5,5,6,5,6,6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5, };
static unsigned short stb__courier_bold_9_latin_ext_h[560]={ 0,7,3,7,7,6,6,3,8,8,5,5,4,2,
2,7,7,6,6,7,6,7,7,7,7,7,5,5,5,3,5,6,7,5,5,6,5,5,5,6,5,5,6,5,
5,5,5,6,5,7,5,6,5,6,5,5,5,5,5,8,7,8,4,2,3,5,7,5,7,5,6,6,6,6,
8,6,6,4,4,5,6,6,4,5,6,5,4,4,4,6,4,8,8,8,3,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,6,7,5,5,5,
8,7,1,6,4,4,3,2,6,2,3,6,4,4,3,6,7,3,3,4,4,4,6,6,6,6,7,7,7,7,
7,7,5,7,7,7,7,7,7,7,7,7,5,7,8,8,8,8,8,4,7,8,8,8,8,7,5,7,7,7,
7,6,6,7,5,6,7,7,7,6,6,6,6,5,7,5,7,7,7,6,6,5,5,7,7,7,6,8,8,7,
6,6,7,7,7,5,8,7,8,7,8,7,8,7,7,7,5,7,6,6,7,7,7,7,7,6,7,7,8,8,
8,8,8,8,7,8,7,7,5,6,7,5,6,5,7,6,7,8,7,4,6,8,8,8,7,8,4,7,7,7,
8,5,6,5,6,5,6,7,6,7,6,7,6,5,6,6,7,6,8,7,8,7,5,5,7,6,7,6,7,6,
8,7,8,7,7,6,8,7,8,7,7,7,5,6,8,6,7,6,8,7,8,7,8,7,7,6,7,6,7,8,
7,7,6,7,6,7,6,6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,6,5,5,7,5,5,5,
5,5,5,5,5,5,5,5,5,5,6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,7,5,5,5,5,
5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,7,7,7,6,8,
7,8,7,8,7,8,8,8,8,8,8,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5,5,5,5,5,9,8,7,7,8,7,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5, };
static unsigned short stb__courier_bold_9_latin_ext_s[560]={ 253,253,239,120,55,165,81,243,174,164,95,
75,182,246,253,248,216,123,129,49,147,181,163,134,128,116,252,251,88,233,207,
49,218,81,245,241,69,57,25,1,7,63,235,51,45,38,31,223,19,187,13,
192,1,99,238,231,225,219,213,110,132,195,126,9,223,170,156,158,169,146,105,
111,167,173,133,198,179,101,120,84,210,217,114,57,229,45,108,148,138,247,171,
144,148,157,227,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,
182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,253,252,247,
39,51,20,161,67,252,185,161,165,212,246,160,1,204,141,192,196,219,117,51,
253,208,144,200,186,75,67,61,251,191,31,229,113,222,205,194,1,241,13,86,
19,161,92,104,179,139,44,183,211,223,19,74,177,185,20,32,55,67,204,33,
242,236,7,57,93,87,25,26,221,167,38,198,159,239,227,1,201,13,121,235,
229,223,31,37,108,102,210,144,107,153,79,25,173,208,215,154,148,140,96,7,
122,247,110,217,98,205,101,80,73,63,61,63,245,43,37,31,25,19,75,7,
1,189,61,49,151,168,127,212,121,199,193,90,81,175,152,25,164,150,117,138,
138,126,155,111,114,98,38,88,86,132,75,69,63,32,7,147,188,105,127,7,
14,19,1,13,238,99,13,233,69,208,129,229,190,235,177,70,77,159,202,147,
123,135,135,85,115,73,109,141,141,43,232,177,39,33,94,133,43,14,171,97,
177,13,91,1,153,241,165,171,183,183,189,196,199,202,214,196,220,87,226,93,
204,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,135,182,182,103,
182,182,182,182,182,182,182,182,182,182,182,182,182,153,176,182,182,182,182,182,
182,182,182,182,182,182,182,182,121,114,182,182,182,182,182,182,182,182,182,182,
182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,245,21,
27,55,104,8,92,45,80,51,68,62,56,50,44,38,182,182,182,182,182,182,
182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,
182,182,182,1,26,81,128,8,57,182,182,182,182,182,182,182,182,182,182,182,
182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,
182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,
182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,
182,182,182,182,182,182,182,182,182, };
static unsigned short stb__courier_bold_9_latin_ext_t[560]={ 9,1,57,20,28,36,44,57,1,1,57,
57,57,57,48,28,28,44,44,28,44,20,20,28,28,28,20,51,57,57,51,
44,20,57,51,44,57,57,57,51,57,57,44,57,57,57,57,44,57,20,57,
44,58,44,51,51,51,51,51,1,20,1,57,64,57,51,20,51,20,51,44,
44,44,44,1,44,44,57,57,51,44,44,57,51,44,51,57,57,57,44,57,
1,1,1,57,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,
51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,9,11,20,
51,51,51,1,28,26,44,57,57,57,57,44,64,57,44,57,57,57,44,36,
44,57,57,57,57,44,44,44,36,28,36,28,20,28,20,51,36,20,28,28,
36,28,28,28,28,51,36,1,1,1,11,1,57,28,1,1,11,11,28,51,
28,28,36,36,36,36,36,51,36,28,36,28,36,36,36,44,51,36,51,20,
20,20,44,44,51,51,28,20,20,36,11,11,28,36,36,28,28,28,51,11,
28,1,28,1,28,1,20,28,28,51,28,36,36,28,28,28,28,28,36,28,
28,1,11,11,1,1,1,20,1,20,20,51,36,20,51,44,51,20,36,20,
1,20,57,36,1,1,11,20,1,57,20,20,20,11,51,36,51,36,51,44,
20,44,20,44,11,36,51,36,36,11,36,1,11,1,11,51,51,11,36,11,
36,11,36,11,11,11,11,11,36,11,11,1,20,20,20,51,44,1,36,11,
36,11,11,11,11,1,11,11,36,11,36,11,1,11,11,36,11,44,11,44,
44,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,44,51,51,11,
51,51,51,51,51,51,51,51,51,51,51,51,51,44,51,51,51,51,51,51,
51,51,51,51,51,51,51,51,11,51,51,51,51,51,51,51,51,51,51,51,
51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,11,20,
20,44,1,20,1,20,1,20,1,1,1,1,1,1,51,51,51,51,51,51,
51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,
51,51,51,1,1,20,11,1,20,51,51,51,51,51,51,51,51,51,51,51,
51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,
51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,
51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,
51,51,51,51,51,51,51,51,51, };
static unsigned short stb__courier_bold_9_latin_ext_a[560]={ 76,76,76,76,76,76,76,76,
76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,
76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,
76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,
76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,
76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,
76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,
76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,
76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,
76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,
76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,
76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,
76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,
76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,
76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,
76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,
76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,
76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,
76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,
76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,
76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,
76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,
76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,
76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,
76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,
76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,
76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,
76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,
76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,
76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,
76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,
76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,
76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,
76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,
76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,
76,76,76,76,76,76,76,76, };

// Call this function with
//    font: NULL or array length
//    data: NULL or specified size
//    height: STB_FONT_courier_bold_9_latin_ext_BITMAP_HEIGHT or STB_FONT_courier_bold_9_latin_ext_BITMAP_HEIGHT_POW2
//    return value: spacing between lines
static void stb_font_courier_bold_9_latin_ext(stb_fontchar font[STB_FONT_courier_bold_9_latin_ext_NUM_CHARS],
                unsigned char data[STB_FONT_courier_bold_9_latin_ext_BITMAP_HEIGHT][STB_FONT_courier_bold_9_latin_ext_BITMAP_WIDTH],
                int height)
{
    int i,j;
    if (data != 0) {
        unsigned int *bits = stb__courier_bold_9_latin_ext_pixels;
        unsigned int bitpack = *bits++, numbits = 32;
        for (i=0; i < STB_FONT_courier_bold_9_latin_ext_BITMAP_WIDTH*height; ++i)
            data[0][i] = 0;  // zero entire bitmap
        for (j=1; j < STB_FONT_courier_bold_9_latin_ext_BITMAP_HEIGHT-1; ++j) {
            for (i=1; i < STB_FONT_courier_bold_9_latin_ext_BITMAP_WIDTH-1; ++i) {
                unsigned int value;
                if (numbits==0) bitpack = *bits++, numbits=32;
                value = bitpack & 1;
                bitpack >>= 1, --numbits;
                if (value) {
                    if (numbits < 3) bitpack = *bits++, numbits = 32;
                    data[j][i] = (bitpack & 7) * 0x20 + 0x1f;
                    bitpack >>= 3, numbits -= 3;
                } else {
                    data[j][i] = 0;
                }
            }
        }
    }

    // build font description
    if (font != 0) {
        float recip_width = 1.0f / STB_FONT_courier_bold_9_latin_ext_BITMAP_WIDTH;
        float recip_height = 1.0f / height;
        for (i=0; i < STB_FONT_courier_bold_9_latin_ext_NUM_CHARS; ++i) {
            // pad characters so they bilerp from empty space around each character
            font[i].s0 = (stb__courier_bold_9_latin_ext_s[i]) * recip_width;
            font[i].t0 = (stb__courier_bold_9_latin_ext_t[i]) * recip_height;
            font[i].s1 = (stb__courier_bold_9_latin_ext_s[i] + stb__courier_bold_9_latin_ext_w[i]) * recip_width;
            font[i].t1 = (stb__courier_bold_9_latin_ext_t[i] + stb__courier_bold_9_latin_ext_h[i]) * recip_height;
            font[i].x0 = stb__courier_bold_9_latin_ext_x[i];
            font[i].y0 = stb__courier_bold_9_latin_ext_y[i];
            font[i].x1 = stb__courier_bold_9_latin_ext_x[i] + stb__courier_bold_9_latin_ext_w[i];
            font[i].y1 = stb__courier_bold_9_latin_ext_y[i] + stb__courier_bold_9_latin_ext_h[i];
            font[i].advance_int = (stb__courier_bold_9_latin_ext_a[i]+8)>>4;
            font[i].s0f = (stb__courier_bold_9_latin_ext_s[i] - 0.5f) * recip_width;
            font[i].t0f = (stb__courier_bold_9_latin_ext_t[i] - 0.5f) * recip_height;
            font[i].s1f = (stb__courier_bold_9_latin_ext_s[i] + stb__courier_bold_9_latin_ext_w[i] + 0.5f) * recip_width;
            font[i].t1f = (stb__courier_bold_9_latin_ext_t[i] + stb__courier_bold_9_latin_ext_h[i] + 0.5f) * recip_height;
            font[i].x0f = stb__courier_bold_9_latin_ext_x[i] - 0.5f;
            font[i].y0f = stb__courier_bold_9_latin_ext_y[i] - 0.5f;
            font[i].x1f = stb__courier_bold_9_latin_ext_x[i] + stb__courier_bold_9_latin_ext_w[i] + 0.5f;
            font[i].y1f = stb__courier_bold_9_latin_ext_y[i] + stb__courier_bold_9_latin_ext_h[i] + 0.5f;
            font[i].advance = stb__courier_bold_9_latin_ext_a[i]/16.0f;
        }
    }
}

#ifndef STB_SOMEFONT_CREATE
#define STB_SOMEFONT_CREATE              stb_font_courier_bold_9_latin_ext
#define STB_SOMEFONT_BITMAP_WIDTH        STB_FONT_courier_bold_9_latin_ext_BITMAP_WIDTH
#define STB_SOMEFONT_BITMAP_HEIGHT       STB_FONT_courier_bold_9_latin_ext_BITMAP_HEIGHT
#define STB_SOMEFONT_BITMAP_HEIGHT_POW2  STB_FONT_courier_bold_9_latin_ext_BITMAP_HEIGHT_POW2
#define STB_SOMEFONT_FIRST_CHAR          STB_FONT_courier_bold_9_latin_ext_FIRST_CHAR
#define STB_SOMEFONT_NUM_CHARS           STB_FONT_courier_bold_9_latin_ext_NUM_CHARS
#define STB_SOMEFONT_LINE_SPACING        STB_FONT_courier_bold_9_latin_ext_LINE_SPACING
#endif

