// Font generated by stb_font_inl_generator.c (4/1 bpp)
//
// Following instructions show how to use the only included font, whatever it is, in
// a generic way so you can replace it with any other font by changing the include.
// To use multiple fonts, replace STB_SOMEFONT_* below with STB_FONT_arial_18_latin1_*,
// and separately install each font. Note that the CREATE function call has a
// totally different name; it's just 'stb_font_arial_18_latin1'.
//
/* // Example usage:

static stb_fontchar fontdata[STB_SOMEFONT_NUM_CHARS];

static void init(void)
{
    // optionally replace both STB_SOMEFONT_BITMAP_HEIGHT with STB_SOMEFONT_BITMAP_HEIGHT_POW2
    static unsigned char fontpixels[STB_SOMEFONT_BITMAP_HEIGHT][STB_SOMEFONT_BITMAP_WIDTH];
    STB_SOMEFONT_CREATE(fontdata, fontpixels, STB_SOMEFONT_BITMAP_HEIGHT);
    ... create texture ...
    // for best results rendering 1:1 pixels texels, use nearest-neighbor sampling
    // if allowed to scale up, use bilerp
}

// This function positions characters on integer coordinates, and assumes 1:1 texels to pixels
// Appropriate if nearest-neighbor sampling is used
static void draw_string_integer(int x, int y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0, cd->t0); glVertex2i(x + cd->x0, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t0); glVertex2i(x + cd->x1, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t1); glVertex2i(x + cd->x1, y + cd->y1);
        glTexCoord2f(cd->s0, cd->t1); glVertex2i(x + cd->x0, y + cd->y1);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance_int;
    }
    glEnd();
}

// This function positions characters on float coordinates, and doesn't require 1:1 texels to pixels
// Appropriate if bilinear filtering is used
static void draw_string_float(float x, float y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0f, cd->t0f); glVertex2f(x + cd->x0f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t0f); glVertex2f(x + cd->x1f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t1f); glVertex2f(x + cd->x1f, y + cd->y1f);
        glTexCoord2f(cd->s0f, cd->t1f); glVertex2f(x + cd->x0f, y + cd->y1f);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance;
    }
    glEnd();
}
*/

#ifndef STB_FONTCHAR__TYPEDEF
#define STB_FONTCHAR__TYPEDEF
typedef struct
{
    // coordinates if using integer positioning
    float s0,t0,s1,t1;
    signed short x0,y0,x1,y1;
    int   advance_int;
    // coordinates if using floating positioning
    float s0f,t0f,s1f,t1f;
    float x0f,y0f,x1f,y1f;
    float advance;
} stb_fontchar;
#endif

#define STB_FONT_arial_18_latin1_BITMAP_WIDTH         256
#define STB_FONT_arial_18_latin1_BITMAP_HEIGHT        100
#define STB_FONT_arial_18_latin1_BITMAP_HEIGHT_POW2   128

#define STB_FONT_arial_18_latin1_FIRST_CHAR            32
#define STB_FONT_arial_18_latin1_NUM_CHARS            224

#define STB_FONT_arial_18_latin1_LINE_SPACING          12

static unsigned int stb__arial_18_latin1_pixels[]={
    0x390e44e4,0x2a04b800,0x22002a83,0x332e201a,0x219972cc,0x1597304a,
    0x15300a00,0x40053000,0x399500a9,0x0abdb880,0x96e20e40,0x2203974a,
    0x00d80acb,0x000006a2,0x1c02d5aa,0x1a80aa00,0x7c5f15f1,0x80be2003,
    0x000fb80e,0xffd101d9,0x3ba9ffdd,0xfe88b70c,0x4402ffdd,0x00274406,
    0x7cc00fe2,0x05f9505d,0x3b2f7fb2,0xf90fe04f,0x87daadc9,0xa86ebdf8,
    0x007fb604,0xa816f3f6,0x7ed40b56,0x02f8801d,0x0fe007f1,0x12e02a80,
    0x03b002c8,0x26cfffee,0x3a25b87d,0x5007e40d,0x800b3009,0x22f6004a,
    0x2e0be02d,0x209d101e,0x96e1f409,0xf335c1f8,0x1b503d03,0xb8d880b7,
    0x9103b81c,0x7e75fd43,0x26025c00,0x7f298298,0x30530573,0x0770fc45,
    0x881dc722,0x27fffd1c,0x4b70fa4d,0x83e880fc,0x65402db9,0xcca800bc,
    0xbcca800b,0x1d50be00,0x744c4554,0x21740a84,0x3ea0fc5b,0x772dc021,
    0x65407220,0x105d80bc,0xbd69f45f,0x2a00ca80,0xfa740fa8,0x2a0ffdfe,
    0x8d72740f,0x365f105d,0x3f65f105,0x1f49b3ff,0x4004e96e,0x981efced,
    0x04fecefe,0x9fd9dfd3,0x3b3bfa60,0x7cc5f04f,0xd9dddf30,0x5f0fe1a6,
    0x7417c5b8,0xd8fc403f,0xe985f105,0x6c4fecef,0x3e25f105,0x1ffc00d2,
    0x447f13d0,0x2f41ff1f,0x90fc47f1,0x5f105d8b,0xa97c4176,0x749b3fff,
    0x007f2dc3,0x2f6cc764,0x7f5077e2,0x7d41df88,0x2a0efc43,0x56e2f83f,
    0xf93f23f8,0x70be1fc0,0x5eec2e8b,0x6cbe00df,0x7c45f105,0xbb1fd41d,
    0x8de8be20,0x0d7f5006,0x9ae6c8f4,0xd907dc5f,0xbb13635c,0x82ecbe20,
    0x4ff662f8,0x2330fa4d,0x4fa003f8,0x07e418ab,0x03f21fb8,0x01f90fdc,
    0x6c5f07ee,0x22f98d93,0x0f51fc2e,0x9e65c8b7,0x27d02fe9,0x645f105d,
    0x363f700f,0x7cc5f105,0x6ec00bff,0x265f01f8,0x21fc7d0f,0x743e61f9,
    0x41761fc3,0x220bb2f8,0x49b3e82f,0x8027c03e,0x3e01d2f8,0x4f8be204,
    0x04f8be20,0x7c5f0be2,0x21f987d1,0x1fb9fc0f,0xf36d85b8,0x2bb07d83,
    0x7c5f105d,0x2ecbe204,0xffa82f88,0x3a5f101f,0x4df45f05,0x1f50fe0f,
    0x740f9be8,0x2f882ec3,0x20be20bb,0x01f49b3e,0x3e4e8176,0x07f1068a,
    0x807f14e8,0xe807f14e,0x88f897c4,0x0f53dc2f,0x2e0faa7f,0x5fb27cc5,
    0xda6c07cc,0x3e25f105,0x05da7403,0x363a05f1,0x07dcf706,0x5ceb8fe2,
    0x2e1f22fc,0x6c5d85ce,0x1765f105,0xd9f417c4,0x54950fa4,0x361fa83f,
    0x7c4d73ac,0x2f8af402,0x02f8af40,0x2e8be2f4,0x5f15e89d,0x207c47f0,
    0x7e41ec5b,0x27f05c8d,0x225f105d,0x6daf402f,0x68a23f30,0x449d01f5,
    0xf11fc43f,0xa8bff85f,0x82ff883f,0xf9836c6b,0x07e60db1,0x87d26cfa,
    0x4ce7e45b,0x4f7d45fc,0x201fc2f9,0x7f00fe3f,0xf0fe01fc,0x9afca645,
    0xf04ebefe,0x22dc1f87,0x0bfd302f,0x9836c7e2,0x7f00fe1f,0x987d41ee,
    0x261aed2f,0x46feeeef,0x7c3ec4f8,0x3603ffec,0x07b8f307,0x541ee1f5,
    0x49b3e80f,0x6dc2dc3e,0xfb80bdff,0x205d83ef,0x981761f9,0xf981761f,
    0x21d517c1,0x2efb9efc,0x17c3f811,0xd803f16e,0xf70f981f,0x05d83ea0,
    0x40fd47e6,0x4f4f747c,0xcccec83e,0x13e21fdc,0x0027f09b,0x2a2e8136,
    0x3ea7c81f,0x27d07c81,0x0b70fa4d,0x07660174,0x6d882fa8,0x36c417d4,
    0x1b620bea,0x001db0be,0x743f83f7,0x507e2dc2,0x24c84e85,0x547c81fa,
    0x746d882f,0x42fdb9bf,0xf03fffe8,0x41317a07,0x003f80f9,0x235401f3,
    0x2fdb9bfe,0x7edcdff4,0xe9367d02,0x3f302dc3,0x7dc01640,0x80efc9be,
    0xefc9befb,0xc9befb80,0x442f80ef,0x65441bfe,0x3a0fc42f,0x81f32dc4,
    0x887f10fa,0x5cdff40f,0xbefb82fd,0x6c40efc9,0x2203efff,0x6403ea06,
    0x03ff880f,0x3ff8807f,0x3f622d80,0xfd883eff,0x4fa03eff,0x5c7ffa4d,
    0x401fd905,0xffb5000e,0x7ed4019d,0x36a00cef,0x7ec0ceff,0xdffd502f,
    0xfc819ffd,0xb737d40e,0x77ec1bee,0x441e40df,0x203efffd,0x00ceffda,
    0x6c070004,0x540fe205,0x2a002601,0x02031001,0x21100080,0x19866208,
    0x00100330,0x00200020,0x09988020,0x2009a980,0x198a6029,0x01a88053,
    0x10001005,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00154000,0x20035000,
    0x40544029,0xb01540a8,0x2a200ba5,0x00029801,0x02980000,0xb05d15d0,
    0x32970ba5,0x2e039504,0x050c0572,0x39100e54,0x540a180a,0x2604a81c,
    0x201e401c,0xf9005df9,0x0fb80d7b,0x3a204f80,0x265d80ed,0x174b601f,
    0x7cc06d80,0xdbee885d,0x000cc803,0x2ba007f1,0x5d2d82e8,0xf30994b8,
    0x3abb01d9,0x0bdfbd04,0xa803f3e6,0xdfbd04ef,0x83d5b70b,0x2036401e,
    0x22f600fa,0x546c402d,0x402c801c,0x4cadc05a,0x80790d88,0x2000bcca,
    0x362f601d,0x065c5d42,0xa801ce20,0x00654004,0xccccb893,0x5cee2ccc,
    0x0c4a0002,0x5c0ae770,0x0c500fce,0x2dc972e8,0x15400c80,0xa80032a0,
    0x9999700c,0x332e5999,0x972ccccc,0x45999999,0x74c12649,0x804fecef,
    0x224c00ca,0x4019104b,0x409701ed,0x0ffe01c8,0x777ec7b8,0x8153eeee,
    0x200b8829,0x2600aba8,0x32a2600b,0x7c02e605,0x400f4b51,0x4c0a80b8,
    0x4007ff02,0xddfb03ff,0x3f67dddd,0xb3eeeeee,0x7ddddddf,0xf10f73dc,
    0x403fa83b,0x23dc03ff,0x01f883fd,0x27cc0ffe,0x2fea06e8,0x0bb1ee06,
    0x225c87f0,0x540dfdfd,0x4c2ffdef,0x440dfdfe,0x4c3ffefc,0x6c0dfdfe,
    0x1016e792,0x7c1bfbfb,0x5fd42e43,0x0d7f5006,0x01760176,0x73dc0176,
    0x2e01f90f,0x0d7f501f,0x07fec7b8,0x5fd407e2,0xf707f206,0x0fc6ec03,
    0x402ec7b8,0x4bd2e43f,0x3a2745d8,0x4e886f45,0x46e98764,0x989d10de,
    0x801f0ede,0x3f97625e,0x7c6ec2e4,0x1f8dd801,0x05d805d8,0x4f7005d8,
    0x2204f87b,0x3f1bb02f,0x3b763dc0,0xdd80fc46,0x89ba01f8,0x74be203f,
    0x05d8f705,0xf9ae43f8,0x88107d42,0xd70be66d,0xf33e42f8,0x5c306b85,
    0x2f985714,0x643f87d4,0x05e97c45,0xd85e97c4,0xd805d805,0x3dcf7005,
    0x09d00fe2,0xb817a5f1,0x11fceec7,0x3a5f103f,0x36cfe605,0x80fb9ee0,
    0x6667ec7b,0xc87f0ccc,0xffffff55,0x7fedc43f,0xf303ea6f,0x3f303e63,
    0x03f303ea,0x65fc47c4,0x3ffffea5,0x5c87f1ff,0x401f73dc,0xfb03ee7b,
    0x21999999,0xccccccfd,0x99999fb0,0x8f73dc19,0x42f402f8,0x5c03ee7b,
    0x10fcaec7,0x7dcf703f,0x03eff200,0x41fc49d0,0x7777ec7b,0xc87f0eee,
    0x33335f55,0xc8df7443,0x3f303ea6,0x21f503e6,0x00fcc0fa,0x87c5aa97,
    0x19999afa,0x4e8b90fe,0x24e80fe2,0x777ec3f8,0xdfb0eeee,0x361ddddd,
    0x0eeeeeef,0x3f87b9ee,0x12741fc0,0xbb1ee07f,0xe81f8b74,0xfd00fe24,
    0xeeef9807,0x6c7b86fe,0xaf43f805,0xa864c3f8,0x7f33740f,0x321fc7c8,
    0x0f90fe65,0x3e5b87c4,0x0c987f11,0x3e65e87f,0x306feeee,0x8dfddddf,
    0x805d805d,0x5cf7005d,0x3e605d87,0x77777cc1,0x5d8f706f,0x307e2fe6,
    0x0dfddddf,0xcec807b8,0x5c1fdccc,0x7ec02ec7,0x3f25fc89,0x9fc49f32,
    0x576c6fc8,0x576c4fb8,0x576c2fb8,0x93204fb8,0x2fc8f169,0x44fec9f3,
    0x333b25fc,0xec81fdcc,0x21fdcccc,0x805d805d,0x5cf7005d,0xd882fa87,
    0xccccec86,0x6c7b81fd,0x20fd7e45,0xfdccccec,0x3e01ee01,0x47b8bd03,
    0xffe8805d,0x77ed45bc,0xacffeb84,0x27ff540f,0x502dffc8,0x7c409ffd,
    0x541f6f40,0x7f444efd,0x40fe5bcf,0xbd03f85e,0x02ec02ec,0x27b802ec,
    0x37df707b,0x07f01df9,0xbb1ee17a,0x3f83fdd0,0x03dc0bd0,0x07e403ea,
    0xaaaed8f7,0x80042aaa,0x02000800,0x80080040,0x08013018,0x00fa8040,
    0x807d41f9,0x555db0fc,0x2bb65555,0xdb2aaaaa,0x45555555,0xda81ee7b,
    0xfa80ceff,0x7b81f900,0x0ffcc2ec,0x03f201f5,0x817603dc,0xfb1ee3f8,
    0x0dffffff,0x00000000,0x00000000,0xbb000000,0x0bb1fc40,0xfffd9fc4,
    0xffb6ffff,0x36dfffff,0x6fffffff,0x1007b9ee,0x3e205d80,0x41763dc3,
    0x881761fc,0x000f703f,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x79710000,0x201ca801,0x193002c8,0x5700e540,0xb11c80ae,
    0x2b80e4c0,0x00e54057,0x0e4406e6,0x2a01c980,0x20179502,0x6407303b,
    0x1dc07302,0x50017710,0x0572b819,0x2e600ae6,0x066931cc,0x06c72051,
    0x81f6fba2,0x2a00fcf9,0x205e800f,0xbb00fcf9,0xd50f813a,0x2bb02f40,
    0x8825204e,0xd906fdfe,0xbd017a00,0x309b3d30,0x20bf901d,0x20bf906a,
    0xb9f300e9,0xd84e801f,0xfbfd09d5,0x33bfa20b,0x89b1fdfe,0x0f21f07a,
    0x7702f8f7,0x803700ae,0x2b9dc048,0x993cc000,0x00003220,0x0de80e54,
    0x003205f1,0x00880191,0x207a0b66,0x0f885aa8,0x3d05aa88,0x407d2ec0,
    0x1d900048,0x5bd10fe6,0x51365fb8,0x22d4d30f,0x8807e25d,0x2aea200b,
    0x01575100,0x9802aea2,0xaecaa80b,0x0b881dea,0x402aea20,0x7c40aba8,
    0x05cc0443,0x55002e60,0x1321edc0,0x805d0b50,0x6c04c85a,0x81505f16,
    0x22981529,0x3f23643f,0xd8fef440,0x12643d44,0x41724d8f,0x40dfdfd8,
    0x42ffdefa,0x42ffdefa,0x42ffdefa,0x20dfdfe9,0xefeeefec,0x37f7f624,
    0x7fef7d40,0x7fef7d42,0xd3003e62,0xe981bfbf,0x9b00dfdf,0x6a9e6330,
    0x02dc5a80,0x201aa2d4,0x7f05edf9,0x5c87f5c8,0x747a83f1,0xb3f9bd84,
    0x41e87a8b,0x17c5362e,0xd17625e8,0x22745e89,0x17a2745e,0x213a21bd,
    0x4bd0f12e,0x3a2745d8,0x997a2745,0x886f401f,0xe886f44e,0xf982f984,
    0x003d14ec,0x40074cb5,0x4007a25a,0x90fe05fe,0x26b90feb,0xf887d40f,
    0x369f26c2,0x21e23dc5,0x0df9364b,0x83ea17cc,0x10236c40,0x36c408db,
    0xf86b85f3,0x42f98d50,0xdb1020fa,0xf136c408,0x85f34d87,0xd70be66b,
    0x2a204f98,0x10370f60,0x5e4c7a21,0x70f60880,0x1fdee983,0x5721fc15,
    0x0f9ae43f,0x22f987cc,0x46daf45c,0x34c2d47c,0x50774c9b,0x3fffffff,
    0x37ffedc4,0x1bfff6e2,0x4dfffb71,0xa8fcc0fa,0x1addaafb,0xfffffff5,
    0x7ffedc43,0x7ffedc46,0x7d457646,0x1f981f51,0x11f981f5,0x45b8009f,
    0x9a6402fc,0x2dc06caf,0x74bd0bf2,0x90fe2f9f,0x26b90feb,0x7f13d41f,
    0x7ecfe1ae,0x1e47fa8c,0xd889b0f8,0x2666bea7,0x46fba219,0x46fba26c,
    0x46fba26c,0xf303ea6c,0x3fbbfb23,0x335f54ee,0x5f744333,0x5f744d91,
    0xdfd50d91,0x3e607d45,0x1f981f51,0x0e9800d9,0x6a80bbaa,0x3a606984,
    0xf88bbaa0,0x7f1bfe22,0x5c87f5c8,0x746a83f1,0x8fcc0ead,0x47bffedd,
    0x5365b00f,0x1fc47e60,0x207d4326,0xdd03ea6e,0x99ba07d4,0x8f23e43f,
    0x261fc41f,0x6e81f50c,0x20dd03ea,0x21fcc0dc,0xf90fe67c,0x40fe2364,
    0x0b63a62e,0x0fd407c4,0x6c74c5d0,0xbf70fe22,0x3faf43f8,0x5d89d2f4,
    0x3a207fd4,0x69805366,0x7c66d6a0,0x32fc8d93,0xc89fc49f,0x644fe26f,
    0x644fe26f,0x5c576c6f,0x0789744f,0x893e65f9,0x44df913f,0x20df913f,
    0x8aed84d8,0x4576c4fb,0xc8fe24fb,0xeed89907,0xb83d80ef,0xdb13201e,
    0x5fe41dfd,0x365fefa8,0xfb5fc89f,0x7d4bf913,0x7cc1fc8b,0x0efc99cf,
    0x40970136,0x3faa9b78,0x4efda82e,0xfacffeb8,0x2b3ffae0,0x33ffae0f,
    0x7ff540fa,0x40b50f84,0xeb84efda,0x2e0facff,0x40facffe,0xfd501eeb,
    0x3ffaa09f,0x2effeb84,0x416c0698,0xeeefa85b,0x0b6034c0,0x2a7fffb1,
    0x79ffd10f,0x2f3ffa2b,0x2177ed45,0xefffaae8,0x36026c0c,0x0080f402,
    0x10008008,0x00800200,0x00800886,0x20010008,0x02001000,0x00a80260,
    0x44054044,0x00a81999,0x01010044,0x01000801,0x0880220c,0x004400c0,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x30000000,0xb9805997,0x39103b81,0x02aaaaa8,0xca880575,
    0x665400ac,0x006e601b,0xca880373,0xb98a80ac,0xa8875002,0x9730298b,
    0x0bca8015,0x405e6540,0x73029829,0xa8000159,0x92895443,0xa80c9803,
    0xcb86540c,0xd101abcc,0x81dfb9bf,0x6c5fdef8,0x7c45f105,0x6c45ffff,
    0xea80ffcf,0x882edaac,0x43ffdefe,0x986fdfe8,0xd505fdfe,0xf85db559,
    0x400ffdfd,0x3f7be66d,0x677fc45d,0xbef883ff,0xefe981fd,0x07d44fec,
    0xbbfd113a,0x005a85ff,0x76ffccb9,0xbb007f6d,0x3e0ecf98,0x3fbbbf63,
    0x2076c0df,0xf12ec6e8,0x2f882ec5,0x1f7003e6,0x203aa26c,0x207dc2e8,
    0xf89ae0fc,0x3e887642,0x17440754,0x202f41ff,0x5f997a6d,0x7f7077a2,
    0x11b20fc8,0x23fa83bf,0x887e23f8,0x907e40de,0x5e97200b,0x401fdbe6,
    0x32c95c48,0x4fa85d87,0x07cc03ee,0x1764e837,0x00d717c4,0x3a62987f,
    0xd13eeeb8,0x17442ec1,0x17c5d89b,0xfb0e99b2,0x2fc3a29d,0x16d803ee,
    0x1b65e85f,0x117a0fc8,0xf700fc85,0xc8d73643,0xd33e880f,0x9175105d,
    0x2dd0be6b,0x5101553f,0x6c288510,0x1763f505,0x6c5f5000,0x66c5f105,
    0x89f882b9,0x2593b80a,0x7dc570f8,0x987dc00a,0xf507e63f,0x4b24d9dc,
    0x1f987f2b,0x207d5b60,0xf880fa5c,0x13e01b62,0x43e62f88,0xc802743e,
    0x3fe60eff,0x70f55efd,0x3bf7b7ed,0x23dc3dc1,0xf882ec7b,0x260009f3,
    0x882ec3fe,0x3f7bfa2f,0x3befe61e,0x5e4760df,0xfb1667a9,0x3f2037bf,
    0x6c3e83fe,0x403e3b0f,0x0fa87f59,0x20fc5b60,0xf805f15c,0x0355fb34,
    0x44e807f1,0x1fc0f9be,0x4bd0b900,0xc83f35f9,0x17a23ff6,0x7b8f70f7,
    0xf19f02ec,0x2eeee987,0x362fdb98,0x1e45f105,0x8f7d4bd1,0x7643a4e9,
    0x221a20ee,0x7d44ffeb,0x7dc1edbd,0x1d0fec9b,0x8bf6881e,0x7d36c07c,
    0x803f35e8,0x7ddfd74e,0x5e805f10,0x3e22e75c,0xf3172003,0xf0fe5e85,
    0x41f717ed,0x3dc7b87b,0xbd5e8176,0x03faaa88,0x260db36c,0x987dc01f,
    0x2593dc3f,0x01d45b2c,0x44f8fee2,0x9dfea86d,0x750ecb27,0x545ffcea,
    0xd736c03f,0x1fcbf915,0x807f0fe0,0x221fc03f,0x004f82ff,0xc81f5172,
    0x3f66ff25,0x21f987f6,0x3dc7b87b,0xd94f8176,0x2a023f80,0x3ea0f70f,
    0x443e6020,0x4a87d41f,0x8ec3e259,0x26db01e8,0x2007cc1f,0x5f552a7a,
    0x33e3b0eb,0x21443ffe,0x6eff545d,0x2f9817a5,0x0bb007e2,0x83ec0fcc,
    0x5c93a05d,0x917207d4,0x0feb95dd,0x5c3dc1f5,0x41763dc7,0x209f33f9,
    0xc87f13f8,0x9f207ea6,0x3a3643f8,0x26f63e43,0x9d172660,0x5c2f9360,
    0xb17616c6,0x25c85d47,0x83e6013f,0xa972104e,0x1ba7722f,0x05f500b7,
    0x41360db1,0x21fa83fa,0x3e1fc45c,0x27d32065,0xf70f71f2,0xd82ec7b8,
    0x54defd47,0x27b21ffc,0x5ff42fb8,0x7642fdb9,0x7dc3fb89,0x39b07f52,
    0x6fd42e4c,0x321fda9a,0xec87d51e,0xcd80fb89,0x07f17261,0x05f739f0,
    0x577dc5c8,0x3ea1ffe9,0x40b9abcd,0xefc9befb,0x3200f980,0x45fc99cf,
    0x457641ec,0xf98fa5fc,0x7f719ff3,0x5c7b87b8,0x5d5576c7,0xfed982fe,
    0x75c40cef,0xffd882df,0xfeb883ef,0x9fff703f,0x1effedc0,0x3dfffd50,
    0x83efeb88,0x201dffc8,0xf83dffdb,0x3ffea803,0xfdb85c80,0xd72edcef,
    0x05fffb99,0x819dffb5,0xdb803ff8,0x7cc0bdff,0x677fe41f,0x93fbfea5,
    0xb82efcaf,0x23dc7b87,0x1deffffd,0x00200080,0x20010004,0x04000000,
    0x00100080,0x10004c00,0x02004400,0x80098075,0x4000d400,0x20040000,
    0x00020099,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0xccb80000,0x5c2ccccc,0x001abccc,
    0x00ee0195,0x055e665c,0x4982ca88,0xccccb8a6,0x391c81ab,0x391c9640,
    0xccca8072,0x4da84ccc,0x1b9800ae,0x33202cb8,0x0970aa00,0x702b8322,
    0x2b3332e7,0x99995002,0x13099999,0x55554426,0x01950aaa,0xeeefd891,
    0x77ec3eee,0x400dffee,0x00bb03ff,0x3ffbbbfa,0x7f5f7cc2,0x367c9ee1,
    0x3ffeeeef,0x3e03f9fc,0x1fcfe7f4,0xdddddf90,0xd1efd41d,0xfbff300b,
    0x9837f41d,0x89f301ff,0x21f883fd,0xd97d40fb,0x0ffeeeef,0x777f7740,
    0x7f646eee,0x3fffe67e,0x01f91fff,0x2005d8fb,0x204fa85d,0x3db06bfa,
    0x217a0333,0x9762ec7c,0x05d8627b,0x3f9fc1f9,0x901fc000,0x3a1b200d,
    0x2745c805,0xfd701fdd,0xd89fd103,0x20fc40ff,0x0bb2f45e,0x4fd40bf3,
    0x30a801fa,0x7e4bd001,0xbb1ffa20,0xfa82ec00,0x03f1bb01,0x9ffffffb,
    0x11f985e8,0x1ee7a83b,0x45f305d8,0x0d447f3f,0x27f1a851,0x201b20ba,
    0x17a0aeda,0x27b85b10,0xfce83ece,0x6c4dcc81,0x20fc46ed,0x6c3f51f9,
    0xaf40f905,0x445401fa,0x076400bb,0x2f7e61f9,0xbb002ec7,0x97c41fc0,
    0x999ed85e,0x217a4fb9,0x2e6d807b,0x7d417607,0xe89fcfe0,0x7cfe3dc5,
    0xd91ffded,0x45dffb00,0x4db0005e,0x4fcc6bce,0x26c7541f,0xf88fe776,
    0xd89d6d81,0x3ea0bb05,0xcf803f51,0xf301feef,0x54a27b83,0x66667ec7,
    0x27ba60cc,0x3dc27419,0xb05d81f7,0x76e6774d,0x70fe401f,0x55576c0f,
    0xf9fc4fcb,0x47b85e8b,0xa741ff3f,0x0cccccfc,0x002f4364,0xf39d1fcc,
    0x10fce641,0x2bb1363f,0x103f10fc,0x45d81fbf,0x4bd02fb9,0x2ccccdfa,
    0xd05e83fe,0x1ea0f70b,0xddddddfb,0x2f77ff41,0xf893a17a,0x26c82ec3,
    0x4fedccee,0x0f707ee0,0x6fff77ec,0xbd9f3f81,0x3e7f1ee0,0xeefcb644,
    0x43641eee,0x2fcc005e,0x33d1f53a,0x89b26c3f,0x0fc5ba5d,0xfffffff7,
    0x3fffff65,0x543f504f,0x23eeeeef,0x7cc3645f,0x8f506a82,0x8176005d,
    0x7777cc3f,0x442ec6fe,0x3e617a3f,0x7b82f883,0x7e45d92a,0xdfff3f81,
    0xf3f8f701,0x00d96c87,0x8017a1b2,0xd74e84fa,0x6b8fcde6,0xf997626c,
    0x26621f8b,0xdb099afa,0x74013555,0x01fdcccf,0x321b21fc,0x1ea0d306,
    0x82ec00bb,0x667642f9,0x3f61fdcc,0x20ffeeee,0xf30db05e,0xb3e4f701,
    0x3f81fb0b,0xf709f1bf,0x6c87f3f8,0x21b200d9,0x09f5005e,0xa647cd3a,
    0xffffb1f9,0x91761fff,0x66543f5f,0xbb1cccfd,0x6667cc00,0x1fc01fdc,
    0x4c0fe1b2,0x05d8f505,0x076c1760,0xdb2f40fe,0xe8159999,0x4060bd05,
    0x10bb347b,0x27f3f8df,0x3e3dc2fa,0xd96c87f3,0x17a1b200,0x4e80fea0,
    0x8fcc7efa,0x1de99998,0x87fba176,0xaabfbaa9,0x36c00bb0,0x0fe00fd4,
    0x201f98d9,0xaed8f500,0x6c2aaaaa,0x1febaaae,0x0fc807d4,0x2bba00bb,
    0x981fdbaa,0x92a7b80c,0x7c7f705d,0x7076c7f3,0xc87f3f8f,0x1b200d96,
    0x2aaaabba,0x5555df10,0x4df72745,0xb13601f9,0x203ff30b,0x005d80f9,
    0x57f505f3,0x0fe15555,0x500fa8d9,0xffb1ea09,0xd8dfffff,0x81cfffff,
    0x6cfe205d,0xffffd005,0x07ea03bd,0x02ec09ee,0x1fcfe1fb,0x3e3dc9f1,
    0xd96c87f3,0x3fa1b200,0xf52fffff,0x21ffffff,0xf98fe24e,0x0bb13601,
    0x07cc07f2,0x06d802ec,0xfffffff5,0xb8d90fe3,0x3d41f206,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x99999999,0x1c8812e1,0x43260591,0xa82c983b,0x25900ee4,
    0x2a19702b,0xcccccccc,0x07220752,0x299ba800,0xb9855d44,0x1575100a,
    0x7100dcc0,0x82981501,0x0d5d4048,0x11501730,0x5d454177,0x83518800,
    0x88a8541a,0x983710ab,0xeeee92a2,0x9f31ffee,0x81f91ba0,0x321ee4f8,
    0x3ee5d86f,0x17a3f500,0xeeeb8bf2,0xdb2eeeff,0x4cd4be20,0x7e429999,
    0x3ea0ffee,0xeefcffdd,0x7ef7d42f,0x7eff442f,0x6fefec46,0x30b90fe0,
    0x377f601f,0x7eff4c3f,0x3bbf3e0d,0x05ff9f1f,0x25d9fed4,0x7c7e25f8,
    0xdfaefdfc,0x07b9ee6f,0x07f22fcc,0x46e883f7,0x3a0fcc5e,0xf11fc0fc,
    0x45e9b607,0x82f402fc,0x065f106d,0xfe8bee08,0x43ff0fe2,0xbd13a0fa,
    0x45f10de8,0x3f97625e,0x407cc2e4,0xbd1ae1f8,0x0ff93a21,0x4047fd7a,
    0x2a1cfeb8,0x27a9fea7,0x21ff30ff,0x058310f9,0x13741ba2,0x64fe607f,
    0x3e23f80f,0xb07e62f9,0x2f47f10d,0x0bd005f9,0x197c41b6,0x3326d820,
    0x0dd1064d,0x9b62047f,0xf98443f8,0x43f87d42,0x9fb9935c,0x077e2199,
    0xf9ae17cc,0x904fb645,0x3f1017df,0xf26c7f32,0x817c4f89,0x403f603a,
    0xb80db3f9,0x4bb02fbf,0x435cbb6a,0xd07d40fa,0x7400bf2b,0x3e20db05,
    0x29f04032,0x6dc4b96a,0xffffffff,0x3ff6e24f,0xa803e66f,0x1fffffff,
    0xdd35c87f,0x541dddfd,0x3ea0cfff,0x43f8fcc0,0xdf107f6c,0xb3f4d803,
    0x7c3f87e7,0x200817c3,0x5fe401fc,0x04fe800f,0x4f54d9ae,0x4e87f04d,
    0x0037e6f4,0x3bbf60bd,0x032feeee,0x21d19d04,0x237dd15e,0x099999de,
    0x9b237dd1,0x2bea01f9,0x0fe19999,0x801f30b9,0x1f50fec9,0xc87f1f98,
    0x3f2607f6,0x2f3d703e,0x21fc79db,0x20017c3f,0x7fd003fa,0x9817fa00,
    0x47e25f0f,0x7c4d902f,0x27dfff41,0x9fb05e80,0x25fb9999,0x1eed8201,
    0xf03ea9f1,0x1f51d88d,0xb0fe26e8,0x1930fe29,0xf30bd0fe,0x2f889301,
    0x3e7c87f3,0x403fb643,0x220cffb8,0x8b9f35cf,0x0be1fc3f,0x017e61cc,
    0x7f9007b8,0x7cd7c05f,0x403e6fa0,0xfd0d71f9,0x3a00bee3,0x3e20db05,
    0xdf304032,0x3e21fb31,0x119fdb13,0xc89fc4db,0x5457646f,0x7ccbf21f,
    0x3f227f64,0x9f00f985,0x76c1f711,0x0fe4fb8a,0xa800fed9,0xff1ff43d,
    0x21fc3f85,0x13dc952f,0x07b800dd,0x01fb2fa8,0x7b916f36,0x07d4e80d,
    0x400fd8bd,0x220db05e,0xd504032f,0xeb839ffb,0xbffd34ff,0xacffeb83,
    0x177f540f,0x22277ed4,0x515bcffe,0x41555555,0xa81fffda,0x21fc4ffe,
    0x00007f6c,0x207ec3f9,0x4be1fc3f,0x0fd8227b,0x2203dc00,0x541be25f,
    0x1ef543de,0x203e7ae0,0x2037c45e,0x220db05e,0x1504032f,0x00402002,
    0x10010004,0xfff50080,0x0203ffff,0x00000020,0x00000000,0xaaacfb80,
    0x0f700aaa,0x1fcc0ed8,0x7fc0ffc4,0x82f7c401,0x204fa85e,0x220db05e,
    0x3333352f,0x00000053,0x00000000,0x00000000,0x00000000,0x20000000,
    0xfffffffc,0x5c0f703f,0xd03f901f,0x6401f60f,0x320bd01f,0x360bd02f,
    0x0005f106,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x55510000,0x02a01555,0x028a6066,0x54c01443,0x5cae0d40,
    0x1dcb2003,0x2d80e64c,0xca807540,0x405dc40b,0x102f2a39,0x41111111,
    0x08888888,0x1065c1d4,0x44087517,0x433b6a0b,0x5498b238,0x24a8e4c7,
    0xaaaaaaa8,0x57bbaa2a,0xeeeeeee9,0xe98000ee,0xf02feeee,0x27d0f705,
    0xfddfdcf8,0x2017df10,0x983f24f8,0x8b50f98f,0x3e23e65b,0x03eaba21,
    0x0d980df5,0x224d9e98,0xafdc6cbf,0x7fc6cae9,0x3e3fffff,0x13ffffff,
    0x2f231753,0x9f27e669,0x4c7e60f8,0x4ffffdce,0x6bbdc3ea,0x3227b976,
    0xcccccccc,0x4c777730,0x19999999,0x09d10000,0x317c417c,0x6d67dc1f,
    0x67f5c42f,0x2f9afa81,0xd11f4fa2,0x2d90feeb,0x0fdcc46b,0x55107ef6,
    0xb3055555,0x223d2d45,0x235425aa,0x3e999999,0x26666666,0x25dfdd30,
    0x64fcc726,0x1f987d46,0x41654411,0x000c801a,0x00000000,0x5542f400,
    0x361aacfa,0xe8b91725,0x077f6a03,0x96d89dd9,0x07fdd10d,0x7cd3e7f1,
    0x23e61ebc,0x7fffd45b,0x1ed40fff,0x16a16c97,0x0fa003d5,0xb87ba200,
    0x2dc7c6ab,0x007c4ddb,0x00000000,0x00000000,0xff103b60,0x547fffff,
    0x43d85f0f,0x1fe4405c,0x547dc3fc,0x306fb80f,0x52e5f13f,0x7c5722f8,
    0x98cc0200,0x03e23a67,0x00075cb5,0x6666647d,0x166f21cc,0x45138175,
    0x00003809,0x00000000,0x64000000,0x202f800f,0x75c0faaf,0x36605f10,
    0x3ffa82ef,0xfb89b4d8,0xbb4d85eb,0x89ee7744,0x7d41361f,0x44ecf980,
    0x75a83eec,0x3200bbdf,0x37777762,0x0000002d,0x00000000,0x00000000,
    0x007ee000,0x9bb9017c,0x9ffbffb0,0x101cfeb8,0xf883f77f,0x27f51f88,
    0x74daa5e8,0x49893000,0x26201710,0x33188000,0x00000333,0x00000000,
    0x00000000,0x00000000,0x4cce7d40,0x4c05f009,0x54f441ff,0x7f10e99c,
    0x1b66d801,0x4288cc66,0x00cc2628,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x3ffff200,0x801305ff,0x8000006e,0x013e20fb,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,
};

static signed short stb__arial_18_latin1_x[224]={ 0,1,0,0,0,0,0,0,0,0,0,0,1,0,
1,0,0,1,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,-1,1,0,1,1,1,0,1,1,0,1,
1,1,1,0,1,0,1,0,0,1,0,0,0,0,0,1,0,0,0,-1,0,0,1,0,0,0,0,0,1,1,
-1,1,1,1,1,0,1,0,1,0,0,1,0,0,0,0,0,0,1,0,0,2,2,2,2,2,2,2,2,2,
2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,1,0,0,0,-1,
1,0,0,0,0,1,0,0,0,-1,1,0,0,0,1,1,0,1,0,0,0,1,0,0,0,1,-1,-1,-1,-1,
-1,-1,0,0,1,1,1,1,0,1,-1,0,-1,1,0,0,0,0,0,1,0,1,1,1,1,0,1,1,0,0,
0,0,0,0,0,0,0,0,0,0,0,1,-1,0,0,1,0,0,0,0,0,0,1,1,1,1,1,0,1,0,
 };
static signed short stb__arial_18_latin1_y[224]={ 14,2,2,2,1,2,2,2,2,2,2,4,12,9,
12,2,2,2,2,2,2,2,2,2,2,2,5,5,4,5,4,2,2,2,2,2,2,2,2,2,2,2,2,2,
2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,16,2,5,2,5,2,5,2,5,2,2,
2,2,2,5,5,5,5,5,5,5,2,5,5,5,5,5,5,2,2,2,7,3,3,3,3,3,3,3,3,3,
3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,14,5,2,2,4,2,
2,2,2,2,2,6,5,9,2,0,2,4,2,2,2,5,2,7,13,2,2,6,2,2,2,5,-1,-1,-1,-1,
0,-1,2,2,-1,-1,-1,0,-1,-1,-1,0,2,-1,-1,-1,-1,-1,0,4,2,-1,-1,-1,0,-1,2,2,2,2,
2,2,2,2,5,5,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,5,5,2,2,2,2,2,2,2,
 };
static unsigned short stb__arial_18_latin1_w[224]={ 0,3,5,9,9,14,11,3,5,5,6,9,3,5,
3,5,9,6,9,9,9,9,9,9,9,9,3,3,9,9,9,9,16,12,9,11,10,9,9,12,10,3,7,10,
8,12,10,12,10,12,11,10,10,10,11,16,11,11,10,4,5,4,8,11,4,9,8,8,8,9,6,8,7,2,
4,7,2,12,7,9,8,8,5,8,5,7,8,12,8,8,8,6,2,5,9,9,9,9,9,9,9,9,9,9,
9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,0,3,9,9,9,10,
2,9,5,12,6,7,9,5,12,11,5,9,6,6,4,8,9,3,5,4,6,7,14,14,14,8,12,12,12,12,
12,12,16,11,9,9,9,9,4,4,6,5,12,10,12,12,12,12,12,8,12,10,10,10,10,11,10,9,9,9,
9,9,9,9,14,8,9,9,9,9,4,4,6,5,9,7,9,9,9,9,9,9,8,7,7,7,7,8,8,8,
 };
static unsigned short stb__arial_18_latin1_h[224]={ 0,12,5,13,15,13,13,5,16,16,6,9,5,2,
2,13,13,12,12,13,12,13,13,12,13,13,9,12,9,6,9,12,16,12,12,13,12,12,12,13,12,12,13,12,
12,12,12,13,12,13,12,13,12,13,12,12,12,12,12,16,13,16,7,2,3,10,13,10,13,10,12,13,12,12,
16,12,12,9,9,10,13,13,9,10,13,10,9,9,9,13,9,16,16,16,3,11,11,11,11,11,11,11,11,11,
11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,13,16,13,9,12,
16,16,3,13,7,8,6,2,13,2,5,10,7,7,3,13,16,3,5,7,7,8,13,13,13,13,15,15,15,15,
14,15,12,16,15,15,15,14,15,15,15,14,12,15,16,16,16,16,15,8,13,16,16,16,15,15,12,13,13,13,
13,13,13,13,10,13,13,13,13,13,12,12,12,12,13,12,13,13,13,13,13,7,10,13,13,13,13,16,16,16,
 };
static unsigned short stb__arial_18_latin1_s[224]={ 252,243,168,61,229,223,184,180,28,188,155,
10,252,226,210,244,212,247,142,14,165,35,45,233,79,89,248,72,212,145,39,
58,140,24,48,183,245,1,116,1,87,68,121,65,133,152,175,161,197,138,76,
68,76,24,53,36,24,12,1,66,250,135,90,232,194,132,219,142,201,151,126,
210,108,105,157,91,88,235,198,188,112,129,206,179,195,161,20,222,49,174,1,
162,169,172,184,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,
98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,252,252,86,
151,29,186,71,178,199,99,83,58,135,226,55,214,162,169,128,109,205,235,56,
252,174,123,116,75,169,154,139,130,80,239,1,14,136,111,208,74,27,37,47,
155,57,62,93,149,11,100,96,109,122,205,67,66,222,34,45,194,218,124,37,
1,21,31,41,183,81,91,117,101,238,71,11,173,228,240,233,99,203,225,110,
120,193,213,51,99,108,248,196,165,204,19,10,1, };
static unsigned short stb__arial_18_latin1_t[224]={ 15,62,88,34,1,18,34,88,1,1,88,
88,75,88,88,34,34,62,62,48,62,48,48,62,48,48,75,62,75,88,88,
62,1,62,62,48,48,62,62,48,75,62,48,75,62,62,62,48,62,48,62,
48,75,48,75,75,75,75,75,1,34,1,88,88,88,75,48,75,48,75,62,
48,62,62,1,62,62,75,75,75,48,48,75,75,48,75,88,75,88,48,88,
1,1,1,88,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,
75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,15,1,1,
48,88,62,1,1,88,48,88,88,88,88,48,88,88,75,88,88,88,34,1,
81,88,88,88,88,34,34,34,34,18,1,18,18,18,18,62,1,18,18,18,
18,18,18,18,18,62,18,1,1,1,1,18,88,34,1,1,1,1,18,62,
34,34,34,34,18,34,34,75,34,18,34,34,18,48,48,48,62,18,62,34,
34,18,18,34,88,75,18,34,18,34,1,1,1, };
static unsigned short stb__arial_18_latin1_a[224]={ 72,72,92,143,143,229,172,49,
86,86,100,151,72,86,72,72,143,143,143,143,143,143,143,143,
143,143,72,72,151,151,151,143,262,172,172,186,186,172,157,201,
186,72,129,172,143,215,186,201,172,201,186,172,157,186,172,243,
172,172,157,72,72,72,121,143,86,143,143,129,143,143,72,143,
143,57,57,129,57,215,143,143,143,143,86,129,72,143,129,186,
129,129,129,86,67,86,151,193,193,193,193,193,193,193,193,193,
193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,
193,193,193,193,193,193,193,193,72,86,143,143,143,143,67,143,
86,190,95,143,151,86,190,142,103,141,86,86,86,149,138,72,
86,86,94,143,215,215,215,157,172,172,172,172,172,172,258,186,
172,172,172,172,72,72,72,72,186,186,201,201,201,201,201,151,
201,186,186,186,186,172,172,157,143,143,143,143,143,143,229,129,
143,143,143,143,72,72,72,72,143,143,143,143,143,143,143,141,
157,143,143,143,143,129,143,129, };

// Call this function with
//    font: NULL or array length
//    data: NULL or specified size
//    height: STB_FONT_arial_18_latin1_BITMAP_HEIGHT or STB_FONT_arial_18_latin1_BITMAP_HEIGHT_POW2
//    return value: spacing between lines
static void stb_font_arial_18_latin1(stb_fontchar font[STB_FONT_arial_18_latin1_NUM_CHARS],
                unsigned char data[STB_FONT_arial_18_latin1_BITMAP_HEIGHT][STB_FONT_arial_18_latin1_BITMAP_WIDTH],
                int height)
{
    int i,j;
    if (data != 0) {
        unsigned int *bits = stb__arial_18_latin1_pixels;
        unsigned int bitpack = *bits++, numbits = 32;
        for (i=0; i < STB_FONT_arial_18_latin1_BITMAP_WIDTH*height; ++i)
            data[0][i] = 0;  // zero entire bitmap
        for (j=1; j < STB_FONT_arial_18_latin1_BITMAP_HEIGHT-1; ++j) {
            for (i=1; i < STB_FONT_arial_18_latin1_BITMAP_WIDTH-1; ++i) {
                unsigned int value;
                if (numbits==0) bitpack = *bits++, numbits=32;
                value = bitpack & 1;
                bitpack >>= 1, --numbits;
                if (value) {
                    if (numbits < 3) bitpack = *bits++, numbits = 32;
                    data[j][i] = (bitpack & 7) * 0x20 + 0x1f;
                    bitpack >>= 3, numbits -= 3;
                } else {
                    data[j][i] = 0;
                }
            }
        }
    }

    // build font description
    if (font != 0) {
        float recip_width = 1.0f / STB_FONT_arial_18_latin1_BITMAP_WIDTH;
        float recip_height = 1.0f / height;
        for (i=0; i < STB_FONT_arial_18_latin1_NUM_CHARS; ++i) {
            // pad characters so they bilerp from empty space around each character
            font[i].s0 = (stb__arial_18_latin1_s[i]) * recip_width;
            font[i].t0 = (stb__arial_18_latin1_t[i]) * recip_height;
            font[i].s1 = (stb__arial_18_latin1_s[i] + stb__arial_18_latin1_w[i]) * recip_width;
            font[i].t1 = (stb__arial_18_latin1_t[i] + stb__arial_18_latin1_h[i]) * recip_height;
            font[i].x0 = stb__arial_18_latin1_x[i];
            font[i].y0 = stb__arial_18_latin1_y[i];
            font[i].x1 = stb__arial_18_latin1_x[i] + stb__arial_18_latin1_w[i];
            font[i].y1 = stb__arial_18_latin1_y[i] + stb__arial_18_latin1_h[i];
            font[i].advance_int = (stb__arial_18_latin1_a[i]+8)>>4;
            font[i].s0f = (stb__arial_18_latin1_s[i] - 0.5f) * recip_width;
            font[i].t0f = (stb__arial_18_latin1_t[i] - 0.5f) * recip_height;
            font[i].s1f = (stb__arial_18_latin1_s[i] + stb__arial_18_latin1_w[i] + 0.5f) * recip_width;
            font[i].t1f = (stb__arial_18_latin1_t[i] + stb__arial_18_latin1_h[i] + 0.5f) * recip_height;
            font[i].x0f = stb__arial_18_latin1_x[i] - 0.5f;
            font[i].y0f = stb__arial_18_latin1_y[i] - 0.5f;
            font[i].x1f = stb__arial_18_latin1_x[i] + stb__arial_18_latin1_w[i] + 0.5f;
            font[i].y1f = stb__arial_18_latin1_y[i] + stb__arial_18_latin1_h[i] + 0.5f;
            font[i].advance = stb__arial_18_latin1_a[i]/16.0f;
        }
    }
}

#ifndef STB_SOMEFONT_CREATE
#define STB_SOMEFONT_CREATE              stb_font_arial_18_latin1
#define STB_SOMEFONT_BITMAP_WIDTH        STB_FONT_arial_18_latin1_BITMAP_WIDTH
#define STB_SOMEFONT_BITMAP_HEIGHT       STB_FONT_arial_18_latin1_BITMAP_HEIGHT
#define STB_SOMEFONT_BITMAP_HEIGHT_POW2  STB_FONT_arial_18_latin1_BITMAP_HEIGHT_POW2
#define STB_SOMEFONT_FIRST_CHAR          STB_FONT_arial_18_latin1_FIRST_CHAR
#define STB_SOMEFONT_NUM_CHARS           STB_FONT_arial_18_latin1_NUM_CHARS
#define STB_SOMEFONT_LINE_SPACING        STB_FONT_arial_18_latin1_LINE_SPACING
#endif

