// Font generated by stb_font_inl_generator.c (4/1 bpp)
//
// Following instructions show how to use the only included font, whatever it is, in
// a generic way so you can replace it with any other font by changing the include.
// To use multiple fonts, replace STB_SOMEFONT_* below with STB_FONT_courier_27_latin1_*,
// and separately install each font. Note that the CREATE function call has a
// totally different name; it's just 'stb_font_courier_27_latin1'.
//
/* // Example usage:

static stb_fontchar fontdata[STB_SOMEFONT_NUM_CHARS];

static void init(void)
{
    // optionally replace both STB_SOMEFONT_BITMAP_HEIGHT with STB_SOMEFONT_BITMAP_HEIGHT_POW2
    static unsigned char fontpixels[STB_SOMEFONT_BITMAP_HEIGHT][STB_SOMEFONT_BITMAP_WIDTH];
    STB_SOMEFONT_CREATE(fontdata, fontpixels, STB_SOMEFONT_BITMAP_HEIGHT);
    ... create texture ...
    // for best results rendering 1:1 pixels texels, use nearest-neighbor sampling
    // if allowed to scale up, use bilerp
}

// This function positions characters on integer coordinates, and assumes 1:1 texels to pixels
// Appropriate if nearest-neighbor sampling is used
static void draw_string_integer(int x, int y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0, cd->t0); glVertex2i(x + cd->x0, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t0); glVertex2i(x + cd->x1, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t1); glVertex2i(x + cd->x1, y + cd->y1);
        glTexCoord2f(cd->s0, cd->t1); glVertex2i(x + cd->x0, y + cd->y1);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance_int;
    }
    glEnd();
}

// This function positions characters on float coordinates, and doesn't require 1:1 texels to pixels
// Appropriate if bilinear filtering is used
static void draw_string_float(float x, float y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0f, cd->t0f); glVertex2f(x + cd->x0f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t0f); glVertex2f(x + cd->x1f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t1f); glVertex2f(x + cd->x1f, y + cd->y1f);
        glTexCoord2f(cd->s0f, cd->t1f); glVertex2f(x + cd->x0f, y + cd->y1f);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance;
    }
    glEnd();
}
*/

#ifndef STB_FONTCHAR__TYPEDEF
#define STB_FONTCHAR__TYPEDEF
typedef struct
{
    // coordinates if using integer positioning
    float s0,t0,s1,t1;
    signed short x0,y0,x1,y1;
    int   advance_int;
    // coordinates if using floating positioning
    float s0f,t0f,s1f,t1f;
    float x0f,y0f,x1f,y1f;
    float advance;
} stb_fontchar;
#endif

#define STB_FONT_courier_27_latin1_BITMAP_WIDTH         256
#define STB_FONT_courier_27_latin1_BITMAP_HEIGHT        154
#define STB_FONT_courier_27_latin1_BITMAP_HEIGHT_POW2   256

#define STB_FONT_courier_27_latin1_FIRST_CHAR            32
#define STB_FONT_courier_27_latin1_NUM_CHARS            224

#define STB_FONT_courier_27_latin1_LINE_SPACING          13

static unsigned int stb__courier_27_latin1_pixels[]={
    0x00620000,0x33260202,0x40000001,0x00260000,0x00140008,0x33000a80,
    0x2a001000,0x8c4e6000,0x9972881b,0x501e6649,0x0cc00001,0x19800c00,
    0x44013a00,0x70fdc02e,0x03da881f,0x440003a0,0xeb8002fe,0x03fd8800,
    0x70001760,0x0ba6001d,0x4017f440,0x1db801ea,0x950baa95,0xaaf9eaaa,
    0x0007a602,0xb0007aa0,0x00f3009f,0x174c0274,0x80e21c40,0x00ee003b,
    0x13a2baa0,0x9800dc80,0x2005d8be,0xdc8000ec,0x01f44000,0x013a2baa,
    0x41d007e6,0x0951664a,0x5d3003cf,0x0075c000,0x03727d10,0x06a007d0,
    0x00003d10,0xf1001dc0,0x640e8800,0x2004a803,0x70025c1e,0x004b8009,
    0x74407620,0x74c01e40,0x78951e00,0x00f3c254,0x98000e88,0x2174000d,
    0x003d405a,0x00000000,0x201a88ee,0x0000003c,0x00000000,0x00000000,
    0xf0000000,0x12a3c4a8,0x0000079e,0x00000000,0x0000017c,0x887fff10,
    0x4ddc3fff,0x884fedfe,0x3cccc806,0x20333326,0x400bdec9,0x900bdec9,
    0x664c7999,0x333320cc,0x03333263,0x202f7b26,0xccccccc8,0x9999972c,
    0x8f099999,0x212a3c4a,0x999301e7,0x664c0099,0x326004cc,0x32004ccc,
    0x7ffffe45,0x87fff14f,0x3a23fff8,0x36e0f200,0x213660be,0x566d402c,
    0x20beea21,0x2ea88aeb,0xd5115d70,0x4359b505,0x6d42fba8,0x3eea21ac,
    0xa88aeb82,0xdcaaa82e,0x5f530aaa,0x0f555555,0x2a3c4a8f,0x5101e784,
    0x2005bd75,0x02debaa8,0x5bd75510,0x2003ea00,0xc803a24a,0x0d103b83,
    0x42f80bee,0x202c8069,0x880db868,0x4406dc1e,0x2202c81e,0x34405906,
    0x0f4406dc,0x40780950,0xf12a3447,0x0f3c0c41,0x002cddc0,0x4002cddc,
    0xf30059bb,0x3b895003,0x03a20d10,0x203dc0f2,0x6402d84c,0x1d11a202,
    0x0e887440,0x05903a20,0x202c8344,0x10074468,0xf012a01d,0x50fa6780,
    0x3c01dc89,0x0e87400f,0x00e87400,0x800e8740,0x44a802f8,0x203c80e8,
    0x9703443b,0x06986880,0xb8d10164,0x0771c803,0x202c8390,0x44059068,
    0x0e401dc6,0x223c04a8,0x541fd860,0x9e027cc4,0x1dcb3007,0x01dcb300,
    0x401dcb30,0x84a802f8,0x2203443b,0x0d701e46,0x403d05a8,0x3b1a202c,
    0x00767500,0x440590ea,0x34405906,0x40ea0076,0x0ee3c04a,0x3a2545a8,
    0x401e7801,0xc801a22c,0x2c801a22,0x07e601a2,0x91a212a0,0x1a277007,
    0x1f403f70,0x80b205a8,0x44007468,0x8b1001d5,0x641a202c,0x01d1a202,
    0x012a0b10,0x807d999f,0x931e2547,0x0e803cf0,0x40e800ec,0xd81d001d,
    0x4007d401,0x1a27704a,0x403bb440,0x06a80deb,0x202c80f4,0x68803c68,
    0x591a200f,0x02c83440,0x2200f1a2,0xaf809506,0x23c03daa,0x212a3c4a,
    0x216a01e7,0xa85a804a,0x4a85a804,0x4a8035c0,0x800eed10,0x5dc00ecb,
    0x1efbadfb,0x02c82540,0x3001d1a2,0x126003a9,0xc8344059,0x01d1a202,
    0x012a0930,0x23c02b8f,0x212a3c4a,0x337601e7,0xd807cccc,0x07cccccd,
    0xcccccdd8,0xa801ec07,0x003b2e04,0x3b803f88,0x40059b73,0x2203b80e,
    0x95c01646,0x5c2b802c,0x1dc1a203,0x802c8d10,0x7809502b,0x951e0440,
    0xf3c25478,0xaaaae880,0x3a202daa,0x2daaaaaa,0x2aaaba20,0x1f302daa,
    0xf8812a00,0x00744003,0x5c0001dc,0x16a06984,0x263d00d3,0x34c1e806,
    0x81a60b50,0x74034c5a,0x07809501,0x4951e1dc,0xf3c25468,0x16604a80,
    0x816604a8,0x6416604a,0x8812a005,0x025c000e,0x880003b8,0x7b01f80f,
    0x225c05b0,0x7c12e02d,0x0fc07b01,0x202d83d8,0xf012a04b,0x51e43b80,
    0x212a25c9,0x803b01e7,0xe803b00e,0x0e803b00,0x5b000fc4,0x740025c0,
    0x00077000,0x07ae0f20,0x20fa20d9,0xb83e885b,0xd907ae05,0x3641eb80,
    0x05b83e88,0x701e0254,0x2935d887,0xfe9cc0ce,0x11bffe7f,0xd107700d,
    0x0d107700,0x004a8770,0x00e803e2,0x1aecaaa8,0x2ab76a20,0x41a20000,
    0x00dfdefa,0x0276efec,0x013b77f6,0x037f7bea,0x37f7bea0,0x76efec00,
    0xfffff884,0xfffd3fff,0x7fffffff,0x80000000,0xfc87fffc,0x3fff27ff,
    0x27fffc87,0xfc87fffc,0x555007ff,0xaaa83fb5,0x55401aec,0x2201aaaa,
    0x000aaaaa,0x0054c000,0x33000660,0x00153000,0x98001530,0x00000001,
    0x00000000,0x00000000,0x55400000,0xaaa80aaa,0x00001aaa,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x80000000,0x140001c9,0x73002800,0x15000800,0x01007000,
    0x1c028180,0x00054098,0xdedb8808,0x54098133,0x18000200,0x44620028,
    0x02600002,0x00010015,0x000e4644,0x5d8005c8,0x22009500,0x1ea802fe,
    0x4409b100,0x20732efd,0x40fe63f9,0x223f885b,0x44b8003f,0xedb89be9,
    0xf98fe22d,0x31efd883,0x4c7f3007,0x2677003f,0x0effe405,0x0fe23f88,
    0x732efd88,0x01c46e00,0x220026c0,0xbfd5004e,0x22baa075,0x01f9804e,
    0x4aa01f44,0x2a01fed9,0x0fc40540,0x000540a8,0x201d1074,0x2a0542fa,
    0xddb32a80,0x1502a003,0x0254ee00,0x407aa17d,0x5500540a,0x4007fb66,
    0x4001dad8,0x03c8003d,0xfb5139d0,0x1e40e881,0x5b0074c0,0x00002000,
    0x00000d70,0x402e8b50,0x0400002d,0x32000000,0x212e0952,0x4000004b,
    0x00a88000,0x80000000,0x0001d04a,0x98000000,0x4c00bdec,0x7d00bdec,
    0x263cccc8,0xe800cccc,0x42201a21,0xccccccc8,0x66664c2c,0x33326004,
    0xb964004c,0x4d101d03,0xcccccccb,0x0f3264cc,0x20333326,0x804cccc9,
    0xccb84ccb,0x333332e4,0x0ec4cccc,0x666665c0,0x3224cccc,0x2ccccccc,
    0x99999991,0x88aeb859,0x15d702ea,0x0f985d51,0x510d66d4,0x8b5005f7,
    0xaaa8004a,0x440aaadc,0x002debaa,0x05bd7551,0x983b8ec0,0xafa99e05,
    0x27aaaaaa,0x5442fda8,0xaa880afa,0x64c02deb,0x22ed982e,0xaaaaafa9,
    0x402547aa,0xaaaaafa9,0x655547aa,0x2aa0aaad,0x20aaadca,0x41e880db,
    0x21e880db,0x4405906c,0x3b83b006,0x00254000,0x7000b377,0xcc880b37,
    0x24cdecde,0x43f64c4a,0x765c3c07,0x2ee00f00,0x103d0059,0x0f01e01d,
    0x078037db,0x2009503c,0x401d104a,0x401d10e8,0x320bb0e8,0x2601a202,
    0x40003b86,0x743a004a,0x0e874000,0x755fd540,0xea8ee2ac,0x3c07878a,
    0x07825ddc,0x2003a1d0,0x1e03c869,0x3f6e60f0,0x03c0780d,0x412a0095,
    0x771c803b,0x413a3900,0x201a202c,0x0004b82d,0x25980254,0xb966003b,
    0x40ecf003,0x78783a3b,0x27703044,0x5980781e,0x325c00ee,0x3044780d,
    0x8f03aa00,0x04a80608,0x00760950,0x5400ecea,0x80b209d3,0x98344068,
    0x02540005,0x801a22c8,0x3c01a22c,0x1a27701d,0x403b8f0f,0x00f0b53b,
    0xd0034459,0xb8f007a3,0x78770003,0x04a801dc,0x003a0950,0x44007562,
    0x80b20bd5,0xd01e4068,0x02540001,0x800ec0e8,0xca80ec0e,0x1ccfccfc,
    0x21e1e8ee,0x403ecccf,0x00f0b63b,0x3001d81d,0x99f0079d,0x80e607d9,
    0x76667c3b,0x20095003,0x2200f04a,0x6da200f6,0x34405906,0x06a80f10,
    0x804a825c,0xa804a85a,0x75304a85,0x4355f55d,0x3f37a64b,0x1ed557c0,
    0x3c688ee0,0x012a16a0,0x55f006c8,0x03ea07b5,0x555f03e2,0x012a007b,
    0x800e8254,0x93001d49,0x101641ee,0x5c01e40d,0x500ec80e,0x999bb009,
    0x9bb00f99,0x980f9999,0x4c3541e5,0x0ae3c0aa,0x1e3c8770,0x99999bb0,
    0x8025400f,0xdea815c7,0x782edabd,0x04a8015c,0x00b20950,0x5c0164ae,
    0x07703f12,0x00f88344,0x9fb9dd50,0x74404a80,0x2daaaaaa,0x2aaaba20,
    0x56602daa,0x001f1068,0x7702203c,0x440f0e88,0xdaaaaaae,0x20095002,
    0x31884407,0x203c05db,0x20095008,0xd00d304a,0x87a01a63,0x2a06985c,
    0x30009705,0x012a003b,0x502cc095,0x9502cc09,0x002d81a2,0x3b87701e,
    0x2540f5a8,0x12a00b30,0x40ee03c0,0x2e03c04a,0x2a009503,0x4b80b604,
    0x9897016c,0x7b01f80f,0x220003a0,0x8095001d,0xd807401d,0x4a807401,
    0x2074c0b3,0x1dc07818,0x03d6c0ee,0x800e803b,0xb80f004a,0x07809503,
    0x004a81dc,0x41f44095,0xb83e885b,0x3d707b05,0x009506c8,0x54016130,
    0x2e01a204,0x3b806883,0x70166770,0xf05fd7bf,0x81dc3b80,0x00d107e9,
    0x00950077,0x2a07701e,0x0ee03c04,0x04a80254,0x04eddfd8,0x0276efec,
    0x37bea0d1,0x003d00df,0x22059b50,0xffffffff,0x90ffff93,0x7fe4ffff,
    0x7fffc87f,0x10031088,0xfffd0355,0x7fffffff,0x642ffff4,0x87fffc87,
    0xfa87fffc,0xe85fffff,0xffffffff,0x740203ff,0xffffffff,0xffff13ff,
    0x3e27ffff,0x3fffffff,0x33000660,0x02a60000,0x00000498,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x000c00a0,0x000c00a0,
    0x00a00010,0x2ea20010,0x801ccccc,0x40003002,0x07322000,0x66665cc0,
    0x71000802,0x060039db,0x002a0000,0x40000000,0x01d7005c,0x2e00b900,
    0x3b62000e,0x802e4001,0x7dc01ed8,0x01bb9dac,0x1d7005c8,0x00f6c400,
    0xb500b0c8,0x40933333,0x75401ed8,0x804ea89b,0x2e2000eb,0x01d32ced,
    0x10a23bf9,0xff887fff,0x00bb003f,0x36001ea8,0x00f54005,0x01f4df4c,
    0x7d3004d8,0x83ee07d3,0x0bb00534,0x9801ea80,0x5803e9be,0x220b0032,
    0x7d37d304,0x26c03a60,0x5400f540,0xecea89be,0xdea8ca81,0x200e882f,
    0x007b003c,0x1ec01a60,0x44069800,0xb00f621e,0x887a2007,0x9a44e83d,
    0x8001ec02,0x10f44069,0x3cca807b,0x22060580,0x3a0f621e,0x4c007401,
    0xf8074c06,0xb8026005,0x0000d103,0x00000000,0x00000000,0x217c0000,
    0x00000534,0x10000000,0x0005d300,0x2e016a00,0x03d00004,0x98803f72,
    0x4074400a,0x06a2003c,0x00000000,0xa88006a2,0x02a62001,0xd0055440,
    0x88053489,0x531000aa,0x44000001,0x64d6c01a,0x054c4004,0x068803b8,
    0x5a802aa2,0x22132d50,0x01eecdec,0x200d10ee,0x84edcefc,0x3ffd87fd,
    0x3ff61ff6,0xedcefc83,0x373bf204,0x37b2204e,0xfd301eec,0xf501bfbb,
    0xd3029a43,0x201bfbbf,0x1eecdec8,0x7fec3fec,0xedcefc83,0x16d43984,
    0x3b37b220,0x7800e41e,0xdfddfe98,0x0e883b80,0xd507d0d5,0x0791a203,
    0x40b20260,0x81e0ee07,0x2c80983b,0x20590130,0x4c1ea83e,0x03ee20af,
    0x14d2f7aa,0xf71057cc,0x3d507d01,0x4c1dc0f0,0x80d82c80,0x507d00db,
    0xe800ec3d,0xb882be60,0x1740e40f,0x2603c8f1,0x0344ee06,0x07834400,
    0x3b81e0ee,0x1001a200,0x34c0790d,0x205b80fa,0x7d0534a8,0x80f22dc0,
    0x0ee07869,0x3d886880,0x01e42d88,0x780164d3,0xd8b701f4,0xf0742641,
    0x5a205900,0x1330003b,0x07703c1e,0x2601dc0f,0x13300f09,0x4b201e1e,
    0x400e8069,0x80698534,0x0b201e0e,0x2601dc0f,0x0edc0f09,0x5900f0e4,
    0x996600ee,0x9320e806,0x02ccf05b,0x1d9701dc,0x777f5400,0x5c0f07fe,
    0x20ee0783,0x7feeefea,0xfdddfd50,0x3b80598f,0xddddddd7,0x34805fdd,
    0xeeeeeb85,0xb32feeee,0x20787700,0xeefea83b,0x1e4407fe,0x5c02cce6,
    0x2d801d13,0x3bbbbbae,0x5ae2feee,0x265980e9,0x2203b805,0x2baa003f,
    0x5c0f0780,0x50ee0783,0xd50f015d,0x0598f015,0x333b53b8,0x01333333,
    0x9da85348,0x99999999,0x87700b30,0x5d50ee07,0x36600f01,0x00b30db9,
    0xd3026477,0x99999da8,0x3e209999,0x787b01e9,0x3a202d80,0x7803a000,
    0x3c1dc0f0,0x200e8770,0x21e00e87,0x1f12d807,0x0a690000,0x078001f1,
    0x7703c2d8,0x801e00e8,0xd80782e8,0x0f542ec2,0x2e0003e2,0x990d502f,
    0x12e034c0,0x1ea05980,0x41ec4074,0x263d880e,0x0b31ea05,0x302643d4,
    0x80004d8d,0x009b0534,0x21a604c8,0x263d880e,0x0221ea05,0x30264154,
    0x3b77f20d,0x0009b00d,0x03d509f9,0x007aa0fa,0x81d8001d,0x987707ec,
    0x4c3b83ee,0x640ec3ee,0xec81d87e,0x3d507d07,0xea81ce88,0x8829a402,
    0x42ea81ce,0xb81ea83e,0x361f74c3,0x2987ec81,0x20fa0390,0x2bae01ea,
    0x40e74400,0x7ddaa2ea,0x6400dedd,0xa80eecde,0x001aecaa,0x4ffb3b66,
    0x6f6c45ff,0x445fb9ef,0xfb9efded,0x3fb3b665,0x76ccbff3,0x0bff3fec,
    0x01dd9bd9,0x6fee77e4,0x2ab33101,0xb9df901b,0x37b203bf,0xdb100eec,
    0x4bf73dfb,0xf3feced9,0x4ccdccbf,0x6f6404c9,0xfb100eec,0x0d7379db,
    0x37f73bf2,0x02a60741,0x200a9880,0x01aaaaaa,0x4000a880,0x2a2000a8,
    0x00151000,0x22000544,0x2a6000a9,0x54ccb801,0x0d4c0199,0x000a9880,
    0x2a200151,0xcccc8800,0x1531001b,0xa99bc980,0x54c00cdb,0x00000001,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x0054416e,0x022005cc,0x00808011,
    0x8806775c,0xca80bedb,0x203ccccc,0x32a4edc9,0x1ccccccc,0x00000808,
    0x2e02ed98,0x00201bed,0x40017b50,0x5002a21b,0x400d4c00,0x00002008,
    0x20a23bf9,0x0fff80fd,0x0bd7bd10,0x881f63ec,0x6c0fe23f,0x540eb89d,
    0x42eb88ae,0x1aaaaadb,0x43115d90,0xaaaaaacb,0xf11fc42d,0xfd87fd87,
    0xc89de83f,0x5c57641e,0x001d700e,0xa8016659,0x200bedfd,0xdfe9805c,
    0x22bff3fe,0x0f6c42ff,0xca85fd10,0xd82fdea8,0x5c0dfd07,0x42981643,
    0x2e05c029,0x45b85a80,0x03b8d103,0x035013a0,0x2e05c0ec,0x21dc0f00,
    0x4345a84a,0x807aa068,0x54015448,0x6c05cced,0x20be9805,0x7fc47dd9,
    0x0fa6fa62,0x4c037fdc,0x4000f900,0x00005887,0x7c0ba000,0x1dc3b000,
    0x40005b80,0x0f000068,0x7403a1dc,0x80b20950,0x987100f9,0x360dc403,
    0x3a009b03,0x8221fe02,0x20f621e8,0x35102fe8,0x20006c80,0x54406987,
    0x02a62001,0x005900f8,0x8803b83a,0x2540000f,0x78015510,0x201d0ee0,
    0x12603b1e,0x06458010,0x001d8100,0x0f901e60,0xfc800000,0xd704edce,
    0xd513c000,0x373bf205,0x37b2204e,0x034c1eec,0xb8d70077,0x540aba8b,
    0x82d80004,0x0dfddfe9,0x321dc0f0,0x40f26984,0x64c00059,0xfc8042dc,
    0x005aaefe,0x0f1012e0,0x09800000,0x206b82c8,0x1dfd3c06,0x40b20260,
    0x2a1ea83e,0x65c12a05,0x6ffdc0df,0x4cae2feb,0x43c001cc,0x3ee20af9,
    0x10ee0780,0x43d933bd,0xfc8dd05a,0x441004ff,0x067444db,0xffc8db91,
    0x501aa04f,0xffc8730f,0x4400004f,0x0f305b86,0x01754478,0x40790d10,
    0x4a812a69,0x3109d950,0x2e761f30,0x3005eabf,0x2dc07d0b,0xf107703c,
    0x2e887fff,0x498075ec,0x059b7100,0x00fc80f6,0x00fc4093,0x4c0b50fd,
    0x09980004,0xed88b50f,0x1e883c03,0x3c3c2660,0x204a9640,0x00eb804a,
    0x21736990,0x4c2c802c,0x07c0e806,0x2fa61f44,0x7442ea88,0x201d3ece,
    0x336e2049,0x2007cc01,0xb809301f,0xb87fb80d,0xc8812605,0x777f541d,
    0x263987fe,0x540f002e,0x7777f544,0x5c02cc7f,0x025c0b33,0x2d3003b8,
    0x805980fb,0x77775c0e,0x42feeeee,0x21f74c3f,0x980f882e,0x40930342,
    0x54164c1a,0x9302d805,0xf95bf900,0x40d70f1d,0x9bfee049,0x80780aea,
    0x881e002c,0x1e02baa6,0x227700b3,0x4c00b606,0x12ad3005,0x216600e8,
    0x999999da,0x76fc0999,0x15fb9efd,0x4c01e40d,0xc8012605,0x804a8b33,
    0x2009301d,0x21e2cdb9,0xa812606b,0x7803a4ff,0x1e000e80,0x7803a688,
    0x3e2d8078,0x2a003f00,0x1a2b9005,0x441dc068,0x5178000f,0x77034401,
    0x24c05d00,0x262a8900,0x9300f806,0xf90f0000,0x862024c0,0x201ea059,
    0x2783302c,0x02cd2a1c,0x4c0990f5,0x034c2646,0xe80267d0,0x012a0b62,
    0x0013601d,0x203b001e,0x4c05c806,0x38873004,0x40b5016c,0x87800049,
    0x0012607c,0x21fb2076,0x901d11fe,0x6c52a787,0x1fb20761,0x20f541f4,
    0xc8ba21f8,0xa9b260be,0x222ecc2f,0x8807a61e,0x2073a206,0x2003c2ea,
    0x813221e9,0x24c00dd8,0x440c8b00,0x200fa82f,0x87800049,0x0012607d,
    0x4ffb3b66,0x45ff15ff,0x1eecbdeb,0x76f4dffb,0x7f676cc3,0xbd90bff3,
    0x3a601dd9,0xfea82fde,0x6c40cfed,0xd304fede,0x3a805fdd,0xfdcefc80,
    0x9800781d,0x6e42eded,0x93003eed,0x1edecc00,0xdfddfd88,0x80024c00,
    0x362afbaa,0x80012607,0x018800a8,0x4c003573,0x0002a200,0x26001531,
    0x00133001,0x03100133,0x06a60000,0x0c400050,0xff900310,0x1fffffff,
    0x33100080,0x3ffff201,0x800fffff,0x262aaaaa,0x3fffff22,0x0000ffff,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0xc9800000,0x0620001c,0x20002020,0x000004cb,0x2a600351,
    0x6f654000,0x3372203c,0x0edc4003,0x6f654000,0x0008003c,0x00026a62,
    0x71008080,0x26a0003b,0x99999999,0x003b8829,0x0001ed44,0x20fc8095,
    0x554000fc,0xf5027407,0xfdbfd37f,0x3f3fea09,0x441ffc8e,0x076a20bd,
    0x2002b866,0x20001c9a,0x36a20bd8,0x20095001,0xdbfecdeb,0x511dfc80,
    0x0fe23f88,0x4000726a,0xeeb8a002,0x17f4404d,0x25400077,0x00730e60,
    0x013a03c0,0xd982fb6e,0x3ae17544,0x200d882d,0x01d402d8,0x88000e40,
    0x00b6200d,0x2136012a,0x46541fd8,0x0b82fdea,0x0039005c,0x712800a0,
    0xff7012a3,0x50001dcd,0x00000009,0xb801a80f,0x7c4be02f,0x1b05f702,
    0x1b1d5dcc,0x0300bd70,0x1b060039,0xd8375771,0x2a025400,0x2007e206,
    0x32000009,0x00283001,0x2202540a,0xa88ee2fe,0x6ff54009,0x4400002a,
    0x80003c1a,0x6aa6407b,0x4750be20,0x0499a21b,0x13a60593,0x47d50072,
    0x22a8a23a,0x20254049,0x2200c03d,0x6400001a,0x0a2ec401,0x00950280,
    0x37fa2ee0,0x1ce883fe,0x1ff61fb3,0x3a20fff6,0x00f2fedf,0xd1012e00,
    0xc85900ee,0x80b06120,0x3902eb86,0x1907b220,0x80b12144,0x0007404a,
    0xd9db1ff3,0x9fff903f,0x7dc03900,0x40a00283,0xd970004a,0x3a275417,
    0x20781d03,0x505f443b,0xfff90f7b,0xa80d7009,0x42e80b55,0x43600a25,
    0x19d31d42,0x1f540e40,0x2b894458,0xeeee986c,0x22eeeefe,0x87df0007,
    0x4024c079,0x00dd881c,0x4a814005,0x207f7000,0x040f11f8,0x3e87703c,
    0x4980ff10,0x3a01fb80,0x3e601f13,0x900532c2,0xc8f376a1,0x6641931e,
    0x9dd89ccd,0xb1160bca,0x441903d9,0x999db999,0x7c000ec1,0x24c05b02,
    0x2399b990,0x281932fb,0x02540a00,0x0fb8332e,0x002cd320,0x3e23b81e,
    0x9301f200,0x501bd700,0x6c40dc8d,0x20162c2e,0x3a274c05,0xd9f5c01d,
    0x8a22cb12,0x12a02c0c,0x42880b50,0x4980ee07,0xb0674c00,0x0a002839,
    0xbff10254,0xd34c05b8,0x7703c001,0x01e60254,0xf7770093,0xb03df75b,
    0x597fb59f,0x3886e1c8,0x41ec882c,0xbb101cac,0x0e4ae0c1,0x01624451,
    0x019b0095,0x2e0783f7,0xc8012603,0x20e55c2e,0x2540a002,0x5b81ff50,
    0x207934c0,0xa8ee0780,0x2603cc04,0xb733b804,0xbdc98059,0x5c588591,
    0x20b21dbc,0x395983ea,0xd8805d70,0x8b722b10,0x4a80594a,0xbd9bf700,
    0x1dc0f017,0x9d300930,0x05072b30,0x204a8140,0x00fb83fc,0x31de8932,
    0x2e0781d9,0x7c803e23,0x1dc024c0,0x20b20000,0x704a804a,0x40e43a01,
    0x206cc00b,0x804a804a,0x0654004a,0x203b81e0,0xb01a8049,0x40050721,
    0x37c09502,0x3f103fb8,0x205bfd50,0x743d880e,0x980ff103,0x0003b804,
    0x0db80ec0,0xf5000b90,0x5000bfdd,0x4036e01b,0x0051005c,0x03c01d88,
    0x0024c077,0x8bdddf50,0x2540a002,0xd9701f98,0x50275419,0x74c3b809,
    0x505f443e,0x04980f7d,0x200003b8,0x66ecc06b,0x00002ddc,0x04b80039,
    0xddccdd98,0x86000002,0x07703c05,0x9000024c,0x40a00283,0xf305104a,
    0xffbfb17f,0x4404a805,0xfb9efded,0x7feff445,0x1260bff2,0x0aadda88,
    0x36eaaa00,0x0066000e,0x00bd9000,0x1ee66754,0x3e600660,0xffffffff,
    0x039b503f,0xfd13fff2,0x3ffff2bf,0x000fffff,0x55645ec8,0xaaaaaaaa,
    0xffffff14,0x220007ff,0x0073001a,0xa88002a2,0x7fffe400,0x510fffff,
    0x40015555,0x0002aaaa,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x30000000,0x22005bd9,0xbeedb84c,0x22000a00,
    0x0133dedb,0x319ddb51,0x0004cb83,0x802f7b26,0x18adeda8,0x931e6664,
    0xca801999,0x3332a1ab,0x00332a02,0x666664c0,0x7db303cc,0x99999301,
    0x1332e039,0x9991332e,0x26037999,0x6640cccc,0x079513cc,0x1d9337d3,
    0x67c7cd80,0xd02fb889,0x4df4c001,0x442dedb8,0xeeb989ce,0x8003d543,
    0x2ea88aeb,0xeb89ce98,0x0d66d44e,0x5c05f751,0x263cbace,0x2a604caa,
    0x5510000e,0x70355f55,0x510db33b,0x20155bb5,0xed982ec9,0x55567542,
    0x6ec40deb,0x1ebaa82a,0x1f889553,0x3da604a8,0x0e834c1e,0x2a01d100,
    0x440ba22f,0x7000f03f,0xd83d101b,0x05909f01,0x00d10344,0x00e804a8,
    0x1d01e000,0x00ee0098,0x00e881e8,0x2a1ae039,0x49849804,0x201d01d4,
    0x3a028f1e,0x5d000e81,0x00f62d80,0x1001e055,0x8874401d,0x0b212a06,
    0x00ea0688,0x01d00950,0xb303c000,0x40077000,0x3203c869,0x8950b601,
    0x24c2544a,0x92e0b200,0x7c4b2007,0x6fffffff,0xd0440344,0x2a278000,
    0x3200ee01,0xc8080b11,0x3b81a202,0x74025400,0x81e00000,0x03b80068,
    0x80d32640,0xb31a201c,0x20ee0ef8,0x20740049,0x4c01e0e8,0x95001d06,
    0x00059800,0x7f67747c,0x3a801d81,0x059000f2,0x3ffe2344,0x203fffff,
    0x320e804a,0x3c002fff,0x770003a0,0x07a3d000,0x20e80390,0xc8efa668,
    0x36004982,0x203c3c83,0x01d01fb8,0x3b800770,0x2177c000,0x8800e879,
    0x06f3b225,0x03440590,0x04a80077,0x007aa0e8,0x7664c3c0,0x3b800ccd,
    0x03ce9800,0x20ec01c8,0x1d966ee7,0x09900498,0x7d40f0d1,0x2003a00b,
    0x01dc003b,0x0ec07e00,0x9834401e,0x05903edb,0x00770344,0x70e804a8,
    0x43c0001d,0x0aadcaa8,0x2e003b80,0x0cccffcc,0x41d80390,0x0e9e3b0e,
    0x80f3732a,0x0f05b05c,0x007401dc,0x0ee0025c,0x0bffffea,0x0743c81e,
    0x6c4024c0,0x1a202c83,0x254003b8,0x402ecf40,0x12603c06,0x01407700,
    0x00720095,0x6cf1d81b,0x2e4000d1,0x4c0f0598,0x9800e801,0x402cc005,
    0x1e40f03b,0x00ae00b2,0x101dc344,0x2001dc0d,0x2eee804a,0x203c0780,
    0x01dc004a,0x9db9988f,0xd0072009,0xa54b5390,0x04d80a07,0x3fffffee,
    0x3a0001ff,0x4001d000,0x81dc00e8,0x0d30f207,0xf00363d0,0x16a06981,
    0x254003b8,0x01745740,0x5c06881e,0xf01dc003,0xccedccb8,0x5403900c,
    0x222cab85,0x20b9068e,0x01e0004d,0x54007600,0x09725c06,0x640f03b8,
    0x92e02d83,0x7c1aa04e,0x1dc07b01,0x3a012a00,0x03c05d10,0x500e8097,
    0x03c07703,0x40720095,0x0eba80e9,0x426c2d74,0x3c0003d8,0x5402ffa8,
    0x75c2b885,0x6ec0ec80,0x0f03d880,0x41f441e4,0x205ff45b,0x83d702ea,
    0x001dc06c,0x883a012a,0x981d902e,0x4413200e,0x1e03b80e,0x839004a8,
    0xdb300eb9,0x03c89b70,0x4015c07d,0x007ff907,0x19fdbbd9,0x9fb9dd50,
    0x766f7dc0,0x640f00bf,0x3b77f603,0xdefd8d84,0x77d402ef,0x1dc00dfd,
    0x3a012a00,0xe9817440,0x3a01eece,0xffffffff,0x3ffffea3,0xe87fffff,
    0xf01fffff,0x17bfffff,0x7cc27cc0,0x3fffe003,0x503fffff,0x5503ffff,
    0x00099800,0x4c400351,0x3fff201a,0x03fffe23,0x53100198,0x00a98003,
    0x3fffffea,0x3fff21ff,0x327fffff,0x7ffec0ff,0x00035103,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x64000000,0xcccccccc,0x999930cc,0x25999999,0xcc983cc9,0x999970cc,
    0x332e0599,0x4ccccccc,0x0001eedc,0x5c26665c,0x332e4ccc,0x99103ccc,
    0x05999999,0x65c066e2,0x201bcccc,0xccb84ccb,0xccccc884,0x2e2ccccc,
    0x32e1cccc,0x6666644c,0x99971ccc,0x64c99970,0x8f32202c,0x3263ccc8,
    0x575d42cc,0x1eaaaaaa,0x5b9555b5,0x36a29955,0x57d5442f,0x5555f530,
    0xafa989d9,0x27aaaaaa,0x4c40ea19,0x5d9334c2,0x45b95305,0x02aaafa9,
    0x2ab72aaa,0x5ebec80a,0x7555bb30,0x5bb301db,0x2a05d930,0xaaabeaeb,
    0x2abea64c,0xf88bb660,0x2eaaaaaa,0xdb305d93,0x80775c45,0x57d41edc,
    0x20376a21,0x4a8ec058,0x9712a254,0x03c1e01d,0x0780f03b,0xbbdb1126,
    0x1d03d59d,0x00f01d80,0x0d1012a0,0x0ea81dc0,0x1e881e88,0x540ea540,
    0x81b70784,0x3d0d5068,0x9b301d10,0x2095d107,0x2c40ee07,0x2a254760,
    0x2eee2544,0x981e0f04,0x543c0785,0x20fa20ee,0x405904fb,0x3bbbe068,
    0x025402ce,0x03b800ee,0x2074c12e,0x1d2c803d,0x5c8784a8,0x01d10d10,
    0x260790d3,0x49cb868d,0x881dc0f0,0x44a86045,0x4ee2544a,0x40f0781e,
    0x30447859,0x83d8f220,0x6880fbe8,0x99f80ee0,0x2a04eb99,0x70034c04,
    0xb500e807,0xd0e802dc,0x6c782881,0x016c2404,0xb3034c97,0x0931d0b6,
    0xb103b81e,0xa83101d8,0x54ee0444,0x220f0785,0x01dc782e,0x3a21a2d0,
    0x407a07b2,0x1d81e00e,0x05b00950,0x03900ee0,0x88034e64,0x5e02c3a6,
    0x5b8003e8,0x403d1e80,0x9ad4b359,0x81dc0f04,0x01ecccf8,0x8ee012a0,
    0xccf83c2d,0x9f02fdcc,0x82607d99,0x2e889549,0x4c25416a,0x09503c05,
    0x0dd1012a,0xcccdecb8,0x3fa01dc1,0x67477000,0x7f47c07c,0x00744002,
    0x2601e74c,0x498ec7a5,0x999999f0,0x2aba207d,0x12a001ea,0x3c688ee0,
    0xdcaaaaf8,0xdaaaf81e,0x179bb303,0x4c2e896a,0x00b21a05,0x4a83440f,
    0xe8f27a60,0x2ab76aa5,0x3a01dc0a,0x743b000f,0x577c07ab,0x07a005e9,
    0x59806c80,0x0499a32a,0xb555555f,0x03916207,0x1dc02540,0x40f078f2,
    0x0ae3c1e8,0x3a23e200,0x0b203b82,0x25c0f00f,0xe87604a8,0x80770698,
    0x1ab3202c,0x87e667c0,0x1320fc03,0x95001320,0x2de8b300,0x7703c126,
    0x80011620,0x443b804a,0x501e0f0e,0x00440789,0xe883ecd8,0x04a96600,
    0x00eb8878,0x36a3c095,0xe807702c,0x0264d500,0x03aaab66,0x201e83c0,
    0x2540d069,0x31ee2cc0,0x03b81e09,0x4a8000b1,0xf5a83b80,0x78d101e0,
    0x2ee89dc0,0x74c0df98,0x03b0e802,0x9fddddf0,0x39025401,0x80ee07d8,
    0xd81d1069,0x01d0ee02,0x416a0f09,0x206881e8,0x8059804a,0x1dc0f049,
    0x54000588,0x5b03b804,0x89701e0f,0xffb9dc07,0x775df446,0x77001eec,
    0x267e00d1,0x40950019,0x403fa0d9,0x203d103b,0xd01e882e,0x40e80e81,
    0x0f603a07,0x00950344,0x209300b3,0x2c40ee07,0x2012a000,0x20fd303b,
    0x781d7107,0x3ff99dc0,0x002a21e4,0x20077d10,0x80950007,0x5fabedeb,
    0x0f5c43b8,0x03a603c8,0x1d01d0d1,0xb512e078,0x09503440,0x09300b30,
    0xff83b81e,0xa804ffff,0x84ffffff,0x7c85fffe,0x7ffffff4,0x3ffa0cef,
    0xffffffff,0x00000043,0x3f6007ec,0xf106ffff,0x7fffffff,0xffd00260,
    0x2037dfff,0x7f40fffe,0x2dff91ff,0xfffffffc,0x3ffffb0f,0xff73ff88,
    0x8dffffff,0x5ffffffa,0x40ffffb8,0x3f27fffc,0x3ffea5ff,0x0000000f,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x332e0000,0x3001cccc,0x70099999,
    0x15999999,0x80007300,0x000591c8,0x1000a988,0x51001353,0x06a20015,
    0x22001980,0x00000000,0xa8815100,0x06614400,0x00001800,0xfa9a4072,
    0x02edaaaa,0x16f5d544,0x2aabea60,0x25403fda,0x4c7d7000,0x644001de,
    0x201eecde,0xdbfecdeb,0x7eeff4c0,0xb9df900d,0x66fec09d,0x1f602dde,
    0xffd87fd8,0x20fffe63,0x3a23fff9,0xdbf94ece,0x6edefe43,0x306ded8e,
    0x76fe4fff,0x47ffff12,0xd32ffff9,0x883c3d83,0xb377000e,0x07441e00,
    0xd5000950,0x033aa019,0x0f541f40,0x0fec426c,0x7dc415f3,0x82c80980,
    0x202f983c,0x2e078029,0x16403443,0x69973a0c,0x49f927cc,0x2747c02c,
    0x2a04a871,0x07b1e985,0xe802540f,0x40f001d0,0x8012a04a,0xd7000de9,
    0x2603c807,0x3f103546,0x00b701f4,0xb807c344,0x20780001,0x0e60e83b,
    0x85f5001d,0x8d31a62e,0x0177c04a,0x203b00e8,0x40f04ee9,0x2e598059,
    0x1a207803,0xed8804a8,0x2ec88001,0x6c5900f0,0x00d30c03,0x784cc01d,
    0x0000adc8,0x41dc0f00,0x0783f62c,0x2543d444,0x254598b3,0x3b8007e0,
    0x0ff40698,0x200b6078,0x1e01a22c,0x266665a8,0x109999db,0x100005d9,
    0x402cc3db,0xb8003a3b,0xeeeeeeee,0x77f542fe,0xdb507fee,0x333307bd,
    0x81333333,0x4ea0ee07,0x30b32ce8,0xddffddfb,0x22ccbddd,0x1e025459,
    0x0590d100,0x3c0f4dec,0x7400fae6,0x41e00ec0,0x999911fa,0x259999db,
    0x200003fb,0x00b30de9,0x2a003c77,0x9999999d,0x02baa099,0x3b2a201e,
    0x99999910,0x07859999,0x65d660ee,0xaea87559,0x26667aa0,0x8b316609,
    0x4003c04a,0x3d81a22c,0xffff07a6,0x16a001df,0x999f012a,0x4a803dd9,
    0x00176440,0x0f03db10,0x000ec5b0,0x0e8001f1,0x4b8011e0,0x2e078000,
    0x47476f03,0x7d40ec1c,0x1662cc00,0x80078095,0x26c0ee69,0x7d31e34c,
    0x33337600,0x557c07cc,0x095001aa,0x8007b620,0x13202ec8,0x202d4698,
    0x98013628,0x0791ea05,0x740002cc,0x3b03d880,0x32075dcd,0x4c03fb82,
    0x012a2cc5,0x7476000f,0x1e040100,0x5d100f62,0x05b55555,0x0950003c,
    0x400de980,0x07d003eb,0x019b03d5,0x0e7443f7,0x903b1754,0x881fc8fd,
    0x5c00401e,0xb81f74c3,0x261ba63e,0x83bbee0e,0x8b31665c,0x8003c04a,
    0x00004ada,0xa807a20f,0x07816604,0x40012a00,0x67540cea,0x66f64000,
    0x37ee00ee,0xf900bdec,0x983bfb9d,0xff3feced,0x377b6eeb,0x03e403ff,
    0x4f7ef6c4,0x41fa85fb,0xbdbf504e,0x47fbf795,0xff30fffc,0xffd1fea1,
    0x00dfffff,0x400007fa,0x1d81aa07,0x00780740,0x700012a0,0x0007763f,
    0x2000a988,0x2a6000a9,0x000a8801,0x54006a62,0x002a2003,0x20660000,
    0x000000a8,0x00000000,0x105b01e0,0x1e07700d,0x00001000,0x00000041,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x40fffff4,
    0x3fff27f8,0x27fffc87,0x06fffffd,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x01a88000,0xa8000000,0x81c12602,0x99999998,0x65c09999,0x1003103c,
    0xaa8665c0,0x0605550a,0x2881664c,0x22222220,0x200c0888,0x75077220,
    0x75060200,0x77777777,0x66447777,0xcccccccc,0x16a1cccc,0xffff00ba,
    0x3e65ffff,0x1feced8f,0x4f2074c0,0x3e63fff8,0x2efa23ff,0xf01eacfe,
    0x333332a0,0x24dccccc,0xfc88ae3b,0x6f64c1ef,0xb37fc41d,0xd13fecff,
    0xff989dbd,0xf903dd03,0xffffffff,0x44075cdf,0xcd97fee3,0x7f1240ec,
    0x77771fc4,0x77777777,0xaaaaa877,0xaaaaaaaa,0xf3076c0a,0x85b83c05,
    0x303cc3ef,0x7446d85f,0xf881e983,0x203eb88c,0x24a80007,0x11d72c40,
    0x3a21e8d9,0xfc87fea0,0x3b01bf27,0x5ec17fc4,0x200000e9,0x98ec40ea,
    0x74c794ff,0x205c3e9a,0x0000000b,0xa83b6000,0x1d50b03f,0x20b605f0,
    0x03b623fa,0x203d31ec,0x2b24a85a,0x000ee2f0,0xd0ec412a,0x8498fc45,
    0xf717f23a,0x2e62fdcb,0x0ffc2ecd,0x0005a96e,0x12c334c0,0x176c4043,
    0x00000000,0x1ee88000,0x3a6013ee,0x21dc0f00,0x03fa24fa,0x403d37b0,
    0x7e4cd01d,0x001cfdfd,0x41d884a8,0x1d43e23e,0xa83fd24c,0xdb93ea4f,
    0x7f42d99a,0xa9321a60,0xbbbbbbbb,0xdda803bb,0x00000001,0x00000000,
    0x7e43fd10,0x7803a204,0x25fb8ee0,0xfb001fe8,0x6882c801,0x80009f90,
    0x5406cc4a,0x4345d9ae,0xf30bf11d,0x41d1fcc7,0xd13ec2d8,0x554cba01,
    0xaaaaaaaa,0x00000002,0x00000000,0x1df10000,0x1e881fe4,0x547703c0,
    0x007fa25f,0xb30137aa,0xd3d30970,0x52540001,0x5ff54189,0x275e7540,
    0xf07e01f7,0x776d6dc3,0x0189b21d,0x00000022,0x00000000,0x00000000,
    0x7f707744,0x03c01740,0x225fa877,0x43aa01fd,0x2b7e604c,0x52e83fc9,
    0x3a08000d,0x0004cccc,0x00031053,0x82a63730,0x00000018,0x00000000,
    0x00000000,0x20ee8800,0x20f602fb,0x07703c49,0x80ed89f3,0x442e40ea,
    0xe9bedaae,0x00390ea2,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x017d45d8,0x0f166099,0x43f981dc,0x403aa0ec,0x7100d45c,
    0xbbbba800,0x0003bbbb,0x00000000,0x00000000,0x00000000,0x00000000,
    0x212a0000,0x3ffe601e,0xf95fffff,0x5ffe89ff,0xb3b81d10,0x7fc47fff,
    0x4000007f,0xfffffffd,0x000000ff,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,
};

static signed short stb__courier_27_latin1_x[224]={ 0,5,3,2,2,2,2,5,7,3,0,1,3,2,
5,2,2,2,1,2,2,2,3,2,2,3,5,3,0,1,0,0,2,0,1,1,1,1,1,1,1,2,1,1,
1,0,0,0,2,1,1,2,1,0,0,0,0,1,2,0,0,0,2,0,5,1,0,1,1,1,2,1,0,2,
2,2,2,0,1,1,0,1,1,2,1,1,0,0,1,1,2,0,6,0,2,2,2,2,2,2,2,2,2,2,
2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,5,2,1,2,1,
6,1,3,0,0,0,0,2,0,-1,3,1,3,4,5,1,1,5,5,4,3,1,0,0,0,0,0,0,0,0,
0,0,0,1,1,1,1,1,2,2,2,2,-1,0,0,0,0,0,0,3,0,0,0,0,0,1,2,1,1,1,
1,1,1,1,0,1,1,1,1,1,2,2,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,
 };
static signed short stb__courier_27_latin1_y[224]={ 19,4,4,3,3,4,6,4,4,4,4,6,15,11,
16,2,4,4,4,4,4,4,4,4,4,4,8,8,6,9,6,5,3,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,4,2,4,4,24,3,8,4,8,4,8,4,8,4,3,
3,4,4,8,8,8,8,8,8,8,5,8,8,8,8,8,8,4,4,4,10,4,4,4,4,4,4,4,4,4,
4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,19,8,3,5,7,5,
4,4,4,5,3,8,11,11,5,2,1,4,4,4,3,8,4,10,18,4,3,8,4,4,4,8,0,0,0,1,
1,0,5,5,0,0,0,1,0,0,0,1,5,1,0,0,0,1,1,8,4,0,0,0,1,0,5,4,3,3,
3,4,4,3,8,8,3,3,3,4,3,3,3,4,4,4,3,3,3,4,4,6,7,3,3,3,4,3,4,4,
 };
static unsigned short stb__courier_27_latin1_w[224]={ 0,4,9,11,10,11,10,4,4,5,9,12,6,11,
4,10,10,10,11,10,10,10,10,10,10,10,4,6,12,13,12,9,10,15,12,12,13,12,13,13,13,10,13,13,
12,15,14,12,11,13,14,11,12,14,15,14,14,13,10,5,9,5,10,16,5,12,13,12,13,12,11,13,14,11,
8,12,11,15,12,12,13,13,12,10,12,12,14,14,13,13,10,5,2,5,11,13,13,13,13,13,13,13,13,13,
13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,0,4,10,12,10,13,
2,12,8,15,8,12,13,11,15,16,8,12,7,7,5,12,12,4,4,6,8,13,15,15,15,9,15,15,15,15,
15,15,15,12,12,12,12,12,10,10,10,10,14,14,12,12,12,12,12,9,14,14,14,14,14,13,11,11,12,12,
12,12,12,12,14,12,12,12,12,12,11,11,11,11,12,12,12,12,12,12,12,12,13,12,12,12,12,13,13,13,
 };
static unsigned short stb__courier_27_latin1_h[224]={ 0,16,8,18,19,16,14,8,19,19,9,13,8,2,
4,19,16,15,15,16,15,16,16,16,16,16,12,14,13,6,13,15,18,14,14,15,14,14,14,15,14,14,15,14,
14,14,14,15,14,17,14,15,14,15,14,14,14,14,14,19,20,19,7,2,5,12,16,12,16,12,15,16,15,16,
21,15,15,11,11,12,16,16,11,12,15,12,11,12,11,16,11,19,19,19,4,15,15,15,15,15,15,15,15,15,
15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,0,16,16,14,10,14,
19,17,3,15,8,11,8,2,15,2,8,15,8,9,5,16,17,4,5,8,8,11,15,15,15,16,19,19,19,18,
18,19,14,18,19,19,19,18,19,19,19,18,14,18,20,20,20,19,19,9,16,20,20,20,19,19,14,16,17,17,
17,16,16,17,12,15,17,17,17,16,16,16,16,15,16,15,17,17,17,16,16,12,14,17,17,17,16,21,20,20,
 };
static unsigned short stb__courier_27_latin1_s[224]={ 254,14,134,203,44,182,54,153,116,248,77,
44,127,87,194,136,67,238,1,78,13,89,100,111,148,159,250,249,57,169,70,
24,215,16,222,47,220,235,180,60,166,43,166,111,193,150,207,89,32,183,1,
102,194,114,15,234,80,136,125,194,52,188,158,220,183,122,1,96,39,109,129,
79,74,53,1,153,141,202,26,83,65,219,218,135,34,159,231,172,52,238,15,
170,176,179,199,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,
224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,254,233,15,
180,66,206,185,157,211,93,144,39,87,87,141,237,109,157,101,248,249,135,92,
248,189,249,118,1,208,125,109,19,200,216,232,171,187,1,95,147,157,31,55,
226,68,79,146,160,65,239,133,77,90,90,103,246,210,103,118,62,121,17,31,
29,40,1,53,1,41,144,187,170,197,105,79,122,170,207,238,196,194,183,118,
66,170,225,54,146,1,14,27,131,26,10,38,24, };
static unsigned short stb__courier_27_latin1_t[224]={ 1,61,141,23,23,61,111,141,23,1,141,
126,141,150,141,23,61,78,95,61,95,61,61,61,61,61,61,78,126,141,126,
95,23,126,110,95,95,110,110,95,111,111,95,111,95,111,110,95,126,43,126,
95,110,95,111,95,111,111,111,1,1,1,141,141,141,126,78,126,78,126,95,
78,95,78,1,95,95,126,141,126,78,61,126,126,95,126,126,126,141,43,141,
1,1,1,141,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,
78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,1,61,78,
95,141,95,1,43,141,78,141,141,141,150,78,141,141,78,141,110,104,61,43,
120,141,95,141,141,78,78,78,61,1,1,1,23,23,23,111,23,1,23,23,
23,23,23,1,23,111,23,1,1,1,23,23,126,43,1,1,1,23,23,111,
61,43,43,43,61,61,43,126,78,43,43,43,61,61,61,61,78,61,78,43,
43,43,43,61,126,111,43,43,43,78,1,1,1, };
static unsigned short stb__courier_27_latin1_a[224]={ 229,229,229,229,229,229,229,229,
229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,
229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,
229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,
229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,
229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,
229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,
229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,
229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,
229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,
229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,
229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,
229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,
229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,
229,229,229,229,229,229,229,229, };

// Call this function with
//    font: NULL or array length
//    data: NULL or specified size
//    height: STB_FONT_courier_27_latin1_BITMAP_HEIGHT or STB_FONT_courier_27_latin1_BITMAP_HEIGHT_POW2
//    return value: spacing between lines
static void stb_font_courier_27_latin1(stb_fontchar font[STB_FONT_courier_27_latin1_NUM_CHARS],
                unsigned char data[STB_FONT_courier_27_latin1_BITMAP_HEIGHT][STB_FONT_courier_27_latin1_BITMAP_WIDTH],
                int height)
{
    int i,j;
    if (data != 0) {
        unsigned int *bits = stb__courier_27_latin1_pixels;
        unsigned int bitpack = *bits++, numbits = 32;
        for (i=0; i < STB_FONT_courier_27_latin1_BITMAP_WIDTH*height; ++i)
            data[0][i] = 0;  // zero entire bitmap
        for (j=1; j < STB_FONT_courier_27_latin1_BITMAP_HEIGHT-1; ++j) {
            for (i=1; i < STB_FONT_courier_27_latin1_BITMAP_WIDTH-1; ++i) {
                unsigned int value;
                if (numbits==0) bitpack = *bits++, numbits=32;
                value = bitpack & 1;
                bitpack >>= 1, --numbits;
                if (value) {
                    if (numbits < 3) bitpack = *bits++, numbits = 32;
                    data[j][i] = (bitpack & 7) * 0x20 + 0x1f;
                    bitpack >>= 3, numbits -= 3;
                } else {
                    data[j][i] = 0;
                }
            }
        }
    }

    // build font description
    if (font != 0) {
        float recip_width = 1.0f / STB_FONT_courier_27_latin1_BITMAP_WIDTH;
        float recip_height = 1.0f / height;
        for (i=0; i < STB_FONT_courier_27_latin1_NUM_CHARS; ++i) {
            // pad characters so they bilerp from empty space around each character
            font[i].s0 = (stb__courier_27_latin1_s[i]) * recip_width;
            font[i].t0 = (stb__courier_27_latin1_t[i]) * recip_height;
            font[i].s1 = (stb__courier_27_latin1_s[i] + stb__courier_27_latin1_w[i]) * recip_width;
            font[i].t1 = (stb__courier_27_latin1_t[i] + stb__courier_27_latin1_h[i]) * recip_height;
            font[i].x0 = stb__courier_27_latin1_x[i];
            font[i].y0 = stb__courier_27_latin1_y[i];
            font[i].x1 = stb__courier_27_latin1_x[i] + stb__courier_27_latin1_w[i];
            font[i].y1 = stb__courier_27_latin1_y[i] + stb__courier_27_latin1_h[i];
            font[i].advance_int = (stb__courier_27_latin1_a[i]+8)>>4;
            font[i].s0f = (stb__courier_27_latin1_s[i] - 0.5f) * recip_width;
            font[i].t0f = (stb__courier_27_latin1_t[i] - 0.5f) * recip_height;
            font[i].s1f = (stb__courier_27_latin1_s[i] + stb__courier_27_latin1_w[i] + 0.5f) * recip_width;
            font[i].t1f = (stb__courier_27_latin1_t[i] + stb__courier_27_latin1_h[i] + 0.5f) * recip_height;
            font[i].x0f = stb__courier_27_latin1_x[i] - 0.5f;
            font[i].y0f = stb__courier_27_latin1_y[i] - 0.5f;
            font[i].x1f = stb__courier_27_latin1_x[i] + stb__courier_27_latin1_w[i] + 0.5f;
            font[i].y1f = stb__courier_27_latin1_y[i] + stb__courier_27_latin1_h[i] + 0.5f;
            font[i].advance = stb__courier_27_latin1_a[i]/16.0f;
        }
    }
}

#ifndef STB_SOMEFONT_CREATE
#define STB_SOMEFONT_CREATE              stb_font_courier_27_latin1
#define STB_SOMEFONT_BITMAP_WIDTH        STB_FONT_courier_27_latin1_BITMAP_WIDTH
#define STB_SOMEFONT_BITMAP_HEIGHT       STB_FONT_courier_27_latin1_BITMAP_HEIGHT
#define STB_SOMEFONT_BITMAP_HEIGHT_POW2  STB_FONT_courier_27_latin1_BITMAP_HEIGHT_POW2
#define STB_SOMEFONT_FIRST_CHAR          STB_FONT_courier_27_latin1_FIRST_CHAR
#define STB_SOMEFONT_NUM_CHARS           STB_FONT_courier_27_latin1_NUM_CHARS
#define STB_SOMEFONT_LINE_SPACING        STB_FONT_courier_27_latin1_LINE_SPACING
#endif

