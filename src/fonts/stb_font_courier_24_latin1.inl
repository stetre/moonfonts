// Font generated by stb_font_inl_generator.c (4/1 bpp)
//
// Following instructions show how to use the only included font, whatever it is, in
// a generic way so you can replace it with any other font by changing the include.
// To use multiple fonts, replace STB_SOMEFONT_* below with STB_FONT_courier_24_latin1_*,
// and separately install each font. Note that the CREATE function call has a
// totally different name; it's just 'stb_font_courier_24_latin1'.
//
/* // Example usage:

static stb_fontchar fontdata[STB_SOMEFONT_NUM_CHARS];

static void init(void)
{
    // optionally replace both STB_SOMEFONT_BITMAP_HEIGHT with STB_SOMEFONT_BITMAP_HEIGHT_POW2
    static unsigned char fontpixels[STB_SOMEFONT_BITMAP_HEIGHT][STB_SOMEFONT_BITMAP_WIDTH];
    STB_SOMEFONT_CREATE(fontdata, fontpixels, STB_SOMEFONT_BITMAP_HEIGHT);
    ... create texture ...
    // for best results rendering 1:1 pixels texels, use nearest-neighbor sampling
    // if allowed to scale up, use bilerp
}

// This function positions characters on integer coordinates, and assumes 1:1 texels to pixels
// Appropriate if nearest-neighbor sampling is used
static void draw_string_integer(int x, int y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0, cd->t0); glVertex2i(x + cd->x0, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t0); glVertex2i(x + cd->x1, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t1); glVertex2i(x + cd->x1, y + cd->y1);
        glTexCoord2f(cd->s0, cd->t1); glVertex2i(x + cd->x0, y + cd->y1);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance_int;
    }
    glEnd();
}

// This function positions characters on float coordinates, and doesn't require 1:1 texels to pixels
// Appropriate if bilinear filtering is used
static void draw_string_float(float x, float y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0f, cd->t0f); glVertex2f(x + cd->x0f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t0f); glVertex2f(x + cd->x1f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t1f); glVertex2f(x + cd->x1f, y + cd->y1f);
        glTexCoord2f(cd->s0f, cd->t1f); glVertex2f(x + cd->x0f, y + cd->y1f);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance;
    }
    glEnd();
}
*/

#ifndef STB_FONTCHAR__TYPEDEF
#define STB_FONTCHAR__TYPEDEF
typedef struct
{
    // coordinates if using integer positioning
    float s0,t0,s1,t1;
    signed short x0,y0,x1,y1;
    int   advance_int;
    // coordinates if using floating positioning
    float s0f,t0f,s1f,t1f;
    float x0f,y0f,x1f,y1f;
    float advance;
} stb_fontchar;
#endif

#define STB_FONT_courier_24_latin1_BITMAP_WIDTH         256
#define STB_FONT_courier_24_latin1_BITMAP_HEIGHT        128
#define STB_FONT_courier_24_latin1_BITMAP_HEIGHT_POW2   128

#define STB_FONT_courier_24_latin1_FIRST_CHAR            32
#define STB_FONT_courier_24_latin1_NUM_CHARS            224

#define STB_FONT_courier_24_latin1_LINE_SPACING          11

static unsigned int stb__courier_24_latin1_pixels[]={
    0x02200050,0xa8001300,0x10033002,0x40004c00,0x003faa00,0x803986e0,
    0x05062000,0x2a200050,0x22000001,0x88003100,0x0620001b,0x3bb60300,
    0x00132164,0x754001d3,0x0036e000,0x0fb20264,0x700074c0,0x000d809d,
    0xa81aa2e8,0x203a8cee,0xb00be26c,0x66ecc009,0x01605afe,0x17440760,
    0x00551900,0x5c001d30,0x058a5405,0x1d5001b7,0x2002e400,0x81dc005c,
    0x200b92e8,0x54d801e9,0x0003601d,0xcd986000,0x40020400,0x40d9805c,
    0x03d307d8,0x1ec02cc0,0x80071480,0x132000ea,0x502c52a0,0x88007003,
    0x00018003,0x006a0d40,0x30a601c4,0x00883605,0x00a60000,0x19981331,
    0x07401a80,0x5eec4788,0x01d806ed,0x332a0070,0x2001c000,0x22950039,
    0x26002985,0x204cc402,0x00000199,0x99813310,0x2604cc41,0x200a6019,
    0x2eedfc8d,0x3e637fcc,0x66f4c0ef,0xdefd80dd,0x309ddd30,0x03980333,
    0x0d30760c,0x99988688,0x30099999,0x4cc00333,0x80cc4019,0x4b14a819,
    0x00ddcde9,0x01bb9bd3,0x3a61bdfb,0x8dff34ee,0x3fa0eff9,0x3f63ffff,
    0x9ddd30de,0xe986f7ec,0x66f4c4ee,0x19bb00dd,0x812a16cc,0x2606d40e,
    0x424c0d05,0x201efeec,0x41a2001b,0x76c16401,0x4eeeeeee,0x01efeec8,
    0x01efeec8,0xdd90bbf6,0x2ab14a85,0x6d42cc0d,0x20682cc0,0x1d025449,
    0x20687500,0x12606849,0xb05981b5,0x03a1e20d,0x540d10ea,0x01260684,
    0x006c093d,0xd10003a0,0x04981d40,0x3a0024f4,0xe8254049,0xd1b14a80,
    0x40d12540,0x1260684a,0x400ea03a,0x0930343a,0x0d124c0d,0xb016c254,
    0x40e84a83,0x1a1e202c,0x74ea0498,0x98003b00,0x2b800add,0x024c0ea0,
    0x54003a75,0x41d801d3,0x3629503c,0x2c9e202c,0x981a1e20,0x00e84a84,
    0x26068750,0xc9260684,0x0761e202,0x2a0e82b8,0x0ec00d84,0x3604981a,
    0x00b20570,0x00f6dc40,0x8843a80d,0x015c3601,0x880570d8,0x14a81666,
    0xb1d801bb,0x0341d801,0x4a83a093,0x40d0ea00,0x92606849,0x360ec00d,
    0x92a07a04,0x3b80680e,0x22093034,0x02541625,0x3b834400,0x00751d40,
    0x4402c4b1,0x52a01625,0x6c52a00e,0x00d3b806,0x12606877,0x4001d254,
    0x0930343a,0x00d24c0d,0xa80fd877,0x412a3a05,0x0343b806,0x1b0ae093,
    0x11a80760,0x00740e40,0x00fbbbaa,0xb801b0ae,0x6ec006c2,0x6d8a5403,
    0x700d3b80,0x81260687,0x54004a8e,0xd0930343,0x700d24c0,0xa9cead87,
    0x3b2a00ed,0x1d801b00,0x3a093034,0x1e882540,0x340b25c8,0x4e540254,
    0x40e803b9,0x2a07404a,0xa8068804,0xd801bb14,0x41d801b1,0xca812606,
    0x21d4000e,0x81a12606,0x3b003649,0x3cdb88d8,0x16409d00,0x203b0f10,
    0xffff982b,0x3b6206ff,0x5f643edc,0x0e83da89,0x00623a80,0xdffffff3,
    0x7ffffcc0,0x500d006f,0x880b3629,0x87880b27,0xe805701d,0x6c3a8004,
    0x03b05701,0x2202c8ae,0x20000d87,0xb81a200e,0x20b04a84,0x8803901c,
    0xfb31501d,0x20095017,0x0721603a,0x901c80e4,0x9500d003,0x4b81a362,
    0xa84b81a2,0x01d00b04,0x04a87500,0x22c12a0b,0x3612e068,0x00950000,
    0x105a81d5,0x0d04b85d,0x01e402cc,0x001b02c4,0x340d80ea,0x981a0b30,
    0x26206805,0x03aab14b,0xa81d50b5,0x4b85d105,0xd8002540,0x12e17441,
    0x212e1744,0xd82d40ea,0x001d0000,0x033737a6,0x0bdcee88,0x80740498,
    0x588049b8,0x1d400b30,0x2024c1b0,0x3a024c0e,0x99903400,0xb9bd31c5,
    0x337a6019,0x3ba200cd,0x07400bdc,0xe8835400,0x2200bdce,0x300bdcee,
    0xa819b9bd,0x4c03eefe,0x003efeee,0x03100062,0x32177764,0x15302efe,
    0x00541200,0xeeeeeed8,0xddd90fee,0x92efec85,0xfec85ddd,0x77f7642e,
    0x0620003e,0x44001880,0x3fbba601,0x7776c03e,0x000c400d,0x01880062,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00500002,0x20188008,0x10050000,0x00541880,0x3b5002a2,
    0x81b01530,0x3112604d,0x229000a8,0x05ddf583,0x40011000,0x83101418,
    0x20008802,0x01dcccda,0x1bd50028,0x400b9000,0x174403ec,0x264000e8,
    0x7b80fb20,0x6f4c0be2,0x81d00ddc,0x5c3ecdd8,0x85d01c85,0x200be27b,
    0xd5889358,0xa8079900,0x203b8cee,0x6407e26c,0xeb80be26,0x9303b8ce,
    0x6f440330,0x1eaa6405,0x44013600,0x7b00b92e,0x36200950,0x2e4ba203,
    0x1d500810,0x424c0e98,0x3f10ec2d,0x106a8498,0x2ab10008,0x5406ac43,
    0xb30c0171,0x00408019,0x2a180102,0x2202e04d,0x3aa3d300,0x01c42880,
    0x06a00298,0x3a070035,0x54029800,0x05300d41,0x98b500e8,0x22542cc4,
    0x1ec24c4c,0x20019998,0xd5887549,0x8048b980,0x99801999,0x4c409999,
    0x09999999,0x4cc404cc,0x260025c0,0x99980440,0x99998801,0x4c409999,
    0x09999999,0x04cccccc,0x333300ee,0x99998133,0xcde98099,0x201dc0dd,
    0x0571261f,0x24c798b1,0x3bb203e2,0x293001ef,0x806ac42b,0x776400b9,
    0x3baa01ef,0x360eeefe,0xeeeeeeee,0xd317faa4,0x2ab629fd,0xc800000c,
    0x6c01efee,0xeeeeeeee,0x777776c4,0x3baa4eee,0x340eeefe,0xddfddd50,
    0x3fbbaa1d,0x036a0eee,0x6c00d8b3,0x44391262,0x261f85eb,0x4f4035c4,
    0x676e4c04,0x1ab12cde,0x3d000220,0x2a02c009,0x3bb09303,0x910d4930,
    0x3227f407,0x127a01ff,0x424c0ea0,0x2c09303a,0x02c00ae0,0x540d1058,
    0xb92a01a4,0x8ae886c3,0x91623e85,0x01d3a80b,0x5ed66544,0xd983421a,
    0xa803eddf,0x016001d3,0x36126075,0x06c49869,0x824c0366,0x03a7501c,
    0x21260750,0x2c09303a,0x02c01a20,0x44059058,0x652a01a7,0x11c86c0e,
    0x0dc87b0b,0x570d809b,0x80725700,0x03901106,0x200570d8,0x4421d405,
    0x4c3b8d81,0x82c82c84,0x36039049,0x43a80570,0x08750310,0x6402c031,
    0x0b005802,0x363b0036,0x1e99ec00,0x0b10d86c,0x1323e87b,0x20162588,
    0x03401b1c,0x25881620,0xa80b0058,0x21b00ea3,0x6d41260e,0xc824c240,
    0x01625881,0x2a01d475,0x02c00ea3,0x802c0344,0x27700d05,0x750fc03b,
    0xb13b50d8,0x2e2cc5f0,0x01b0ae06,0x3ffffffa,0x51034a0f,0x5c0b5577,
    0x02c006c2,0x00fbbbaa,0x04992a1b,0x498489dc,0xd8570390,0x3bbbaa00,
    0x77775403,0x3600b003,0x05802c01,0x0747700d,0x3624c5a8,0x883bb261,
    0x0f51261f,0xb012a074,0x835621a1,0x5caabdfa,0x009503a0,0xb99ca80b,
    0x23b06c03,0x1be98049,0xd0390498,0x32a04a81,0x65403b99,0x0b003b99,
    0x00b01660,0x36006c16,0x1d303661,0x8025c498,0x07c24c69,0x7fffffcc,
    0x88686c06,0x2203a0d5,0xfffff305,0xa80b00df,0x41b00623,0x70089358,
    0x0ec12601,0x3fffffe6,0x0188ea06,0x200311d4,0x58076005,0x80b20b00,
    0xbb9b9078,0x06989301,0xc84987b0,0x03901c84,0x1ab10d34,0xc82cc0ea,
    0x05803901,0x1b0b01d4,0x82449ac8,0xfb11a00c,0x03901c83,0x3a8580ea,
    0x20058160,0x2c016049,0x412e0688,0x12600ae9,0x7c4310b6,0x07cc1cc0,
    0x5a05981a,0x10d58858,0x1a0bf70b,0x202c0598,0x1b03603a,0x4e44ae88,
    0x5403c999,0x2ec9edce,0x7505981a,0x80ea06c0,0xe800b00d,0x81600b00,
    0xb82d40ea,0x3dbcefef,0x3376216c,0xb30f21ee,0x0498f603,0x0b168074,
    0xd7067ab1,0x3df39db9,0x803a024c,0x1b01d405,0x44ea80d8,0x000aaaa9,
    0x40498026,0x3603a80e,0x01b01d40,0x20950016,0xe980b005,0x3500cdcd,
    0x0b881a98,0xc8380988,0x7764a201,0x177f642e,0x664e0104,0x6401981c,
    0x7f642eee,0xdfddd52e,0x7776c3dd,0x20feeeee,0x26c0eefd,0xd9000000,
    0xefec85dd,0x3bbbbb62,0x3b60feee,0xfeeeeeee,0xddfddd50,0x3aa9003d,
    0x51eeefee,0x3dddfddd,0x00000620,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x48000000,0x20007300,0x01cc0204,
    0x12000730,0x80000280,0x00040039,0x40090005,0x93006002,0x209bb9db,
    0x10010018,0x40044001,0x00806439,0xd102fc80,0x0026c007,0x03ea07d1,
    0x09b0026c,0x4401f440,0x665c05de,0x9809b003,0x2203ecdc,0x5d1005de,
    0x80bbd100,0xeb83ecda,0x7dc06a91,0xdeb883ed,0x05ff502e,0xf94ddec8,
    0x07a25b85,0xf8800d97,0x002e886f,0x2e8805b8,0x5b803ee0,0x22017200,
    0x51ea802e,0x0d45301d,0x1b105c80,0x51ea83b8,0x00f4401d,0x80ea8f54,
    0x8be16c4c,0x41b50354,0x5911642c,0x2203ff30,0x005f903e,0xdb800580,
    0x20000882,0x54008801,0x2000c00f,0x30008801,0x48170110,0x1a000600,
    0x08802206,0x88110300,0x91e65986,0xd107206a,0x01621a21,0x10000f40,
    0x0000b003,0x20000000,0x881ea008,0x80022001,0x00620018,0x4400d453,
    0x440d0001,0x80062000,0x7416a018,0x1aa41f10,0x12639068,0x025c0034,
    0xdfdfe980,0x0ea80b00,0xff913fa0,0x7e44fe83,0x6efecc1f,0xfa87983e,
    0xd980dfde,0x2a03eddf,0x500dfdef,0x201bfbdf,0x74c03ccb,0x7000dfdf,
    0xeddfd989,0x3f7fa603,0xfbfd300d,0x3b03b81b,0x035486e4,0x40e8ee0d,
    0x3601105a,0x17541800,0x20b01d71,0x49800dd8,0x20930390,0x0e40441c,
    0x441b91e6,0x1c80886a,0x1aa20dc8,0x06a88372,0x7545b730,0x5403ae22,
    0xc80884fc,0x2e22ea81,0x7117540e,0x2b80e41d,0x81aaeed4,0xd527441d,
    0x2e01d937,0x07726d02,0xb80fc4d1,0x02ea8585,0xc824c153,0x03904981,
    0x4cd11620,0x2009900f,0xc807cc58,0x26403e64,0x440bdb98,0x220b701f,
    0xb1000dca,0x4b701f88,0x64b701f8,0xaa405701,0x3d11e981,0x83fefd8b,
    0x9d881eb8,0x9a25c9ae,0xcb9e2069,0xb9cd8bcc,0x4bff10bc,0x93039049,
    0x2ea20720,0x73445aab,0x33333339,0x5577510d,0x9999cb8b,0x272e6999,
    0x46999999,0x1a600bcc,0x86980788,0x45aabba8,0x699e2069,0x701c9e20,
    0x501aa405,0x6c913bdb,0x2e98f222,0x98e43740,0x01b00ee7,0x4932c7ae,
    0x641265ff,0x83904981,0x5caabdfa,0x3bbbb218,0x7d45eeee,0x645caabd,
    0xeeeeeeee,0x3bbbbb25,0x91045eee,0x201dc399,0x2a2c800d,0x45caabdf,
    0x3b86c03b,0xb02b86c0,0x001aa403,0x2682ccea,0x981e801c,0x102d4f34,
    0x4409d10f,0x20930625,0x3904981c,0x405880e8,0x4074004b,0x70025c58,
    0x905c0009,0x00f102d4,0x5880e8ea,0x54f102d4,0x03a9e205,0x01aa401f,
    0xc815c760,0x207200d1,0x07c4f558,0x00f445b8,0x049801b1,0x3609303b,
    0x02cc0ea1,0x1d4003e2,0x007c4598,0x90000f88,0x201f11a8,0x2a1b005b,
    0x0f88b303,0x807c4b70,0x1a61a25b,0x54006a90,0x59341225,0x5c254530,
    0x0ed41f52,0x930003aa,0x2342fc81,0x88d01fd8,0x2e1621fd,0xb70edc5f,
    0x42c4b303,0x81db85fb,0x4c0edc59,0x54482e05,0x7b07541d,0x0b125c41,
    0x83b50bf7,0x20ed40ea,0x361e40ea,0x801aa401,0x2e16c0eb,0x3c88ba23,
    0x2a1d10ec,0x7e77d40f,0x4254000d,0x67546ff8,0xa82ec9ed,0x2ec9edce,
    0x273b73ae,0xa87fb1ef,0x40dedcee,0xf9cedceb,0x6e77541e,0xceea80de,
    0x32200ded,0xcefa82cb,0x77e440df,0x675c0bdd,0x41ef9ced,0x00dfcefa,
    0x01bf9df5,0x440733b6,0xd8357599,0xd9103edc,0xdd9307d9,0xfbdb105b,
    0x99807d45,0xccea8000,0x4c076e5c,0x8004c000,0x100c4019,0x00330033,
    0x31001988,0x98008003,0x80088009,0x04cc0019,0x88009980,0x99554400,
    0x2000982a,0x06200001,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x710000c4,
    0x0004039d,0x8b105440,0x0c00ea0c,0x80321cc0,0x3880e61b,0x2800b800,
    0x80054c00,0x2f6e0029,0x00a605b9,0x98802a60,0x99999999,0x00006201,
    0x44800440,0x8003bada,0xcb81b32d,0x37a60006,0x741e9dfc,0xed8816e1,
    0x6a859cec,0x22e807a2,0x002e406a,0xddd8807b,0x655ee400,0x3b33202d,
    0x3ae203da,0x3b33604e,0x2f7203da,0x00282dca,0xdcdda831,0x176e21cc,
    0x6fe47fd4,0x016202ee,0x4c49800b,0x2a000b04,0x001fd40e,0xdd107a20,
    0x80000000,0x0ba200db,0x07a63d30,0x825c0762,0xda80ae20,0x88201d12,
    0x203b102b,0x1880144b,0x5cbe6074,0x6ec059be,0x440b660c,0x80079505,
    0x0582443a,0xbb701d00,0x0b600440,0x00310344,0x40130000,0x44098018,
    0xaaa98d81,0x00880ea0,0x1880b100,0x337506c0,0x310028ea,0x882d81d4,
    0x78836c05,0x4c117d70,0xa83d304b,0x02c03663,0x983b8b62,0x6fecc3f6,
    0x080f03ed,0x0dfdefa8,0x7fe44fe8,0x00000001,0x154715c0,0x6efecc19,
    0x3bf6603e,0xfe982bad,0x915c0dfd,0x050c9a21,0x102a8620,0x05b01620,
    0x537d50ec,0xdc8390dd,0x3df73a80,0x41eb8160,0x3c87440d,0xb1072022,
    0x220dc800,0x3209306a,0x406ffe81,0x7f406ffe,0x1c38b06f,0x0e404455,
    0xdda85f54,0xd7117544,0x208352c1,0x0620052a,0x02c4003d,0x1a2b8076,
    0x32c42ba2,0x261d407d,0x3e98582e,0x2543b0d0,0x01e22c40,0x09900f98,
    0xd0072093,0x0d003400,0x43733716,0x44588048,0x7c4bb00f,0x072cb701,
    0x22005488,0x0566dc41,0x04d80b10,0x98824c7a,0x0dc88bcc,0x3a075099,
    0x32799970,0x20e8971e,0x2a224c3c,0x2e85aabb,0x999cb820,0x49869999,
    0x00680390,0x8b06801a,0x21c43bac,0x45aabba8,0x699ea04b,0x00e59e20,
    0x0c400a71,0x2209b710,0x5407ec05,0xea800ae5,0x0ea16ea2,0x23e981dc,
    0x5a96c5b9,0x2f7ea2b8,0x2e985caa,0xddd90ea8,0x30bddddd,0x0d007209,
    0x20d00340,0x154351c5,0xb9557bf5,0x773c01c8,0x14cb0d80,0x20052a82,
    0x10790018,0x9cead80b,0x01660eda,0xb5883762,0x21260750,0x22d620dc,
    0x43b069cb,0xd305880e,0x5c179b9f,0x90498004,0x1a006803,0x22550680,
    0xd06c2e0c,0x02b8b101,0x2205a9a2,0xc8bb8aa7,0x88014363,0x885880a1,
    0x6dc46c05,0x3885d03c,0x42c320ba,0x215c333a,0xd0b1c82d,0x1d4b301d,
    0x06c40598,0x4c000f88,0x06803b04,0x206801a0,0x2a22a98d,0x2cc0ea2a,
    0x223a8166,0x0d8b700f,0x0a2a82a2,0x00f88c40,0xd80b1077,0x33b22000,
    0x56cc01dd,0x489d41ea,0x2ba60036,0x2176c1ea,0x2e1620e9,0x202c805f,
    0xd05981db,0x3401fd88,0x03400d00,0x112e03b1,0xb90bf70b,0x83b50d50,
    0x80ec40ea,0x1880144b,0x06981bf1,0x000d80b1,0x31000e88,0x776c1d33,
    0x2007dbb1,0x320e9998,0x0decee9c,0x9cedceb8,0x49b981ef,0x76e77540,
    0xdb9d500d,0x03405d93,0x403400d0,0x02dcbcdb,0xf39db9d7,0xecdeb83d,
    0xf9df500d,0x5e6dc01b,0x100282dc,0x766fd6c3,0xd80b101d,0x00588000,
    0x0801ec88,0x43d91000,0x4c004c44,0x0054c001,0x26001988,0x7f776c00,
    0x3bb64eee,0x364eeefe,0x4eeefeee,0x19800620,0x8004cc00,0x06200099,
    0x55555550,0x26037555,0xdfddd501,0x3bfaa3dd,0x002c003e,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x88000000,0x33331000,0xeeeee813,0x3bbbba3e,0x054c0fee,0x8800d440,
    0x0013000a,0x0a600098,0x014c0000,0x33302662,0x00007f54,0x0a20276c,
    0x43301988,0x7fcc6ff9,0x9880e00e,0x19999999,0x026204c4,0xdee98bf2,
    0x7776c02d,0x201a1eef,0x67643605,0xdd981ddb,0xe985afec,0xb86bddcd,
    0xff9afeef,0x477efe40,0x80b705fd,0x37a60039,0xefd80ddc,0x89ddd30d,
    0x9300000d,0x417e6e40,0x77642efd,0x00e812a2,0xeeeb8162,0x31feeefe,
    0x3fa61ddd,0x4dbfe20e,0x4007620e,0x0100d058,0x469869a2,0x23ec40d9,
    0x20fc80e8,0x137661cc,0x0eea8336,0x093012a0,0x0b3036a0,0x0d84981a,
    0x20930000,0x25412249,0xa80e80e8,0x5702c403,0x3a8722c4,0x25b701b0,
    0x1005881c,0xa8001a0b,0x1d0e40e3,0x403d1e20,0x27c41a66,0x007dc1aa,
    0x22012600,0x81a12a06,0x0220d849,0x20930440,0x9076001c,0x03a12a07,
    0x115c0b10,0x40ea1c8b,0x3600800d,0x2d058800,0x036000aa,0x201ccae0,
    0x3b801261,0x40791320,0xff30000f,0xc89fffff,0x81a1e202,0xdfb8d849,
    0xddd702fe,0x06e0935d,0x01666880,0x4402541d,0x4588ae05,0x06c0ea1c,
    0x200d1000,0xb7bfd058,0x100d003b,0xb8006e1d,0xa80b2002,0x81d00e44,
    0x4c06ffe8,0x6c00d804,0xb0930341,0x21754399,0x133661db,0x52e001cc,
    0x1d25400e,0xdfdddd50,0x88221ddd,0x6c0ea045,0x2004cc40,0x20b1002d,
    0x25405880,0x06c3d710,0x5c003900,0x09713a05,0x80d003e6,0xb8068049,
    0xb0930343,0x3c43e60d,0x775c4f88,0xbb001eef,0x12a3a007,0xb1002c40,
    0xeeeeea80,0x07fdc0fe,0x220107b0,0x9006c005,0x0ec17403,0xaa883900,
    0x301d11aa,0xc80e889f,0x2603400f,0x3b806804,0x7b093034,0x204a8f40,
    0x19e9984d,0x77f76c40,0x0765404e,0x22005880,0x4cce5405,0x17f40d99,
    0x209307b0,0x01d40058,0x0590680d,0x332215c0,0x277e63fc,0xfa84aeda,
    0x00dcea9c,0x20126034,0x1a0ec00d,0x201d8498,0x2540393b,0x0b1000d0,
    0x22004e80,0x50162005,0x5f883607,0x824c0f60,0x81e40058,0x09500049,
    0x03601d40,0x93179b71,0x6cb37220,0x12603400,0x87880b20,0x7b05701d,
    0x204b8ec0,0x4401a04c,0x04ccfccc,0x162000e8,0x1d405880,0x207ee0d8,
    0x412602d8,0x07e0081b,0x3b000164,0x00e88d40,0x024c0036,0x80d00360,
    0x20688049,0x0b04a84b,0x887c41b6,0x2609f107,0x02c40304,0x09000950,
    0x0ea02c40,0xd109b06c,0x442e8805,0x5c887b05,0x07d701a0,0x317207a2,
    0x4003a03d,0x40340049,0xa8506806,0xe882d40e,0xcdd825c2,0x1970b660,
    0x0d826ecc,0x002c40d0,0x8000001d,0xd81d4058,0x407a2020,0x66e7640b,
    0x3f77ae00,0xfd012204,0x6e76c40d,0x99dd103e,0x24c007d9,0x6803d880,
    0xedccea80,0xcdcde983,0x373ba200,0x5c7f540b,0xf702fedf,0x3df35fbb,
    0x3bbbbfe2,0xfeea82ee,0x7774c0ee,0x3baa03ef,0x0eeeeeee,0x1777f764,
    0x74c3bbb2,0x3be603ef,0x00feeeee,0x04c40013,0x00544000,0x33000cc4,
    0x7f76c001,0x77774c1e,0xdfdddb02,0x04cc09dd,0x22000c40,0x00198001,
    0x00000033,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x40000000,0xbddb0029,
    0x300276c0,0x00401b87,0x7f4007db,0x5007fe43,0x4c43bdfb,0x99883301,
    0x06660099,0x33302662,0x33106660,0x81333333,0x20019998,0x99999999,
    0x221ba601,0x40cc4199,0x30262019,0x44133333,0x01999999,0x76664011,
    0x405803da,0xd1aa0049,0x17bb6205,0x0ea001d4,0x20bb8064,0x32177ec0,
    0x3bbb62fe,0x7ddf505e,0xd90eeed8,0xefec85dd,0xddddfd12,0xefd8bddd,
    0x2602deee,0xeeeefefe,0xb0d3b00f,0x7fec7ddd,0x640bfaa3,0xfddd51ef,
    0x3baa1ddd,0x260feeee,0x045cecee,0x01600571,0x40000093,0x01d4011c,
    0x80640ea0,0x3a097006,0x39003a81,0x024c1b80,0x5880e41a,0x01ec40d8,
    0x01b07236,0x41d41a95,0x06bb80ea,0xa82c039d,0x03625983,0x002601f3,
    0x0024c058,0x2a00d000,0x07500263,0x80162032,0xda81642d,0x45701ccc,
    0x03406428,0x44072093,0x03b00d85,0x406c1cb4,0x50ea0d0e,0x072ae01b,
    0x82c03977,0x1660e83a,0xdeabfa9c,0x405800ee,0x03bfee49,0x3b01bffa,
    0xdbf77500,0x640ea01d,0x3ffffea0,0x21d101ff,0x2672a04a,0x91d41ec9,
    0x15c06c3d,0x043901c8,0x2cc03606,0x838393a8,0x71d41a3b,0x459ab80b,
    0x41601c8e,0x6ec16429,0x45ea809b,0x4c05805a,0x34003aa4,0x3aa01660,
    0x03a82d44,0x800b1019,0x1d4069e9,0x75d24c68,0x0d058834,0xd80390e4,
    0xc8e41a00,0x0d1a2091,0x5c0264ea,0x0e5261b2,0x816a00b0,0x2a1eeca9,
    0x05801d05,0x4005ca4c,0xa8bb6206,0x80e82d40,0xb101b04a,0x801f7000,
    0xa445703a,0xd81a68d8,0xdd901d40,0x3fb203fd,0x406c2eee,0x6c17bb26,
    0xedca8341,0x4a95c00c,0x0580721b,0x22000e88,0x0360751e,0x4dc980b0,
    0x23a06800,0x3a83d168,0x88d501b0,0x005880fd,0x1d402ed8,0x9d5622b8,
    0x0ea0588d,0x4cd6401b,0x33d3101d,0x25886813,0x859859ac,0x3ae5f506,
    0x59e8ae00,0xd8058072,0xa9dc0b01,0x05801b03,0x00075fcc,0x79524c1a,
    0x03607505,0x27b73baa,0x002c42ec,0x7500f52e,0x3b681d30,0x4d0122ae,
    0x150e4058,0x21a00d80,0x011ffffa,0x7f9999bb,0x20598950,0x1c8bae2b,
    0x88970160,0x21d107d1,0x5801b03a,0x00e9a4c0,0x362c41a0,0x03607506,
    0x44004cea,0xe8966005,0x9555b500,0xc99ad03d,0x2b8e4039,0x36000e40,
    0x41b09300,0xaaa8441c,0x3a82eaaa,0x285702c8,0x440b00e4,0x997b4986,
    0x81d45bd9,0x2602c00d,0x34003a64,0x41b621b0,0x7501b03a,0x10058800,
    0xb505a81d,0x56c05799,0x2601d744,0x003900d5,0x81e880d8,0x00ea0e46,
    0x1a20ea0d,0x8072015c,0x12607a05,0xd81d4062,0x12602c00,0x40d001d5,
    0x2ebcfdd9,0xa80d81d4,0x802c4003,0x7507901d,0x3216e400,0x04ae802d,
    0x06c001c8,0x91260766,0x83403a83,0x5703b03a,0x41601c80,0x4009303c,
    0x77ec5eec,0x3bfbbb61,0x913b63ee,0xeeed8bdf,0x0984eeef,0xe897bb20,
    0x801cc3ef,0xdeeefeeb,0xb0fbfa20,0x7776c9fd,0x207dc05e,0x1fb801fa,
    0x3bbbfa60,0x7777ec04,0xaeec81ce,0xeeeeefe9,0x45fee883,0x74c3eeed,
    0x70bbbae5,0x3baa5dfd,0xdb1eeefe,0x09dddddd,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x06603310,0x13310133,0x200ccccc,0x20099998,0x99999998,0x04ccc409,
    0x80199980,0x40199998,0x00099998,0x300c0180,0x40030000,0x00220018,
    0x81100188,0x4c088008,0xf30dff32,0x0074c0df,0x3b2177ec,0x98bfd52e,
    0xfdd74fee,0x776c03dd,0xed82deee,0x4eeeeeee,0x3bbbbfa6,0xdfdd901d,
    0xeeeed803,0xeed80bee,0x000beeee,0x0b1026cc,0x2200175c,0x859ceced,
    0x80dfdefa,0x03eddfd9,0x037f7fa6,0x75d777a6,0xdbfd303d,0x024c1d59,
    0x4009101a,0xbb01d04a,0x01a09303,0x425c43a8,0x0d09303a,0x49e803d1,
    0x06983a80,0x005b8875,0x58803b91,0x400eec40,0x237441e8,0x21aa20dc,
    0xea81c808,0x1103ae22,0xa8792edc,0x220fe42e,0x00589225,0x1e41d800,
    0x049869d8,0xd81d400d,0x84981d40,0x9d40d106,0xb81d400e,0x03903a82,
    0xb1002eb8,0x8033a600,0x7ccd102d,0x22009900,0x5b80fc45,0x4f117c40,
    0x2574c0f8,0x1263d934,0x99a20000,0x30ee3605,0x3a801a09,0x843a8750,
    0x0ee06818,0x5402b86c,0x07507703,0x01f540ea,0xd5001620,0x5c101e07,
    0x9999999c,0xaabba886,0x0f1034c5,0x333f5751,0xd316a1d3,0x4f4721a1,
    0xaaa98574,0x00aaaaaa,0x3600ea54,0x6824c1d0,0x0ec0ea00,0x3403a8ea,
    0x44b10910,0x74c1d405,0x0e883a80,0x4400674c,0xaaaebaaa,0x445d7002,
    0x3bbb2005,0x545eeeee,0x45caabdf,0xd886c03b,0xeeefcabe,0x74c571ee,
    0x93750720,0x2aa206da,0x02aaaaaa,0x0d807bb0,0x06824c95,0x0b910ea0,
    0x807dddd5,0x215c3406,0x3bbaa00d,0x39501fee,0xd303b953,0x55510019,
    0x005555d7,0x00788bae,0x01d0012e,0x2205a8b1,0x803e0b67,0x0e81d349,
    0x69c9664c,0x34400000,0x263b06c0,0x75400d04,0x9502eeee,0x06807733,
    0x12a0742c,0xa9999ca8,0xdccea82d,0x003ea806,0x3aa002c4,0x10405d03,
    0x40ea001f,0xb807c459,0x05f10365,0x3540e9e8,0x017666e8,0x201a0000,
    0x824d620d,0x03a85306,0x40188ea0,0xff312606,0x540dffff,0x87503a03,
    0x05d7005b,0x74c01620,0x20ba600c,0x2076e0ea,0x3ee16259,0x7541da85,
    0x5fe892a0,0x42fb8366,0xe89b01ea,0x00059803,0x5903601a,0x1d41a093,
    0x03a800ea,0x42b81a16,0x2a03901c,0x0750ae03,0x3b220095,0x2602c401,
    0xfd3000dd,0xd50179b9,0xb81bdb9d,0xef9cedce,0x6fe77d41,0xdaecdc80,
    0x3a22fdeb,0x01efcedb,0x00b30000,0x206c0340,0x20d04ae8,0x5001d43a,
    0x41a06c07,0x16606869,0xa83901d4,0x44005b03,0xc816205d,0x1310001e,
    0x20066200,0x04cc0019,0x03102620,0x0004c439,0x20000000,0xea80d806,
    0x50ea0d04,0xb01d4007,0x07544681,0x501d0126,0x0ea16a07,0x00c00344,
    0x00001802,0x00000000,0x00000000,0x00000000,0x3eefeec8,0x6c0eefd8,
    0x3bbfbae4,0x3b63eeee,0x3b605eee,0xfeeeeeee,0xddddfd30,0x2eeec817,
    0xdb177f64,0x09dddddd,0xd707dddb,0x00000005,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x22040000,0xfc89fd00,0x0004c01f,
    0x7fffd408,0xdff30fff,0xc807ffc4,0x22028ec2,0x302c8771,0x7fc4dfff,
    0x0040106f,0x0a051055,0x01331031,0x20177300,0x302e6018,0x77777777,
    0x8a7fc177,0x449b72dd,0x08888888,0x5cc0e608,0x8edcbfc8,0x09303eec,
    0xeabfa872,0xffb80eed,0x2a1bbd72,0x074c4c83,0x12ec036a,0x6dcedc9b,
    0x47d11e9b,0x407202e8,0x0cabb82b,0x02b81732,0x3322d87b,0x03fee1ca,
    0x556441a6,0x1777dc1d,0x4c9957b1,0xaaaaaaaa,0xf8ffa0da,0x3b2bf91f,
    0xeeeeeeee,0xf1132243,0x7cc7eebf,0xc824c1a4,0x16a2f541,0x4664dac8,
    0xe9825c18,0x136c0b50,0x715d90bd,0x264e885f,0x1a0b303f,0x458488a2,
    0xb0a2570a,0x24880f67,0x5be884fe,0xf892aa20,0x320dcd50,0xf9064000,
    0x4fb87fc5,0x2e164000,0x43baffc5,0x824c0e46,0x0e82d41c,0x54005f90,
    0x82df4405,0x0bd10ee8,0xf1077036,0x0d827ccb,0x415c01d4,0x6eeef5c5,
    0x103ed83e,0x03fe23b5,0x3661e476,0xf16a4cbc,0x000ea161,0xfb0fdc19,
    0x98001fd4,0x0c41849b,0x40e46857,0x3a839049,0x00b201b0,0x3f700698,
    0x0fe87f60,0x70688588,0x5417e49f,0x0ae00744,0x00ff882c,0x2ca80fb6,
    0xd87907f5,0x7c495161,0x3215cb50,0xf5064000,0x25f33641,0xeeeeeeed,
    0x002a63ee,0x1c8d0ae0,0xa8390498,0x0b201b03,0x5c007440,0xee881e8d,
    0x21a0bd10,0x265f8849,0x24c3a04f,0x70580720,0x6cb60797,0xa87cac03,
    0x7790e885,0x77dc5ddd,0x36b3621e,0x260c8003,0x003a2547,0x15c00000,
    0x0930391a,0x36075076,0xd1005900,0x12dc1981,0xe897603d,0x07623c85,
    0x01fcc9d1,0xd880ecee,0x96616060,0x4f61ec1e,0x41752618,0x0a982200,
    0x14403013,0x00101000,0x80000000,0x4072342b,0x2a0fec46,0x0b201b03,
    0xb8ae07a0,0xbb01e884,0xd9d12744,0x24e8bbdb,0x8e8803e8,0x33332605,
    0xa8f33323,0x50288a20,0x00016654,0x00000000,0x00000000,0x42b80000,
    0xcea80e46,0x2a2ec9ed,0x0b201b03,0xdddddf70,0x897bf65d,0x85903fee,
    0x57043b1d,0x400590ee,0x000002ec,0x00000000,0x00000000,0x00000000,
    0x75c00000,0x2ec97e3e,0xeec80260,0xe88f7ec5,0x03eeeeee,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x80000000,0x8801b984,0x88888888,0x37776208,0xdddddddd,0x33333324,
    0x0c8733cc,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x20000000,0x6d6d42d8,0x776c4e63,0xeeeeeeee,0x2222221e,0x08888888,
    0x33333332,0x0f44b73c,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x88000000,0x6664481e,0x0000000e,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x02200000,0x00002980,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,
};

static signed short stb__courier_24_latin1_x[224]={ 0,5,2,1,2,1,2,4,6,3,0,1,3,1,
4,2,2,2,1,2,2,2,2,2,2,2,4,3,0,1,0,0,2,0,0,1,1,0,1,1,1,2,1,0,
1,0,0,0,1,1,0,1,1,0,0,0,0,1,2,0,0,0,2,0,4,1,0,1,1,1,2,1,0,1,
1,1,1,0,1,1,0,1,1,2,1,0,0,0,1,1,2,0,5,0,1,2,2,2,2,2,2,2,2,2,
2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,5,2,1,2,1,
5,1,3,0,0,0,0,1,0,-1,3,1,3,3,4,0,1,4,4,3,3,1,0,0,0,0,0,0,0,0,
0,0,0,1,0,0,0,0,2,2,2,2,-1,0,0,0,0,0,0,2,0,0,0,0,0,1,1,0,1,1,
1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,1,0,1,
 };
static signed short stb__courier_24_latin1_y[224]={ 17,3,4,3,2,3,5,4,4,4,4,5,13,10,
14,2,3,3,3,3,4,4,3,4,3,3,8,8,5,8,5,4,3,4,4,4,4,4,4,4,4,4,4,4,
4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,2,4,3,21,3,7,4,7,4,7,4,7,4,3,
3,4,4,7,7,7,7,7,7,7,4,8,8,8,8,8,8,4,4,4,9,3,3,3,3,3,3,3,3,3,
3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,17,7,3,4,6,4,
4,4,4,4,3,8,10,10,4,2,1,4,3,3,3,8,4,9,16,3,3,8,3,3,3,7,0,0,0,1,
1,0,4,4,0,0,0,1,0,0,0,1,4,1,0,0,0,1,1,7,4,0,0,0,1,0,4,4,3,3,
3,4,4,2,7,7,3,3,3,4,3,3,3,4,4,4,3,3,3,4,4,6,7,3,3,3,4,3,4,4,
 };
static unsigned short stb__courier_24_latin1_w[224]={ 0,3,8,10,9,10,9,4,4,4,8,11,5,10,
4,9,9,9,10,9,9,9,9,9,9,9,4,5,11,11,11,8,9,13,12,11,11,12,11,11,11,9,12,13,
11,13,12,11,11,11,13,10,11,12,13,13,12,11,9,4,8,4,9,14,5,11,12,11,12,11,10,11,12,10,
8,12,10,13,11,11,12,12,11,9,11,12,13,13,11,12,9,5,2,5,10,12,12,12,12,12,12,12,12,12,
12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,0,3,8,11,9,11,
2,11,7,13,7,11,12,10,13,14,7,11,6,6,5,12,11,4,4,6,7,11,13,13,13,8,13,13,13,13,
13,13,13,11,12,12,12,12,9,9,9,9,13,12,11,11,11,11,11,8,12,12,12,12,12,11,11,11,11,11,
11,11,11,11,13,11,11,11,11,11,10,10,10,10,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,
 };
static unsigned short stb__courier_24_latin1_h[224]={ 0,15,6,16,17,15,13,7,16,16,8,12,8,2,
4,17,15,14,14,15,13,14,15,14,15,15,10,12,12,5,12,14,16,13,13,14,13,13,13,14,13,13,14,13,
13,13,13,14,13,16,13,14,13,14,13,13,13,13,13,16,17,16,7,2,4,11,14,11,14,11,13,14,13,14,
18,13,13,10,10,11,14,14,10,11,14,10,9,10,9,13,9,16,16,16,4,14,14,14,14,14,14,14,14,14,
14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,15,14,13,9,13,
16,15,2,14,7,9,7,2,14,2,7,13,8,8,4,13,15,3,5,8,7,9,14,14,14,15,17,17,17,16,
16,17,13,17,17,17,17,16,17,17,17,16,13,16,18,18,18,17,17,8,14,18,18,18,17,17,13,14,15,15,
15,14,14,16,11,14,15,15,15,14,14,14,14,13,14,13,15,15,15,14,14,10,11,15,15,15,14,18,17,17,
 };
static unsigned short stb__courier_24_latin1_s[224]={ 248,39,219,150,175,91,48,214,131,120,136,
128,161,99,251,185,160,224,1,114,188,25,211,35,192,182,251,250,116,228,140,
45,110,75,89,54,63,50,148,66,238,226,12,198,26,212,13,126,38,92,102,
213,226,138,134,120,95,1,236,164,51,248,167,69,245,176,151,152,164,164,84,
91,58,103,51,24,13,1,28,188,234,78,40,246,114,15,108,226,62,201,52,
104,253,125,58,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,
200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,248,221,247,
177,86,189,161,231,110,186,177,74,201,99,136,84,185,214,122,154,52,71,170,
251,240,129,193,96,27,237,1,202,149,222,1,181,136,208,174,163,195,15,28,
205,41,60,70,195,160,218,1,13,86,124,80,145,41,73,25,60,136,236,108,
15,55,27,124,150,54,169,200,66,43,67,79,78,103,114,125,37,162,1,102,
136,148,174,225,240,214,14,1,243,90,38,98,111, };
static unsigned short stb__courier_24_latin1_t[224]={ 18,38,112,20,1,38,84,112,20,20,112,
98,112,122,112,1,38,54,69,38,84,69,38,69,38,38,38,69,98,112,98,
69,20,98,98,69,98,98,84,69,69,84,69,84,98,84,98,69,98,20,98,
54,69,69,84,84,84,98,84,20,20,1,112,122,112,98,69,98,69,98,84,
69,84,69,1,84,84,112,112,98,54,69,112,84,69,112,112,98,112,69,112,
20,1,20,122,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,
54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,18,38,54,
69,112,69,20,20,122,54,112,112,112,122,54,122,112,69,112,112,122,84,38,
49,112,112,112,112,54,38,54,38,1,1,20,20,20,1,84,1,1,20,20,
20,20,20,20,20,84,20,1,1,1,1,20,112,54,1,1,1,1,1,84,
54,38,38,38,54,54,20,98,54,38,38,38,54,54,54,54,84,54,84,38,
38,38,54,38,98,98,38,38,20,54,1,1,1, };
static unsigned short stb__courier_24_latin1_a[224]={ 203,203,203,203,203,203,203,203,
203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,
203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,
203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,
203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,
203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,
203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,
203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,
203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,
203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,
203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,
203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,
203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,
203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,
203,203,203,203,203,203,203,203, };

// Call this function with
//    font: NULL or array length
//    data: NULL or specified size
//    height: STB_FONT_courier_24_latin1_BITMAP_HEIGHT or STB_FONT_courier_24_latin1_BITMAP_HEIGHT_POW2
//    return value: spacing between lines
static void stb_font_courier_24_latin1(stb_fontchar font[STB_FONT_courier_24_latin1_NUM_CHARS],
                unsigned char data[STB_FONT_courier_24_latin1_BITMAP_HEIGHT][STB_FONT_courier_24_latin1_BITMAP_WIDTH],
                int height)
{
    int i,j;
    if (data != 0) {
        unsigned int *bits = stb__courier_24_latin1_pixels;
        unsigned int bitpack = *bits++, numbits = 32;
        for (i=0; i < STB_FONT_courier_24_latin1_BITMAP_WIDTH*height; ++i)
            data[0][i] = 0;  // zero entire bitmap
        for (j=1; j < STB_FONT_courier_24_latin1_BITMAP_HEIGHT-1; ++j) {
            for (i=1; i < STB_FONT_courier_24_latin1_BITMAP_WIDTH-1; ++i) {
                unsigned int value;
                if (numbits==0) bitpack = *bits++, numbits=32;
                value = bitpack & 1;
                bitpack >>= 1, --numbits;
                if (value) {
                    if (numbits < 3) bitpack = *bits++, numbits = 32;
                    data[j][i] = (bitpack & 7) * 0x20 + 0x1f;
                    bitpack >>= 3, numbits -= 3;
                } else {
                    data[j][i] = 0;
                }
            }
        }
    }

    // build font description
    if (font != 0) {
        float recip_width = 1.0f / STB_FONT_courier_24_latin1_BITMAP_WIDTH;
        float recip_height = 1.0f / height;
        for (i=0; i < STB_FONT_courier_24_latin1_NUM_CHARS; ++i) {
            // pad characters so they bilerp from empty space around each character
            font[i].s0 = (stb__courier_24_latin1_s[i]) * recip_width;
            font[i].t0 = (stb__courier_24_latin1_t[i]) * recip_height;
            font[i].s1 = (stb__courier_24_latin1_s[i] + stb__courier_24_latin1_w[i]) * recip_width;
            font[i].t1 = (stb__courier_24_latin1_t[i] + stb__courier_24_latin1_h[i]) * recip_height;
            font[i].x0 = stb__courier_24_latin1_x[i];
            font[i].y0 = stb__courier_24_latin1_y[i];
            font[i].x1 = stb__courier_24_latin1_x[i] + stb__courier_24_latin1_w[i];
            font[i].y1 = stb__courier_24_latin1_y[i] + stb__courier_24_latin1_h[i];
            font[i].advance_int = (stb__courier_24_latin1_a[i]+8)>>4;
            font[i].s0f = (stb__courier_24_latin1_s[i] - 0.5f) * recip_width;
            font[i].t0f = (stb__courier_24_latin1_t[i] - 0.5f) * recip_height;
            font[i].s1f = (stb__courier_24_latin1_s[i] + stb__courier_24_latin1_w[i] + 0.5f) * recip_width;
            font[i].t1f = (stb__courier_24_latin1_t[i] + stb__courier_24_latin1_h[i] + 0.5f) * recip_height;
            font[i].x0f = stb__courier_24_latin1_x[i] - 0.5f;
            font[i].y0f = stb__courier_24_latin1_y[i] - 0.5f;
            font[i].x1f = stb__courier_24_latin1_x[i] + stb__courier_24_latin1_w[i] + 0.5f;
            font[i].y1f = stb__courier_24_latin1_y[i] + stb__courier_24_latin1_h[i] + 0.5f;
            font[i].advance = stb__courier_24_latin1_a[i]/16.0f;
        }
    }
}

#ifndef STB_SOMEFONT_CREATE
#define STB_SOMEFONT_CREATE              stb_font_courier_24_latin1
#define STB_SOMEFONT_BITMAP_WIDTH        STB_FONT_courier_24_latin1_BITMAP_WIDTH
#define STB_SOMEFONT_BITMAP_HEIGHT       STB_FONT_courier_24_latin1_BITMAP_HEIGHT
#define STB_SOMEFONT_BITMAP_HEIGHT_POW2  STB_FONT_courier_24_latin1_BITMAP_HEIGHT_POW2
#define STB_SOMEFONT_FIRST_CHAR          STB_FONT_courier_24_latin1_FIRST_CHAR
#define STB_SOMEFONT_NUM_CHARS           STB_FONT_courier_24_latin1_NUM_CHARS
#define STB_SOMEFONT_LINE_SPACING        STB_FONT_courier_24_latin1_LINE_SPACING
#endif

