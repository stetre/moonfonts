// Font generated by stb_font_inl_generator.c (4/1 bpp)
//
// Following instructions show how to use the only included font, whatever it is, in
// a generic way so you can replace it with any other font by changing the include.
// To use multiple fonts, replace STB_SOMEFONT_* below with STB_FONT_courier_bold_10_latin_ext_*,
// and separately install each font. Note that the CREATE function call has a
// totally different name; it's just 'stb_font_courier_bold_10_latin_ext'.
//
/* // Example usage:

static stb_fontchar fontdata[STB_SOMEFONT_NUM_CHARS];

static void init(void)
{
    // optionally replace both STB_SOMEFONT_BITMAP_HEIGHT with STB_SOMEFONT_BITMAP_HEIGHT_POW2
    static unsigned char fontpixels[STB_SOMEFONT_BITMAP_HEIGHT][STB_SOMEFONT_BITMAP_WIDTH];
    STB_SOMEFONT_CREATE(fontdata, fontpixels, STB_SOMEFONT_BITMAP_HEIGHT);
    ... create texture ...
    // for best results rendering 1:1 pixels texels, use nearest-neighbor sampling
    // if allowed to scale up, use bilerp
}

// This function positions characters on integer coordinates, and assumes 1:1 texels to pixels
// Appropriate if nearest-neighbor sampling is used
static void draw_string_integer(int x, int y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0, cd->t0); glVertex2i(x + cd->x0, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t0); glVertex2i(x + cd->x1, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t1); glVertex2i(x + cd->x1, y + cd->y1);
        glTexCoord2f(cd->s0, cd->t1); glVertex2i(x + cd->x0, y + cd->y1);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance_int;
    }
    glEnd();
}

// This function positions characters on float coordinates, and doesn't require 1:1 texels to pixels
// Appropriate if bilinear filtering is used
static void draw_string_float(float x, float y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0f, cd->t0f); glVertex2f(x + cd->x0f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t0f); glVertex2f(x + cd->x1f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t1f); glVertex2f(x + cd->x1f, y + cd->y1f);
        glTexCoord2f(cd->s0f, cd->t1f); glVertex2f(x + cd->x0f, y + cd->y1f);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance;
    }
    glEnd();
}
*/

#ifndef STB_FONTCHAR__TYPEDEF
#define STB_FONTCHAR__TYPEDEF
typedef struct
{
    // coordinates if using integer positioning
    float s0,t0,s1,t1;
    signed short x0,y0,x1,y1;
    int   advance_int;
    // coordinates if using floating positioning
    float s0f,t0f,s1f,t1f;
    float x0f,y0f,x1f,y1f;
    float advance;
} stb_fontchar;
#endif

#define STB_FONT_courier_bold_10_latin_ext_BITMAP_WIDTH         256
#define STB_FONT_courier_bold_10_latin_ext_BITMAP_HEIGHT         76
#define STB_FONT_courier_bold_10_latin_ext_BITMAP_HEIGHT_POW2   128

#define STB_FONT_courier_bold_10_latin_ext_FIRST_CHAR            32
#define STB_FONT_courier_bold_10_latin_ext_NUM_CHARS            560

#define STB_FONT_courier_bold_10_latin_ext_LINE_SPACING           5

static unsigned int stb__courier_bold_10_latin_ext_pixels[]={
    0x00201010,0x81b80620,0x20002200,0x00200010,0x00202a98,0x00000000,
    0x06666204,0x00100000,0x00400022,0x00180000,0x20970000,0x0c815c3b,
    0x20383ca8,0x2a075038,0x41e5c09a,0x82a80aba,0x265409aa,0xa81c80ca,
    0xa83ca84c,0xa80c884c,0xdc83904b,0x20f6a6cf,0xa81e84ca,0x0ae1e543,
    0x381b81c8,0x97709930,0x36a05710,0x1c825dc3,0x5434074c,0x4404c0b8,
    0x406e2099,0x428a80ba,0x28a83328,0x45419944,0xa8199442,0x206a5109,
    0x41989882,0x31050098,0x41350331,0x27219898,0x40cc62d6,0x0bb3a08a,
    0x84d44135,0x9a83fff8,0x40a04540,0x22620a98,0x06666219,0x980a0666,
    0x0ea06c09,0x6744dd9d,0x1b73a21e,0x8c0a6015,0x076cf641,0xdb3d9063,
    0x4f6418c1,0xdb9d10ed,0x443b67b2,0x27b21ece,0x3d9d10ed,0xd90f6744,
    0x33621db3,0x3b67b26d,0x367b2340,0xe93b3a0e,0x9b73a20a,0x20ae4ece,
    0x33a6dce8,0x4dddb14e,0x3b26dcd8,0xb3d90ed9,0x8ef6441d,0x3621ece8,
    0x3a06c6dc,0xb9ba2ae0,0x2715cb12,0xfd885ee8,0x51fc6e42,0xf8dc9267,
    0xb924cea3,0x499d47f1,0x267538ae,0x752c4ae4,0x4b12b926,0x99d4b12b,
    0x4ea28ae4,0x99d46849,0x88623624,0x89c571eb,0x20ae188d,0x446c4e2b,
    0x2b8f2771,0x54933a8a,0xb8720933,0x8515cb12,0xd3b12a0d,0x6cd06cd3,
    0x703d7300,0x475588d7,0xaac4933a,0xb124cea3,0x4933a8ea,0x4933a80d,
    0x933a9a0d,0xd06cd06c,0x236499d4,0x26750bc8,0x3a877ec4,0x31eda893,
    0x4036793b,0x3ba21eda,0x36a01b0e,0xd8f2571e,0x2750bc88,0x124cea49,
    0x9a0d8721,0x360bc88d,0x37d703a0,0x2e599d49,0x16d6d463,0x2b10f5f4,
    0x11d5263a,0x75498eab,0x5263aac4,0x9318ee3a,0x4b33a8ea,0x99d47549,
    0x932ccea5,0x7a8bc8ea,0x2141d526,0x994c7549,0x1dc9f915,0x262cca63,
    0x4a631dc1,0x47ddb159,0x5267a8bc,0x71d5263a,0xb33a8725,0xf53d45e4,
    0x3bae1621,0x206f640d,0xfdd34eed,0x44dcea8d,0x6f6c6fee,0x3637f740,
    0x37f740de,0xddb037b6,0x3206f6c9,0x06f6c0de,0xbd9037b2,0x220ded81,
    0x6f6c4eee,0x0ded8480,0x0b07bbaa,0x3baa9ddb,0x76c0541e,0x03ddd54e,
    0x27774479,0xbdb037b6,0x642f7541,0x3bba20de,0x00e00a64,0x74404000,
    0x00083f96,0x00200010,0x00000000,0x00000000,0x00100010,0x00040200,
    0x00275404,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x02101080,0x22310004,
    0x0001e5c0,0x1e440000,0x00265410,0x91001e5c,0x10000003,0x540cc400,
    0x2000d408,0x0414a02c,0x0cc44800,0x2880825c,0x22e00005,0x440cc884,
    0xa82b80cc,0x3647643c,0xb80d814a,0x9104ca81,0x46215901,0x06631598,
    0x5131132e,0x4544ca83,0xca83ca82,0x0e425dc4,0x39f912ee,0x40a27674,
    0x204b81b8,0x97058831,0xd9d70a09,0x40e416c3,0x80d81b1d,0x198c44ac,
    0x4c4c4098,0x3304ccc1,0x8933a866,0x81333031,0x4099980a,0x3ae09999,
    0x3d91d90c,0x303b67b2,0x1db3d903,0x8ec84ccc,0x10cc626c,0x2a623333,
    0x41333109,0x106c09a9,0x23b2311b,0xea80a86c,0x323b21ef,0x06620ec6,
    0x2ab107ec,0x01988364,0x9998361b,0x4f6414c0,0x3d9d10ed,0x8876cf64,
    0x237a2ece,0x926751fb,0x3a23f8dc,0x7f1b92ec,0xd1176744,0x0f445dbd,
    0x33a92675,0x542fd889,0x67e44933,0x7b8b2d11,0xb67ee4bb,0x9d74dceb,
    0x073f229b,0x11eda81b,0x5ee88b2d,0xb44d15a8,0x3ae2cc2c,0x220d81ec,
    0xb8360eef,0xd9a61ece,0x4439f910,0x499d42fd,0x2752c4ae,0x9166e249,
    0xaa4cd3f5,0x711d5623,0x23aac4b3,0xbcd859b8,0x27506c1b,0x424cea49,
    0x499d46bb,0x435e40d8,0x5a720ebc,0x22533b16,0x406c299d,0x92cca60d,
    0x83d730d7,0x5e4588ea,0xaac41b06,0x23620d84,0x5588362e,0xd81b3449,
    0x9d46bb80,0x2a683649,0x40e88933,0x7645dedb,0x21d5620e,0x1d5620e8,
    0x3f7a03a2,0x3aa4c682,0x5f41d526,0x41d5261e,0x4417c40d,0xef88d02f,
    0x360bbe22,0xea8f7ec0,0x50be21ee,0xeea85b5b,0xa817c41d,0x883bbe24,
    0x15f92efe,0xef88363d,0x40d86c0e,0x21ebe80d,0x99d47549,0x3a1d5265,
    0x3ebea499,0xfee82c84,0xdd24cf46,0x2499e8df,0xd319adca,0xd81bd909,
    0x6e7540de,0x6c06f6c4,0x01b03440,0x2b11b11a,0x06c588d8,0x220e40ec,
    0x46fee986,0xd01a204a,0x20ba3621,0x26c0a81d,0x3d85d1b1,0x7540d81b,
    0x06f6c4dc,0xbdb037b2,0x32777d41,0x40220f2f,0x44eefa80,0x24eefa80,
    0x003eefde,0x32dd1000,0xefe8801f,0xfb01dd92,0x90efd81d,0x3bf2dddf,
    0x85dfd16e,0xd9064408,0x76c0201d,0x200eec83,0x3d15f93a,0x541c8088,
    0x87a2bf22,0x77f44318,0x07f2dd12,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x54150198,0x4c08004c,0x40000182,0x10003309,0x80040e28,
    0x64060000,0x0600cc44,0x82545500,0x64418898,0xaa409981,0x22080001,
    0x00000999,0x048b8100,0x36207220,0x80c3442f,0x440c83cb,0x207b3a26,
    0xd81b04ca,0x02c0ed8f,0x0590d857,0x901c8091,0x202ea039,0x077aa0e9,
    0x40322064,0x75c1a219,0x114545ea,0x1328db9d,0x16ea1e54,0x4dceb832,
    0x1e541e54,0x40641ed4,0x8a899501,0x4a8d7702,0x9887b3a2,0x20c44c41,
    0x262c4ae6,0x26621988,0x1673aa09,0x444c19f3,0x42cc3619,0x98066019,
    0x6c053009,0x44c80e40,0x7fe88198,0xbb11fd74,0x15cffd09,0x8bfe7f47,
    0x1aea0999,0x27621333,0x2204ee29,0x4ccc0989,0x22133310,0x26621ece,
    0x1fdfb109,0x8b21ebe8,0x6764b12b,0xb176f71e,0x7ec68367,0xb9d70ed8,
    0x22dedd49,0x23f62c9e,0x447830ed,0x2fd882fd,0xd882fd88,0x1c81b02f,
    0x3aa0e981,0x3df1a01d,0x9a03ef88,0xbb43600d,0xfff14dce,0x4473f227,
    0xa82cc2ef,0x3f225d9e,0x29b9d71c,0x675cb12b,0x50f2774d,0xb1649b9d,
    0x96695341,0xb8ec0ebc,0x9cea8b33,0xa8a67625,0x41625f8b,0xd0e59cea,
    0x2ee0d770,0x2e0d7706,0x1c81b06b,0x01c81b0d,0xb10f7e34,0x4773403a,
    0x3b1686c1,0x6c35e453,0x89623620,0x55620eef,0x27620d83,0xb1341b29,
    0x1e4ae533,0x547f2dd1,0x952ccea4,0x8d05f134,0x6dd40ded,0xb0bbe25b,
    0xeec8b73d,0xd96f6ea1,0x3d7d0b50,0x7d03d7d0,0x43d7d03d,0xdf73efe9,
    0x1c81b0fd,0xdf7b9a01,0x4074d7e4,0xe8a776c6,0x5df169ef,0x3617f7cc,
    0x89bbbf20,0x777c4756,0x3be20d83,0xf12ccea2,0x1ff6c45d,0x320e8b20,
    0x2cd2a0de,0xfd8d3036,0x2fc5d45d,0x150b11b1,0xf1750360,0x541d86cb,
    0x67544dce,0x26e7544d,0x2a1373aa,0x81b00a80,0x50d10d1c,0x86880540,
    0x6c5a201c,0x216b6588,0x2219300d,0x3aac4755,0x223620d8,0xd8837b25,
    0x01644588,0x776c0020,0x883bf60d,0x3604c440,0x3bf25b9e,0x0101c86e,
    0x30cb73db,0x23f96e88,0x223f96e8,0x3a23f96e,0x06443f96,0x3bfa60e4,
    0x44fddf73,0x406442de,0x82dd80c8,0x323bb00c,0x8e726eef,0xc802efe8,
    0x27f26e9f,0x4bbfa26e,0xc806eefc,0x13b26eef,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x09980407,0x1e5c1454,0x1110c422,0x41909383,0x004c43ca,0x0000e6a0,
    0x31070595,0xab828a81,0x32a04c41,0x28a85703,0x28a85570,0x55703998,
    0x2b8000a8,0x20710188,0x43880061,0x2620028a,0x10e40500,0x1b88db9b,
    0xd74d8350,0x44f77ae1,0x261f8111,0x70aa6099,0x41701bdd,0x3b21ede9,
    0x502a660e,0x1b885530,0x154c1444,0xb9013331,0xca80dc41,0x1a80dc42,
    0x88182988,0x144c5ede,0x1307b3ae,0x7457d9d0,0x3710505e,0x54c5dd90,
    0x07f7ec42,0x28ae1333,0x443fbf62,0x58ae1ece,0xb7bac566,0xbf910f8b,
    0x88fa3323,0x0eec8756,0x56dd2a3a,0x43bf915c,0x37b20eec,0x6643bb20,
    0x877643e8,0x3b24dceb,0x906f644e,0xe8cc89dd,0x322775c3,0x13bae0de,
    0xeeb811b5,0xb9622264,0x3c4aa4ee,0xdd907ae6,0x5f42f745,0x7717ba0a,
    0x1cfc88f2,0x2e17911b,0x5895c793,0x68e658ae,0xb03a1af2,0xac475588,
    0x972b6e3a,0x2ef6e936,0x32b6e2c2,0x6dd66975,0x8eab15ca,0x3b15cadb,
    0x725cee53,0x4b9dd669,0x5263aac4,0x9acd2e48,0x982a8914,0x7776c914,
    0x0d922937,0x41dada9a,0x3ae60abe,0x98f6a621,0x1e4ae1eb,0xf517906c,
    0x8363c95c,0x99636ae6,0x40fc4b13,0x3aac4581,0xdb9b67f2,0x933f52bb,
    0x8b13b762,0x2772bbdb,0x2577b768,0x5edc7558,0x5c5df12b,0x689dc951,
    0x2b112a37,0x2e08e63a,0x208e6d13,0x8e60effa,0x39a4cea0,0x4cb33a82,
    0x2a626fee,0x43b5b53d,0x5b51edf9,0x1ff6c43b,0x9ddd106c,0x751ff6c4,
    0x2edcd966,0x4161edb2,0x6fee8584,0x76ec4098,0x40ec3c84,0x8a76ec45,
    0xdbb11eed,0xb137f749,0x223629db,0x23ffdb15,0xdb11eed8,0x6fee83ff,
    0xdb126f6c,0x426f6c3d,0xc89bdb02,0x137b60de,0x36101bd9,0x263dbf31,
    0x21c86fee,0xc886fee9,0x00a80d82,0x0dec8591,0x0efd8000,0x10bbfa20,
    0xb0080e40,0x3a20881b,0x008042ef,0x64080201,0x10046eef,0x00010020,
    0x01910002,0x00000000,0x05c01008,0x444ec804,0x40e42efe,0x000004ec,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x0f2a0000,0x07220262,0x19105280,0x350006a0,
    0x518e0887,0x0e440988,0x2605c0d4,0x4c137102,0x57000002,0x81c88518,
    0x40014c1a,0x300882bc,0x2202620a,0x0e03501c,0x0ccc05cc,0x44621c64,
    0x06609981,0x14541d4c,0xa818c0aa,0xdb105028,0x540a81dd,0xa98318a2,
    0x00c14543,0x3b660303,0xdd902ae0,0x0ef7743f,0x5418c4a8,0x0980c428,
    0x54c2775c,0x06302a80,0x0a2a0ea6,0x5d03100c,0x41dec88b,0xed9ec819,
    0x22db9d10,0x746642fd,0xe8977643,0x3a3321ff,0xc8fa3323,0x64ae3e8c,
    0xf8977643,0x06f642ff,0x6f641bd9,0xec837b20,0x87d1990d,0x272e2dca,
    0xb312a771,0x4eec8b11,0xdd907764,0xd9077641,0x2245261d,0x7fc42fd8,
    0x742f742f,0xe85ee85e,0x445ee85e,0x883705cd,0x489d42fd,0x16ee38ae,
    0x57d0eab1,0x56216641,0x11d5623a,0x792b8eab,0x0aa0abe8,0x34bacd2e,
    0x4bacd2eb,0x8acd2eb3,0x646cc755,0x9d479714,0x2cc74c4b,0xadb92e77,
    0x2b95b75c,0x5b75cadb,0xb808e6b9,0x7302a85b,0x41eb983d,0x75cc1eb9,
    0xb10f5cc1,0x0dc263b3,0x44ea2ddc,0x75740364,0x311d5620,0x0b7627b5,
    0x5588eab1,0x223aac47,0x2a623fed,0x4ee0aa3d,0x5da27768,0xb44eed13,
    0x5562d13b,0x321d4ee3,0x3137b21a,0xa8dc3bdd,0x5caef6e4,0x77b72bbd,
    0xd8aef6e5,0x0eae84de,0x6d6d4154,0xa876b6a1,0x2b6a1dad,0x876b6a1d,
    0x257499d8,0x20eae81c,0x31dc7349,0xdd133366,0x0f6fccdf,0xfee8bdd1,
    0x3a37f746,0x22c886fe,0x3a21edf9,0x3ddb10ee,0x6c47bb62,0x3ddb11ee,
    0xee87bb62,0x0377626f,0xa8930199,0x3ffdb104,0x6c53b762,0x9dbb14ed,
    0x3913b762,0x88999b30,0xfdd30eee,0x337f74cd,0x774cdfdd,0x9bfba66f,
    0xdd31edfc,0x8999b30b,0x776c0ded,0x107f2dd4,0x02010040,0x75c02008,
    0x08040104,0x80402010,0x40000100,0x0fb61ee8,0x80402008,0x202e0100,
    0x0103f96e,0x80200802,0x80000200,0x0003f96e,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x05910735,0x09981713,0x82260164,0x01cdc39a,0x20b2a071,0x8245c0a8,
    0x99910200,0x64c245c3,0xcc8b2e62,0x9910080c,0x05950183,0x88591071,
    0x2e164c2c,0x40910029,0x2033102a,0x402ea28a,0x204c4098,0x47d19902,
    0x65202e0a,0xc897b3a0,0xd01dc6dc,0xb80b87d9,0x44440a00,0x30f6741a,
    0x5d644133,0x6d5cc582,0x54133312,0x899b309d,0x5d6442ae,0x9d144642,
    0x42c9c83d,0x21d9e832,0x367a2d9e,0x3a970e21,0x1c410e3b,0x4406f541,
    0x4c08e41b,0xd71d4c2a,0xd8eab107,0xab88bdd0,0x4dd1550d,0xbdd30a2b,
    0x90c46c43,0x3a3321bd,0x22f6f5c3,0x460ed8ed,0x43bf913b,0x7443abbc,
    0x9d70e809,0x95156c9b,0x643df899,0x332a3cb9,0x542c4aa0,0x897bb61d,
    0x24bb4754,0x11fa1dae,0x4e4436ab,0x2e3262c8,0x3f416644,0xfd132aa6,
    0xdef88fd0,0x491d5620,0x32a21eb9,0x4b3d1b0a,0xacc3b88d,0xb8f6d458,
    0x1d562b34,0x987b3ae6,0x0dc848ce,0x4d655c2c,0x889bfb51,0xf8a67625,
    0x513ae2cc,0x331dc571,0x06cb2766,0x2ee3d70d,0x1d5266ea,0x7ef49fd7,
    0x1d5622c0,0x2579b931,0x3a66bdb9,0xdb88b014,0x88b0586a,0x3be23a8e,
    0x1dada86f,0x75c76ae2,0x2a2ae49a,0x94cd2cc6,0x45a27749,0x75744755,
    0x2b6e60bc,0x790b0184,0x2e0b0775,0x1d0bbe23,0x7304c891,0x221d5ce4,
    0x166755bc,0x68ecba4c,0x32215da2,0x0b0eab11,0x2288bfdb,0xb9722e1b,
    0x270b0d1d,0x88b0585d,0x006c4755,0x158dfdd3,0xd106f75c,0xeefe89dd,
    0x447bbaa2,0x3fba1eed,0x0f77f6c6,0x1909f173,0x377910b0,0xd8836070,
    0x07baa588,0x06f74c99,0x8c437791,0xd306f645,0x3bbea3dd,0x3b6275c1,
    0xe98776c3,0xdc8003ef,0xdf70fb81,0x1f7f4cfd,0xefe987dc,0x2e7dfd33,
    0x801c6d8f,0x01c79300,0x20100400,0xb0040100,0xd100973f,0x3ae005df,
    0x77e405ee,0x3cda806e,0x1e6c4000,0x01150200,0x00004000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x05300000,0x82e660a6,0x0ea09998,0x31990700,0x33000662,0x22309901,
    0x1901c880,0x20c01988,0x50710198,0x9a809981,0x52e2b983,0x4199983e,
    0x2088444b,0x01301198,0x44449071,0x302e6608,0x00333003,0x86cb6400,
    0x20d40502,0x22a6dfdc,0x13177641,0x3aa31d30,0x20dec80d,0x546982ba,
    0x28a84d9e,0x3dbd9010,0x3b22f76c,0x098141ed,0x05c0b7a6,0x5588aba2,
    0x1edee887,0x976f71a6,0x66459dea,0x04080285,0xa803606a,0x3ae1edee,
    0x76f5c5eb,0x3a165a25,0x12f6f447,0xac5cbdbd,0x2afa1fa5,0x206c1fa0,
    0x59a5c49c,0x1b01bdd7,0xb1bb7ee5,0x50d03aeb,0x755dd669,0xf159a546,
    0x3ffe25ff,0xf8977762,0x2213a2ff,0x779b0755,0x2f20dd81,0x7418e40e,
    0x206f75c0,0x3bae1025,0x176ee40d,0x1d05de5a,0x75cc3d9f,0x41af21ec,
    0x5408da85,0x0675408d,0x87b53116,0x13390b05,0x2d1689dc,0xf128d83a,
    0xaeba87fd,0xa7741f45,0xe8d1d976,0x22d54d4e,0x4686c5aa,0xd824c5aa,
    0x1fde85fe,0x13ea17dc,0x3dd70472,0x87c3ab44,0x07568840,0xcac4b157,
    0x0bceac1f,0x4179d5d1,0x550b02f8,0x174c0aa0,0x07b7e62c,0x2c72160b,
    0x5623ddb1,0xaac4583a,0x11ff7c43,0x99cc371b,0x983ddf55,0x046dcb33,
    0x6eec11b7,0x93046dc3,0x3260ca80,0x216619ad,0x8b1c83ea,0x1d56211c,
    0xac42047e,0x4589b83a,0x2e19ac8e,0x3b61eede,0x21a21eef,0xff53efe9,
    0x077fd41d,0xefe997f2,0x3bfa6043,0x2e7dfd33,0x64087eef,0x3fa66d9f,
    0x0db1f73e,0xcda83d3d,0x5437bf20,0x1bdf9008,0x7cd3bbe6,0x85df34ee,
    0xfd14eef9,0x7ef40809,0x7dfd33fe,0x3bee37dc,0x57bbea7e,0x8646d9fc,
    0x3f908889,0x8d5bd0db,0x103fefd8,0x07764020,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x3a899000,0x05712000,0x1dcc0c54,0x20009980,
    0x33000198,0x2003b620,0x01260198,0x23109998,0x20446208,0x11983118,
    0x2622ca83,0x31126099,0x21999883,0x13109998,0x44220011,0x4c430441,
    0x98111881,0x7d199099,0xd11a60d8,0x205f7640,0x06302cc2,0xeec855b1,
    0xb89bbd30,0x3b7ae4ee,0x6c42f741,0x200ba82f,0x03d9d75b,0x4406dcfd,
    0x36f72fce,0x3a2edee5,0x57a0fb8d,0x3b3b31fb,0x645b7f72,0x98f6f646,
    0x9d70eccf,0x17abae9b,0x3b63b616,0xa8fdd7a0,0x6cf540de,0x4477f225,
    0x85808755,0x4d2a3fae,0x3be23f46,0x3a23f40e,0x32b6e2ff,0x29334365,
    0x22556248,0x5bb81eb9,0x75429fa8,0x512e3623,0x20cea8d9,0x35e459b8,
    0x74e43664,0x43aacc69,0x35672590,0xe9667316,0x33b10aa8,0x2c133625,
    0x3224674c,0x40e47e9e,0x4583a8d8,0x0b007558,0xd13b83df,0x075688b0,
    0x7b70930b,0x3276ec57,0x1ddf1047,0x740ed6d4,0x1fd740ea,0xfef883f9,
    0x6c1a7a23,0xf103a20e,0x9707f103,0x1d1d0b9d,0x160b0990,0x89dd3473,
    0x3be22ef8,0x32f7f543,0xebc895b7,0x2208e46c,0xe8583fef,0x160746fe,
    0xddb10f7a,0x75588b03,0xb10930b0,0x404ec9db,0x23624ded,0x1bfba62e,
    0xec8999b3,0xb11f544f,0x43fbb334,0x44f40cea,0x1ead82c4,0x5427d7d4,
    0x581ec45d,0x493398b0,0x588d8836,0x216036b1,0x4e44f8b9,0x258e468c,
    0x20b07558,0x77f4c100,0x021bed73,0x7e4fbfa6,0x3bfa66d9,0x103dfd33,
    0x2002ef98,0x041e8afc,0x083f96e8,0xeefcadc0,0x1971fc84,0x6c9ddf30,
    0x363f60ef,0x8265e60f,0x1777dc1f,0x3fa21dfb,0x21bdf92e,0x77e42efa,
    0x1d35f96e,0x4b9fd858,0xf71fcb74,0x74fe4fdd,0x00bbfa26,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00e05000,0xa8821000,0x7c4ea29a,0x75d762ff,0x81dd1db0,
    0x22f47d43,0x5c46e609,0xf3d52941,0xe82224c9,0x313144c7,0xeee80103,
    0x4bddd76e,0x306e62b9,0x4ccc3501,0x8c30e099,0x37777622,0x005ddd12,
    0x00000000,0x5106f75c,0xddd0035d,0x2f6f449d,0xecf87aba,0x45aa8221,
    0x5a25aeba,0x2e2f5c2c,0x896ae0de,0x4ec52a38,0x120f7a0d,0x346c583b,
    0x4390b272,0x4cc5a00e,0x9751d209,0x432676cc,0x22ccccc8,0x418c3618,
    0x00008888,0x00000000,0xf90ead10,0x97bbae1b,0x6d468d9c,0x5a1fcc08,
    0x8db8221c,0x70ffbe20,0x457588d7,0x96ee0ddc,0x269311da,0x173e0d9d,
    0x22c2c1b1,0x43bbc894,0x6dd6000b,0xa8ae65dd,0x0000504b,0x00000000,
    0x00000000,0x5e43aac4,0xd1b39005,0x3d5d02a8,0x0d8bfbe2,0x9e89ddf3,
    0x8017c41e,0x20c6e9fc,0x44131198,0xd93f538b,0x74c104c4,0x266603ef,
    0x00000001,0x00000000,0x00000000,0x90000000,0x1c00db3f,0xa975ee74,
    0x20840eff,0x05118888,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
};

static signed short stb__courier_bold_10_latin_ext_x[560]={ 0,1,1,0,0,0,0,2,2,1,0,0,1,0,
1,0,0,0,0,0,0,0,0,0,0,0,1,1,-1,0,0,0,0,-1,0,0,0,0,0,0,0,0,0,0,
0,-1,-1,0,0,0,0,0,0,0,-1,-1,0,0,0,2,0,1,0,-1,1,0,-1,0,0,0,0,0,0,0,
0,0,0,-1,0,0,-1,0,0,0,0,0,0,-1,0,0,0,1,2,1,0,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,0,0,0,
2,0,1,-1,1,0,-1,0,-1,-1,1,0,1,1,1,0,0,1,1,1,1,0,0,-1,0,0,-1,-1,-1,-1,
-1,-1,-1,0,0,0,0,0,0,0,0,0,-1,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,0,
-1,0,-1,0,-1,0,0,0,0,0,0,0,0,0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,-1,0,-1,0,-1,0,-1,0,0,0,0,0,0,0,0,-1,-1,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,-1,0,0,
0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,1,1,1,
1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,-1,0,-1,-1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1, };
static signed short stb__courier_bold_10_latin_ext_y[560]={ 7,1,1,0,0,1,2,1,1,1,1,1,5,4,
5,0,1,1,1,1,1,1,1,1,1,1,3,3,1,3,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,8,1,2,1,2,1,2,1,2,1,1,
1,1,1,2,2,2,2,2,2,2,1,3,3,3,3,3,3,1,1,1,3,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,7,3,0,1,2,1,
1,1,1,1,1,3,4,4,1,0,0,0,1,1,1,3,1,3,6,1,1,3,1,1,1,3,-1,-1,-1,0,
0,-1,1,1,-1,-1,-1,0,-1,-1,-1,0,1,0,-1,-1,-1,0,0,2,1,-1,-1,-1,0,-1,1,1,1,1,
1,1,1,0,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,1,1,1,1,1,1,1,
0,1,-1,1,1,2,-1,1,-1,1,-1,1,-1,1,-1,1,1,1,0,1,-1,1,-1,1,1,2,-1,1,-1,1,
-1,1,-1,1,1,0,-1,-1,1,1,0,1,0,1,-1,1,1,1,-1,3,1,1,-1,1,1,1,3,-1,-1,1,
1,1,1,1,1,1,1,-1,1,1,2,-1,1,1,1,2,0,1,-1,1,-1,1,1,2,-1,1,1,2,-1,1,
-1,1,-1,1,1,2,-1,1,1,1,-1,1,1,1,0,1,0,1,-1,1,-1,0,-1,1,1,3,-1,1,-1,1,
0,-1,1,-1,1,-1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,1,1,1,1,0,2,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1,1,-1,1,-1,
1,-1,1,-1,0,-1,-1,-1,-1,-1,-1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,-2,-1,-1,1,-1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1, };
static unsigned short stb__courier_bold_10_latin_ext_w[560]={ 0,3,4,5,5,5,5,2,3,3,5,5,3,5,
3,5,5,5,5,5,5,5,5,5,5,5,3,3,6,6,6,5,5,7,6,5,5,5,6,6,6,5,6,6,
6,7,7,6,6,6,6,5,5,6,7,7,6,6,5,3,5,3,5,7,3,6,7,6,6,5,6,6,6,5,
5,6,5,7,6,5,7,6,6,5,6,6,6,7,6,6,5,3,2,3,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,3,5,5,5,6,
2,5,4,7,4,5,6,5,7,7,4,5,3,3,3,6,5,3,3,3,4,6,6,7,6,5,7,7,7,7,
7,7,7,5,5,5,5,5,5,5,5,5,6,7,6,6,6,6,6,5,6,6,6,6,6,6,6,5,6,6,
6,6,6,6,7,6,5,5,5,5,5,5,5,5,5,6,5,5,5,5,5,5,6,6,6,6,6,6,7,6,
7,6,7,6,7,6,5,6,5,6,5,6,5,6,5,7,6,6,5,5,5,5,5,5,6,5,5,5,6,6,
6,6,6,6,6,6,6,6,6,6,5,5,5,5,5,5,5,5,5,5,6,6,6,5,6,6,6,6,5,6,
5,6,5,6,5,6,5,7,6,7,6,7,6,7,5,5,6,5,6,5,6,5,7,7,6,6,6,6,6,6,
5,5,5,5,5,5,5,5,5,6,5,6,5,6,6,6,6,6,6,6,6,6,6,6,6,6,7,7,6,6,
6,5,5,5,5,5,5,6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5,5,5,5,5,6,6,5,5,5,5,5,5,5,5,5,5,5,5,5,6,6,5,5,5,
5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,7,6,5,5,6,
5,6,6,6,6,6,6,6,6,6,6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5,5,5,5,5,7,6,7,7,6,6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5, };
static unsigned short stb__courier_bold_10_latin_ext_h[560]={ 0,7,4,8,9,7,6,4,8,8,5,6,4,1,
3,9,7,6,6,7,6,7,7,7,7,7,5,5,6,3,6,7,7,6,6,7,6,6,6,7,6,6,7,6,
6,6,6,7,6,8,6,7,6,7,6,6,6,6,6,8,8,8,4,2,2,6,7,6,7,6,6,7,6,6,
8,6,6,5,5,6,7,7,5,6,7,5,4,4,4,6,4,8,8,8,3,6,6,6,6,6,6,6,6,6,
6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,0,6,8,6,5,6,
8,7,2,7,3,4,3,1,7,2,4,7,4,4,2,6,7,2,3,4,3,4,6,6,6,6,8,8,8,7,
7,8,6,8,8,8,8,7,8,8,8,7,6,7,9,9,9,8,8,5,7,9,9,9,8,8,6,7,7,7,
7,7,7,8,6,7,7,7,7,7,6,6,6,6,7,6,7,7,7,7,7,5,6,7,7,7,7,8,8,8,
7,7,8,7,8,7,9,7,9,7,9,7,9,7,8,7,6,7,7,7,8,7,8,7,8,7,8,7,9,8,
9,8,9,8,8,9,8,8,6,6,7,6,7,6,8,6,8,8,8,4,7,8,9,8,8,8,4,8,8,8,
8,6,6,6,6,6,6,8,6,8,7,8,6,6,7,7,8,7,9,7,9,7,6,6,8,6,8,7,8,6,
9,7,9,7,8,7,9,7,9,9,8,7,6,7,8,7,8,7,9,7,9,8,9,7,8,6,8,6,8,8,
7,8,6,8,6,8,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,7,6,6,8,6,6,6,
6,6,6,6,6,6,6,6,6,6,7,6,6,6,6,6,6,6,6,6,6,6,6,6,6,8,6,6,6,6,
6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,8,7,8,6,9,
7,9,7,9,8,9,9,9,9,9,9,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,
6,6,6,6,6,6,6,6,6,6,9,9,8,7,9,7,6,6,6,6,6,6,6,6,6,6,6,6,6,6,
6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,
6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,
6,6,6,6,6,6, };
static unsigned short stb__courier_bold_10_latin_ext_s[560]={ 255,55,125,190,165,113,89,253,9,83,8,
202,115,208,141,1,161,170,158,148,109,121,109,97,173,167,251,47,95,152,115,
71,8,81,102,250,176,189,182,21,231,238,228,195,224,216,208,141,53,37,67,
36,164,243,150,142,135,128,122,216,190,251,72,179,187,74,28,60,134,47,40,
50,27,21,145,7,1,20,1,236,126,119,28,211,180,244,65,57,78,172,51,
227,231,33,169,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,
127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,255,123,66,
110,41,96,80,135,195,127,164,98,145,208,83,200,85,91,90,94,175,246,115,
191,137,111,159,130,200,192,220,16,87,95,103,172,235,111,82,171,137,229,184,
103,8,196,223,77,22,63,14,97,111,28,235,35,14,125,139,152,248,26,55,
222,215,208,201,194,187,168,164,165,159,153,147,141,179,217,205,34,107,242,94,
88,82,76,70,14,29,100,43,36,29,161,175,183,1,248,240,235,1,222,171,
208,21,195,190,181,84,168,20,153,36,140,134,128,131,115,52,103,202,91,242,
79,209,248,132,21,244,1,14,202,216,209,1,239,97,233,59,227,143,214,149,
203,234,119,35,177,230,165,158,151,104,138,132,125,119,103,223,229,249,207,90,
72,116,58,72,44,133,140,42,85,13,109,237,147,1,175,148,156,220,185,209,
188,196,192,196,229,177,16,155,242,159,57,146,183,125,63,199,22,98,9,83,
65,216,161,223,49,8,121,29,75,21,8,118,111,48,15,43,43,49,56,62,
68,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,202,127,127,70,
127,127,127,127,127,127,127,127,127,127,127,127,127,215,14,127,127,127,127,127,
127,127,127,127,127,127,127,127,76,185,127,127,127,127,127,127,127,127,127,127,
127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,90,1,
105,179,118,42,104,48,90,36,77,70,63,56,49,42,127,127,127,127,127,127,
127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,
127,127,127,34,27,62,55,7,154,127,127,127,127,127,127,127,127,127,127,127,
127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,
127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,
127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,
127,127,127,127,127,127,127,127,127, };
static unsigned short stb__courier_bold_10_latin_ext_t[560]={ 1,30,69,21,1,39,62,47,21,21,69,
62,69,69,69,1,47,62,62,47,62,47,47,47,47,47,62,69,62,69,62,
47,47,62,62,39,62,62,62,47,62,62,39,62,62,62,62,47,62,21,62,
47,62,39,62,62,62,62,62,11,11,1,69,69,69,62,47,62,39,62,62,
39,62,62,21,62,62,69,69,54,39,39,69,54,39,62,69,69,69,55,69,
11,11,21,69,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,
55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,1,55,21,
55,69,55,21,47,69,47,69,69,69,69,47,69,69,47,69,69,69,47,47,
69,69,69,69,69,47,47,47,55,21,21,21,39,39,21,55,21,11,21,21,
47,30,21,21,47,55,47,1,1,1,30,21,69,47,1,1,1,11,21,55,
39,39,39,39,39,39,11,55,39,39,39,39,39,54,54,54,62,39,54,39,
39,39,39,39,69,55,39,39,39,39,11,11,11,39,30,11,30,21,30,1,
30,1,30,1,30,1,30,21,30,55,30,30,30,11,30,21,30,21,30,21,
30,1,21,1,30,1,30,30,1,21,21,55,47,30,47,30,47,11,47,11,
11,11,69,30,21,1,21,21,21,69,21,21,21,21,55,54,54,54,47,55,
21,55,21,30,21,55,55,30,30,21,30,1,30,11,30,55,55,11,54,11,
30,11,54,1,30,1,39,11,30,1,39,1,1,11,39,54,39,11,39,11,
30,1,30,1,11,11,30,11,55,11,55,11,11,30,11,55,11,55,11,55,
55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,30,55,55,11,
55,55,55,55,55,55,55,55,55,55,55,55,55,30,62,55,55,55,55,55,
55,55,55,55,55,55,55,55,11,47,55,55,55,55,55,55,55,55,55,55,
55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,11,47,
11,47,1,47,1,47,1,11,1,1,1,1,1,1,55,55,55,55,55,55,
55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,
55,55,55,1,1,11,47,1,47,55,55,55,55,55,55,55,55,55,55,55,
55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,
55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,
55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,
55,55,55,55,55,55,55,55,55, };
static unsigned short stb__courier_bold_10_latin_ext_a[560]={ 85,85,85,85,85,85,85,85,
85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,
85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,
85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,
85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,
85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,
85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,
85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,
85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,
85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,
85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,
85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,
85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,
85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,
85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,
85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,
85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,
85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,
85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,
85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,
85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,
85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,
85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,
85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,
85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,
85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,
85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,
85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,
85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,
85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,
85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,
85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,
85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,
85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,
85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,
85,85,85,85,85,85,85,85, };

// Call this function with
//    font: NULL or array length
//    data: NULL or specified size
//    height: STB_FONT_courier_bold_10_latin_ext_BITMAP_HEIGHT or STB_FONT_courier_bold_10_latin_ext_BITMAP_HEIGHT_POW2
//    return value: spacing between lines
static void stb_font_courier_bold_10_latin_ext(stb_fontchar font[STB_FONT_courier_bold_10_latin_ext_NUM_CHARS],
                unsigned char data[STB_FONT_courier_bold_10_latin_ext_BITMAP_HEIGHT][STB_FONT_courier_bold_10_latin_ext_BITMAP_WIDTH],
                int height)
{
    int i,j;
    if (data != 0) {
        unsigned int *bits = stb__courier_bold_10_latin_ext_pixels;
        unsigned int bitpack = *bits++, numbits = 32;
        for (i=0; i < STB_FONT_courier_bold_10_latin_ext_BITMAP_WIDTH*height; ++i)
            data[0][i] = 0;  // zero entire bitmap
        for (j=1; j < STB_FONT_courier_bold_10_latin_ext_BITMAP_HEIGHT-1; ++j) {
            for (i=1; i < STB_FONT_courier_bold_10_latin_ext_BITMAP_WIDTH-1; ++i) {
                unsigned int value;
                if (numbits==0) bitpack = *bits++, numbits=32;
                value = bitpack & 1;
                bitpack >>= 1, --numbits;
                if (value) {
                    if (numbits < 3) bitpack = *bits++, numbits = 32;
                    data[j][i] = (bitpack & 7) * 0x20 + 0x1f;
                    bitpack >>= 3, numbits -= 3;
                } else {
                    data[j][i] = 0;
                }
            }
        }
    }

    // build font description
    if (font != 0) {
        float recip_width = 1.0f / STB_FONT_courier_bold_10_latin_ext_BITMAP_WIDTH;
        float recip_height = 1.0f / height;
        for (i=0; i < STB_FONT_courier_bold_10_latin_ext_NUM_CHARS; ++i) {
            // pad characters so they bilerp from empty space around each character
            font[i].s0 = (stb__courier_bold_10_latin_ext_s[i]) * recip_width;
            font[i].t0 = (stb__courier_bold_10_latin_ext_t[i]) * recip_height;
            font[i].s1 = (stb__courier_bold_10_latin_ext_s[i] + stb__courier_bold_10_latin_ext_w[i]) * recip_width;
            font[i].t1 = (stb__courier_bold_10_latin_ext_t[i] + stb__courier_bold_10_latin_ext_h[i]) * recip_height;
            font[i].x0 = stb__courier_bold_10_latin_ext_x[i];
            font[i].y0 = stb__courier_bold_10_latin_ext_y[i];
            font[i].x1 = stb__courier_bold_10_latin_ext_x[i] + stb__courier_bold_10_latin_ext_w[i];
            font[i].y1 = stb__courier_bold_10_latin_ext_y[i] + stb__courier_bold_10_latin_ext_h[i];
            font[i].advance_int = (stb__courier_bold_10_latin_ext_a[i]+8)>>4;
            font[i].s0f = (stb__courier_bold_10_latin_ext_s[i] - 0.5f) * recip_width;
            font[i].t0f = (stb__courier_bold_10_latin_ext_t[i] - 0.5f) * recip_height;
            font[i].s1f = (stb__courier_bold_10_latin_ext_s[i] + stb__courier_bold_10_latin_ext_w[i] + 0.5f) * recip_width;
            font[i].t1f = (stb__courier_bold_10_latin_ext_t[i] + stb__courier_bold_10_latin_ext_h[i] + 0.5f) * recip_height;
            font[i].x0f = stb__courier_bold_10_latin_ext_x[i] - 0.5f;
            font[i].y0f = stb__courier_bold_10_latin_ext_y[i] - 0.5f;
            font[i].x1f = stb__courier_bold_10_latin_ext_x[i] + stb__courier_bold_10_latin_ext_w[i] + 0.5f;
            font[i].y1f = stb__courier_bold_10_latin_ext_y[i] + stb__courier_bold_10_latin_ext_h[i] + 0.5f;
            font[i].advance = stb__courier_bold_10_latin_ext_a[i]/16.0f;
        }
    }
}

#ifndef STB_SOMEFONT_CREATE
#define STB_SOMEFONT_CREATE              stb_font_courier_bold_10_latin_ext
#define STB_SOMEFONT_BITMAP_WIDTH        STB_FONT_courier_bold_10_latin_ext_BITMAP_WIDTH
#define STB_SOMEFONT_BITMAP_HEIGHT       STB_FONT_courier_bold_10_latin_ext_BITMAP_HEIGHT
#define STB_SOMEFONT_BITMAP_HEIGHT_POW2  STB_FONT_courier_bold_10_latin_ext_BITMAP_HEIGHT_POW2
#define STB_SOMEFONT_FIRST_CHAR          STB_FONT_courier_bold_10_latin_ext_FIRST_CHAR
#define STB_SOMEFONT_NUM_CHARS           STB_FONT_courier_bold_10_latin_ext_NUM_CHARS
#define STB_SOMEFONT_LINE_SPACING        STB_FONT_courier_bold_10_latin_ext_LINE_SPACING
#endif

