// Font generated by stb_font_inl_generator.c (4/1 bpp)
//
// Following instructions show how to use the only included font, whatever it is, in
// a generic way so you can replace it with any other font by changing the include.
// To use multiple fonts, replace STB_SOMEFONT_* below with STB_FONT_consolas_22_latin1_*,
// and separately install each font. Note that the CREATE function call has a
// totally different name; it's just 'stb_font_consolas_22_latin1'.
//
/* // Example usage:

static stb_fontchar fontdata[STB_SOMEFONT_NUM_CHARS];

static void init(void)
{
    // optionally replace both STB_SOMEFONT_BITMAP_HEIGHT with STB_SOMEFONT_BITMAP_HEIGHT_POW2
    static unsigned char fontpixels[STB_SOMEFONT_BITMAP_HEIGHT][STB_SOMEFONT_BITMAP_WIDTH];
    STB_SOMEFONT_CREATE(fontdata, fontpixels, STB_SOMEFONT_BITMAP_HEIGHT);
    ... create texture ...
    // for best results rendering 1:1 pixels texels, use nearest-neighbor sampling
    // if allowed to scale up, use bilerp
}

// This function positions characters on integer coordinates, and assumes 1:1 texels to pixels
// Appropriate if nearest-neighbor sampling is used
static void draw_string_integer(int x, int y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0, cd->t0); glVertex2i(x + cd->x0, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t0); glVertex2i(x + cd->x1, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t1); glVertex2i(x + cd->x1, y + cd->y1);
        glTexCoord2f(cd->s0, cd->t1); glVertex2i(x + cd->x0, y + cd->y1);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance_int;
    }
    glEnd();
}

// This function positions characters on float coordinates, and doesn't require 1:1 texels to pixels
// Appropriate if bilinear filtering is used
static void draw_string_float(float x, float y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0f, cd->t0f); glVertex2f(x + cd->x0f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t0f); glVertex2f(x + cd->x1f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t1f); glVertex2f(x + cd->x1f, y + cd->y1f);
        glTexCoord2f(cd->s0f, cd->t1f); glVertex2f(x + cd->x0f, y + cd->y1f);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance;
    }
    glEnd();
}
*/

#ifndef STB_FONTCHAR__TYPEDEF
#define STB_FONTCHAR__TYPEDEF
typedef struct
{
    // coordinates if using integer positioning
    float s0,t0,s1,t1;
    signed short x0,y0,x1,y1;
    int   advance_int;
    // coordinates if using floating positioning
    float s0f,t0f,s1f,t1f;
    float x0f,y0f,x1f,y1f;
    float advance;
} stb_fontchar;
#endif

#define STB_FONT_consolas_22_latin1_BITMAP_WIDTH         256
#define STB_FONT_consolas_22_latin1_BITMAP_HEIGHT        152
#define STB_FONT_consolas_22_latin1_BITMAP_HEIGHT_POW2   256

#define STB_FONT_consolas_22_latin1_FIRST_CHAR            32
#define STB_FONT_consolas_22_latin1_NUM_CHARS            224

#define STB_FONT_consolas_22_latin1_LINE_SPACING          14

static unsigned int stb__consolas_22_latin1_pixels[]={
    0x00012e97,0x8800cc40,0x073332e0,0x0262ba88,0x93333220,0x26000aba,
    0x26000e44,0x00000000,0x098006a0,0x98800098,0x00088019,0x44099988,
    0xc8076a2d,0x880531de,0xe86600cc,0x25f98fd7,0xff3002fc,0x21ff5005,
    0x302ffffe,0x13e69fff,0x9ffffe60,0x9802fffb,0x003fa0ff,0x00ffffee,
    0x0db00fe2,0x6402f880,0x3e3efffe,0x3ff62005,0xffd503ff,0xffda809f,
    0x2fd45fff,0x2fb207f9,0x7403fefe,0x1ff107cd,0x3ea3f5fa,0x2600ff66,
    0xff7000ef,0x3a05f503,0x013e60bf,0xfa880fe6,0x20ff4407,0x5fec06f9,
    0x4c03fc88,0x802f402f,0xd100fc98,0x4bd999df,0x7fd001fc,0xdf903533,
    0xb01dfd99,0xbf75ffff,0x10144150,0x7c016541,0xff880f88,0x261fafd0,
    0x02a800c0,0x5f503b80,0x9f30df10,0xb007f300,0x827e403f,0x03f904fb,
    0x81fa80f9,0x04effeda,0x40ffffd5,0x7c4105fd,0x804f9804,0x1fec0ef9,
    0x45ffffea,0x0002205f,0x776c0011,0xbf43fe05,0x0000007e,0x82fa8000,
    0x04f983f9,0xfb803f98,0xd80df302,0x881fc42f,0x15f9302f,0x6efeffec,
    0xfbcefc85,0x006f985f,0xdf3003f6,0xf103fb00,0x7ffffc8f,0xffd50bf1,
    0xffea809f,0x8055004f,0x8bf5fa7f,0x443b605e,0x443b605e,0x06eeeeee,
    0x07f305f5,0x33bb29f3,0x2e00fe60,0x803fb02f,0x203e45f8,0x7fffd44e,
    0x3e6bf55f,0x2a1df302,0x17e43fef,0xd007f500,0x037c03df,0x7ffec3fb,
    0xfc8bf17f,0x80efebce,0xefebcefc,0x813fea00,0xb3f5fa7f,0xd8df305f,
    0x226f982f,0x07feeeee,0x07f305f5,0xfdbfd9f3,0x5c01fccd,0x007f882f,
    0xd914f8fd,0x7dcbb1bb,0xf939eeae,0x7ec03ea5,0xb1be3b21,0x06e8003f,
    0x067ff7dc,0x2fc817e2,0x45fffff2,0xb03be65f,0x40ef987f,0x3ff603fd,
    0xd7e9fe06,0x7dc2fd4f,0x7dc2fd43,0xf507e803,0xf305f505,0x997ec1df,
    0x83f9803f,0x3f9005fa,0x75fec7e6,0x43fe2d97,0x7bafdc5e,0x369f1be0,
    0x0003fa0f,0x57e603f7,0x3e61efe8,0xf98fee04,0x4bf17fff,0x47f881fd,
    0x07f881fd,0x203fbbf1,0x23f5fa7f,0x407f40ff,0x007f40ff,0x42fa83f4,
    0xef980fd8,0x3f9afcc0,0xfc81df00,0x2e7f7003,0x65ba5f57,0x227c7f56,
    0x106deff8,0xfc8fccbf,0x10003fe1,0x70bee0bf,0x813ea1ff,0x7ffdc2fb,
    0x037cbf17,0xb037c3fb,0xf77f503f,0xd189fe07,0x3e63fc8f,0x7cc7f905,
    0x2a0fd005,0x01bff32f,0x9b7c13e6,0xffb1003f,0x4c007f65,0xf9f2db5f,
    0x44bf2d95,0xfffd883f,0xf927cc0b,0x01fd17e4,0xf501f900,0x3e67f909,
    0x2207f205,0x22bf16cc,0x44bf205f,0x20bf205f,0xd06f88fd,0xdf31fa0f,
    0x6f9817e4,0x3f400bf2,0xfb912fa8,0x7c13e609,0x2e007f36,0x03fb1cdf,
    0xeaedbe20,0x5d729f16,0x4c05f33f,0x3ea2ffff,0x22fb97a4,0xf98002fd,
    0xf987fd04,0x7f40df14,0x26bf1000,0x4cfee04f,0x10fee04f,0x740ff4df,
    0x3fd0fd06,0x23fd01fe,0x41fa007f,0x80fc82fa,0x35f884f9,0x09f1007f,
    0x3e6005f7,0x7cd7ebd5,0x557e6bd2,0x7de7c00f,0x3e2bf11f,0x6fa87f22,
    0x220fb000,0x45f70dfe,0x06f881fe,0x27d57e20,0x13ea5f70,0x1fd42fb8,
    0x20bb07f7,0xfacfa87e,0x7d67d404,0x541fa004,0x983f982f,0xf34f984f,
    0x305f5007,0x53ee009f,0x47eebd4e,0x1eebfe2f,0x93ee5f10,0x7f41f76f,
    0x00827fc0,0x7e440bea,0x77dc5fdf,0x10017f40,0xc817e6bf,0x640bf31f,
    0xf10fec1f,0x1fa9700d,0x400feffc,0x2001fdff,0x305f507e,0xd09f307f,
    0x200fe61f,0x00df02fa,0xedaecbf6,0x20fbbfe9,0x4cbfeffa,0x4bf51f98,
    0x3e25d9fe,0xcdeff986,0x037c05ec,0x3603ffa6,0x04feccef,0x6f8afc40,
    0x37c43fa0,0x37c41fd0,0xe8ee07f4,0x3ff20fd7,0x0dff9006,0x5f507e80,
    0xff307f30,0x4c7fd759,0x02fa803f,0x4ff001fd,0xf97ff56d,0xfffb105f,
    0x88fa827d,0x3fbea3fe,0x6440bfa3,0x402dffff,0x2fd801fb,0x07dfff90,
    0x7f49f500,0x7f46f881,0x7d46f881,0x3ffeeeef,0xebf4bfea,0x005ff307,
    0xd000bfe6,0x260bea0f,0xffff983f,0x01fcc1df,0x3fc817d4,0x4f927d40,
    0xbf002608,0xfdfddfd0,0x99ff90bf,0x3f9009fd,0x4027c400,0x03f403fb,
    0x7dc5f900,0x2e17f40e,0x217f40ef,0xfffffffd,0x747fe26f,0x1be60fd7,
    0x4006f980,0x05f506f8,0x29f309f3,0x200fe600,0x07fa02fb,0x5f307fc4,
    0x5c1fc000,0x02deffed,0x00fbfffa,0x7ec00374,0x3ea23510,0x11fe400f,
    0xc99bf883,0xccefd86f,0x9dfb05fe,0x6f88bfd9,0x20883fa0,0x3fa0fd7e,
    0x00bfa002,0x3ea0bf50,0xf986f882,0x803f9804,0x3be201fd,0x5e83fe80,
    0x805f3000,0x139f005e,0x0027c400,0xfff89fcc,0xf8802fff,0x74c6feff,
    0x901effff,0xc807dffd,0xfa83effe,0xe80ff204,0x3aa62fd7,0x754c404f,
    0x44d5404f,0x5f501feb,0xf9873fa0,0x203f9804,0xfa806fb9,0xfa827dc5,
    0xa802e20d,0x4027c01f,0x130001f9,0xa98aa000,0x644002aa,0x55300cee,
    0x00022003,0x00fec011,0xebf40df3,0x007fff57,0x9007fff5,0xe87fffff,
    0xd102ffff,0x013e69ff,0xb9ffffe6,0xf9001eff,0x3ea02fc1,0x4c06ffef,
    0x400e400c,0x00000029,0x00000000,0x00000000,0x7e800000,0x002aa2fd,
    0x30005544,0x55501575,0x1a980155,0x55100351,0x00d4c555,0x980020c0,
    0x000000aa,0x00000000,0x00000000,0x00000000,0x3a000000,0x00000fd7,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00154aa0,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x13100000,
    0x0001ed98,0xe9803bb3,0xa8b6202e,0x0bba601d,0x0003db30,0x00003bb3,
    0x014c77b2,0x6401dd98,0xb30531de,0xbb30003d,0x01774c03,0x2603bb30,
    0x5b1001ed,0x3a600ed4,0x516c402e,0x0077443b,0x7f4407ec,0x0f7c4001,
    0x0bf77ea0,0x07f92fd4,0x00bf77ea,0x44003fd1,0x7fdc01ef,0x3fafb204,
    0xef8803fe,0x7f5f6401,0x3fd103fe,0x00f7c400,0x005fbbf5,0xe8803df1,
    0x25fa801f,0x37ea03fc,0x97ea02fd,0x0ffe63fc,0x2a80bf10,0x40055400,
    0x0a80aa2a,0x2a2a80a2,0x40055002,0x4fc400aa,0x541101f8,0x0155002c,
    0x01654110,0x15500154,0x00aa2a80,0x2a8002aa,0x01441500,0x5402a8aa,
    0x03760a20,0x08803f70,0x00004400,0x02200000,0x40000000,0x001f88f8,
    0x00000000,0x00000000,0x00000000,0x00000000,0x40dd0000,0x404fffea,
    0xd04fffea,0xfe9fe01f,0xfd50ff00,0x03fa09ff,0x201fd3fc,0x0bff907f,
    0x3609ff50,0xb17ea04f,0xfd1be0ff,0x81ffffff,0xfffffffe,0x7fffff40,
    0x9ff500ff,0x013fea00,0xa8027fd4,0x7ff404ff,0x2e0fffff,0xc817d403,
    0x0efebcef,0xfebcefc8,0xf807f40e,0x3fc03fa7,0x3faf3bf2,0xf807f40e,
    0x3fc03fa7,0x3f600310,0x01ff106f,0x7ffb07fa,0xccfe8df0,0x7f40cccc,
    0x40cccccc,0xccccccfe,0x00dffb00,0x6c01bff6,0xffb006ff,0xcccfe80d,
    0x01b60ccc,0x03be60fb,0x0ef987fb,0x03fa1fec,0x201fd3fc,0xb03be67f,
    0xf00fe87f,0x7f807f4f,0x1f7ff64c,0x03fbbf10,0x13ee17f2,0x1be1bff6,
    0x03f400fd,0xf8800fd0,0x7c401fdd,0x7c401fdd,0x7c401fdd,0x1fa01fdd,
    0x9f303f40,0x3e207f60,0x7c40fec7,0x7f807f47,0xb3fc03fa,0xe8ff103f,
    0x7f4ff00f,0xefc8ff00,0xf504ffdc,0x3e207f77,0x6c07f41f,0x237c2fbf,
    0x01fa007e,0x7d4007e8,0x7d403fbb,0x7d403fbb,0x7d403fbb,0x1fa03fbb,
    0x1f903f40,0x1fd81be0,0x21fd81be,0x74ff00fe,0x37cff00f,0x07f43fb0,
    0x403fa7f8,0x7fc40c7f,0x6f88fd80,0x3fb97ee0,0xf8df1fb0,0xfd003f46,
    0x2003f400,0x406f88fd,0x406f88fd,0x406f88fd,0x206f88fd,0x20fd007e,
    0x0bf105f8,0x05f897e4,0x00fe8bf2,0xf807f4ff,0x7e40bf17,0x3fc03fa2,
    0x01fe01fd,0x9be20fe4,0x27fa01fe,0x65f607f8,0x0fd1be2f,0xfd003f40,
    0xfd37c400,0xfe9be203,0x7f4df101,0x7f4df101,0x3a00fd01,0x2605f707,
    0x4cfee04f,0xe8fee04f,0x7f4ff00f,0x13e6ff00,0x03fa3fb8,0x201fd3fc,
    0xb553107f,0x2e3fa85f,0x2f7ea03f,0x7c5f602f,0xfffd1be6,0xffd0dfff,
    0xfd0dffff,0x50dfffff,0xa81fdc7f,0x540fee3f,0x540fee3f,0x740fee3f,
    0x46ffffff,0x540dd07e,0x54bee04f,0xe8bee04f,0x7f4ff00f,0x13eaff00,
    0x03fa2fb8,0x201fd3fc,0x7fff4c7f,0x0fec2fff,0xffd80df1,0x3fb3ec06,
    0x999fd1be,0x99fd0799,0x9fd07999,0xfb079999,0xfd837c43,0x7ec1be21,
    0x7ec1be21,0x7f41be21,0x7c3ccccc,0x301fcc0f,0x98fe40bf,0xe87f205f,
    0x7f4ff00f,0x17e6ff00,0x03fa1fc8,0x201fd3fc,0x90d7f47f,0x7437c45f,
    0x07fe600f,0xfafccfb0,0xfd003f46,0x8803f400,0x440fe86f,0x440fe86f,
    0x440fe86f,0xe80fe86f,0xd81ff007,0x81be200f,0x40df10fe,0x403fa0fe,
    0x7c03fa6f,0x7f40df16,0x37c03fa0,0x99be01fd,0x2a2fc83f,0xffeeeeff,
    0x6c03f403,0x237c7ec7,0x01fa007e,0xff5007e8,0x87ffdddd,0xfeeeeffa,
    0x777fd43f,0x7d43ffee,0x3ffeeeef,0x1ff007e8,0x7f4027c4,0x7f46f881,
    0x7ec6f881,0x3f65fa81,0x3fa5fa81,0x7ec6f881,0x3f65fa81,0x3ee5fa81,
    0xfb17fd43,0xdfffffff,0x7d807e80,0x3a37e7d4,0x801fa007,0xfffb007e,
    0xd8dfffff,0xffffffff,0x7ffffec6,0x7fec6fff,0x86ffffff,0x41ff007e,
    0xefb801fc,0x3ee17f40,0x2e17f40e,0x2e2fd84f,0x2e2fd84f,0x217f40ef,
    0x22fd84fb,0x22fd84fb,0xefdbbff9,0x740df12f,0x201fa00f,0x46ffe87d,
    0x01fa007e,0x6f8807e8,0x37c43fa0,0x1be21fd0,0x0df10fe8,0x01fa07f4,
    0x00df0554,0x7f6677ec,0xd99dfb05,0x2f7fa0bf,0xdfe86ffc,0xfd86ffcb,
    0xd05fecce,0x0dff97bf,0xdff97bfd,0x55dfff70,0xc813ea5f,0x201fa03f,
    0x46ffa87d,0xccccccfe,0x66667f40,0x667f40cc,0x9f50cccc,0x4fa9fe40,
    0x27d4ff20,0x13ea7f90,0x67f43fc8,0x200ccccc,0x764002fa,0x76403eff,
    0x32203eff,0x9104ffff,0x6409ffff,0x2203effe,0x104ffffc,0x809ffff9,
    0x807f6008,0x01fa06f9,0x237f41f6,0xfffffffe,0x7fffff40,0x7fff40ff,
    0x3fb0ffff,0x1fdb7cc0,0x0fedbe60,0x07f6df30,0x7ff46f98,0x200fffff,
    0x02200029,0x88001100,0x80022000,0x00440008,0x00000110,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0xa8b62000,
    0x01ed981d,0x201dd980,0x00002ee9,0x04cc0008,0x10066200,0x00099801,
    0x13102620,0x13300000,0x20026600,0x00000009,0x02200cc4,0x02601310,
    0x3dd10088,0x0ff25fa8,0x1000ff44,0x6fd403df,0x4bf302fd,0xffe882fc,
    0xffc84b8b,0xf9800dff,0x0ffea02f,0x0001ff98,0x9ff885f9,0x25f983b9,
    0x1ff982fc,0x201ff980,0x3e6004f9,0x2600bf25,0x3fea02ff,0x85fff903,
    0x7ff503fa,0x1509ff70,0x01540144,0x2a801550,0xb37d40aa,0xf95b907f,
    0x9cfc85ff,0x7cc04fda,0x2f3ea00e,0x07f6203f,0xa88bf200,0xa85ffffe,
    0x440ff66f,0xfd8801fd,0x4009f301,0x00ff66fa,0x7d401df3,0x5fcc3fbc,
    0x417e26e8,0x4c3fbcfa,0x000002ff,0x80000000,0xa8800c09,0x3e237c40,
    0x54015407,0x55002a62,0x545f9000,0x200efeff,0x15400c09,0x3e605500,
    0x0604c004,0x8aa00aa0,0xfb9ee0a9,0x8aa01f90,0x220c40a9,0xffffffff,
    0x3ffffe21,0x3fe21fff,0x21ffffff,0xfffffff8,0x0000001f,0x06f887f3,
    0x00000000,0x0445f900,0x000005fd,0x4f980000,0x00000000,0xf70fb800,
    0x00000fe6,0x67fe6644,0x333220cc,0x220cccff,0xcccffccc,0x3ff33220,
    0x764c0ccc,0xd9303eff,0x3fa87dff,0x3260bfa2,0x9303effe,0x2607dffd,
    0x103effec,0x85fdddb9,0x40ffedb8,0x21ea83e9,0x81ea83e9,0x4c2dfec8,
    0x019dd94f,0x80b7fb22,0x202dfec8,0x4c2dfec8,0x0dd5fadf,0x07aa0fa6,
    0x7400fd00,0x801fa007,0x677e407e,0xefc84ffd,0x3ea4ffdc,0x3203ff13,
    0x84ffdcef,0x4ffdcefc,0xffdcefc8,0x767ffcc4,0x3bfe62ff,0x27cc4fed,
    0x09f317dc,0xcff985f7,0x33e64fec,0x986fedfe,0x84feccff,0x4feccff9,
    0xfeccff98,0x646ffdc4,0x709f301f,0x07e8005f,0x7e801fa0,0x0301fa00,
    0x88181ff1,0x327f50ff,0x3e20602f,0x7fc40c0f,0x07fc40c0,0x22fc85fd,
    0x307fc1ff,0x4c5f709f,0x742fb84f,0xf98fec0f,0xd0bf60ef,0x741fd81f,
    0x3a0fec0f,0x300fec0f,0x427cc07f,0x3f4002fb,0x7400fd00,0x001fa007,
    0xfc800fe4,0x0bf27f51,0x4007f200,0x3f9001fc,0x4bf20fee,0x22fc83fb,
    0x22fb84f9,0x22fb84f9,0x34f983fa,0x25f981df,0x24f983fa,0x24f983fa,
    0x04f983fa,0x09f301ba,0x07fe65f7,0x1fa007e8,0x3a007e80,0xb5531007,
    0x2aa6205f,0x267f52fd,0x54c402ff,0x53102fda,0x26205fb5,0x3f92fdaa,
    0x03f65f90,0x84f993e6,0x213e62fb,0x26bf22fb,0xf35fa999,0xafc9be09,
    0x25fa9999,0xa9999afc,0x266bf25f,0xf705fa99,0x13e60263,0x27fdcbee,
    0x3f400fd0,0x7400fd00,0x7fff4c07,0x7f4c2fff,0xf52fffff,0x4c27fd47,
    0x2ffffffe,0x7fffff4c,0x7fff4c2f,0x01fb2fff,0x441fa5f9,0x2e13e65f,
    0x2e13e62f,0x3ffff62f,0x9f36ffff,0xfffd9be0,0x366fffff,0xffffffff,
    0x3fffff66,0xcf986fff,0x7cc5ffe8,0xff32fb84,0xd003f405,0x003f400f,
    0x1afe80fd,0x35fd0bf2,0x43fa97e4,0x57f43fe9,0x5fd0bf21,0x3fa17e43,
    0x7ecbf21a,0x1fd2fc81,0x27ccbf30,0x09f317dc,0x4dfe45f7,0xf3099999,
    0x7e4bf109,0x0999999b,0x26666ff2,0x26ff2099,0xe8099999,0x45f73db6,
    0x22fb84f9,0x003f4008,0x03f400fd,0x1fcc0fd0,0x07f317e4,0x20fea5f9,
    0x20fe66f9,0x20fe62fc,0x20fe62fc,0x885f92fc,0x503fb2fe,0x642fcc7f,
    0x3217e62f,0x2013ee2f,0x24f984f9,0x9f7004fb,0x8013ee00,0x27c9f1fb,
    0x05f90bf3,0x3a007e80,0x801fa007,0x50fee07e,0x21fdc5ff,0x07f52ffa,
    0x543fb9be,0x50fee2ff,0x21fdc5ff,0x8bf52ffa,0x0bf52ffd,0x5c7f83fd,
    0x2e3fc2ff,0x03fe22ff,0x1fd09f30,0x44007fc4,0xff8800ff,0x3e4f8800,
    0xb8ff13e4,0x01bb12ff,0x0fd003f4,0xfd003f40,0x6ddffcc0,0x3fe62fef,
    0x52fefdbb,0x3faeae7f,0x36effe63,0x3fe62fef,0x22fefdbb,0xefdbbff9,
    0x3afbfe2f,0x3bfa2fbe,0xfc84febb,0x42fdfdbe,0xfdfdbefc,0x55effe42,
    0x59ff31cb,0xff907fd7,0xc839757b,0x1cbabdff,0x5d5effe4,0xfd83f61c,
    0x77e41fba,0xf92fdfdb,0x003f40bf,0x03f400fd,0xffb80fd0,0x5c2faaef,
    0x2faaefff,0x3bff67f5,0xaefffb83,0x7ffdc2fa,0x7dc2faae,0x22faaeff,
    0xfa8dffe8,0x1ffffe42,0x9aeffc88,0x77fe442f,0xfea82f9a,0xd911efff,
    0x5403bfff,0x81effffe,0x1effffea,0xeffffea8,0xfe885f51,0xeffc883f,
    0x9ff92f9a,0x67fe6644,0x333220cc,0x220cccff,0xcccffccc,0x3ff33220,
    0x01100ccc,0x02000440,0x11000440,0x08004400,0x30004400,0x98001800,
    0x98000801,0x80066001,0x00080019,0x220cc803,0xffffffff,0x3ffffe21,
    0x3fe21fff,0x21ffffff,0xfffffff8,0x0000001f,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x22000000,
    0x00400000,0x40000998,0x26200198,0x00000201,0x00199988,0x004cc001,
    0x44000000,0x2e0fa600,0x300a881e,0x00098801,0x10002200,0x00133001,
    0x000ffea0,0x9ffb07ea,0x007fe601,0x8017fcc0,0xfe882ff9,0xf304b8bf,
    0x7ec17e4b,0x3a201fff,0x6c4b8bff,0xe82effff,0x05ffffff,0x20dffd71,
    0x983fffea,0x221fc84f,0x3fa82ffc,0x7ffffd90,0x7ffffff4,0x4fffea82,
    0x277ff5c0,0x8003ff30,0x003fbcfa,0x7f654364,0x03fb102f,0x000ef980,
    0x37201df3,0x502fffca,0x541fecdf,0x3201fdaa,0x42fffcad,0x2ffdbacd,
    0x666667f4,0xcdeffa82,0xebbefb83,0x6427cc5f,0x0bf7ee1f,0xdfd30bf1,
    0x65cdd999,0x642feccc,0x0efebcef,0x65567ec4,0x3fb100ef,0x15315400,
    0x2fff6cc0,0xa807fea0,0x00154002,0x151000aa,0x400c0980,0x2a2001fc,
    0xe8bf7000,0x03df3006,0x7f40ef88,0x3f213e61,0x7e42fa81,0x0104fe80,
    0x3be62fb8,0x3f21fec0,0x5405f981,0x2e000002,0x03ffddef,0x00002fdc,
    0x00000000,0x1fc80000,0x3e200000,0xfe803745,0xa83fb800,0x3213e64f,
    0x262fa81f,0x004fb83f,0x1fd8bee0,0x93e27f88,0x01fb8aca,0x3fb26000,
    0x21df302d,0x2602fded,0xdfec986f,0x6ff64c02,0xd507d302,0x5bfd9303,
    0x2dfec980,0xd301fc80,0x005bf915,0x00dd0fe6,0x3f6009f3,0xf337f4c0,
    0xf503f909,0x0fe83745,0xf8bee000,0x7dc7f606,0xf13ddfd0,0x1eeeec89,
    0xfddffb80,0x3e1fc85f,0x3e604f8b,0x7eeffdc4,0xbbff705f,0x09f30bff,
    0xdffb85f7,0xff705ffd,0xc80bffbb,0xff9f301f,0xea809ffb,0x5557f40e,
    0xcb9afb80,0x7dc7e82b,0x213e67ff,0x92fa81fc,0x001be03f,0x17e25f70,
    0x2ed92fc8,0x7645e82f,0x7c401ffe,0xd0bf620e,0x46f8fd4f,0x221fea98,
    0x0bf620ef,0x7ec41df1,0x7dc27cc2,0xd883be22,0x1077c42f,0x0fe405fb,
    0x3a0dff98,0x0efffb87,0xdfffffe8,0x3bffff20,0xd8b7c5ff,0xf30fd8ef,
    0x9803fb0b,0xd8bf103f,0x7dc05eee,0x7dc09f32,0x6c1f6bb3,0x9007f206,
    0xf8df305f,0x647e9b66,0x17e42dff,0x0bf237cc,0x09f31be6,0x417e45f7,
    0x417e46f9,0x07f206f9,0x0fe437cc,0x0fff732a,0xdfd73331,0xfb10efe4,
    0x27f4f7c7,0x91fe61fb,0x06e805ff,0xfddb17e6,0xf52fb80d,0x5e97dc09,
    0xc81b60f9,0xf03f401f,0xe8fe7e8f,0x7e80fe47,0x40fd1fe0,0x5c27cc7f,
    0x7f81fa2f,0x40ff03f4,0x09f301fc,0xfe8805f7,0xc8ffc401,0x3a6f881f,
    0x33f42fff,0xf9fb7dff,0x4c7ee03d,0xdf037c41,0xbf32fb80,0x56c8fe40,
    0x640bd05f,0xd03fc01f,0x1fa8fc8f,0x00fc8df1,0x3e3f40ff,0x9f31fa07,
    0x03fc5f70,0x3a07f8fd,0x4c07f207,0x802fb84f,0x2fc803fb,0xd9fe05f7,
    0x266f80ef,0xfb1effdf,0x3fa9f309,0xf807fc6f,0xf897dc06,0x7dc3fa06,
    0xf1fefe88,0x200fe409,0xf51fa07e,0x217e4dbb,0xe81fa06b,0x8fd03f47,
    0x22fb84f9,0xfd1fa07e,0x3f903f40,0x3ee13e60,0x802fb802,0x109f51fd,
    0x5417e4df,0x00cfe64f,0x7dc54dd0,0x37c0ff62,0x1fe87f60,0x93e26f88,
    0x403f72b9,0x0fec01fc,0x7fe437c4,0x8005fdbd,0x46f881fd,0x46f881fd,
    0x22fc85f9,0x46f881fd,0x06f881fd,0x27cc07f2,0x3e2017dc,0x237d400f,
    0x11fdc0ff,0x07f441df,0xfb8009f3,0x3e21fc81,0x1066f82f,0x077dc1ff,
    0x05f90bfa,0x1fc80bf3,0x7ec2fd40,0x7ffff902,0x7d4032a0,0x7d42fd85,
    0x7f82fd85,0xbf517fdc,0x5fa85fb0,0x3f202fd8,0xf709f301,0x32eab225,
    0x5d5e42ff,0x77dc0ffd,0xfc86fcab,0x4c3febbe,0x13e2004f,0x3fea0bf2,
    0x3e6fccce,0xd83ffdce,0x85feccef,0xfcaacfd8,0x00fe400d,0x7eddf7f4,
    0x8027b605,0x3fa04ff8,0xd05fdbbe,0x0bfb77df,0x37f6fbf2,0x5df7f42f,
    0x7dfd05fd,0xcc88bfb7,0x21ccdfec,0x32fb84f9,0x819fffff,0x0cfffff8,
    0x09fffd50,0x4177ff5c,0x3f6004f9,0x40d67f40,0x3effffd8,0x80bbfff2,
    0x403effec,0x103effeb,0x99bfd999,0x77ffe403,0xe801fc03,0x7ffe402f,
    0x7ffe403e,0x3ff2203e,0xfc82f9ae,0x7e403eff,0xff883eff,0x23ffffff,
    0x22fb84f9,0x03300198,0x22000880,0x4006a200,0x7ffc42fa,0x200c404f,
    0x00044000,0x3ffe2004,0x803fffff,0x00a88008,0x00880020,0x06000440,
    0x88001100,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x100cc400,0x80044003,0x76cc0198,0x00a8802d,
    0x00000013,0x13005e98,0x04c01530,0x3bbbff6a,0x6c0bd10e,0x1300200e,
    0x764ba600,0xedb880ce,0x98802dce,0x98022009,0x44000000,0x3fe601ee,
    0x7fffe442,0x0ffea01d,0x5fffffb8,0x3ffeffa8,0x505ff910,0x7c03fa7f,
    0x5f92fcc7,0x6407fee0,0x3e3efffe,0x23fa83ff,0xeffbbefb,0x260bf60e,
    0x809f306f,0xd9f3006f,0xe98dfdbf,0x02ffdcff,0x07ffffa6,0x3e607fe6,
    0xffff7004,0x7fdc019d,0xb01df304,0x1ffb77bf,0x07f79f50,0x99779dfb,
    0x1fe21ff0,0x2217efdc,0x7c03fa5f,0x7fb37d47,0x3a213620,0x85ecccef,
    0xf12fc46f,0xfa86f88d,0xf303fb85,0x3006f809,0x17ec1dff,0x02fc85fd,
    0x1755bff1,0xf305ff50,0x337ee009,0xf303ffec,0x4c0aa05f,0xa82fd86f,
    0x6fa82a62,0x7e8df100,0x3f217d40,0x3fc03fa0,0x4000604c,0x75c105fd,
    0xf307e42f,0xff01fd09,0xf300fe81,0x3006f809,0x55f981df,0x205f90bf,
    0x0ee004fb,0xfb8027cc,0x880ffcc2,0x09f50001,0x320005f7,0x89fe003f,
    0x317d406f,0xf00fe87f,0x0b20000f,0x2e600df3,0x987f30fe,0xf907f85f,
    0x3a62fcc7,0xeeeeefee,0x7cc01be2,0x0bf2df04,0x17e40bf2,0x04f98000,
    0xbf505f70,0x77776400,0x7441ff01,0x7777640f,0x2005fb81,0x01fe9bfd,
    0xd0dd17d4,0xd91fe01f,0x9f003ddd,0x33002fc8,0x741ba1fd,0x4c13f23f,
    0xd30bf26f,0xdddddfdd,0x276437c5,0x6dbe09f3,0x902fc80f,0xeeec803f,
    0xc8cf981e,0x02fb82df,0x776400ff,0x7ff701ff,0xdd905ff5,0xdfd103ff,
    0xdfff1005,0x325f5003,0xf00fe81f,0x1ffeec8f,0x0fec5f80,0xf92fff80,
    0x3ffff603,0xf8ff404f,0x2027cc07,0x262fe46f,0xfb5f984f,0x4cc5f901,
    0x1999afd9,0x40fff764,0xffdfedf9,0xfe817dc4,0x01fc8000,0x007fffe6,
    0x7ec407f2,0xff500bff,0x4c01541f,0x201fd03f,0x407f207f,0x7f45feb8,
    0x07f30000,0x02aa6bea,0x13eb3ea0,0x6f809f30,0x13e617f2,0x20fe53ee,
    0xfff12fe8,0x0fffffff,0x7fcc0fe4,0xfff9fa0d,0x40fec6ff,0x807f202a,
    0x01ffeefc,0x36600fe4,0x6fdc2fff,0x201be6fc,0x403fa06e,0x407f207f,
    0x7fc1acff,0x40dd0000,0xff0003fb,0x4f9803fb,0x05fcb7c0,0x0fe889f3,
    0x2ffd89f5,0x2affaaaa,0x07f202aa,0x3f903be6,0xb0f37fb2,0x03ffa83f,
    0x8ffa03f9,0x3f201ffb,0x3ff91001,0x67ec3fe2,0x8fdc06f8,0x403fa098,
    0x207f207f,0x03fa02fa,0x4c47ee00,0x3bbffe60,0x7fe402ce,0x404f9806,
    0x2605fbef,0x3ffdacff,0x6775e7fc,0x003f902f,0x27cc0fe4,0x05f717dc,
    0xbff503fa,0x3ea07f20,0x3204fb84,0x9fe4001f,0x37fa24f9,0x4d3e604f,
    0x403fa4ff,0x207f206f,0x0bf601fd,0x3e69f300,0x7777f44f,0x3e604fff,
    0x04f9802f,0x3017f77c,0x03bfffff,0xf71bffd1,0x8007f205,0x84f981fc,
    0x20bee2fb,0x0bfb07f8,0x0bf207f2,0x1fc817e6,0xfaa7d400,0x00fffcc4,
    0xb27ef4dd,0x40bf503f,0x03fd81fc,0xdd001bee,0x5f927ef4,0x7cc0ff30,
    0x809f3006,0x301ff8ef,0x2040029f,0x03f902fb,0x7cc0fe40,0x3ee2fb84,
    0xf704fc82,0x2e07f209,0x204fb84f,0x7ec001fc,0xfd81ff12,0x323f700f,
    0x13ee4f8f,0x1fc80bf6,0x3a00ff98,0x1fb8104f,0x7f49f1f9,0x7f40fd00,
    0xf01fa002,0x2607fe6d,0x7e40004f,0x4003f902,0x84f981fc,0x70bee2fb,
    0x1fd301ff,0x3e207f20,0x0ffdabdf,0x37a07f20,0x45fecccc,0xfffccffc,
    0xf14f886f,0x7f43bf5b,0x406ffcbd,0x9ff701fc,0xdeff9835,0x53e25ecc,
    0xb1dfadf8,0x27e4c3bf,0x009fd531,0x1cacefc8,0x40ffa9be,0x640004f9,
    0x003f902f,0x27cc0fe4,0x9bf717dc,0xe983dffd,0x333221ef,0x261ccdfe,
    0x40cffffd,0xcdfeccc8,0xfffff91c,0x3ffee07d,0xfd8bfb3e,0x7ffddd30,
    0x27fffe44,0x6ff66644,0x7ff541cc,0xeffec886,0x74c3f62d,0xfd13ffee,
    0xa89fffff,0x88003fff,0x3e2fffdb,0xf3077dc6,0x2fc80009,0x64403f90,
    0x1ccdfecc,0x45f709f3,0x0adefffb,0xff882b98,0x03ffffff,0x7ffc4011,
    0x443fffff,0x40020019,0x813e02fa,0x3ffe2008,0x103fffff,0xf5010053,
    0x54c27c05,0xaa880aab,0x80880000,0x10efc86f,0xa9800035,0x4403f900,
    0xffffffff,0x5f709f33,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x7f64c000,
    0x1000004e,0x00000001,0x00130000,0x00000000,0x00000000,0x80000000,
    0x00110008,0x19800000,0xffffff80,0x5c009f33,0x10feddff,0x07fa01ff,
    0x067fffd4,0xffffffff,0x3fffa1ff,0xff10ffff,0xa805bfff,0xfff984fe,
    0x7d403eff,0x3fffe04f,0xb0ffffff,0xffffffff,0x3bffffab,0xf00fe80c,
    0x3ffffe2d,0x1f981fff,0x3ff6213e,0xfff902ff,0x80ff885f,0x09f50ff8,
    0x0ffc47fb,0x555fff50,0x54013e63,0x3ee040ef,0xf504fa84,0x3c7f957d,
    0xccfe8740,0xdf10cccc,0x307ffd99,0xf309fffd,0x0bff999d,0x99037fec,
    0x9999ff99,0x3bbbbb21,0x99fd5fee,0xfe85ffdb,0x3322df00,0x80cccffc,
    0xf10fe1fa,0x85ff97bf,0x3feaacfe,0x1fe42fdc,0x85fb89f5,0x37b600ff,
    0xdffff307,0x003fd03b,0x01fd07fa,0x378103fe,0xe87419df,0x545f8807,
    0x667fd47f,0x444f984f,0xddf881fe,0x00fd001f,0x07f4bf20,0x0fe83fea,
    0x01fa0df0,0x41fc43ee,0xf737d41b,0xfe81fd09,0x9f51be62,0x0ff837cc,
    0x20fb7f10,0xffeccef9,0xa801be24,0x440fee5f,0x6cc7805f,0x01fa1d0e,
    0x03fa17e2,0x2613ee19,0xa82fc84f,0xd003fbbf,0x4df1000f,0x25fb80fe,
    0x20df00fe,0x3f6aa07e,0x01acfbaa,0x203f67f8,0x877cc2fb,0x8a7d41fe,
    0x40ff00ff,0xf307d8fc,0xf32fe889,0x8afd800b,0x013e606f,0xd0e9f41e,
    0xd0bf100f,0x427dc01f,0x80fd84f9,0x006f88fd,0x5f7000fd,0x27f807f4,
    0x20df00fe,0x3fffe07e,0x04ffffff,0x203fa7f8,0xbcfc83fa,0xfd4fa84f,
    0xbf036c03,0x427cc1f6,0x00df15f9,0x01fcef88,0x41e013e6,0x01fa1d3e,
    0x0bf917e2,0x4f984fb8,0x3e20ff26,0x3a007fa6,0x237c4007,0x21fd00fe,
    0x20df00fe,0x2e5d807e,0x4bf3000f,0x04f981fd,0x3ea0dffd,0x20002fcc,
    0xffffb2fa,0x3e213e65,0x70007fa6,0x7f7409ff,0x3c1eeeef,0x43a1fb73,
    0x6ffffffe,0x3ffbbfe2,0x427dc00d,0x4ffffff9,0x1fdc7f50,0x2e003f40,
    0xd807f43f,0xfffffd1f,0x1fa0dfff,0x007c97a0,0x0efa87fa,0x7d417f66,
    0xbfdf502f,0x9fa03300,0xf30aaafd,0x7e4bf709,0xf999800d,0x7740999f,
    0x41eeeeff,0x0e82bae7,0x799999fd,0x27f77fc4,0xf984fb80,0x0effccce,
    0x0df10fec,0x7c400fd0,0xfb00fe87,0x33333fa3,0x0fd06fcc,0x803e49f0,
    0xfffc84fc,0xf904ffff,0x3f7ea09f,0x0bfee00f,0x983ec9f3,0x222fe84f,
    0x0ecbdffd,0x3fffffe6,0x04f982ff,0x43a12e78,0x25f8807e,0x4fb803fc,
    0x4fd84f98,0x03fa1be2,0x7dc00fd0,0xfd00fe83,0x37c03fa1,0xf75307e8,
    0x055dd55b,0x97302fe4,0xf307f337,0x9f503fdd,0x7fec0df5,0x7666fe44,
    0xb75bf307,0x3fea0bff,0xf99985ff,0xf980999f,0x20227804,0xf100fd0e,
    0x5c00ff8b,0x984f984f,0x3bbfea6f,0x7403ffee,0x203fe007,0x27f880fe,
    0x20df00fe,0xffff707e,0x20ffffff,0xfb8005fc,0x6f99fe81,0x0bf94fa8,
    0xfff07fea,0x3e60ffff,0x403effff,0x0fd001fc,0x4f009f30,0x0fd0e83b,
    0x4fb8bf10,0x7cc27dc0,0x3f65fa84,0x6fffffff,0xfb803f40,0xf901fd03,
    0x6f807f49,0x1f980fd0,0x05fc813e,0xfb85f880,0x9f513f65,0x40881ff4,
    0x983ec2fa,0xd00099df,0x7fffcc0d,0xf982ffff,0x21b67804,0xf100fd0e,
    0x200ff88b,0x44f984fb,0x0df13fe8,0x0fd007f4,0x7f403fe0,0xfd07fe40,
    0x3f41be01,0x03f87ea0,0xd5000bf9,0x20ff883f,0x93ea1ff8,0xfd001ff8,
    0x25999fb0,0x7c4004f9,0x3eaaa204,0x6e40aaaf,0x2cccccef,0x7f43a01e,
    0x10cccccc,0x449f90bf,0xeeffeeee,0xfd99df34,0x9027d4bf,0x403f407f,
    0x33fa04fb,0x740effec,0x322df00f,0x0cccffcc,0x82f887dc,0xeeeeeffa,
    0x3fbb324e,0xb83fe82e,0xf313ea6f,0x84f9801f,0xf34ffffd,0x00130009,
    0x3ffe03f4,0x25ffffff,0xffffffff,0xffffd0ff,0x17e21fff,0x7fc43fe2,
    0x35ffffff,0x85bdffff,0x1be601fd,0x0ff807e8,0x37bfffa0,0x3e01fd02,
    0xffffff16,0x267c83ff,0xffffa82f,0x3fe6ffff,0x0df703ce,0x84fa9ff4,
    0x000005fb,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x01301400,0x00032200,0x400980c8,0x5dfd7008,0x9803bfb1,0x7ff64c02,
    0x3fb2603e,0xffec884e,0xdfec882e,0xfffff902,0x13f6bfff,0x1ff65fa8,
    0x202fbb7c,0x405fb4f8,0x3fff66f8,0x3fa0ffff,0xe806fc84,0x7ffcc0ff,
    0x1fdc2dff,0x7c40ff40,0x7d41fa06,0x7f44000e,0x07bfff63,0xf85fffd3,
    0xfcfeffcd,0x807fe607,0x4ffdcefc,0xfeddffb8,0x3333fe60,0x667fcc3e,
    0xeeeb84fe,0xf14ffeee,0xd87fa01f,0xf56f83ff,0xfb9fc405,0xfd8fee05,
    0x20cccccc,0x07ff87fe,0x2607ffdc,0x5ffeccef,0x3e600fee,0x2fd9bb9e,
    0xffa81fa0,0x85ff3001,0x226fa99b,0x21febaff,0x7d47fe20,0x403ff302,
    0x2a0ff881,0x3f6040ef,0x6c0fe800,0x1ff1001f,0x27dc2fe4,0x5be1bff6,
    0x4fe602fa,0x87f607f8,0xfde800fd,0x981f7ea2,0x7cc0fddf,0xfb9ff444,
    0xffff7003,0x07e809ff,0x2a01ff4c,0x3ec401ff,0x027d45f5,0x3027c4fd,
    0x87f20003,0x1fe801fe,0x7cc1fd40,0x885fb004,0x207f41ff,0xb7c2fbfd,
    0x8be603f9,0x46f882fd,0xecf800fd,0xe81f3765,0x7cc0fd8f,0x7f75fb84,
    0x267bea00,0x03f404fe,0xfb827f44,0xfffb500e,0xbf107e4f,0x99ee9988,
    0x100004f9,0x225fb553,0x9ff7006f,0x266bf203,0xb805fa99,0x5cbf705f,
    0x6f8fd83f,0x263f9b7c,0x4fb8bea1,0x07ec3fa8,0x447e67c0,0xfb80fcaf,
    0x4f981fb3,0x07f76f88,0x6f987f60,0x7ffffff4,0x37f607ff,0xf8817f60,
    0x17dcf90d,0x7ffe49f3,0x24ffffff,0xcccccccc,0x3ffa60cc,0xbf32ffff,
    0x77ffd400,0x7ffffec3,0x7c406fff,0x227fa00f,0x3f2fb07f,0xd27c5be2,
    0xff10fd4f,0x0fd81fb0,0xbbf9cf80,0x5f881f97,0x09f303f6,0x00feebf7,
    0x2e3fc3fc,0xcccffccc,0x447fea04,0x53e603fe,0x27be67fa,0x3bf51fd8,
    0xfff881f6,0x0fffffff,0x2fc86bfa,0x93000df1,0x4dfe4bff,0x40099999,
    0x6fd402fd,0x22fb02fb,0x34f9be6f,0xb07ee5ff,0x6c37c43f,0x24eeeeef,
    0x29dbd3f8,0xb07ec0fb,0x4c4f981f,0x007f71ff,0x80fd03fe,0x1df7007e,
    0x3a04fe88,0x7dc7deff,0x87f22fff,0x200000fd,0x22fc83f9,0xd10001ff,
    0x0013ee1f,0xfd802fd4,0xfd9f606f,0xfbafcdf1,0xfb81f74f,0x3f60fea4,
    0x224eeeee,0x2e3ff73f,0xfb0fea1f,0xfdcef981,0x00fee3ff,0x0df317ec,
    0xdfd807e8,0x4037f200,0x35103119,0xff31fb81,0x7dc00005,0xfb17fd43,
    0x3fa0001b,0x8001ff10,0xf3000ff8,0xf33ec03f,0x9d5f9beb,0x3e21eefb,
    0x3f603f66,0xf89fcc00,0x37c47ee6,0x3fe607ec,0x7dc0ceff,0x57ff5003,
    0x07e805fd,0x5c013fa2,0x2aaa60ef,0x55531aaa,0x37e63555,0xbacffcfb,
    0x201fd101,0xefdbbff9,0x37ffe22f,0x2f3a0ecb,0x7e45fdba,0x01cbabdf,
    0x7e8005fb,0x23f63ec0,0x2be3ba6f,0xfb07cafa,0x3f60df13,0x351fcc00,
    0xeefb8fdc,0x2eeffeee,0x7f7009f3,0x3ffff200,0x82ec05ff,0x54002fe9,
    0xffff91ff,0x3fff29ff,0x3ff24fff,0x03fffd54,0xfb80bfea,0x42faaeff,
    0x45ffffc8,0x04fffffe,0x3dffffd5,0xd000bf50,0x7d47d80f,0x9efb66fc,
    0x9f707cdf,0x03f607f5,0x7d407f30,0xdddddd52,0x3e65ddff,0x803fb804,
    0xf91335fa,0x07a60007,0x98974c00,0x31099999,0x00133333,0x01320022,
    0x02200044,0x4c001330,0x003fe201,0x0fb01fa0,0x77ecdffd,0x441b7f65,
    0xfb00fdef,0x202fa801,0x0fd802fa,0x7dc027cc,0x880fd803,0x33332a5f,
    0x0002cccc,0x00000000,0x00000000,0x00000000,0x77777fe4,0x01fa05ee,
    0x4dff50fb,0x3fea2ffc,0x81bff606,0x17d400fd,0xfb007f50,0xb804f981,
    0x2cccccdf,0xffc81004,0x04ffffff,0x00000000,0x00000000,0x00000000,
    0x7ffff400,0x3a06ffff,0xfe83ec07,0x3fe1ff26,0x80ffee05,0x17dc00fd,
    0xfb007f50,0xb804f981,0x4fffffff,0x00000000,0x54404010,0x00153101,
    0x2600c400,0x0006a009,0xbbb98000,0x002bbbbb,0x00000000,0x00000000,
    0x00000000,0xd55d0000,0x403bd31b,0x517c4008,0x2e13a21d,0x3ffff20f,
    0x0fffff41,0x40fd47d1,0xea81ffc8,0xffb83fff,0x100ff882,0x0b887ffb,
    0xfffffff7,0xd507d39f,0x32600003,0x19802dfe,0xbf915d30,0x9d935c85,
    0xeeeee883,0x0fb20eee,0x01eb97a6,0x02f44fa2,0x67e7c1db,0x205fdebf,
    0x88fec05c,0xf727ec6f,0x6fcabd8b,0x227dccd4,0xa8df11fd,0x7c41feff,
    0x5c2fd99d,0x5fec84ff,0x49fdbfb0,0x222221fb,0x09f30888,0x03f405f7,
    0x7feeffdc,0x7fddf705,0xfdffcf98,0x3bebba4f,0x3ba22ffd,0x447feeee,
    0x50ff41ff,0xb1fcc05f,0xf8df303f,0x1f2bfd3f,0xfa832e43,0x3f603f63,
    0x7c405fbc,0xf113e607,0x1911fdcd,0x20fb83f9,0x44fe85f8,0x441fbaf9,
    0x3af7f64f,0x84f98007,0x01fa02fb,0x7ec41df1,0x444d7642,0x837fe65d,
    0x98fffa7e,0x83fd806f,0x313f26fa,0x517d407f,0xf85f909f,0x87e43fa7,
    0xe8cb9ef8,0x7dcdf10f,0x017ff602,0x3fb213ee,0x364f980e,0x641fc80f,
    0x3fd85f87,0xc88dd2ec,0x517ffe42,0xdddddddd,0x5f709f37,0x3f203f40,
    0x3ea6f982,0x2e8cedd8,0x23f90df3,0x407f83fe,0x33f205fb,0x24f885f9,
    0xff07ee6e,0x749f0ff0,0xfc883f26,0x3e60cfee,0xfb803f65,0x077dc04f,
    0x442ff65c,0x320bf25f,0xf517dc1f,0x2a0ef987,0x400fea1f,0x77754098,
    0xf9beeeee,0x3a02fb84,0xff03f407,0x769ada64,0x3ee13e6b,0x80aa0fd2,
    0xefe806f9,0x3e2bf00f,0xfc81f91f,0x93e13e62,0x2e03f26e,0x23f904ff,
    0xbbf706f8,0x1bfb109f,0xfd83fd00,0x3f20bf30,0x7ee7fc41,0x83dfd50e,
    0x000fd85e,0x84f98000,0x333322fb,0x20ccccff,0x2e9fa07f,0x4daa5ddb,
    0xfd2fb84f,0x01fd1000,0x7405ff30,0x1f69ff76,0x81fc97e6,0x0fc9ba4f,
    0x3bb77baa,0x9f537442,0x93f65fb8,0x1aaaefe8,0x71fee666,0x2a07f47f,
    0x220acfda,0x2e60ceec,0xe880ea82,0x98000003,0xf12fb84f,0xffffffff,
    0xfd03f41f,0x73dad9e4,0x3ee13e6b,0xfb000fd2,0x1bff6005,0x2f99d7d8,
    0xf11fd06e,0x26e93e0d,0xa653a0fc,0x91fd40fb,0x3617e21f,0xfffff51f,
    0x7ffffc7f,0x3fb97e22,0x7fffffc4,0x00000003,0x7cc00000,0x3a02fc85,
    0x440fec07,0x4d6daa6f,0x213e67d7,0x800fd2fb,0x9f7004fc,0x27f209f7,
    0x04f9faaf,0x207f57f7,0x0fc9ba4f,0x14025c82,0x8a203062,0x09999998,
    0x04406aaa,0x4ccccc0a,0x00000009,0xf8000000,0xd017fdc7,0xd85fa80f,
    0xa856ec2f,0x2e13e66d,0x5400fd2f,0x4df5006f,0x7dfa83fd,0x7c40ff7e,
    0x49f00fde,0x6c03f26e,0x00000005,0x00000000,0x00000000,0xfc800000,
    0x02fdfdbe,0x3bfa01fa,0xd885fdbb,0x260deddf,0xfd2fb84f,0x337fe200,
    0x3e21cccc,0x307fe21f,0x17fe49ff,0x7c09ff90,0x00fc9ba4,0x00000000,
    0x00000000,0x00000000,0x64400000,0x02f9aeff,0x7fe401fa,0x554403ef,
    0xfb84f981,0x3e600fd2,0x3fffffff,0x3fea0ffa,0xf98bfe20,0x07fe601f,
    0x00000000,0x00000000,0x00000000,0x00000000,0xa8003000,0x00044002,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0xccb80000,0x21cccccc,0x00006619,0x26606620,
    0x66665c00,0x44443f63,0x88888888,0x37777620,0x0000000d,0x00000000,
    0x00000000,0x00000000,0x00000000,0xffff9000,0x3e25ffff,0xf983ff0f,
    0xf3007f24,0x03ff305f,0xd2f77764,0x7fffffcd,0x227fffff,0x01ffffff,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0xff12fa80,
    0x9bea0ffc,0x3be202fd,0x007f6200,0xaaa8fe20,0xaaaaaaaa,0x00000002,
    0x00000000,0x00000000,0x00000000,0x00000000,0x2a000000,0x0fe9fe2f,
    0x2a00c098,0x000aa002,0x0000004c,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0xf17d4000,0x00007f4d,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x364bd020,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,
};

static signed short stb__consolas_22_latin1_x[224]={ 0,4,2,0,1,0,0,4,3,2,1,0,2,2,
4,1,0,1,1,1,0,1,1,1,1,1,4,2,1,1,2,3,0,0,1,0,1,2,2,0,1,1,1,1,
2,0,1,0,1,0,1,1,0,1,0,0,0,0,1,3,1,3,1,0,0,1,1,1,1,1,0,1,1,1,
1,1,1,0,1,0,1,1,2,1,0,1,0,0,0,0,1,1,5,2,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,1,0,0,0,
5,1,0,0,2,1,1,2,1,0,2,1,2,2,0,1,1,4,4,2,2,1,0,0,0,2,0,0,0,0,
0,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,1,0,0,
0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,
 };
static signed short stb__consolas_22_latin1_y[224]={ 16,0,0,1,-1,0,1,0,0,0,0,4,12,9,
12,0,1,1,1,1,1,1,1,1,1,1,5,5,4,7,4,0,0,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,18,0,5,0,5,0,5,0,5,0,0,
0,0,0,5,5,5,5,5,5,5,1,5,5,5,5,5,5,0,-2,0,7,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,16,5,-1,1,2,1,
-2,0,0,1,1,5,9,9,0,1,0,2,0,0,0,5,0,8,16,0,1,5,0,0,0,5,-2,-2,-2,-2,
-2,-3,1,1,-2,-2,-2,-2,-2,-2,-2,-2,1,-2,-2,-2,-2,-2,-2,5,-1,-2,-2,-2,-2,-2,1,0,0,0,
0,0,0,-1,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,2,0,0,0,0,0,0,0,
 };
static unsigned short stb__consolas_22_latin1_w[224]={ 0,4,8,12,10,12,13,4,7,7,10,12,6,8,
4,10,12,10,10,10,12,10,10,10,10,10,4,6,9,10,9,7,12,12,10,11,11,9,9,11,10,10,9,11,
9,12,10,12,10,13,11,10,12,10,13,12,12,13,10,7,10,6,10,13,8,10,10,10,10,10,12,11,10,10,
9,11,10,12,10,12,10,10,10,10,11,10,12,12,12,12,10,9,2,9,12,12,12,12,12,12,12,12,12,12,
12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,0,4,9,11,12,12,
2,10,10,12,8,10,10,8,10,9,8,10,8,8,11,11,10,4,4,8,8,10,12,12,12,7,12,12,12,12,
12,12,13,11,11,11,11,11,11,11,11,11,12,11,12,12,12,12,12,10,12,11,11,11,11,13,10,10,11,11,
11,11,11,11,12,10,11,11,11,11,11,11,11,11,10,11,12,12,12,12,12,12,12,11,11,11,11,12,10,12,
 };
static unsigned short stb__consolas_22_latin1_h[224]={ 0,17,6,15,20,17,16,6,21,21,10,12,8,3,
5,19,16,15,15,16,15,16,16,15,16,15,12,15,13,6,13,17,21,15,15,16,15,15,15,16,15,15,16,15,
15,15,15,16,15,19,15,16,15,16,15,15,15,15,15,21,19,21,8,3,6,12,17,12,17,12,16,16,16,16,
21,16,16,11,11,12,16,16,11,12,16,12,11,11,11,16,11,21,23,21,6,15,15,15,15,15,15,15,15,15,
15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,0,16,20,15,14,15,
23,19,6,16,12,10,6,3,11,5,8,14,10,10,6,16,19,4,4,10,12,10,16,16,16,16,18,18,18,18,
18,19,15,19,18,18,18,18,18,18,18,18,15,18,19,19,19,19,19,10,20,19,19,19,19,18,15,17,17,17,
17,17,17,18,12,15,17,17,17,17,16,16,16,16,17,16,17,17,17,17,17,12,17,17,17,17,17,21,21,21,
 };
static unsigned short stb__consolas_22_latin1_s[224]={ 255,250,12,190,128,225,47,250,89,97,134,
12,214,82,250,1,155,97,203,122,87,133,144,145,13,214,250,249,155,245,145,
27,105,119,108,105,156,75,64,193,168,179,205,238,111,74,26,215,100,186,85,
36,132,74,50,37,225,12,1,71,164,43,221,68,44,209,178,220,120,242,201,
130,225,214,33,167,99,121,49,25,179,190,60,231,155,1,108,95,82,142,71,
50,4,79,232,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,
62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,255,250,118,
50,121,37,1,175,21,228,165,145,1,82,38,53,205,134,167,176,32,168,200,
250,63,196,174,185,61,180,117,97,199,186,225,111,212,237,1,152,150,162,174,
238,13,25,37,1,236,138,12,25,62,224,211,156,139,75,87,38,50,124,15,
73,108,84,96,61,49,99,183,26,166,201,213,189,241,1,24,85,131,110,35,
48,1,73,86,196,14,154,61,238,142,20,60,7, };
static unsigned short stb__consolas_22_latin1_t[224]={ 1,1,144,99,1,45,82,99,1,1,130,
131,129,144,106,25,64,99,99,64,115,64,64,99,82,99,45,82,115,129,115,
64,1,99,99,82,99,99,115,64,99,99,64,99,115,115,115,64,115,1,99,
82,99,82,115,115,99,115,115,1,1,1,129,144,144,115,45,115,45,115,82,
82,82,82,1,82,64,130,131,131,82,82,131,115,82,131,131,131,131,82,131,
1,1,1,129,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,
99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,1,25,1,
99,115,99,1,1,144,64,115,129,144,144,131,144,129,115,129,129,144,64,1,
58,144,129,115,129,82,64,82,82,25,25,25,25,25,1,99,1,25,25,25,
25,45,45,45,45,82,25,25,25,25,1,1,129,1,25,25,25,25,25,99,
45,45,45,45,45,45,25,115,99,45,45,45,45,64,82,82,82,45,64,64,
64,64,64,64,115,64,45,64,45,45,1,1,1, };
static unsigned short stb__consolas_22_latin1_a[224]={ 194,194,194,194,194,194,194,194,
194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,
194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,
194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,
194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,
194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,
194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,
194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,
194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,
194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,
194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,
194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,
194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,
194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,
194,194,194,194,194,194,194,194, };

// Call this function with
//    font: NULL or array length
//    data: NULL or specified size
//    height: STB_FONT_consolas_22_latin1_BITMAP_HEIGHT or STB_FONT_consolas_22_latin1_BITMAP_HEIGHT_POW2
//    return value: spacing between lines
static void stb_font_consolas_22_latin1(stb_fontchar font[STB_FONT_consolas_22_latin1_NUM_CHARS],
                unsigned char data[STB_FONT_consolas_22_latin1_BITMAP_HEIGHT][STB_FONT_consolas_22_latin1_BITMAP_WIDTH],
                int height)
{
    int i,j;
    if (data != 0) {
        unsigned int *bits = stb__consolas_22_latin1_pixels;
        unsigned int bitpack = *bits++, numbits = 32;
        for (i=0; i < STB_FONT_consolas_22_latin1_BITMAP_WIDTH*height; ++i)
            data[0][i] = 0;  // zero entire bitmap
        for (j=1; j < STB_FONT_consolas_22_latin1_BITMAP_HEIGHT-1; ++j) {
            for (i=1; i < STB_FONT_consolas_22_latin1_BITMAP_WIDTH-1; ++i) {
                unsigned int value;
                if (numbits==0) bitpack = *bits++, numbits=32;
                value = bitpack & 1;
                bitpack >>= 1, --numbits;
                if (value) {
                    if (numbits < 3) bitpack = *bits++, numbits = 32;
                    data[j][i] = (bitpack & 7) * 0x20 + 0x1f;
                    bitpack >>= 3, numbits -= 3;
                } else {
                    data[j][i] = 0;
                }
            }
        }
    }

    // build font description
    if (font != 0) {
        float recip_width = 1.0f / STB_FONT_consolas_22_latin1_BITMAP_WIDTH;
        float recip_height = 1.0f / height;
        for (i=0; i < STB_FONT_consolas_22_latin1_NUM_CHARS; ++i) {
            // pad characters so they bilerp from empty space around each character
            font[i].s0 = (stb__consolas_22_latin1_s[i]) * recip_width;
            font[i].t0 = (stb__consolas_22_latin1_t[i]) * recip_height;
            font[i].s1 = (stb__consolas_22_latin1_s[i] + stb__consolas_22_latin1_w[i]) * recip_width;
            font[i].t1 = (stb__consolas_22_latin1_t[i] + stb__consolas_22_latin1_h[i]) * recip_height;
            font[i].x0 = stb__consolas_22_latin1_x[i];
            font[i].y0 = stb__consolas_22_latin1_y[i];
            font[i].x1 = stb__consolas_22_latin1_x[i] + stb__consolas_22_latin1_w[i];
            font[i].y1 = stb__consolas_22_latin1_y[i] + stb__consolas_22_latin1_h[i];
            font[i].advance_int = (stb__consolas_22_latin1_a[i]+8)>>4;
            font[i].s0f = (stb__consolas_22_latin1_s[i] - 0.5f) * recip_width;
            font[i].t0f = (stb__consolas_22_latin1_t[i] - 0.5f) * recip_height;
            font[i].s1f = (stb__consolas_22_latin1_s[i] + stb__consolas_22_latin1_w[i] + 0.5f) * recip_width;
            font[i].t1f = (stb__consolas_22_latin1_t[i] + stb__consolas_22_latin1_h[i] + 0.5f) * recip_height;
            font[i].x0f = stb__consolas_22_latin1_x[i] - 0.5f;
            font[i].y0f = stb__consolas_22_latin1_y[i] - 0.5f;
            font[i].x1f = stb__consolas_22_latin1_x[i] + stb__consolas_22_latin1_w[i] + 0.5f;
            font[i].y1f = stb__consolas_22_latin1_y[i] + stb__consolas_22_latin1_h[i] + 0.5f;
            font[i].advance = stb__consolas_22_latin1_a[i]/16.0f;
        }
    }
}

#ifndef STB_SOMEFONT_CREATE
#define STB_SOMEFONT_CREATE              stb_font_consolas_22_latin1
#define STB_SOMEFONT_BITMAP_WIDTH        STB_FONT_consolas_22_latin1_BITMAP_WIDTH
#define STB_SOMEFONT_BITMAP_HEIGHT       STB_FONT_consolas_22_latin1_BITMAP_HEIGHT
#define STB_SOMEFONT_BITMAP_HEIGHT_POW2  STB_FONT_consolas_22_latin1_BITMAP_HEIGHT_POW2
#define STB_SOMEFONT_FIRST_CHAR          STB_FONT_consolas_22_latin1_FIRST_CHAR
#define STB_SOMEFONT_NUM_CHARS           STB_FONT_consolas_22_latin1_NUM_CHARS
#define STB_SOMEFONT_LINE_SPACING        STB_FONT_consolas_22_latin1_LINE_SPACING
#endif

