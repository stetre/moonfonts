// Font generated by stb_font_inl_generator.c (4/1 bpp)
//
// Following instructions show how to use the only included font, whatever it is, in
// a generic way so you can replace it with any other font by changing the include.
// To use multiple fonts, replace STB_SOMEFONT_* below with STB_FONT_times_bold_12_latin_ext_*,
// and separately install each font. Note that the CREATE function call has a
// totally different name; it's just 'stb_font_times_bold_12_latin_ext'.
//
/* // Example usage:

static stb_fontchar fontdata[STB_SOMEFONT_NUM_CHARS];

static void init(void)
{
    // optionally replace both STB_SOMEFONT_BITMAP_HEIGHT with STB_SOMEFONT_BITMAP_HEIGHT_POW2
    static unsigned char fontpixels[STB_SOMEFONT_BITMAP_HEIGHT][STB_SOMEFONT_BITMAP_WIDTH];
    STB_SOMEFONT_CREATE(fontdata, fontpixels, STB_SOMEFONT_BITMAP_HEIGHT);
    ... create texture ...
    // for best results rendering 1:1 pixels texels, use nearest-neighbor sampling
    // if allowed to scale up, use bilerp
}

// This function positions characters on integer coordinates, and assumes 1:1 texels to pixels
// Appropriate if nearest-neighbor sampling is used
static void draw_string_integer(int x, int y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0, cd->t0); glVertex2i(x + cd->x0, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t0); glVertex2i(x + cd->x1, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t1); glVertex2i(x + cd->x1, y + cd->y1);
        glTexCoord2f(cd->s0, cd->t1); glVertex2i(x + cd->x0, y + cd->y1);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance_int;
    }
    glEnd();
}

// This function positions characters on float coordinates, and doesn't require 1:1 texels to pixels
// Appropriate if bilinear filtering is used
static void draw_string_float(float x, float y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0f, cd->t0f); glVertex2f(x + cd->x0f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t0f); glVertex2f(x + cd->x1f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t1f); glVertex2f(x + cd->x1f, y + cd->y1f);
        glTexCoord2f(cd->s0f, cd->t1f); glVertex2f(x + cd->x0f, y + cd->y1f);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance;
    }
    glEnd();
}
*/

#ifndef STB_FONTCHAR__TYPEDEF
#define STB_FONTCHAR__TYPEDEF
typedef struct
{
    // coordinates if using integer positioning
    float s0,t0,s1,t1;
    signed short x0,y0,x1,y1;
    int   advance_int;
    // coordinates if using floating positioning
    float s0f,t0f,s1f,t1f;
    float x0f,y0f,x1f,y1f;
    float advance;
} stb_fontchar;
#endif

#define STB_FONT_times_bold_12_latin_ext_BITMAP_WIDTH         256
#define STB_FONT_times_bold_12_latin_ext_BITMAP_HEIGHT        106
#define STB_FONT_times_bold_12_latin_ext_BITMAP_HEIGHT_POW2   128

#define STB_FONT_times_bold_12_latin_ext_FIRST_CHAR            32
#define STB_FONT_times_bold_12_latin_ext_NUM_CHARS            560

#define STB_FONT_times_bold_12_latin_ext_LINE_SPACING           8

static unsigned int stb__times_bold_12_latin_ext_pixels[]={
    0x82d80130,0x88199998,0x20b50088,0x02e03108,0x20aa0104,0x2a014c00,
    0x200cc980,0x220c4541,0x08828cc1,0x88c4054c,0x3104c009,0x01310033,
    0x03004cc4,0x08c04262,0x26203910,0x57009999,0xd3005700,0xfd024401,
    0xdbd83b53,0x53a01903,0x054c41f9,0x5440e5cc,0xa880c40a,0x220b300a,
    0x80e880a9,0x741c40ee,0x7cc3b01e,0x05f33881,0x1fd0ec6c,0x0b995cc0,
    0x4032ffe6,0x273621bc,0x1775c1ea,0x2af20950,0x05885acf,0x01500588,
    0x2fb06198,0x23331188,0x880dc098,0x26623f10,0x2640998a,0x2662a662,
    0xa9988720,0x440c0998,0x20998a99,0x26e6626a,0x73071098,0x03f32640,
    0x440be271,0x81f6199f,0x7ff47039,0xbd0f303a,0x223311a8,0x46030098,
    0x011033f9,0xb8021510,0xb937d103,0xfd077d81,0x20a262c4,0x743f14f8,
    0x77771627,0x951627e8,0xfc9627e8,0x89fa0d8b,0x89fa3c45,0x8bc98e25,
    0x3e63d83b,0x7c4e25dd,0x17e41e8a,0x7b1481f6,0x3ffa335d,0x22ff983a,
    0x3fa203f9,0x8bc98b11,0x307f303b,0xb1077179,0x5c03d539,0x3ea5e883,
    0x74267ec1,0xe80d41c6,0x23743f14,0x3a0cccc3,0xdd1aa1c6,0x742a7c38,
    0xdd1661c6,0x24e8e238,0xf31d41f8,0x44a25f35,0x55c40baf,0x94c1f63f,
    0x3230f9bd,0x89d03aff,0x7fdc02fb,0x3e24e850,0x4e83f981,0xa8bd07e2,
    0x3ea0ae01,0x7d89f534,0x2238dd05,0x14e81eac,0xa8e3743f,0x1ba0fcaf,
    0x1ba0f987,0x6e82fb87,0x8dd0321c,0x21fcce23,0x3f31c84f,0x3f7e20fe,
    0x3669ad41,0x9f88b847,0x56d4116c,0x7d42f883,0x2afd5403,0x309f0fe6,
    0x7c3f987f,0xd000fe64,0x2515f70b,0xe8e3ec7e,0x0fed31c6,0xdd0fc53a,
    0x3eabe238,0x6a871ba0,0x9f10e374,0x2c438dd0,0xb9c471ba,0x8ee3f42f,
    0x512f89f9,0xf11b6be2,0x4e3ec73b,0x53e8fa9a,0x3f307510,0xb9408dd0,
    0xd0bee2cf,0xfb87f30f,0x05f73f42,0x2a0fe540,0xe897e3bf,0x1b63ebbf,
    0xe84fb987,0x236c7f54,0x83eabe23,0xb12e1c6d,0xd81c838d,0xdb1e61c6,
    0x27cce238,0x7cc7b13e,0x7cce25cd,0x7f444f9c,0x9b57fd10,0x332be722,
    0xb83a8832,0x575bb107,0xf993f628,0x67dc27c4,0x49f13e60,0x22e003fa,
    0x3e66e85f,0x8f902a02,0x74275e62,0x228f90e4,0x320faaf8,0xf9072147,
    0x7c814228,0x8f91aa14,0x266e8e22,0x3f325c2f,0x80543881,0x2e0707b3,
    0x07510500,0x505880b7,0xf33744e8,0x33740e05,0x8046e85f,0x5c0feac9,
    0x6c02dabd,0x0eb7a20b,0x644bb7f5,0x7441b32d,0xfcde83ad,0x30eb7a22,
    0x875bd101,0x5bd101cc,0xde887607,0x9b11c43a,0x21d885b5,0x643881f9,
    0x88391d03,0x3139700d,0xc8751015,0x4c2cc00b,0x9b11220e,0x406405b5,
    0x882dacd8,0x4702badd,0x001044f9,0x000202a2,0x4008004c,0x08000400,
    0x00100310,0x40620101,0x05530100,0x00980031,0x22006600,0x000004c1,
    0x00200200,0xb5004002,0x0007fe21,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x98095000,0x1c816e01,0x00840b90,0x10801ea8,0x26233310,0x2e006440,
    0x80326038,0x301d402a,0x3103100c,0x00e40133,0x00c88023,0x98810857,
    0xd3033109,0x13104c43,0x81889800,0x04201889,0xd8166c40,0x564c0ea9,
    0xba85cb83,0x04fe982b,0x754049d8,0x221fd06a,0x5c405705,0x700b201b,
    0x80eec405,0x16e00ef9,0x20f64f74,0x5fb505cb,0x6ca815c0,0x3fa1edec,
    0x927607a0,0x20b11fe8,0x01dd102b,0x76c01dd1,0x81888803,0x888150e9,
    0x4088c119,0x03080998,0x26662662,0x40110130,0x33311c7d,0x26621311,
    0x33109889,0x4cc42623,0x5310989a,0x4cc426a3,0x13101311,0x317e6e82,
    0x11998822,0x44226213,0x80044609,0x3101717d,0x87fdc133,0x1dc0bd02,
    0x26266262,0x4c021500,0x7cc3b8bc,0xa9cd882f,0x1b17f91e,0x930754ec,
    0x5fa87717,0x9305cbf3,0x8fb07717,0xe8b13f43,0x44fd1627,0xe8b13f45,
    0x44fd1627,0x754e6c45,0x11fc5ba1,0x3f417d5b,0x88ff44b1,0x7f927c45,
    0x247ec1b1,0xf550fee0,0x07f2a0ab,0x7443aa76,0xbc88b11f,0x49d03da8,
    0x6ffd41f8,0x7c3517a0,0x0a874c54,0x741f893a,0x27429fa7,0x1c7d83f1,
    0x46e871ba,0xdd0e3743,0xd0e37438,0x2a2f438d,0x713f3fa1,0x38dd136f,
    0xe8287fdc,0x7ec2a7c4,0x0bea01fe,0x2e0b3ee5,0xa874c5f8,0x2143fee0,
    0x7cc1cc5d,0x322327c3,0xb807f32f,0x217fcc2f,0x2e27c3f9,0x4515fb2f,
    0x3627c3f9,0x871ba1c7,0x71ba1c6e,0x1ba1c6e8,0xf31c6e87,0x6f8ee807,
    0x3743dbcc,0x0abf550e,0xb05f713a,0x2a01ff1f,0x89fb142f,0x260feac9,
    0x5faa82ff,0xb801fc45,0x4373f42f,0x8805f72d,0x0dffa84f,0x447e85f7,
    0x42df99df,0x2e3f42fb,0x871ba147,0x71ba1c6e,0x1ba1c6e8,0xf71c6e87,
    0x7f56e805,0x46e81ab8,0x82cfb943,0x6c27c44e,0x3ea0df37,0x4713a142,
    0x6ffd44f9,0x7167dca0,0x13e6005f,0x24ded49f,0x839007f5,0x3e65f911,
    0x9fe427c4,0x227cc3fc,0x1deec44f,0x8db0e36c,0xdb0e36c3,0xb0e36c38,
    0x80fea38d,0x25fb1ff8,0x36c1bce9,0x427ec50e,0x7441c84e,0x421bfb1f,
    0x883a62fa,0x7fc436a4,0x28bf2231,0x23fa93f6,0x26e80cfb,0xe83a82f9,
    0x2e0a1046,0x266e8b61,0xf32f982f,0x17ccdd03,0x28f902a8,0x8f90a3e4,
    0xf90a3e42,0xd0a3e428,0x1015008d,0x3e41fddd,0xe84e850a,0x06601424,
    0xa80fd66c,0x0dc17000,0xd13a145b,0xd881fccb,0x09502dac,0x64575bb1,
    0x49bda81c,0x016d66c4,0x59b1058b,0x406dc05b,0xe883ade8,0xade883ad,
    0x83ade883,0xe883ade8,0xadd883ad,0x7707902b,0xade88b11,0x491074c3,
    0x07322ec8,0x36ea0950,0x6c00b205,0x4937b50b,0xb11220e9,0x1003d739,
    0x31010000,0x00080080,0x2a001000,0x00200201,0x02002002,0x00040020,
    0x00403510,0x03102600,0x00002000,0x00040a88,0x00000180,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x0c080000,0x3220ccc4,0xa8051880,0x02e66010,0x0c301e98,0x100c2206,
    0x03100820,0x32018898,0xd5024c05,0x008880bd,0x940081c0,0x0311500a,
    0x4cc40644,0xb3003f00,0x6c03e601,0x026502ee,0xfe80d828,0x5bb01d40,
    0x7d539910,0x5b012320,0x1f53f109,0x07f607e2,0x0eda82f8,0xee880f50,
    0x40559300,0x5400801c,0x8ccc45bd,0x05f05998,0xdd1026dc,0xca815c01,
    0x9002982c,0x4c419803,0xdb813119,0x40607204,0x2601a87d,0x2636c10c,
    0x51001103,0x06041023,0x13004008,0x4c410a80,0x099881b9,0x4cccc131,
    0x5c5e4c09,0x9884cc43,0x06c43fa0,0x204cd4cc,0x5009ac99,0x01333103,
    0x7770eeee,0x4cccc407,0x21dddc09,0x9989627e,0xd87809ac,0xb1f60bea,
    0x66c41d53,0x09f11ea9,0x07717930,0x47b51791,0xf70fc9fb,0x1dc5e4c3,
    0x442fab62,0x3220bead,0x7743da8b,0x1fe61ec9,0x3a67a21b,0x3f12741f,
    0xe8363fcc,0x4cf441c6,0x267a21fe,0x205701fe,0x4c1ec9ee,0x0cccc199,
    0x16e77f20,0x46e83333,0x2b3eaf23,0x6dee3cc5,0x21d33ec4,0x23517a0a,
    0x24e802fb,0x262ec1f8,0x43ea7e23,0xf893a1f9,0xf726dee1,0x398bb136,
    0xfb8bf374,0xfa84c332,0x13e1fcc4,0xdd0665f7,0x9f509838,0x409f5098,
    0x2fcdd05e,0x2a1f95f5,0x3300fcaf,0xafa8a2bf,0x471ba0fc,0xd7067f31,
    0x7d85b798,0x7f30bfe6,0x9f727c40,0x49f0fe61,0x4fc403f8,0x263f30fa,
    0x2f327c3f,0x11ede63d,0x22dd007f,0x2076e83f,0x42fb86f8,0xd076e87e,
    0x1be2038d,0x32a06f88,0x7f16e81f,0x887d57c4,0x2700faaf,0x57c428df,
    0x071ba0fa,0x21e607f3,0x547d81aa,0x05f70dff,0xb8fe66d8,0x5f73f42f,
    0x0fa9f880,0xd0bee3f3,0xab81ab8f,0x74017dc1,0xbf504fcf,0x260bf201,
    0x7d427c4f,0x01c6d80d,0x17e405f9,0xfd0bf170,0xaaf889f9,0x1f55f10f,
    0x5bdf5770,0x20faaf88,0x1fcc1c6d,0x1cce98f0,0xc88c7fa2,0x8807f52f,
    0x261dbadb,0x7f527c4f,0xbfa867dc,0x267f50fa,0x9d327c4f,0x0de74c37,
    0x067dc7f5,0x7c0df1dd,0x204bf305,0x7c0be66e,0x8144f905,0xbf3025f9,
    0x3fab2604,0x237c7740,0xf10faaf8,0x21881f55,0xaaf8855f,0x3051f20f,
    0x3a15c07f,0xb8320fee,0x046e8b61,0x99ba0488,0x7f32f42f,0x21c43e60,
    0xe88be66e,0xddd10fee,0x7f32f41f,0x207f56e8,0x241fd05f,0x80b6b362,
    0x97bd105f,0xe8907f40,0x7cc7120f,0x43fab744,0x37a2fcde,0x97e1c2fc,
    0x8bf37a19,0xf303ade8,0x17509807,0xb50be891,0xadd88937,0x440b502b,
    0xd882dacd,0xbc81eb9c,0xcd8876a6,0x445dc2da,0x11622ee5,0x443d739b,
    0x985fb1ff,0x56fdc1ef,0x300206db,0x200403df,0x26dbadfb,0x26dbadfb,
    0x23ff10da,0x85fb1ff8,0x32640200,0x081f75df,0x33ee0040,0x20262000,
    0x040040a8,0x20010000,0x0cc0c401,0x206a2008,0x000c01a8,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x22889800,
    0x13105018,0x75075062,0x40400840,0x4024c018,0x80e400c8,0x20722052,
    0x18057008,0x30222201,0x2a064461,0x40898003,0xc81cc02a,0x08036e05,
    0x18111102,0x26507203,0xeeb80c00,0xb0774264,0x4f607e05,0x06c06c2e,
    0x1403f3f0,0x407b3793,0x2015c01c,0x40f72049,0xa85c85bc,0x5dd700dc,
    0xd10f6f60,0x9b11dc3f,0xfb507703,0x0ec05887,0x64415dd4,0x03ba603a,
    0x4fb8b7b7,0x05ea8498,0x2621ab22,0x2ea33e19,0x2623bf71,0xe9ec1999,
    0x33310621,0x03333310,0x0fc4bd0a,0x88040088,0x22131199,0x26219c99,
    0x26621a9a,0x042010c1,0x11998800,0x0a66a333,0x466660ee,0x22199998,
    0x26219999,0x44ccc410,0x22010199,0x33331199,0x988ccc43,0x236e00b9,
    0x9f41fd06,0xe85f10fe,0x4f61da9f,0xfd07e61e,0x36a7fa01,0x7ccbaea1,
    0x02b827c3,0x23fcc15c,0x36a7fa0d,0x876a7fa1,0x402b80fe,0xe815c02b,
    0xfe83fa0f,0x1fd02b80,0xd0ed4ff4,0x3e63b53f,0x3f21fd02,0x3fa05702,
    0x876a7fa0,0x36bba0fe,0x3117f704,0x6cb63ec1,0x2fb0be27,0x0f4f6188,
    0x207d83f1,0x57c3117d,0x7e85f72c,0x05e80bd0,0xfb0665f7,0x117d8622,
    0x05e83ec3,0x417a02f4,0x1f63ec7d,0x6c7d82f4,0x8bec3117,0x3605f118,
    0x2f407ee7,0x88bec7d8,0x7cdd1f61,0x3ab7dd45,0x3ec2e3ec,0x077d85f1,
    0x1f887a7b,0x0efb03ec,0x24f989f3,0x1fca84f8,0x3a03f950,0x20efb076,
    0x50fb077d,0x3f2a03f9,0xb03f9501,0x43ec7d8f,0x47d81fca,0x0efb077d,
    0x7d8db9f1,0x3f2a07ee,0x3bec7d81,0xfb3747d8,0x1e7d5e61,0x47d863ec,
    0x133f60be,0x3f10f4f6,0x33f607d8,0x3a0a7c44,0x22e07ea6,0x0bf1705f,
    0x3f6037ea,0x84cfd84c,0x05f8b87d,0x22e0bf17,0x3ec7d85f,0x17e2e1f6,
    0x099fb1f6,0xaf8899fb,0x333f60fa,0x5f8b81fe,0x267ec7d8,0xfc9ba3ec,
    0x53f25f72,0x36151f60,0x15f60547,0x3e21e9ec,0x7d823ec1,0xc83bf905,
    0xac981dac,0x7564c0fe,0x360bf00f,0x20afb057,0x7f564c7d,0x07f564c0,
    0xb03fab26,0x23ec7d8f,0x6c0feac9,0x7d82bec7,0x0f9af885,0x4c1fb9f6,
    0x3ec0feac,0x23ec15f6,0x6c43f66e,0x20efcbdf,0x47d9f47d,0xd8e3ec3a,
    0x20fc43d3,0x38fb1c7d,0x03fa802a,0x98e27cc7,0x360bf04f,0x238fb1c7,
    0x89f31c7d,0x4c713e63,0x1f63ec4f,0x13e638fb,0xb1c7d8fb,0xf35f138f,
    0x83f73ec1,0x8fb13e63,0xe8fb1c7d,0x810217e6,0xfe881fe8,0xbfe88221,
    0x3a7d13eb,0xfe88fea3,0x7fd14dab,0x200627d7,0x436a1cda,0x21b51ff8,
    0x77cc1ff8,0x75dff441,0x7d77fd13,0x86d47fa2,0x21b51ff8,0x21b51ff8,
    0x3fd11ff8,0x7f447fa2,0x3fe21b51,0x3a23fd11,0xfd13ebbf,0x33e67d77,
    0x13fd12fb,0x886d47fb,0x23fd11ff,0x13ebbfe8,0x2ffe63fd,0x0000003d,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x4c409818,0x00133319,0x80a80100,0x088cc410,
    0x3bba2030,0x02083301,0x18a818cc,0x99981894,0x50080999,0x0ea06441,
    0x098000a2,0x00001043,0x8300fbb2,0x440cc132,0x203b8088,0x33e6180a,
    0x1234ec6d,0xb8ff07f4,0x06e5dc4a,0x412a01f1,0x4d7f44dd,0x8ef2e24c,
    0x98199998,0x81b6e1fb,0x3264f9fa,0x262ed41b,0x5b9efabe,0x91660fc4,
    0x20ef4499,0x44ef222c,0x37a21eac,0xbf51b6e1,0x1f5fccdb,0x8bea6200,
    0x643445db,0x06ecc4cc,0x5fc482cc,0x3f1f10f9,0x3a3ec032,0xf98eda66,
    0x300c0fa8,0x11fd8180,0x214f6e5f,0x4c1da9fe,0x2600c1fb,0x80c2498f,
    0x2bf2fc1a,0x18181828,0x5c183043,0x0fed319e,0xf8813053,0x233e0faa,
    0x25b02b80,0x0040542b,0x30181860,0x21f9af87,0x6c07379e,0x55f73747,
    0x707cdee3,0xadeac895,0x1f6255c4,0x203fe69f,0x66c3117d,0x036ae0fd,
    0x4131fb9b,0x755c0dab,0x46fc7f30,0x910eab82,0x88755c77,0x43aae3bc,
    0x3ee62fe8,0x644ef224,0x26be21ea,0x5e80fe0f,0x5c2adfb8,0xf5255c4a,
    0x2bea1f95,0xf95f50fc,0x26be05c1,0x9a42621f,0x9ba3ec0a,0x23ea11fa,
    0x476d30f9,0x4c7abb69,0x3e3ec3b6,0xfb07fea5,0x43eaf50e,0x47d4b979,
    0x5cbcc0f9,0x2fb8e5a6,0x2d30b7be,0x2633d71c,0x467ae396,0x36263969,
    0xeb93af35,0x88fed319,0x0be0f9af,0x3e20fe54,0x263b6982,0x2abe23b6,
    0x1f55f10f,0x483eabe2,0x80fce7cc,0x6c59e88c,0x9f91ba17,0xb87e66c4,
    0x3ae61aaf,0x55f70aae,0x70fe3ec3,0x44cfd8dd,0x5ee1f37b,0x07cdee7b,
    0x0f73ddee,0x146fc7f5,0x4bfa21ee,0x72fe887b,0x2a59970f,0x3fa25dbf,
    0xf993ee62,0x09f32fbc,0x5f117e2e,0x2e355f70,0x55f11aaf,0x3eabe21f,
    0x21f55f10,0x203e6038,0xd8f3d539,0x445e8f9f,0x7d43e603,0x13e5e611,
    0x2fb047ea,0x26e51f8b,0x7d42bec6,0x32f30fa8,0x07e63ea5,0x1f9972f3,
    0x54bf2f41,0x44c23f31,0x4c23f35d,0x823f35d8,0xd8987039,0x2a13af35,
    0xac983880,0x20be20fe,0x47ea11fa,0x21f55f10,0xf10faaf8,0x406e1f55,
    0x744906bd,0x367fa24a,0x80f4c1fa,0xa93f21fa,0x644eeadf,0x367fa24f,
    0x0af32a2c,0xbb9138fb,0x20e5645f,0xac82fddc,0x1067e41c,0xf95ff79b,
    0x9970cfc8,0xcb867e45,0xa833f22c,0x665c5d04,0x90bb7f52,0x4c70b307,
    0x6405f44f,0x3a27e44f,0x337a2fcd,0x4bf37a2f,0x22026204,0x20080080,
    0x00555029,0x80000081,0xebbfe883,0x00000003,0x10000000,0x40000400,
    0x000040a8,0x3e21b500,0x2000001f,0x08080200,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x10210144,0x1c808402,0x40330510,0x06010828,0x300c4330,0x3220420c,
    0x09842980,0x1a809800,0x40420108,0x3305101c,0x08940cc0,0x98cc4188,
    0x10413099,0x0a260550,0x998830c4,0x3b005701,0xae87fd50,0x2077e41e,
    0x107905cb,0x6c41e40d,0x500d9d82,0x4407e61f,0x07cfc0ed,0xd83d099b,
    0x55c1dc9b,0x983ff60e,0x41eae828,0x2e5c0efc,0xb06883c8,0x85da8d77,
    0x57ea3cb9,0xd982e5f9,0x3b02a81d,0xdc9be887,0x4c2ffe40,0x081800dd,
    0x30108001,0x08806022,0x31a6a030,0x87cc172f,0x006a01f8,0x87030308,
    0x08e5a66c,0x001a85f1,0x01118084,0x3e204403,0x40540f99,0xd3f429cd,
    0xa804414f,0x5e881102,0x133707ea,0xafa80430,0xf95f50fc,0x2e06d5c1,
    0x06d5c0da,0xb57036ae,0x543dbb81,0x365ee4ea,0x7c43f736,0x32bea5dc,
    0x5712ae0f,0x5404ab89,0x34c0f71f,0x6443d591,0x3ab221ea,0x887ab221,
    0x2b221eac,0x0f27e21e,0x77441b57,0x5fb2fb81,0x7e57d451,0x21f95f50,
    0xf50fcafa,0xf993ea69,0x7e4fe42d,0x557c42b9,0x1f55f10f,0x2f32e5e6,
    0x32e5e65c,0xb979972f,0xf536c7cc,0x4f97c9b2,0x3e21f57a,0x55f12f89,
    0x98eda61f,0x8eda63b6,0x3fdccdfb,0xfe8823f3,0x698fed33,0x23fb4c7f,
    0xfb4c7f69,0xf11fda63,0x65e61f13,0x2213fae5,0x42df99df,0xf10faaf8,
    0x2be21f55,0x515f70fa,0x3fec99fa,0x0afeafe2,0x443eabe2,0x2f70faaf,
    0x73ddee7b,0xf77b9eef,0x3ee7bbdc,0x3e5ee7ba,0x37b9b2f7,0x9fc7e21f,
    0xf70faaf8,0x2abee355,0x26355f71,0xfc87ee2f,0x2e65e80c,0x227dcc4f,
    0x7dcc4fb9,0x2627dcc4,0x7c7e24fb,0xd51eef72,0x3fc9fe40,0x887d57c4,
    0x5f10faaf,0x8efea1f5,0xec8d905f,0xaf882eda,0xf55f10fa,0xf32e5e61,
    0x4b979972,0xcbccb979,0xa9ae3ea5,0x4cbccb97,0x443ea3ea,0x5f11f89f,
    0x847ea1f5,0x47ea11fa,0xc86c93a0,0x2f32b820,0x3275e64e,0x9d7993af,
    0x5e64ebcc,0x3e2be24e,0xc9972f32,0x32f9839e,0xfaaf883f,0x21f55f10,
    0x3a0faaf8,0x2088be66,0x07d4fcc5,0x3a2fcde8,0x32b22fcd,0x320e5641,
    0x0e5641ca,0xbd9872b2,0x20ed6c1d,0x37220dac,0x979d12fd,0x322fcde8,
    0x3227e44f,0x5dde444f,0x5d906c40,0x52edfd45,0x5fd4bb7f,0x976fea5d,
    0x3ea5dbfa,0x36bea5db,0x970e5644,0x0b1609fb,0xde8bf37a,0x3f37a2fc,
    0x0b6af6e2,0x4b0159f5,0x00100405,0x00000000,0x00200802,0x00010080,
    0x04000000,0x00000000,0x20000000,0x40100000,0x01040200,0x00010400,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x40000000,0x33310c08,0x40330262,0x400c4018,0x4c413100,
    0x40266620,0x8000010a,0x40601098,0x30220c08,0x21331040,0x4044a098,
    0x99808809,0x13031819,0x54570980,0x133222cc,0x4c4310a6,0x54fcc319,
    0x4e800187,0x74399322,0xd53b1627,0x0dccdcc1,0x306e66e6,0xe8877179,
    0x7f70b11f,0x3da8bc88,0x5c2fab62,0x66c45ddf,0x24fe1ea9,0x445307c4,
    0x2ee0e60f,0x41b17e60,0x2f8d85db,0xff98f27a,0x2259c47f,0x5e4c1e8e,
    0x2620add8,0x740ccc09,0x1fd0ba20,0x2a7e69f1,0x20027c47,0xd091ec1a,
    0x543a638d,0x57351710,0x26f2ee23,0x1f893a1a,0xa8287fdc,0x8e62ec2f,
    0x57cc9b7b,0x3517a2f9,0x0e81a854,0x4241d091,0x141fb04c,0xaf5a6054,
    0x2aa6a8fa,0x244d44a9,0x4bd176d7,0x32bea1f8,0x0212ae0f,0x33ec3bf7,
    0x21ea7e67,0x42040049,0x38dd0375,0x3a50bfe6,0xacb94e31,0x9f0fe675,
    0x5055faa8,0x201fc45f,0x8fcc7b79,0x1807f33f,0x0643a0e2,0x7c41b874,
    0x853f983c,0xf881eac8,0x203bdf11,0x3773ae1b,0xf99f2f70,0x55f127c3,
    0x98eda61f,0x17f33ebf,0x3e6153ec,0x5c4c0fa9,0x51205ecf,0xe8a27113,
    0x37fea1c6,0x4e70f170,0x3ee70edb,0x7dca3f42,0x2e2fa82c,0x41ab802f,
    0xf72f89f9,0x2120b805,0x20b8a98a,0x2a51388a,0x56e85e8f,0x3507f698,
    0x0d01ffb8,0xdbf982eb,0x4fd0bee6,0xf70faaf8,0x8467c355,0x41f60bf9,
    0x303fcdf9,0x0f60f73f,0x46d8f648,0xa97e4463,0x454e11e8,0x3e673ccb,
    0xfd8a27c4,0xf517d424,0xe9867dc7,0x337e61bc,0x5b00fea5,0x7954805c,
    0x97b9ec90,0x3019f70f,0xe98109f7,0x644986f9,0x2a20efef,0x9f13e63e,
    0xa87d57c4,0x221fc11f,0x5423ec2f,0xf73f3002,0xb8953f30,0x23e49971,
    0x712d86e2,0x5c42e351,0x3a0bc8bb,0xe850be66,0xd07eb364,0xdd11fccb,
    0x027e61fd,0x23e811ba,0x02e0c838,0x7cd32e37,0x309f06b8,0xb82e13af,
    0x88370d95,0x3a16a0b3,0x9bd0be66,0x3e27e45f,0x1f60be82,0x7cc012e7,
    0x559f07b9,0x449951c4,0x5ed43ade,0x5dddc449,0x05dddc40,0x30b6b362,
    0xb752441d,0xd739b10b,0x32c45dc3,0x2b76205f,0x31227c2b,0x4711edc5,
    0x073324ca,0x6dfd4064,0x3b10fcc5,0x1350d039,0xb103a889,0x00205b59,
    0xe8804f98,0x0114dabf,0x07f2bea0,0x0220604c,0x00001002,0x40000400,
    0x2a201800,0x040154c1,0x30604098,0x20440c13,0x00000000,0x00104040,
    0x00000040,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x013310d4,0x0e66418c,
    0x99401331,0x4c033310,0x03eebea0,0x0c30a601,0x21333331,0x26213099,
    0x31054009,0x0ccc4310,0x4ccccc40,0x0a609940,0x098c4191,0x081b17f9,
    0x81080881,0x10c41ccc,0x43331333,0x88210098,0x21998999,0x01330998,
    0x2bfa2cc0,0x226640dd,0x57f40999,0x12e5c0dd,0x9efa01fd,0x7c0faaf8,
    0x77441d81,0x2b3eaf20,0xe8323f75,0x3e625407,0x1fd0fd41,0x2e77f200,
    0x07626645,0x7cfcc999,0x3ae153e5,0x3237ec2e,0x204ccc4d,0x26bfa62d,
    0x02fe63fd,0x0fe83e7e,0x87fc45f9,0x0605703b,0x2a2374fb,0xb07ab220,
    0x02a2374f,0x83f302fb,0x0c0faaf8,0x31833018,0x29fc467f,0x0c055fec,
    0x87e20fc4,0xbf33007d,0x181510a2,0x4cfc4318,0x0420bee4,0xab818088,
    0x4477ee0d,0x22fc99fe,0x36000bf9,0xbf507ee7,0xfb85e80e,0x30fd9f61,
    0x7da67d7f,0x21fb3ec3,0x3f63fcbb,0xaf81f982,0x7f9770fa,0x7d4ff2ee,
    0x83f986dd,0xdb6c09ed,0x89b77ea6,0xd8fe209f,0x1bf38017,0x7dc3f705,
    0x3f10fdc1,0x2a27c433,0x0fdc6ddf,0xb97987ee,0xb9f617c4,0x1773e21f,
    0x2e7d83f7,0x204fc81f,0x8fc41fca,0x2fb9afea,0xfb98233e,0x2e6bfaa4,
    0xfb1ba12f,0x37a07e60,0x09ba12fb,0x7d57c4dd,0x98b7eea0,0x5b609cfb,
    0xf55f10fc,0x4c7a7e21,0x81edf61f,0x82defabb,0x107e21f8,0xc80fc43f,
    0x07d57c41,0x21f883f1,0x17c4f77b,0x87fb33f6,0x220faaf8,0x7667ec1f,
    0x00ff881f,0x1f88bf17,0x3e1fd9b6,0x6c4ebcc3,0x1fb87f66,0x3e611faa,
    0x3f706a01,0x2be21fb8,0x21fcc0f9,0x3609cf99,0x2be25e8e,0xa83f10f9,
    0x4085f61f,0x44157e18,0xf107e21f,0x1420fc43,0x107cd7c4,0x261f883f,
    0x217c4b97,0xf887ee7d,0x07e20f9a,0x4c0fdcfb,0xeac985fb,0x6d87e20f,
    0xfa85f17e,0xbf36c5db,0x1f61a7c4,0xcc807e69,0x7c469f10,0x3e6be234,
    0x2ea1fcc0,0x2bf60adf,0x87cd7c41,0xb0fc41f8,0x97e1c38f,0xf887e219,
    0x3f10fc41,0xaf881cc8,0x107e20f9,0x41cac83f,0xfb9f60be,0x83e6be21,
    0xf73ec1f8,0x85f92983,0x3fa93e63,0x989b7fd1,0x3fa2004f,0x65fe44db,
    0x9b77fd13,0x21500fee,0x7f93cbfc,0x3ef3e679,0x2a06fdc2,0x07fa20df,
    0x54bef3e6,0xe89fd43f,0x9324dabf,0x20fbaef9,0x50fea3fa,0x221fd47f,
    0x5f79f301,0x0fea1fd4,0x89fe8800,0x2f3e63fd,0xe88fea2f,0x2a3fd89f,
    0x2a3ff31e,0x003ff10d,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x4c400000,0x4c431009,0x33333100,
    0x22026218,0x18819999,0x26206662,0x22133119,0x10333109,0x40662133,
    0x01333108,0x33101331,0x4cc43310,0x40080999,0x98099999,0x66441880,
    0x3333310c,0x00000140,0x00000000,0x36bba000,0x2f98fcc4,0x476a7fa0,
    0x205f31f8,0x2e1d99fe,0x403fa1eb,0xd8ff30fe,0x83b6bba0,0x7407a0fe,
    0x07b27ba2,0xfe87d5fd,0xbc83fe22,0x3ee5acfa,0x99e89f43,0x07ff41fe,
    0x086660a6,0x3676ee08,0x12b3aae0,0xb8959b79,0xd0755c4a,0xf30f5647,
    0x55c77f73,0x406d5c3d,0x1f897e6e,0x8bec05f1,0x02f88218,0x3e8622fb,
    0x71f607d8,0x2db0665f,0x5c5f62fa,0x3745f700,0x1f97d8bf,0x8fb53754,
    0x7f067f31,0x3ea131b8,0x21fcc4c4,0x021fa829,0x20ecbcc2,0x547abb69,
    0xb4476f77,0xb872d31d,0xf88fad31,0x2f10af99,0x42e5e66d,0x7c43f66e,
    0x83d15f11,0x11fb877d,0x77d8db9f,0x3ec0efa8,0x0edd0fb0,0xfb0765b6,
    0x17cd4091,0xfb0fe2dd,0x23f751f2,0x07f307da,0x1be200fe,0x3b72e3f0,
    0x8087e24c,0x261eef70,0xf70aaedb,0x7dc2abee,0x200f70aa,0x27e23eb9,
    0x2ebee0f9,0x743ddee7,0x8fc4bf26,0xfd80baf8,0xf88fc44c,0x33f60faa,
    0x07d83f86,0x037ea1f6,0xd82fb3f6,0x8a881fef,0x13f3fa2f,0x15032ff6,
    0x4c1f65bf,0x1b87f03f,0x0b5017e4,0x043f1053,0x88b97984,0x77a84f97,
    0x08fd423f,0x263703f3,0x557c47d7,0x9ae3ea0f,0x4dd0b979,0x223f10fd,
    0x57d81fdf,0x35f11f88,0xf83bec1f,0xfb047d83,0x8b6c17e0,0x3fe3f64f,
    0xd37f76c0,0x0fb0df1d,0x0fb3fc94,0x11fc0fe6,0x012fccbf,0xf1053019,
    0x97904043,0xeeacfa83,0x1feed5c4,0x19f90ff2,0x5dbf99f4,0xb317e6f4,
    0x1cac83b7,0xf897e6e8,0xb0db5f11,0x223f138f,0x1f60f9af,0x1c7d83f8,
    0x6c17e0fb,0x9bec9f16,0x27dd4c6f,0xfb0feadd,0xfb0f9940,0x1fc0fe60,
    0x2241fd1c,0x40443abc,0x266663fa,0x01020019,0x00000010,0x30001000,
    0xfa87b7ff,0x49f39f33,0x53ebbfe8,0x3ef3e67f,0xf103fd12,0xdabfe88b,
    0xf983fd14,0x65ff441e,0x363fd10b,0x897c40df,0x225fb1ff,0x90d981fe,
    0x3ee07fa2,0x306fd40c,0x36dd6fdc,0x0009fff5,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x11000000,0xb9fb8000,0xf9802a9f,0x5c000fb9,
    0x0000c8af,0x060439c4,0x430c1883,0x2a08288a,0x3d17f31f,0x50202e48,
    0x42a85f75,0x0082acf9,0x7104c088,0x108e2088,0x99bb9144,0xaeeeee4b,
    0x644530a8,0x5555430b,0x2aaaaa0a,0x06a01cb9,0x77914b88,0x8abeafe2,
    0x3e25dcf9,0xb9f30f99,0x53f8db5d,0x986e6e64,0x2a363ebf,0x8fc4ee23,
    0x477934ca,0x6d627aaf,0x0fc43a21,0x7930175f,0xdd08b707,0xd817e400,
    0x25aa8dc0,0x6c7ee69b,0x361f51ff,0x401f52da,0xb8444444,0x54543a23,
    0x2aaaa2dd,0x2666660a,0x3505b710,0x75c39930,0x3767b219,0x887cd7c2,
    0x2fe0f99f,0x2e0f9af8,0x4489d42f,0xf1b908cf,0xa83e3c81,0x99e96192,
    0x3a3cdec6,0x7efc3f10,0x7910d901,0x3321fa85,0x0fe24ccc,0x95c999d3,
    0x8d530d9c,0x2000220a,0x99971c00,0x00220699,0x5d880000,0x3299bb99,
    0x22fe881e,0x7c0fa9f9,0x55f10f9a,0x4fc57c1f,0x70fe20f9,0x360fe2c1,
    0x492c23b8,0x477932c8,0x2c8d88e4,0x3e1f8874,0x49bb86da,0x53e25864,
    0x7e440441,0x5101dcc0,0x031255c5,0x00000000,0x40000000,0x81a81cc9,
    0x36262dc8,0x35f0b2c5,0x17e6f41f,0x1f33f15f,0x49a4c0d8,0x239c417c,
    0x2ba8209a,0x15041022,0xf51b8851,0x13e73ea7,0x84c504c5,0x0cc3cbfc,
    0x1717e766,0x00000017,0x00000000,0x64000000,0xaccaa80b,0x2eeab502,
    0x2efe6002,0xacf9802f,0xb802fbbf,0x13e64cdb,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x4cc00000,0x02001999,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,
};

static signed short stb__times_bold_12_latin_ext_x[560]={ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,-1,0,0,0,0,0,0,0,0,0,0,
-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,-1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,-1,0,-1,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,-1,0,-1,0,-1,0,0,0,0,0,0,0,-1,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,-1,1,1,1,
1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,-1,0,
0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,0,0,-1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1, };
static signed short stb__times_bold_12_latin_ext_y[560]={ 9,1,1,1,1,1,1,1,1,1,1,2,7,5,
7,1,1,1,1,1,1,1,1,1,1,1,3,3,2,4,2,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,10,1,3,1,3,1,3,1,3,1,1,
1,1,1,3,3,3,3,3,3,3,2,4,4,4,4,4,4,1,1,1,5,2,2,2,2,2,2,2,2,2,
2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,9,3,1,1,2,1,
1,1,1,1,1,4,4,5,1,0,1,2,1,1,1,4,1,4,8,1,1,4,1,1,1,3,-1,-1,-1,-1,
-1,-1,1,1,-1,-1,-1,-1,-1,-1,-1,-1,1,-1,-1,-1,-1,-1,-1,3,1,-1,-1,-1,-1,-1,1,1,1,1,
1,1,1,1,3,3,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,3,3,1,1,1,1,1,1,1,
0,2,-1,1,1,3,-1,1,-1,1,-1,1,-1,1,-1,1,1,1,0,2,-1,1,-1,1,1,3,-1,1,-1,1,
-1,1,-1,1,1,1,-1,-1,1,1,-1,1,0,2,-1,1,1,1,-1,4,1,1,-1,1,1,1,4,-1,-1,1,
1,1,1,1,1,1,1,-1,1,1,3,-1,1,1,1,3,0,2,-1,1,-1,1,1,3,-1,1,1,3,-1,1,
-1,1,-1,1,1,3,-1,1,1,2,-1,1,1,2,-1,1,0,2,-1,1,-1,1,-1,1,1,4,-1,1,-1,1,
-1,-1,1,-1,1,-1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,2,2,1,2,2,2,
2,2,2,2,2,2,2,2,2,2,1,3,2,2,2,2,2,2,2,2,2,2,2,2,2,0,3,2,2,2,
2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,-1,1,-1,1,-1,
1,-1,1,-1,0,-1,0,-1,-1,-1,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,
2,2,2,2,2,2,2,2,2,2,-3,-1,-1,1,-1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,
2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,
2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,
2,2,2,2,2,2, };
static unsigned short stb__times_bold_12_latin_ext_w[560]={ 0,3,6,6,6,11,9,3,4,4,5,6,3,4,
3,4,6,5,5,5,5,6,6,6,6,6,3,3,6,6,6,5,10,8,7,8,8,7,7,9,9,4,6,9,
7,11,8,9,7,9,8,6,7,8,8,11,8,8,8,3,4,3,6,7,3,6,6,5,6,5,5,6,6,3,
4,7,3,9,6,6,6,6,5,4,4,6,6,8,6,6,5,4,2,4,6,6,6,6,6,6,6,6,6,6,
6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,0,3,5,6,6,6,
2,5,4,8,4,6,7,4,8,7,4,6,3,3,3,7,6,3,3,3,4,6,8,8,8,5,8,8,8,8,
8,8,12,8,7,7,7,7,4,4,4,4,8,8,9,9,9,9,9,6,9,8,8,8,8,8,7,6,6,6,
6,6,6,6,8,5,5,5,5,5,4,4,5,5,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,
8,6,8,6,8,6,8,5,8,5,8,5,8,5,8,8,8,6,7,5,7,5,7,5,7,5,7,5,9,6,
9,6,9,6,9,6,9,6,9,6,4,5,4,5,4,5,4,3,4,3,9,6,6,5,9,7,7,7,4,7,
3,7,5,7,5,7,3,8,6,8,6,8,6,9,8,6,9,6,9,6,9,6,11,8,8,5,8,5,8,5,
6,4,6,4,6,4,6,4,7,4,7,6,7,4,8,6,8,6,8,6,8,6,8,6,8,6,11,8,8,6,
8,8,5,8,5,8,5,5,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,8,6,6,7,6,6,6,
6,6,6,6,6,6,6,6,6,6,9,7,6,6,6,6,6,6,6,6,6,6,6,6,6,10,7,6,6,6,
6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,8,6,4,5,9,
6,8,6,8,6,8,6,8,6,8,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,
6,6,6,6,6,6,6,6,6,6,8,6,12,8,9,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,
6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,
6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,
6,6,6,6,6,6, };
static unsigned short stb__times_bold_12_latin_ext_h[560]={ 0,9,5,9,9,9,9,5,11,11,5,7,4,3,
3,9,9,8,8,9,8,9,9,9,9,9,7,8,7,3,7,9,11,8,8,9,8,8,8,9,8,8,9,8,
8,8,9,9,8,10,8,9,8,9,9,9,8,8,8,10,9,10,5,2,3,7,9,7,9,7,8,9,8,8,
11,8,8,6,6,7,9,9,6,7,8,6,6,6,5,8,5,11,11,11,2,7,7,7,7,7,7,7,7,7,
7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,0,9,10,9,6,8,
11,11,3,9,4,5,3,3,9,2,5,7,5,5,3,8,11,3,4,5,4,5,9,9,9,9,10,10,10,10,
10,10,8,11,10,10,10,10,10,10,10,10,8,11,11,11,11,11,11,5,9,11,11,11,11,10,8,9,9,9,
9,9,9,9,7,9,9,9,9,9,8,8,8,8,9,8,9,9,9,9,9,5,7,9,9,9,9,11,11,11,
9,8,10,9,11,9,11,9,11,9,11,9,11,9,10,9,8,9,9,8,10,9,10,9,11,9,10,9,11,11,
11,11,11,11,11,11,10,10,8,8,10,8,9,7,10,8,11,11,10,5,9,11,11,11,11,11,5,10,10,11,
11,8,8,8,8,8,8,11,8,11,9,11,8,8,9,9,10,8,11,9,11,9,9,7,10,8,11,9,10,8,
11,9,11,9,11,9,11,9,11,10,10,9,8,8,11,9,10,8,11,9,11,9,11,9,11,8,11,9,10,11,
10,10,8,10,8,10,8,8,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,9,7,7,11,7,7,7,
7,7,7,7,7,7,7,7,7,7,9,7,7,7,7,7,7,7,7,7,7,7,7,7,7,10,7,7,7,7,
7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,10,9,10,8,11,
9,11,9,11,10,11,10,11,11,11,10,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,
7,7,7,7,7,7,7,7,7,7,12,11,10,9,11,9,7,7,7,7,7,7,7,7,7,7,7,7,7,7,
7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,
7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,
7,7,7,7,7,7, };
static unsigned short stb__times_bold_12_latin_ext_s[560]={ 253,252,104,179,73,8,237,91,1,78,168,
163,188,192,197,250,64,138,157,125,95,237,136,172,165,186,221,144,15,218,1,
159,172,247,77,100,1,22,41,76,228,63,69,85,55,118,60,50,110,54,101,
25,130,16,143,194,238,68,148,23,113,19,141,240,229,225,78,215,71,209,49,
86,34,30,44,14,10,50,36,247,93,36,74,22,200,43,60,27,161,167,148,
108,122,135,233,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,
176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,253,109,48,
187,67,91,147,158,201,32,183,80,210,192,41,248,99,8,95,87,225,235,183,
206,174,118,178,111,127,118,7,1,64,73,112,121,130,154,131,198,168,176,99,
40,144,223,149,210,28,207,216,234,1,41,63,134,227,82,100,118,28,82,98,
173,166,159,152,145,138,131,191,119,223,104,98,92,1,150,155,222,57,174,43,
36,29,22,15,154,240,1,243,236,229,92,140,185,201,21,201,181,218,169,244,
158,18,147,136,136,25,118,228,102,6,88,80,210,215,58,11,43,20,30,91,
217,54,154,243,92,99,85,34,6,191,184,205,215,163,181,247,170,139,187,13,
71,107,122,20,64,202,179,192,150,126,32,27,164,49,227,161,123,113,43,119,
170,106,209,188,234,76,243,64,1,136,193,75,95,44,111,124,200,193,216,145,
195,109,15,18,142,34,153,11,164,227,176,226,6,245,210,83,222,161,8,236,
203,127,206,109,213,91,220,73,57,51,244,118,27,146,127,70,166,64,175,37,
51,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,110,176,176,190,
176,176,176,176,176,176,176,176,176,176,176,176,176,193,183,176,176,176,176,176,
176,176,176,176,176,176,176,176,155,232,176,176,176,176,176,176,176,176,176,176,
176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,184,152,
1,144,125,180,113,85,99,202,83,209,69,62,53,229,176,176,176,176,176,176,
176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,
176,176,176,1,37,216,49,10,50,176,176,176,176,176,176,176,176,176,176,176,
176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,
176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,
176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,
176,176,176,176,176,176,176,176,176, };
static unsigned short stb__times_bold_12_latin_ext_t[560]={ 1,38,97,69,49,49,38,97,26,1,97,
88,97,97,97,49,59,88,88,59,88,59,69,69,69,69,88,88,97,97,97,
69,1,79,88,69,88,88,88,69,79,88,69,88,88,88,69,69,88,38,88,
69,88,69,69,59,79,88,88,38,69,38,97,97,97,88,59,88,59,88,88,
69,88,88,1,88,88,97,97,88,69,49,97,97,79,97,97,97,97,79,97,
1,1,1,97,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,
88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,1,69,38,
59,97,79,1,1,97,69,97,97,97,97,69,97,97,97,97,97,97,69,1,
97,97,97,97,97,69,69,69,69,38,38,38,38,38,38,79,1,38,38,38,
38,38,38,38,38,79,1,1,1,14,14,14,97,59,14,14,14,1,38,79,
59,59,59,59,59,59,59,88,59,49,59,59,59,79,79,79,79,59,79,59,
59,59,59,59,97,88,59,49,49,49,1,1,14,49,79,38,49,14,49,1,
49,14,49,14,49,26,49,38,49,79,49,49,69,38,49,38,49,1,49,38,
49,26,14,14,26,26,26,26,26,38,38,79,79,38,79,38,88,38,79,26,
26,38,97,49,26,14,14,14,1,97,38,38,1,1,69,79,79,79,79,79,
14,79,14,49,14,79,69,49,49,26,79,26,49,26,49,49,88,26,69,14,
49,26,79,26,49,14,49,14,49,14,49,1,38,26,49,79,69,14,59,26,
69,14,59,14,59,14,59,14,79,14,59,26,14,26,26,79,26,79,26,79,
79,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,59,88,88,1,
88,88,88,88,88,88,88,88,88,88,88,88,88,69,88,88,88,88,88,88,
88,88,88,88,88,88,88,88,26,88,88,88,88,88,88,88,88,88,88,88,
88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,26,69,
38,79,1,59,1,59,1,26,1,26,1,1,1,26,88,88,88,88,88,88,
88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,
88,88,88,1,1,26,49,1,59,88,88,88,88,88,88,88,88,88,88,88,
88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,
88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,
88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,
88,88,88,88,88,88,88,88,88, };
static unsigned short stb__times_bold_12_latin_ext_a[560]={ 43,58,96,87,87,173,144,48,
58,58,87,99,43,58,43,48,87,87,87,87,87,87,87,87,
87,87,58,58,99,99,99,87,161,125,116,125,125,116,106,135,
135,67,87,135,116,164,125,135,106,135,125,96,116,125,125,173,
125,125,116,58,48,58,101,87,58,87,96,77,96,77,58,87,
96,48,58,96,48,144,96,87,96,96,77,67,58,96,87,125,
87,87,77,68,38,68,90,135,135,135,135,135,135,135,135,135,
135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,
135,135,135,135,135,135,135,135,43,58,87,87,87,87,38,87,
58,130,52,87,99,58,130,87,69,95,52,52,58,100,94,43,
58,52,57,87,130,130,130,87,125,125,125,125,125,125,173,125,
116,116,116,116,67,67,67,67,125,125,135,135,135,135,135,99,
135,125,125,125,125,125,106,96,87,87,87,87,87,87,125,77,
77,77,77,77,48,48,48,48,87,96,87,87,87,87,87,95,
87,96,96,96,96,87,96,87,125,87,125,87,125,87,125,77,
125,77,125,77,125,77,125,127,125,96,116,77,116,77,116,77,
116,77,116,77,135,87,135,87,135,87,135,87,135,96,135,96,
67,48,67,48,67,48,67,48,67,48,143,96,87,58,135,96,
96,116,48,116,48,116,81,116,69,116,48,125,96,125,96,125,
96,126,133,96,135,87,135,87,135,87,173,125,125,77,125,77,
125,77,96,67,96,67,96,67,96,67,116,58,116,90,116,58,
125,96,125,96,125,96,125,96,125,96,125,96,173,125,125,87,
125,116,77,116,77,116,77,48,135,135,135,135,135,135,135,135,
135,135,135,135,135,135,135,128,135,135,87,135,135,135,135,135,
135,135,135,135,135,135,135,135,135,96,135,135,135,135,135,135,
135,135,135,135,135,135,135,138,104,135,135,135,135,135,135,135,
135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,
135,135,135,135,135,125,87,67,48,135,87,125,96,125,96,125,
96,125,96,125,96,135,135,135,135,135,135,135,135,135,135,135,
135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,
135,135,125,87,173,125,135,87,135,135,135,135,135,135,135,135,
135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,
135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,
135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,
135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,
135,135,135,135,135,135,135,135, };

// Call this function with
//    font: NULL or array length
//    data: NULL or specified size
//    height: STB_FONT_times_bold_12_latin_ext_BITMAP_HEIGHT or STB_FONT_times_bold_12_latin_ext_BITMAP_HEIGHT_POW2
//    return value: spacing between lines
static void stb_font_times_bold_12_latin_ext(stb_fontchar font[STB_FONT_times_bold_12_latin_ext_NUM_CHARS],
                unsigned char data[STB_FONT_times_bold_12_latin_ext_BITMAP_HEIGHT][STB_FONT_times_bold_12_latin_ext_BITMAP_WIDTH],
                int height)
{
    int i,j;
    if (data != 0) {
        unsigned int *bits = stb__times_bold_12_latin_ext_pixels;
        unsigned int bitpack = *bits++, numbits = 32;
        for (i=0; i < STB_FONT_times_bold_12_latin_ext_BITMAP_WIDTH*height; ++i)
            data[0][i] = 0;  // zero entire bitmap
        for (j=1; j < STB_FONT_times_bold_12_latin_ext_BITMAP_HEIGHT-1; ++j) {
            for (i=1; i < STB_FONT_times_bold_12_latin_ext_BITMAP_WIDTH-1; ++i) {
                unsigned int value;
                if (numbits==0) bitpack = *bits++, numbits=32;
                value = bitpack & 1;
                bitpack >>= 1, --numbits;
                if (value) {
                    if (numbits < 3) bitpack = *bits++, numbits = 32;
                    data[j][i] = (bitpack & 7) * 0x20 + 0x1f;
                    bitpack >>= 3, numbits -= 3;
                } else {
                    data[j][i] = 0;
                }
            }
        }
    }

    // build font description
    if (font != 0) {
        float recip_width = 1.0f / STB_FONT_times_bold_12_latin_ext_BITMAP_WIDTH;
        float recip_height = 1.0f / height;
        for (i=0; i < STB_FONT_times_bold_12_latin_ext_NUM_CHARS; ++i) {
            // pad characters so they bilerp from empty space around each character
            font[i].s0 = (stb__times_bold_12_latin_ext_s[i]) * recip_width;
            font[i].t0 = (stb__times_bold_12_latin_ext_t[i]) * recip_height;
            font[i].s1 = (stb__times_bold_12_latin_ext_s[i] + stb__times_bold_12_latin_ext_w[i]) * recip_width;
            font[i].t1 = (stb__times_bold_12_latin_ext_t[i] + stb__times_bold_12_latin_ext_h[i]) * recip_height;
            font[i].x0 = stb__times_bold_12_latin_ext_x[i];
            font[i].y0 = stb__times_bold_12_latin_ext_y[i];
            font[i].x1 = stb__times_bold_12_latin_ext_x[i] + stb__times_bold_12_latin_ext_w[i];
            font[i].y1 = stb__times_bold_12_latin_ext_y[i] + stb__times_bold_12_latin_ext_h[i];
            font[i].advance_int = (stb__times_bold_12_latin_ext_a[i]+8)>>4;
            font[i].s0f = (stb__times_bold_12_latin_ext_s[i] - 0.5f) * recip_width;
            font[i].t0f = (stb__times_bold_12_latin_ext_t[i] - 0.5f) * recip_height;
            font[i].s1f = (stb__times_bold_12_latin_ext_s[i] + stb__times_bold_12_latin_ext_w[i] + 0.5f) * recip_width;
            font[i].t1f = (stb__times_bold_12_latin_ext_t[i] + stb__times_bold_12_latin_ext_h[i] + 0.5f) * recip_height;
            font[i].x0f = stb__times_bold_12_latin_ext_x[i] - 0.5f;
            font[i].y0f = stb__times_bold_12_latin_ext_y[i] - 0.5f;
            font[i].x1f = stb__times_bold_12_latin_ext_x[i] + stb__times_bold_12_latin_ext_w[i] + 0.5f;
            font[i].y1f = stb__times_bold_12_latin_ext_y[i] + stb__times_bold_12_latin_ext_h[i] + 0.5f;
            font[i].advance = stb__times_bold_12_latin_ext_a[i]/16.0f;
        }
    }
}

#ifndef STB_SOMEFONT_CREATE
#define STB_SOMEFONT_CREATE              stb_font_times_bold_12_latin_ext
#define STB_SOMEFONT_BITMAP_WIDTH        STB_FONT_times_bold_12_latin_ext_BITMAP_WIDTH
#define STB_SOMEFONT_BITMAP_HEIGHT       STB_FONT_times_bold_12_latin_ext_BITMAP_HEIGHT
#define STB_SOMEFONT_BITMAP_HEIGHT_POW2  STB_FONT_times_bold_12_latin_ext_BITMAP_HEIGHT_POW2
#define STB_SOMEFONT_FIRST_CHAR          STB_FONT_times_bold_12_latin_ext_FIRST_CHAR
#define STB_SOMEFONT_NUM_CHARS           STB_FONT_times_bold_12_latin_ext_NUM_CHARS
#define STB_SOMEFONT_LINE_SPACING        STB_FONT_times_bold_12_latin_ext_LINE_SPACING
#endif

