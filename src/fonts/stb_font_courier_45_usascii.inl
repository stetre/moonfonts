// Font generated by stb_font_inl_generator.c (4/1 bpp)
//
// Following instructions show how to use the only included font, whatever it is, in
// a generic way so you can replace it with any other font by changing the include.
// To use multiple fonts, replace STB_SOMEFONT_* below with STB_FONT_courier_45_usascii_*,
// and separately install each font. Note that the CREATE function call has a
// totally different name; it's just 'stb_font_courier_45_usascii'.
//
/* // Example usage:

static stb_fontchar fontdata[STB_SOMEFONT_NUM_CHARS];

static void init(void)
{
    // optionally replace both STB_SOMEFONT_BITMAP_HEIGHT with STB_SOMEFONT_BITMAP_HEIGHT_POW2
    static unsigned char fontpixels[STB_SOMEFONT_BITMAP_HEIGHT][STB_SOMEFONT_BITMAP_WIDTH];
    STB_SOMEFONT_CREATE(fontdata, fontpixels, STB_SOMEFONT_BITMAP_HEIGHT);
    ... create texture ...
    // for best results rendering 1:1 pixels texels, use nearest-neighbor sampling
    // if allowed to scale up, use bilerp
}

// This function positions characters on integer coordinates, and assumes 1:1 texels to pixels
// Appropriate if nearest-neighbor sampling is used
static void draw_string_integer(int x, int y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0, cd->t0); glVertex2i(x + cd->x0, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t0); glVertex2i(x + cd->x1, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t1); glVertex2i(x + cd->x1, y + cd->y1);
        glTexCoord2f(cd->s0, cd->t1); glVertex2i(x + cd->x0, y + cd->y1);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance_int;
    }
    glEnd();
}

// This function positions characters on float coordinates, and doesn't require 1:1 texels to pixels
// Appropriate if bilinear filtering is used
static void draw_string_float(float x, float y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0f, cd->t0f); glVertex2f(x + cd->x0f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t0f); glVertex2f(x + cd->x1f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t1f); glVertex2f(x + cd->x1f, y + cd->y1f);
        glTexCoord2f(cd->s0f, cd->t1f); glVertex2f(x + cd->x0f, y + cd->y1f);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance;
    }
    glEnd();
}
*/

#ifndef STB_FONTCHAR__TYPEDEF
#define STB_FONTCHAR__TYPEDEF
typedef struct
{
    // coordinates if using integer positioning
    float s0,t0,s1,t1;
    signed short x0,y0,x1,y1;
    int   advance_int;
    // coordinates if using floating positioning
    float s0f,t0f,s1f,t1f;
    float x0f,y0f,x1f,y1f;
    float advance;
} stb_fontchar;
#endif

#define STB_FONT_courier_45_usascii_BITMAP_WIDTH         256
#define STB_FONT_courier_45_usascii_BITMAP_HEIGHT        178
#define STB_FONT_courier_45_usascii_BITMAP_HEIGHT_POW2   256

#define STB_FONT_courier_45_usascii_FIRST_CHAR            32
#define STB_FONT_courier_45_usascii_NUM_CHARS             95

#define STB_FONT_courier_45_usascii_LINE_SPACING          21

static unsigned int stb__courier_45_usascii_pixels[]={
    0x01306600,0x01880110,0xa88f4400,0x0391aaaa,0x00260000,0x02aaaaaa,
    0x00001830,0x00000000,0x10000088,0x00000153,0x44001988,0xaaaaaaaa,
    0xdd881aaa,0x7fc40000,0xe8077fa1,0x00ff9104,0xffd1fc80,0x01fa9fff,
    0x40274000,0x04ffffff,0x004f87ee,0x007cc6b8,0xceffec88,0x7f654000,
    0xc8002cef,0x1ceffffe,0xd913bbb2,0x7f6449dd,0x400bdfff,0xfffffff9,
    0x640fffff,0x440002ff,0x3fee21ff,0x3fa0bd00,0x3e20000c,0x3eaaaa25,
    0x00005f54,0x5bf00bf0,0x3e601555,0x2000fec6,0x400fd47d,0xfdccefe9,
    0xffd8800e,0x0dffdbbd,0xacefe980,0xfb2ffdba,0xfeed8bdd,0x557bff35,
    0x4c01dfd9,0xaaaaaacf,0xffc81aaa,0x7fc40003,0xbd04f981,0x00005f30,
    0x24f803f7,0x4400006e,0x027c00df,0x6f985fb0,0x3ee36c00,0x40f7cc00,
    0x3e600ee9,0x07bee02f,0x2202ff98,0xd006dbfe,0x5403df5b,0x05f300ef,
    0x017fe400,0x407fe200,0xf90bd06e,0x01be0000,0x002fb93e,0xffffea80,
    0x027c173e,0x5fb06f98,0x3ee2f400,0x3007f400,0x07fe607f,0x2203fea0,
    0xffb000fe,0x17ffa00d,0x4c077c40,0x3ee0002f,0x8000002f,0xdb0bd06d,
    0x05f70000,0x006f89f0,0x2b3bf620,0x23ffffdb,0x05fb004f,0x5e801be6,
    0x0fea03e4,0x07f41760,0xf90bf300,0x37f44005,0x000efe80,0x0be613e6,
    0x01ffb800,0x06d80000,0x000db0bd,0x13e00dd0,0x320003f7,0x8ffea03f,
    0x07f8804f,0x4f800ff4,0x01ba03e4,0x01fd43dc,0x13e0fe40,0x401bea00,
    0x6c8002fe,0x20002f98,0x00001ffa,0x0bd06d80,0xfa8000db,0xf889f003,
    0x04f98005,0x013e3fb8,0x9f7013ee,0x0db13e00,0xfa801fcc,0x88003741,
    0x000be66f,0x7f401be2,0x40fa8000,0x2a0002f9,0x000001ff,0xb0bd06d8,
    0x07e8000d,0x07f213e0,0x2001f700,0x3a013e1d,0x03fc401f,0x81ba1fc4,
    0x3f5001fa,0x900017d4,0x0007ea3f,0x06e80374,0xf985f300,0x3fe60002,
    0x7776c400,0x5eeeeeee,0xb0bd06d8,0x1fcc000d,0xbf109f00,0x0007d800,
    0x0ff3013e,0xf100bfa0,0x3ee05e87,0x3fb2e600,0x80003ee1,0x001f72f9,
    0x37401ba0,0x4c3f8800,0xdeeca8af,0x03fe601c,0xdddddb10,0xb0ffdddd,
    0x1b617a0d,0x000fd800,0x007e413e,0x20001f70,0x037e404f,0x7cc05fd8,
    0x0f902fc2,0x3fbfff22,0x10001f21,0x000be67f,0x07e8037c,0xf983f500,
    0xfeeffffe,0x07f880df,0x6c3e4000,0x0db0bd06,0x0013e600,0x013e609f,
    0xf0005f98,0x005fd809,0xfffa8df9,0xffffffff,0x0dd0efff,0x3ea39fd1,
    0x20001b61,0x20013e5f,0x3fd006f9,0x881f9000,0x6441bdff,0x03fc40ef,
    0x321f2000,0x5f85e80f,0x001fb000,0x03f604f8,0x01befc80,0x9fd013e0,
    0x911fee00,0x999bfb99,0x747999df,0x7d42fd85,0x200017e1,0x0007f66e,
    0x3fa00dfd,0x82fc4006,0x889f5001,0x6400007f,0x5e83fa87,0x440027d4,
    0x04f8004f,0xd3000fe6,0x4057bfff,0x01ffc04f,0x2e00ffa8,0xe80fe20f,
    0x7d427c45,0x200017a1,0x801be25e,0xfd006ffb,0x07f4007f,0x20fec000,
    0x6400006f,0x745dfb07,0x001dfb35,0xf0003f90,0x0007e809,0x9fffdb51,
    0x7fc409f0,0x03ff3002,0x05f307dc,0x20be62f4,0x001b61fa,0x3df713e0,
    0x06ecfc80,0x809f9dd0,0x00003fe8,0x006f87f1,0xf983e400,0x3fabd0ff,
    0x5f88002f,0xa809f000,0xa880003f,0x813e0dfd,0xf1001ff9,0x263e405f,
    0xf517a02f,0x3e43f505,0x20fe2000,0x989acffb,0x00db3feb,0x55f7dd7a,
    0x03ffca88,0x3a27c000,0x3e400005,0xbd067f44,0x0007fee2,0x3e0003f7,
    0x0006e804,0x09f2fd40,0x98017fc4,0x51f201ff,0x222f403f,0x2e1fa86f,
    0x3ea0001f,0xffffb101,0x036c5dff,0x3ffaa5e8,0x000dffff,0x0d46e800,
    0x21f20000,0x4c5e82fb,0x037c004f,0xf5009f00,0x7c800005,0x07ff013e,
    0x9883fea0,0xb999ed99,0x2f4099af,0x3f505fe4,0xd00027c4,0xbb98801f,
    0xd006d809,0x1377310b,0x2f400000,0x3e400000,0xe85e83e4,0x00bee006,
    0xdd004f80,0x1fa80000,0x04fe809f,0x7fccff70,0xffffffff,0x361fffff,
    0xcdffe886,0x00fe43fd,0x0001fd40,0x17a00db0,0x20000000,0x8000004f,
    0xbd06d87c,0x37400db0,0x4013e000,0x00d502fb,0x809f1fa8,0xdf9005fd,
    0xaefaaaa8,0x2aaafdaa,0xffd703e4,0x06f88fff,0x00006e80,0x05e8036c,
    0x4c000000,0x8000003f,0xbd06d87c,0x3ea00db0,0x027c0002,0x3f905f88,
    0x4f87ec00,0xd803fdc0,0x3227c04f,0x8007dc07,0x04fb8098,0x0000bf60,
    0x17a00db0,0xb0000000,0x0000003f,0x3a0db0f9,0xdd006d85,0x009f0000,
    0x77e40fe4,0x3e4fb800,0x007fc404,0x13e00ffc,0x01fa80db,0x01bf9000,
    0x00027f44,0x5e8036c0,0x09f10000,0x2a227cc0,0x3e400002,0xd85e836c,
    0x003fa806,0x22004f80,0xbfffc85f,0x7c6fd980,0x402fd804,0x1fc406f9,
    0x0bf101b6,0x67fe4000,0x2ffca88a,0x0db00000,0x800017a0,0x7d401efc,
    0x037ffc0f,0xdb0f9000,0x01b617a0,0x200003f6,0x07e4004f,0x3fff63ee,
    0xf83fffee,0x405fa804,0x1fc403fc,0x03f2017a,0xffd98000,0x001effff,
    0x3a666200,0xdd33019e,0x80001333,0x989bdffa,0x7d41efda,0x00001fff,
    0x3a0db0f9,0x7cc06d85,0x09f00004,0x0c44f880,0x159ffb73,0x7fc013e0,
    0x3003fe00,0x9805f85f,0xb800005f,0x0000acff,0x7ffffe40,0x7ffc7fff,
    0x05ffffff,0x7ff64400,0xf104ffff,0x40000dff,0xbd06d87c,0x0fd80db0,
    0x009f0000,0x3e001fb0,0x9004f805,0x017ea07f,0x009f0be6,0x095017f2,
    0x4003bf20,0xaaa98000,0x542aaaaa,0xaaaaaaaa,0x26200001,0xbb8801bb,
    0x1f200000,0x642f413e,0x009f100f,0x40027c00,0x0bf004f9,0x3e2009f0,
    0x5003fd07,0x2004f83f,0xb999befd,0x7f4404fe,0xabdeffef,0x0005fc98,
    0x00000000,0x00000000,0x7dc6d800,0x9f50bd01,0x00003f20,0xfb0004f8,
    0xf00bf001,0x21fe4009,0x1f7005fa,0x2e001fc4,0x3effffff,0xdeffff80,
    0xffffffdc,0xbbbbb10d,0xbbbbbbbb,0xbbbbbbbb,0x0000019b,0x00000000,
    0xfeaa7400,0x7ec17a06,0x0017e23e,0x4fcccca8,0x007f5000,0x99df00bf,
    0x1fe20399,0x3ee001fd,0x4000be20,0x2001aba9,0x32a201ab,0x77774c1b,
    0xeeeeeeee,0xeeeeeeee,0x00000eee,0x00000000,0x3a5f3000,0x501ec02e,
    0x000fdcdb,0x9fffffb0,0x4036c000,0xffff804e,0x83e603ff,0x20a2002f,
    0x00000002,0x00000000,0x00000000,0x00000000,0x0007f440,0x00008000,
    0x03000000,0x00000370,0x00000000,0x00000000,0x00000000,0x00000000,
    0x33100000,0x3ff73333,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x7fd40000,0x0effffff,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x55440000,0x000aaaaa,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x55555400,
    0xaaaaaaaa,0x2f32602a,0x6e4c0001,0x8000bcee,0x2a000098,0x0002cdec,
    0x00000151,0x859db951,0x0002aaa9,0x33bb2e00,0x54400002,0xb95002aa,
    0x200007bd,0x2a6019a9,0x800001aa,0xfffffffe,0x07ffffff,0x07fd7df9,
    0xdfffb100,0x8005fffd,0xd88005fc,0x05ffeeff,0xfffffb10,0x6f775c5b,
    0x7fff4400,0x3fe0ffee,0x800005ff,0xffeeffe9,0xff00001e,0xff900dff,
    0x003dffdd,0xfffffb30,0x3fe63dff,0x800004ff,0xaaaaaaee,0x87daaaaa,
    0x01fcc1ec,0x3017ff30,0x7e4007fd,0x5ff44005,0x501bf220,0xd9557bff,
    0x37bbf27f,0x06ffee00,0x0bd55106,0x2efa8000,0x0001ffb8,0x406eaa88,
    0x7fd40dfd,0x33fea001,0x2eccbaaa,0x0013eaa6,0xb0017a00,0xf702f88f,
    0x400f7400,0xbf9001fe,0x203fc800,0x3df503fb,0x03e67e40,0x0000efd8,
    0x440000bd,0x1be200ef,0x40db0000,0x1fe204fa,0x00077c40,0x000009f0,
    0x44f80057,0x007e207a,0x4f88004c,0x400bf900,0x0fe805f8,0xfa8037c4,
    0x04fc807f,0x0002f400,0xf5003f90,0x36c00007,0x7f500dd0,0x0007f700,
    0x000004f8,0x5c2fa800,0x00017405,0x00006e80,0x2e007f20,0x000fec3f,
    0x5f980ffb,0x005e8000,0xf8017a00,0x1b600005,0x7d8017cc,0x80007d80,
    0x0000004f,0x0fa87c80,0x00001f30,0x00001f60,0x9be006f8,0x7c4004f8,
    0x003fe207,0x00017a00,0x1b6004f8,0x506d8000,0x07ea003f,0xf0000dd0,
    0x00000009,0x07f10bf0,0x800001b2,0x1000004e,0x33ec007f,0x0fd0005f,
    0x800017dc,0x0026605e,0x0bd002f4,0x0db00cc0,0x4f8801f2,0x40003740,
    0x0000004f,0xfa817cc0,0x001fb31c,0x00bea000,0x017cc000,0x03ee1f90,
    0x5d81f600,0x897a0000,0x3effffdb,0xf88035c0,0x7ffed402,0x41b60bdf,
    0x1374007b,0xddffdddb,0x03bddddd,0xeed884f8,0x00004eee,0xfd3007e4,
    0x00c01dff,0x2a0df500,0x04eeeeed,0x5c003f50,0x0001f71f,0x001fc0f9,
    0x3fa2bd00,0xefecaabd,0xb009f300,0x677f401f,0xb0efdbaa,0x4007e60d,
    0x3bb627f9,0xeeeeeffe,0x27c01eee,0x777ff6c4,0x2f400004,0x93009880,
    0x331001ff,0x7540bfb5,0x005feeee,0x7d4001f7,0xd0005f52,0x260be20f,
    0x37a001bc,0x3ee01ff9,0x209f901f,0x3f603fd8,0x367fa603,0x2007f106,
    0x1ba00ffe,0x4c13e000,0x000001ff,0x4c0007f3,0x2002cffc,0x004fffff,
    0x1f200bd0,0x3e25f300,0x83fc4003,0xfffb10fa,0xdd001dff,0xdf3001df,
    0x5deffdc0,0x3f602ffd,0x0ddfb001,0x3ee007f4,0x01ba00fd,0x3ea13e00,
    0x2000000e,0x654000fb,0x30001cff,0x003fffb7,0x1f200bd0,0x7f45f300,
    0x41ff2000,0x4473fa7c,0x7f401ffb,0x0fee001f,0xffffffd8,0x800fee04,
    0x3e606ff8,0x3eaff205,0x0001ba01,0x01bf913e,0x06e80000,0x039dfb50,
    0x7fd30000,0x9005e800,0x22f9800f,0xff3005f9,0x0fedf20f,0x7f406e88,
    0xb07e8003,0xfb7335bf,0x20017609,0x77d406fb,0x7d53f6a1,0x0001ba01,
    0x004fd93e,0x03f88000,0x0073bf6a,0x27ec0000,0x3200bd00,0x0be6000f,
    0x7d401bf7,0xfbf707cd,0x204f9803,0xfb8001fe,0xa807b620,0x8003f85f,
    0xffb806f8,0x3ee3ffff,0x0001ba01,0x00ffa33e,0x0fd40000,0x5101be98,
    0x80000159,0x017a007d,0xf5000fdc,0x137ff903,0x1f2bfb53,0xd8027fdc,
    0x4001fa07,0x007f22f9,0x01f98fea,0x4c00df00,0x00fc81cb,0x3e0001ba,
    0x0000effe,0x000db000,0x17feffdc,0x05f50000,0x7d4017a0,0x403ee002,
    0xefffffe9,0x37d41f24,0x3a01f700,0x47f10006,0xb976004f,0x0db0000f,
    0x203f4000,0xff80006e,0x0000efae,0x0004f800,0x17dc45d7,0x009f0000,
    0x1fcc017a,0x5100f700,0x20f90159,0x3ea003f8,0x2000fd01,0x005f32f9,
    0x01fa87dc,0x0000dd00,0x0dd017e2,0x261df000,0x000000ef,0x220007ea,
    0x000f902f,0x5e803740,0x4009f100,0xf900006d,0xf5002f40,0x0003fa03,
    0x007dc7ea,0x0be23f30,0x001be200,0x3a017e40,0x44f80006,0x00000ef9,
    0x2a000f90,0x0007e207,0x5e8027c0,0x4401fa00,0xfb00005f,0xb8007e40,
    0x005fd00f,0x00fccf90,0x02741f70,0x00037d40,0x374037cc,0x5427c000,
    0x800000ef,0x0b70004f,0xa80002e8,0x00bd002f,0x7dc01fdc,0x0bf00001,
    0x6d801fcc,0x8003ffa0,0x013e24f9,0x00fe47d8,0x0001bfa0,0x1ba003fa,
    0x5413e000,0x200000ef,0xf50002f9,0x1707e601,0x0037c400,0x37c400bd,
    0x00017e20,0x3f601fdc,0xd01fd400,0x374009ff,0x7d400fec,0x90037444,
    0x4c000dff,0x0dd002fe,0x5409f000,0x3200006f,0x0fe20007,0x33fe2364,
    0x007f4c00,0xfb800bd0,0x003fd104,0x801df500,0xdd300df9,0x0dfbde80,
    0x2207fa60,0x1be601ef,0x9100f7c4,0x2000db7f,0x3a002ffb,0x04f80006,
    0x80002fd4,0x7d40005e,0x103f910b,0x31359ffb,0x8003dfb5,0xdfd8005e,
    0x03feb98b,0x73333310,0x26001dfb,0xfb989bff,0x5fccb81e,0x2a237ff5,
    0x3e602ffc,0xfca889cf,0x33fe600e,0x25fd730a,0x2e63ccfd,0xefeca989,
    0x33332600,0xccccccff,0x9f99703c,0x677f64c0,0x2f88001c,0xeffa8000,
    0x7ecc02ef,0x04ffffff,0x99999971,0x999999df,0x7fffdc07,0xff1002ff,
    0x19ffffff,0xfffc9800,0xffd00eff,0x7fff4cbf,0x8800dfff,0x4ffffffd,
    0xffffb300,0x7fec3dff,0x3fffea6f,0xfc803dff,0xffffffff,0xe886ffff,
    0x3ee04fff,0x003fffff,0x98800000,0x5440009a,0x3e2009ac,0xffffffff,
    0x0effffff,0x006ee620,0x2aaaaaa0,0xb980000a,0x7300000a,0x51000157,
    0x20001377,0x10001bb9,0x00001573,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x55555100,0x776c0035,0x3aa01dee,0x2a62eeee,0x000001aa,0x80000110,
    0x4c001aaa,0xd9510002,0x4400039b,0x06620000,0x00044000,0x22000c00,
    0x2ccccccc,0xcccccca8,0x33333264,0xcccccccc,0x7fffe40c,0x3b6005ff,
    0x2e01eeef,0xf33effee,0x00009fff,0x7fff6d40,0x7cc0002d,0xfca804ff,
    0xffc8005f,0x00dffeef,0xbffffd90,0x7ed40645,0x002effff,0x77ffff54,
    0x22006a0c,0x3effffdb,0xfffd30aa,0xff907fff,0x2a1dffff,0xffffffff,
    0x41efffff,0x5faaaaa8,0x0027cc00,0x7dd4c374,0xd8800004,0xffdbbdff,
    0x5fd0000e,0x3ff6a09f,0x6c005fdf,0x7fdc0adf,0x33bfea00,0xfaefecbb,
    0x2f3fff22,0x00dffcba,0x5e77ff4c,0x0bd3ffec,0x5effff44,0x5eaeffec,
    0x3a0017e0,0x002f4005,0x6c002f40,0x0bea000f,0x800009f0,0x3ee02ff9,
    0x97d4001f,0xadffb84f,0x7ec00bd0,0x982fcc03,0x3fea02ef,0x880bbe2f,
    0x3fea05fc,0x3fbf6202,0x017ff505,0x817ffaa2,0x05e8005f,0x40002f40,
    0x4f98005e,0x3e01ba00,0x3e600004,0x0ffa801f,0x27cdf100,0x005e80c4,
    0x3ee00bf3,0x9800fe83,0x4013e2ff,0x0ef982fd,0x10bff500,0x7e4003ff,
    0x20017e05,0x02f4005e,0x8002f400,0x3fa800fd,0x00004f80,0xf98003fa,
    0x7c3f9005,0x802f4004,0x17e000fc,0x7e4005f3,0x7c4013e2,0x4001fe85,
    0x01fe85fb,0xbf02fc40,0x800bd000,0x5e80005e,0x007f3000,0x013e00dd,
    0x001fd400,0x3e2017e4,0x3a0027c5,0x80057005,0x0007dc7d,0x0004c5f3,
    0x004fa8fb,0x27d45f88,0x3e04d800,0x005e8005,0x740002f4,0x03f60005,
    0x9f003f98,0x22003510,0xdf10006f,0x27c0fd80,0x00017a00,0x07dc7d80,
    0x80002e00,0x0007e47c,0x007e43d8,0x005f8000,0x2f4005e8,0x002f4000,
    0x3ec07f30,0x7f649f00,0x2a01dfff,0x3f20002f,0x9f07f300,0x0005e800,
    0x5f317a00,0xe8000000,0x00002745,0x800001ba,0x05e8005f,0x40002f40,
    0x3ec0005e,0x3e003f98,0xa9cefe8c,0x1f701ffc,0x81fcc000,0x8009f06e,
    0x7000005e,0x001fd05f,0x8be60000,0x200002f8,0x000003f8,0x17a0017e,
    0x0000bd00,0xf98000bd,0x7c007d83,0xfd101efd,0x8000f903,0x02fb84f8,
    0x05e8009f,0x05f98000,0x00007ff3,0x2a0ffa80,0x2a00001f,0x2000001f,
    0x05e8005f,0x40002f40,0x7d80005e,0x3e001fcc,0x1fc400ef,0x7c000374,
    0x9f02fc45,0x0005e800,0x1007f440,0x0359dff9,0x1dfb3000,0x00000fb8,
    0x000003ee,0x5e8005f8,0x0002f400,0x4c0002f4,0x2001f63f,0x0db000ff,
    0xdd0000bf,0x13e01fc8,0x0000bd00,0x8800ff44,0x3dffffdb,0x27ff5400,
    0x00000fb8,0x000003ee,0x5e8005f8,0x0002f400,0xd80002f4,0xf0007f37,
    0x743e4009,0x25e80005,0x027c04f9,0x400017a0,0x20001fe8,0x00dfeca8,
    0x200bff88,0x200000fb,0x000000fb,0x17a0017e,0x0000bd00,0x260000bd,
    0x8000fdbf,0x21f2004f,0x3f80006d,0x09f003f6,0x80005e80,0x00001fe8,
    0x220077dc,0x00fb803f,0x003ee000,0xfffffff5,0x00bf03ff,0x5e800bd0,
    0x005e8000,0x013ff600,0xf90027c0,0x98000f90,0xf007f51f,0x005e8009,
    0x000ffcc0,0x404f9800,0x2fa803f8,0x0be60000,0x99999910,0x0bd019df,
    0xe800bd00,0x05e80005,0x03fe6000,0x90027c00,0x0003f50f,0x557fd3d4,
    0xbf555555,0x017a0035,0x001ff980,0x4036c000,0x04f8800c,0x00fe2000,
    0x1b205e80,0x8009f100,0x5e80005e,0x13e60000,0x2004f800,0x004f987c,
    0xfffe9ba0,0xffffffff,0x0bd007ff,0x007fe600,0xfb800244,0x1ba00000,
    0x009f0000,0x0f502f40,0x4003fa80,0x5e80005e,0x03f60000,0x2004f800,
    0x003f907c,0x4cc49f50,0x99999999,0x17a001df,0x003bea00,0xb8001fa8,
    0x2a00000f,0x3600003f,0x0bd0001f,0xf9001fc4,0x005e8003,0x00005e80,
    0xf80009f1,0x441f2004,0x0fe8005f,0x8009f000,0x77d4005e,0x027d4000,
    0x000036c0,0x540007ec,0x001be21f,0x03fa02f4,0x20017ea0,0x5e80005e,
    0x01f90000,0x2004f800,0x013ee07c,0x20003fd8,0x02f4004f,0x0001df50,
    0x54003ff5,0x0155404f,0x4001df10,0x04fa86fb,0x74405e80,0x03fea01e,
    0x00017a00,0x2200017a,0x4f80004f,0xfb01f200,0x27f4401b,0x0013e000,
    0x37ee00bd,0x7d431000,0x6fa801ff,0x03fffec0,0x9005ff30,0x3bf601bf,
    0x00bf1001,0x51137fd1,0x64403ff9,0xcefccccc,0x000ccccc,0x999800bd,
    0x009afd99,0xc8013e00,0xacefb807,0x04ffca88,0x4004f800,0x05fb805e,
    0xd5f53dc0,0x6d4c35bf,0x3fe200ff,0x26002fff,0xa889bdff,0xfa804fec,
    0x53109adf,0x22007ffb,0xdffffffd,0x7fffd400,0xffffffff,0x999911ff,
    0x999df999,0xffe87999,0xffffffff,0x3f32a002,0xcc880cce,0x2602ccfe,
    0xdffffffe,0x99970001,0x664479df,0xccefcccc,0x9f90cccc,0x99999999,
    0x34cfd999,0xfffffff7,0x3ffa007f,0x5c4000ff,0xefffffff,0x3ff22001,
    0xbfffffff,0x57730000,0x40000001,0xfffffff9,0xffffffff,0x2aaaa60e,
    0x00aaaaaa,0x3fffff60,0xffffa81f,0xba8805ff,0x220001ac,0x6ffffffe,
    0x3fffffea,0xffffffff,0xffffff91,0xffffffff,0x5995300f,0x65c40013,
    0x54c0000b,0x400009bc,0x01abcba8,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x0006e000,0x33332a00,0xcccccccc,0x66666644,0x0acccccc,0x99999500,
    0x66540399,0x321ccccc,0x03cccccc,0x3333332e,0x33333223,0xcccccccc,
    0x6644cccc,0xcc8004cc,0x6665c4cc,0x332a00cc,0x66642ccc,0xb82ccccc,
    0x5c3ccccc,0x201ccccc,0x22ccccca,0x82cccccb,0x04ccccca,0x000007f0,
    0xfffffff9,0x21dfffff,0xffffffe8,0x3fffffff,0xfffffb80,0x3fee02ff,
    0xd12fffff,0x09ffffff,0x7ffffff4,0x3ffffe65,0xffffffff,0x7f47ffff,
    0x2a002fff,0x360effff,0x202fffff,0x24fffffb,0xffffffe8,0xffffd83f,
    0x7fffec5f,0x3ffee02f,0x3fff64ff,0xfffc84ff,0x4f800eff,0x54000000,
    0x813e001f,0x800efd98,0x360004f8,0x0003ee07,0x17cc1fa8,0x83e40bf0,
    0x3a006ecf,0xfd100fbe,0x02fcc001,0x9fb0027c,0x2001fc80,0x013e03fb,
    0x3e000fc8,0x40000004,0x13e001fa,0xd802fd40,0x09f10007,0x50000fd4,
    0x202f981f,0x7c1f205f,0xf9801fbc,0x3e600fbb,0x01df1005,0xfb1009f0,
    0x00dd1007,0x09f017e2,0xf0007e40,0x80000009,0x13e001fa,0xa802fb80,
    0x1fb8002f,0x8000be60,0x202f987b,0x7c1f205f,0x1f900bf4,0x4fa801f7,
    0xf001fe80,0x02fe8809,0x36013ea0,0x0027c00f,0x27c001f9,0x2a000000,
    0x013e001f,0x17e009f0,0xf301ba00,0x40332607,0x202f987c,0x7c1f205f,
    0x7c401f94,0xf9001f74,0x0017e405,0x0ff4c09f,0x500fe400,0x009f007f,
    0xddb007e4,0xdddddffd,0x0003bddd,0xf8007ea0,0x802f4004,0x3e6000fc,
    0xd81fc403,0x30db03ff,0x902fc05f,0x27c53e0f,0x03ee1f70,0x7d407f40,
    0x9827c004,0xf10001ff,0x401be20d,0x03f2004f,0xeffeeed8,0xdeeeeeee,
    0x3f500001,0x10027c00,0x0fe6007f,0xf800fc80,0x20bfbf04,0x202f985e,
    0x7c1f205f,0x2fc03f64,0x3e2001f7,0x40037c46,0x00efa84f,0x641fd400,
    0x009f001f,0x9f0007e4,0xa8000000,0x013e001f,0x3a000fc8,0x4017e006,
    0x7cbf985e,0x803209f0,0x7c0e605f,0x3ea0fe64,0xa8003ee2,0x0003fa4f,
    0x01df713e,0x987f6000,0x013e004f,0x3e000fc8,0x40000004,0x13e001fa,
    0x2002fec0,0x2fa801fa,0x1f70db00,0x007f03f5,0x7c0017e0,0x23743744,
    0x7e4000fb,0xf0002fcb,0x0002fe49,0x06e9be20,0xf90027c0,0x0027c001,
    0x07ea0000,0x2e604f80,0xf8000dfe,0x2006d804,0x9f16e87c,0xf0002f88,
    0x513e000b,0x2e1fcc5f,0xffd8000f,0x653e0004,0x00001eff,0x00fe5fd4,
    0x33333be0,0xfecccccc,0x0013e000,0x03f50000,0x77777fc0,0x003efffe,
    0x9f101f20,0xf107dc00,0x07e63749,0x8002fc00,0x3f25e84f,0x40007dc0,
    0x20000ffa,0xfebbfddf,0x3600000d,0xff8004ff,0xffffffff,0x2000ffff,
    0x0000004f,0xff000fd4,0x9ffddddd,0x05f30000,0xf50007dc,0x1f717d41,
    0xf8000fd4,0x709f0005,0xf709f13f,0xffe88001,0x3ffe0005,0x00077dc3,
    0x0006f880,0x07e4009f,0x40009f00,0x0fd4005b,0x3ea09f00,0x6e80002f,
    0xf30017a0,0x8be63e43,0xbf0000fb,0x2213e000,0xfb80fbcf,0x5cfec000,
    0x5ff0003f,0x00017ea0,0x9f0005e8,0x0007e400,0x3e40009f,0x8007ea00,
    0x0ffa604f,0x301f7000,0x2f88005f,0x7c97e17e,0x0017e000,0x5ffc827c,
    0x5c001f70,0x0007f63f,0x05f5013e,0x0017a000,0x1f90027c,0x00027c00,
    0x1fa800f9,0x36013e00,0x3e20003f,0xf0007c84,0x9f20fe67,0x17e0006d,
    0xf8827c00,0x001f702f,0x1fd117e6,0xe804f800,0x5e80000f,0x4009f000,
    0x13e000fc,0x4007c800,0x13e001fa,0x0000ff40,0x004f88fb,0x207ee9f0,
    0x000bd1fa,0x4f8002fc,0x0fb80620,0x980ef880,0x027c006f,0x400027cc,
    0x09f0005e,0xf0007e40,0x03e40009,0xf8003f60,0x00df1004,0x3f717d40,
    0x3ed7a000,0x009f4f88,0xf8002fc0,0x03ee0004,0xfa807f60,0x4013e004,
    0x740000fd,0x009f0005,0x9f0007e4,0x003e4000,0x09f001be,0x0001fd40,
    0x000374bf,0x6e813edb,0x2fc0009f,0x0004f800,0x7f7003ee,0x2005f900,
    0x07f3004f,0x0005e800,0x07e4009f,0x4000dd00,0x7f7002fc,0x4004f800,
    0xf90000fd,0x40007f31,0x2e02fafc,0x20003f9f,0x09f0005f,0x3007dc00,
    0x0ff400bf,0xdd0027c0,0x005e8000,0x7e4009f0,0x00bf6000,0x4fe89326,
    0x4002fdc0,0x2fcc004f,0xfcbf8800,0x33ee0000,0x3f3e600f,0x017e0002,
    0x700027c0,0x01be201f,0xf801df10,0x00bee004,0xf0005e80,0x007e4009,
    0x4c37ff10,0xc84ffeba,0xdb889bef,0x997000ef,0x003999df,0x800199f9,
    0x40005fed,0xff806ffa,0x9997001f,0x79999df9,0x33bf3220,0x332201cc,
    0x910ccfec,0x40599bfd,0x0bdfeccb,0x333bf32e,0x33be201c,0x3332e01c,
    0x3ccccefc,0x99df9950,0x9fd99505,0x3f660059,0xcfffffff,0x3fffaa01,
    0x22003fff,0xfffffffe,0x2fff8803,0x017fd400,0x00ffe600,0x22003ff6,
    0xfffffffe,0xff506fff,0x405fffff,0xfffffffa,0xffffff32,0x7ffff40b,
    0xfffd10ff,0xc807ffff,0x3fa04fff,0xffffffff,0xffffb06f,0xfff909ff,
    0x9800bfff,0x0009acca,0x0055e544,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x64400000,
    0xcccccccc,0x32a01bcc,0xcccccccc,0xcccccccc,0x66666644,0xcccccccc,
    0x332a3ccc,0xcccccccc,0xccc8800a,0xcccccccc,0x333224cc,0xcccccccc,
    0x65c001bc,0x1ccccccc,0xccccb800,0x66665401,0x99910ccc,0x79999999,
    0x0776a000,0x2ab7b6e0,0x31000001,0x54c3bb50,0xfffa9aaa,0xffffffff,
    0xffc82eff,0xffffffff,0xffffffff,0xfffffd10,0xffffffff,0x7fe4dfff,
    0xffffffff,0x3e201eff,0xffffffff,0x3a27ffff,0xffffffff,0x01efffff,
    0xffffffb0,0xfd000bff,0xfc80dfff,0x51efffff,0xffffffff,0xf7000bff,
    0x3a205fff,0x05fffeff,0x46fb8000,0xf92ffffb,0x2f985fff,0x813faa20,
    0x0fb8007c,0x6d8009f0,0x2e600fb8,0x07f103ff,0x09f03740,0x001ffb88,
    0x01f95f50,0x01fff400,0x3f200db0,0xffe80000,0x17fb05ff,0x200001dc,
    0x7f41efea,0xfff55fff,0x002f983f,0x01f205f9,0x27c03ee0,0x3ee1b600,
    0x83fd8800,0x3f9003f8,0xe88027c0,0x37d8000f,0x6f40007f,0x0db000fd,
    0x00003f20,0x213ffff6,0x000005f9,0xd8177f4c,0xff34ffff,0x02f981ff,
    0x1f203fa0,0x7c03ee00,0x5c36c004,0x03f6000f,0x9f5007f1,0x26004f80,
    0x27c4003f,0x6f4000dd,0x0db005f8,0x00003f20,0x207fffea,0x000001fb,
    0xa807ffb1,0xff11ffff,0x005f30ff,0x03e417d4,0x4f807dc0,0x7dc36c00,
    0x117e2000,0x06f8807f,0x2f4004f8,0xfb87ea00,0x2ebd0001,0x006d801f,
    0x200001f9,0x03ee02a8,0xff910000,0x0aa20019,0x3e61bffe,0x20fe2002,
    0x06a8007c,0x0b70013e,0xfc8001f7,0xfb00fe21,0x8009f003,0x2374005e,
    0xbd0004f8,0x036c0374,0x00000fc8,0x000fe600,0x00dffb80,0x17ffa000,
    0xf8800be6,0x02a07c83,0x14413e00,0x0001f700,0x2e01d89f,0x009f003f,
    0xf1001fcc,0x2000fb07,0xb00fea5e,0x003f200d,0x0fb00000,0x3dfd5000,
    0xffb00000,0x4005f309,0x107c81fb,0x09f0005f,0x0fb801ee,0x2006d800,
    0x13e005f9,0x000fec40,0x05f501f7,0x0fd8bd00,0x7e401b60,0x40000000,
    0xd30003f8,0x000005df,0x7cc1ffe4,0x20fd1002,0x007f107c,0x03ee09f0,
    0x40007dc0,0x03fa007c,0xe9804f80,0x02f4002f,0x8bd000bf,0x01b604f9,
    0x000007e4,0x0007f400,0x0007ffb1,0x05ff7000,0xff3005f3,0x3333f205,
    0x8003fccc,0xecccccef,0x01f7000f,0x9001f700,0xcef8005f,0xffeccccc,
    0x17cc001f,0xe8001f90,0xdb01fc85,0x0003f200,0xffe98000,0x1bff7005,
    0x2a000000,0x02f980ff,0x407ff951,0xfffffffc,0xfff8003f,0x00ffffff,
    0x70001f70,0x04fa801f,0xffffff80,0x0cffffff,0x9803f200,0x42f4003f,
    0x00db06f8,0x500003f2,0xf907dddd,0xf885f73d,0x033fee4f,0x3e200000,
    0xfffff306,0x019fffff,0x07f107c8,0x3ee09f00,0x001f7000,0x7c401f70,
    0x409f0006,0x02ffcba9,0x0dd00bf0,0x7f505e80,0x3f200db0,0x7fec0000,
    0x227c40ff,0x0b7ea0fe,0x0007ff91,0x11017930,0x33337e60,0x9001accc,
    0x000fe20f,0x007dc13e,0xc8000fb8,0x000fec07,0x3a6004f8,0x4dfd402f,
    0xc9999999,0x817a001f,0x8036c0fe,0x202000fc,0xfb82ffff,0x1fb27cc0,
    0x017fecc0,0x1ffffb80,0x000be600,0x03d03e40,0x1aa09f00,0x8000fb80,
    0x00fee05e,0x0013e011,0xffd80bd1,0xffffffff,0x17a004ff,0x036c4f98,
    0x3e000fc8,0x41bffe63,0xf13f906e,0x3bfaa00b,0x7fff4002,0x0be6005f,
    0x003e4000,0x40027c00,0x0007dc19,0x05f881fc,0x009f05d8,0x3e201f70,
    0xaaaaaaad,0x2007daaa,0xb0fe405e,0x003f200d,0xfff927c4,0x74413e03,
    0x54002fbe,0xfd001dff,0x4c00bfff,0xf900002f,0x09f00000,0x0fb8bd00,
    0xe817cc00,0xf06e800f,0x07f10009,0xfa8003ee,0x880bd002,0x6401b66f,
    0x49f1000f,0x17a04ffe,0x0006ffa8,0x50033ff2,0x4003ffff,0x900002f9,
    0x9f00000f,0xfb8bd000,0x03fa2000,0x37400bf2,0xf98004f8,0xf000dd02,
    0x2017a00b,0x200db2fb,0x9f1000fc,0xc803ffe6,0x00bfa00f,0x07ff9100,
    0x4000bb88,0x900002f9,0x9f00000f,0xfb8bd000,0x20ff6000,0x1ba005f9,
    0x7dc0027c,0x8003f980,0x05e800fc,0x00db1fd0,0x7c4003f2,0x8805ff74,
    0x0bff705f,0x3ff66000,0xf9800002,0x0f900002,0x009f0000,0x00fb8bd0,
    0xdd10bf90,0xf8374001,0x837cc004,0xf98000fc,0x3005e803,0x3200db9f,
    0x29f1000f,0xdf7005fd,0x3ef7f263,0xa80001cd,0x400005fe,0x900002f9,
    0x9f00000f,0xfb8bd000,0x17fae200,0x3a000fe4,0x22009f06,0x0bd00efa,
    0x74037400,0x1bbf2005,0x88007e40,0x4001fb4f,0x25fffffa,0x00004ffd,
    0x2200012e,0xcccdfdcc,0xcca803cc,0xccccccfe,0x3f32e001,0xccccccce,
    0x55fccccc,0x99999fb9,0x409fffb9,0xccccccee,0x6fcccccc,0x333bf32e,
    0xfecccccc,0x7ee4c0ef,0x2600cccd,0x0ccfeccc,0x6667fe5c,0x21bfe202,
    0xcfecccc8,0xcccccccc,0x40004fcc,0x0001bca8,0x40000000,0xfffffffa,
    0xfd806fff,0xffffffff,0xffd1003f,0xffffffff,0xbfffffff,0x3ffffff6,
    0x00ceffff,0x7ffffff4,0xffffffff,0xffffff16,0xdfffffff,0x3ffee039,
    0x2e02ffff,0x2fffffff,0x3fffffa2,0x437dc04f,0xfffffffa,0xffffffff,
    0x00004fff,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00013000,0x00110000,
    0x000d4c00,0x0001a980,0x00026a62,0x0009a988,0x00133100,0x000d4400,
    0x4c07dddb,0x000eeeed,0x51000100,0x2e004c01,0x802eeeee,0x42eeeeeb,
    0x000004fe,0x20002740,0xefffffeb,0xea801b13,0x04efffff,0xfffffd50,
    0x2207519f,0xfffffeca,0xfd88002f,0x00ceffff,0xeb8fbb62,0x202dffff,
    0x204feed8,0x80feeee9,0x985eeeea,0x260befec,0xffd8aeed,0x3ffee0ef,
    0xdffd701d,0xfdd9005d,0xffd885df,0xd0000002,0x3fa6000b,0xfecaaacd,
    0xfb102fbe,0xfd95579d,0x67fec03d,0xfffdaaaa,0xbdfff887,0x05feba9a,
    0x2af7fea0,0x302efdca,0xdfb19fdb,0x05ff9559,0xfb8013e0,0x7feeea80,
    0x7e5f7fdc,0xd9fdd30e,0x32df95bf,0x01ffbbef,0x5e80017a,0x0177f540,
    0x017a0000,0x500bfe60,0xff105fff,0x82fea807,0x7f4404fc,0xc8015707,
    0x0efc804f,0xf00ffa60,0x3a205fdd,0x004f801f,0x5f2003ee,0x7cc0dfd8,
    0x217ffc43,0x7c44fefb,0x4001f205,0xff7003f8,0x2000003b,0x0ee8005e,
    0xd05ff100,0x3fa2003f,0xf98037c0,0x07f80007,0xfb0027d4,0x00fffc03,
    0x13e013ea,0xc800fb80,0x4003fe8f,0xff883ff8,0x7dc0fb05,0xf504c880,
    0xcffc8003,0x2f400000,0x0007f200,0x02fb85f7,0x13e27c40,0x80006c80,
    0x0df101fb,0x3e06f880,0x00dd001f,0x07dc009f,0x00fffe40,0xdd027c40,
    0x4c03ee01,0x81ffa82f,0xc88000fb,0x200003ff,0x17e2005e,0xdf07e200,
    0xd83f2000,0x0002000f,0x7e407ea0,0x02fa8001,0x07e4009f,0xfb8013e0,
    0x01efc800,0x7407f100,0xf803ee06,0xd84ffd84,0x7ecc0006,0x5e80002f,
    0x000be600,0x8001fc40,0x33fe62f9,0x33000009,0x07ea1335,0x9f00036c,
    0xfb8013e0,0x70027c00,0x01f9001f,0xd01fc400,0xb007dc0d,0x86dcf88d,
    0xd500004f,0x740003df,0x003ee005,0x666fd400,0xcccccccc,0x443fcccc,
    0xbdeffffd,0xfffd5001,0x3fdfffff,0xe80013e0,0x5c009f05,0x0027c00f,
    0x0f9001f7,0x203f8800,0x803ee06e,0x7d4fd47c,0x0000be21,0x101bff70,
    0xf3333333,0x3333333b,0x200007c8,0xfffffffb,0xffffffff,0x975104ff,
    0x203dfffb,0x9abcffe8,0x81fedbaa,0x360003f8,0x5c009f07,0x0027c00f,
    0x0f9001f7,0x203f8800,0x803ee06e,0x7c5f61fa,0x00007ea4,0x893ff620,
    0xffffffff,0xffffffff,0x0003ee7f,0x0000fcc0,0x3fae2000,0x005ff443,
    0x04f80fd4,0x27c1b600,0xf801f700,0x003ee004,0xf10001f2,0xf7037407,
    0xf89fc401,0x007c9f64,0xcffc8800,0x55555540,0xaaaaefaa,0x07ea1aaa,
    0x027c4000,0xfb000000,0x5000fec1,0x0017a03f,0x009f04f8,0x13e007dc,
    0xc800fb80,0x1fc40007,0x07dc0dd0,0x50fd57a0,0x00017a3f,0x001bff70,
    0xf98017a0,0x1ba00003,0x00054000,0x800bf1fc,0x01f901fa,0x3e07f300,
    0x003ee004,0x07ec00bd,0x20003e40,0x81ba03f8,0xdb6c00fb,0x009f4f86,
    0x07bfaa00,0x800bd000,0x830000fe,0xf80003fa,0xf15e8005,0x01fc8007,
    0xfd000bf3,0xb8013e01,0x007ec00f,0x2003ffa2,0x7c40007c,0xfb81ba03,
    0x27cfdc00,0x0017cfec,0x00bbfa60,0x2002f400,0x6c4005f9,0x000fec1f,
    0x4007f8cc,0x401be3f9,0x3201ffd8,0x0bf2002f,0x3ee004f8,0x301fdc00,
    0x9001fdff,0x3f88000f,0x0fb81ba0,0x40fefcc0,0x0000fdfa,0x0007ffb1,
    0xc8005e80,0xffb800df,0x003ff884,0x3bfe9fb3,0x20fe8800,0x7f4c02fd,
    0x27f401fe,0xf017f620,0x007dc009,0x5cc4eff4,0xccfb9efd,0x0001f200,
    0x037407f1,0xdff001f7,0x40037fc0,0x000cffc8,0x0005e800,0x26157ff9,
    0x202ffeca,0x309befd8,0x21bffb75,0x21acffef,0x441ffc99,0xb7511bff,
    0x99bf55df,0x37dfb101,0x09ff7311,0x333bf32a,0x99fd9500,0x7fff4c01,
    0x3fee4fff,0xd999932f,0x9999999f,0x3bf32207,0x83cfe82c,0x3a00ccfb,
    0x017f204f,0x001bff70,0x002f4000,0xfffffd30,0x54005dff,0xffffffff,
    0x645ec1cf,0xffffffff,0xfffb301d,0x7d47ffff,0x3ea02fff,0x1effffff,
    0x3fffff20,0xffffb02f,0x5975005f,0x7ffdc003,0xffffffff,0xffa80eff,
    0xffe85fff,0x17ffdc0e,0x2a000000,0x00001efe,0x80005e80,0x01abcba8,
    0x2b2ea200,0x2a620009,0x3000abcc,0x00015995,0x055e54c0,0x00000000,
    0x00000000,0x00000000,0xfc800000,0x0000002e,0x0000017a,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00003b80,
    0x4001a800,0xeeeeeeee,0xd86eeeee,0x981deeee,0x2e4eeeed,0x0deeeeee,
    0xeeeeed98,0x4001802d,0xfb4eeeea,0x7fdc3fff,0x00a804ff,0x26666660,
    0x99999999,0x00400999,0x9800c880,0x2aaa20cc,0xaaaaaaaa,0x000aaaaa,
    0x00000000,0x77fc0000,0xeeeeeeee,0xeffd87fe,0xfee981de,0x3fbae5ff,
    0xe980deef,0x02eeffee,0xfb000fcc,0x3ff23fff,0x3ffea0ff,0x077c403f,
    0x7fffff40,0xffffffff,0xc85fffff,0x44003fff,0x3fea01ff,0xffff51ff,
    0xffffffff,0x0001ffff,0x00000000,0x004f8000,0x3fe605fb,0x00ef9801,
    0x9f1001ba,0x000fd400,0x7dcbffff,0x7ffc47ff,0x2fff401f,0x66666540,
    0xcccccccc,0x6c1ccccc,0x205fdbcf,0x0bfe60e9,0xaafffff4,0xffffffff,
    0xffffffff,0x00000000,0x40000000,0x02fd804f,0xf300ff44,0x02fa801d,
    0xa8007ee0,0xfff3001f,0x37ffd41f,0xb007fffc,0x0007f75f,0x0ff60000,
    0x6f981df7,0xfe83fe88,0x00004fff,0x00000000,0x20000000,0x01fe403e,
    0xfa81fe88,0x00dd000e,0x3ea00374,0x9fff7001,0xe85fff98,0x8fee07ff,
    0x000002fd,0xfa817cc0,0x00efb89e,0xffa89fb1,0x000001ff,0x00000000,
    0x00000000,0xd10013ee,0x0077d43f,0xf5003f70,0x3ea0aa05,0x3fa0d441,
    0x7ffc40ff,0x306ffd83,0x00fe88bf,0x00400000,0x037fffa6,0x77103f20,
    0x00000001,0x00000000,0x54000000,0xfd10005f,0x1000bf53,0x40dd00bf,
    0x3f52dffe,0x44bffb51,0xfff04fff,0x10bff905,0x1df101df,0x33333310,
    0x33333333,0x80013333,0x04002ca8,0x00000000,0x00000000,0x98000000,
    0x7440006f,0x320005ff,0x00fe600f,0xdfdfffb5,0xfa85bfff,0x3ffb00ff,
    0xfd09ff70,0x7c2fd403,0xffffffff,0xffffffff,0x000005ff,0x00000000,
    0x00000000,0x00000000,0x000077cc,0x00017fdc,0x07e409f1,0xbfffb500,
    0x01ffe405,0xff501ff9,0xc802fc87,0x55554c3f,0xaaaaaaaa,0x00aaaaaa,
    0x00000000,0x00000000,0x00000000,0x3fa20000,0xdfb80000,0x360002fd,
    0x0009f107,0xe803fff3,0x83fdc06f,0x13ea1ff8,0x0001fd80,0x00000000,
    0x00000000,0x00000000,0x40000000,0x80001fe8,0x00bf64fb,0x7dc1fcc0,
    0x4f7c4001,0x5ff100ef,0x3202d880,0x22001cc4,0x0000000c,0x00000000,
    0x00000000,0x00000000,0x17ec0000,0x427e4000,0xdd0003fd,0xfb000bf0,
    0x2c813ea3,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x02fc8000,0x13f201e8,0xa8003fd8,0x000bea2f,0x02fc87f7,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x0ff20000,0x7e40fe20,
    0x003fd804,0x001ba5f8,0x03fa0bf1,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x13ee0000,0x7ec1fc40,0x013f2003,0x07f33f70,
    0xb100d980,0x00000003,0x00000000,0x00000000,0x00000000,0x00000000,
    0xf9800000,0xcccccccf,0x2e3fcccc,0x80cccffd,0x2dffccc8,0x1fddf100,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x3fffea00,0xffffffff,0x3fffa3ff,0xffa81fff,0x2005ffff,0x00004ffc,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,
};

static signed short stb__courier_45_usascii_x[95]={ 0,9,5,3,4,3,4,9,11,5,0,2,5,3,
8,4,4,4,3,3,4,3,5,4,4,5,8,6,0,1,0,0,4,0,1,2,3,1,3,2,2,4,3,1,
2,0,0,0,3,2,1,3,2,1,0,0,1,1,4,0,0,0,4,1,8,2,0,3,2,2,4,2,1,3,
3,3,3,0,2,2,0,2,3,4,2,1,1,1,1,2,4,0,11,0,3, };
static signed short stb__courier_45_usascii_y[95]={ 33,8,9,6,6,8,12,8,8,8,8,11,27,20,
28,6,8,8,8,8,8,8,8,8,8,8,16,16,11,17,11,9,7,10,10,9,10,10,10,9,10,10,10,10,
10,10,10,9,10,9,10,9,10,10,10,10,10,10,10,8,6,8,8,42,7,15,8,15,8,15,8,15,8,7,
7,8,8,15,15,15,15,15,15,15,10,16,16,16,16,16,16,8,8,8,18, };
static unsigned short stb__courier_45_usascii_w[95]={ 0,6,14,18,16,18,16,6,8,8,15,20,9,18,
7,16,16,16,17,17,16,17,16,16,16,16,7,9,20,21,20,15,16,24,21,20,20,20,20,21,21,16,21,22,
20,24,23,20,19,20,23,18,20,22,24,24,22,21,16,7,15,7,16,25,8,20,22,19,22,19,18,21,21,18,
13,20,18,24,20,20,22,22,19,16,20,21,22,22,21,21,16,9,2,9,18, };
static unsigned short stb__courier_45_usascii_h[95]={ 0,26,11,30,31,26,22,13,31,31,15,21,12,3,
6,31,26,25,25,26,25,26,26,26,26,26,18,22,21,9,21,25,29,23,23,25,23,23,23,25,23,23,24,23,
23,23,23,25,23,29,23,25,23,24,23,23,23,23,23,31,31,31,11,2,7,19,26,19,26,19,25,26,25,26,
34,25,25,18,18,19,26,26,18,19,24,18,17,18,17,25,17,31,31,31,7, };
static unsigned short stb__courier_45_usascii_s[95]={ 250,243,131,122,79,18,203,249,104,113,105,
22,121,221,213,38,74,102,119,37,85,225,113,1,153,193,241,193,220,163,1,
156,141,123,101,172,63,42,21,193,232,238,22,187,172,139,148,64,1,158,44,
137,118,215,68,93,164,210,84,96,63,55,146,179,204,100,130,43,170,63,210,
91,42,55,1,229,1,205,142,121,202,179,185,83,1,163,82,230,60,20,43,
28,25,15,185, };
static unsigned short stb__courier_45_usascii_t[95]={ 1,1,158,1,1,36,114,114,1,1,158,
138,158,158,158,1,36,63,63,36,63,1,36,36,36,36,114,114,114,158,138,
63,1,114,114,63,114,114,114,63,89,63,89,89,114,89,114,63,114,1,89,
63,89,63,89,89,89,89,114,1,1,1,158,28,158,138,36,138,36,138,36,
36,63,36,1,36,63,138,138,138,1,1,138,138,89,138,158,138,158,63,158,
1,1,1,158, };
static unsigned short stb__courier_45_usascii_a[95]={ 381,381,381,381,381,381,381,381,
381,381,381,381,381,381,381,381,381,381,381,381,381,381,381,381,
381,381,381,381,381,381,381,381,381,381,381,381,381,381,381,381,
381,381,381,381,381,381,381,381,381,381,381,381,381,381,381,381,
381,381,381,381,381,381,381,381,381,381,381,381,381,381,381,381,
381,381,381,381,381,381,381,381,381,381,381,381,381,381,381,381,
381,381,381,381,381,381,381, };

// Call this function with
//    font: NULL or array length
//    data: NULL or specified size
//    height: STB_FONT_courier_45_usascii_BITMAP_HEIGHT or STB_FONT_courier_45_usascii_BITMAP_HEIGHT_POW2
//    return value: spacing between lines
static void stb_font_courier_45_usascii(stb_fontchar font[STB_FONT_courier_45_usascii_NUM_CHARS],
                unsigned char data[STB_FONT_courier_45_usascii_BITMAP_HEIGHT][STB_FONT_courier_45_usascii_BITMAP_WIDTH],
                int height)
{
    int i,j;
    if (data != 0) {
        unsigned int *bits = stb__courier_45_usascii_pixels;
        unsigned int bitpack = *bits++, numbits = 32;
        for (i=0; i < STB_FONT_courier_45_usascii_BITMAP_WIDTH*height; ++i)
            data[0][i] = 0;  // zero entire bitmap
        for (j=1; j < STB_FONT_courier_45_usascii_BITMAP_HEIGHT-1; ++j) {
            for (i=1; i < STB_FONT_courier_45_usascii_BITMAP_WIDTH-1; ++i) {
                unsigned int value;
                if (numbits==0) bitpack = *bits++, numbits=32;
                value = bitpack & 1;
                bitpack >>= 1, --numbits;
                if (value) {
                    if (numbits < 3) bitpack = *bits++, numbits = 32;
                    data[j][i] = (bitpack & 7) * 0x20 + 0x1f;
                    bitpack >>= 3, numbits -= 3;
                } else {
                    data[j][i] = 0;
                }
            }
        }
    }

    // build font description
    if (font != 0) {
        float recip_width = 1.0f / STB_FONT_courier_45_usascii_BITMAP_WIDTH;
        float recip_height = 1.0f / height;
        for (i=0; i < STB_FONT_courier_45_usascii_NUM_CHARS; ++i) {
            // pad characters so they bilerp from empty space around each character
            font[i].s0 = (stb__courier_45_usascii_s[i]) * recip_width;
            font[i].t0 = (stb__courier_45_usascii_t[i]) * recip_height;
            font[i].s1 = (stb__courier_45_usascii_s[i] + stb__courier_45_usascii_w[i]) * recip_width;
            font[i].t1 = (stb__courier_45_usascii_t[i] + stb__courier_45_usascii_h[i]) * recip_height;
            font[i].x0 = stb__courier_45_usascii_x[i];
            font[i].y0 = stb__courier_45_usascii_y[i];
            font[i].x1 = stb__courier_45_usascii_x[i] + stb__courier_45_usascii_w[i];
            font[i].y1 = stb__courier_45_usascii_y[i] + stb__courier_45_usascii_h[i];
            font[i].advance_int = (stb__courier_45_usascii_a[i]+8)>>4;
            font[i].s0f = (stb__courier_45_usascii_s[i] - 0.5f) * recip_width;
            font[i].t0f = (stb__courier_45_usascii_t[i] - 0.5f) * recip_height;
            font[i].s1f = (stb__courier_45_usascii_s[i] + stb__courier_45_usascii_w[i] + 0.5f) * recip_width;
            font[i].t1f = (stb__courier_45_usascii_t[i] + stb__courier_45_usascii_h[i] + 0.5f) * recip_height;
            font[i].x0f = stb__courier_45_usascii_x[i] - 0.5f;
            font[i].y0f = stb__courier_45_usascii_y[i] - 0.5f;
            font[i].x1f = stb__courier_45_usascii_x[i] + stb__courier_45_usascii_w[i] + 0.5f;
            font[i].y1f = stb__courier_45_usascii_y[i] + stb__courier_45_usascii_h[i] + 0.5f;
            font[i].advance = stb__courier_45_usascii_a[i]/16.0f;
        }
    }
}

#ifndef STB_SOMEFONT_CREATE
#define STB_SOMEFONT_CREATE              stb_font_courier_45_usascii
#define STB_SOMEFONT_BITMAP_WIDTH        STB_FONT_courier_45_usascii_BITMAP_WIDTH
#define STB_SOMEFONT_BITMAP_HEIGHT       STB_FONT_courier_45_usascii_BITMAP_HEIGHT
#define STB_SOMEFONT_BITMAP_HEIGHT_POW2  STB_FONT_courier_45_usascii_BITMAP_HEIGHT_POW2
#define STB_SOMEFONT_FIRST_CHAR          STB_FONT_courier_45_usascii_FIRST_CHAR
#define STB_SOMEFONT_NUM_CHARS           STB_FONT_courier_45_usascii_NUM_CHARS
#define STB_SOMEFONT_LINE_SPACING        STB_FONT_courier_45_usascii_LINE_SPACING
#endif

