// Font generated by stb_font_inl_generator.c (4/1 bpp)
//
// Following instructions show how to use the only included font, whatever it is, in
// a generic way so you can replace it with any other font by changing the include.
// To use multiple fonts, replace STB_SOMEFONT_* below with STB_FONT_consolas_bold_29_usascii_*,
// and separately install each font. Note that the CREATE function call has a
// totally different name; it's just 'stb_font_consolas_bold_29_usascii'.
//
/* // Example usage:

static stb_fontchar fontdata[STB_SOMEFONT_NUM_CHARS];

static void init(void)
{
    // optionally replace both STB_SOMEFONT_BITMAP_HEIGHT with STB_SOMEFONT_BITMAP_HEIGHT_POW2
    static unsigned char fontpixels[STB_SOMEFONT_BITMAP_HEIGHT][STB_SOMEFONT_BITMAP_WIDTH];
    STB_SOMEFONT_CREATE(fontdata, fontpixels, STB_SOMEFONT_BITMAP_HEIGHT);
    ... create texture ...
    // for best results rendering 1:1 pixels texels, use nearest-neighbor sampling
    // if allowed to scale up, use bilerp
}

// This function positions characters on integer coordinates, and assumes 1:1 texels to pixels
// Appropriate if nearest-neighbor sampling is used
static void draw_string_integer(int x, int y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0, cd->t0); glVertex2i(x + cd->x0, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t0); glVertex2i(x + cd->x1, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t1); glVertex2i(x + cd->x1, y + cd->y1);
        glTexCoord2f(cd->s0, cd->t1); glVertex2i(x + cd->x0, y + cd->y1);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance_int;
    }
    glEnd();
}

// This function positions characters on float coordinates, and doesn't require 1:1 texels to pixels
// Appropriate if bilinear filtering is used
static void draw_string_float(float x, float y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0f, cd->t0f); glVertex2f(x + cd->x0f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t0f); glVertex2f(x + cd->x1f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t1f); glVertex2f(x + cd->x1f, y + cd->y1f);
        glTexCoord2f(cd->s0f, cd->t1f); glVertex2f(x + cd->x0f, y + cd->y1f);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance;
    }
    glEnd();
}
*/

#ifndef STB_FONTCHAR__TYPEDEF
#define STB_FONTCHAR__TYPEDEF
typedef struct
{
    // coordinates if using integer positioning
    float s0,t0,s1,t1;
    signed short x0,y0,x1,y1;
    int   advance_int;
    // coordinates if using floating positioning
    float s0f,t0f,s1f,t1f;
    float x0f,y0f,x1f,y1f;
    float advance;
} stb_fontchar;
#endif

#define STB_FONT_consolas_bold_29_usascii_BITMAP_WIDTH         256
#define STB_FONT_consolas_bold_29_usascii_BITMAP_HEIGHT        122
#define STB_FONT_consolas_bold_29_usascii_BITMAP_HEIGHT_POW2   128

#define STB_FONT_consolas_bold_29_usascii_FIRST_CHAR            32
#define STB_FONT_consolas_bold_29_usascii_NUM_CHARS             95

#define STB_FONT_consolas_bold_29_usascii_LINE_SPACING          19

static unsigned int stb__consolas_bold_29_usascii_pixels[]={
    0x00001331,0x9e5d4000,0x80002bcc,0x333221c9,0x1000cccc,0xcccca803,
    0x1a9803cc,0x3376e600,0x0000000a,0x00044000,0x00000000,0xc9800000,
    0x71003ded,0x027fe415,0x003aa16c,0x5bfffa60,0x001effff,0x265fff50,
    0x0fffffff,0x3ffff220,0xffffc81d,0x4fe805ff,0xffffd880,0x20001fff,
    0xff10fff9,0xfd88003f,0x9ff303ef,0x23ffdc00,0x7c002fff,0x677fc7ff,
    0xfffb800b,0x2200efff,0xff90effe,0x52ffd809,0x44001dff,0xff6fffff,
    0x0001ffff,0x3e6bfffb,0x00ffffff,0xffffffd3,0xffffc83f,0x3ff805ff,
    0x7ffffcc0,0x002fffff,0xfc89ffb0,0x7fec005f,0x6fe84fff,0x23ffdc00,
    0x7c002fff,0x7fffc7ff,0xff500cff,0x0dfffddf,0xc97fffdc,0x3ff604ff,
    0x1dfff31f,0x2bbff600,0x27ffd440,0x27ffdc00,0xf101fff0,0xff9359ff,
    0x01ffe43f,0x039ff730,0x5defffec,0x8007fffd,0x7cc1fff8,0xff3000ff,
    0xff71ff67,0x7ffb8003,0x20017ffc,0x7ffc6fff,0xe80effff,0x3ffea4ff,
    0x5ffff700,0x7e413ff2,0x7ffd41ff,0x05ffd005,0x0006ffa8,0x7fc019d9,
    0x83ffe80f,0x3ff24ffb,0x7ffec403,0x541fffff,0xffb84fff,0x7fe4003f,
    0x007ffd05,0x7fdc3fee,0x0009ff10,0xfff8fff7,0x37ff4002,0x3fff2a66,
    0x07ffc45f,0x7c40bffe,0x9ff90eff,0x205fff30,0xf802fffa,0x7fc400ff,
    0x7c000007,0x27fdc0ff,0x7fe4ffd0,0x3fffea03,0x41ffffff,0x3fe06ffe,
    0x7ffc006f,0x00fff502,0x7fd43fee,0x0001ffb0,0xfff8fff7,0x37ff4002,
    0x87fffe20,0x3e21fff8,0x2ee200ff,0xd113ff20,0xffd80bff,0x1ffe200f,
    0xa807ffc0,0xaaaaaaaa,0x03ffe01a,0x7dc01fff,0x207ff92f,0xfedffff8,
    0x7fc1fdcf,0x1fff204f,0x406ffa80,0xfa802fff,0x3eeffb2f,0xcba8802f,
    0x7fc7ffdc,0x0379712f,0x2a017ffa,0x7ffc3fff,0x001bff23,0x3ee27fe4,
    0x7fc400ff,0x1ffe204f,0xe807ffc0,0xffffffff,0x83ffe03f,0x26a63ffa,
    0xf93ffaa8,0x3ffee07f,0x7c40bfb2,0x3fee02ff,0x7ffd000f,0x006ffb80,
    0x17ffdfff,0xff700bff,0x8fffffff,0xfffcafff,0x5ffe84ff,0x44fff980,
    0xffdafffc,0xff90001f,0x003ffe89,0x7c40fff9,0x1fff007f,0x3fffffa0,
    0x3e03ffff,0x23ff60ff,0x9fffffe8,0x07ff94ff,0x7f43fff2,0x07ffe604,
    0x801fffa8,0x4400fff9,0xd9801fff,0x1ffb4fff,0x7ffff440,0x7c7fffff,
    0xfffffeff,0x2ffec4ff,0x417ffd40,0x1ffffffe,0x93ff2000,0x3000fff9,
    0x3e605fff,0x5ffd006f,0x2aaaaaa0,0x3e03fffa,0x6d7fe0ff,0xff7fffff,
    0x5c0fff29,0x3ff8cfff,0x807ffea0,0xd802fff9,0xffb004ff,0xa8544009,
    0x7fe402ff,0xffc989df,0x77ffffc7,0x20ffffba,0x2a205ffd,0xfb80ffff,
    0x0000cfff,0xff927fe4,0x4ffe800d,0x200bff90,0xf8005ffc,0x3ffe03ff,
    0xff39ff30,0x3fedff3d,0x2607ff95,0x2fffffff,0x807ffea0,0x4401fff9,
    0xf3001fff,0xf10001ff,0xfff980bf,0x7c7ffb84,0x7fd44fff,0x213ff63f,
    0x3ffffffe,0x4fffffb8,0x3660f326,0xd93ff21c,0x7e4004ff,0x3ff6ea6f,
    0xfff3002f,0x3fe0059f,0x43ffe03f,0xaffcaffb,0x2bff5ff8,0x3f203ffc,
    0x03efffff,0x5405fff5,0x7e401fff,0x7ff4006f,0x0ffd8003,0x407ffdc0,
    0x7ffc7ffb,0x649fff05,0xfffd84ff,0xfffa82ff,0xff72fffe,0x0ffff989,
    0x7ff49ff9,0x3ffdc003,0x005bfffd,0x06fffc88,0x7c07fff0,0xb1ff90ff,
    0x2bff11ff,0x07ff95ff,0xffffffb8,0x7ffcc2ff,0x03ffee03,0x8005fff0,
    0x54006ffa,0x901512ff,0x3fee0dff,0xe817ffc7,0x13ff25ff,0xe80b7ff6,
    0x3fffd4ff,0xffb87ff9,0x49ff93ff,0x54002fff,0x3fffa7ff,0x7fe4002e,
    0xfff006ff,0xd87ffc07,0x3e6ffd7f,0x3f29ff4f,0xffb8803f,0x223fffff,
    0x3f605fff,0x3ffd406f,0x02fff800,0x3f6bff10,0x3ffa1dff,0xf8fff705,
    0xdffb02ff,0x7e41ffe4,0x3ffea03f,0xfddfff10,0xffffa85f,0x3e29ff92,
    0x7cc001ff,0xffb510ff,0x3fee005f,0xff0009bf,0x87ffc07f,0x2adff7fd,
    0x94ff8bff,0x7ec007ff,0x20ffffff,0xf880fffd,0x7ff403ff,0xbff90003,
    0x323ff600,0x3a6ffeff,0xfff705ff,0xfd02fff8,0x41ffe4bf,0x3ee02ffc,
    0x7fffcc7f,0x5ffd80ff,0xfff93ff2,0x3ffcc002,0xd004ffc8,0xff0005ff,
    0x87ffc07f,0x2edff7fe,0x93ff9aff,0x7f4007ff,0x22fffd8c,0x261efffa,
    0x2600fffe,0x10000fff,0xfa803fff,0x3ea9ff3f,0x20dffb1f,0x7ffc7ffb,
    0x449fff02,0x09988099,0x2a1ffee0,0x2604ffff,0xff27fe41,0xffa8007f,
    0x00dff506,0x20003ffe,0x3fe03fff,0x3feffd0f,0xff75ff96,0x800fff21,
    0x7fff32ff,0xffffffe8,0x6c03ffff,0x6c0005ff,0x3fe204ff,0x3e25ff15,
    0x81fff92f,0x7fc7fff8,0x2fffa82f,0x26004400,0xffe83fff,0x7fe4003f,
    0x0013ffa4,0x3e20bff7,0x1fff007f,0x07fff000,0x7fd87ffc,0x9fff7ffd,
    0x1ffe4dfd,0xf31ff980,0xffe885ff,0x03ffffff,0x000fffc4,0x403ffe60,
    0x5ff10ffc,0x7fd4bfe2,0x3fffa63f,0x2217ffc7,0x3ee0fffe,0x03ffc82f,
    0x65effff4,0x01fffffe,0xfc93ff20,0x7ff4007f,0x00fff104,0x20003ffe,
    0x3fe03fff,0xf91ff90f,0xffffffff,0xc81ffe45,0xa9ffa9ac,0xb880fffe,
    0x01dffffe,0x0006ffb8,0xf507ffd0,0xf75ff87f,0x77fff43f,0x47fffffd,
    0xfcbcefff,0x3fe22fff,0x7fffcc7f,0x3fffe600,0xffffffff,0x9ff9000f,
    0x800fffcc,0xf101fff9,0x3ffe00ff,0x3fff8000,0x7dc3ffe0,0x9bffe89f,
    0x7fe43fff,0xfffffb03,0x05ffffff,0x4009ffb0,0x00002fff,0xfe88dff7,
    0xfffffc86,0x7ffffd45,0x7c7ffaff,0xffffffff,0x7fffc43f,0x03fffe60,
    0xfffffb10,0x1dfff33b,0xe89ff900,0xff9005ff,0x03ffc40d,0x8000fff8,
    0x3fe03fff,0x227ff50f,0x7e406209,0xffffb03f,0x05ffffff,0x303fff20,
    0x000fff50,0x917ffc40,0x3fae03ff,0xffe980df,0xb8fff1ef,0xdffffffd,
    0xb09ff900,0x998009ff,0xff900001,0x01fffb89,0x2017ffc4,0x7c400fff,
    0xff98007f,0x43ffe02f,0x90006ff8,0x32e607ff,0x03cefffe,0x67fffcc0,
    0x7ff40fec,0x7e400004,0x0110005f,0x10001310,0x06600133,0x00000198,
    0x84ffc800,0x7ec06ffe,0x2ffe806f,0x0037fd40,0xf007ffe4,0x17fec1ff,
    0x01ffe400,0x40003ff8,0xfffffffc,0x003ffe65,0x1fff1000,0x00000000,
    0x00000000,0x90000000,0xfff309ff,0x07ffee09,0x02bbff60,0x209fff51,
    0x3fae21c9,0x07ffc06f,0x7103fff5,0x007ff903,0x00005ff1,0x1bfffff7,
    0x0002ffe4,0x004ffd80,0x00000000,0x00000000,0xffc80000,0x87fff904,
    0x1003fffa,0x3edfffff,0x500fffff,0xffffdfff,0x7fffcc3f,0x7fec0fff,
    0x1ffdccef,0xffffffc8,0x001ff985,0x0026a600,0x00000000,0x00000000,
    0x00000000,0x7e400000,0x3fff604f,0x00bfff53,0xf6fffe98,0x5403dfff,
    0xffffffff,0x7ffffcc3,0xfffc80ff,0xc81fffff,0x85ffffff,0x00000cc9,
    0x00000000,0x00000000,0x00000000,0x00000000,0x36027fe4,0x0bff31ff,
    0xc9e5d400,0xdb8802ac,0x880bdefe,0x0ccccccc,0x7bdfb750,0x33332a01,
    0x000003cc,0x00000000,0x00000000,0x00000000,0x00000000,0x4027fe40,
    0x00024c1c,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x20000000,0x00004ffc,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00fbae00,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x5554c000,0x00d55400,0x00000175,
    0x2af32ea0,0x88002aaa,0x2e620099,0x544a9acc,0x06f3262a,0x000f5cc0,
    0x02b376ea,0x6666664c,0x4c00cccc,0x8002cddb,0x00ccaa98,0x02f3b72e,
    0x88015710,0x21bcedba,0xfffffffb,0x009ffd00,0x203fffa8,0xfb02fffa,
    0x7ffc01ff,0xffe98002,0x7fffffff,0xffffb100,0xffff90df,0xff8fffff,
    0x9fffffb7,0x01fff980,0xfffffb10,0xfff703ff,0x3fffffff,0x7ffffec0,
    0xfc9800ef,0xa81fffff,0xffffffff,0x1dffd104,0x3fffff20,0xfff71fff,
    0x3a01ffff,0xfe8004ff,0x1bff606f,0x202ffff8,0x44002fff,0xfffeffff,
    0xf9807fff,0x26ffffff,0xffffffe8,0x7ffc7fff,0xfffffffd,0x07ffe604,
    0x3ffffe60,0x5c2fffff,0xffffffff,0xffe881ff,0x1fffffff,0x3ffffee0,
    0x7fcc1fff,0xffffffff,0x2ffffb83,0x7fffff4c,0x9931ffff,0x201fffb9,
    0xb8004ffe,0xff881fff,0x3fffa03f,0x00bffe01,0x5c1dff90,0x44019fff,
    0xccbdfffe,0x277fff25,0x7c7ffc98,0xfbaeffff,0xff300fff,0xfffd003f,
    0xffffb77b,0xeeefffb8,0xfc80eeee,0xffb88bff,0xffff905f,0xe815579b,
    0x3fa61eff,0xffffb86f,0x677fff42,0x501fdbaa,0x3fa01fff,0xff88004f,
    0x0fffb84f,0xf00fb660,0xfe8005ff,0x02fff82f,0x202fffa8,0xfb84fff9,
    0x27fffc7f,0x544fffea,0xabfffcaa,0x3fea2aaa,0x3fffc83f,0x10017fee,
    0xff907fff,0xdfff983f,0x05fff000,0xff10fff5,0x7ffdc1df,0x2a01100d,
    0xffd00fff,0x3ff60009,0x005ffe87,0x00bffe00,0xfb03fff0,0xfff7005f,
    0x80fffb80,0x7ffc7ffb,0x229fff05,0xffffffff,0x3fa6ffff,0x9bffe06f,
    0x64005ffb,0x3ffe07ff,0x0077fec4,0xa82fff88,0x177107ff,0x003fffc4,
    0x201fff50,0xaa984ffe,0x2fffa81a,0x510bffe2,0x80555555,0x79932fff,
    0x113ff603,0xf9003fff,0x6ffd80df,0xff8fff70,0x2bffd02f,0xfffffff8,
    0x3e6fffff,0x3ff204ff,0x0017fee7,0xfb109ffd,0x3fff8dff,0x077ff400,
    0x8009ffd1,0x0003fffa,0x7403ffea,0x7ffc44ff,0x4bfff00f,0xffb87ffb,
    0x200fffff,0xfffcafff,0xfffb84ff,0x06ffd99c,0xe80bffb0,0xfff705ff,
    0xfb02fff8,0x32aaa2df,0xaaaabfff,0x405fff12,0xff70fffb,0xf803555d,
    0x7ffcc3ff,0x3ffe67ff,0x009aba99,0xd39ffff5,0xb8001dff,0x20001fff,
    0xfd00fffa,0x7fff449f,0x43fff201,0xffb84ffe,0x200fffff,0xffffefff,
    0xfff82fff,0x01ffffff,0xdffd5555,0x3a155555,0xfff705ff,0xfd02fff8,
    0x3ffe60bf,0x07ffe601,0xf71fffa8,0x9fffffff,0x22fff881,0x7ffffffc,
    0x3ffbffee,0xf903ffff,0x1dffffff,0x1fff9000,0x7ffd4000,0x6c9ffd00,
    0x7c402fff,0x0fff9aff,0xffcaaa88,0x3fffe00f,0x5fffcaef,0x7fff7fdc,
    0x3ffa00cf,0xffffffff,0x0dffb3ff,0xfff1ffee,0x413ffe05,0x2a01fff9,
    0x3e601fff,0xffff72ff,0x98dfffff,0xffe89fff,0x70fffadf,0xffffffff,
    0x3ee09fff,0x803fffff,0x03ffec09,0x03ffea00,0xffca7ff4,0xbffb003f,
    0x2a00bff9,0x3fe00fff,0x37fec4ff,0x0262dff1,0x7fffff40,0x3fffffff,
    0xf881fff9,0x17ffc7ff,0x9817ffd4,0x3ea01fff,0x3fe601ff,0x5555511f,
    0x449ffffb,0xffffcfff,0x321fff52,0xcaacffff,0x7d41ffff,0x5fffffff,
    0xfd93ff60,0x7d40007f,0x9ffd00ff,0x4009fff7,0x2ffffffa,0x01fff500,
    0x7dc2fffc,0x03ffe67f,0x3aaaaa00,0xaaaaaeff,0x4c7fff50,0x7fc7fffe,
    0x7fff442f,0x03fff300,0x5017ffcc,0xf3001fff,0xffff8dff,0x3fee0eff,
    0x203fff27,0x3ea4fff9,0xfffb8dff,0xffffa84f,0x001fff92,0x807ffd40,
    0x4fffeffe,0xfffff800,0x3ffea007,0x20bffe00,0x7ffc7ffb,0x0bcdeeef,
    0x00bffb00,0xffbdfffd,0xfff8ffff,0xffffcbce,0x07ffe602,0x203fff88,
    0x3a007ffb,0x3ffe0fff,0x6ffb84ff,0x7403ffee,0x9fff15ff,0x40fffe88,
    0xf75ffffa,0x540005ff,0xffd00fff,0x0005ffff,0x009ffff9,0xf007ffd4,
    0xfff705ff,0xffffffa8,0xd804ffff,0xffa805ff,0xffcfffff,0x7fffffc7,
    0x4c03ffff,0x7fc01fff,0x1bff605f,0x20fffc80,0xfd01fffe,0x0fffd4bf,
    0xff55ffd8,0x5fff301f,0x2adfffd0,0x20005fff,0xfd00fffa,0x01fffd9f,
    0x0ffff880,0x03ffea00,0xfb82fff8,0x77ffdc7f,0x3fffffee,0x802ffec0,
    0xa9efffe9,0x7fffc7ff,0x800dffff,0x6c02fff9,0xff880fff,0xfff1004f,
    0x81fffc8d,0x3e62fff9,0x9fff04ff,0xff81ffee,0x4fff882f,0x005ffff1,
    0x403ffea0,0xfff9cffe,0x3fe6000e,0x7fd4004f,0x0bffe00f,0xffa9ffee,
    0x6fff981f,0x002ffec0,0x7ffa8262,0x04cd7ffc,0x13ffe200,0x43dfff30,
    0x800fffe9,0x444fffc9,0x7f446fff,0x1fffd86f,0xfa97ffe4,0xfffa83ff,
    0x5c7ffd01,0x220bffff,0xfff501da,0x5d3ffa01,0x36005fff,0x54000fff,
    0x3fe00fff,0x27ffb82f,0x3f604ffe,0x2ffec06f,0x3ffdc000,0x0000bffe,
    0x977dffff,0xfffffe89,0x6c3fffff,0xffffdcde,0xfffc80ef,0x2fffeccf,
    0xcdffff98,0x3e25fffe,0xfdbbdfff,0xfff306ff,0xfffffe81,0x501fffff,
    0x3fa01fff,0x13fff64f,0x07fffb10,0x01fff500,0x7dc17ffc,0x03fffa7f,
    0xb013ffe2,0x70000bff,0x2fff8fff,0x7ffd4000,0x6c46ffff,0xffffffff,
    0xfffffd83,0x3600efff,0xffffffff,0x3ffff202,0x540effff,0xffffffff,
    0x3f2a60ef,0xffd882ff,0x1fffffff,0xfffb9999,0x3fa19999,0x3fffa24f,
    0x7ffffcc2,0x9999005f,0x9999fffb,0x5c17ffc1,0x3fff27ff,0xfffdcbde,
    0x2ffec00e,0x3ffdc000,0x0000bffe,0x3fffffaa,0xffffd905,0x3fff603b,
    0x7002dfff,0x03bffffd,0xfffffd50,0x7ffecc07,0x7f40bfff,0x6d402eff,
    0x0befffff,0xffffffff,0x3fa3ffff,0x7fffcc4f,0x3ffffe61,0x3fffe004,
    0xffffffff,0x2e0bffe1,0x7ffec7ff,0x1effffff,0x005ffd80,0x7c7ffb80,
    0x200002ff,0x88009998,0x33310019,0x04c40001,0x00133000,0x36009998,
    0x988003ce,0xffffff01,0x23ffffff,0xffb84ffe,0x9bfd10ef,0xffff8003,
    0xffffffff,0x2e0bffe1,0xeec987ff,0x2001cdef,0x80005ffd,0x66644cc9,
    0x00000001,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x04ccc800,0x9953ccb8,0x03993005,0xa80e65c4,
    0x99302ccc,0x416664c7,0x3261ccca,0xcccccccc,0x99911ccc,0x09999103,
    0xceecba80,0x66664c2c,0x973ccccc,0x1665c059,0x33bb2e60,0x76e5441b,
    0x99101cce,0x99999999,0x33326399,0x43333202,0xcc804ccb,0xddca882c,
    0x3fffb01c,0xf74fff80,0x7ff7009f,0x5ffff910,0x03ffff20,0xffb97fee,
    0x3ffff85f,0x3fffffee,0x12ffffff,0xffb05fff,0x237ffc5f,0xffffffea,
    0x3ffea0ff,0xb6ffffff,0x7fec0bff,0xffffd305,0x7dc9ffff,0x5fffffff,
    0xffffff98,0x22ffffff,0xfa80ffff,0x3ffea5ff,0x07ffee03,0xfffffff7,
    0x3fffa81b,0x54bffea0,0xffb804ff,0x7ffffdc2,0xffff902f,0x5cbff707,
    0x3e60ffff,0x3fee3fff,0xffffffff,0x5fff12ff,0x745fffa8,0x3ffe66ff,
    0x0fffffff,0x3fffffea,0xbffb6fff,0x5c2ffec0,0xffffffff,0x3ffee4ff,
    0x45ffffff,0xfffffff9,0x2a2fffff,0xffe84fff,0x03fff40f,0xffe8bffd,
    0x5fffffff,0x902fffc4,0x27fd4fff,0xf897fe40,0x2fffffff,0x0fffff90,
    0x7fe4bff7,0x3fff22ff,0x3bbbaa3f,0xffffeeee,0x445fff11,0x7f40efff,
    0x33fffe5f,0x20dba999,0xeaaaaaa8,0x0bffb6ff,0x3ea2ffec,0xbaabdfff,
    0x26b2a4fd,0x0ffffb98,0x33333322,0x41ffffcc,0x3ea0fffe,0xfffa84ff,
    0x41fffb82,0xfbabdffc,0x7fec1fff,0x4bffd00f,0xfc804ffa,0x2b7ffe1f,
    0xff902fff,0xffb85fff,0x97ffff25,0x004ffffe,0xff137ff4,0x0fffec5f,
    0xff9affec,0xfb00003f,0x817ff6df,0x7ff45ffd,0x4006203f,0x2002fffb,
    0xfa84fffc,0x3fffa4ff,0xd0dffd00,0x20b60bff,0x7dc3fffa,0xfff882ff,
    0x2017fe62,0x4bb21ffc,0xf902fff8,0xfb8dffff,0x3f7ff65f,0x9ff9ff17,
    0x17ffd400,0x3ea5fff1,0x9ffb04ff,0x000fffea,0xfdb7fec0,0x97ff605f,
    0x0003fffb,0x007ffe20,0xb037ffcc,0xfff51fff,0x17ffd407,0x8003fff7,
    0x7c44fff8,0xfffb84ff,0xe897fe60,0x083ff21e,0xc817ffc4,0x22fffcff,
    0x3ff65ffb,0x9ffb9ffa,0x3fa005ff,0x57ffc46f,0x3206fff8,0xdfff34ff,
    0xffb00003,0xd817ff6d,0x1fffa5ff,0xfff50000,0x0ffff400,0xfdbfff30,
    0xdffd00df,0x4002fff4,0xfe84fff8,0x46ffd86f,0x3fee5ff8,0x8803ff64,
    0xff902fff,0x7dcbff97,0x3e3ff65f,0xff8dfdcf,0x7fff5005,0xfdafff88,
    0x3fee00ff,0x37ffffe3,0x3ff60001,0x6c0bffb6,0x13ffe5ff,0xfffa8000,
    0x7fff9004,0xfffff900,0xfff5005f,0x003fff53,0x905fff50,0xfff81fff,
    0xfb37fc43,0x203fecdf,0xf902fff8,0x23fff37f,0x5bfa5ffb,0xf8bffefe,
    0xfffd005f,0xffbfff10,0x3ea0007f,0x0befffff,0xdb7fec00,0x3ff605ff,
    0xd87fff15,0xc83eeeee,0x02fffffe,0x00dfff30,0x1bffffe2,0xfedffe80,
    0xffb0005f,0x7fff301f,0x7c0fffd4,0x3ffff16f,0xff101ff6,0x4fff205f,
    0xbff75ffd,0xfffbb7f4,0x806ff88f,0xf883fffa,0x007fffff,0x7ffffd40,
    0x36002fff,0x0bffb6ff,0xff9affec,0x7ffffc2f,0xffffd84f,0xfe800bff,
    0x3f6000ff,0x2a003fff,0x01ffffff,0x03fffb80,0xffc97ffe,0x3eadff06,
    0x0ffd3fff,0x902fff88,0x3ffea7ff,0x3fe5ffb8,0x7cdfff36,0x7ffe806f,
    0xffbfff10,0xb880009f,0x2fffffff,0x36dffb00,0x3ff605ff,0xf87fff35,
    0xc84fffff,0xfffffeee,0x0ffff201,0xfffff880,0x7fff4006,0xffa8005f,
    0x3ffe405f,0x3fe09ffd,0x2dffbfb6,0x7fc406fe,0x47ff902f,0x5ffbcffe,
    0x3fff9bfe,0xff501ffe,0x3ffe207f,0x001fffda,0xffffb300,0x5bff600f,
    0x3f605ffd,0x87fff15f,0x04ffe999,0x06fffb88,0x800bfff3,0x3ffffffc,
    0x3fffea00,0x7ffcc000,0x7ffd400e,0xd01fff8a,0x3f6ffeff,0x4406fe8f,
    0xff902fff,0x7dfffdc7,0xfc97fe5f,0xd01ffe0f,0x3e201fff,0xefff8aff,
    0x3e600000,0xfd801fff,0x40bffb6f,0x3ffe4ffd,0x013ff605,0xe81fffb8,
    0x26000fff,0xffffdfff,0x17ffa000,0x1dfff300,0x59fff100,0x7ff40fff,
    0xaffa8ff9,0x7fc405ff,0x87ff902f,0x15ffefff,0x21544bff,0x3fe607ff,
    0x3ffe204f,0x009fff72,0x2fffb800,0xf95ffe80,0x1fff40bf,0x3601fffd,
    0x3e6004ff,0x7ffe42ff,0x7ffec003,0x004fffb8,0x98017ffa,0x2000efff,
    0x5ffdeffd,0x5bf3ff60,0x05ffdff8,0xc817ffc4,0x7ffe43ff,0x0bff15ff,
    0x3601fff0,0x3e200fff,0x3fffa2ff,0x3ee00002,0xfff801ff,0x220fff74,
    0x3fee2fff,0x09ffb04f,0x30fffdc0,0xa800bfff,0x3ffa4fff,0xbffd001f,
    0x3bffe600,0x7ffdc000,0x3f602fff,0x3ff63fff,0x7fc405ff,0x87ff902f,
    0x15fffff8,0xffd00bff,0x09fff301,0x262fff88,0xb800ffff,0xffff301b,
    0x7ffe415c,0x909fff53,0xffe81fff,0x27fec0df,0x47fffa80,0x999afffe,
    0x7f409999,0x3ffee0ff,0x0bffd005,0x33ffff30,0x20133333,0x0ffffff8,
    0x87ffff20,0x744ffffb,0xffffffff,0x7ff93fff,0x2bffffb0,0xfe804ff9,
    0x0fffd80f,0x217ffc40,0xc805fffc,0xffeeefff,0x3ff23fff,0x0efffecd,
    0x333bfffa,0xfa83fffe,0xfeefffff,0x337be4ff,0x2ffffedc,0x3fffffee,
    0x23ffffff,0xfe84fffb,0xffe802ff,0x7fffc405,0xffffffff,0x3ffffa02,
    0x37ffe405,0xd13fffe2,0xffffffff,0x3ff27fff,0x5ffff983,0xfd009ff3,
    0x4fff983f,0x42fff880,0x402ffff8,0xfffffffc,0x7fe44fff,0x41ffffff,
    0xfffffff9,0x3fea05ff,0xffffffff,0x3fffffe4,0x7dc3ffff,0xffffffff,
    0xfff13fff,0xdfff501f,0x80bffd00,0xfffffff8,0x202fffff,0x403ffffb,
    0xfe84fffc,0x7fff43ff,0xffffffff,0x3607ff93,0x9ff55fff,0xd83ffd00,
    0xf8800fff,0xfffa82ff,0x3ffaa00f,0x81dfffff,0xdfffffd9,0xffff9100,
    0xdb1005df,0x17dfffff,0x7ffffffc,0xfffb80be,0xffffffff,0x09fff93f,
    0x201ffff4,0x7c405ffe,0xffffffff,0x00002fff,0x00000000,0x00000000,
    0x00000000,0x01353300,0x20004cc0,0x22000198,0x33100999,0x00000133,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0xcccccb80,0x3ccccccc,0x99999997,0x332a7999,0x44b32e03,
    0x9abccccc,0x33332600,0x32cccccc,0x99999999,0x3332e799,0x40009acc,
    0x332a0cca,0x66666440,0x2a000aac,0x0001cccc,0x20599993,0x9abccccc,
    0x03999100,0x9bb97100,0x00019803,0x2a200d40,0xffd01bcc,0xffffffff,
    0x3fffadff,0x6fffffff,0x7f40dff9,0xfffff14f,0x5019ffff,0xffffffff,
    0x3ffea7ff,0x5fffffff,0xfffffffb,0x3f2003df,0x103ff20f,0xffffffff,
    0xffb005df,0x3a000bff,0xf883ffff,0xffffffff,0x17ffcc0c,0x3fffee00,
    0xf980dfff,0xf700003f,0x3ffee03f,0x7f40efff,0xffffffff,0xfffd6fff,
    0xdfffffff,0xfe81bff2,0xfffff14f,0x50dfffff,0xffffffff,0x3ffea7ff,
    0x5fffffff,0xfffffffb,0xfb00bfff,0xf887fd8f,0xffffffff,0x7ffc01ff,
    0xfb8007ff,0xf883ffff,0xffffffff,0x3ffe61ff,0x3ffee002,0x86ffffff,
    0x0004ffff,0x6437ffe4,0xffffffff,0x2aaaaa0f,0xaaaaeffe,0xffd55552,
    0x3f25555d,0x53ffa06f,0xdbacfff8,0x7d43ffff,0xaaaaabff,0x57fff51a,
    0x36355555,0xfdcaaeff,0x7f403fff,0x7c43fec7,0xfda99aff,0x3fea06ff,
    0x2001ffff,0x3ffffff8,0xaacfff88,0x30efffec,0x26005fff,0xd989efff,
    0x7f442fff,0x44000dff,0x4c0efffd,0xfd30cfff,0x5ffe80bf,0x417ff600,
    0x3fa06ffc,0x83fff14f,0x7d45fffa,0xffa800ff,0x5ffd800f,0x00ffffa8,
    0x0dfd1bfe,0xfb03fff1,0x6ffe40ff,0x32004fff,0x83ffddff,0xfd82fff8,
    0x5fff32ff,0x03fff200,0x3621bffa,0x1000efff,0x3a0bfffd,0xfffa85ff,
    0x017ffa00,0xf905ffd8,0xa7ff40df,0xfe81fff8,0x07ffd46f,0x007ffd40,
    0xfa82ffec,0x7ffe44ff,0xffffffff,0x3fff12ff,0x7c0fff70,0x06ffdaff,
    0xfb1fff30,0x5fff107f,0x269fff10,0xfd002fff,0x3fff20bf,0x3ffff900,
    0x3ffff980,0x103fff10,0x7f403fff,0x3ff6005f,0x40dff905,0xfff14ffe,
    0xa8dffd03,0xfa800fff,0xffd800ff,0x917ffe05,0xffffffff,0x225fffff,
    0xffd81fff,0x71fff306,0xfd001fff,0x20fff67f,0xff02fff8,0x0bffe6bf,
    0xa82fffc0,0x3ee01fff,0xff502fff,0x7fcc05ff,0xfeeeeeef,0x3ffa03ff,
    0x17ff6005,0xfd037fe4,0x07ffe29f,0xfa89fff5,0xffa800ff,0x5ffd800f,
    0x951fff60,0xfb99dffb,0x3e2399df,0x7ffdc1ff,0x22dff702,0x7dc03fff,
    0x20fff66f,0xff02fff8,0x0bffe69f,0x407ffec0,0x4c02fff9,0x7e43ffff,
    0x7dc01eff,0xffffffff,0x3fa03fff,0x3ff6005f,0xfffff905,0x9fffffff,
    0x2eb3ffe2,0x540efffd,0xaaaabfff,0x3fffea2a,0xb2ffffff,0x7fe40bff,
    0x4c5ff507,0xfff883ff,0x3ffffeee,0xfe8fffa0,0x3ffe205f,0x220fff61,
    0xffa82fff,0x05fff32f,0x873fff20,0x802fffc8,0xf31ffffc,0xf7007fff,
    0x999999ff,0x7f403999,0x3ff6005f,0xfffff905,0x9fffffff,0x3fffffe2,
    0xfa80cfff,0xffffffff,0xfffff50f,0x365fffff,0x3ff205ff,0x22ffb80f,
    0xff882ffa,0xefffffff,0x43fff103,0x3f607ffc,0x41ffec4f,0x7d42fff8,
    0xfff30eff,0x3ffe6005,0xfffffeff,0x7ffe402f,0x7fff4c0e,0x07ffd404,
    0x17ffa000,0x905ffd80,0xffffffff,0x3e29ffff,0x3fffffff,0x3ffffea0,
    0xf50fffff,0xffffffff,0x817ff65f,0xff907ffc,0x440ffdc3,0xffeeefff,
    0xffa85fff,0x417ffd47,0x7ec0fffa,0xefff883f,0x1fffffee,0x800bffe6,
    0xfffffffb,0xb101ffff,0x2201bfff,0x100dfffe,0x80005fff,0x36005ffe,
    0xdff905ff,0xf8a7ff40,0xfffebcff,0x57fff503,0x7d455555,0xffd800ff,
    0x89fff605,0xaabffdaa,0x221abffd,0x3aa21fff,0x7fec2fff,0xe84fff85,
    0x3ffd82ff,0xffffff88,0x7cc2efff,0x644002ff,0xffcceffe,0xfffe981f,
    0xdfffb004,0x03fffa01,0x05ffe800,0x6417ff60,0x3ffa06ff,0x743fff14,
    0xffa80fff,0xfffa800f,0x05ffd800,0xffa97ffa,0xffffffff,0x3fe24fff,
    0x5fffa81f,0x5556fffc,0x7d47ffea,0xfeeeeeff,0xf11eeeff,0x7bdfffff,
    0x00bffe60,0x0fffb800,0x01ffffd4,0x0bfffee0,0x2f3fffe6,0x7405ecca,
    0x3f6005ff,0x0dff905f,0xff8a7ff4,0x13ffe61f,0x2003ffea,0xd800fffa,
    0xfff505ff,0x7ffffd49,0xffffffff,0x407ffe24,0x3fe65fff,0xffffffff,
    0x3ffee1ff,0xffffffff,0xfff12fff,0x7ffcc005,0x3fa00002,0x7fffdc5f,
    0xfff50002,0xffff707f,0x80bfffff,0x36005ffe,0xdff905ff,0xf8a7ff40,
    0x7fff41ff,0x007ffd40,0x4007ffd4,0xfe885ffd,0x3e6620ff,0xeff999ef,
    0x3ffe2099,0x24fff981,0xfffffffc,0x2e3fffff,0xffffffff,0x12ffffff,
    0x4c005fff,0x00002fff,0xfd85fff7,0x4c0001ef,0xfb305fff,0x07dfffff,
    0x2005ffe8,0xff905ffd,0x8a7ff40d,0x7fd41fff,0x07ffd44f,0x007ffd40,
    0xf512ffec,0x7fc07fff,0xf882ffc5,0x7ff4c1ff,0x2b7ffa2f,0xfffaaaaa,
    0x26666626,0x9cffe999,0x05fff109,0x017ffcc0,0xfffb3300,0x0003b60b,
    0x9802f440,0xfd00099a,0x7776c0bf,0x4eeeffff,0x7f40dff9,0x03fff14f,
    0x7d41fffd,0xffa800ff,0xffffffff,0xffffffb5,0x440bffff,0x13fe24ff,
    0x7777ffc4,0x225fffff,0x3f201fff,0x3fa000ff,0x2fff883f,0x3fffe600,
    0x0fffffff,0x3ffffffa,0x00100eff,0x00001000,0x40bffd00,0xfffffffe,
    0xdff96fff,0xf8a7ff40,0xfffb81ff,0x003ffea3,0x3fffffea,0xffb5ffff,
    0x5fffffff,0x263ff980,0xfff104ff,0xbfffffff,0x203ffdc1,0x2002fffa,
    0xff883ffe,0x3fe6002f,0xffffffff,0x3ffffa0f,0x0000cfff,0x00000000,
    0x205ffe80,0xfffffffe,0xdff96fff,0xf8a7ff40,0xfff881ff,0x003ffea7,
    0x3fffffea,0xffb5ffff,0x0159bdff,0x7d45ff50,0xffff103f,0xb039ddff,
    0xff8809ff,0x3ffa004f,0x02fff883,0x3ffffe60,0x20ffffff,0x0bdefffe,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x32e60000,0x31002bcc,0x20157997,
    0x801bcca9,0x1bcccca9,0x54c05554,0x5435512a,0x2aa80bcc,0x2206f326,
    0x4c3970aa,0x5995003c,0x005554c0,0x55546aaa,0x32aa8800,0x55555555,
    0x15554355,0x00055530,0x54004c00,0x3ba201cc,0xeeeeeeee,0x7ffcc06e,
    0x02ffffff,0x3fffffee,0x7ffec43f,0xd881efff,0x5fffffff,0x7dc17ffc,
    0xd3bff77f,0xf83fffff,0xfffffb7f,0xfdaff889,0xffff9bff,0x027fe401,
    0x5407fff5,0x7ffb2fff,0x36bff500,0xffffffff,0x3fff25ff,0x04fff984,
    0x88017fdc,0x3e203ffe,0x3fe206ff,0xffffffff,0x7ffd407f,0x1fffffff,
    0x7fffff44,0x3fe23fff,0xffffffff,0x3ffffa21,0x7fc5fffe,0x77ffb82f,
    0xfffffdff,0xdfff8dff,0x2fffffff,0x3fffbfe2,0x4ffffeef,0x2027fe40,
    0x3f606ffe,0x013ff26f,0x7fecffee,0xffffffff,0x20ffff45,0xfa806ffe,
    0xfff7002f,0x3fff201f,0xdddd102f,0xdddddddd,0x541ada80,0x7fec4fff,
    0x3ecaacef,0x2eb7fff6,0x3ee6ffff,0x7c2983ff,0x7ffb82ff,0x39fffff7,
    0x7fc5fff9,0xffcaefff,0x3bffe25f,0xf9cfffd9,0x27fe406f,0x207ffee0,
    0x3ee3fff8,0x2ffc805f,0xf9999995,0xff985fff,0x07fff26f,0x8ffccba2,
    0xfff700ea,0xd9ff307f,0x000001ff,0x4dff9000,0x100dfffa,0x3213ffea,
    0xfffb2fff,0x417ffc00,0xfff77ffb,0x23fff83f,0x7ec4ffff,0x4bffe26f,
    0x1ffa7ffb,0x8809ff90,0xffb84fff,0x89bfea0f,0x07ff60aa,0x209fff90,
    0xff9cfffb,0x39ff904f,0x09ff91ff,0x213fffe2,0x09ff57fd,0x70000000,
    0x7ffecfff,0x0fffc800,0xf94fff88,0xff001bff,0x2fff705f,0xfe82fffb,
    0x217ffe4f,0x3fe27ffb,0xfe93fee6,0xb333310f,0x133339ff,0xfe87ffd8,
    0x93ffcc5f,0x07ff49ff,0x80dfff50,0x6ffefffd,0x3fbfff20,0x203fffef,
    0x7d43fff9,0x207ff62f,0xaaaaaaaa,0x51002aaa,0xfffdddb9,0xd802fff4,
    0x3ffa05ff,0xdfffff55,0x0bffe017,0x7fddffee,0x2099880f,0xffb82fff,
    0xfb9bfe27,0x743ffa3f,0xffffffff,0x7d46ffff,0x3ffe22ff,0xfd0fff82,
    0x103ffcff,0x8801ffff,0x00ffffff,0xeffffeb8,0x85fff003,0x37fcc6fe,
    0x3fffffe2,0x807fffff,0xfffffffc,0x13ffe7ff,0xb027ff40,0x7ffdcdff,
    0x7c0dffff,0x7ffb82ff,0x4001fff7,0xffb82fff,0xfb9bfe27,0x743ffa3f,
    0xffffffff,0xff86ffff,0x41ffee5f,0xfff99ffe,0x740dff2f,0xf5001fff,
    0x26007fff,0x01dffffd,0x7e46ffa8,0x23ffc81f,0xfffffff8,0x6407ffff,
    0xeccdffff,0x17ffe7ff,0xb02fff40,0xffc88bff,0x3e0fffff,0x7ffb82ff,
    0x4001fff7,0xffb82fff,0xfb9bfe27,0x6c3ffa3f,0xffffeeee,0xfc85eeee,
    0x09ffd0ff,0x3ff2bff6,0x05ff8dff,0x4007fff9,0x406ffffd,0xffffffda,
    0x654c2dff,0x3fe21fff,0x41fff105,0xaaaaaaaa,0x3e202aaa,0x7ffb85ff,
    0x6c01bffa,0x3ffa06ff,0x3fff2604,0x20bffe4f,0xfff77ffb,0x17ffc001,
    0xff13ffdc,0xfd1ffdcd,0x27fe401f,0x9afff880,0xff900fff,0x5ffdbfd7,
    0xfff709ff,0x7ffdc00b,0x3f604fff,0xfe9ffaef,0x77fffc5f,0x50066541,
    0x00000599,0xf903fff5,0x17ffecff,0x407ffe40,0x9803fff9,0x3ffe5fff,
    0xbbfffcc3,0x3e000fff,0x7ffb82ff,0xffb9bfe2,0xc803ffa3,0x3f6004ff,
    0x205ffcdf,0xcbffdffb,0x4c3ffdff,0x3000efff,0xfffdbfff,0x7cd3e603,
    0xde81f91f,0x0000002c,0x7ffd4000,0x53fffe43,0x3305ffff,0x88bbffe6,
    0x4030fffe,0x3fa4fff8,0x3fffa65f,0x001fff77,0x7dc17ffc,0xb9bfe27f,
    0x03ffa3ff,0x2004ffc8,0x2ffffffa,0x3ffffea0,0x1fffff98,0x007fffa2,
    0xf88fffe8,0x54100eff,0x000021ff,0x00000000,0xd79ffff1,0xfd8fffff,
    0xffeeffff,0x3bffff64,0x363ffffd,0xfecaabdf,0x3fff62ff,0x7fffffde,
    0x4001fff7,0xffb82fff,0xfb9bfe27,0x803ffa3f,0x7c004ffc,0x4c07ffff,
    0x3fa6ffff,0x3ff60fff,0xffffffff,0x717ffe46,0xf500bfff,0x0000005f,
    0xc8000000,0xcfffffff,0x7fec47ff,0x24ffffff,0xffffffe8,0x7ffec4ff,
    0x44ffffff,0xfffffff9,0xfff77ffa,0x17ffc001,0xff13ffdc,0xfd1ffdcd,
    0x27fe401f,0x3ffff200,0x3ffff804,0xfd1ffff2,0xffffffff,0x27ffd4df,
    0x201fffec,0x00000998,0x00000000,0x1effffc8,0x3faa0fff,0xb82dffff,
    0x81efffff,0xfffffffc,0xffff302e,0x7ddffe3d,0x3fe000ff,0x27ffb82f,
    0x3fee6ff8,0x8803ffa3,0x7c400099,0xfe801fff,0x3ffe60ff,0x7fffff46,
    0xf16fffff,0xff101dff,0x000001ff,0x00000000,0x00133000,0x8800cc40,
    0x53310019,0x02620013,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x4c408800,
    0x09999999,0xffffffff,0xdfffffff,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x3f600000,0x317ffe6f,0x4001bffb,0xb03fffe8,
    0x7ffd49ff,0xff2fffff,0xffffffff,0x00ffffff,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x9bff6000,0x3fe64ffe,0x7ec2ffff,
    0x3fffc81f,0xa97fffdc,0xffffffff,0xddddddd2,0xdddddddd,0x0000000b,
    0x00000000,0x00000000,0x00000000,0x00000000,0x32000000,0x93ffa5ff,
    0xfffffffd,0x5403ffa2,0x3ff63fff,0xdddd54ff,0x0003dddd,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x64000000,0x4fff65ff,
    0xfe88fff8,0x06ffddff,0xfc8eeecc,0x00003fff,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x7fec9ff7,0xfd8bff33,
    0x003fffff,0x00bffd10,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x927fd400,0x06aa25ff,0x00fffff2,0x00006600,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x7e47ff50,0x2aa2002f,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
};

static signed short stb__consolas_bold_29_usascii_x[95]={ 0,5,3,0,1,0,0,6,3,3,1,1,2,3,
5,1,0,1,1,1,0,2,1,1,1,1,5,3,1,1,2,3,0,0,1,1,1,2,2,0,1,2,2,1,
2,0,1,0,1,0,1,1,1,1,0,0,0,0,1,4,1,3,1,0,0,1,1,1,1,1,0,1,1,2,
1,2,2,0,1,1,1,1,2,2,0,1,0,0,0,0,2,2,6,3,0, };
static signed short stb__consolas_bold_29_usascii_y[95]={ 21,0,0,2,-1,0,1,0,-1,-1,0,6,15,11,
15,0,2,2,2,2,2,2,2,2,2,2,6,6,5,9,5,0,0,2,2,2,2,2,2,2,2,2,2,2,
2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,0,0,2,24,0,6,0,6,0,6,0,6,0,0,
0,0,0,6,6,6,6,6,6,6,2,6,6,6,6,6,6,0,-3,0,9, };
static unsigned short stb__consolas_bold_29_usascii_w[95]={ 0,6,10,16,14,16,17,4,10,10,14,14,9,10,
6,14,16,14,14,14,16,13,14,14,14,14,6,8,13,14,13,11,16,16,14,14,15,12,12,15,14,12,11,15,
13,16,14,16,14,17,15,14,14,14,16,16,16,16,14,8,14,9,14,16,10,13,14,13,14,14,15,15,14,13,
12,14,13,16,14,14,14,14,13,12,14,13,16,16,16,16,12,11,4,11,16, };
static unsigned short stb__consolas_bold_29_usascii_h[95]={ 0,22,9,19,26,22,21,9,28,28,14,15,11,4,
7,25,20,19,19,20,19,20,20,19,20,19,16,20,17,9,17,22,27,19,19,20,19,19,19,20,19,19,20,19,
19,19,19,20,19,25,19,20,19,20,19,19,19,19,19,27,25,27,10,3,7,16,22,16,22,16,21,21,21,21,
27,21,21,15,15,16,21,21,15,16,20,16,15,15,15,21,15,27,30,27,8, };
static unsigned short stb__consolas_bold_29_usascii_s[95]={ 255,211,71,102,101,164,230,250,6,17,196,
117,211,117,110,134,184,172,123,59,151,170,201,219,216,197,248,231,226,236,212,
218,75,134,119,240,86,73,60,43,29,16,16,234,183,202,187,153,168,116,44,
1,1,28,138,155,89,106,74,92,149,65,221,128,99,1,196,15,181,240,92,
76,61,47,52,15,1,100,85,29,123,108,71,44,138,57,132,149,179,30,166,
28,1,40,82, };
static unsigned short stb__consolas_bold_29_usascii_t[95]={ 1,1,111,75,1,1,1,53,1,1,95,
95,95,111,111,1,32,53,54,54,75,32,32,53,32,75,1,32,75,95,75,
1,1,75,75,32,75,75,75,54,75,75,54,53,75,53,53,32,75,1,75,
54,75,54,53,53,54,54,54,1,1,1,95,111,111,95,1,95,1,75,32,
32,32,32,1,32,32,95,95,95,32,32,95,95,32,95,95,95,95,32,95,
1,1,1,111, };
static unsigned short stb__consolas_bold_29_usascii_a[95]={ 255,255,255,255,255,255,255,255,
255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,
255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,
255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,
255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,
255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,
255,255,255,255,255,255,255, };

// Call this function with
//    font: NULL or array length
//    data: NULL or specified size
//    height: STB_FONT_consolas_bold_29_usascii_BITMAP_HEIGHT or STB_FONT_consolas_bold_29_usascii_BITMAP_HEIGHT_POW2
//    return value: spacing between lines
static void stb_font_consolas_bold_29_usascii(stb_fontchar font[STB_FONT_consolas_bold_29_usascii_NUM_CHARS],
                unsigned char data[STB_FONT_consolas_bold_29_usascii_BITMAP_HEIGHT][STB_FONT_consolas_bold_29_usascii_BITMAP_WIDTH],
                int height)
{
    int i,j;
    if (data != 0) {
        unsigned int *bits = stb__consolas_bold_29_usascii_pixels;
        unsigned int bitpack = *bits++, numbits = 32;
        for (i=0; i < STB_FONT_consolas_bold_29_usascii_BITMAP_WIDTH*height; ++i)
            data[0][i] = 0;  // zero entire bitmap
        for (j=1; j < STB_FONT_consolas_bold_29_usascii_BITMAP_HEIGHT-1; ++j) {
            for (i=1; i < STB_FONT_consolas_bold_29_usascii_BITMAP_WIDTH-1; ++i) {
                unsigned int value;
                if (numbits==0) bitpack = *bits++, numbits=32;
                value = bitpack & 1;
                bitpack >>= 1, --numbits;
                if (value) {
                    if (numbits < 3) bitpack = *bits++, numbits = 32;
                    data[j][i] = (bitpack & 7) * 0x20 + 0x1f;
                    bitpack >>= 3, numbits -= 3;
                } else {
                    data[j][i] = 0;
                }
            }
        }
    }

    // build font description
    if (font != 0) {
        float recip_width = 1.0f / STB_FONT_consolas_bold_29_usascii_BITMAP_WIDTH;
        float recip_height = 1.0f / height;
        for (i=0; i < STB_FONT_consolas_bold_29_usascii_NUM_CHARS; ++i) {
            // pad characters so they bilerp from empty space around each character
            font[i].s0 = (stb__consolas_bold_29_usascii_s[i]) * recip_width;
            font[i].t0 = (stb__consolas_bold_29_usascii_t[i]) * recip_height;
            font[i].s1 = (stb__consolas_bold_29_usascii_s[i] + stb__consolas_bold_29_usascii_w[i]) * recip_width;
            font[i].t1 = (stb__consolas_bold_29_usascii_t[i] + stb__consolas_bold_29_usascii_h[i]) * recip_height;
            font[i].x0 = stb__consolas_bold_29_usascii_x[i];
            font[i].y0 = stb__consolas_bold_29_usascii_y[i];
            font[i].x1 = stb__consolas_bold_29_usascii_x[i] + stb__consolas_bold_29_usascii_w[i];
            font[i].y1 = stb__consolas_bold_29_usascii_y[i] + stb__consolas_bold_29_usascii_h[i];
            font[i].advance_int = (stb__consolas_bold_29_usascii_a[i]+8)>>4;
            font[i].s0f = (stb__consolas_bold_29_usascii_s[i] - 0.5f) * recip_width;
            font[i].t0f = (stb__consolas_bold_29_usascii_t[i] - 0.5f) * recip_height;
            font[i].s1f = (stb__consolas_bold_29_usascii_s[i] + stb__consolas_bold_29_usascii_w[i] + 0.5f) * recip_width;
            font[i].t1f = (stb__consolas_bold_29_usascii_t[i] + stb__consolas_bold_29_usascii_h[i] + 0.5f) * recip_height;
            font[i].x0f = stb__consolas_bold_29_usascii_x[i] - 0.5f;
            font[i].y0f = stb__consolas_bold_29_usascii_y[i] - 0.5f;
            font[i].x1f = stb__consolas_bold_29_usascii_x[i] + stb__consolas_bold_29_usascii_w[i] + 0.5f;
            font[i].y1f = stb__consolas_bold_29_usascii_y[i] + stb__consolas_bold_29_usascii_h[i] + 0.5f;
            font[i].advance = stb__consolas_bold_29_usascii_a[i]/16.0f;
        }
    }
}

#ifndef STB_SOMEFONT_CREATE
#define STB_SOMEFONT_CREATE              stb_font_consolas_bold_29_usascii
#define STB_SOMEFONT_BITMAP_WIDTH        STB_FONT_consolas_bold_29_usascii_BITMAP_WIDTH
#define STB_SOMEFONT_BITMAP_HEIGHT       STB_FONT_consolas_bold_29_usascii_BITMAP_HEIGHT
#define STB_SOMEFONT_BITMAP_HEIGHT_POW2  STB_FONT_consolas_bold_29_usascii_BITMAP_HEIGHT_POW2
#define STB_SOMEFONT_FIRST_CHAR          STB_FONT_consolas_bold_29_usascii_FIRST_CHAR
#define STB_SOMEFONT_NUM_CHARS           STB_FONT_consolas_bold_29_usascii_NUM_CHARS
#define STB_SOMEFONT_LINE_SPACING        STB_FONT_consolas_bold_29_usascii_LINE_SPACING
#endif

