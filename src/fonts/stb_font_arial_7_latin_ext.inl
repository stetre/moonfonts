// Font generated by stb_font_inl_generator.c (4/1 bpp)
//
// Following instructions show how to use the only included font, whatever it is, in
// a generic way so you can replace it with any other font by changing the include.
// To use multiple fonts, replace STB_SOMEFONT_* below with STB_FONT_arial_7_latin_ext_*,
// and separately install each font. Note that the CREATE function call has a
// totally different name; it's just 'stb_font_arial_7_latin_ext'.
//
/* // Example usage:

static stb_fontchar fontdata[STB_SOMEFONT_NUM_CHARS];

static void init(void)
{
    // optionally replace both STB_SOMEFONT_BITMAP_HEIGHT with STB_SOMEFONT_BITMAP_HEIGHT_POW2
    static unsigned char fontpixels[STB_SOMEFONT_BITMAP_HEIGHT][STB_SOMEFONT_BITMAP_WIDTH];
    STB_SOMEFONT_CREATE(fontdata, fontpixels, STB_SOMEFONT_BITMAP_HEIGHT);
    ... create texture ...
    // for best results rendering 1:1 pixels texels, use nearest-neighbor sampling
    // if allowed to scale up, use bilerp
}

// This function positions characters on integer coordinates, and assumes 1:1 texels to pixels
// Appropriate if nearest-neighbor sampling is used
static void draw_string_integer(int x, int y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0, cd->t0); glVertex2i(x + cd->x0, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t0); glVertex2i(x + cd->x1, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t1); glVertex2i(x + cd->x1, y + cd->y1);
        glTexCoord2f(cd->s0, cd->t1); glVertex2i(x + cd->x0, y + cd->y1);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance_int;
    }
    glEnd();
}

// This function positions characters on float coordinates, and doesn't require 1:1 texels to pixels
// Appropriate if bilinear filtering is used
static void draw_string_float(float x, float y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0f, cd->t0f); glVertex2f(x + cd->x0f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t0f); glVertex2f(x + cd->x1f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t1f); glVertex2f(x + cd->x1f, y + cd->y1f);
        glTexCoord2f(cd->s0f, cd->t1f); glVertex2f(x + cd->x0f, y + cd->y1f);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance;
    }
    glEnd();
}
*/

#ifndef STB_FONTCHAR__TYPEDEF
#define STB_FONTCHAR__TYPEDEF
typedef struct
{
    // coordinates if using integer positioning
    float s0,t0,s1,t1;
    signed short x0,y0,x1,y1;
    int   advance_int;
    // coordinates if using floating positioning
    float s0f,t0f,s1f,t1f;
    float x0f,y0f,x1f,y1f;
    float advance;
} stb_fontchar;
#endif

#define STB_FONT_arial_7_latin_ext_BITMAP_WIDTH         256
#define STB_FONT_arial_7_latin_ext_BITMAP_HEIGHT         52
#define STB_FONT_arial_7_latin_ext_BITMAP_HEIGHT_POW2    64

#define STB_FONT_arial_7_latin_ext_FIRST_CHAR            32
#define STB_FONT_arial_7_latin_ext_NUM_CHARS            560

#define STB_FONT_arial_7_latin_ext_LINE_SPACING           5

static unsigned int stb__arial_7_latin_ext_pixels[]={
    0x20710503,0x50301982,0x88350310,0x44280981,0x0c414c1a,0x440c40a6,
    0x220a0c0a,0x302a140a,0x0b80c381,0x310a1826,0x82030cc3,0x0540c198,
    0x4c4186e6,0x0c30c220,0x10510666,0x03303301,0x22898c13,0x072a19c9,
    0x88098193,0x1330d442,0x13315443,0x1330d443,0x13315443,0x0c463c83,
    0x20ec41dc,0x19303261,0x4c310d44,0x1c98a22c,0x2286e1d4,0x43872619,
    0x06314c0a,0x530c4c17,0x8722142a,0x4c31c70a,0x86226188,0x22261889,
    0x1110c461,0x6ce6708c,0x7298e531,0x842981b8,0x70c238e1,0x8e38611c,
    0x45c71c30,0x55c1c738,0x270dce60,0x2394c729,0x94c6259b,0x54a6330a,
    0x259b86e0,0x1b9cca22,0x9552cdc7,0x3966e39c,0x45098a47,0x1c2a3739,
    0x471c71c7,0x238e38e3,0x45c738e3,0x49c55292,0x2126a090,0x38e39c3b,
    0x271c71ce,0x71ce38e3,0x8e17911c,0x871e6543,0x704824e3,0x2629188e,
    0x2098a490,0x290a39c3,0x71ce39c3,0x27154c15,0x88b8aa63,0x0a9c383a,
    0x38e39215,0x8e38e38e,0x8aa638e3,0x22ae928b,0x0c70c729,0x41570b75,
    0x4e485473,0x8e7242a3,0x2a39c90a,0x15488c90,0x21724912,0x1c31ce29,
    0x2312dcc3,0x2333a88b,0x30e3a88b,0x2e3114b7,0x5b98e530,0x4c1b0f26,
    0x2f206c5b,0x2985c51c,0x38ef2215,0x9215242a,0x2485490a,0x2e0d890a,
    0x97951aa8,0x7911de44,0x9506d5c7,0x9125d479,0x9125d477,0x9125d477,
    0x9125d477,0x895e4c77,0xc82a03bc,0x3bc8a44b,0x49a8ef22,0x11cbc86a,
    0x388e5e47,0x0d4524d4,0x9a85c979,0x350e2144,0x20b81c49,0x81525e42,
    0x3bc88543,0xbc88ef22,0xc88ef223,0x2a60e23b,0x20000000,0x00000124,
    0x00000000,0x02200440,0x02609800,0x30130060,0x11003041,0x4c02004c,
    0x00418020,0x00220c08,0x01000000,0x00000006,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x15302620,
    0x2a0d4388,0x5d411430,0x18aa031b,0x0cc18770,0x37501706,0x0622bb98,
    0x5dc43773,0x13102a20,0x0503880c,0x11050173,0x818184c1,0x8260422a,
    0x26044429,0x22140cc1,0x8886e661,0x4550a0c0,0x261110a8,0x222610a0,
    0x51062261,0x215066a1,0x350e4193,0x0725c19c,0x321c7117,0x43c98624,
    0x22e2a89b,0x2470c460,0x41c987bd,0x3026e1c9,0x261c8839,0x4c188c72,
    0x221d2e1c,0x7386261c,0xb8622638,0x33105c49,0x4590c44c,0x724dc92b,
    0x6546e253,0x509c921b,0x38e3204c,0x2ea4838e,0xc85971c2,0x21ab82a0,
    0x9107388b,0x71171c17,0x2a15298e,0x32e2bab8,0x7971c71b,0x2731ee47,
    0x5c6e731b,0x98dce64a,0x71c12373,0x5371b9cc,0x271b9cc7,0x25371ce3,
    0x2a39c74b,0x2971ce49,0x42e170e3,0x9b9dc473,0x929b86a2,0x719071c1,
    0x7241c71c,0x9171c173,0xcb82a1c1,0x41c2f220,0x7911c911,0x213148e1,
    0x0e2998ab,0x214ce38e,0x70e70e3b,0x39c3854e,0x8e38639c,0x1c9739c3,
    0x92ea39ce,0x475373b8,0x270a9c73,0x438ea6e3,0x5d4738e3,0x10547713,
    0x41c70e77,0x85490a9d,0x712a2424,0xa8aa489c,0x522324e0,0x57930bbb,
    0x8d52231c,0x9353a88b,0x9de5c379,0x4191c90a,0xb94c2e3b,0xb92ee530,
    0x94c2e530,0x242a3bc8,0x4d1ca617,0x12ea530b,0x739dd42a,0x92ea1a89,
    0x125ce4ba,0x4483b9c7,0x20a8eea4,0x71c553ba,0x47791370,0x8aee3bc8,
    0x22424499,0x45302618,0x30a22bc9,0x57930b85,0x5c39791c,0x10a83a8a,
    0x77090779,0x25e44bc8,0x7912f207,0x3bc88709,0x642425e4,0x2011004b,
    0x200031a3,0x200089a3,0x002a0041,0x002eee38,0x1104c000,0x20208088,
    0x08811001,0x8800400c,0x0c006009,0x01000044,0x00022000,0x000000c0,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x81306600,0x82604c1a,
    0x8b221109,0x0440d409,0x0cc33022,0x350530cc,0x266e204c,0x30710660,
    0x04c2a817,0x41986154,0x4141541a,0x20615419,0x0c04c42a,0x09853026,
    0x8826214c,0x40d43301,0x8804181a,0x304c0a81,0x98a66199,0x88866218,
    0x9b8cc2a0,0x32a8c261,0x5e4c6f26,0x0c4542a1,0x20c4546a,0x93986e09,
    0x89822615,0x43232218,0x202a1bc9,0xb8371c29,0x2eee0541,0x2cc982a2,
    0x0de4c735,0x165cc937,0x7165cc15,0x951664c3,0x7306f261,0x1702f263,
    0x302a0998,0x541a8133,0x39c2ea60,0x738e71ce,0x5b319854,0x8e773854,
    0xa86e21b8,0x0a853530,0x50a85353,0x5c711c93,0x2ea38e08,0x546e22cb,
    0x71c3b849,0x305449a8,0x71cd4195,0x385de411,0x22e15392,0x08b8e6a0,
    0x208b8e6a,0x2e48e59b,0xb9222e59,0x5c76a639,0x2eb66a39,0x1cdc7370,
    0x71ce1b79,0x239c738e,0x7311989a,0x5dc542a1,0x8530a619,0x82a1320a,
    0x2a70a84c,0x9b8a6170,0x0b96f2e4,0x2a714c15,0x215055c0,0x82a2dd44,
    0x2ef257b4,0x2e637970,0xbb8ef2e4,0x5e46f2e4,0x3237970b,0x237970bb,
    0x91de5c74,0x09c2e38e,0x209ca66e,0x270bbdba,0x431504e0,0xa92ea4ba,
    0x9a92ea4b,0x549950cc,0x44753710,0x30541c43,0x40cc1503,0x6449750a,
    0x38e39c4b,0x4388eee2,0x1e6544ba,0xdab87751,0x1decc2a0,0x150392e6,
    0x0e0e299c,0xb98392e6,0x396ea0e4,0x472dd453,0x4ca8ee63,0xbbab8ee6,
    0x3b98ee63,0x00000000,0x58ac1506,0x5e6caf36,0xa81982a2,0x002a0660,
    0x038e39c0,0x2402bcd8,0x90a80009,0x79701dec,0x10c8e187,0x5c077970,
    0x2f2e03bc,0x200c8e03,0x00003bcb,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x73530000,
    0x204c2a87,0x81980980,0x19819809,0x988a60c4,0x50220541,0x881288a0,
    0x02a0d419,0x40982811,0x1980d419,0x10660530,0x0440a833,0x3018260a,
    0x06a0cc41,0x41408815,0x8500981b,0x86198618,0x22a61118,0x350d408e,
    0x40dc0a89,0x2a82b819,0xcb99664c,0x0c259932,0x10444311,0xb95dcc11,
    0x54098289,0x0a0a0d40,0x5c2b8b37,0x0a605503,0x2a04c154,0x370a0541,
    0x06e045c7,0x2e0d4435,0xa82a0542,0x31428838,0x39c43944,0xbc8e3944,
    0x5ba926a2,0x849a8e6a,0x5c24d43b,0x117045c3,0x38e7045c,0x71ce39c7,
    0x044dcc11,0x524d4935,0x3524d493,0x8e6a39c9,0x207702d8,0x9a87703b,
    0x39a8e6a3,0x64138e6a,0x9a926a4a,0x49a926a4,0x249a926a,0xa9877073,
    0x5044cc29,0x8a981135,0x54e16150,0x2f21b570,0x570b750b,0x55c2dd41,
    0x65c6f2e0,0x4e37971b,0x38e71ce3,0x2a0de5c7,0x53854e3b,0x153854e1,
    0x25b9854e,0x0f22e153,0x02ae02ae,0x0bbc82ae,0x2ef21779,0x2e617790,
    0x5ba854e3,0x25ba96ea,0xa96ea5ba,0x2e154e5b,0x5442640a,0x22454448,
    0xb57139a8,0x5425d477,0x6d5c9731,0xab8f32a0,0x38f32a0d,0x4ba83838,
    0x24ba92ea,0x44c0e4ba,0xba92ea3a,0x4ba92ea4,0xa98e12ea,0x95132ea3,
    0x43cca879,0x92e63cca,0x992e64b9,0x75705c4b,0xdab86d5c,0x2ae1b570,
    0x2e1b570d,0x457370da,0x40cc3cca,0x89538953,0x20000753,0x01248000,
    0x4ef2e492,0x77973bcb,0x32e00000,0x0000003b,0x90000400,0x92449224,
    0x00800000,0x00000000,0x03312480,0x00020000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x98300000,
    0x0d41119b,0x30c77022,0x04cc1b98,0x2a1986e2,0x1550a111,0xa8130c04,
    0x440dcc0a,0x40420a80,0x81730501,0x86a0d41a,0x210542a8,0x81a818c0,
    0x130a2bbb,0x40bb9813,0x1310661a,0x417730d4,0x44061301,0x21bba860,
    0x36731428,0x10a2a111,0x239c45c1,0x9985caa3,0xa8dce618,0x098546a1,
    0x07215535,0xaaa966e9,0x302a5309,0x1ce38b85,0x530660e6,0x22a48b8e,
    0x09a8a2a4,0x2853922e,0x54c19887,0xd9a8a20c,0x9222e0ba,0xa98a61a8,
    0x88b8261d,0x1a86f2e4,0x0e098817,0x50944435,0x23138aa4,0x3220b83c,
    0x4491c70b,0x9c38e973,0xa8542a0a,0x064a2550,0x2eea39d2,0x70262928,
    0x530c8b87,0x1dc2cdc5,0x260aa412,0x3bb8eee4,0x4c739326,0x224dc570,
    0xa8b257b4,0x2f60bbdb,0x649370b8,0x0a8a66e2,0x91c2e2f6,0x4dc2c854,
    0x71e44324,0x5c623393,0x2633298a,0xa44614c1,0x2985c90a,0x985c7537,
    0x0a854152,0x4a6aaa15,0x25b9a423,0x11728aaa,0x220ab875,0x748360ba,
    0x431c1570,0x385c2173,0x73854215,0x0e296ee1,0x43bd98e7,0x21ddd5c3,
    0x21c738e3,0x470544ca,0x0a8eeee3,0x5458e70b,0x250eeea1,0x64a64bca,
    0x217530bb,0x77912bc9,0x73876644,0x82a4bc89,0x442a150a,0x5dcaa2aa,
    0x55449352,0x950e5e42,0x711dd479,0x66545ba8,0xb98ef223,0x4a98eea3,
    0x23aa8eea,0x8e70e283,0x001cef64,0x4738af2e,0x65c15003,0x42a02e2b,
    0x38e70bbb,0x093b1054,0x04400880,0x34708000,0x2a150540,0x98000150,
    0x09240000,0x04920008,0x10000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x3303088c,0x9830630c,0x23144661,0x11302211,
    0x11851981,0x1a830282,0x83061813,0x40c61319,0x43031861,0x5d418e21,
    0xaa98261b,0x22098260,0x1bb986a0,0x4c2ee618,0x430c51bb,0x73184c61,
    0x21983105,0x18613032,0x4aee608a,0x46e0e48a,0xb98a71b9,0x38dcc261,
    0x2b9cb26a,0x98a7326a,0x39c26131,0x14dc2226,0x77905e45,0x08926a3b,
    0x8e19ce15,0x47045c63,0x21cd4724,0x888e6e1a,0x10a926a4,0x238e2a39,
    0x91171d44,0x29a98dc4,0x77386ae2,0x2e1c45ce,0x074a9dc3,0x41938e97,
    0x6cc11708,0x2238a70c,0x4751073a,0x38e7510a,0x2705ce15,0x542a2bca,
    0x361ce150,0x71c77149,0x72de5cb5,0x70a8542a,0x5bcb86ae,0x15324dce,
    0x0bbc8dc5,0x1a81382a,0x220a96ea,0x47797241,0x8eaae399,0x25426429,
    0x5c66ee2a,0x7055c1cb,0x4dc1cee7,0xb80b2e3a,0x217b51bc,0x83922383,
    0x24885448,0x4ba8eea3,0x50de65cc,0xba8542a1,0x477539c4,0x51c71ce3,
    0x70a85497,0x38e3832e,0x228770e7,0x730544b9,0x86d5c487,0x20c86209,
    0x86dec533,0x260e209b,0x2e20cc81,0x2a48e3a9,0x2aa2e3cc,0xb92e7073,
    0x81c260c8,0x2385ddc3,0x217773bd,0x5ec2a3bd,0x20000073,0x002a150a,
    0x1ce380e7,0x542a01c7,0x1c724e70,0x50ea1ce7,0x07001500,0xcc8c4130,
    0x8e06470b,0x262bcd83,0x8ac485c1,0x248eeee5,0xbb9c6ce4,0x2273470b,
    0x03bcb824,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x26000000,0x986a20bb,0xaa8211bb,0x08898823,
    0x42108431,0x4cc22220,0x85022201,0x110606a0,0x00c21503,0x0888a60c,
    0x88198222,0x298c4a61,0x21866314,0x0c222209,0x95199413,0x984ccc35,
    0x00000750,0x00000000,0x252445c0,0x2ba822e3,0x370a8e2e,0x9b8b273b,
    0x100e719c,0x9371d475,0x20885ed4,0x417b30c9,0xab82ea3c,0xbca8aa61,
    0x8554c950,0x22711ba9,0x289c4532,0x73864c55,0x4cc092a7,0x44220209,
    0x026660c0,0x00000000,0x20000000,0x2e4882e3,0xbb83a0bc,0x2739c2a5,
    0x531ddd43,0x2aa48805,0x980e1ce2,0x97305c2b,0x0cc85dc4,0xaa82a264,
    0x18817750,0x15c02255,0x40538a63,0x00000008,0x00000000,0x00000000,
    0x70a1c700,0x54049170,0x4439ce70,0x2223449d,0x15477b08,0x30bca8e7,
    0x20004021,0x01999270,0x00000000,0x00000000,0x00000000,0x00000000,
    0x77970000,0x00001c28,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,
};

static signed short stb__arial_7_latin_ext_x[560]={ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,0,0,0,0,0,0,0,0,0,0,
-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,
0,0,0,0,0,0,0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,-1,-1,-1,
-1,-1,0,0,0,0,0,0,0,0,-1,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-1,0,-1,0,-1,0,0,0,0,0,0,0,0,0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,-1,-1,-1,-1,-1,-1,0,0,0,0,0,0,0,-1,0,0,0,0,0,0,
-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,0,-1,-1,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0, };
static signed short stb__arial_7_latin_ext_y[560]={ 5,0,0,0,0,0,0,0,0,0,0,1,4,3,
4,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,1,0,1,0,1,0,1,0,0,
0,0,0,1,1,1,1,1,1,1,0,1,1,1,1,1,1,0,0,0,2,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,5,1,0,0,1,0,
0,0,0,0,0,1,1,3,0,-1,0,1,0,0,0,1,0,2,4,0,0,1,0,0,0,1,-1,-1,-1,-1,
-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,1,0,-1,-1,-1,-1,-1,0,0,0,0,
0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,
-1,0,-1,0,0,1,-1,0,-1,0,-1,0,-1,0,-1,0,0,0,-1,0,-1,0,-1,0,0,1,-1,0,-1,0,
-1,0,-1,0,0,0,-1,-1,0,0,-1,0,-1,0,-1,0,0,0,-1,1,0,0,-1,0,0,0,1,-1,-1,0,
0,0,0,0,0,0,0,-1,0,0,1,-1,0,0,0,1,-1,0,-1,0,-1,0,0,1,-1,0,0,1,-1,0,
-1,0,-1,0,0,1,-1,0,0,0,-1,0,0,0,-1,0,-1,0,-1,0,-1,0,-1,0,0,1,-1,0,-1,0,
-1,-1,0,-1,0,-1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,1,1,1,
1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1,0,-1,0,-1,
0,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,-2,-1,-1,0,-1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1, };
static unsigned short stb__arial_7_latin_ext_w[560]={ 0,2,2,4,4,6,5,1,2,2,3,4,2,2,
2,2,4,3,4,4,4,4,4,4,4,4,2,2,4,4,4,4,7,6,4,5,5,4,4,5,5,2,3,5,
4,5,5,5,4,5,5,4,4,5,5,6,5,5,4,2,2,2,3,5,2,4,4,4,4,4,2,4,4,1,
2,4,1,5,4,4,4,4,3,3,2,4,4,5,4,4,3,2,2,2,4,4,4,4,4,4,4,4,4,4,
4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,0,2,4,4,4,5,
2,4,2,5,3,4,4,2,5,5,3,4,2,2,2,4,4,2,2,2,3,4,6,6,6,4,6,6,6,6,
6,6,6,5,4,4,4,4,2,2,3,2,6,5,5,5,5,5,5,4,5,5,5,5,5,5,4,4,4,4,
4,4,4,4,6,4,4,4,4,4,2,2,3,2,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,
6,4,6,4,6,4,5,4,5,4,5,4,5,4,5,4,6,4,4,4,4,4,4,4,4,4,4,4,5,4,
5,4,5,4,5,4,5,4,5,4,3,3,3,3,3,3,2,2,2,2,5,3,4,3,5,4,4,4,2,4,
3,4,2,4,3,4,2,5,4,5,4,5,4,4,5,4,5,4,5,4,5,4,7,6,5,3,5,3,5,3,
4,3,4,3,4,3,4,3,4,2,4,3,4,2,5,4,5,4,5,4,5,4,5,4,5,4,6,5,5,4,
5,4,3,4,3,4,3,2,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,5,4,4,4,4,4,4,
4,4,4,4,4,4,4,4,4,4,6,4,4,4,4,4,4,4,4,4,4,4,4,4,4,6,5,4,4,4,
4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,6,4,3,3,5,
4,5,4,5,4,5,4,5,4,5,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,
4,4,4,4,4,4,4,4,4,4,6,4,6,6,5,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,
4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,
4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,
4,4,4,4,4,4, };
static unsigned short stb__arial_7_latin_ext_h[560]={ 0,5,3,6,6,6,6,3,7,7,3,4,2,1,
1,6,6,5,5,6,5,6,6,5,6,6,4,5,4,3,4,5,7,5,5,6,5,5,5,6,5,5,6,5,
5,5,5,6,5,6,5,6,5,6,5,5,5,5,5,7,6,7,3,2,2,5,6,5,6,5,5,6,5,5,
7,5,5,4,4,5,6,6,4,5,6,5,4,4,4,6,4,7,7,7,2,4,4,4,4,4,4,4,4,4,
4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,0,6,7,6,4,5,
7,7,2,6,3,4,3,1,6,2,3,4,3,3,2,6,7,2,3,3,3,4,6,6,6,6,6,6,6,6,
6,6,5,7,6,6,6,6,6,6,6,6,5,6,7,7,7,7,7,4,6,7,7,7,7,6,5,6,6,6,
6,6,6,6,5,6,6,6,6,6,5,5,5,5,6,5,6,6,6,6,6,4,5,6,6,6,6,7,7,7,
6,6,6,6,7,6,7,6,7,6,7,6,7,6,6,6,5,6,6,6,6,6,6,6,7,6,6,6,7,7,
7,7,7,7,7,7,6,6,5,5,6,5,6,5,6,5,7,7,6,4,6,7,7,7,7,7,4,6,6,7,
7,5,5,5,5,5,5,6,5,7,6,6,5,5,6,6,7,6,7,6,7,6,6,5,6,5,7,6,6,5,
7,6,7,6,7,6,7,6,7,7,6,6,5,6,7,6,7,6,7,6,7,6,7,6,7,6,6,5,6,7,
6,6,5,6,5,6,5,5,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,6,4,4,7,4,4,4,
4,4,4,4,4,4,4,4,4,4,6,5,4,4,4,4,4,4,4,4,4,4,4,4,4,6,5,4,4,4,
4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,6,6,6,5,7,
6,7,6,7,7,7,7,7,7,7,7,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,
4,4,4,4,4,4,4,4,4,4,7,7,6,6,7,6,4,4,4,4,4,4,4,4,4,4,4,4,4,4,
4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,
4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,
4,4,4,4,4,4, };
static unsigned short stb__arial_7_latin_ext_s[560]={ 168,161,153,1,32,88,130,151,70,1,156,
83,160,195,192,160,130,164,168,135,179,145,140,151,150,102,75,248,93,117,78,
7,79,218,213,124,1,251,12,89,114,104,74,242,231,225,236,46,184,34,173,
23,141,28,127,206,200,194,189,162,1,122,147,163,169,156,182,146,112,136,133,
78,122,120,102,109,107,30,65,96,171,120,36,77,71,67,46,40,17,107,56,
131,150,153,181,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,
51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,168,10,170,
13,22,1,196,18,178,65,113,60,122,195,83,186,133,70,137,127,175,155,104,
172,130,140,143,103,235,249,242,18,222,117,150,143,136,95,172,138,53,83,58,
48,62,59,55,52,190,40,162,132,126,115,150,88,4,92,144,223,235,229,222,
217,212,207,202,197,192,187,183,177,172,167,162,157,61,64,57,101,125,167,115,
110,105,100,95,108,206,78,73,68,63,247,121,175,41,36,29,24,89,14,16,
250,10,245,105,233,111,223,217,212,215,201,196,191,186,181,176,19,87,160,155,
150,73,117,125,145,134,165,190,180,98,93,90,85,77,211,67,227,57,28,205,
214,37,27,26,252,13,23,27,41,98,248,245,51,61,19,12,7,163,231,241,
203,236,156,188,182,197,72,213,219,109,81,199,115,156,9,1,50,206,179,98,
209,165,202,78,178,65,228,56,224,46,237,36,33,232,241,244,253,7,11,1,
6,241,16,229,21,217,168,208,173,40,249,71,185,61,52,15,47,24,110,32,
36,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,104,51,51,140,
51,51,51,51,51,51,51,51,51,51,51,51,51,86,39,51,51,51,51,51,
51,51,51,51,51,51,51,51,127,44,51,51,51,51,51,51,51,51,51,51,
51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,120,134,
139,81,96,193,83,198,72,67,61,56,50,45,39,34,51,51,51,51,51,51,
51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,
51,51,51,27,22,143,238,4,228,51,51,51,51,51,51,51,51,51,51,51,
51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,
51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,
51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,
51,51,51,51,51,51,51,51,51, };
static unsigned short stb__arial_7_latin_ext_t[560]={ 16,38,44,17,17,24,24,44,9,1,44,
44,44,44,44,31,31,38,38,31,38,31,31,38,31,31,44,38,44,44,44,
44,9,38,38,31,44,38,44,31,38,38,31,38,38,38,38,31,38,31,38,
31,38,31,38,38,38,38,38,1,31,1,44,44,44,38,24,38,31,38,38,
31,38,38,1,38,38,44,44,38,17,24,44,38,31,38,44,44,44,31,44,
1,1,1,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,
44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,16,31,1,
31,44,38,1,9,44,31,44,44,44,44,31,44,44,44,44,44,44,31,9,
44,44,44,44,44,24,24,24,31,24,31,24,24,24,31,31,9,24,24,24,
24,31,31,31,31,31,31,9,9,9,9,9,44,31,9,9,1,1,24,31,
24,24,24,24,24,24,24,31,24,24,24,24,24,38,38,38,38,24,31,24,
24,24,24,24,44,31,24,24,24,24,1,9,1,24,24,24,24,1,24,1,
17,1,17,1,17,1,17,17,17,31,17,17,17,17,17,17,24,9,17,17,
17,9,1,1,1,1,1,1,1,17,17,38,38,17,31,17,31,17,38,1,
1,17,44,17,1,9,9,9,9,44,9,9,9,9,38,38,38,31,31,31,
9,31,9,9,9,31,38,9,9,9,17,1,17,1,24,24,38,17,31,9,
9,17,31,1,9,9,9,9,9,9,9,9,9,9,9,31,9,9,17,9,
17,1,17,1,17,1,9,1,9,17,31,17,1,17,17,38,17,38,17,38,
38,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,17,44,44,1,
44,44,44,44,44,44,44,44,44,44,44,44,44,17,38,44,44,44,44,44,
44,44,44,44,44,44,44,44,17,38,44,44,44,44,44,44,44,44,44,44,
44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,17,17,
17,38,1,9,1,9,1,1,1,1,1,1,1,1,44,44,44,44,44,44,
44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,
44,44,44,1,1,17,17,1,17,44,44,44,44,44,44,44,44,44,44,44,
44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,
44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,
44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,
44,44,44,44,44,44,44,44,44, };
static unsigned short stb__arial_7_latin_ext_a[560]={ 28,28,36,56,56,89,67,19,
33,33,39,59,28,33,28,28,56,56,56,56,56,56,56,56,
56,56,28,28,59,59,59,56,102,67,67,72,72,67,61,78,
72,28,50,67,56,84,72,78,67,78,72,67,61,72,67,95,
67,67,61,28,28,28,47,56,33,56,56,50,56,56,28,56,
56,22,22,50,22,84,56,56,56,56,33,50,28,56,50,72,
50,50,50,33,26,33,59,75,75,75,75,75,75,75,75,75,
75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,
75,75,75,75,75,75,75,75,28,33,56,56,56,56,26,56,
33,74,37,56,59,33,74,55,40,55,33,33,33,58,54,28,
33,33,37,56,84,84,84,61,67,67,67,67,67,67,100,72,
67,67,67,67,28,28,28,28,72,72,78,78,78,78,78,59,
78,72,72,72,72,67,67,61,56,56,56,56,56,56,89,50,
56,56,56,56,28,28,28,28,56,56,56,56,56,56,56,55,
61,56,56,56,56,50,56,50,67,56,67,56,67,56,72,50,
72,50,72,50,72,50,72,62,72,56,67,56,67,56,67,56,
67,56,67,56,78,56,78,56,78,56,78,56,72,56,72,56,
28,28,28,28,28,28,28,22,28,28,74,44,50,22,67,50,
50,56,22,56,22,56,29,56,33,56,22,72,56,72,56,72,
56,61,72,56,78,56,78,56,78,56,100,95,72,33,72,33,
72,33,67,50,67,50,67,50,67,50,61,28,61,38,61,28,
72,56,72,56,72,56,72,56,72,56,72,56,95,72,67,50,
67,61,50,61,50,61,50,22,75,75,75,75,75,75,75,75,
75,75,75,75,75,75,75,75,75,75,56,75,75,75,75,75,
75,75,75,75,75,75,75,75,86,66,75,75,75,75,75,75,
75,75,75,75,75,75,75,86,67,75,75,75,75,75,75,75,
75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,
75,75,75,75,75,67,56,28,22,78,56,72,56,72,56,72,
56,72,56,72,56,75,75,75,75,75,75,75,75,75,75,75,
75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,
75,75,67,56,100,89,78,61,75,75,75,75,75,75,75,75,
75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,
75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,
75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,
75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,
75,75,75,75,75,75,75,75, };

// Call this function with
//    font: NULL or array length
//    data: NULL or specified size
//    height: STB_FONT_arial_7_latin_ext_BITMAP_HEIGHT or STB_FONT_arial_7_latin_ext_BITMAP_HEIGHT_POW2
//    return value: spacing between lines
static void stb_font_arial_7_latin_ext(stb_fontchar font[STB_FONT_arial_7_latin_ext_NUM_CHARS],
                unsigned char data[STB_FONT_arial_7_latin_ext_BITMAP_HEIGHT][STB_FONT_arial_7_latin_ext_BITMAP_WIDTH],
                int height)
{
    int i,j;
    if (data != 0) {
        unsigned int *bits = stb__arial_7_latin_ext_pixels;
        unsigned int bitpack = *bits++, numbits = 32;
        for (i=0; i < STB_FONT_arial_7_latin_ext_BITMAP_WIDTH*height; ++i)
            data[0][i] = 0;  // zero entire bitmap
        for (j=1; j < STB_FONT_arial_7_latin_ext_BITMAP_HEIGHT-1; ++j) {
            for (i=1; i < STB_FONT_arial_7_latin_ext_BITMAP_WIDTH-1; ++i) {
                unsigned int value;
                if (numbits==0) bitpack = *bits++, numbits=32;
                value = bitpack & 1;
                bitpack >>= 1, --numbits;
                if (value) {
                    if (numbits < 3) bitpack = *bits++, numbits = 32;
                    data[j][i] = (bitpack & 7) * 0x20 + 0x1f;
                    bitpack >>= 3, numbits -= 3;
                } else {
                    data[j][i] = 0;
                }
            }
        }
    }

    // build font description
    if (font != 0) {
        float recip_width = 1.0f / STB_FONT_arial_7_latin_ext_BITMAP_WIDTH;
        float recip_height = 1.0f / height;
        for (i=0; i < STB_FONT_arial_7_latin_ext_NUM_CHARS; ++i) {
            // pad characters so they bilerp from empty space around each character
            font[i].s0 = (stb__arial_7_latin_ext_s[i]) * recip_width;
            font[i].t0 = (stb__arial_7_latin_ext_t[i]) * recip_height;
            font[i].s1 = (stb__arial_7_latin_ext_s[i] + stb__arial_7_latin_ext_w[i]) * recip_width;
            font[i].t1 = (stb__arial_7_latin_ext_t[i] + stb__arial_7_latin_ext_h[i]) * recip_height;
            font[i].x0 = stb__arial_7_latin_ext_x[i];
            font[i].y0 = stb__arial_7_latin_ext_y[i];
            font[i].x1 = stb__arial_7_latin_ext_x[i] + stb__arial_7_latin_ext_w[i];
            font[i].y1 = stb__arial_7_latin_ext_y[i] + stb__arial_7_latin_ext_h[i];
            font[i].advance_int = (stb__arial_7_latin_ext_a[i]+8)>>4;
            font[i].s0f = (stb__arial_7_latin_ext_s[i] - 0.5f) * recip_width;
            font[i].t0f = (stb__arial_7_latin_ext_t[i] - 0.5f) * recip_height;
            font[i].s1f = (stb__arial_7_latin_ext_s[i] + stb__arial_7_latin_ext_w[i] + 0.5f) * recip_width;
            font[i].t1f = (stb__arial_7_latin_ext_t[i] + stb__arial_7_latin_ext_h[i] + 0.5f) * recip_height;
            font[i].x0f = stb__arial_7_latin_ext_x[i] - 0.5f;
            font[i].y0f = stb__arial_7_latin_ext_y[i] - 0.5f;
            font[i].x1f = stb__arial_7_latin_ext_x[i] + stb__arial_7_latin_ext_w[i] + 0.5f;
            font[i].y1f = stb__arial_7_latin_ext_y[i] + stb__arial_7_latin_ext_h[i] + 0.5f;
            font[i].advance = stb__arial_7_latin_ext_a[i]/16.0f;
        }
    }
}

#ifndef STB_SOMEFONT_CREATE
#define STB_SOMEFONT_CREATE              stb_font_arial_7_latin_ext
#define STB_SOMEFONT_BITMAP_WIDTH        STB_FONT_arial_7_latin_ext_BITMAP_WIDTH
#define STB_SOMEFONT_BITMAP_HEIGHT       STB_FONT_arial_7_latin_ext_BITMAP_HEIGHT
#define STB_SOMEFONT_BITMAP_HEIGHT_POW2  STB_FONT_arial_7_latin_ext_BITMAP_HEIGHT_POW2
#define STB_SOMEFONT_FIRST_CHAR          STB_FONT_arial_7_latin_ext_FIRST_CHAR
#define STB_SOMEFONT_NUM_CHARS           STB_FONT_arial_7_latin_ext_NUM_CHARS
#define STB_SOMEFONT_LINE_SPACING        STB_FONT_arial_7_latin_ext_LINE_SPACING
#endif

