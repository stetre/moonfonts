// Font generated by stb_font_inl_generator.c (4/1 bpp)
//
// Following instructions show how to use the only included font, whatever it is, in
// a generic way so you can replace it with any other font by changing the include.
// To use multiple fonts, replace STB_SOMEFONT_* below with STB_FONT_arial_bold_19_latin1_*,
// and separately install each font. Note that the CREATE function call has a
// totally different name; it's just 'stb_font_arial_bold_19_latin1'.
//
/* // Example usage:

static stb_fontchar fontdata[STB_SOMEFONT_NUM_CHARS];

static void init(void)
{
    // optionally replace both STB_SOMEFONT_BITMAP_HEIGHT with STB_SOMEFONT_BITMAP_HEIGHT_POW2
    static unsigned char fontpixels[STB_SOMEFONT_BITMAP_HEIGHT][STB_SOMEFONT_BITMAP_WIDTH];
    STB_SOMEFONT_CREATE(fontdata, fontpixels, STB_SOMEFONT_BITMAP_HEIGHT);
    ... create texture ...
    // for best results rendering 1:1 pixels texels, use nearest-neighbor sampling
    // if allowed to scale up, use bilerp
}

// This function positions characters on integer coordinates, and assumes 1:1 texels to pixels
// Appropriate if nearest-neighbor sampling is used
static void draw_string_integer(int x, int y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0, cd->t0); glVertex2i(x + cd->x0, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t0); glVertex2i(x + cd->x1, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t1); glVertex2i(x + cd->x1, y + cd->y1);
        glTexCoord2f(cd->s0, cd->t1); glVertex2i(x + cd->x0, y + cd->y1);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance_int;
    }
    glEnd();
}

// This function positions characters on float coordinates, and doesn't require 1:1 texels to pixels
// Appropriate if bilinear filtering is used
static void draw_string_float(float x, float y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0f, cd->t0f); glVertex2f(x + cd->x0f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t0f); glVertex2f(x + cd->x1f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t1f); glVertex2f(x + cd->x1f, y + cd->y1f);
        glTexCoord2f(cd->s0f, cd->t1f); glVertex2f(x + cd->x0f, y + cd->y1f);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance;
    }
    glEnd();
}
*/

#ifndef STB_FONTCHAR__TYPEDEF
#define STB_FONTCHAR__TYPEDEF
typedef struct
{
    // coordinates if using integer positioning
    float s0,t0,s1,t1;
    signed short x0,y0,x1,y1;
    int   advance_int;
    // coordinates if using floating positioning
    float s0f,t0f,s1f,t1f;
    float x0f,y0f,x1f,y1f;
    float advance;
} stb_fontchar;
#endif

#define STB_FONT_arial_bold_19_latin1_BITMAP_WIDTH         256
#define STB_FONT_arial_bold_19_latin1_BITMAP_HEIGHT        116
#define STB_FONT_arial_bold_19_latin1_BITMAP_HEIGHT_POW2   128

#define STB_FONT_arial_bold_19_latin1_FIRST_CHAR            32
#define STB_FONT_arial_bold_19_latin1_NUM_CHARS            224

#define STB_FONT_arial_bold_19_latin1_LINE_SPACING          12

static unsigned int stb__arial_bold_19_latin1_pixels[]={
    0x441a9954,0x154c0009,0x4cccccc0,0x20155100,0x29800aa8,0x333102a2,
    0x20013101,0x015301a9,0x54000aa6,0x0015301a,0x4c400d4c,0x00133000,
    0x01530a98,0x100002aa,0x00601333,0xd3002aa2,0x3fbb7c4d,0x36001ff4,
    0x3fff202f,0xfb02ffff,0x804fc807,0xfb13e25e,0xfffd85ff,0xffff700d,
    0x101fb87f,0xf88001fd,0x07ff900f,0x803fff10,0xfd9303fe,0x8809dfff,
    0x03f70ffe,0x5c00bff7,0x41fffe43,0x4fc802f8,0x4f23fcc0,0x01ff41ca,
    0x7dc07f30,0x2fffffff,0xf9004f88,0x3617dc01,0x8737f60f,0x85fdbefb,
    0xfffefffd,0xf8807ee3,0x00fe4004,0xd801ffb5,0x7f406e9f,0x9bdff983,
    0x700efca9,0x07ee19ff,0x007f5bf3,0x7fd950b6,0x0f7ffe44,0xc8803f20,
    0x03fe8004,0xffd00620,0x447f73ff,0x46621889,0x26226098,0x3ea07fc1,
    0x3f60bf64,0xffa87915,0x5cffd10c,0x00ae201f,0xff003750,0x9aaa9801,
    0x05f98000,0x7e407744,0x9988fdc3,0x88066661,0xfb8ff607,0x4c06fefe,
    0xec95c00a,0x7fd2f4c4,0x4ec85dd7,0x3ffa2f4c,0x363fb9ff,0xfb7fb84f,
    0x7d4ff709,0xfb0ff885,0x409ff505,0x0ac985fe,0xfff703f7,0x7dc019ff,
    0xd00cffff,0x7ffdc03f,0x5d900cff,0x3dd937cc,0x905f37d7,0xfb1fb87f,
    0xd98ff709,0x7fb01fff,0x66d7c7f4,0x809ff700,0xfc8ff54e,0x3fbfffa5,
    0xf91fea6f,0x9ffffc8b,0x213f63fb,0x709fb7fb,0xe81fdcff,0xf505fb1f,
    0x7ff03dff,0xfb07ee00,0x1dfffdff,0xffdfffb0,0x03fd01df,0x3ffbfff6,
    0x23fe80ef,0xf9dfb0ec,0x361767ff,0xfd8fdc2f,0x3e67fb84,0xd81fffff,
    0x07e7fa3f,0xf01fffa0,0x5ff17fcb,0xffa8fff4,0x2ff8bfe2,0x5cffff44,
    0x2e13f63f,0xf709fb7f,0xfd817ecf,0xef885fb3,0x3e23fffb,0x43f7002f,
    0xf711cffb,0x1cffb89f,0xfb09ff71,0x239ff707,0xfe84ffb8,0x52fdd3a3,
    0x3a1ee3ff,0xfd8fdc1f,0x3fa7fb84,0xd84fdf8d,0x0bfff23f,0x05ffff30,
    0x55fc9be2,0x745fe8ff,0x7d57f24f,0x2e7faa07,0x2e13f63f,0xf709fb7f,
    0xfc80ff4f,0x5fa85fb4,0x3e25ffb1,0xe831002f,0x41ff706f,0x1ff706fe,
    0x7f43ffa8,0xe81ff706,0x3f65f13f,0x26b9fe60,0x1fb86fd9,0x2ff709fb,
    0x00e9aff8,0xffe88ff6,0xbbf900cf,0x99fe20df,0xfe89f97f,0xff32fec3,
    0x3fb013f2,0x427ec7f7,0x709fb7fb,0xb807fcff,0xf985fb5f,0xff97f62f,
    0x7ff00503,0xff8bfe20,0x905ff103,0x103ff8ff,0x53fe85ff,0xfa8ff11f,
    0x1ffb9366,0x09fb1fb8,0x23fe6ff7,0x41fec03c,0x440ffffa,0x81ff9aff,
    0x7d7f47f9,0x3a2ff41f,0x7fd7f44f,0x7dcfec01,0x3ee13f63,0xff709fb7,
    0x4fb80ffc,0x7ffd05fb,0x86fd97e6,0xff100ffb,0xf89ffc05,0x30ffe02f,
    0x17fc4bff,0x3fe87ff0,0xc8df31f5,0x7543f34f,0xfb1fb86f,0x3e2ff709,
    0x80989eaf,0xfd7f03fd,0x3fa7fb85,0x2e0ffa84,0xffe86fef,0xfb87ff11,
    0x9fd806fe,0x217f63fb,0x70bfb6fb,0xc80ff4df,0xb105fb3f,0x4c5fddff,
    0x9ff51dff,0x3ff88fdc,0x3e27ff10,0x87ff103f,0x1ffc44fd,0x7f43ff88,
    0x43fe5f13,0x86f8aff8,0x8fdc1ff8,0x26fb85fd,0x0bfb6efe,0x7cee27fb,
    0x27f44fa9,0x1ff50ff9,0x741fffc4,0x86ffdfff,0xd803fff8,0x3f63fb9f,
    0xbfb6fc85,0x17e4df90,0x05fb2fd8,0x6427ffe4,0x0fffffff,0x05ff87ee,
    0x2ffc3ff3,0x7f41ff98,0xf305ff81,0x3a3fe83f,0xfff9df94,0x3f601dfd,
    0x5fd8fdc2,0x3fea6fc8,0xfd80ffef,0x367ebfe3,0x3bbfe61f,0x7d42ffee,
    0x407fec0f,0x0bffdbfe,0xb001ffb0,0x7e47f73f,0xdf95fc86,0x27dcbf90,
    0x05fb0ff8,0xa80ffe98,0x5c1ceffe,0x203ffa1f,0x3ffa0ffc,0x740ffc80,
    0x80ffe81f,0x1ff40ffc,0x3bd713f9,0x13117bf7,0x8fdc3fd8,0x45fc86fc,
    0xb02dfffa,0x7fffe47f,0x7fffe46f,0x5446ffff,0xfd05fd82,0x17f60027,
    0x1fdcfec0,0x3ea17ff7,0x217ff74f,0x437c4ffa,0x20bf64f9,0x03ff11cb,
    0x7dc0ffa2,0x4cbbfe61,0x7fcc4ffd,0x09ffb32e,0xdff301ff,0x213ff665,
    0x0bfa22fe,0xf903ba60,0xff71fb87,0x113fea17,0x87fb003f,0x7c0bfffb,
    0xfb9999cf,0x3f2a201f,0x807fd02f,0x002ffca8,0xe87f73fb,0x0fffffff,
    0x3ffffffa,0x2e0fdc0f,0x82b3f60f,0x07fbaefb,0x1fb81fa8,0x7fffffe4,
    0xfffc80ef,0x260effff,0xff900ffc,0x41dfffff,0xfd82ffd9,0x3f2a61ac,
    0x0befb80e,0x7fff43f7,0x2d40ffff,0x40ffaa60,0x80ffa81f,0x3e604ff8,
    0x0ffa05ff,0x00bfff30,0x21fdcfec,0x1dffffd8,0x6ffffec4,0x2fc4f881,
    0xe88bfff6,0x9103ffff,0x07ee0dd9,0x0fbfffaa,0x7dfffd50,0xa80bff90,
    0xc83efffe,0xfd900eff,0x19dfffff,0x5c3ffe20,0x3fff621f,0x402d81df,
    0x3b03fffc,0x7e40bfb0,0x20165c07,0x2cb801aa,0x54c54c00,0x44002200,
    0x3224a800,0x40555541,0x55400ab8,0x30032a01,0x75006000,0x4c018005,
    0x773000ac,0x86544003,0x801100ca,0x5554c008,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x2000aa88,0x2a8800aa,0x300aa600,0x29d30055,0x06aa01ec,
    0xbed80353,0x2aa001fa,0x744f6401,0xe981aa85,0x9f4c6bbe,0xadfa80ec,
    0x00aa004c,0x802eaaf4,0x3b2001a9,0x2a804e98,0x00660351,0xf900154c,
    0x2ffe4009,0xd002fd80,0x7ffc405f,0xfdafcc01,0xf98df501,0xb7d300ff,
    0x7fc400df,0x7c57ec00,0xdc86f986,0xa7d43fec,0xfcce81fd,0x5995002f,
    0x0feeff00,0xdfffffb8,0x7cc7f400,0x9f56f805,0x4173bea0,0x8802fff8,
    0x2fea004f,0x6e8802fb,0x6c02fa80,0x4c00ee9f,0x3ba01aaa,0x837cf740,
    0x4001a888,0x266201fc,0xa8333309,0x8813312f,0x33333109,0x00266260,
    0x2203cca8,0x19a99aa9,0xffefffd8,0x266200ff,0xa7cc0099,0xffd302fb,
    0x3fa7f601,0x004d4400,0x00999988,0x33533331,0x4d54cc43,0x2aa62199,
    0xf7019a99,0x5019ffff,0x4cccc413,0xfffff701,0x22133019,0x4fd86620,
    0x8d447fb8,0x37d40ffd,0xff7013fa,0x27fdc009,0xffffffb0,0x67fd43ff,
    0x809ff711,0x26204ffb,0x82fd9cfb,0x005fa9d8,0x013fee00,0x3604ffb8,
    0xffffffff,0xffffffb1,0x3fff63ff,0x6c1fffff,0xefffefff,0x7f427f40,
    0xfdfffb04,0xffc81dff,0x3f66fe81,0x7f47fb84,0xfa89ffb4,0x3a027f46,
    0x3fa007ff,0x3bff607f,0x3a1eeeee,0x01ff706f,0xfd03fff4,0x3fffffff,
    0x05fd9b50,0xd009df91,0x7f400fff,0x3bff607f,0xfb1eeeee,0x3ddddddf,
    0x3bbbbff6,0x33fee1ee,0xe89ff711,0xb84fe84f,0xff711cff,0xfb8dfd09,
    0x2e13f61f,0xfda7f47f,0xd1bea1ff,0x7ffcc09f,0xfff9802f,0x00bfb02f,
    0x7fc40ffe,0x5ffff302,0x333ff2e0,0x3fa20cef,0x2a0fffff,0x205ffeff,
    0x802ffff9,0xb02ffff9,0x0bfb00bf,0x3a00bfb0,0x41ff706f,0x84fe84fe,
    0x1ff706fe,0xff13ffa8,0xfb84fd89,0xffda7f47,0xfd1bea6f,0x7eefe409,
    0xfddfc806,0x100bfb06,0x1ffc05ff,0x06fddfc8,0xd84f9b7c,0x1ffd8aef,
    0x3fe27ff1,0xdfbbf901,0xdfbbf900,0x36017f60,0x05fd805f,0x3e207ff0,
    0x3a13fa2f,0x103ff84f,0x1ffb05ff,0x4fd81ff9,0xa7f47fb8,0xf53ffdfd,
    0xf104fe8d,0x403ff35f,0x1ff9aff8,0xaaaaefd8,0x80bfe22a,0xaff883ff,
    0x9f301ff9,0x7ff10bee,0xff99ffc4,0x884fd999,0x01ff9aff,0x3fe6bfe2,
    0xaaaefd81,0x2bbf62aa,0x3f62aaaa,0x22aaaaae,0x3fe02ff8,0x3fa13fa3,
    0xf017fc44,0xfbff107f,0x709fb05f,0xfb4fe8ff,0xdf51ff97,0xff704fe8,
    0xff7027f4,0x7fec27f4,0x7c6fffff,0x03ff303f,0x427f4ff7,0xeffeefed,
    0xd83ff31e,0xfffff55f,0x4ff70bff,0x9fee04fe,0xfffd84fe,0x3f66ffff,
    0x26ffffff,0xfffffffd,0x440ffe26,0x213fa3ff,0x1ffc44fe,0xf703ff88,
    0x17f60bff,0x29fd1bee,0xf5bfd3fd,0xfd04fe8d,0xfd03fe49,0x7ec3fe49,
    0x43ccccce,0x327726fe,0x24fe80ff,0xfffe87fc,0xf11fffff,0xf34fe85f,
    0x0133333f,0x03fe49fd,0x43fe49fd,0xcccccefd,0x3333bf63,0x33bf63cc,
    0x7fc3cccc,0x743ff305,0xf84fe84f,0x03ff305f,0xfd807ff4,0x7f46fc85,
    0x3fea7fb4,0x427f46fd,0xfeeeeff9,0xeeff982f,0x7ec2ffee,0x5bff3005,
    0x309ffff5,0xffddddff,0x17e2fd05,0xffa86ff4,0x1cd8bfe2,0x77777fcc,
    0xeff982ff,0x6c2ffeee,0x05fd805f,0xfd005fd8,0x41ff901f,0x84fe84fe,
    0xffc80ffe,0xc81bf200,0x745fc86f,0x7ec7fb4f,0x427f46ff,0xfffffffc,
    0xffffc86f,0x7ec6ffff,0x3fff2005,0xc82ffffe,0xffffffff,0x09f36f86,
    0x3ffbffea,0x7eeffe45,0x7fffe40e,0xfc86ffff,0x6fffffff,0x7ec02fec,
    0x005fd805,0x3665dff3,0x427f44ff,0xeff984fe,0x809ffb32,0x3fee06fc,
    0xe89ff50b,0x7c47fb4f,0x427f46ff,0xb9999cff,0x4e7fc1ff,0x21ffb999,
    0x754005fd,0x5ffeefff,0x4ccce7fc,0x53e61ffb,0x3fa602fb,0xfff904ff,
    0x339ff03b,0xf83ff733,0xfb9999cf,0x2017f61f,0x5fd805fd,0x3ffff200,
    0x7f40efff,0xf904fe84,0x1dffffff,0x7406fc80,0x0fffffff,0x43fda7f4,
    0x27f46ffb,0x3e203fea,0x203fea4f,0x3ff64ff8,0x03ffffff,0xfa8fee0c,
    0x24ff880f,0x20031098,0x54010008,0x4ff880ff,0x3e203fea,0x3ffff64f,
    0xffb3ffff,0x27ffffff,0xfffffffd,0xfffea83f,0xd09fd03e,0x7ff5409f,
    0xdf9003ef,0xffffd880,0xfb4fe81d,0xfe8dfd07,0xf902fec4,0xf902fecf,
    0x7ffffecf,0x80003fff,0x1ff205fd,0x00000000,0x3fe40bfb,0x3fe40bfb,
    0xfffffffb,0x3ffff67f,0xffb3ffff,0x07ffffff,0x84fe8018,0x003004fe,
    0x4400df90,0x0027f400,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x532a8000,0x10055401,0x2a980155,0x4c06aa00,0x02aa202a,
    0x25501100,0x203001a8,0x300550a9,0x5500b815,0x2002a203,0x2a8803c8,
    0x0aa20000,0x4035004c,0x4402a028,0x51002a02,0x7c435005,0x3ee07f96,
    0x027dc06f,0x26003fa2,0x1ff100ef,0x32027e40,0x7f83ebef,0x9ff307f7,
    0x22bf20f7,0x3ffee07f,0x983fcbef,0xfffc80ef,0x0767602e,0x36605fb0,
    0x7ec01cef,0x41fff443,0x1fb100f9,0x3f620d50,0xfe806a80,0x88fe603f,
    0xf303953c,0xfc809f3b,0x4027c400,0x1fcc00fc,0xaf803f20,0x34c80eeb,
    0xfb5b9059,0x26472a07,0xffefffd8,0x01db04ff,0x0dfb7ff7,0xf3007664,
    0x3fffe607,0x09f100ff,0x0f61b693,0x7c07f7cc,0x80fef982,0x6cfe402f,
    0x003f700f,0x00980000,0x00980088,0x01300110,0x00000000,0x1cffa800,
    0x04c17ff2,0x0ff34fc8,0x00c400a8,0x13f61bfd,0x0ff600c4,0x7dc440d5,
    0xb8882dc0,0x0002dc0f,0x3f221f60,0xdfd9104e,0x3bfb2205,0x3bdfb702,
    0x05dfd910,0xd913bf22,0x2e077445,0xdb81defd,0xec881def,0xfd9102ef,
    0x98bfd05d,0x5d90ffff,0x3fd87744,0x3f6e0bf9,0xefc881de,0x0117fc44,
    0x40ef7edc,0x00ba0fc8,0x01f883ee,0x03f107dc,0x03bdfb70,0xfdff51be,
    0xfffe88bf,0x7ff444ff,0x7fdc4fff,0x3a20fffe,0x544fffff,0x3a5ffeff,
    0xb83fe23f,0x20fffeff,0x0fffeffb,0x3fffffa2,0x7ffff444,0xf11ffc4f,
    0x3fa5ff5d,0x7f43fe23,0xff703ff3,0x7d41fffd,0x3e65ffef,0xeffb800f,
    0x93f50fff,0x5c01ae1f,0x2e01320f,0x2e01320f,0x40fffeff,0x4ffe24f8,
    0x3bfa1ff8,0x7f43ff71,0x643ff71e,0x743ff11e,0x23ff71ef,0x3ff13ff8,
    0x0ff88ffa,0x0ffc47b2,0x87fe23d9,0x3ff71efe,0xffb8f7f4,0x3a25ff31,
    0xfd3ff88f,0xfe87fc47,0xec82ff9b,0x3e23ff11,0x223ff13f,0x902622ff,
    0xc87fe23d,0x003f12ef,0x007cc3ee,0x00f987dc,0x3ff11ec8,0x3fe62fa8,
    0xf14fd999,0xf14ff85f,0x884ff85f,0xff12ffca,0xff34ff85,0x3a9fb333,
    0x203fe23f,0x882ffca8,0xff12ffca,0xff14ff85,0xff14ff85,0x7fc47fa5,
    0x7fc47fd3,0x3ffa7fd0,0x5ff95101,0x36667fe6,0xfc93fe4f,0x5ff95105,
    0x07dc5c80,0xced99ec0,0x3ee1ec00,0x5ff95100,0x3fea0fc8,0xf35fffff,
    0xf35fd81f,0x265fd81f,0x32ffeffd,0x55fd81ff,0xbfffffff,0x0ff88ffa,
    0x3ffbff66,0x3fbff662,0xd81ff32f,0xd81ff35f,0x3f6ffe5f,0x7f47fe62,
    0x7f43fe23,0x4c1dfd13,0x52ffeffd,0xbfffffff,0x7ff7ffdc,0x7f7fecc0,
    0xa83e202f,0xd35400ff,0x35409f5b,0xfb303fea,0x6e85ffdf,0x4cccffcc,
    0xe85ff109,0xe85ff14f,0x219ff14f,0x85ff12ff,0x33ff34fe,0x8ffa1333,
    0x9ff10ff9,0x7fc4bfe1,0x3e25ff0c,0xf8a7f42f,0xfd27f42f,0x0ffc85ff,
    0x87fcc7fd,0x53fe23fe,0x5ff0cff8,0x26667fe6,0x6fffd409,0xf867fc42,
    0xf893602f,0x117400fc,0x17409f11,0x7c41f9f1,0x445ff0cf,0x362ff84f,
    0x5437fa1c,0x437fa2ff,0x1ff32ffa,0xdfe8bfe2,0x7fc5ff50,0x2fec7362,
    0x3fe61ff7,0x3e65ff10,0x745ff10f,0x45ff50df,0x5ff50dfe,0xc88f7fd4,
    0xb97f64ff,0x427fd0ff,0x21ff35fc,0x8bfe2ff8,0x2efa81cd,0xff10ff98,
    0x7443e605,0x1ae00fab,0x35c03be6,0x4c1f57d1,0x45ff10ff,0xdffc82fa,
    0x3fe60efd,0x7cc5ffef,0x7c5ffeff,0x23ffebdf,0x5ffefff9,0x77eeffe4,
    0xffbbff70,0x75effc1f,0x2f7fe3ff,0x3fe63ffe,0x7cc5ffef,0x5c5ffeff,
    0xfffeffff,0x7eeffdc6,0xf77fd0ff,0x6ffc5ffb,0x3f23ffeb,0x200efddf,
    0xd7bff07c,0xa8fa07ff,0xf107ffff,0x2205f983,0x3fffea1f,0x7f5effc7,
    0x6403f23f,0xd981dfff,0xfb303fff,0xffd507ff,0xfd98bf99,0xfff903ff,
    0x9effd83b,0x3ffaa0ff,0x3faa5fcc,0x6cc5fccf,0xfb303fff,0x9df987ff,
    0xb03effec,0x21ff3dff,0x4ffe8bfe,0x7e67ff54,0x0efffe45,0xa82fe64c,
    0x85fccffe,0x7dccc46a,0xfff0b901,0x988b90bf,0x7f541fb9,0x1ba5fccf,
    0x00080020,0x10002002,0x00200200,0x40008004,0x82802000,0x80010008,
    0x01000400,0x0800aa88,0x14403500,0xaaa88150,0x2200a81a,0x01300202,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x3001a806,0x00554001,0x30001988,0x0300aa15,
    0x22000262,0x0330001a,0x02a60004,0x00035100,0x4c001100,0x26a6000a,
    0x98809880,0x54c006a1,0x31001001,0x2fffb803,0x3f6007dc,0x7dc00dff,
    0x1ff5006f,0x0bbae7b6,0xb83fcbf2,0x1ff45fff,0xfffff700,0x0ffc0019,
    0x402fbff2,0x3efeffd8,0x7ffff540,0xffffd01d,0xdffe985f,0xfdffb101,
    0x7ffdc07d,0x427ec4ff,0x701ba7fb,0x207fffff,0xb80cffeb,0xdd02efff,
    0x404f8bf1,0x04fcaefa,0x013eb3e6,0x77f43fea,0x6546ffff,0xdff30991,
    0x01ff49ff,0xffefffd8,0x3ff000ef,0x27feffe4,0xf510ef44,0x3bffea07,
    0xff80effe,0x3e22ffff,0xe886feff,0x20fea21d,0xfffdeffb,0x3ee13f62,
    0x7ec03f27,0x43fffeff,0x45ffdffa,0x0ffdcffb,0x2e7ea7c4,0x8afe400f,
    0xa800007f,0x23ffd0ff,0xd8002ffa,0x3a1ff54f,0xcffb803f,0x009ff711,
    0x52ff87fe,0xa9de88ff,0x987f31aa,0x3fe61dff,0x4ccffcc4,0xfe97f209,
    0x5d457a22,0x4fd87f31,0x09fb2fec,0x417d4ff7,0xfd10cffa,0xff12fe8f,
    0x7fd1fec1,0x7cdd4f88,0xdaffa805,0x445d904f,0x3fea00ee,0x4fe8bfd0,
    0x077445d9,0xe97fc5ff,0xe82ed9bf,0x81ff706f,0x1ff8bec8,0x547fa862,
    0x27fd9d96,0x407fe479,0x02fd41ba,0x2d500bfe,0xf53fdfe8,0x2a20dfd8,
    0x3ee13f62,0x3fa13e27,0x3a0ac985,0x741ff12f,0xafd8022f,0x2001f74f,
    0x3a05fffd,0x803fe23f,0x87fd0ffa,0x447fd5fd,0x43ff10ff,0xdfffd3ff,
    0x03ff8dff,0x7fd45ff1,0x701fffff,0xb94d87ff,0x7f43f364,0x7ffe4005,
    0x27fe20cf,0xf74d82db,0x261f92a1,0xd80bdfff,0x747fb84f,0x2003ff86,
    0x45fdbefa,0xfb3004fd,0x200bf119,0x200ffff9,0x03fe23fe,0xbfd0ffa8,
    0x47fd4fe8,0x3ff30ff8,0x1ffea7f4,0x3fe25ff5,0xff8ffe02,0x303ff90d,
    0x323f0bff,0x4f63fcbe,0x66643ff8,0x3bff60cc,0xfff30fff,0xb1f8dfff,
    0x3f21ec0b,0x360dffff,0x647fb84f,0x00bfe20f,0xe8dfff90,0x002fffff,
    0x675c47dc,0x7feffd40,0x1ff43d8d,0x7d401ff1,0x221ffd0f,0x447fd3ff,
    0x43ff30ff,0xf8bfd4fe,0x207ff14f,0x5ff13ff8,0x5440ffcc,0x64ba0efd,
    0xf1ec3fde,0x7fffc45f,0x744b2a1f,0x11bff32f,0x5c9743fd,0x3ae20f60,
    0x17f66fff,0x45f51bee,0x2e002ff8,0xb0efdbff,0x003ddffd,0xebfbafc4,
    0xffaa7f45,0x11ff46fe,0x7fd401ff,0xffbfffd0,0xff11ff4d,0xff87fe21,
    0x5fd87fd3,0x7fcc17fe,0x7c41ff31,0x91ff401f,0xf0fdd729,0x33227f43,
    0x7e401ffd,0x7e47ff15,0xb87d5324,0xc88307e6,0x90bfb1ff,0x7c4f88df,
    0x3ff0503f,0x1ff317f4,0x3a3f7000,0x3fe21f96,0xd0ffff21,0xb87fcc7f,
    0xfe9fee5e,0x3a0bffdb,0xf83fe63f,0x7f4bfe2f,0xffd27f44,0x221ff901,
    0x87fe61ff,0xd527ec2a,0x7aaf4b91,0x7cc07fe4,0xbf90a61f,0x4bf71ffc,
    0x5fdfb0ea,0x82ff89ea,0x90df93ff,0xfd8dd0bf,0xf30ffb86,0xf727ec1f,
    0x4bf1000d,0x7f43f96f,0xb0fffe63,0x987fdcbf,0x26fd89ff,0x3f6013fe,
    0xfd83fee5,0x3fa1ff34,0x4c5ff31f,0xffb32eff,0x3f24ff89,0x7c4bfe1f,
    0x314f6c1f,0xff885f55,0x3ffd30be,0x45fd1ff4,0x85fd0efd,0x2a1510ed,
    0x88f7ec2f,0x7ff71ffc,0x3213fea1,0xa8effcc7,0x8bfe24ff,0x55ff31ff,
    0x3f700221,0x7dc7dbec,0xfffffeef,0x3f77fee5,0x3fffe0ff,0x00ffa2ff,
    0xfffbbff7,0x7ff7fd41,0x3f7fffa4,0xffffc86f,0x7dc0efff,0x21fffeef,
    0x06ffeffb,0x3ee617db,0xfffff302,0x7d41bfff,0x260fffef,0xb07fffff,
    0x0bee617d,0x3fffffe6,0x7ffff45f,0x1fa80fff,0x7fffffe4,0x7effec0f,
    0x3ffff66f,0x3e205fff,0x427ffd45,0xb8cffffb,0x4f7fec1f,0x3ff260ff,
    0x401ff43e,0x0ff9effd,0x3a2fffd4,0x00bffdaf,0x07dfffd5,0x7f4ffed4,
    0x05f7f5c1,0x5bfffd70,0xfffec980,0xdffb702d,0x19ffd301,0x6ffff5c0,
    0x3fffaa02,0xfffd884e,0x07f101df,0x039dffd5,0xa833ffae,0x6fffdcdf,
    0x2a202a20,0x00404400,0xaa804001,0x08002001,0x01800100,0x00100040,
    0x11000188,0x00800400,0x4c000c40,0x20011000,0x10004009,0x00008800,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x02000000,0x31000000,0x4ccc4001,0x20266009,0x40010099,
    0x03550098,0x4c401330,0x40009999,0x99999999,0x00398199,0x01333310,
    0x02621aa8,0xee886662,0x4cc57aa1,0x22199999,0x09999999,0x00262131,
    0x442aa351,0x221a9809,0x9103ffeb,0x883d93bf,0xb1ed8dfc,0x7fec00bf,
    0x640cffff,0x207fdc6f,0x401cffeb,0xfff984fe,0x813fee00,0xfffffffd,
    0xffffa803,0x47ffffff,0x7ffcc4fb,0xffb5ffff,0x5019ffff,0x222fecdf,
    0x3fe22ffe,0x7fedfea1,0xb1ffffff,0x9fffffff,0x01ff53f6,0xd87f53ea,
    0x9fffa24f,0x44ffeffc,0xfffffffa,0x3ffffea2,0x00bfb1ff,0x7fff7fec,
    0x8bfe20ff,0x77fe43ff,0x3ff206ff,0x2fcf7c44,0x6c0fffd0,0xfffeeeff,
    0x7f6ff402,0x45eeeeef,0x7ffcc4fc,0xffb4ffff,0x01fffffd,0xb17f63f7,
    0x1ff885ff,0x77fedfea,0xfb1eeeee,0x27dddddf,0x807fd4fd,0x361972c9,
    0x8effea4f,0x41ff71ff,0x5ff90dfe,0x3ff92ffc,0x3bbbbff6,0xfa8bfb03,
    0xfbb7ec4f,0x44bfe20f,0xfff982ff,0x3fe60004,0x8bfb02ff,0x3e605fe8,
    0xc807fb8f,0x2661efff,0xfb0ffa99,0x104ffa8b,0xffd97f61,0x2a1ff882,
    0xb00bfb7f,0xd4fd80bf,0x7000007f,0x227f98df,0x45ff12ff,0x5ff12ff9,
    0xffd8ffcc,0xd85fffff,0x20ffb85f,0x43fe9ff9,0x0ffa0ca8,0x6413fbfa,
    0x377f203e,0x90bfb06f,0xbafec09f,0xfffd807f,0xd8bf601f,0x40ffb85f,
    0x32bfb3ec,0x3ff103ff,0x05fdbfdc,0x7ec05fd8,0x3b627fd4,0x7643ec83,
    0x27dffd93,0x4ffe27f9,0x97fc1ff9,0x3fe20ff9,0xb333bfb1,0x85fd81ff,
    0x77ec1ff9,0xff8800ff,0x27edfe42,0xff104fd8,0xfb03ff35,0x3ff9555d,
    0x7dc7fe60,0x41aaaaaf,0x2fcc04fc,0x3fe617f6,0xdfda7ec1,0x3e204ffc,
    0x7edfee3f,0x22aaaaae,0x09999dfd,0x45ff53f6,0x89fb06fe,0xffffb4fd,
    0xffb97f49,0x7cc5ff14,0xf98bfe2f,0xf88bfb1f,0x3bfffa3f,0x325ff11e,
    0x7fffffff,0xf31bfa20,0x7ec13f6d,0x7f4ff704,0xfffffd84,0x9bf203ff,
    0xfffffffb,0x3a027e43,0x442fec1f,0xda7ec2ff,0x00ffffff,0xbff4bff1,
    0xfffffffd,0x3fffff66,0x7f53f65f,0xfb00efdb,0x3ee4fd89,0xfffffb86,
    0xfc97fa4f,0x2237f62f,0x8bfb1ffd,0x3fb22ff8,0x5ff30cce,0x3ffffff2,
    0x3ffd107f,0x4fd8ff44,0x3fa09fb0,0x3f61ff24,0x3ffeecce,0x3ee2ff88,
    0x41cccccf,0x1bea04fc,0x3fe217f6,0xffda7ec2,0xf104ffcf,0x2fffddff,
    0xcccccefd,0x3bbbff63,0x7f53f64e,0x3f601fff,0xdf727ec4,0x3fa73260,
    0x3fbbfea3,0x3ffea2ff,0xdfb1ffef,0x83ffd555,0x1ffa85fd,0x33df9331,
    0x83ffd103,0xefeccefc,0xf984fd84,0x2ffeeeef,0x7fdc2fec,0x7ffffe40,
    0x9f9007ff,0x7ec1fec0,0x6c1ff985,0x327ffb4f,0xcff882ff,0xbfb7fcff,
    0xd80bfb00,0xbffffd4f,0x3f627ec0,0x7c01bee4,0x57ff542f,0x6ff542ff,
    0xfffb1ff8,0xfb07ffff,0x7e4ff90b,0x87ffffff,0xffc81ffe,0xd87fffff,
    0xffffc84f,0x7ec6ffff,0x222ff885,0xffffffff,0x40bf9007,0x85fd80ff,
    0xa7ec0ffb,0x3bfe25fd,0x044ffc40,0x7ec02fec,0xfea7ec05,0xfb01ffaf,
    0x3ee4fd89,0xff51fe86,0x22ff8201,0x43fe209a,0x1ccdeffd,0x7dccbfb0,
    0x3fbbae4f,0x7fe45eef,0x9950999b,0xb09dfd99,0x339ff09f,0x6c3ff733,
    0x0ffec45f,0x93333ff7,0x3ff200ff,0xd83fc41e,0x0ffea25f,0x22fed3f6,
    0x7fc44ffa,0x2017f601,0xa7ec05fd,0x20df93fe,0x727ec4fd,0xfdff90df,
    0x8bfe007f,0x7fc9aefd,0xfd8017f6,0x06ffffff,0x7fc41bee,0x204fffff,
    0x89fb04fd,0xff880ffa,0x3fffff64,0x27fc5fff,0x7fffffdc,0x3ffe20ff,
    0xfd837d42,0x06ffffff,0x217f69fb,0x3fe21ffe,0x3ffff601,0xbfb3ffff,
    0x7fd4fd80,0x3f60bfe2,0xdf727ec4,0x07fff910,0xff317fc0,0x7ec5ffff,
    0x3fff6005,0x7dc03eff,0xfffff506,0x27ec09ff,0x2fec4fd8,0x7fecff90,
    0x5c3effff,0xfffb81ff,0x180fffff,0x3f60bf70,0x203effff,0x30bfb4fd,
    0x00aa8dff,0x3ffffff6,0x80bfb3ff,0x5c7fd4fd,0x227ec0ff,0x01bee4fd,
    0x81550001,0x000abba8,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x4c400000,0x26276400,
    0x4402605e,0x6c06aa00,0x4013301e,0x31026619,0x22198813,0x31198809,
    0x10001801,0x99999833,0x04cc0999,0x06621988,0x133104cc,0x26233310,
    0x19999999,0x42620262,0x10199998,0x40033333,0x05ea81a8,0x3fdb74c0,
    0x3f23fd40,0xda8bfb05,0x3e60beff,0x205ff00e,0x1ff706fd,0xbff717f6,
    0x17f66fc8,0x327f5fee,0xfd8f79ff,0xf13fdc05,0xdfffffff,0xfe81ffc8,
    0xf517fe66,0x07ffec7f,0x7fe5fffa,0x27ffffff,0xb7d40ffd,0xdffffffd,
    0x3fffff60,0x2fd404ff,0xfb713fd4,0xdbfd419b,0x22ff803f,0x5ffb82ff,
    0x3fb37fe6,0xcc803f25,0xd03ff501,0x3a3fdcbf,0xb27ec7ff,0x3aff70bf,
    0x3f6b724f,0x2e02fec3,0x3bbba27f,0xfe85ffee,0x2e0ffdc6,0xb1bfa1ff,
    0x7fc45fff,0xffddd77f,0x7fecdddd,0xffdb7d44,0x366ffffe,0xffffeeff,
    0x2617ea04,0x3b7bf64c,0x7ed3265f,0xf55fc803,0x5fffe98f,0x23ff13f6,
    0x80e5c009,0x7fc44ff8,0x7c43fea2,0x8bfe1fff,0xd7fb85fd,0x5fd8009f,
    0x2203fdc0,0xffa81ffe,0x3a09ff13,0xd83ff76f,0x3fea4fff,0x207ff07f,
    0x3ea1fffd,0xffb8bfb6,0xffb0bfb1,0xaefcaa98,0x21ff102a,0x7fb00bc8,
    0xf981bf91,0xdfc89f97,0xb02ea5fd,0xf80fb27f,0x71bf601f,0x52ff88ff,
    0x3e67fbdf,0x2e17f60f,0x3b29fd7f,0x360dfeb9,0x03fd405f,0xfd80bff6,
    0x300ffc8f,0xb09ff9ff,0x6fe4dfbf,0x207ff07f,0x3ea6fffd,0x7ff0bfb6,
    0x3fea17f6,0x3fffff20,0x3ffa07ff,0x77ec00bd,0xfe86ffef,0xc8dc1ffa,
    0x8ffdc05f,0x0ffb04fd,0x3fa1ffa8,0x9f94fe84,0xb1beebf7,0xfb5555df,
    0x77ed3faf,0x3f66ffef,0x7037cc05,0xff8809ff,0x7e402ffd,0xf7fb06ff,
    0x1feffe1f,0xdfd81ffc,0x36df53ff,0xd97fd45f,0x17f6625f,0xddffddd7,
    0x7fffcc0b,0x43ff604f,0x77dc0ffa,0x02fe406f,0x27ec5ff7,0x7c00ffec,
    0x903ff14f,0x3e6bfabf,0xffd89f97,0xd7ffffff,0x543ff69f,0x80bfb0ff,
    0xbff505f9,0x17ffee00,0xd817ffc0,0xef9afdbf,0x07ff07fa,0x23ff2ff6,
    0xb9dfb6fa,0x3f61fffd,0x1effffff,0x2a217ea0,0x2ffeca82,0x897f6551,
    0x7ffc41ff,0xa82fe403,0x227ec2ff,0xf9001ffc,0x7d41feef,0x3ff0ff8f,
    0xcefd87fd,0xfd7fdccc,0xff893f69,0xf880bfb1,0x00eff885,0x2003ffa0,
    0xfb04fffa,0x59f79f77,0x40ffe0ff,0xf5bfd3fd,0x3fffff6d,0x3fff61ff,
    0xfa803fff,0xbb37fa85,0x2ff53fe8,0x07fe24fd,0xf9003ff6,0x360ff60b,
    0x260ffc4f,0xd9ff9809,0xf9ff104f,0x0ffdfecd,0x5fee17f6,0x449fb4fe,
    0x00bfb1ff,0x0ffe889f,0x4037e400,0x82fffff8,0xfdef9bfd,0x7ff07faa,
    0x7fd4ff60,0x55dfb6fd,0x22bfb035,0x7d400efe,0x3fa6fa85,0xf50ffdce,
    0xff88ff6f,0xc805fd81,0xb03db05f,0x221fe89f,0xfbfd02ff,0x7fff403f,
    0x21fffee4,0xd7fb85fd,0xf88ff69f,0xb00bfb1f,0x002ffd85,0xfd806fc8,
    0x6c0efe9f,0x51ffff3f,0x40ffe0ff,0x3fff63fd,0xfb00bfb6,0x4437fc4b,
    0x19999999,0xffec89aa,0x88ff601c,0xff9511ff,0x20bf9005,0x44fd80aa,
    0xffebbefb,0x0dfff900,0x261fffc8,0x5fd85fff,0x29fd7fb8,0x47fe23fd,
    0x154405fd,0x20007ff7,0x7fd406fc,0xfd89ff34,0x3eadffb3,0x3607ff07,
    0x5bffe23f,0x5fd805fd,0x3f227fd4,0x37ffffff,0x6c00205d,0x4c7fe23f,
    0xf9005fff,0x360ffa0b,0xffffc84f,0x3ffe600e,0x43ffdc03,0x5fd83fff,
    0x29fd7fb8,0x47fe23fd,0xfffffffd,0x7ff4ff56,0x07ffffff,0xff1037e4,
    0x362ffc8d,0x2a9ff73f,0x207ff07f,0xb7fdc3fd,0x5fd805fd,0x3f21ffd8,
    0x37ffffff,0x7fb00005,0x5970ffc4,0xe82fe400,0x204fd83f,0xffd001a9,
    0x85ff9801,0x5fd81ffd,0x29fd7fb8,0x47fe23fd,0xfffffffd,0x7ff4ff56,
    0x07ffffff,0xff9037e4,0xb0efe883,0x54bfe67f,0x207ff07f,0xb6fe83fd,
    0x0bfb00bf,0x0000dff1,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00004000,
    0x33300000,0x30333333,0x00000055,0xec800000,0x4003ba22,0x2004020a,
    0x20051019,0x93b61eea,0x5eeeeeea,0x1dd313b2,0x4401884c,0x8bb21311,
    0x03ba25eb,0x32b7fb6a,0xf9101dff,0x3fb6209d,0x7edc2ead,0xefd981de,
    0xdfd9101c,0x5c0c0185,0x441d106f,0x3b27b60e,0xc89fd73e,0x20dfeb9e,
    0xfd3fd9ed,0x1007fc47,0x33a21ff7,0x103facdb,0x0fbe60ff,0x7fe5bfa0,
    0x3ffffea0,0xf91fea6f,0x2fb8fd8b,0x43f6df10,0x43ffa5fb,0xeffa86fb,
    0xffefffff,0x7ff7fd41,0x7f7ffc45,0x7f7fdc6f,0x3ffe60ff,0x7f440fff,
    0x0064ffff,0x3a09d503,0x25fe88ef,0xeffefeff,0x3f64ffef,0x3a6ffefe,
    0x7fd3ffef,0x64c07fc4,0xff30ffff,0x209fffff,0xfff107f8,0x3fe2019f,
    0x4cc42ffd,0x7fc2ffc8,0xdf30bfe2,0x27f603fa,0x45fe64fb,0x07fb2fff,
    0x877fc5b7,0x4ffe26fa,0x37f61ff8,0x7643ffb0,0x7f43ff11,0xfe89fb0d,
    0x063ff71e,0x26666230,0x3fa20999,0x3fe0efee,0x7e47ffa6,0x7d43ff66,
    0x133ffd0f,0x0ff88ffa,0x0b7fff6a,0x3ff2bbf6,0x4ffcccc0,0xfffda819,
    0x4fffa81d,0x641ffdc0,0x320df55f,0x7dc5fabf,0x7f40ff9d,0xff4fefa9,
    0x7fdcc401,0x267f999c,0x4fd999ff,0x37b25ff1,0xffca884f,0x4045ff12,
    0xa7fc2ff8,0xfffc8c01,0x7446ffff,0x1ffc0eff,0xb3fd4df9,0xe8ffc49f,
    0x223fe84f,0x7dff30ff,0xfd0ffc01,0x7ffffcc5,0xf7101fff,0x3ffd01ff,
    0x8827fd40,0x103fd8ff,0x7c5fd1ff,0xfc83fd9f,0xfaefafcc,0xffffb306,
    0x1fffffff,0x3fffffea,0xf51ff35f,0x7eccbf73,0xff32ffef,0x40ff9801,
    0x918035fd,0xdfffffff,0x40effe88,0xa97f22ff,0xf893f67f,0xfd07fd1f,
    0xf987fcc7,0x3fa00cff,0xff987fa1,0x01ffffff,0xb81fff91,0xff306fff,
    0xffcfd80b,0xff3bf700,0x37d67e41,0x747f77cc,0xbff03fdf,0x26673fa3,
    0x267fe619,0x7ff10999,0x7c53f63f,0x225ff0cf,0x882622ff,0x1a7f42ff,
    0x744000c0,0x3e0efeef,0xfa97f22f,0xff88ff67,0xbfb07fd1,0xfb307fdc,
    0xdf905bff,0x7c40ffb7,0x7ffed407,0x7e7fc41d,0x02ffc43f,0x882fffd4,
    0xe81fd8ff,0xff82fc8f,0x03fff76f,0x3fe21ff1,0x5ff0f666,0x5ffd0e6c,
    0x7fccbfe2,0x7fc5ff10,0xbfd17f24,0x00cbfea1,0x7413aa06,0x25ff88ef,
    0xa97f22ff,0xf88ff67f,0xf707fd1f,0x01fffbbf,0x21ffff91,0xfffffff9,
    0x220ff104,0xd00cffff,0xd87feedf,0x0fffffff,0xf902fff8,0x3e609f55,
    0x7ff90fd5,0xfe81bfe6,0xcefffebe,0x6ffe43ff,0x3fea0efd,0x7fc5ffde,
    0x2e3ffebd,0x40ffefff,0x5ffefff9,0xdf703006,0x0e883620,0x25fc8bfe,
    0x88ff67fa,0x207fd1ff,0x0ff9effd,0x443fae20,0x2fabcace,0x3e60ff10,
    0x07fdc03e,0x7ffecdfd,0xfc80ffff,0x014caa07,0x2a054ca6,0x813fe1ff,
    0xe9aeffda,0xff904eff,0xfdde83bf,0xffea84ff,0x7fd45fcc,0xffb302df,
    0x40c0187f,0x7c0002a9,0xfa97f22f,0xff88ff67,0x00807fd1,0x10082a00,
    0x05101980,0x00000000,0x00000000,0x00401000,0x0010a008,0x20004001,
    0x33333500,0x00000533,0x00000000,0x00000000,0x82000000,0x0ceb82a8,
    0x4c220e54,0x2aaaaa0a,0x9931aaaa,0x544aa199,0x22222221,0x00000888,
    0x00000000,0x00000000,0x20130154,0x88099828,0x04c05301,0x3fffffe6,
    0xf98180ff,0x0fffffff,0x26133066,0x551054c1,0x05fb1fec,0x3ffa6bd1,
    0xfb2eccff,0x3ffffe27,0xff53ffff,0x7d5fe1ff,0xffffff14,0x00007fff,
    0x00000000,0x00000000,0x3a217fd4,0x23ec43ff,0x3f61fffe,0x4435c0ef,
    0x3fe65ffe,0x20ffffff,0x3e61effa,0x0fffffff,0x5ffc3ff3,0x8ffa0ff9,
    0xd0ff63fc,0xa97ee54b,0xfffffddf,0x44447fb1,0x30888888,0x5321bbbb,
    0x2aaaa2c9,0x000aaaaa,0x00000000,0x00000000,0x317ffa00,0x7ef99b69,
    0x553e62e2,0x9b73f9af,0x546d4d7d,0x2666660f,0x6c5fc199,0x4cccccc4,
    0x43ff30fe,0x20ff9bff,0x989f13fe,0x0ae60809,0x00bca833,0x00000000,
    0x00000000,0x00000000,0xf9800000,0x3fd81fee,0xfd71ea22,0x36e9f29f,
    0x8819dff9,0x2666626e,0x47e21999,0x21fd006b,0x2bfe0ff8,0x11740ff8,
    0x00000000,0x00000000,0x00000000,0x00000000,0x36000000,0xc885fbbf,
    0x5f73d40f,0x7c3ee9f3,0x2213be65,0x3ffe60ee,0x360fffff,0xfd003fce,
    0x43f63f41,0x0003647f,0x00000000,0x00000000,0x00000000,0x00000000,
    0x47fcc000,0x93f50ff8,0x3ee7a81f,0xbdf14fdc,0x0fce745f,0x26155ff1,
    0xffffffff,0x800fb220,0x110220ed,0x0002a044,0x00000000,0x00000000,
    0x00000000,0x00000000,0x93f60000,0x0bbf24fd,0xbadb89ea,0x11077263,
    0x3ffff902,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x44133000,0x00000009,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,
};

static signed short stb__arial_bold_19_latin1_x[224]={ 0,1,0,0,0,0,0,0,0,0,0,0,0,0,
1,-1,0,1,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,1,0,1,1,1,0,1,1,0,1,
1,1,1,0,1,0,1,0,0,1,-1,0,0,-1,0,1,-1,0,0,-1,0,0,1,0,0,0,0,0,1,1,
-1,1,1,1,1,0,1,0,1,0,0,1,0,0,0,0,0,0,1,0,0,2,2,2,2,2,2,2,2,2,
2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,1,0,0,0,0,
1,0,0,-1,0,0,0,0,-1,-1,0,0,0,0,1,0,-1,1,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,-1,0,1,1,1,1,-1,0,-1,-1,-1,1,0,0,0,0,0,0,0,1,1,1,1,-1,1,1,0,0,
0,0,0,0,0,0,0,0,0,0,-1,1,-1,-1,0,1,0,0,0,0,0,0,0,1,1,1,1,0,1,0,
 };
static signed short stb__arial_bold_19_latin1_y[224]={ 15,2,2,2,1,2,2,2,2,2,2,4,12,9,
12,2,2,2,2,2,2,2,2,2,2,2,6,6,4,6,4,2,2,2,2,2,2,2,2,2,2,2,2,2,
2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,16,2,5,2,5,2,5,2,5,2,2,
2,2,2,5,5,5,5,5,5,5,3,6,6,6,6,6,6,2,2,2,7,4,4,4,4,4,4,4,4,4,
4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,15,6,2,2,4,2,
2,2,2,2,2,6,6,9,2,0,2,3,2,2,2,6,2,7,15,2,2,6,2,2,2,6,-1,-1,-1,0,
0,0,2,2,-1,-1,-1,0,-1,-1,-1,0,2,0,-1,-1,-1,0,0,4,2,-1,-1,-1,0,-1,2,2,2,2,
2,2,2,2,5,5,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,4,5,2,2,2,2,2,2,2,
 };
static unsigned short stb__arial_bold_19_latin1_w[224]={ 0,4,8,10,9,15,13,4,6,5,7,10,4,6,
3,6,9,6,9,9,10,9,9,9,9,9,4,3,10,10,10,10,17,13,11,12,11,10,9,13,10,3,9,12,
9,12,10,13,10,14,12,11,11,10,13,17,12,13,11,5,6,5,9,11,5,9,9,10,10,9,7,10,9,3,
5,9,3,14,9,10,9,10,6,9,6,9,10,14,10,10,9,7,3,7,10,9,9,9,9,9,9,9,9,9,
9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,0,4,10,10,10,10,
3,9,6,14,6,9,10,6,14,11,7,9,6,6,5,9,11,3,5,5,6,9,15,14,15,10,13,13,13,13,
13,13,18,12,10,10,10,10,5,5,7,7,13,10,13,13,13,13,13,10,13,10,10,10,10,13,10,9,9,9,
9,9,9,9,15,10,9,9,9,9,5,4,7,7,10,9,10,10,10,10,10,9,10,9,9,9,9,10,9,10,
 };
static unsigned short stb__arial_bold_19_latin1_h[224]={ 0,13,6,14,16,14,14,6,17,17,7,10,6,3,
3,14,14,13,13,14,13,14,14,13,14,14,9,12,10,6,10,13,17,13,13,14,13,13,13,14,13,13,14,13,
13,13,13,14,13,15,13,14,13,14,13,13,13,13,13,17,14,17,8,3,4,11,14,11,14,11,13,14,13,13,
17,13,13,10,10,11,14,14,10,11,13,10,9,9,9,13,9,17,17,17,4,11,11,11,11,11,11,11,11,11,
11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,13,17,14,10,13,
17,17,3,14,7,9,6,3,14,3,6,12,7,8,4,13,17,4,4,7,7,9,14,14,14,13,16,16,16,15,
15,15,13,17,16,16,16,15,16,16,16,15,13,15,17,17,17,16,16,10,14,17,17,17,16,16,13,14,14,14,
14,14,14,14,11,14,14,14,14,14,13,13,13,13,14,13,14,14,14,14,14,10,11,14,14,14,14,17,17,17,
 };
static unsigned short stb__arial_bold_19_latin1_s[224]={ 251,123,167,222,227,1,17,162,67,74,117,
165,176,230,214,248,71,22,69,116,79,155,165,150,233,1,251,237,143,132,176,
29,169,98,112,220,160,201,212,141,88,99,41,178,113,167,192,91,203,193,214,
190,180,202,56,70,154,140,128,80,213,221,80,244,191,38,81,48,105,17,248,
22,1,244,163,226,222,101,116,59,51,11,126,241,143,133,208,239,187,11,198,
187,195,141,203,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,
70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,251,251,210,
243,154,58,109,86,237,175,103,229,151,230,126,218,143,227,125,90,181,191,33,
187,197,97,110,219,222,207,191,45,237,1,15,154,208,168,124,96,29,40,51,
182,129,76,82,146,44,135,113,127,149,90,62,90,116,56,45,199,118,104,33,
140,33,181,238,74,84,150,1,170,54,160,244,1,172,40,90,236,233,103,22,
43,11,94,105,80,27,64,130,31,61,22,12,1, };
static unsigned short stb__arial_bold_19_latin1_t[224]={ 15,81,106,19,1,51,51,106,1,1,106,
95,106,105,105,36,51,81,66,51,66,51,51,66,51,66,81,81,95,106,95,
81,1,66,66,51,66,66,66,51,81,81,51,66,81,81,81,51,81,19,81,
51,81,51,81,81,81,81,81,1,51,1,106,105,105,95,51,95,51,95,66,
66,81,66,1,66,66,95,95,95,51,66,95,81,66,95,95,95,95,81,95,
1,1,1,105,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,
95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,15,1,1,
51,95,66,1,1,105,51,106,95,106,105,51,105,106,81,106,106,106,66,1,
105,105,106,106,95,36,36,36,81,1,19,19,19,19,19,66,1,19,19,19,
19,19,19,19,19,66,19,1,1,1,19,19,95,36,1,1,1,19,19,66,
36,36,36,36,36,36,36,95,36,36,36,19,36,66,81,66,66,19,81,36,
36,36,36,36,95,95,36,36,51,51,1,1,1, };
static unsigned short stb__arial_bold_19_latin1_a[224]={ 76,91,129,151,151,242,197,65,
91,91,106,159,76,91,76,76,151,151,151,151,151,151,151,151,
151,151,91,91,159,159,159,166,265,197,197,197,197,181,166,212,
197,76,151,197,166,227,197,212,181,212,197,181,166,197,181,257,
181,181,166,91,76,91,159,151,91,151,166,151,166,151,91,166,
166,76,76,151,76,242,166,166,166,166,106,151,91,166,151,212,
151,151,136,106,76,106,159,204,204,204,204,204,204,204,204,204,
204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,
204,204,204,204,204,204,204,204,76,91,151,151,151,151,76,151,
91,200,101,151,159,91,200,150,109,149,91,91,91,157,151,76,
91,91,99,151,227,227,227,166,197,197,197,197,197,197,272,197,
181,181,181,181,76,76,76,76,197,197,212,212,212,212,212,159,
212,197,197,197,197,181,181,166,151,151,151,151,151,151,242,151,
151,151,151,151,76,76,76,76,166,166,166,166,166,166,166,149,
166,166,166,166,166,151,166,151, };

// Call this function with
//    font: NULL or array length
//    data: NULL or specified size
//    height: STB_FONT_arial_bold_19_latin1_BITMAP_HEIGHT or STB_FONT_arial_bold_19_latin1_BITMAP_HEIGHT_POW2
//    return value: spacing between lines
static void stb_font_arial_bold_19_latin1(stb_fontchar font[STB_FONT_arial_bold_19_latin1_NUM_CHARS],
                unsigned char data[STB_FONT_arial_bold_19_latin1_BITMAP_HEIGHT][STB_FONT_arial_bold_19_latin1_BITMAP_WIDTH],
                int height)
{
    int i,j;
    if (data != 0) {
        unsigned int *bits = stb__arial_bold_19_latin1_pixels;
        unsigned int bitpack = *bits++, numbits = 32;
        for (i=0; i < STB_FONT_arial_bold_19_latin1_BITMAP_WIDTH*height; ++i)
            data[0][i] = 0;  // zero entire bitmap
        for (j=1; j < STB_FONT_arial_bold_19_latin1_BITMAP_HEIGHT-1; ++j) {
            for (i=1; i < STB_FONT_arial_bold_19_latin1_BITMAP_WIDTH-1; ++i) {
                unsigned int value;
                if (numbits==0) bitpack = *bits++, numbits=32;
                value = bitpack & 1;
                bitpack >>= 1, --numbits;
                if (value) {
                    if (numbits < 3) bitpack = *bits++, numbits = 32;
                    data[j][i] = (bitpack & 7) * 0x20 + 0x1f;
                    bitpack >>= 3, numbits -= 3;
                } else {
                    data[j][i] = 0;
                }
            }
        }
    }

    // build font description
    if (font != 0) {
        float recip_width = 1.0f / STB_FONT_arial_bold_19_latin1_BITMAP_WIDTH;
        float recip_height = 1.0f / height;
        for (i=0; i < STB_FONT_arial_bold_19_latin1_NUM_CHARS; ++i) {
            // pad characters so they bilerp from empty space around each character
            font[i].s0 = (stb__arial_bold_19_latin1_s[i]) * recip_width;
            font[i].t0 = (stb__arial_bold_19_latin1_t[i]) * recip_height;
            font[i].s1 = (stb__arial_bold_19_latin1_s[i] + stb__arial_bold_19_latin1_w[i]) * recip_width;
            font[i].t1 = (stb__arial_bold_19_latin1_t[i] + stb__arial_bold_19_latin1_h[i]) * recip_height;
            font[i].x0 = stb__arial_bold_19_latin1_x[i];
            font[i].y0 = stb__arial_bold_19_latin1_y[i];
            font[i].x1 = stb__arial_bold_19_latin1_x[i] + stb__arial_bold_19_latin1_w[i];
            font[i].y1 = stb__arial_bold_19_latin1_y[i] + stb__arial_bold_19_latin1_h[i];
            font[i].advance_int = (stb__arial_bold_19_latin1_a[i]+8)>>4;
            font[i].s0f = (stb__arial_bold_19_latin1_s[i] - 0.5f) * recip_width;
            font[i].t0f = (stb__arial_bold_19_latin1_t[i] - 0.5f) * recip_height;
            font[i].s1f = (stb__arial_bold_19_latin1_s[i] + stb__arial_bold_19_latin1_w[i] + 0.5f) * recip_width;
            font[i].t1f = (stb__arial_bold_19_latin1_t[i] + stb__arial_bold_19_latin1_h[i] + 0.5f) * recip_height;
            font[i].x0f = stb__arial_bold_19_latin1_x[i] - 0.5f;
            font[i].y0f = stb__arial_bold_19_latin1_y[i] - 0.5f;
            font[i].x1f = stb__arial_bold_19_latin1_x[i] + stb__arial_bold_19_latin1_w[i] + 0.5f;
            font[i].y1f = stb__arial_bold_19_latin1_y[i] + stb__arial_bold_19_latin1_h[i] + 0.5f;
            font[i].advance = stb__arial_bold_19_latin1_a[i]/16.0f;
        }
    }
}

#ifndef STB_SOMEFONT_CREATE
#define STB_SOMEFONT_CREATE              stb_font_arial_bold_19_latin1
#define STB_SOMEFONT_BITMAP_WIDTH        STB_FONT_arial_bold_19_latin1_BITMAP_WIDTH
#define STB_SOMEFONT_BITMAP_HEIGHT       STB_FONT_arial_bold_19_latin1_BITMAP_HEIGHT
#define STB_SOMEFONT_BITMAP_HEIGHT_POW2  STB_FONT_arial_bold_19_latin1_BITMAP_HEIGHT_POW2
#define STB_SOMEFONT_FIRST_CHAR          STB_FONT_arial_bold_19_latin1_FIRST_CHAR
#define STB_SOMEFONT_NUM_CHARS           STB_FONT_arial_bold_19_latin1_NUM_CHARS
#define STB_SOMEFONT_LINE_SPACING        STB_FONT_arial_bold_19_latin1_LINE_SPACING
#endif

