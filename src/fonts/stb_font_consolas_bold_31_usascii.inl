// Font generated by stb_font_inl_generator.c (4/1 bpp)
//
// Following instructions show how to use the only included font, whatever it is, in
// a generic way so you can replace it with any other font by changing the include.
// To use multiple fonts, replace STB_SOMEFONT_* below with STB_FONT_consolas_bold_31_usascii_*,
// and separately install each font. Note that the CREATE function call has a
// totally different name; it's just 'stb_font_consolas_bold_31_usascii'.
//
/* // Example usage:

static stb_fontchar fontdata[STB_SOMEFONT_NUM_CHARS];

static void init(void)
{
    // optionally replace both STB_SOMEFONT_BITMAP_HEIGHT with STB_SOMEFONT_BITMAP_HEIGHT_POW2
    static unsigned char fontpixels[STB_SOMEFONT_BITMAP_HEIGHT][STB_SOMEFONT_BITMAP_WIDTH];
    STB_SOMEFONT_CREATE(fontdata, fontpixels, STB_SOMEFONT_BITMAP_HEIGHT);
    ... create texture ...
    // for best results rendering 1:1 pixels texels, use nearest-neighbor sampling
    // if allowed to scale up, use bilerp
}

// This function positions characters on integer coordinates, and assumes 1:1 texels to pixels
// Appropriate if nearest-neighbor sampling is used
static void draw_string_integer(int x, int y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0, cd->t0); glVertex2i(x + cd->x0, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t0); glVertex2i(x + cd->x1, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t1); glVertex2i(x + cd->x1, y + cd->y1);
        glTexCoord2f(cd->s0, cd->t1); glVertex2i(x + cd->x0, y + cd->y1);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance_int;
    }
    glEnd();
}

// This function positions characters on float coordinates, and doesn't require 1:1 texels to pixels
// Appropriate if bilinear filtering is used
static void draw_string_float(float x, float y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0f, cd->t0f); glVertex2f(x + cd->x0f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t0f); glVertex2f(x + cd->x1f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t1f); glVertex2f(x + cd->x1f, y + cd->y1f);
        glTexCoord2f(cd->s0f, cd->t1f); glVertex2f(x + cd->x0f, y + cd->y1f);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance;
    }
    glEnd();
}
*/

#ifndef STB_FONTCHAR__TYPEDEF
#define STB_FONTCHAR__TYPEDEF
typedef struct
{
    // coordinates if using integer positioning
    float s0,t0,s1,t1;
    signed short x0,y0,x1,y1;
    int   advance_int;
    // coordinates if using floating positioning
    float s0f,t0f,s1f,t1f;
    float x0f,y0f,x1f,y1f;
    float advance;
} stb_fontchar;
#endif

#define STB_FONT_consolas_bold_31_usascii_BITMAP_WIDTH         256
#define STB_FONT_consolas_bold_31_usascii_BITMAP_HEIGHT        138
#define STB_FONT_consolas_bold_31_usascii_BITMAP_HEIGHT_POW2   256

#define STB_FONT_consolas_bold_31_usascii_FIRST_CHAR            32
#define STB_FONT_consolas_bold_31_usascii_NUM_CHARS             95

#define STB_FONT_consolas_bold_31_usascii_LINE_SPACING          20

static unsigned int stb__consolas_bold_31_usascii_pixels[]={
    0x0001ddd1,0x00000030,0x00000000,0x97300140,0xd1000159,0x0000005d,
    0x05554400,0x98003555,0x2a601aaa,0x54a9abcc,0x40000555,0xcb880009,
    0x4155401b,0x3ffe21b9,0x009dffb1,0x3fe017ea,0x807fffff,0x3005ffeb,
    0x7ffd49fd,0x5c04ffff,0x7fec404f,0x4003ffff,0x2e002ffa,0x00cdffed,
    0x46ffd800,0x64005ffe,0xfe984fff,0x7fffffff,0x8000bffd,0x0cffffea,
    0xffffe980,0xb87ff704,0xfff14fff,0x3fffff63,0x17ffe601,0xfffffff0,
    0x7fff4c0f,0xffff005f,0x3ffffea7,0x3fee04ff,0xffff302f,0x007fffff,
    0x4400ffdc,0xfffffffd,0x3e20002f,0x7ffd43ff,0x3ffee001,0x7ffffe44,
    0xfd7fffff,0x7e4000bf,0x0fffffff,0x7fefff40,0x22ffcc1f,0x88fffff8,
    0xffd91fff,0xffd80dff,0x3bbba05f,0x3fa07ffe,0x8804efff,0xff54ffff,
    0x207ddddf,0xd105fffb,0x3ee23bff,0x32a601ff,0x101acffe,0xffffffff,
    0x20007fff,0xff80fffc,0x3fee004f,0x3fffea4f,0x7ffebaac,0x2000bffd,
    0xfecefff9,0x3fe605ff,0xfe89ff33,0x7fffc40f,0x81fff88f,0x6c02fffb,
    0xf7003fff,0x3ffea0ff,0xfffe8004,0x200fff52,0x3605fff9,0x9ff705ff,
    0xfffffb30,0xf901ffff,0xfb737dff,0x3e000fff,0xfff704ff,0x3ffee001,
    0x207fffa3,0xbffd7ffd,0x1bff6000,0x7d40fffb,0xfb97fe1f,0xdfffd03f,
    0x7407ffe2,0xffe803ff,0x7ffb800f,0x000dff70,0xffa8b722,0x1dffd007,
    0xf01bfea0,0xffff98ff,0x0fffffff,0x4077ffcc,0x4003fffd,0xf100fffa,
    0x3ee007ff,0x9fff53ff,0x7f5fff60,0xfff0005f,0x00fffa87,0xa7fc3ff7,
    0x36206ff8,0x3fff10de,0x2017ff20,0xb805fff9,0xbff907ff,0xffa80000,
    0x2fffc807,0x900bffa0,0x3ffa25ff,0xdbdffcef,0x0fffec0f,0x006fff98,
    0x3602fff4,0xff5006ff,0x07ffee7f,0xffebffec,0x802f2e65,0x7fdc4fff,
    0x553fe607,0x03ffb3ff,0x03fff100,0x64017ff2,0x7dc02fff,0x09ffb07f,
    0x5555554c,0xff50aaaa,0x5fff880f,0x331bfe60,0x27ff5511,0xff35fffa,
    0x07fff807,0x8007fff4,0x4c02fff9,0xfa802fff,0x1fffb2ff,0x7f5fff60,
    0xffffe8df,0x4dffb03f,0x7405fff8,0xb8fffeff,0xf10003ff,0x3ff203ff,
    0xbfff1005,0xb07ffb80,0x7fec09ff,0xffffffff,0xb80fff52,0x3f200fff,
    0xfffff53f,0x3ee9ff3f,0x03ff53ff,0x6405fff8,0xfb001fff,0x3ffa00df,
    0x2fffa805,0x7ec0fffd,0xffdffd7f,0x07ffffff,0xfd37fff7,0xff9801ff,
    0x6ff8afff,0x3ffe2000,0x00dff701,0x7007ffec,0x3ff60fff,0x3ffff604,
    0x52ffffff,0xffe80fff,0x4c7ff405,0x8effffff,0xdfff75ff,0x4c01ff71,
    0x7e404fff,0xff8802ff,0xfff5003f,0x2fff9801,0x3601fffb,0xffffd7ff,
    0xffffb7df,0x3fffffa0,0x951001ff,0x007ff615,0x01fff880,0x5400fff5,
    0x3ee02fff,0x07ffd07f,0x5555554c,0xff52fffc,0x1fffcc0f,0x3fadff10,
    0xf8dffddf,0xfffff36f,0xffa80ffd,0x7ffdc03f,0x0fffb802,0x013ffe00,
    0x3f25fff3,0xfffd01ff,0xb0bffffa,0xff305fff,0x0001bfff,0x0004ffa8,
    0x880fffc4,0x3e001fff,0x3fee04ff,0x02fff887,0x25fff500,0x3ee07ffa,
    0x3fea00ff,0xff77ff8c,0xffd9bfe9,0x00bfffff,0xb807fff5,0xff802fff,
    0x7fe4004f,0x8fffcc07,0xfd83fffb,0x7fffd7ff,0x889fff30,0x4c6ffffd,
    0xff1002aa,0x77f4c00d,0x403fff11,0x009beffe,0xf702fff4,0x3f6662ff,
    0xf50000ff,0x1ffea5ff,0x5c07ffc8,0x74ffabff,0x8dff19ff,0xfffffffd,
    0x4fffa83f,0x00fffdc0,0x0007ffea,0x4c07fff1,0xfff11fff,0x3fff223f,
    0x20dffd7f,0x3a25fff8,0x25ffffff,0xfb005ffc,0x7ff4003f,0x03fff17f,
    0x2ffffecc,0xb81bff60,0xffffb7ff,0x7d40005f,0x0fff52ff,0x32037fec,
    0x93ffcaff,0x0bff17ff,0xffffffd5,0x7ffcc1df,0x07ffe405,0x0017ffa0,
    0xf1037fec,0x7ffec3ff,0xffffffef,0x7c0bffd7,0x3fff26ff,0xfb3fffea,
    0x9ff5009f,0x220fbf6a,0xf89fffff,0x7f5401ff,0x7fe405ff,0x6dffee07,
    0x0000efff,0xfa97ffd4,0x17ffa07f,0xff93ffb0,0x3e2bff65,0x3ffea05f,
    0x3e26ffff,0x7ff406ff,0x3ffe600f,0xfff30002,0x87ffe203,0xffffffe8,
    0xffd7ffce,0x8b7ffc0b,0xffd14fff,0x807ffd5f,0xfff96ff8,0xffff09ff,
    0x03fff11f,0x277fffe4,0xb81bff20,0xfffd97ff,0x7d40007f,0x0fff52ff,
    0x36037ff4,0xb2ffd8ff,0x09ff33ff,0x7fedffd4,0x3fffa1ff,0x0bfff100,
    0x0006ffc8,0xe882fff4,0x7fec40ee,0x2fff94ff,0xff105ffe,0x8bffeabf,
    0xfffffff9,0x4cffec01,0x1ffebeff,0xf897ffd4,0xfff301ff,0x2ffec007,
    0xc88fff70,0x50001fff,0x3fea5fff,0x01fff607,0x5ffb1ffd,0x3fea3ffa,
    0x6c3ff202,0x3ff23fff,0x5fff905f,0x01fffc40,0x03ffee00,0x6c133000,
    0x0bffd7ff,0x7dcfffe6,0x7ffd40ff,0x7fd406ff,0x3ea3ff74,0x2209882f,
    0xff501fff,0x4ffe800f,0x221ffee0,0x50003fff,0x3fea5fff,0x01fff207,
    0x5ff91ffb,0xffb1fff3,0xf73fec01,0x7ffc47ff,0xfff931cf,0x0fffb80d,
    0x4fff8000,0xb0001510,0x17ffafff,0xfa97ffec,0xfffc82ff,0x3bfe203f,
    0x7fc4ff90,0x3fff1003,0x001bfee0,0x7dc07fff,0x09ffd07f,0x4bffea00,
    0x3ee07ffa,0x3ff201ff,0xffeeffb9,0x2026ffdf,0x3fff66fe,0x7ffffe41,
    0x01ffffff,0x00027ff4,0xf987ffc8,0x7ec001ff,0x90bffd7f,0x7fc4dfff,
    0x7ffcc0ef,0x8bff204f,0x5ff30ffc,0x07ffe200,0x5002ffe4,0x7dc03fff,
    0x09ffb07f,0x4bffea00,0x3e607ffa,0x3ff204ff,0xfeffff9a,0x3f21ffff,
    0xdadff9bd,0xff906fff,0x3fffffff,0x01fffa80,0x5fff1000,0x005fffd8,
    0xffebffec,0xffffddef,0x7fffec0f,0xfffffecd,0x45ff982f,0xffd8cffb,
    0x3fff1001,0x8017ff20,0x7dc06ffd,0x09ffb07f,0x4bffea00,0x7f407ffa,
    0x4ffee07f,0xffb8effc,0x7fffe42e,0xffffffff,0x3fff6a01,0xfd800cff,
    0x6c00006f,0x7ffec6ff,0xbffec005,0xfffffffe,0xfe882fff,0xffffffff,
    0x7f41ffff,0xfffff80f,0x3fe2005f,0x0bff901f,0x00fffe20,0x3f60fff7,
    0xff50004f,0x01ffea5f,0x2a05fff7,0x110225ff,0x3fffff20,0x01efffff,
    0x003fff50,0x000bffe6,0x43fff500,0x4001fff9,0xffb57ffd,0x009dffff,
    0x7ffffff7,0x643fffea,0xffd302ff,0xff88009f,0x0bff901f,0x003fff60,
    0x3f60fff7,0xff50004f,0x01ffea5f,0x220dfff1,0x30000fff,0xbffffd97,
    0xff880039,0xffc8185f,0xfd000007,0x000988bf,0x00333000,0x00026620,
    0x8000c400,0xf901fff8,0xfff500bf,0x0fff7009,0x40017ff2,0xff51fffc,
    0x7fff700f,0x0013ff60,0x0007fe40,0x2f7fffa0,0x3fe20feb,0x7000003f,
    0x00001fff,0x00000000,0x00000000,0xe80fffc4,0x7f4404ff,0xfff7006f,
    0x001bfee0,0xff53fffc,0x3fffa00f,0x03fff981,0x1ff6002e,0x3ffe6000,
    0x2e5fffff,0x00000fff,0x007fff10,0x00000000,0x00000000,0x0fffc400,
    0x1017ffe4,0x2003fffd,0xff507ffb,0x40b8819f,0x2a6fffb8,0xff1007ff,
    0xfffb03ff,0x1ff9557b,0x000bfd00,0x3ffffea0,0x026623ff,0x33100000,
    0x00000001,0x00000000,0x7c400000,0xfffd91ff,0xfffd80df,0x3bbbba03,
    0x3ff607ff,0xdff34eff,0x3fffffb9,0x7777ffd4,0xffff503e,0xfffffb01,
    0xb001ffff,0x4400007d,0x000acdca,0x00000000,0x00000000,0x00000000,
    0x1fff8800,0x03dffffb,0x201fffcc,0x7fffffff,0x3ffffa60,0xffffff35,
    0xffa87fff,0x204fffff,0xd901fffa,0x05bfffff,0x00000000,0x00000000,
    0x00000000,0x00000000,0x3e200000,0x7bdfb1ff,0x200fe600,0x7fffffff,
    0x15fedb80,0xbffffffb,0xfffff503,0x2fa809ff,0x00033300,0x00000000,
    0x00000000,0x00000000,0x00000000,0xfff10000,0x00100003,0x22000000,
    0x00001a99,0x00000080,0x00000000,0x00000000,0x00000000,0x00000000,
    0xff100000,0x0000003f,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000ccc,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00d554c0,0x54c6aaa2,0x0aaa8009,0x0002f32e,0x0002aa98,
    0xaccca880,0x2a62aaaa,0x3000002a,0x22379995,0x2aaaaaaa,0x000aaaa0,
    0x00000080,0x00000200,0x00000000,0x17ffe600,0x365fff70,0xd01dffff,
    0xffff35ff,0x360007ff,0x3bf207ff,0xfffc8801,0x7fffffff,0x0001fff6,
    0xfffffb30,0x3fffe6df,0x3fa06fff,0x6dc0005f,0xedb8006f,0x7100cdff,
    0x5bdffffb,0x7f6dcc00,0x2a00bdff,0x00cdffec,0x7fff6540,0x3ffa1bdf,
    0x9fffa00f,0xdffffffd,0x7fe7ff40,0x03ffffff,0x707ffd80,0xfb00dfff,
    0xffffffff,0x3ffecfff,0xfff10000,0x26dfffff,0x6fffffff,0x0017ffa0,
    0x400dfff0,0xffffffd8,0xfffa82ff,0x06ffffff,0xffffffc8,0xffb01fff,
    0x03dfffff,0xfffffd30,0x7dc9ffff,0xfff303ff,0x7ffffec9,0x3ffa0eff,
    0xffdbefff,0xffd8007f,0x1ffff907,0x51fffd40,0x6c55dffd,0x200007ff,
    0xa9aefffd,0xf555514b,0x7ff40dff,0x7ffc0005,0xffff1006,0x7fffffff,
    0xffffffa8,0xd105ffff,0xffffffff,0xffe883ff,0xffffffff,0x3fffee01,
    0x4fffffff,0x641bffe2,0x54c41fff,0x3a5ffffd,0x7ec2ffff,0x7ec002ff,
    0xdfff507f,0xa86ffc80,0x7fec1fff,0x3fe00007,0xfff8006f,0x017ffa06,
    0x00dfff00,0x26fbfff6,0x4c7fffeb,0x3ff261ac,0xfffd80ff,0xfdba9bdf,
    0x86fffdc1,0x305fffd9,0x359dffff,0xfd89fb75,0x6fff81ff,0x1ffffa80,
    0xf307fffd,0xfd8009ff,0x0336e07f,0xf109ffd0,0x7ffd85ff,0xfff10000,
    0xdfff0007,0x002fff40,0x3ffeaaaa,0x22aaaaae,0xd80efff9,0x3a003fff,
    0x7fcc1fff,0xf02202ff,0x3ffa0dff,0xdfffe81f,0xff506200,0x3fffa89f,
    0x27fffb00,0xff106ffe,0x6654c0bf,0x0007ffeb,0xf10dffb0,0x7ffd83ff,
    0x80555550,0x8002fff9,0x3fa06fff,0x3799515f,0xffffff88,0x5fffffff,
    0x4c07fff6,0x2e006fff,0x7ff41fff,0x7fdc003f,0x9fff302f,0x006fffa8,
    0xfb1fffa0,0x3ee001ff,0x0bffd3ff,0x74c37ffc,0xffffffff,0x55555517,
    0xfffb8055,0x6c3ffec2,0xfffa87ff,0x7ffd401f,0x6fff8002,0x3e77ffa0,
    0x222fffff,0xffffffff,0x3e5fffff,0x7ff407ff,0xdff9000f,0x007fff98,
    0xd107ffd8,0xffd8dfff,0x3ee0002f,0x9fff12ff,0x97ffe400,0x3fe05ffe,
    0x7fffe46f,0x37ffffff,0xdfffffff,0xbdfffd00,0xfb07fffd,0xffff98ff,
    0xfb999881,0x99999bff,0x81bffe00,0xffffeffe,0x2aa0ffff,0xaaefffaa,
    0xfff12aaa,0x1fffc80b,0x44fffa80,0x8004fffa,0xffa85ffe,0x7ff47fff,
    0x7fc40007,0x03fff75f,0x43fffea0,0xff105ffe,0x7fffd4bf,0x7ffebaac,
    0xfffffff3,0xfffe880d,0xb04fffff,0x7ffc4fff,0xffffb02f,0xffffffff,
    0x37ffc07f,0xdfffffd0,0x409ffff9,0x7cc06fff,0x7fe404ff,0x76e64c1f,
    0xffb83fff,0xfff8003f,0x7ffffe44,0x237ffc7f,0x1aaaaaa8,0xfd1fffb0,
    0x7f7540df,0x3fa3ffff,0x7fff305f,0x207fffa2,0x55517ffd,0xc80dfff5,
    0xcdeecdff,0xe9fff600,0x3f603fff,0xffffffff,0x3e03ffff,0x3ffa06ff,
    0x3ffe22ff,0x01bffe06,0xb807fff5,0x7fdc2fff,0xc80dffff,0x44002fff,
    0xffd34fff,0x21fff9df,0x7d45fff8,0x504fffff,0x7fff7fff,0x7ffffd40,
    0x82fff44f,0xff52fffd,0x1fff609f,0x7c06fff8,0xfd8001ff,0x09fffb7f,
    0xffeeeec8,0x2eeeeeef,0xe81bffe0,0xffe83fff,0x01bffe07,0xb807fff5,
    0x7fdc2fff,0x44ffffff,0x4002fffd,0xffbbfff8,0x1fff73ff,0xf517ffe6,
    0x409fffff,0x0fffffff,0x33bffea0,0xc85ffe81,0x3fee6fff,0x0fffb01f,
    0xf1037ffc,0xd80019ff,0x5fffbfff,0x2fffa800,0x06fff800,0x7ec1bffa,
    0x1bffe07f,0x809fff30,0x4c41fffb,0xffffca99,0x00ffff24,0x3fffffe0,
    0x9fff21ef,0x64c5fff8,0x204fffcc,0x05fffffc,0xd007ffd4,0xffbbdfff,
    0x7fe41fff,0x0fffb00f,0x3a037ffc,0xefffffff,0xfffd81cd,0x50006fff,
    0xf0005fff,0x7ff40dff,0x40fffb05,0x7c406fff,0x7fe405ff,0xfff3000f,
    0x13ffee1f,0x3ffffe00,0x3ffec0df,0xff01bffe,0x7ffc409f,0x7fcc01ff,
    0x7ffff407,0x42ffffff,0x3f607ffe,0x1bffe07f,0xfffffd10,0xd89fffff,
    0x2fffefff,0x2fffa800,0x06fff800,0x7ec17ffa,0x1bffe07f,0xd01bffe0,
    0xfc800fff,0xdfff52ff,0xffffd000,0xd1bffa07,0x7fc01fff,0x7ffec04f,
    0x06ee9805,0x7ffffff4,0xfffb04ef,0x81fff601,0x7d406fff,0xffeeeeff,
    0x3ff63fff,0x01ffff9f,0x017ffd40,0xd037ffc0,0x3ff60bff,0x01bffe07,
    0x4403fffe,0x64006fff,0xfff32fff,0xffd8003f,0x9fff302f,0x204fffd8,
    0x7f404fff,0x400002ff,0x0198dffe,0xd01fffc8,0x7ffc0fff,0x13ffe606,
    0xfb37ffd4,0x3bffeeff,0x3ffea000,0x6fff8002,0x6c17ffa0,0x3ffa07ff,
    0x4fffb807,0x005fff90,0x360fffe8,0x2000efff,0xf905fff9,0xfff981ff,
    0x09fff01f,0x0037ffd4,0xffe80353,0x7ffdc005,0x07fffd83,0xfd81bffe,
    0x37ff407f,0x7fecfffb,0x3fea005f,0xfff8002f,0x417ffa06,0x3f607ffd,
    0x7fc403ff,0xff931cff,0x366008df,0x7fcc6fff,0xa989bfff,0x7fff41fc,
    0x82fffdc3,0x09bffffc,0x2a09fff1,0x7001ffff,0x7f405fff,0x7fc4005f,
    0xfff911ff,0x37ffc0ff,0x203fffb0,0x3f64fff9,0x3fffa27f,0x5fff5004,
    0x0dfff000,0xfd82fff4,0x3ffee07f,0x645edcef,0xffffffff,0x77f42fff,
    0xfffffeee,0xffffc80f,0x1fffffff,0x6fffffd4,0x101fffff,0xffffffff,
    0x3a29ffff,0x02ffffee,0x817fffe0,0xd8005ffe,0xfffeffff,0x3fe07fff,
    0x3fff206f,0xffca9abe,0x1fff61ff,0x005ffff3,0xc805fff5,0xffffeeee,
    0xffd1eeee,0x01fff60b,0xfffffffd,0xfffff70b,0xfd05ffff,0xffffffff,
    0x7ffdc03d,0x1fffffff,0xffffffa8,0x6c401eff,0xffffffff,0xffff14ff,
    0xff8007ff,0x3ffa05ff,0xffe88005,0xffaeffff,0xffdddd97,0x23ddddff,
    0xffffffe8,0x6c2fffff,0xfffb87ff,0x7ffd401f,0x7ffff402,0xffffffff,
    0x360bffd1,0x7e4407ff,0x505fffff,0x1bfffffd,0x3fffffa0,0x91002dff,
    0x7bfffffd,0x7fffecc0,0x3ae000ce,0xbeffffff,0x1bffff10,0x3fff5000,
    0x002fff40,0x4ffffd88,0x3ffafff3,0xffffffff,0x3fae21ff,0x0bffffff,
    0xfb07ffd8,0x7d401fff,0x7ff402ff,0xffffffff,0x0bffd1ff,0x9801fff6,
    0x310009aa,0x26666001,0x13300001,0x00133000,0x40335100,0x880001a9,
    0x00000009,0x3fa004cc,0xffffffff,0x33101fff,0x00000135,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x4c000800,0x0000001b,0x77774c00,0x0eeeeeee,0xedcba880,0x3bbba60e,
    0x74eeeeee,0xeed80ddd,0x003dddb4,0x774cbddb,0xddd300de,0x7777741b,
    0x2e00bcde,0x74c02eee,0xdddd93ee,0xdddddddd,0x3bbbaebd,0x2a9dd700,
    0xeeeeeeee,0x881eeeee,0x1defffec,0xfffedb80,0x3fee04ef,0xffb7304f,
    0xd91005bf,0x2607dfff,0xffffffff,0x36600fff,0x1fffffff,0x3fffffe6,
    0xff95ffff,0x95fff80f,0xf9809fff,0x7ffec4ff,0x89fffb03,0xffffffff,
    0xff980dff,0x7ffec06f,0xffffffd1,0xdfffffff,0x413ffff2,0xfff55ffc,
    0xffffffff,0xfffa85ff,0x05ffffff,0xfffffff5,0x3fe20fff,0x7fe40fff,
    0x0effffff,0xffffff70,0xff981bff,0xffffffff,0xffff500f,0x4c3fffff,
    0xffffffff,0x0fff95ff,0xff35fff8,0xfffc80df,0x07fffcc2,0xf03fffe6,
    0xffffffff,0x3ff60dff,0xbfff302f,0x7ffffff4,0x6fffffff,0x01fffff9,
    0x3feabff9,0xffffffff,0x3fe62fff,0xffffefff,0x7fffcc3f,0x07ffffff,
    0x41fffff1,0xfffffffe,0xffb85fff,0xffffffff,0x667ffcc5,0x80cccccc,
    0xbceffffa,0x4ccc0aaa,0x5fff9999,0xff80fff9,0x03fffe5f,0xfb07ffe8,
    0xfffd89ff,0xaaefff83,0x83ffffec,0xfb06fff9,0x555543ff,0xaacfffca,
    0xffff92aa,0x2bff907f,0xeeeeeeea,0x21ffffee,0x7cc2fffd,0x7fff46ff,
    0x0b73319d,0x2a37fff4,0xfd99beff,0x3fe21fff,0xffa88bff,0x3ffe62ff,
    0x7ffc4000,0xf880002f,0x0fff95ff,0x3f65fff8,0xfff102ff,0x3fffe20b,
    0x20dfff30,0xffd84fff,0x3fffb04f,0x805fff98,0x3202fffa,0xc86fffff,
    0x3e6005ff,0x2fffc6ff,0x3e27ffc8,0x220006ff,0x03c80ded,0x7dc7fffb,
    0xfff983ff,0x003ffe66,0x007fff70,0x57ffe200,0x7fc07ffc,0x17ffea5f,
    0x901fffd4,0x3ff69fff,0x09fff02f,0x260dfff3,0x7fec5fff,0xfffa800f,
    0x3ffff202,0x2ffe42ff,0x85fffb00,0xff905fff,0x037ffccf,0xf5000000,
    0x7ffec9ff,0x4cfffd00,0x74000fff,0x200007ff,0xff95fff8,0x25fff80f,
    0xfb07fff8,0x7fc401ff,0x06fffaff,0x3e213ffe,0x3ff605ff,0x09fff31f,
    0x80bffea0,0x6ffeeffc,0x9802ffe4,0xffe86fff,0x27ffc42f,0x005ffff1,
    0x3ea00000,0x1fffa3ff,0xf30fffc8,0x801335ff,0x5315fff8,0x3fe20003,
    0x80fff95f,0x7fec5fff,0x06fff81f,0xffffffb8,0x13ffe02f,0x9813ffee,
    0xfffb5fff,0x3ffea001,0x2bbff202,0x3ff21fff,0x5fffb005,0x19ffff50,
    0xf81ffff3,0x002dffff,0x7fe40000,0x0bfff62f,0xf98fffdc,0xcfffffff,
    0xeefff981,0x00dfffff,0x657ffe20,0x7ffc07ff,0x21fffdc5,0xd003fff9,
    0x80bfffff,0xf9314fff,0xfd801fff,0x04fff9ff,0x80bffea0,0xbfff6ffc,
    0x4402ffe4,0x3f206fff,0xffffffff,0xfffffa81,0x00000bef,0x20ffff80,
    0xc80dfffc,0xfff32fff,0x5fffffff,0xffffffa8,0x02ffffff,0x32bfff10,
    0x7ffc07ff,0x237ffc45,0x5001fffb,0x803fffff,0xffffffff,0xf9801eff,
    0x00ffffff,0x80bffea0,0xfff76ffc,0x2017ff23,0x5c03fffc,0x1fffffff,
    0x3ffffee0,0xca804fff,0x7ffe4002,0x7ffffcc4,0xfffffdcd,0xfddddd32,
    0x5c5fffff,0xeeffffff,0x800fffff,0xff95fff8,0x85fff80f,0x3fa0fffe,
    0x3fee007f,0x7fc02fff,0x2fffffff,0x7fffec00,0x7fd4004f,0x5bff202f,
    0xff94fff8,0x7fff880b,0xfffffb80,0x36601fff,0xefffffff,0x09fff900,
    0x03bffee0,0x3ffffff2,0x02ffffff,0x25fffe98,0x441dfffb,0x8803fffe,
    0xfff95fff,0xc85fff80,0xfff12fff,0x3ffe2009,0x7fc06fff,0x6ffffeff,
    0x7fffcc00,0x7fd4000f,0x9bff202f,0xffc8fffc,0x1fffe405,0x33bfff60,
    0x401fffff,0xffffffc9,0x1fffff05,0x1ffffa80,0x3ffffee0,0x01fffeff,
    0x54ffff50,0xff303fff,0xfff1009f,0xf01fff2b,0xfff30bff,0x00bffea9,
    0x7fffffe4,0x53ffe03f,0x004fffd8,0x0027ffec,0x9017ffd4,0x7ffc4dff,
    0x2205ffcc,0x7e407fff,0x3ffa64ff,0x3fea006f,0xfff80fff,0x3fe603ff,
    0xa98801ff,0x1fffb2ac,0x87fff400,0x3e04fff9,0xff8806ff,0x01fff95f,
    0xff827ffc,0x00fff97f,0x3e7fffe6,0xfff00fff,0x0ffff449,0x05fff500,
    0x05fff500,0x3f637fe4,0x205ffdff,0x2203fffc,0xffd05fff,0x7fc4003f,
    0xfffa82ff,0xffff303f,0xfff00003,0x7ffc400d,0x817ffe27,0xf9805fff,
    0x1fff74ff,0x40fffe20,0xfff9fffc,0x7fffb005,0x7c17fff6,0x7ffdc4ff,
    0x3ffea004,0xfffa8002,0x31bff202,0x0bffffff,0x803fffe2,0xf502fffa,
    0xfd8005ff,0xfff902ff,0x3ffff305,0xfff50000,0x7ffdc007,0x407fffc5,
    0x4013fffa,0xff53fffb,0x3ffee07f,0xfbfff501,0xff5005ff,0x7fffc4df,
    0x444fff81,0x5000ffff,0x50005fff,0x7e405fff,0xffffe86f,0x9fff905f,
    0x03fffa80,0x8005fff5,0xf500fffe,0xfff983ff,0xf980001f,0x20220fff,
    0x43ffffb9,0x260dfffb,0x3b51fffe,0x11ffffa8,0xf983ffff,0x3fe206ff,
    0x800fffff,0x7e42fffe,0x4fff86ff,0x004fffc8,0x0005fff5,0x6405fff5,
    0xfffa86ff,0xfff885ff,0x7ffcc00f,0x0fffd80f,0xd98137d7,0x3f206fff,
    0x7fffcc6f,0xaaaaaaac,0x2aa66620,0x643ffffd,0xffffeeff,0xfff884ff,
    0xffffeeff,0x3fbffea4,0x7e45ffff,0xffeeefff,0x7fec02ff,0xfb806fff,
    0xfff886ff,0x427ffc3f,0x800ffff8,0x8002fffa,0x3202fffa,0xffff06ff,
    0x9fff70bf,0x3ffffa00,0x5ffffcce,0x3fffffee,0x41ffffff,0x40fffda9,
    0xffffffff,0x362fffff,0xffffffff,0xffffc84f,0x204fffff,0xfffffff9,
    0x7ffd45ff,0x40efffff,0xffffffe8,0xfb803fff,0x4403ffff,0xf902ffff,
    0x7ffc1fff,0x09fffb04,0x005fff50,0x405fff50,0xff706ffc,0xffff0bff,
    0x3ffe2001,0x6fffffff,0x7fffffdc,0x642fffff,0xf81effff,0xffffffff,
    0x3f62ffff,0x2effffff,0xffffff90,0xfb10019f,0x105dffff,0x7ffffff9,
    0xfffffb80,0xff1001df,0xfc803fff,0x3fe206ff,0x13ffe4ff,0x007fffcc,
    0x000bffea,0xc80bffea,0xfff106ff,0x4fffb8bf,0x7ffe4400,0xda82efff,
    0xffffffff,0x3effc80c,0x3fffffe0,0x2fffffff,0x33bbfff6,0x19998802,
    0x00d44000,0x20003310,0x000001a9,0x00000000,0x00000000,0x00000000,
    0x9a988000,0x35333000,0x00018801,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x7774c000,
    0x45dddb05,0xd7004eea,0x3bbba25d,0xeeeeeeee,0xddddd91e,0x29dddddd,
    0xd100eeeb,0x7e4407dd,0xddd100ff,0xdddddddd,0x3bbbba25,0x94eeeeee,
    0x59bddddd,0x3ee98003,0x77407764,0x2cceeeee,0x3bbba200,0x2777400e,
    0x365eeeb8,0xacdeeeee,0xdddb0001,0x8397005d,0x4c1ffffa,0x3ea3ffff,
    0x7ff9006f,0x3fffffe2,0x2fffffff,0xfffffffb,0x3f2bffff,0xfff100ff,
    0xffff9109,0x3ffe601f,0xffffffff,0xffffff33,0x36bfffff,0xffffffff,
    0xff5002ff,0xff07fe89,0xffffffff,0xfff7005f,0xfff807ff,0x1ffff985,
    0x3ffffffe,0x2001dfff,0x02fffffb,0xf717ffec,0xffc89fff,0x1bfea3ff,
    0xf89ffec0,0xffffffff,0xffb2ffff,0xffffffff,0x03fff2bf,0x2e27ffc4,
    0x0fffffff,0xffffff30,0x267fffff,0xffffffff,0xfffb5fff,0xffffffff,
    0x87ff700b,0xffff07ff,0xffffffff,0xffffd805,0x2fffc05f,0x3e1ffff4,
    0xffffffff,0xf8801fff,0x202fffff,0x2e7ffff8,0x7fc6ffff,0x3fea3fff,
    0x25ffb006,0xccccccc8,0x10ffffec,0x7fff7333,0x3ff21333,0x9fff100f,
    0x3fffffe2,0xff300fff,0x555555bf,0x37ffe635,0x1aaaaaaa,0x9755fffb,
    0x807ffffd,0x3fe22ffc,0x33bfff06,0x0bfffd73,0xfffffff8,0x717ffe00,
    0xfff0dfff,0xfff9555d,0xffd801df,0x2202ffff,0xf91fffff,0x3e61ffff,
    0x3e64ffff,0x5ffb007f,0x3fffa200,0x0bffea03,0x8807ffe4,0x3ffa4fff,
    0x00fffdbf,0x2009fff3,0xb004fff9,0x3ff20fff,0x3ff200ff,0x7c17fe61,
    0xfff884ff,0x33ffea07,0x3fe02fff,0x3fffe25f,0x885fff80,0x2602fffe,
    0x2fffbfff,0x97fffe40,0x93ffcffc,0x4c9ff9ff,0xffb007ff,0x3fff2003,
    0x17ffd405,0x100fffc8,0x67d49fff,0x201fff90,0x3004fff9,0x36009fff,
    0x3ff607ff,0x7fffe44f,0xffffffff,0x13ffe2ff,0xf903fff4,0x09fff1df,
    0xffb2fffc,0x17ffe05f,0xd027ffd4,0x5fff1bff,0x23fffd00,0xd5ffaffc,
    0x44bff5df,0x22f5c7ff,0xf9801ffe,0x7d400fff,0xfff902ff,0x13ffe201,
    0x00fffc81,0x2009fff3,0xb004fff9,0x7fd40fff,0x7fffe45f,0xffffffff,
    0x13ffe2ff,0xff037ffc,0x81fffa9f,0xfff75fff,0x82fffc0b,0xf705fff8,
    0x5fff11ff,0x6cfff700,0xf8ffe9ff,0x225ffacf,0x07ffc7ff,0xe8801ffd,
    0xfa803fff,0xfff902ff,0x13ffe201,0x201fff90,0x3004fff9,0x36009fff,
    0x7ffc07ff,0x7fff75c7,0xeeffeeee,0x213ffe2e,0xf303fffc,0x3fff25ff,
    0xf1bfff01,0x7fc01dff,0x9fff305f,0x227fff10,0xfe802fff,0x327ff64f,
    0xf99ffdff,0xf33ffc5f,0x07ff47ff,0x017fff20,0xc817ffd4,0xeeeeefff,
    0x404fffee,0xf300fffc,0x333339ff,0x7fffcc33,0x1eeeeeee,0xfe80fffb,
    0x8dff107f,0xfff02ffc,0xfffd999d,0x87ffdc09,0xff04fffa,0x03fffbbf,
    0xf705fff8,0xdffb05ff,0x4417ffc4,0x6c6ffea9,0xffff98ff,0xff8dff37,
    0x4bfff90f,0x7fcc07ff,0xff5000ff,0x3fff205f,0xffffffff,0x7fe404ff,
    0xffff300f,0x4fffffff,0xfffffff9,0xffb2ffff,0x0fffe80f,0x7ec5ff88,
    0xfffff01f,0x01bfffff,0x3fe2ffec,0xfffff06f,0xfff009ff,0x1ffff30b,
    0x221fffa8,0xffe82fff,0x7ff41eff,0x269ffff0,0x87ffc6ff,0xff0ffffe,
    0x2fffe80f,0x0bffea00,0x7fffffe4,0x4fffffff,0x807ffe40,0xfffffff9,
    0x3fe67fff,0xffffffff,0x80fffb2f,0xf980fffd,0x807ff45f,0xffffffff,
    0xf882ffff,0x7ffec3ff,0xffefff80,0x7ffc00ff,0xfffdcaae,0x44ffe83f,
    0xfe82fff8,0x1ffd02ef,0x7cc7fff2,0x447ff47f,0xff2ffeff,0x2fffe40f,
    0x0bffea00,0x555fffe4,0x4fffbaaa,0x807ffe40,0xfffffff9,0x3fe67fff,
    0xaaaaaadf,0x80fffb0a,0xff507ffe,0x3e07fe89,0xeca99dff,0x7d40ffff,
    0x7ffdc1ff,0xfcdfff82,0x7ffc05ff,0xffffffff,0x40effc85,0x0982fff8,
    0x3ea7ff80,0xd1ffe27f,0xf5ff73ff,0x4c1bfebf,0x4000ffff,0xf902fffa,
    0x3fe201ff,0x7ffe404f,0x09fff300,0x013ffe60,0x3e03ffec,0x3ffea6ff,
    0xffffffff,0x7ffc4fff,0x89fffd04,0xff987ffc,0x8dfff85f,0x3e02fffe,
    0xffffffff,0xbfff982e,0xfffa9999,0x7c00099b,0x893fe27f,0x4ffec7ff,
    0xf1fff6fd,0x3fffa0df,0xfffa8002,0x01fff902,0x9013ffe2,0x3e601fff,
    0xff3004ff,0x3ff6009f,0x97ffe607,0xfffffffa,0x4fffffff,0xfa827ffc,
    0x7fffc5ff,0xffffffff,0xf55fff87,0x3fe01fff,0x01abccff,0x3fffffea,
    0xffffffff,0xf815d42f,0xf104c47f,0x57fec1ff,0xf5ffb3ff,0xbfff90bf,
    0x3ffea000,0x01fff902,0x9013ffe2,0x3e601fff,0xff3004ff,0x3ff6009f,
    0x8bfff607,0xeefffee9,0x3eefffee,0xf9827ffc,0x3ffe65ff,0xffffffff,
    0x2fffc1ff,0x3e0bfffb,0x7d4005ff,0xffffffff,0x22ffffff,0x7c44fffd,
    0xfff8807f,0x3ff7ff60,0xbffbff51,0x00ffff98,0x05fff500,0x4403fff2,
    0x7e404fff,0xfff300ff,0x3ffe6009,0x0fffb004,0xd81bffee,0x13fea0ff,
    0xf904fff8,0x7ffe49ff,0xffffffff,0x2fffc4ff,0xf05ffff1,0xfa800bff,
    0xffffffff,0x32ffffff,0x443fffff,0xfff007ff,0x37fffe41,0x8bfffff1,
    0xaaadfffe,0x500aaaaa,0x3f205fff,0xfff100ff,0x6ccccc49,0x09999fff,
    0x2009fff3,0x999cfff9,0xffb09999,0xffd5333f,0x3ff403ff,0xff80ffea,
    0x3ff2624f,0x17ffa2ff,0x7c6fff88,0x7ffdc5ff,0x02fffc0f,0x7ffcc000,
    0xfffffa82,0x401bfe22,0x3ff21fff,0x7ffec4ff,0x3fffea4f,0xffffffff,
    0xfffffb3f,0x2bffffff,0xf100fffc,0x7ffec9ff,0xffffffff,0x09fff33f,
    0x3ffffe60,0xb5ffffff,0xffffffff,0xff807fff,0xf01ffdc7,0xffffffff,
    0x7fc49fff,0x7fff403f,0x3a17ffe0,0x7ffc5fff,0xf9800005,0xfff982ff,
    0x1bfe60ff,0xf70fffc0,0xffa83fff,0x3ffea4ff,0xffffffff,0xffffb3ff,
    0xbfffffff,0x4403fff2,0x3ff64fff,0xffffffff,0x9fff33ff,0x3fffe600,
    0x5fffffff,0xfffffffb,0xf8801dff,0x017fe46f,0xffffffff,0xffb89fff,
    0x7ffdc00f,0x2617ffe3,0x3fe3ffff,0x9800005f,0xff702fff,0x06ff985f,
    0x7dc5fff0,0xfff887ff,0x3fffea3f,0xffffffff,0xfffffb3f,0x2bffffff,
    0xf100fffc,0x7ffec9ff,0xffffffff,0x09fff33f,0x3ffffe60,0xb5ffffff,
    0x79dfffff,0x17fe2005,0x7fc03ffb,0xbdefffff,0x806ffd80,0x3fe5fff9,
    0xffff905f,0x0017ffe1,0x0bffe600,0x00000988,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x77740000,
    0x00488004,0x44019000,0x01bcccca,0x01599730,0x5665d440,0x332ea201,
    0xcba8801a,0x2aa0accc,0x2555302a,0x32e22aa8,0x20aaa82c,0xaa81bccb,
    0x65417951,0xccc8801c,0x06aaa600,0x2a355510,0x553001aa,0x2aaaaa65,
    0x31aaaaaa,0xfff83555,0x6ff44005,0xfb100000,0xfffe881d,0x01efffff,
    0xffffffd1,0xfffe9809,0xfb83ffff,0x0dffffff,0xffffff90,0x2fffc9ff,
    0xff37ffd8,0xfffff71f,0x4d7ff43d,0x22ffffff,0xfffbcff8,0x03ffff77,
    0x201fff88,0x5c05fff9,0xbffb2fff,0x5d7fee00,0xffffffff,0xfff74fff,
    0x005fff87,0x0077ffec,0x3fffa200,0x7ffffc46,0x40efffff,0xfffffffa,
    0xfff706ff,0x87ffffff,0xfffffffd,0x7fec0fff,0x4fffffff,0x7ec17ffe,
    0xf9fff37f,0x4dffffff,0xffffcffe,0xff10ffff,0xf9fffffd,0x8809ffff,
    0x7f401fff,0x3ffa00ff,0x401bff27,0xfff74ffc,0xffffffff,0xf0fffea9,
    0xe8800bff,0x0001ffff,0x81dffff3,0x9889adf8,0x7fc4fffe,0xffd98bff,
    0x7fffd43f,0x23fedcde,0xccdffffb,0x3e65ffff,0x7330afff,0xd82fffc7,
    0xffff37ff,0xffff79ff,0x3fffffa3,0x14ffffce,0xff79ffff,0x0dff79ff,
    0x401fff88,0xf303fffb,0x3ffdc9ff,0xd53ffd80,0xffdddddd,0x3ffea7ff,
    0x002fffc2,0x03ffffd8,0x2ffffd40,0x5fff8800,0x3607ffee,0xfff10fff,
    0x7c46209f,0x7f441fff,0x7fff71ff,0x417ffe00,0xfff37ffd,0x7ffd41df,
    0x45ffffd3,0xff16fff8,0x5bffe2df,0x7c407ff8,0x7fc401ff,0x3fff906f,
    0x3107ffd4,0x802ffe83,0x3e65fffd,0x2fffc2ff,0xffff7000,0x3fff2009,
    0x7f40003f,0x41bffe6f,0xff71fffa,0x3fee00bf,0x7fff503f,0x0037ffee,
    0x7ec17ffe,0x3ffff37f,0x3fa9fff0,0x7ffe83ff,0x7fc5fff1,0x803ffe2f,
    0xd801fff8,0xfff81fff,0x88fffc46,0x3ffe1fff,0x37ffdc01,0xff07ffe6,
    0xfa8000bf,0x3600dfff,0x4002ffff,0xffeaaa98,0x55bfff16,0x5fff9555,
    0x4007fff2,0xf100fffc,0x3ffeabff,0x3fe02cff,0x2fffb05f,0x9903fff9,
    0x41bffa59,0xfff17ffd,0xff07ffc1,0x3bbbb21f,0xeeeefffe,0x27ffd45e,
    0x3e0fffea,0x7fff52ff,0xf5007ffc,0xff881fff,0x02fffc1f,0x7fff4c00,
    0x7fff440e,0x3fae001e,0x6fffffff,0xfffffff3,0x27ffffff,0xb000fffe,
    0xfff80fff,0x3fffff66,0x7ffc1cff,0x26fffb05,0x3a003fff,0xfffb05ff,
    0xff83ffe2,0x743ffe0f,0xffffffff,0xe86fffff,0x7ffec7ff,0xfb3ffe80,
    0x1ffe2dff,0x82ffff88,0x7fc0fff8,0xd100005f,0x3a21ffff,0x1000efff,
    0xfffffffd,0x3feadfff,0xffffffff,0xffff3fff,0x03fff400,0xff71bffa,
    0x47ffffff,0xffb05fff,0x00fffe6f,0xfb05ffe8,0x83ffe2ff,0x3ffe0fff,
    0xffffffd0,0xdfffffff,0x225fff70,0xffb04fff,0x27ffffe9,0x3fa06ff9,
    0x066604ff,0x00017ffe,0x227fffdc,0x003ffffc,0x335dfffb,0x3eadffd3,
    0x99999bff,0xffd09999,0x3ff6001f,0x82fffc07,0xffffffda,0x360bfff1,
    0x7fff37ff,0x82fff400,0xfff17ffd,0xff07ffc1,0x2666621f,0x999afffa,
    0x5fff8809,0x3203fff7,0xfeffadff,0x904ffacf,0x4000dfff,0x80005fff,
    0x502ffffc,0x880bffff,0xffb06fff,0x00fffe2d,0x007fff90,0x4c07fff2,
    0xfa804fff,0xbfff4fff,0x7cdfffa0,0x3fa003ff,0x2fffb05f,0x3fe0fff8,
    0x803ffe0f,0x2001fff8,0xffe8fffd,0x33bfee06,0xfbfffaff,0xffffa83f,
    0x3ffe0000,0x3f620005,0x7cc01fff,0xf300efff,0xfff109ff,0x0037ffcd,
    0x003fffee,0x6417ffee,0xf5002fff,0x1fffabff,0x7cdffff6,0x3fa003ff,
    0x2fffb05f,0x3fe0fff8,0x803ffe0f,0x2001fff8,0xfffbfffa,0x3fffea03,
    0xffdffd6f,0x1ffff985,0x2fffc000,0xfffe8800,0xffd1000e,0xfff303df,
    0x6ffff98d,0x4037fff2,0x3fffe208,0x44ae60af,0x2e24ffff,0x806a6fff,
    0xffb3fffc,0x3fff625f,0x07fff37f,0xd82fff40,0x1fff17ff,0xfff07ffc,
    0x0fffc401,0x3ffffe00,0x3fe600ff,0xfff74fff,0x7ff443ff,0x999999cf,
    0x0bfff000,0xbffff500,0xffd88001,0xffff82ff,0xfffffecf,0x3ffffe26,
    0x44feecce,0xfffffffa,0x3fee3fff,0xffffefff,0x337ff21f,0x1ffffecb,
    0xfffffff7,0x3e6fffff,0x3fa003ff,0x2fffb05f,0x3fe0fff8,0x803ffe0f,
    0x4001fff8,0x05fffffc,0x31fffff8,0x641fffff,0xffffffff,0xff005fff,
    0xffb800bf,0x640004ff,0x7dc3ffff,0xbfffffff,0x7ff4c6ff,0x4fffffff,
    0xffffffb8,0x7fec3fff,0x2fffffff,0x7fffffe4,0x7f42ffff,0xfaefffff,
    0x07fff37f,0xd82fff40,0x1fff17ff,0xfff07ffc,0x0fffc401,0x3fffe200,
    0xfffe802f,0x23ffff46,0xfffffffd,0xf005ffff,0xfb800bff,0x700003ff,
    0xff709fff,0xff319fff,0x3ffff20d,0xb103efff,0x3bffffff,0xfffffd50,
    0xffff701b,0x103bffff,0x269ffffb,0x7fff37ff,0x82fff400,0xfff17ffd,
    0xff07ffc1,0x0199801f,0x0dfffb00,0x913fff60,0xffd8dfff,0xffffffff,
    0xdfff005f,0x33333333,0x00005f70,0x54c04f98,0x2a620001,0x09980019,
    0x4002a600,0x0099a998,0x00009988,0x00000000,0x00000000,0x00000000,
    0xfff80000,0xffffffff,0x0000080f,0x00000010,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x40000000,0xffffffff,0x0000ffff,
    0xaaa80000,0x2aaaa00a,0x000aaa00,0xd8037ba2,0xeeeeeeee,0x2aa66eee,
    0x0355510a,0x80019b95,0xb01aaaa8,0xbbbbbbbb,0xbbbbbbbb,0x77777744,
    0x00000eee,0x00000000,0x3e000000,0xffffffff,0x00000fff,0xfffc8000,
    0x0bfff506,0xd8007ff8,0x3fe04fff,0xffffffff,0x3ffee7ff,0xd87fff32,
    0xc83fffff,0x7ffd41ee,0xfffff81f,0xffffffff,0x3fe27fff,0x0fffffff,
    0x00000000,0x00000000,0x00000000,0xfe800000,0x7ffc44ff,0x1ffa040e,
    0xffffa801,0xfffff01f,0xffffffff,0xf98fffdc,0x3ffee3ff,0x7fc4ffff,
    0xfffe981f,0x7fffffc1,0xffffffff,0x3ffe27ff,0x00ffffff,0x00000000,
    0x00000000,0x00000000,0xff880000,0x3fff61ff,0xdfb0de81,0xfe803f62,
    0x3306ffaf,0x33333333,0x7ffd4333,0x745fff11,0xfffebdff,0x00fffb8d,
    0x4c3fffb1,0x99999999,0x19999999,0x2aaaaaa2,0x00000aaa,0x00000000,
    0x00000000,0x00000000,0x2dfff500,0xfb84fffb,0xf9dfdaff,0x7ff704ff,
    0x0000fff6,0x221fff50,0xfff12fff,0x3ffffa21,0xcb805fff,0x0000004c,
    0x00000000,0x00000000,0x00000000,0x00000000,0x3ff7fff6,0xfffd506f,
    0x5dffffff,0x7c4dff10,0x200000ff,0x3fe0fff9,0x88dff31f,0x1ffffffd,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x3ffffe20,
    0x7ed401ff,0x202effff,0x7fe42ffd,0x777776c4,0x26eeeeee,0x7ffc7ff9,
    0x3ffee001,0x0000000d,0x00000000,0x00000000,0x00000000,0x00000000,
    0xfff98000,0xfb8803ff,0x300bffff,0xfff10bff,0x7fffffc3,0x27ffffff,
    0x7ff47ff8,0x00008000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x80000000,0x201ffffe,0xffffffc8,0x7f40cfff,0x4dff701f,0xffffffff,
    0x4cc7ffff,0x0000cc41,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0xffffc800,0x3fff606f,0xfffcdfdc,0xb013baa5,0x266665dd,
    0x99999999,0x00000001,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0xfffffa80,0x5ff104ff,0x0ffd5bf6,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0xff3ffff1,
    0xe82a05ff,0x0000a26f,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0xffd00000,0x3fffea5f,0x007ff800,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x20000000,
    0x7ec4fffc,0x4cc805ff,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x81dfff50,0x003ffff8,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x0bfffe20,0x00ffffd4,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,
};

static signed short stb__consolas_bold_31_usascii_x[95]={ 0,6,3,0,1,0,0,6,4,3,2,1,3,3,
5,1,0,1,1,2,0,2,1,1,1,1,5,3,1,2,2,4,0,0,1,1,1,2,2,0,1,2,2,1,
2,0,1,0,2,0,1,1,1,1,0,0,0,0,1,4,1,3,1,0,0,1,2,2,1,1,0,1,2,2,
1,2,2,0,2,1,2,1,2,2,0,2,0,0,0,0,2,2,6,3,0, };
static signed short stb__consolas_bold_31_usascii_y[95]={ 23,1,1,3,0,1,1,1,0,0,1,7,17,13,
17,1,2,3,2,2,3,3,3,3,2,2,7,7,6,10,6,1,1,3,3,2,3,3,3,2,3,3,3,3,
3,3,3,2,3,2,3,2,3,3,3,3,3,3,3,0,1,0,3,26,1,7,1,7,1,7,1,7,1,0,
0,1,1,7,7,7,7,7,7,7,2,7,7,7,7,7,7,0,-2,0,11, };
static unsigned short stb__consolas_bold_31_usascii_w[95]={ 0,5,11,17,15,18,18,5,10,10,14,15,9,11,
7,15,17,15,15,14,17,14,15,15,15,15,7,9,14,14,14,11,17,17,15,15,16,13,13,16,15,13,12,16,
14,17,15,17,14,18,16,15,15,15,18,17,17,17,15,9,15,9,15,18,11,14,14,13,14,15,16,16,13,14,
13,15,14,17,13,15,14,14,14,13,15,13,17,17,17,17,13,12,5,12,17, };
static unsigned short stb__consolas_bold_31_usascii_h[95]={ 0,23,9,20,27,23,23,9,30,30,14,16,12,4,
7,26,22,20,21,22,20,21,21,20,22,21,17,22,18,10,18,23,29,20,20,22,20,20,20,22,20,20,21,20,
20,20,20,22,20,27,20,22,20,21,20,20,20,20,20,30,26,30,10,4,7,17,23,17,23,17,22,23,22,23,
30,22,22,16,16,17,23,23,16,17,22,17,16,16,16,23,16,30,32,30,8, };
static unsigned short stb__consolas_bold_31_usascii_s[95]={ 248,174,110,144,107,229,210,248,78,20,64,
182,246,171,246,142,220,83,43,189,228,75,90,239,1,59,248,33,31,95,16,
19,89,178,162,204,127,113,99,238,67,53,106,196,1,1,223,171,213,123,172,
17,207,119,135,19,154,189,37,68,158,31,79,152,140,46,195,77,46,61,109,
76,141,61,54,93,126,164,150,91,31,180,135,107,155,121,198,216,46,1,234,
41,1,7,122, };
static unsigned short stb__consolas_bold_31_usascii_t[95]={ 19,1,120,81,1,1,1,102,1,1,120,
102,81,120,94,1,34,81,58,34,81,58,58,58,58,58,1,58,102,120,102,
34,1,81,81,34,81,81,81,34,81,81,58,81,102,81,58,34,81,1,58,
58,58,58,58,81,58,58,81,1,1,1,120,120,120,102,1,102,34,102,34,
34,34,34,1,34,34,102,102,102,34,1,102,102,34,102,102,102,120,34,102,
1,1,1,120, };
static unsigned short stb__consolas_bold_31_usascii_a[95]={ 273,273,273,273,273,273,273,273,
273,273,273,273,273,273,273,273,273,273,273,273,273,273,273,273,
273,273,273,273,273,273,273,273,273,273,273,273,273,273,273,273,
273,273,273,273,273,273,273,273,273,273,273,273,273,273,273,273,
273,273,273,273,273,273,273,273,273,273,273,273,273,273,273,273,
273,273,273,273,273,273,273,273,273,273,273,273,273,273,273,273,
273,273,273,273,273,273,273, };

// Call this function with
//    font: NULL or array length
//    data: NULL or specified size
//    height: STB_FONT_consolas_bold_31_usascii_BITMAP_HEIGHT or STB_FONT_consolas_bold_31_usascii_BITMAP_HEIGHT_POW2
//    return value: spacing between lines
static void stb_font_consolas_bold_31_usascii(stb_fontchar font[STB_FONT_consolas_bold_31_usascii_NUM_CHARS],
                unsigned char data[STB_FONT_consolas_bold_31_usascii_BITMAP_HEIGHT][STB_FONT_consolas_bold_31_usascii_BITMAP_WIDTH],
                int height)
{
    int i,j;
    if (data != 0) {
        unsigned int *bits = stb__consolas_bold_31_usascii_pixels;
        unsigned int bitpack = *bits++, numbits = 32;
        for (i=0; i < STB_FONT_consolas_bold_31_usascii_BITMAP_WIDTH*height; ++i)
            data[0][i] = 0;  // zero entire bitmap
        for (j=1; j < STB_FONT_consolas_bold_31_usascii_BITMAP_HEIGHT-1; ++j) {
            for (i=1; i < STB_FONT_consolas_bold_31_usascii_BITMAP_WIDTH-1; ++i) {
                unsigned int value;
                if (numbits==0) bitpack = *bits++, numbits=32;
                value = bitpack & 1;
                bitpack >>= 1, --numbits;
                if (value) {
                    if (numbits < 3) bitpack = *bits++, numbits = 32;
                    data[j][i] = (bitpack & 7) * 0x20 + 0x1f;
                    bitpack >>= 3, numbits -= 3;
                } else {
                    data[j][i] = 0;
                }
            }
        }
    }

    // build font description
    if (font != 0) {
        float recip_width = 1.0f / STB_FONT_consolas_bold_31_usascii_BITMAP_WIDTH;
        float recip_height = 1.0f / height;
        for (i=0; i < STB_FONT_consolas_bold_31_usascii_NUM_CHARS; ++i) {
            // pad characters so they bilerp from empty space around each character
            font[i].s0 = (stb__consolas_bold_31_usascii_s[i]) * recip_width;
            font[i].t0 = (stb__consolas_bold_31_usascii_t[i]) * recip_height;
            font[i].s1 = (stb__consolas_bold_31_usascii_s[i] + stb__consolas_bold_31_usascii_w[i]) * recip_width;
            font[i].t1 = (stb__consolas_bold_31_usascii_t[i] + stb__consolas_bold_31_usascii_h[i]) * recip_height;
            font[i].x0 = stb__consolas_bold_31_usascii_x[i];
            font[i].y0 = stb__consolas_bold_31_usascii_y[i];
            font[i].x1 = stb__consolas_bold_31_usascii_x[i] + stb__consolas_bold_31_usascii_w[i];
            font[i].y1 = stb__consolas_bold_31_usascii_y[i] + stb__consolas_bold_31_usascii_h[i];
            font[i].advance_int = (stb__consolas_bold_31_usascii_a[i]+8)>>4;
            font[i].s0f = (stb__consolas_bold_31_usascii_s[i] - 0.5f) * recip_width;
            font[i].t0f = (stb__consolas_bold_31_usascii_t[i] - 0.5f) * recip_height;
            font[i].s1f = (stb__consolas_bold_31_usascii_s[i] + stb__consolas_bold_31_usascii_w[i] + 0.5f) * recip_width;
            font[i].t1f = (stb__consolas_bold_31_usascii_t[i] + stb__consolas_bold_31_usascii_h[i] + 0.5f) * recip_height;
            font[i].x0f = stb__consolas_bold_31_usascii_x[i] - 0.5f;
            font[i].y0f = stb__consolas_bold_31_usascii_y[i] - 0.5f;
            font[i].x1f = stb__consolas_bold_31_usascii_x[i] + stb__consolas_bold_31_usascii_w[i] + 0.5f;
            font[i].y1f = stb__consolas_bold_31_usascii_y[i] + stb__consolas_bold_31_usascii_h[i] + 0.5f;
            font[i].advance = stb__consolas_bold_31_usascii_a[i]/16.0f;
        }
    }
}

#ifndef STB_SOMEFONT_CREATE
#define STB_SOMEFONT_CREATE              stb_font_consolas_bold_31_usascii
#define STB_SOMEFONT_BITMAP_WIDTH        STB_FONT_consolas_bold_31_usascii_BITMAP_WIDTH
#define STB_SOMEFONT_BITMAP_HEIGHT       STB_FONT_consolas_bold_31_usascii_BITMAP_HEIGHT
#define STB_SOMEFONT_BITMAP_HEIGHT_POW2  STB_FONT_consolas_bold_31_usascii_BITMAP_HEIGHT_POW2
#define STB_SOMEFONT_FIRST_CHAR          STB_FONT_consolas_bold_31_usascii_FIRST_CHAR
#define STB_SOMEFONT_NUM_CHARS           STB_FONT_consolas_bold_31_usascii_NUM_CHARS
#define STB_SOMEFONT_LINE_SPACING        STB_FONT_consolas_bold_31_usascii_LINE_SPACING
#endif

