// Font generated by stb_font_inl_generator.c (4/1 bpp)
//
// Following instructions show how to use the only included font, whatever it is, in
// a generic way so you can replace it with any other font by changing the include.
// To use multiple fonts, replace STB_SOMEFONT_* below with STB_FONT_times_bold_19_latin1_*,
// and separately install each font. Note that the CREATE function call has a
// totally different name; it's just 'stb_font_times_bold_19_latin1'.
//
/* // Example usage:

static stb_fontchar fontdata[STB_SOMEFONT_NUM_CHARS];

static void init(void)
{
    // optionally replace both STB_SOMEFONT_BITMAP_HEIGHT with STB_SOMEFONT_BITMAP_HEIGHT_POW2
    static unsigned char fontpixels[STB_SOMEFONT_BITMAP_HEIGHT][STB_SOMEFONT_BITMAP_WIDTH];
    STB_SOMEFONT_CREATE(fontdata, fontpixels, STB_SOMEFONT_BITMAP_HEIGHT);
    ... create texture ...
    // for best results rendering 1:1 pixels texels, use nearest-neighbor sampling
    // if allowed to scale up, use bilerp
}

// This function positions characters on integer coordinates, and assumes 1:1 texels to pixels
// Appropriate if nearest-neighbor sampling is used
static void draw_string_integer(int x, int y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0, cd->t0); glVertex2i(x + cd->x0, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t0); glVertex2i(x + cd->x1, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t1); glVertex2i(x + cd->x1, y + cd->y1);
        glTexCoord2f(cd->s0, cd->t1); glVertex2i(x + cd->x0, y + cd->y1);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance_int;
    }
    glEnd();
}

// This function positions characters on float coordinates, and doesn't require 1:1 texels to pixels
// Appropriate if bilinear filtering is used
static void draw_string_float(float x, float y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0f, cd->t0f); glVertex2f(x + cd->x0f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t0f); glVertex2f(x + cd->x1f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t1f); glVertex2f(x + cd->x1f, y + cd->y1f);
        glTexCoord2f(cd->s0f, cd->t1f); glVertex2f(x + cd->x0f, y + cd->y1f);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance;
    }
    glEnd();
}
*/

#ifndef STB_FONTCHAR__TYPEDEF
#define STB_FONTCHAR__TYPEDEF
typedef struct
{
    // coordinates if using integer positioning
    float s0,t0,s1,t1;
    signed short x0,y0,x1,y1;
    int   advance_int;
    // coordinates if using floating positioning
    float s0f,t0f,s1f,t1f;
    float x0f,y0f,x1f,y1f;
    float advance;
} stb_fontchar;
#endif

#define STB_FONT_times_bold_19_latin1_BITMAP_WIDTH         256
#define STB_FONT_times_bold_19_latin1_BITMAP_HEIGHT        110
#define STB_FONT_times_bold_19_latin1_BITMAP_HEIGHT_POW2   128

#define STB_FONT_times_bold_19_latin1_FIRST_CHAR            32
#define STB_FONT_times_bold_19_latin1_NUM_CHARS            224

#define STB_FONT_times_bold_19_latin1_LINE_SPACING          12

static unsigned int stb__times_bold_19_latin1_pixels[]={
    0x2000cc40,0x13300099,0x80026000,0x98800098,0x03319800,0x3260de98,
    0x4062002c,0x40188bc8,0xa80d41ba,0x2aa20933,0x554cc40a,0x055510aa,
    0x2006f2a2,0x4c07302a,0x04001801,0x0c26ee60,0x3001fdc0,0x27dc00bf,
    0x007fe400,0xe8006f98,0xfbfc406f,0x207f200f,0x095004fe,0x007fffec,
    0x02c9365d,0x303fb1fd,0x7fff70df,0x47f881d3,0xed98bfc8,0xc81ff101,
    0x00bf200d,0x412003b1,0xeeb9befb,0x4004e803,0x07b8006c,0x0275fcc0,
    0x5c003f30,0x9dc02fbe,0xd80f404b,0x406a804f,0x3dc03952,0x298164f9,
    0x713e6051,0x0b15ffff,0x887fd1fe,0x98bb02ff,0x805d803f,0xb83800e9,
    0x8807d06f,0x000b8003,0x8ec00170,0x066000d8,0x05886c40,0xfb004000,
    0x403f8809,0x3201aba8,0x8164314f,0xf301aba8,0xaffffe89,0x7e4ff058,
    0x00efc81f,0x0e009f50,0x06a02f40,0x0ea03ff5,0x301aba88,0x2a155555,
    0x2aaa62aa,0x055550aa,0x800d5d44,0x5301aba8,0x2aa15555,0x233bae2a,
    0x9dd70dc8,0x7ec1b911,0x7e41efcc,0x315f9101,0xbff103db,0x7e442c81,
    0x4c1ed98a,0x7ffffc4f,0x7cff058a,0x85ff507f,0x17e20eec,0x1fb800c0,
    0x7ec3fcb8,0x7e440407,0xa81ed98a,0xa85b85ff,0x105b85ff,0x3db315f9,
    0x262bf220,0x5ffa81ed,0x25fe85b8,0x752ff43a,0xff9affd8,0x7f403fe0,
    0x6c17fc43,0xd0b21efe,0x22ff887f,0x7ffec4f9,0x2ff058af,0xff506ff8,
    0x7c0ff989,0x70069805,0xff8cf89f,0x2001bfe1,0x17fc43fe,0x0e613fe2,
    0x0e613fe2,0x3fe21ff4,0x7c43fe82,0x427fc42f,0x90ffa839,0x2121ff50,
    0x44ffe4fd,0x1ffc80ff,0x2f20efc8,0x4130ffd8,0xefc81ffc,0xffa89f30,
    0xff058aff,0x7cc17fe6,0x307fc45f,0x03fb003f,0x57d4df50,0xbff30ebb,
    0x81ffc800,0x3fe20efc,0xff883984,0xffc83984,0x320efc81,0x0efc81ff,
    0x0e613fe2,0xfd039ff4,0xd93f60e7,0x3e0ff35f,0x45ff707f,0x7c0fee2f,
    0x25ff707f,0xfffa84f9,0x74ff058a,0x87ff506f,0x03930ff8,0x300bff30,
    0x4257ecff,0x7c006ff8,0x45ff707f,0x83984ff8,0x83984ff8,0x5ff707ff,
    0xffb83ffc,0x2613fe22,0x035ff703,0x3606bfee,0x7cd7f64f,0x506ff887,
    0x83be29ff,0x06ff885d,0x13e69ff5,0xf058ad98,0xfb837e4f,0x987fc41f,
    0xffdc802c,0xfd3fcc00,0x01ffa05d,0xf506ff88,0x427fc49f,0x84ff8839,
    0x837fc439,0xdff14ffa,0xf893fea0,0xf103984f,0x2ffc40bf,0x4ffa4fd8,
    0x7fcc0ff8,0x649ff505,0x4265b1ff,0xff505ff9,0x57013e69,0xf99fe0b1,
    0x885fd81f,0x80be20ff,0x404ff9c8,0x81ff26fa,0x41103ffa,0xff505ff9,
    0x4c27fc49,0x984ff883,0xa82ffcc3,0x0bff34ff,0xff893fea,0x3f203984,
    0xd81fe403,0x743ff0ef,0x837fc40f,0x7fe42ffa,0x7fc4b22d,0x265ff506,
    0x2c55c04f,0x22fd47f8,0xff880ef9,0x21702fc0,0x27dc07fe,0x8373bff3,
    0x06c40ffb,0x3ea0dff1,0x213fe22f,0x84ff8839,0x837fc439,0xdff12ffa,
    0xf88bfea0,0x2203984f,0x807c400f,0x42feedfd,0x06fe81fb,0x3fea0ff9,
    0x06fe8b23,0x027ccff9,0x3fc162ae,0x67edfe44,0x4c1ff100,0xffb9205f,
    0xf907f203,0x3f6a07ff,0xdfd04dce,0x3fe1ff20,0x9ff02a84,0x0dfd0550,
    0x0dfd1ff2,0x13fe1ff2,0x200900aa,0x0053f604,0x03ff509f,0x3a6309fb,
    0x7fd4590f,0x3e64fd81,0x82c55c04,0x0ffea07f,0x7d41ff10,0xf999b503,
    0xa42f40df,0x50076000,0x09fb03ff,0x20370bfd,0xa81b85fe,0x44fd81ff,
    0x4fd81ffa,0x41b85fe8,0xb101a8d8,0x27ec0351,0x7e407cc0,0x2e077d45,
    0x0b21f51f,0x0efa8bf9,0x157013e6,0xf901fe0b,0xff17103f,0x70b03f98,
    0x81d305ff,0x2ec40029,0x3ea2fe40,0x20ffc80e,0x83ff2048,0x517f2048,
    0x8bf901df,0xffc80efa,0x33ea1220,0x0133ea04,0x326009fd,0xecbfea80,
    0x9723f104,0xcbfea82c,0x01ef984e,0xf31162ae,0x9ffb700f,0x213e3ea1,
    0x441dc0eb,0x4064c6ff,0x03e98003,0x9d97fd50,0xccdffb80,0x66ffdc00,
    0x5ff5400c,0x7f5404ec,0x7dc04ecb,0x7700ccdf,0xda807700,0x002002de,
    0x59730013,0x004c02b8,0x89a80666,0x000ccc44,0x51015d40,0xf71177dc,
    0x080219ff,0x20001800,0x00440009,0x98000440,0x00098000,0x00000044,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x22003773,0x01980009,0x04cc0130,0x22002620,0x00371009,
    0x06a0a595,0x91003310,0x18800723,0xa8013100,0xb8e4052c,0x50014402,
    0xc8803267,0x17100391,0x1bee0000,0x332a015c,0x8807710a,0x1fdc007f,
    0xb807fe40,0x00ff403f,0xf8803be2,0x3fffe603,0x7ec02c83,0xf9cfa802,
    0x07ff1005,0x2604ff88,0xf303ffff,0x6440df1b,0xb1fd004a,0x4e7d403f,
    0x3af2205f,0x059901dc,0x2a1fefc4,0x80b500ff,0x00fcc028,0x7f3009d0,
    0x3036409d,0x01d5003f,0xb88c0f90,0x2f805903,0x00542a00,0x200fbdd8,
    0x2301fbec,0xa85403b8,0x80246a01,0x15005129,0x2b4e802a,0x4091a84b,
    0x7d41d34c,0x5005a80f,0x20029803,0x06c3b003,0x006a0170,0x0fd80054,
    0x5502aaa6,0x2880b255,0x555554c0,0x26055550,0x86c412a4,0x4c018049,
    0x200aaaaa,0x2aa602cc,0x02aaaaaa,0x5afcc018,0x8127220e,0x0ff30440,
    0xeacd88d3,0xaaaa98a4,0x2a62aaaa,0x2aaaaaaa,0x2aaaaaa6,0x2aaa62aa,
    0x555530aa,0xf0018015,0x41dff90f,0x2a590dc8,0x2a21aaaa,0x17fea0aa,
    0x200c016e,0x00aaaaa9,0x3fe601a6,0x98069806,0x6fba9dff,0x7fc034c0,
    0x1028805e,0x83bb29db,0x3e23b85f,0x261c7fd4,0x6fba9dff,0x5d4effcc,
    0x4effcc6f,0x7fcc6fba,0x806ff986,0x10df0069,0x2388bfff,0x09ffb12c,
    0x4ff883f3,0x06980398,0xd806ff98,0x2ffc401f,0x7c00fec0,0x3603444f,
    0x7ffdc01f,0x3dd99103,0x3fe6bfb0,0xd8360fa0,0x41c3ff0f,0x7c3444ff,
    0x7fc3444f,0x3fe23444,0x805ff885,0x87b801fd,0x223ffec8,0x7ff88b23,
    0x4ff883a8,0x1fd80398,0x202ffc40,0xff805ff9,0x02ffcc04,0x80e327fc,
    0xfb805ff9,0x8b6c0dff,0x9afe40ff,0x9a0b20ff,0x28ff16f9,0x41c64ff8,
    0x7c1c64ff,0x7fc1c64f,0x9809ff04,0x195005ff,0x97ffc5c4,0xff70b238,
    0x9ff10587,0xff980730,0x404ff805,0x7c00ffdc,0x7fee404f,0x29a7fc00,
    0x00ffdc80,0x743fff88,0x641ff88f,0x5c1ff35f,0x27f92c40,0x3e0a24fc,
    0x7fc0534f,0xa7fc0534,0x413fe029,0x7ee404ff,0x20cc800f,0x11fff338,
    0x3ffc1647,0x13fe2037,0xffb900e6,0x204ff801,0x404ff9c8,0x272204ff,
    0x6ffc04ff,0x4e4402ea,0xfbb004ff,0xffc9888d,0xff9afe41,0x3fd2c020,
    0xf81c5fd3,0x3e02eadf,0x3e02eadf,0x3e02eadf,0x409ff04f,0x404ff9c8,
    0x3ee3887c,0x20b238ef,0x2048bffb,0x03984ff8,0x013fe722,0xe85c09ff,
    0x027fc07f,0xf01ffa17,0xb805fbdf,0x8a20ffd0,0x8dd88df5,0x9afe41ff,
    0x9a06a0ff,0x71fdbdfe,0xfbdff061,0x7ef7fc05,0x3f7bfe02,0x7c13fe02,
    0x7f42e04f,0x1c437c07,0x2c8f7ff2,0x401bffd0,0x03984ff8,0x203ff42e,
    0xfb9204ff,0x813fe03f,0xf80ffee4,0x2480574f,0x26883ffb,0x88fd85f5,
    0xcb7dc1ff,0x81ff50ff,0x3aa9f51b,0xff8190ac,0xa7fc0574,0x5d3fe02b,
    0x7c13fe02,0xffb9204f,0x0e21fa03,0x02c8fffa,0xff009ff5,0x72405509,
    0x27fc07ff,0xffcccda8,0x5413fe06,0x06ffcccd,0x831453fe,0x6ffcccda,
    0x3cebee88,0x7fe67fc4,0x7dfff442,0x160df34f,0x4ff83a80,0x53fe0c51,
    0x29ff0628,0x09ff0628,0x66d413fe,0x3606ffcc,0x7c41c40f,0x7c40b23f,
    0x85fe803f,0x999b501b,0x27fc0dff,0x02ffb858,0x2e1609ff,0x49ff02ff,
    0xfb858750,0x40b3102f,0x05fd8bfd,0x12600803,0x27fc1260,0x49ff0ea1,
    0x24ff8750,0x04ff8750,0x2e1609ff,0x30f902ff,0x2c8fe60b,0x9007ff10,
    0xb02441ff,0x3e05ff70,0xf883b84f,0x85ff886f,0x86ff883b,0x174c5ff8,
    0x0dff1077,0x00000008,0x882b2200,0xbff102cb,0x3fe22e98,0xff1174c5,
    0x3e22e98b,0x85ff885f,0x86ff883b,0x5fed42f9,0x40b23a80,0xf7004ff9,
    0x2e0199bf,0x886ff883,0x177dc5ff,0x219fff71,0x70afffc9,0x7fdc45df,
    0xfff930cf,0x2e3fff9b,0x3fee22ef,0x000000cf,0x2a600000,0x32602bbb,
    0xfffcdfff,0x9bfff931,0x3f263fff,0x1fffcdff,0x215fff93,0x70afffc9,
    0x7fdc45df,0x001510cf,0x95057040,0x20015dff,0x177dc008,0x219fff71,
    0x00afffc9,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x40000000,
    0x65405128,0x1cc3200b,0xfd018854,0x01854407,0x50244055,0x0f6c0661,
    0x07b62000,0xd9004ea8,0x300a8a05,0x1ff501bd,0x20aca880,0x01b98003,
    0x4406a091,0x12203503,0x6c005d40,0xfd14c01e,0x6e885f93,0x5cf109f7,
    0x80bce884,0xff00fdfb,0xbbf88bdf,0xf302d80f,0x3a20df1b,0x0eeedc04,
    0x3f2027cc,0xb827c400,0xf704fabf,0x813fba03,0xcde98cfc,0xc989f502,
    0x443c80fd,0x883d03fc,0x807903fc,0x401fd9ea,0x51e404f8,0x9f503269,
    0xd9a61fe6,0x882fca82,0x5330771e,0xaafb83b9,0x3202d43f,0x03440592,
    0x20bf33f7,0x403d8069,0x2232204b,0x2e03d01c,0x7fb01d14,0xf901ff88,
    0x1a616a0d,0x825c1fc4,0x806983f8,0x3007f35e,0x4000e80d,0x70ff14fc,
    0x54660749,0x0020441f,0x2fccfec0,0x800001d1,0x04d9fa00,0x02004002,
    0x02008000,0x981ff902,0x0b880eff,0x3a20ef98,0xe887f100,0xe887f100,
    0xf9bfc400,0xb4c01000,0x1dd94ed8,0x22eba7e4,0xfffffffc,0x07fdedc1,
    0x103dd991,0xfb83dd99,0x00f62faa,0x103dd991,0xf883dd99,0x43cc9807,
    0x1dd94ed8,0x80f76644,0x99303cc9,0x20f32607,0x7dec46fe,0x7c40102f,
    0x3f880f23,0x87f100f4,0xcff8803c,0xdceb801c,0x57f63b81,0x33f20ff9,
    0x3e622ec8,0x7dc1eb9a,0x8b6c7fd2,0xf8b6c0ff,0x3aefa20f,0x2db00b50,
    0x8b6c0ff8,0x03fe60ff,0xd87f1fa8,0x6c1ff35f,0xfa81ff16,0xf1fa87f1,
    0x47f1fa87,0x23625ff8,0x70704ffa,0x2034c365,0x3012e3f9,0x88034c7f,
    0x9d910fff,0x0fd97dc1,0x26bf90f4,0xe93f20ff,0x84b9e21f,0x74bf90ff,
    0x741ff88f,0x981ff88f,0x0aa83a21,0x0ffc47f4,0x07fe23fa,0xd3ec09fd,
    0xff35fc8b,0x7fc47f41,0xd8bd3ec1,0x74fb17a7,0x0d97fe65,0x09309ff5,
    0x221e8573,0x744554c3,0xaa981750,0x541c43d0,0x1aa5ffac,0x127e43fa,
    0xff35fc8d,0x7fb27e41,0x33aabee6,0x321ff30a,0x3f26226f,0x7e4c441f,
    0x3a3d801f,0x26221fac,0x4c441ffc,0x7fe41ffc,0x33fe239a,0x57f20edc,
    0x26220ff9,0x3fe21ffc,0xff10edcc,0x3e21db99,0xf10edccf,0xffa872df,
    0xc8007d42,0x47a03743,0x1e406fcc,0x323f71ba,0xf883d3ff,0x25cdf70f,
    0x07fcd7f2,0xaa7ec9f9,0x0ccfccee,0x9bee1ff3,0x41ff8dd8,0x01ff8dd8,
    0xf37f52d4,0x7fc6ec49,0x7fc6ec41,0x20effb81,0x3f200ff9,0x6c41ff35,
    0x3e61ff8d,0x01ff300f,0xfe803fe6,0x07fdc2be,0x1a600bf7,0x425c0db9,
    0xb91a606c,0x3fa1ff8d,0x0ff983cf,0x320ecdf7,0x641ff35f,0x2d8ff24f,
    0x21ff10f1,0x223f64fc,0x447ec1ff,0x83a201ff,0x366f8bfc,0x6c1ff88f,
    0x501ff88f,0x408ffe07,0x41ff35fc,0x41ff88fd,0x7ff023ff,0x408ffe04,
    0x5fe83ff9,0x01ea9ff4,0x8364dc3d,0x202d80e8,0x89b26e1e,0x3ffe25ff,
    0xf70fe822,0x5bee1e27,0x33f60ffc,0x47a1faeb,0x363fb05a,0xf99ff11f,
    0x667fc45f,0x30f202ff,0x3e27f37f,0x222ffccf,0x02ffccff,0x5dfb01f7,
    0xf96fb871,0x333fe21f,0x577ec2ff,0x4577ec38,0x1c577ec3,0x17ea2fe4,
    0x417d53fa,0x3ffbe23c,0x12b82e82,0x7f7c4790,0x233ff62f,0x0dcfffd8,
    0xa8fe47f2,0xfbffe884,0xd59ff34f,0x0973c459,0x36175eec,0x6c5fd8bf,
    0x505fd8bf,0x83ab760b,0x45fd8bfd,0x85fd8bfd,0xffd106c8,0xbffe881b,
    0x22ff64ff,0x7ff445fd,0x6fff440d,0x06fff440,0x32f7ab22,0x11df503d,
    0x3640d30d,0x777d425c,0x8d9034c1,0x99dfffd9,0x6ec42ffe,0x180b62fb,
    0x04410000,0x00000040,0x029802a0,0x01100000,0x00180110,0x22004400,
    0x42804400,0xcb880098,0x14c01302,0x15554054,0x2053004c,0x18803018,
    0x00000008,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x40bb2000,0x0ffa00b9,0x8808bc98,0x2f4c030a,
    0x42a01750,0xaaaa8819,0x51014c02,0x554c0159,0x37302aaa,0x1002ea20,
    0x00001595,0xaaaaa980,0x15555531,0x7510aaaa,0x000ba803,0x2aaaaa00,
    0x542aaa61,0x55552aaa,0x44155435,0x5f19d04f,0x881fbf70,0x40fea8ae,
    0x3205efff,0xffff880f,0x37c6fcc3,0x427fffec,0x33601dd8,0xfd04da9a,
    0xf98dffff,0x3e60ed8b,0x59b03faa,0xbd109b53,0x1b5b9b50,0x503ffe20,
    0x98b70bff,0x1d30df75,0x5f6cc1fb,0x9be61efc,0xf982ffe8,0xc87ffe22,
    0x40f444ff,0x363f704b,0x1dc7a20f,0x4c1f11b2,0x3a01dca9,0xdfd35b01,
    0xd10b2590,0xe883dddd,0x04cd6c05,0xdddff095,0xf50fe89f,0x1fe87fc7,
    0x12a130ec,0x9fcc1ff5,0x3fa00ffa,0x984ff886,0x2ff8bec3,0x6c2fcbec,
    0x50ff9aff,0x1ffd41ff,0x17fdc24c,0x2090bff1,0x7e47fe00,0xff810223,
    0x100005c1,0x00df5040,0x7e880550,0x56fccec0,0x05cc953e,0x9ffc43f1,
    0x6cff34f9,0x565c764f,0x2e24a9ea,0xff98ff42,0x221bfa00,0x643984ff,
    0xff88ffe6,0x27ec0b88,0x740d47ff,0xf880c86f,0x507fec5f,0x43b9d705,
    0x89f90ff8,0x7f41dceb,0x33ae00cf,0x653b621d,0x03f700ee,0xfd83b9d7,
    0x8cfc81de,0xfca7cb00,0x435404b0,0x51fbbffe,0x2b37e4ff,0x02c6a0fa,
    0x7fc43fe2,0x221bfa00,0x203984ff,0x3fe20ff8,0xfd93f602,0x17fdc025,
    0x07fec091,0x5c247ff9,0x3e61fb2f,0x7dcdf90f,0x7fd41fb2,0xb2fb82ff,
    0xf9afec1f,0x41efa80f,0x221fb2fb,0x744fffff,0x260cfeef,0x193753e3,
    0x7fcc26c0,0x47fe20ff,0x1ba736fc,0x3fe600c8,0x7401ff10,0x84ff886f,
    0xa83b2039,0xd80cdffc,0x0b97f64f,0x06e5ff88,0xd913ff98,0x3fa122df,
    0x3fea9f90,0x87f4df90,0x7ffd44fc,0xfc87f44f,0x7fcd7f24,0x07fff4c0,
    0x453f21fd,0x10ffffdb,0xa8ffa3ff,0xb83fb7e2,0x2a03f101,0x6fec5fff,
    0xf1554fd8,0x1b88dc0b,0x0ff897fc,0x3e21bfa0,0x3603984f,0x77fff5c0,
    0x3fa4fd81,0x7fe40b23,0x2ffd0091,0x1b9ffb9b,0x6fb87fc4,0x57f21ff3,
    0x0df70ff8,0x225fff91,0x64df70ff,0x201ff35f,0x1ff13ffb,0x7ec41bee,
    0x3ee3ff34,0xfacf8e65,0x83540322,0x44ffd9fb,0x732ffddb,0xf90c81f6,
    0xfa9fec1f,0x21bfa00f,0x03984ff8,0x027e4033,0x87fe1dfb,0x59ff103d,
    0x95ff7003,0x26133fe2,0x22df70ff,0x269f90ff,0x22df70ff,0xf9aff443,
    0x7e4df70f,0x6c01ff35,0x2e1ff32f,0xf8af406f,0x258ff51f,0xb02cdd5f,
    0x7f4df109,0xac1ff306,0x52c712fa,0x77f445ff,0xe8a20ffc,0x509ff06f,
    0x0be60005,0x2feedfd8,0xbffb02fc,0x8bbfe200,0x1fd03ffd,0x91fe8fee,
    0xfb87f45f,0x47f30f13,0x647f70fe,0x401ff35f,0xfb87f46a,0x5ff1e403,
    0x957717ea,0x05959339,0x72fcc0fc,0x707f20bf,0x2c872e27,0xff1080d8,
    0x5fe9fe41,0x0370bfd0,0x97e5c066,0x80a7ec38,0x3fea07f9,0x51bf2002,
    0x47f201ff,0x74bea1fc,0x1fc8fe46,0x20f987f1,0x5c3f91fc,0x2e1ff96f,
    0x3f90f21f,0x06fcc7f2,0xfba7dc1b,0x05903b82,0x5cdd03d4,0x701fb81f,
    0x1220b207,0x7dc1ff10,0x3f207ff2,0x7cc1220f,0x7fe55c0f,0x027ec5ff,
    0x37401ff5,0x3e0fe600,0x3ef76205,0x41ebeb82,0x222fbdd8,0x41cbbede,
    0x442fbdd8,0x54ffbffe,0xb1079dff,0x7ec45f7b,0xbeb80ccf,0x3376a03e,
    0x026c02dd,0xa87979b3,0x6ed400bb,0x02882ddc,0x6641ff98,0x7fdc04fc,
    0xff100ccd,0xfebeca81,0x5027f41e,0x01dc01ff,0x01640740,0x200400c4,
    0x004c1018,0x10030062,0x08031001,0x01800300,0x40400220,0x00060000,
    0x40f32e20,0x80044001,0x93030200,0x0ee20399,0x08040000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x01aba880,0xaa815553,0x5530172a,0x55544003,0x84ddcc00,
    0x5d440001,0xaa9830bc,0x22aaaaaa,0xaaaaaaa9,0x554c282a,0xaaaa8aaa,
    0xd71cc02a,0x21b9119d,0x00aaaaaa,0x00aaaaa6,0x0dd40030,0x5c006aa2,
    0xa882e23e,0x5554c02a,0xaa9809aa,0x4c57e441,0xeffc81ed,0x16437220,
    0x54004fe8,0x7df700ff,0x5c47dd73,0xb81eeecd,0x6eda8adf,0xba9dff98,
    0x4effcc6f,0x42547eba,0x7fdc6ff9,0x3a374404,0xff50ea5f,0x301bf95b,
    0x69800bff,0x2ffff980,0x5f802fec,0x17f627ec,0x36b7fe60,0x227f41ff,
    0x17fc43fe,0x7117ffe2,0x04fd82d4,0x5c07fc40,0x7ec7d06f,0xdfb03ff1,
    0x27fc1b60,0x217fe1a2,0x7fc13ea6,0x201ffd45,0x87fd46fd,0x2e4ff884,
    0x1ffc40ef,0x9007f600,0xfc8fff97,0xea859805,0x4402fe42,0xb1ff64ff,
    0x40ffe49f,0x3b220efc,0x0f0e23ff,0xf10013f6,0x01ffa81f,0x6c3fe675,
    0x80ffdc2f,0x8c9ff058,0x9425ff83,0x7c2efffa,0x01ffcc5f,0x7fd0dfb7,
    0xf13fe20e,0xdeff88df,0x3fe600bd,0xffb82205,0x02017f20,0x200bf900,
    0x87fee4ff,0x41ffe4fd,0x22e22ffb,0xd8712fff,0xeebcfd82,0xffbeec82,
    0x4203fec0,0x85fd0ff8,0xf80407ff,0x7fc0534f,0x413f2125,0x1ffcc5ff,
    0xb86fbc98,0xff881aff,0xf107fec4,0x407fee7f,0x3000ffdc,0xb15fc8df,
    0x31f6cc7b,0xadfc87db,0x49ff02ff,0x8a7ec6fd,0x9ff506ff,0x8fff99c4,
    0x7ec25438,0x2e1ff98e,0xf81ffb3f,0x2bee006f,0x37fc45f8,0xeadff800,
    0x2e37fe02,0xff04fc86,0x7ff7333b,0x4437dd60,0x9ff105ff,0x3e23ffb8,
    0x2213fe3f,0x7004ff9c,0x365fc87f,0x7ec4fd81,0x7d57fe44,0xfb5bff07,
    0xf34fd819,0x93fea0bf,0x23bfee38,0x27ec3c43,0x88ffc7ff,0x17fe60ff,
    0x30579900,0x3e000bff,0x3e02fdef,0xfc86fdef,0x999dff04,0x21907ffb,
    0x07f906fb,0xff513fe2,0xff1ffc49,0x1ffa170d,0xafe436c0,0xd89fb01c,
    0xf8afe44f,0xdbdff80f,0x8a7ec1df,0x5ff506ff,0x37ff21c4,0x27ec1d83,
    0x43fe6bfb,0x3fe20ff8,0x10132006,0xeeb88dff,0xba7fc0be,0x34d7fe02,
    0x5ff827e4,0x32a1ffcc,0x880efc99,0x89ff100f,0x3fe23ffb,0x4907ff13,
    0x7cc03ffb,0x1fcdfc80,0x4fd89fb0,0x1ff8afe4,0x3ff24ff8,0x6fe93f60,
    0x8388ff90,0x44b83ffe,0x4d3f64fd,0x81ff10ff,0x3fe007fe,0x7f41ceee,
    0x3e0dff07,0x3e0c514f,0x17f2125f,0x3fe62ffc,0x7ffffe43,0x7c40906f,
    0x10ffe44f,0x0bfb59ff,0xdff999b5,0xfc821e80,0x9fb06fdf,0xafe44fd8,
    0x4ff81ff8,0x4fd93fe6,0x3f607fea,0x7fc41c44,0x27ec6883,0x88ffc5fd,
    0x1ffd40ff,0x3ffea088,0x0ffd46ff,0x4ff837f4,0x97fe1d42,0x418dfc80,
    0x1ffcc5ff,0x3bf6aaa6,0x40351b12,0x2ff44ff8,0x026b7fe2,0x817fdc2c,
    0x323999bd,0xd84fe8df,0x3227ec4f,0xf03ff15f,0xb1ffcc9f,0x545fc89f,
    0x982cc0ef,0x7ec3d03f,0x4fd83be5,0xff703ff9,0x7d10d881,0xb81f7333,
    0x437f40ef,0x174c5ff8,0xfd1017fe,0x545ff889,0x37dc03ff,0xf98099f5,
    0x81df914f,0x1dc04ff8,0x7dc37fc4,0x3f22ffff,0xfd85ff35,0x3f227ec4,
    0xf883ff16,0xd83ff64f,0xcbfea84f,0x0bfda84e,0x6c7703a8,0x440ecbdc,
    0x04efbefe,0x89b9dfb5,0x982643f8,0x2dfbaced,0x66fffe4c,0xff931fff,
    0xc980017f,0xfda8afff,0x1bee02ef,0xffca8077,0xc982dfdf,0xdf702eff,
    0x67ffdc45,0xffffff30,0x227ffa23,0xdff32fff,0x447bfe63,0x4ffc9ffe,
    0x3b7fff26,0x3ffe60ce,0x00002601,0x44104402,0x40010400,0x2f2e2008,
    0x0131002b,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x54c2ee20,0x3200aaaa,0x15554c2e,0x26555550,
    0x201aaaaa,0x99aaaaa9,0x55555300,0x2aaaaa61,0x309fb009,0x2a600663,
    0xaaaaaaaa,0x20225501,0xaaaaaaa9,0x2aaaaa0a,0x4c2aaa21,0x5512aaaa,
    0x51555455,0xa9853035,0x2aa22aaa,0x2aaaa22a,0x322aaaaa,0xaa8dd33e,
    0x03aaaaaa,0xdf1f7008,0x44037fcc,0x2fff986e,0x543fff88,0x0dfcadff,
    0xfc9cffa8,0x0dff303f,0x9fd7bff3,0x220fdfa8,0x2a00ff6f,0xfcaaeffe,
    0x0efffc84,0xfa99bfc8,0x27fec46f,0x3ff20fcc,0x3ea1fc46,0xda83a62f,
    0x86ff984f,0x33ea0cfa,0x6ea9ffd9,0x23fcd3f6,0x33ae0c01,0x2aff04ae,
    0x4013fe21,0x7fe440e8,0x41ffcb85,0x3bea4ff8,0xf527fc41,0x0bff105f,
    0x17fc53fe,0x25912a3d,0xff39003b,0xb9b84a89,0xfd83903d,0x87ff882f,
    0x45ffd03a,0x549fd04a,0x413feea2,0x40f445ff,0x4b1ff23a,0x18ff34fd,
    0x325f50c0,0x107f981f,0x044009ff,0x320ffe64,0x7fc41ffb,0x3e23ff44,
    0x413fe24f,0x49ff04ff,0x001026fe,0x53fe7300,0x1c000718,0xfb817fea,
    0xff302c3f,0x7dc0b11f,0x827f4127,0x403625ff,0x451ff209,0x18ff34fd,
    0x363fb0c0,0x77ff545f,0x4027fc40,0xf9c83ed9,0x3feeaa4f,0x3227fc41,
    0x93fe21ff,0x9ff03ff8,0x4ff93fe0,0x3660fb66,0x7fcb003e,0x9db10354,
    0xf8805fd5,0x3ffc00ff,0xdffb8037,0x4bfe200c,0x3e09fd04,0xc800955f,
    0x4d3f607f,0x44600c7f,0x87fcc9ff,0x9ff107f9,0x5213f600,0x3ee90ffe,
    0x37fe621f,0x447ff719,0x03ff24ff,0x4ff827fc,0x4fd83ff7,0x37009fb0,
    0x80f56ffc,0x07fabffc,0x5c01ffe4,0xd0048bff,0xbfb007ff,0x413fa055,
    0x004fbdff,0x9fb03fe4,0x40185fe6,0xf539ff31,0x220ff30d,0x9fb004ff,
    0x22ffea90,0x5cc3ff73,0xff52adff,0x7ef7fc4b,0x13fe00cf,0x05eef7fc,
    0x4fd827ec,0x7e667440,0xf901fcef,0x4c03fe2b,0x3fa006ff,0xff3000df,
    0x3ee6601f,0x7f4099df,0xffdfff04,0x03fe4005,0x3ffb1bfb,0x3e230063,
    0xf30bf72f,0x013fe20f,0xfd2427ec,0x07fee17d,0xffa89ff1,0x3e73fe23,
    0x827fc06f,0x4fd804ff,0x9c809fb0,0x374ff999,0x7fc57f20,0x003ffd00,
    0x50027fd4,0x2aa0bffb,0x41aadffa,0x3bff04fe,0x32001fff,0x3bff607f,
    0x30065fe9,0x82fc97e4,0x9ff107f9,0x909fb0e0,0xff727fdc,0x5c4ff883,
    0x53fe22ff,0x3fe04ffb,0xb009ff04,0x813f609f,0x314ff82a,0x3e2bf90c,
    0x84ffb80f,0x07ff100b,0x17ff5260,0xfe80ffa0,0x3eabff04,0x7fc800ef,
    0x181027e0,0xbecb88c0,0x20ff303e,0x44884ff8,0x3e2484fd,0x107fee1f,
    0x45fe89ff,0x3ff64ff8,0x3e09ff01,0x04fd804f,0xf82409fb,0x3f21a84f,
    0xf881ff15,0x220680ef,0x258803ff,0x6640fff8,0x42cceffc,0x4bff04fe,
    0xfc805ffc,0x3005f107,0x40088180,0xbff107fa,0x44fd89b0,0x3ee36448,
    0x8a7fc42f,0x7fc40efb,0x103bfe24,0x13fe0bff,0x7ec13f60,0xff103904,
    0x3f20f98b,0xfd83ff16,0x3036c42f,0x1e8809ff,0xff02ffdc,0xf827f409,
    0x027ff45f,0x3e603ff6,0x9999a803,0x88002999,0x3260cffd,0xffdccfff,
    0x4c7bfe63,0x54530bfd,0xf932dffe,0x307bfbff,0x7d45dff9,0xfff931ef,
    0x3fff2615,0x3dff300a,0x221eff98,0x3f2a1cfc,0x27fecdff,0xffc9ffe8,
    0x333ffea4,0x9505ffec,0xd5015dff,0x3ff2237f,0x3fee60df,0x3fee60ae,
    0xfff930af,0x37fff627,0x67ffd441,0x00006441,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x04400100,0x80000000,0x1b90deeb,0x3b233bae,
    0x0001992e,0x36255000,0x2a1dd94e,0x86233001,0xd959d30b,0x27bb661d,
    0x5c3503da,0x01300400,0x4c00b86a,0x2bbaee01,0x66442ccd,0xbbb701ee,
    0x20799303,0x3a21dceb,0x64007a05,0x8f736a03,0x2feaced8,0x7ec676c4,
    0x42a97fa0,0x23ff34fe,0x2b3b621a,0x03df94fe,0x361eeb88,0x2a1ff35f,
    0x3ea00bee,0x30edfefd,0xf513fe27,0x9aa0553f,0xe883ae4b,0x3a207f01,
    0x37401d30,0x5d7fe6c8,0x7fc5b60f,0x2fccfdc0,0x2e1fc7ea,0x3ea1fb2f,
    0x2003d00f,0x254fe03c,0x1feafff2,0x87fb3bee,0xf7090ffa,0x4253faaf,
    0xdff8affc,0xfb306fc8,0x26bf9039,0x67ed40ff,0x3a619d01,0x80ffc822,
    0x3f304efd,0x11d903ea,0x7004c07d,0x6dc1761d,0xfd0fe83e,0x8fe8fe67,
    0xb3f41ff8,0xd17a7d89,0x6453f21f,0x64007a03,0x067ff303,0x03fe2bf9,
    0x3e021ff7,0xff8838bf,0x838ffaca,0x54bfe6fb,0x2fbae27f,0x7cd7f200,
    0x5df7100f,0x4c2dc3cc,0x5ff303ff,0x13eabf30,0x2621f764,0x41999999,
    0x45f98ef8,0x440f98f8,0xccdffb88,0x3f26224e,0x881fe21f,0x10edccff,
    0x81bee1ff,0x99ae9998,0x33666621,0x3ffa0999,0xff15fc84,0x5c07fb81,
    0xbfb00bef,0x701bff17,0xfa97fcdf,0x2007bf27,0x01ff35fc,0x0b52ff98,
    0x80dfd0d3,0x75fa86fd,0x03be207f,0xdddddddb,0xf88fe83d,0x84d9320e,
    0x204fe8eb,0x21ff8dd8,0xff300ff9,0x5c3fe601,0x3bbb606f,0xd71eeeef,
    0x5ddddfdd,0x3227ff44,0xb81ff15f,0x27fc406f,0x3f61ff50,0x7fcdf705,
    0xfc98ff52,0x4d7f202d,0xeeb880ff,0x9903e20b,0x8111ffa8,0xfa82ffc8,
    0xbe881f91,0x2a0000ec,0x7cc1d91f,0x1fc83e20,0x3f608dfb,0x7f41ff88,
    0x408ffe04,0x5c7f70fe,0x64007a01,0x1ff21103,0x03fe2bf9,0x3f900df7,
    0x0fe65f80,0x25ff37dc,0x3faa07fa,0xfcb7dc0b,0x0b7f260f,0x2fb8aee8,
    0x40d93fe2,0xb701ff95,0x647d11e4,0x7403b00e,0x81981d11,0x915ff119,
    0x225919ff,0x42ffccff,0x6c39affc,0x7e438aef,0x3fea3f91,0x32003d00,
    0x2374b103,0x83ff16fc,0x069806fb,0xb80742c8,0x7d4ffe6f,0x22fc9807,
    0x4ffbffe8,0xeb8019f9,0x90fbdffc,0x4cfdbbff,0x0dffc9ed,0x1d4361c8,
    0x702d80e4,0xd0000e45,0xfff71bff,0xfd8bfd87,0x40effb85,0x440dffe8,
    0x3e62fbdd,0x2ba66626,0x40f20199,0x221fbde8,0x4ffc9ffe,0x200bffa2,
    0x10080800,0xbff55ffd,0x2007ffb3,0x00601808,0x00002008,0x00000000,
    0x02000000,0x0100000c,0x80c40088,0x777776c0,0x05701eee,0x00000184,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x40dcc000,0xa81ba81a,0x2e607102,0x4c370dc1,0x441a882a,
    0x9999950b,0x2eea3999,0x01bbbbbb,0x1bb11766,0x6f5c014c,0x51288cc2,
    0xaaaaaaa8,0x3dddd51a,0x55555554,0x0000001a,0x00000000,0x00000000,
    0x443fb660,0x7e76c2fb,0x2e0bfe63,0x50fdc987,0xb4dbeadf,0xb2dc7c3f,
    0x2eeeea7f,0x7751bbbb,0x47b77777,0xf70fdc1b,0xdb17fc43,0x3ff2b261,
    0x2e7f65bc,0xbbbbb12f,0x3fee7bbb,0xbbbb11ff,0x0007bbbb,0x00000000,
    0x00000000,0xf9840000,0x2698be21,0xc93fe278,0x541c8d8a,0xb7d57ea5,
    0x3ea4faa8,0x07f90fa8,0x64770000,0x20763b87,0x25ff11fe,0x260cca82,
    0x0000c98c,0x00000000,0x00000000,0x00000000,0x88970000,0x81d16a2f,
    0x3b33f62a,0x443be62e,0x3a29f13f,0x2a3e64e8,0x77647ee7,0x02eeeeee,
    0x41766770,0x65408020,0x00000000,0x00000000,0x00000000,0x00000000,
    0x05220000,0xb71f85f1,0x406ee090,0x2e87a3f8,0x9e8bd5f7,0x9989e23b,
    0x00999999,0x00022110,0x00000000,0x00000000,0x00000000,0x00000000,
    0x22000000,0x0fe23eee,0x0283bfd5,0x95c5f1bd,0x8c19120d,0x04809808,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x2a000000,
    0x57510bbb,0x1d800101,0x0015cc59,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,
};

static signed short stb__times_bold_19_latin1_x[224]={ 0,1,1,0,0,1,0,1,0,0,0,0,0,0,
0,0,0,1,0,0,0,0,0,0,0,0,1,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,-1,0,0,0,0,0,0,0,0,0,0,
-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,2,2,2,2,2,2,2,2,2,
2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,1,1,0,0,0,
1,0,0,0,0,0,0,0,0,-1,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,
0,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,-1,0,-1,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
 };
static signed short stb__times_bold_19_latin1_y[224]={ 15,3,3,3,3,3,3,3,3,3,3,4,12,10,
12,3,3,3,3,3,3,3,3,3,3,3,6,6,5,7,5,3,3,3,3,3,3,3,3,3,3,3,3,3,
3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,17,3,6,3,6,3,6,3,6,3,3,
3,3,3,6,6,6,6,6,6,6,4,7,7,7,7,7,7,3,3,3,9,4,4,4,4,4,4,4,4,4,
4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,15,6,3,3,5,3,
3,3,3,3,3,7,7,10,3,1,3,4,3,3,3,7,3,7,14,3,3,7,3,3,3,6,-1,-1,-1,0,
0,0,3,3,-1,-1,-1,0,-1,-1,-1,0,3,0,-1,-1,-1,0,0,5,3,-1,-1,-1,0,-1,3,3,3,3,
3,3,3,2,6,6,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,5,6,3,3,3,3,3,3,3,
 };
static unsigned short stb__times_bold_19_latin1_w[224]={ 0,4,7,9,9,15,14,3,6,6,8,10,4,6,
4,5,8,7,8,8,8,8,9,9,8,8,4,4,10,10,10,7,16,13,11,12,12,11,10,14,14,7,9,14,
11,16,12,13,10,13,13,9,11,13,13,18,13,13,12,5,5,4,8,10,4,9,9,8,10,8,7,9,10,5,
6,10,5,14,10,8,9,10,8,7,6,9,9,13,9,9,8,6,2,6,10,9,9,9,9,9,9,9,9,9,
9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,0,4,7,9,9,9,
2,8,6,13,6,9,10,6,13,10,7,10,5,5,5,10,10,4,4,5,6,9,13,13,13,8,13,13,13,13,
13,13,18,12,11,11,11,11,7,7,7,7,12,12,13,13,13,13,13,8,13,13,13,13,13,13,10,9,9,9,
9,9,9,9,12,8,8,8,8,8,6,5,7,7,8,10,8,8,8,8,8,10,9,9,9,9,9,9,9,9,
 };
static unsigned short stb__times_bold_19_latin1_h[224]={ 0,13,6,13,14,13,13,6,16,16,7,10,7,2,
4,13,13,12,12,13,12,13,13,13,13,13,10,13,9,5,9,13,16,12,12,13,12,12,12,13,12,12,13,12,
12,12,13,13,12,16,12,13,12,13,13,13,12,12,12,16,13,16,7,2,4,10,13,10,13,10,12,13,12,12,
16,12,12,9,9,10,13,13,9,10,12,9,9,9,8,12,8,16,16,16,3,11,11,11,11,11,11,11,11,11,
11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,13,16,13,9,12,
16,16,3,13,6,8,5,2,13,2,7,10,7,7,4,12,16,4,5,7,6,8,13,13,13,13,16,16,16,15,
15,15,12,16,16,16,16,15,16,16,16,15,12,16,17,17,17,16,16,8,13,17,17,17,16,16,12,13,13,13,
13,13,13,14,10,13,13,13,13,13,12,12,12,12,13,12,13,13,13,13,13,8,10,13,13,13,13,16,16,16,
 };
static unsigned short stb__times_bold_19_latin1_s[224]={ 254,249,126,21,219,60,226,148,115,226,111,
67,106,229,190,250,10,188,195,57,138,75,84,108,118,127,51,150,145,152,166,
190,1,181,238,55,157,93,105,78,123,72,166,196,9,28,15,1,80,184,58,
28,211,176,223,237,164,150,137,162,28,179,246,236,179,14,34,24,44,33,1,
68,227,221,198,204,250,130,86,42,208,155,97,78,116,156,106,116,196,147,187,
205,104,84,200,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,
234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,254,218,233,
198,177,178,145,136,211,136,134,206,163,229,94,218,98,56,86,120,184,223,168,
195,174,92,141,236,212,198,184,175,212,70,135,157,205,179,107,241,18,30,42,
193,54,62,149,171,45,91,57,1,43,122,148,216,161,29,15,71,121,107,170,
11,86,124,40,50,76,229,1,96,105,143,152,134,21,215,91,99,31,126,241,
1,19,38,66,225,244,114,47,239,1,95,105,85, };
static unsigned short stb__times_bold_19_latin1_t[224]={ 1,19,101,36,19,36,36,101,1,1,101,
91,101,101,101,36,50,78,64,50,64,50,50,50,50,50,91,50,91,101,91,
50,19,64,64,64,64,64,64,64,64,78,50,78,78,78,64,64,78,1,78,
50,78,50,50,50,78,78,78,1,64,1,91,101,101,91,64,91,64,91,78,
64,64,64,1,64,64,91,91,91,50,50,91,91,64,91,91,91,91,64,91,
1,19,19,101,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,
78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,1,50,1,
50,91,78,1,1,101,50,101,91,101,101,50,101,101,91,101,101,101,78,1,
101,101,101,101,91,36,36,36,36,1,19,19,19,19,19,78,1,19,19,19,
19,19,19,19,19,78,19,1,1,1,1,1,91,36,1,1,1,19,19,64,
36,36,36,36,36,36,19,91,36,36,36,36,36,78,64,78,78,36,78,36,
50,50,50,50,91,78,36,50,19,36,1,1,1, };
static unsigned short stb__times_bold_19_latin1_a[224]={ 69,91,152,137,137,275,229,76,
91,91,137,156,69,91,69,76,137,137,137,137,137,137,137,137,
137,137,91,91,156,156,156,137,255,198,183,198,198,183,168,214,
214,107,137,214,183,259,198,214,168,214,198,153,183,198,198,275,
198,198,183,91,76,91,160,137,91,137,153,122,153,122,91,137,
153,76,91,153,76,229,153,137,153,153,122,107,91,153,137,198,
137,137,122,108,60,108,143,214,214,214,214,214,214,214,214,214,
214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,
214,214,214,214,214,214,214,214,69,91,137,137,137,137,60,137,
91,205,82,137,156,91,205,137,110,151,82,82,91,158,148,69,
91,82,91,137,206,206,206,137,198,198,198,198,198,198,275,198,
183,183,183,183,107,107,107,107,198,198,214,214,214,214,214,156,
214,198,198,198,198,198,168,153,137,137,137,137,137,137,198,122,
122,122,122,122,76,76,76,76,137,153,137,137,137,137,137,151,
137,153,153,153,153,137,153,137, };

// Call this function with
//    font: NULL or array length
//    data: NULL or specified size
//    height: STB_FONT_times_bold_19_latin1_BITMAP_HEIGHT or STB_FONT_times_bold_19_latin1_BITMAP_HEIGHT_POW2
//    return value: spacing between lines
static void stb_font_times_bold_19_latin1(stb_fontchar font[STB_FONT_times_bold_19_latin1_NUM_CHARS],
                unsigned char data[STB_FONT_times_bold_19_latin1_BITMAP_HEIGHT][STB_FONT_times_bold_19_latin1_BITMAP_WIDTH],
                int height)
{
    int i,j;
    if (data != 0) {
        unsigned int *bits = stb__times_bold_19_latin1_pixels;
        unsigned int bitpack = *bits++, numbits = 32;
        for (i=0; i < STB_FONT_times_bold_19_latin1_BITMAP_WIDTH*height; ++i)
            data[0][i] = 0;  // zero entire bitmap
        for (j=1; j < STB_FONT_times_bold_19_latin1_BITMAP_HEIGHT-1; ++j) {
            for (i=1; i < STB_FONT_times_bold_19_latin1_BITMAP_WIDTH-1; ++i) {
                unsigned int value;
                if (numbits==0) bitpack = *bits++, numbits=32;
                value = bitpack & 1;
                bitpack >>= 1, --numbits;
                if (value) {
                    if (numbits < 3) bitpack = *bits++, numbits = 32;
                    data[j][i] = (bitpack & 7) * 0x20 + 0x1f;
                    bitpack >>= 3, numbits -= 3;
                } else {
                    data[j][i] = 0;
                }
            }
        }
    }

    // build font description
    if (font != 0) {
        float recip_width = 1.0f / STB_FONT_times_bold_19_latin1_BITMAP_WIDTH;
        float recip_height = 1.0f / height;
        for (i=0; i < STB_FONT_times_bold_19_latin1_NUM_CHARS; ++i) {
            // pad characters so they bilerp from empty space around each character
            font[i].s0 = (stb__times_bold_19_latin1_s[i]) * recip_width;
            font[i].t0 = (stb__times_bold_19_latin1_t[i]) * recip_height;
            font[i].s1 = (stb__times_bold_19_latin1_s[i] + stb__times_bold_19_latin1_w[i]) * recip_width;
            font[i].t1 = (stb__times_bold_19_latin1_t[i] + stb__times_bold_19_latin1_h[i]) * recip_height;
            font[i].x0 = stb__times_bold_19_latin1_x[i];
            font[i].y0 = stb__times_bold_19_latin1_y[i];
            font[i].x1 = stb__times_bold_19_latin1_x[i] + stb__times_bold_19_latin1_w[i];
            font[i].y1 = stb__times_bold_19_latin1_y[i] + stb__times_bold_19_latin1_h[i];
            font[i].advance_int = (stb__times_bold_19_latin1_a[i]+8)>>4;
            font[i].s0f = (stb__times_bold_19_latin1_s[i] - 0.5f) * recip_width;
            font[i].t0f = (stb__times_bold_19_latin1_t[i] - 0.5f) * recip_height;
            font[i].s1f = (stb__times_bold_19_latin1_s[i] + stb__times_bold_19_latin1_w[i] + 0.5f) * recip_width;
            font[i].t1f = (stb__times_bold_19_latin1_t[i] + stb__times_bold_19_latin1_h[i] + 0.5f) * recip_height;
            font[i].x0f = stb__times_bold_19_latin1_x[i] - 0.5f;
            font[i].y0f = stb__times_bold_19_latin1_y[i] - 0.5f;
            font[i].x1f = stb__times_bold_19_latin1_x[i] + stb__times_bold_19_latin1_w[i] + 0.5f;
            font[i].y1f = stb__times_bold_19_latin1_y[i] + stb__times_bold_19_latin1_h[i] + 0.5f;
            font[i].advance = stb__times_bold_19_latin1_a[i]/16.0f;
        }
    }
}

#ifndef STB_SOMEFONT_CREATE
#define STB_SOMEFONT_CREATE              stb_font_times_bold_19_latin1
#define STB_SOMEFONT_BITMAP_WIDTH        STB_FONT_times_bold_19_latin1_BITMAP_WIDTH
#define STB_SOMEFONT_BITMAP_HEIGHT       STB_FONT_times_bold_19_latin1_BITMAP_HEIGHT
#define STB_SOMEFONT_BITMAP_HEIGHT_POW2  STB_FONT_times_bold_19_latin1_BITMAP_HEIGHT_POW2
#define STB_SOMEFONT_FIRST_CHAR          STB_FONT_times_bold_19_latin1_FIRST_CHAR
#define STB_SOMEFONT_NUM_CHARS           STB_FONT_times_bold_19_latin1_NUM_CHARS
#define STB_SOMEFONT_LINE_SPACING        STB_FONT_times_bold_19_latin1_LINE_SPACING
#endif

