// Font generated by stb_font_inl_generator.c (4/1 bpp)
//
// Following instructions show how to use the only included font, whatever it is, in
// a generic way so you can replace it with any other font by changing the include.
// To use multiple fonts, replace STB_SOMEFONT_* below with STB_FONT_courier_bold_36_usascii_*,
// and separately install each font. Note that the CREATE function call has a
// totally different name; it's just 'stb_font_courier_bold_36_usascii'.
//
/* // Example usage:

static stb_fontchar fontdata[STB_SOMEFONT_NUM_CHARS];

static void init(void)
{
    // optionally replace both STB_SOMEFONT_BITMAP_HEIGHT with STB_SOMEFONT_BITMAP_HEIGHT_POW2
    static unsigned char fontpixels[STB_SOMEFONT_BITMAP_HEIGHT][STB_SOMEFONT_BITMAP_WIDTH];
    STB_SOMEFONT_CREATE(fontdata, fontpixels, STB_SOMEFONT_BITMAP_HEIGHT);
    ... create texture ...
    // for best results rendering 1:1 pixels texels, use nearest-neighbor sampling
    // if allowed to scale up, use bilerp
}

// This function positions characters on integer coordinates, and assumes 1:1 texels to pixels
// Appropriate if nearest-neighbor sampling is used
static void draw_string_integer(int x, int y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0, cd->t0); glVertex2i(x + cd->x0, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t0); glVertex2i(x + cd->x1, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t1); glVertex2i(x + cd->x1, y + cd->y1);
        glTexCoord2f(cd->s0, cd->t1); glVertex2i(x + cd->x0, y + cd->y1);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance_int;
    }
    glEnd();
}

// This function positions characters on float coordinates, and doesn't require 1:1 texels to pixels
// Appropriate if bilinear filtering is used
static void draw_string_float(float x, float y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0f, cd->t0f); glVertex2f(x + cd->x0f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t0f); glVertex2f(x + cd->x1f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t1f); glVertex2f(x + cd->x1f, y + cd->y1f);
        glTexCoord2f(cd->s0f, cd->t1f); glVertex2f(x + cd->x0f, y + cd->y1f);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance;
    }
    glEnd();
}
*/

#ifndef STB_FONTCHAR__TYPEDEF
#define STB_FONTCHAR__TYPEDEF
typedef struct
{
    // coordinates if using integer positioning
    float s0,t0,s1,t1;
    signed short x0,y0,x1,y1;
    int   advance_int;
    // coordinates if using floating positioning
    float s0f,t0f,s1f,t1f;
    float x0f,y0f,x1f,y1f;
    float advance;
} stb_fontchar;
#endif

#define STB_FONT_courier_bold_36_usascii_BITMAP_WIDTH         256
#define STB_FONT_courier_bold_36_usascii_BITMAP_HEIGHT        138
#define STB_FONT_courier_bold_36_usascii_BITMAP_HEIGHT_POW2   256

#define STB_FONT_courier_bold_36_usascii_FIRST_CHAR            32
#define STB_FONT_courier_bold_36_usascii_NUM_CHARS             95

#define STB_FONT_courier_bold_36_usascii_LINE_SPACING          17

static unsigned int stb__courier_bold_36_usascii_pixels[]={
    0x88099980,0x00000002,0x00015000,0x88000000,0x0004c002,0x6641da80,
    0x00988000,0x02b2a200,0x01355300,0x4d54c000,0x40000000,0x009bcaa8,
    0x117ffe00,0x400009ff,0x200003fb,0x13ee1ffb,0x3e23fd50,0x5c3fffff,
    0x20ffffff,0xff7005ff,0x0033fe63,0x3fea6ff8,0xffd91003,0x64001bdf,
    0x405fffff,0xffffffc8,0x0effffac,0x2f3ffff2,0x1efffffe,0x3ffffea0,
    0x80dfffff,0xffffffc8,0xfff0003f,0x00fff98b,0x00ffd000,0x8bffe200,
    0xffd00fff,0x3fffe29f,0x7fffc7ff,0xfff10fff,0x2fff9807,0x200dfff9,
    0x3ff27ff8,0xffffa804,0x803fffff,0xfffefffd,0xfffff305,0xffffffff,
    0x3ffe27ff,0xffffffff,0xf503ffff,0xffffffff,0xfff985ff,0x5fffffff,
    0x85fff800,0x00004ffe,0x00001fff,0xfff8fff7,0x1ffffa80,0x9ffffff1,
    0xffffffb8,0x803fff60,0xff50fffd,0xff3009ff,0x201ffe4f,0xfffffffb,
    0x3204ffff,0xff710cff,0xfffff885,0xffffffed,0x3ff60eff,0xdeffffff,
    0xa83fffff,0xffffffff,0x7ff40eff,0xfffecdef,0x4ccc002f,0x00fffa80,
    0x3fffaa00,0x8000ccdf,0x7ffc3fff,0x443ffd80,0x4c019fff,0x3e60fff9,
    0xfff303ff,0x06ffc889,0x3f66ff98,0x3ffe603f,0xfff510af,0x0bff103f,
    0xfffd13fa,0xffffa887,0x7fffe406,0x1fffe984,0x4ccf7fd4,0xffb00999,
    0x0dffd107,0x7fff0000,0xfffd3000,0x07ffffff,0x40fffa80,0xfff80fff,
    0x007ffc40,0xfe81fff0,0x1fff907f,0x500fff10,0x17fecdff,0x201dffd0,
    0x5c0fffd8,0x4ff700ff,0x2a01fffa,0x7e406fff,0x3fe204ff,0x037fd45f,
    0xf300dc40,0x700000ff,0xfb000fff,0xffffffff,0xffe800bf,0xf80fff84,
    0x7ffc40ff,0x03ffe000,0xf885fff5,0xfff104ff,0x74bff500,0xfff902ff,
    0x4fff8801,0xff302ff4,0x201bff21,0x7e406ffc,0x7fd400ff,0x0037fd47,
    0x0fff8800,0xffffffc8,0x7c44ffff,0x3e2003ff,0xeb98acff,0x3ea005ff,
    0x0fff80ff,0x7c40fff8,0x3fe000ff,0x46ffe80f,0xf100fffc,0xffd980ff,
    0x0cfffaae,0x7003ffd8,0x84ff8dff,0xfd0ffeca,0xdff5007f,0x805ffc80,
    0x3ea0fff8,0x0acca9ef,0x37fe4000,0x7fffffc4,0xc84fffff,0x3ee006ff,
    0x07ff105f,0xf827ff40,0x0fff80ff,0x0007ffc4,0xff701fff,0x02fff41f,
    0x3e20fff1,0xffffffff,0x7fc5ffff,0xfff1000f,0xfb117fc4,0x3f61ffff,
    0x6ffc804f,0x4037fe40,0x7fd47ffa,0xcfffffff,0xfb753000,0x3ff207ff,
    0xffffffff,0x02fff884,0x4c09ff70,0x3ffe6002,0xf01fff01,0xfff881ff,
    0x03ffe000,0xff87ffe6,0x1ffe203f,0x7fffffd4,0x7fffffff,0xd001ffe2,
    0x83fe63ff,0x0ffdfffe,0x4403fff7,0x7e406fff,0x7ff403ff,0x7ffffd45,
    0x00efffff,0x7fffffe4,0x3ff20005,0x00dff904,0x00b7ffe2,0x817ff600,
    0x7fc40fff,0x07ffc40f,0x101fff00,0x3fe27fff,0x1ffe202f,0xeefffdb8,
    0x22defffe,0x6c006ffa,0x21ff32ff,0x1ff33ffb,0x02bbffe6,0x80dfffd5,
    0x40bffffc,0x443fffd9,0xfddfffff,0x7f405fff,0x002fffff,0x4413ff20,
    0xfb002fff,0x039dffff,0x01fff980,0xfc983ffe,0x0fff887f,0x403ffe00,
    0xfff34fff,0x0cfff803,0x7ccbff60,0x0fff307f,0xf31ffe80,0xf997f61f,
    0x3fffee0f,0xfffffddf,0x7ffe406f,0xfffcdfff,0x37b705ff,0x01fffc88,
    0x3fffff66,0xff90001f,0x02ffec09,0xfffffe88,0xf9002eff,0x0fff80df,
    0x109ffff5,0x7c001fff,0xbffb00ff,0x9003ffee,0x3a05ffff,0x0dff32ff,
    0x8003ffe2,0x1ff30fff,0x0ff98ffa,0x7fffffe4,0x06ffffff,0x7fffffe4,
    0x06ffffff,0x01fffc00,0x0ffffc88,0x04ffc800,0x8007ffe6,0xffffffda,
    0x7ffc402f,0xc87ffc02,0xf882ffff,0x3fe000ff,0x2dffb00f,0xfa807ffb,
    0xffd03fff,0xf81bfea3,0xff5002ff,0xfd87fccf,0x2a03fe66,0xeffffffe,
    0x7e406ffc,0xfffffcdf,0xc80003ff,0x7cc005ff,0xfc8002ff,0x2ffec04f,
    0xffdb9800,0x3ff200ff,0x10fff806,0xf10dfffb,0x7fc001ff,0x2bffd00f,
    0x7400fffa,0x2e60dfff,0xfdcdfffc,0xffc82cef,0x5ffe800f,0x7fcc3fe2,
    0x200ffddf,0xf31accb9,0x4ffc80df,0x01579951,0x1bfea000,0x013ff600,
    0x5013ff20,0x0c401fff,0x407ffe60,0xf802fff8,0x3ffcc0ff,0x0007ffc4,
    0x3fe01fff,0x03fff33f,0xfe81fff8,0xffffffff,0x7c41ffff,0x7fe405ff,
    0xf70ffc0f,0x009fffff,0x901bfe60,0x000009ff,0x0017fee0,0x2001bfea,
    0xfe804ffc,0x07ff104f,0xf702ffe8,0x3ffe00ff,0x440fff80,0x3e000fff,
    0xfff880ff,0x407fff12,0xffd07ff8,0xffffffff,0xff903fff,0xffe983df,
    0x4c2fe83f,0x002deeec,0xc80dff30,0x040004ff,0x003ffd80,0x8004ffe8,
    0xfa804ffc,0x7ffa80ff,0x407ffe20,0xff003fff,0x81fff01f,0x2000fff8,
    0xffa80fff,0x813ffe1f,0xb5107ff8,0xffd99fff,0x7fec037d,0xffffefff,
    0x009f905f,0x6ff98000,0x0027fe40,0x2205df70,0x9b31fffc,0x3fff2201,
    0x4ffc8001,0x509ffd00,0x2615dfff,0xb80fffeb,0xff000fff,0x81fff01f,
    0x2000fff8,0xffc80fff,0x1037fec7,0xff980fff,0x400fff67,0xfffffffc,
    0x3fee04ff,0x5c400000,0x41bfffdc,0xbceffeb8,0x7ffec001,0xfffeeeef,
    0x3bfff64f,0xffffeeee,0x9ff90006,0x03ffee00,0xfffffff5,0x207fffff,
    0x3e004ffe,0x0fff80ff,0x0007ffc4,0xff881fff,0x17ffd44f,0x5407ff88,
    0x0bff66ff,0xfffff980,0x7fc402df,0x3e200003,0xffffffff,0x3fffffe2,
    0x22002fff,0xffffffff,0x3ea0efff,0xffffffff,0x90000dff,0x7fc009ff,
    0x7fffcc3f,0x3fffffff,0x001fff50,0x7fc07ffc,0x07ffc40f,0xb81fff00,
    0xffe81fff,0x80fff106,0x3ffa5ffa,0x3ffea002,0xc81a81df,0x04fb83ff,
    0x3ffffe20,0xff12ffff,0x5fffffff,0xfffc9800,0x702fffff,0xfffffffd,
    0xfc80007d,0x3fee004f,0xffdadc87,0x3a01dfff,0x7fc004ff,0x40fff80f,
    0x2000fff8,0x7ffc0fff,0x03fff705,0xfb80fff1,0x007ffa5f,0x7fffffdc,
    0x1fffcdff,0x76ffff44,0x4c004fff,0x2ccccccb,0x666665cc,0x2620002c,
    0x10009aaa,0x00035553,0x0017ff40,0x8805fff1,0x7cc00fff,0x7fc000ff,
    0x0cffe80f,0x0267ffe2,0x07ffccc4,0x2205fff7,0x7e445fff,0x27fdc05f,
    0xf1003fff,0xffffffff,0x103fffff,0xbffffffb,0x00000000,0x00000000,
    0x7d400000,0x7e4000ff,0x0fff806f,0x002ffec0,0x7e407ffc,0xfff12fff,
    0xffc8bfff,0x3fa0ffff,0x7ffdc06f,0x03ffff51,0x3fe3ffb8,0xffff1007,
    0xfffffddf,0xcca8807d,0x9859500a,0xcccccccb,0xcccccccc,0x5ddc1ccc,
    0xbbbbbbbb,0x000000bb,0x6665c400,0x006ffffc,0x402fff88,0x3e200fff,
    0xff8001ff,0x53fff607,0x7ffffff8,0x7ffffffc,0x003fff10,0x3ff25ffd,
    0x0ed8806f,0xca800fae,0x0e65441a,0x3fea0000,0xfffff13f,0xffffffff,
    0xffffffff,0x7fffffc3,0x0fffffff,0x20000000,0xfffffff8,0x90000eff,
    0x7fe803ff,0x002ffcc0,0x75c03eb8,0xfffff11e,0xfffea87d,0x00bb20ff,
    0xde986f4c,0x00000001,0x40000000,0x3fe6fffc,0xffffffff,0xffffffff,
    0x3ffe1fff,0xffffffff,0x000000ff,0x3fffe200,0x000dffff,0x754015c0,
    0x000ba803,0x00000000,0x00000000,0x00000000,0xf5000000,0x5ddc47ff,
    0xbbbbbbbb,0xbbbbbbbb,0x55555541,0x0aaaaaaa,0x40000000,0x0accccb9,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x000d4400,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x751002e6,
    0xba800015,0xaba8800a,0x09998001,0x2ea20000,0xca98002b,0x4c00001a,
    0x26620099,0x08000001,0x00133100,0x33333100,0xff900000,0xffffffff,
    0x7fec1fff,0x7f4c1eff,0x3ee0dfff,0xfffb02ff,0x22001bff,0x4fffffdb,
    0xfffffd30,0x5dffff5d,0x01ffffec,0xffffc800,0xfe9802ef,0x002effff,
    0x37fffdc0,0x0fffff44,0x3b220000,0x21ceffff,0x006ffffb,0x3ffffa60,
    0x3aa000ff,0xffff903e,0xffffffff,0x3fffe61f,0x7ffe45ff,0x3ffa2fff,
    0xffffd85f,0x4400efff,0xfffffffe,0x7fffdc0f,0xffffffff,0xffff35ff,
    0xfb00007f,0x5fffffff,0x7ffffdc0,0x0003ffff,0x21bffffa,0x01fffffb,
    0x3ffe6000,0x27ffffff,0x006ffffe,0x3fffff20,0xff1000ff,0xfff901ff,
    0xffffffff,0x7ffec1ff,0x7ff4c2ef,0xfff10eff,0xffffd8ff,0x205ffffd,
    0xceffffe8,0x7ffd44fd,0xfffffdff,0x3f62efff,0x40003fff,0xfedffffb,
    0xff981fff,0xfffecfff,0xfd70001f,0xffb10dff,0x200003ff,0xfffffff8,
    0x3faa7fff,0x260006ff,0x0ffffffe,0x3ffff100,0x3337ff70,0x0fff7333,
    0xfe80fff7,0x6ffff84f,0x4433ffe2,0xe881fffb,0x4400bfff,0x2a0befff,
    0x201ffffe,0x40003ffc,0x3e60dffd,0xfffd85ff,0x037ffcc1,0x01bfea00,
    0x00003fff,0x226fffea,0xf981ba99,0x7c00006f,0x3f2000ff,0x8099104f,
    0xff885ffc,0x1fff703f,0x64bfffd0,0x7ffb05ff,0x02ffff88,0x203fff70,
    0x201ffff8,0x20003ffc,0xfb80fff8,0x1fff41ff,0x0007ffb8,0x3e037fd4,
    0x900001ff,0xf30009ff,0xf80000df,0x044000ff,0x17ffc000,0xe80fffb8,
    0xfffd04ff,0x980fffcb,0x7ffdc5ff,0x1bff6002,0x403fff90,0x2aa63ffc,
    0x37fd4009,0xff87fff0,0x1fff101f,0x09aa9880,0xff80dff5,0x0135531f,
    0x003ffc80,0x0006ff98,0x0007ffc0,0x7fd40000,0x0fffe207,0x3601fff7,
    0xfff14fff,0x7fc7ff80,0x7ff4004f,0x0fffc402,0xfd79ff90,0x203dffff,
    0x3f204ffc,0x827ff44f,0x36207ffb,0xabffffff,0x7ffc06ff,0x5fffffec,
    0x7ffffec0,0x0dffffff,0x75cdff30,0x002effff,0x00001fff,0x0bff9000,
    0x3e0fffb8,0x3ff204ff,0x80dff33f,0xfff31ffe,0x01599511,0xf300bffa,
    0x7fe403ff,0xffffffff,0x6ffb83ff,0xc8bfff10,0x3ea0afff,0xfff505ff,
    0xffffffff,0xffff80df,0xefffffff,0xfffff980,0xffffffff,0x74dff302,
    0x05ffffff,0x0001fff0,0x5fff0000,0x2e9fff00,0x3ee00fff,0x0bff52ff,
    0xff53ffd8,0xffffff7d,0x80dffb05,0x3201fffc,0xdeffffff,0x4c2ffffe,
    0xffc81fff,0x7fff447f,0x0fffffef,0xdfffff98,0x6ffffffd,0x7fffffc0,
    0x04ffffde,0xfffffffb,0x201dffff,0x3ff66ff9,0xf002efff,0x000001ff,
    0x007ffa80,0xfff1fff7,0x2fffb809,0xfd80bff5,0xfffff73f,0x87ffffff,
    0xf101fffb,0x7e403fff,0xfe984fff,0x6fffc0ff,0xfffff711,0xfffff981,
    0xfd02ffff,0xfff705ff,0xffff80df,0x037fe40e,0x4001ffe4,0xfffb6ff9,
    0xfff0005f,0x3332a001,0xbff90001,0x7f7ffc00,0x7fd400ff,0x80bff51f,
    0xfff93ffd,0xfffb9fff,0x7fffc41f,0xfffd710c,0x7ffe403f,0x13ffe204,
    0xffbffff5,0xb81fffff,0xffffffff,0x1fffb84f,0x01bffea0,0x3e209fff,
    0x7fe400ff,0xfff98003,0x001efffe,0x2001fff0,0x20006ffe,0x2e002fff,
    0x804fffff,0xff50fff9,0x73ffd80b,0x4c1bffff,0x7fd44fff,0xffffefff,
    0x3f201fff,0x6ffa806f,0xffffffc8,0x7d47ffff,0xffecefff,0x27fec3ff,
    0x2037fec0,0x3fe01fff,0x1ffe401f,0x7fffcc00,0x20000eff,0xf8800fff,
    0xf50001ff,0xff8001ff,0xf8800fff,0x01bfe27f,0x3fea5ffd,0x6ffc80ff,
    0xffffffb8,0x01ffffff,0x22017ff2,0xffa80fff,0x5ffacfff,0x260f7ff4,
    0x7ff47ffe,0x06ffb801,0xff00fffc,0x3ffc803f,0xffff9800,0x7c0002ff,
    0xffb800ff,0x3ff60004,0xfffb8005,0xf13f6004,0x1fff80ff,0x2605fff1,
    0xfe880fff,0xffaeffff,0x13ff201f,0x3007ffc0,0x93ff6157,0xf302fff8,
    0x0fffc3ff,0x2037fdc0,0x3fe01fff,0x1ffe401f,0x7fffcc00,0x20003fff,
    0xfe800fff,0x3fe0000f,0xffb8002f,0x6c04000f,0xfff302ff,0xf101fff8,
    0x54c401ff,0x807ffe1a,0x5c00fffc,0x7dc007ff,0x1ffe62ff,0x7f45ffd0,
    0x6ffe804f,0xf00fffc0,0xffc803ff,0xfff98003,0x004ffffb,0x8801fff0,
    0x2a0002ff,0x44000fff,0x00004fff,0x3f60dff7,0x82fff44f,0x30007ffb,
    0xffc80fff,0x2fff403f,0x8bfff500,0xf100fff8,0x7ffe43ff,0x1bffe600,
    0x7c03fff0,0x7fe401ff,0x6ff98003,0x009fffd1,0xa801fff0,0x7ec0005f,
    0xffb8005f,0xf100000f,0x3f663bff,0x7ffdc1ff,0x1bffa60b,0x17ff6200,
    0x2ffffd88,0x42fffc88,0x7ffecc08,0x83bffd06,0x7cc7ffd9,0xfe980dff,
    0xff100eff,0x3ffe205f,0x9ffb3102,0xa8013333,0x3ffa26ff,0x333009df,
    0x3333fff3,0x80001f90,0x5c402fff,0xaefffccc,0x20f6e000,0xffeffffc,
    0xfffd05ff,0x3fffffdf,0x6e665cc0,0xfd03ffff,0xdfffffff,0x8bffffdb,
    0xfffeeff9,0xff700fff,0xffffdfff,0xffff709f,0xffffdbbd,0x7ec1dfff,
    0x360fffff,0x30ffffff,0xffffffff,0xf709ffff,0xff98dfff,0x3ee5ffff,
    0xffffffff,0x0224ffff,0x0fff1000,0xffffff88,0x3003ffff,0xffd03fff,
    0x40bfffff,0xfffffff9,0x3fea04ff,0x4fffffff,0xffffff30,0xffffffff,
    0xfffb81bf,0x00dfffff,0x7fffffdc,0x3f204fff,0xffffffff,0x12ffffff,
    0x7fffffff,0x3fffffe2,0xfffff93f,0xffffffff,0x8dffffd0,0xfffffffb,
    0xffffffd0,0xffffffff,0x5f900000,0xfffff880,0x004fffff,0x3201fff1,
    0x804fffff,0xefffffd9,0x7fffdc02,0x6403ffff,0xffccffff,0x102fffff,
    0x3dfffffd,0x7fff5400,0xe9803eff,0xcdffffff,0x320dffff,0x20dffffe,
    0x0dffffec,0xffffffb3,0x507dffff,0xd88dfffd,0x2a4effff,0xfffffffe,
    0x002effff,0x5cc00000,0xbccccccc,0x002a2000,0x220006a6,0x2a001aaa,
    0x001bcccc,0x0aba9880,0x00355100,0x00035300,0x0026ae62,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x04ccc000,0x004c4000,
    0x016f6d40,0x03595100,0x22000000,0x3310000b,0x00662000,0x00006600,
    0x2e200262,0x10ceeeed,0x19ddddd7,0x77775c40,0x43deeeee,0xeeeeeedb,
    0xd0002cde,0xf100003f,0x220009ff,0x0cefffec,0xfffffd80,0x7ffdc005,
    0x4001efff,0x201ffffa,0x00ffeca8,0x3ffff620,0xb303c9df,0x03dfffff,
    0x3fff6e20,0x204d8bef,0xfffffdb8,0x7fdc4cad,0xf74fffff,0x09ffffff,
    0x7fffffdc,0x52ffffff,0xffffffff,0x005fffff,0x00027fcc,0x0027ffc4,
    0x7fffffd4,0x3ee02fff,0x02ffb8be,0xffffff90,0x74005fff,0xea81ffff,
    0x00ffffff,0xffffff70,0x543fffff,0xfffffffe,0x7fcc04ff,0xffffffff,
    0xffe981ff,0xffffffff,0x3fffea2f,0xfff53fff,0x5407ffff,0xffffffff,
    0xff31ffff,0xffffffff,0x2007ffff,0x80005ffa,0x4004fff8,0xfffffffb,
    0xfb04ffff,0xd805fa85,0xffdeffff,0xfb800fff,0x7cc1ffff,0x0fffffff,
    0xfffff980,0x3fffffff,0x3ffffff6,0x302fffff,0xffffffff,0xa87fffff,
    0xffffffff,0x443fffff,0x440adffe,0x800effca,0xffdaaaa8,0x7d440aad,
    0xebaaabff,0xa801ffff,0x300005ff,0x7cc00133,0xd510afff,0x1ff05fff,
    0x7c407f88,0x7fd41cff,0x7ffc405f,0x7fc41fff,0x00fffdff,0x10befff8,
    0x6c7fffd5,0xd711bdff,0xfff30fff,0x7fe4c37f,0x3ffe63ff,0x3f6621be,
    0x3ffd84ff,0x0037fd40,0xf007ff90,0x3fe203ff,0x5ffa803f,0x40000000,
    0xb100effe,0x2fe81fff,0x3ee02fd4,0x1ffee06f,0xffffffb0,0x7fc35303,
    0x7ffc400f,0x47fff101,0xff302ffc,0x1fffe83f,0xe8fffe60,0x7ec00fff,
    0x03ffd83f,0x00037fd4,0xff007ff9,0x2ffdc03f,0xfffffe98,0x1effffff,
    0x3ee00000,0x7fc400ff,0xa977dc4f,0x7fd403fe,0x03ffe201,0x7fdfffcc,
    0x1fff001f,0x406ffa80,0x3fea1ffc,0x88bffa00,0xfc801fff,0x03fff52f,
    0xfb03ff50,0x6ffa807f,0x0fff2000,0xc807ffe0,0xfff904ff,0xffffffff,
    0x3fa609ff,0x800fffff,0xf5003ffd,0xffffd0ff,0x20e544bf,0x3ffdc018,
    0x3fedffd0,0x1fff001f,0x01fff880,0x10021362,0x7fd43fff,0x21df3006,
    0x2a006ffc,0x807ffb01,0x20006ffa,0xff803ffc,0x5fff901f,0x3ffffa60,
    0xefffffff,0xfffff901,0xfff001ff,0x07ffc001,0x545f7f5c,0x4004fffd,
    0xf705ffe8,0x07ffe3ff,0x4007ffc0,0x00acfffd,0xdffb1000,0x0003ffc8,
    0x0000fff6,0x2a01ffec,0x320006ff,0xfff803ff,0xfffcbaab,0xbff5006f,
    0x3ffa6000,0x4400ffff,0x7f4007ff,0x3f6e201f,0x4002dfff,0x882fffe8,
    0x3ffe5fff,0x01fff001,0xffffff30,0x8800159d,0x743ffffc,0x3e0001ff,
    0xb00001ff,0xffa807ff,0x3ff20006,0xfffff803,0x0effffff,0x00bff500,
    0x007ffc00,0xb001bfe6,0xfdb885ff,0x0002dfff,0x209fffd1,0x3fe0fffc,
    0x1fff001f,0x3fffa200,0x003fffff,0x0bfffffb,0x40001fff,0x00000fff,
    0xfa807ffb,0x401ec86f,0xff803ffc,0xffffffff,0x2ffd4005,0x1fff0000,
    0x007ff980,0xfe88fff4,0xabaacfff,0x7ff44000,0x7fff304f,0xf001fff8,
    0xca8001ff,0x5ffffffe,0x3fffff80,0x0001fff0,0x75407ffc,0x2effffff,
    0x2a01ffec,0x2ffc46ff,0x200fff20,0xfeeeefff,0x2a000eff,0x200005ff,
    0xff800fff,0x3ffe000f,0x2639ff50,0x001ffffe,0x409ffff3,0xfff86ffd,
    0x01fff001,0x7fe54c00,0x7ffc03ff,0x00fff403,0xd03ffd00,0xffffffff,
    0x403ffc8b,0x7fcc5ffa,0x01ffe406,0x3f60fffc,0xf5000eff,0x7c0000bf,
    0xffe800ff,0x8fff5002,0x7677fc40,0x7fd400ff,0x3fea03ff,0xffccccef,
    0xfff801cf,0x4400a800,0x7ec05ffd,0x03ffc806,0x20bff600,0xfffffffb,
    0x037fdc3f,0xff313ff2,0x02ffd80d,0xfc81fff8,0xff5006ff,0x7fc0000b,
    0xfffc800f,0x05ffe800,0x17f227ec,0x02ffffb8,0x7fffffe4,0x07ffffff,
    0x6c00fff8,0xfff8806f,0xf9800c00,0x3ee0006f,0x3666605f,0xfff984ff,
    0x85fff102,0x3e206ff9,0xfff801ff,0x07fff701,0x000bff50,0x4007ffc0,
    0x6405fff8,0x7f400fff,0xfd837c40,0xfc801fff,0xffffffff,0xff806fff,
    0x17ffc00f,0x001ffea0,0x009fff00,0x7ffccff6,0x04ffc802,0x4c17dffd,
    0x7cc0fffe,0x7f4c1cff,0xfff8807f,0x5fffb00a,0x40fffa80,0x801feca8,
    0xf5000fff,0xfe883dff,0x1fe803ff,0x3fa237c4,0x95001eff,0xf9999999,
    0xff0017ff,0xffff801f,0x7ffdcc0c,0x7dc00006,0xfd301eff,0x67ffecdf,
    0x4ffea880,0xdfffff30,0x303fffff,0xddffffff,0x4403ffff,0xeffffffe,
    0x7ffffc40,0xdffff101,0x9fffffdb,0xfff33330,0xfc803333,0xfffeffff,
    0x9f9006ff,0x3fa25fc8,0x9999afff,0x31001b99,0x26203fff,0x99afff99,
    0xffffff80,0xffffffef,0x0336e202,0x7ffffdc0,0xfffffeee,0x3ffffe23,
    0xfffffeef,0x3ffea04f,0x03ffffff,0xffffffb1,0xb803ffff,0xffffffff,
    0x4ffff982,0x3ffffee0,0x21ffffff,0xfffffffb,0x04ffffff,0x3ffffff2,
    0x22004fff,0x0ffeceff,0x3fffffe6,0x7fffffff,0xfffffe80,0x7ffff45f,
    0xefffffff,0x3fffffa0,0x3fffffff,0x027ffdc0,0xffffff70,0x307fffff,
    0xfffffffd,0x803dffff,0xefffffd8,0xffeb8801,0x8801dfff,0xdffffffd,
    0x03bff900,0xffffffb8,0x7ff40bef,0xffffffff,0x74c07fff,0x02efffff,
    0xefffe980,0x7ffffcc1,0xffffffff,0x3ffe600f,0x3e67ffff,0xffffffff,
    0x3aa2ffff,0xfffffebb,0xffa800df,0x6dcc003f,0x1defffff,0x7ffff540,
    0x4002dfff,0x00009a98,0x00003531,0x53000000,0xfea80357,0xffffffff,
    0x31002eff,0x26000035,0xffff301a,0xffffffff,0xffc803ff,0x7e43efff,
    0xffffffff,0x4c400dff,0x440009aa,0xa980001a,0x53100009,0x00000135,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0xeedb8000,0x776440ce,0x3bbb23de,
    0xeeeeeeee,0xd914eeee,0x8819dddd,0x0ceeeeec,0x033bbb6e,0x87bddd91,
    0x2deeeedb,0x6f77764c,0x3bbbb263,0x8802deee,0x3deeeedb,0x0f7bbb26,
    0x3bbbbb6e,0x443deeee,0x10ceeeeb,0x839dddb7,0xeeeeeeda,0x2e01bcee,
    0xeeeeeeed,0x3eeeeeee,0x3bbbbb6e,0xeeeeeeee,0x77776dc5,0x200acdee,
    0x4ffffff9,0x7fffffe4,0xffffffb1,0xffffffff,0x3ffff2bf,0x7fe44fff,
    0xf34fffff,0xc89fffff,0x32ffffff,0xffffffff,0xffffffe8,0xfffffd1f,
    0x801fffff,0xfffffffb,0xfffffd2f,0x7fffcc5f,0xffffffff,0x3fffee2f,
    0xffff75ff,0xffff8bff,0xffffffff,0x7ffcc0cf,0xffffffff,0xf54fffff,
    0xffffffff,0x4dffffff,0xfffffffa,0x103fffff,0x87ffffff,0x0ffffffb,
    0xfffffffb,0xffffffff,0x3ffffeab,0x7ffd43ff,0xff12ffff,0xfb83ffff,
    0xf10fffff,0x8dffffff,0xfffffffd,0xffffff90,0xf300dfff,0x1fffffff,
    0x3ffffff6,0x3ffffe20,0xffffffff,0x3ffffea0,0xfffff33f,0xffffe89f,
    0xffffffff,0x7fffc46f,0xffffffff,0xff34ffff,0xffffffff,0x4cdfffff,
    0xffffffff,0x106fffff,0x360dfff7,0x3f60bfff,0xfffbaadf,0x25ffcaab,
    0x00bfffc9,0x03bfff51,0x360bfff5,0x7440afff,0x5301acff,0xa981fff9,
    0x01abfffa,0x2fffea20,0x3fffee0a,0xf555500b,0x015557ff,0x8817fff1,
    0xb302fffa,0xb7555dff,0xa889ffff,0xaaaacffe,0x24ffdaaa,0xaacfffa8,
    0x6ffcaaaa,0x556ffec4,0x4ffffdba,0x70ffff20,0xffb09fff,0x507ffc47,
    0xfff88bff,0x07ffd402,0x983fff70,0x3f604fff,0x2a0ccc3f,0x7ffc06ff,
    0x3ffe0001,0x0ffffe41,0x003ffe00,0xff00fffc,0x2ffdc03f,0x3a0fffb0,
    0x7fdc02ff,0x201ffe84,0xffc86ffa,0x07fffa04,0xf32fffd8,0x3ff60dff,
    0xa83ffe23,0x6ffc85ff,0x402ffec0,0x3fa0effe,0x27fe406f,0x7dc5fff3,
    0x0fffc05f,0x43fff000,0x000efffd,0xf000fff8,0x7ffc03ff,0x817fee01,
    0xfe80fff8,0xff504c2f,0x983ffd07,0xf90bff30,0x7ff4409f,0x57fff405,
    0xfb00efff,0x07ffc45f,0xff30bff5,0x3ffe203f,0x4fff9801,0xb803fff9,
    0x3fff25ff,0xf013ff25,0x7c0003ff,0xfffe89ff,0xfff0000e,0x07ffe001,
    0x2e01fff8,0x3fe205ff,0x22ffe81f,0x07fe27fb,0x6fc87ffa,0x3ff20bfa,
    0x07ffcc04,0xffffff10,0x07fd403f,0x7c41fff1,0x09ffb03f,0xb801bff2,
    0x4fffbfff,0x3e6ffa80,0xffb0ffff,0x01fff807,0x3abffe00,0x40005fff,
    0xff000fff,0x0fffc03f,0x5c0bff70,0x5ffd07ff,0xe800ffec,0x03ffa1ff,
    0x2013ff20,0x7cc02fff,0xa802ffff,0x207ffc41,0x3ffea029,0x003fff80,
    0x37fffff4,0xf37ff980,0x3fa5ffff,0x0fffc02f,0xfffff000,0x80001fff,
    0xff000fff,0xffffffff,0x7dc03fff,0xfffb885f,0xfffffd05,0x3a005fff,
    0xffffffff,0x04ffc801,0xd803ffd8,0x20006fff,0x8000fff8,0x7fd43fff,
    0x7fc4000f,0xf1001fff,0xffff91ff,0x007ffebf,0x40003fff,0xffffffff,
    0x3fe0000e,0xffff000f,0xffffffff,0x77fdc03f,0xffffeccc,0xffffd01f,
    0x2005ffff,0xfffffffe,0x4ffc801f,0x403ffc80,0x03fffffa,0x01fff100,
    0xe8dff700,0xf70004ff,0xff8007ff,0xffcfff9f,0x400fff8f,0x00401fff,
    0xffdfffff,0x3e0001df,0xfff000ff,0xffffffff,0x7fdc03ff,0xffffffff,
    0x3fffa01f,0x002fffff,0xfffffffd,0x9ff9003f,0x407ff900,0xfffffff9,
    0xfff88002,0xfff88000,0x003fff32,0x0007ffc0,0x3fff3ffa,0x7ffcfff8,
    0x201fff80,0xffff06fb,0x01bffee3,0x8007ffc0,0x9999afff,0x201fff99,
    0xfffffffb,0x7f400dff,0x1ffe99bf,0x335ffd00,0xf9003ffd,0x5ffd009f,
    0x27fffe20,0x4001fffe,0x0000fff8,0x3ff2bffb,0x7ffc0006,0x7ffec000,
    0xffff95ff,0x3fff00df,0x7c07ff40,0x7ffd41ff,0x0fff8003,0x403fff00,
    0x3ee01fff,0x09acccef,0x645ffd00,0x3ffa007f,0xee89ff61,0x4027fe40,
    0xffd01fff,0x3bffe23f,0x3ffe2000,0xfff30000,0x0005fff3,0x4000fff8,
    0x32fffffd,0x00bfffff,0x7fc03fff,0x81fff81f,0x4000fffc,0xff000fff,
    0x0fffc03f,0x000bff70,0x0d42ffe8,0xa83ffd00,0xf90bfee0,0x7ffa809f,
    0x987fff90,0x22005fff,0x20000fff,0x07fffffe,0x00fff800,0x7ffffe40,
    0x17ffffa0,0xf807ffe0,0x1fff81ff,0x8007ffd0,0xff000fff,0x0fffc03f,
    0x000bff70,0x0002ffe8,0x3200fff4,0x27fe44ff,0x70bfff50,0x3ee0bfff,
    0x4cc404ff,0x00099fff,0x4fffffb8,0xff331000,0x2e00135f,0x7e45ffff,
    0x26604fff,0x9999afff,0x441fff99,0xfb80afff,0x331009ff,0x1333fff3,
    0x40bffe20,0x3202fff8,0x00199dff,0x4cdfff44,0x7ffc4000,0x9999999a,
    0x7fe44ffd,0xfcb9999d,0x3fe60fff,0x7dc5ffff,0xe82fffff,0xffffffff,
    0x7fc4006f,0xd8000fff,0xffffffff,0xfffa806f,0x7fffcc3f,0xfffffb83,
    0xffffffff,0xffd11fff,0xf81dffff,0x7f45ffff,0xffffffff,0x3ff60eff,
    0xfd32ffff,0x641fffff,0xffffffff,0x7ff4403f,0x1fffffff,0x7ffff440,
    0xffffffff,0xffd14fff,0xffffffff,0xffb83fff,0x7f47ffff,0x4c5fffff,
    0xffffffff,0x64001fff,0x88005fff,0xffffffff,0x7cc01fff,0xffe80fff,
    0xffffe82f,0xffffffff,0xff71ffff,0x85ffffff,0x30fffffb,0xffffffff,
    0x225fffff,0x5fffffff,0xfffffff7,0x7fffffc5,0x5407ffff,0xffffffff,
    0x7fd404ff,0xffffffff,0x74ffffff,0xffffffff,0x103dffff,0x87dffffb,
    0x1dffffea,0xffffffc8,0x98004fff,0x90002fff,0xfffffffd,0xfff1009f,
    0x07fff20b,0x3fffffaa,0xffffffff,0xfffb11ff,0xff01bfff,0xfffc89df,
    0xffffffff,0x7ffff645,0xffffb11d,0x7ff5c1bf,0x02efffff,0xffffffd8,
    0x6c401dff,0xffffffff,0x4fffffff,0xffffffb1,0x00057bdf,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x3a000000,0xeeeeeeee,0xb710eeee,0xdddddddd,0x32200379,0x2eeeeeee,
    0x3bbb6a00,0xeeedb884,0x3bb6e0ce,0x7774c02e,0x0000003d,0x97300000,
    0x00000537,0x2a620000,0x530000aa,0x00000135,0xaba98800,0x7ffffc02,
    0xffffffff,0xffffff70,0x9fffffff,0xfffff900,0x2200dfff,0x42ffffff,
    0xfffffffb,0xdfffff15,0xfffffd80,0x0005dd32,0x003fb800,0xffffffc8,
    0x75400006,0x03bfb11e,0x3fffffa6,0x2204fcef,0xeffffffc,0xffffb102,
    0xfffffc85,0xffff7101,0xf89fbfff,0xffffffff,0xff30ffff,0xffffffff,
    0xa809ffff,0xffffffff,0xffff001f,0x7fcc1fff,0x3e3fffff,0x102fffff,
    0x23ffffff,0x001efffc,0x00ffd000,0xffffffc8,0xd300007f,0x3ff2bfff,
    0xffffc85f,0xffffffff,0xfffffa80,0x40dfffff,0x42fffffa,0x81ffffff,
    0xffffffe8,0x7fc7ffff,0xfbaaaabf,0x7fd446ff,0xecbaaabf,0x54402fff,
    0x4fffffda,0x3fff6600,0x7fe5444f,0xffffd80f,0xdffff905,0x7ffffcc1,
    0x7c00000d,0xff1000ff,0x03ffd7df,0xfffd8800,0xbfff92ff,0xdeffffb8,
    0x1ffffffe,0x77ffffcc,0x45fffffd,0x42ffffe8,0x81fffffc,0xedeffffd,
    0x3e0fffff,0xfffe80ff,0x403fff01,0x3e004ffe,0x007ffeff,0x0fffffe4,
    0xfc837fd4,0xff81ffff,0xfd886fff,0x000cffff,0x001fff00,0x0051bfea,
    0xffffc880,0x3bf661df,0x07bffe21,0x887fffa6,0x4c0bfffe,0xfd02fffd,
    0x0fff405f,0x5405fffc,0x07ffc7ff,0xf80ffff2,0x3fee01ff,0x1fff5005,
    0x64005fff,0xa86fffff,0xfff906ff,0xfffb8bff,0x3fa606ff,0x0003ffff,
    0x5000fff8,0x40000dff,0x2efffffb,0x037fec00,0xfb83ffe2,0x7fec02ff,
    0x405ffd07,0xffd81ffe,0x42ea809d,0x7ffd47fd,0x00fffc04,0x36009ffd,
    0x0dff95ff,0x7feffe40,0x837fd44f,0x0fffeffc,0x1bffbffa,0x3ffffaa0,
    0x3fe0002e,0xfff3000f,0xfea80005,0x0003ffff,0xf9005ffd,0xcceffc8b,
    0xfdcccccc,0x2ffe81ff,0x2607ffa0,0xcdefffff,0x4c5b300a,0xff806fff,
    0x7ff5cc1f,0xfff8802f,0x003fff31,0x3ff33ff2,0x41bfea1f,0x4ffecffc,
    0xdff7fff5,0x7fffdc00,0xff8001ef,0x3ff6000f,0xfd98000e,0x000cffff,
    0x001fff10,0x3ffffa02,0xffffffff,0xffe82fff,0x407ffa02,0xfffffffd,
    0xfe8802ff,0xfff800ff,0xffffffff,0xdff9005f,0x9004ffd8,0xdffd19ff,
    0xfc837fd4,0xd8fffbcf,0x06ffadff,0x7fffe440,0xccca80df,0xcccfffcc,
    0xffd80acc,0x3f22004f,0x000cffff,0x003ffc40,0x3fffffa0,0xffffffff,
    0x2ffe83ff,0x9807ffa0,0xffffffed,0x7ffec05f,0xfffff002,0x9fffffff,
    0x50fffe00,0x3f200fff,0x27fff54f,0xff906ffa,0x3ff7ffe9,0x006ffa9f,
    0xfffffb10,0x3fffee19,0xffffffff,0x7fec4fff,0x9ff72fff,0x7ffffe44,
    0x3e00001d,0x360000ff,0xccccceff,0x2ccccccc,0x3a02ffe8,0x440881ff,
    0x1fffeca9,0x009fff70,0x7ffffffc,0x04ffffff,0x555fffd4,0x802fffba,
    0x3ff64ffc,0x906ffa8f,0x3fff29ff,0x0dff56ff,0x3fffa600,0x3ffee3ff,
    0xffffffff,0x3f24ffff,0xe8ffffff,0x3fee1fff,0x0002efff,0x4013ff60,
    0x3ffee0a8,0xffe80001,0x83fff102,0x7ec01ff9,0x5fff984f,0xfff80ba8,
    0xfdb9999a,0x3f603fff,0xffffffff,0xffc806ff,0x2b7ffe24,0x9ff906ff,
    0x4bffffe2,0x44006ffa,0x0cfffffd,0xfccccca8,0x2cccccff,0x7fc67ffc,
    0x886fffdf,0x1dfffffc,0xf70b2600,0x7dc019ff,0x3fffe25f,0x3cb9880a,
    0xc88bffb0,0x7e42ffff,0xffd302ef,0x0efff88b,0x7fc1ffc4,0x37ff401f,
    0xffffff88,0x1fffffff,0x2e27fe40,0x06ffdfff,0x7fe49ff9,0x01bfea6f,
    0x7ffffe44,0xfff8000d,0x73ffcc00,0x80dfffff,0xdfffffc8,0x27ffd400,
    0x3bbffff6,0x6ffffeec,0x7fffffcc,0xffffffed,0xdefffb82,0xfffffffe,
    0x3fffff25,0xfffffede,0x40fffec2,0xfff85ffa,0x07ffcc01,0x7777ffe4,
    0x4fffeeee,0x6c27fe40,0x906fffff,0x7ffcc9ff,0x201bfea3,0x1efffffb,
    0x03ffe000,0xfd8bff70,0xb3003fff,0x019fffff,0x3a1bfff6,0xffffffff,
    0xfb81ffff,0xffffffff,0xe881ffff,0xffffffff,0xf70fffff,0xffffffff,
    0xffc89fff,0x0dff503f,0xf8803fff,0x3fff80ff,0x203ffd40,0xff884ffc,
    0xff906fff,0x2a0ccb89,0x3faa06ff,0x0002efff,0x4c00fff8,0x3fe21fff,
    0x754001ff,0xa83fffff,0xfd503fff,0x9fffffff,0x7ffec401,0x1cefffff,
    0x3ffffa20,0x4effebef,0x3fff7ba2,0x541dffff,0x9999efff,0x446ffb99,
    0x9999afff,0x86ffeca9,0x4c01fffa,0x3f203fff,0xfffb81cf,0x39ff906f,
    0x86ffb880,0x3fffffe9,0x3ffe0000,0x7fffc400,0xffffffef,0xfffb8006,
    0x0dc42eff,0x555d54c0,0xaba98001,0xba880019,0x5510000a,0x3f201357,
    0xffffffff,0xfd16ffff,0xffffffff,0x47ffffff,0xfffffff9,0x7ffffcc2,
    0x3ffa62ff,0x7f42ffff,0x7ff4c6ff,0x74c2ffff,0x52ffffff,0x019fffff,
    0x0fff8000,0xfffffa80,0x1fffffff,0xfffc8800,0x000003ff,0x00000000,
    0xc8000000,0xffffffff,0xf76fffff,0xffffffff,0x89ffffff,0xfffffffc,
    0x7ffffe45,0x3ffee5ff,0x7cc5ffff,0x7ffdc6ff,0x7dc5ffff,0x95ffffff,
    0x0001bfff,0x801ffa00,0xdfffffea,0x40004ffe,0x005fffc8,0x00000000,
    0x00000000,0xfffffc80,0xffffffff,0xfffffb16,0x9dffffff,0xffffb303,
    0xffd983bf,0x3621dfff,0x81dfffff,0x7ec46ffc,0x441dffff,0x1dfffffd,
    0x00003bb1,0x8003eb80,0x0000aaa9,0x00776600,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00d4c000,0x1abaa880,0x15440000,0x260dd400,
    0x0000001a,0x00000000,0x00000000,0x55100000,0x00000015,0x3310cccc,
    0x26099983,0xcccccccc,0x2ccccccc,0x3fff6a00,0x6cc03dff,0xefffffff,
    0x7fff4402,0xffffb16f,0x7ffec419,0xeadfffed,0xf702efff,0x2e09ffff,
    0x803fffff,0xfe9803fb,0x3f60dfff,0x3ae1efff,0x20dfffff,0x4ffffffd,
    0x7ffffffc,0x21ffffff,0xfdbfffea,0x000dffff,0xfb8006c4,0x3fffa4ff,
    0x22bfff10,0xffffffff,0xffffffff,0xfffc801f,0x04ffffff,0x3ffffffe,
    0x2e03ffff,0xfbefffff,0x25ffffff,0xfffffffa,0xffffffff,0xffff81ff,
    0xffff07ff,0xfff00fff,0xfffff900,0x3fffe65f,0x3fffa5ff,0xff32ffff,
    0x41ffffff,0xffffffff,0x361fffff,0xffffffff,0x000fffff,0x7ec017f6,
    0x1fff20ff,0x3fe29fff,0xffffffff,0x1fffffff,0x77fffe40,0x05ffffed,
    0xdbdffffb,0x2201ffff,0xfffffffe,0x0fffefff,0xdfffffd1,0xfbfffffd,
    0xfff709ff,0x3fee09ff,0x7c404fff,0x7f4c00ff,0x7ff46fff,0x3fee1fff,
    0x7f46ffff,0x7c4fffff,0xffffffff,0x3aa0ffff,0xdeffffff,0x9005ffff,
    0xff009fff,0x46ffb89f,0x32e63ffe,0xcccccccc,0x401bcccc,0xc80dfffb,
    0x9a885fff,0x02fff880,0xffffff98,0x3f20b6a2,0x3fffe3ff,0x260dff51,
    0x3ffe27ff,0x040bffa0,0x0041fff1,0x265ffff9,0x2604ffff,0xff301fff,
    0x07ffa05f,0x203ffff5,0x5c0efffe,0xffa807ff,0x3e602fff,0x2ffd40ff,
    0x0000bff6,0x04ffe800,0x9803ffdc,0x009ff909,0x01bffff3,0x3a2ffe40,
    0x1ffe62ff,0xff71fff8,0x03ffe27f,0xff37dfd1,0x01ffd73f,0x3f3fffea,
    0xfd803fff,0x0dffb05f,0x3fea3fe4,0x3ffa01ff,0x807ffe05,0xfffffff9,
    0x307ff701,0x1ffc89ff,0xf1000000,0xfff100df,0xffff9105,0x009fffff,
    0x0007fff3,0xffe89ff9,0xd81ffe61,0xdfffd3ff,0x3ea1bfea,0xffffffff,
    0x2602ffff,0x2fffffff,0x83fff300,0x2202fff8,0x3fffea0a,0x017ff401,
    0x3e203ffd,0xffff9fff,0xf107fe80,0x4c7fb87f,0xcccccccc,0x2ccccccc,
    0x4013fee0,0x7fdc4ffc,0xffffffff,0x6ff9804f,0x89ff9000,0x3fe61ffe,
    0x277fee07,0xfc9fffff,0xffffb04f,0xbfffffff,0xfffff300,0x5ffd8003,
    0x20037fe4,0x801ffffa,0x3fa02ffe,0x3fffd01f,0x883bffe6,0x07fe03ff,
    0x7ffc4ff5,0xffffffff,0x01ffffff,0x2e009ff9,0x3ffee5ff,0xffffffff,
    0x6ff9804f,0x89ff9000,0x3fe61ffe,0x33ffe607,0xfecfffff,0x3fae202f,
    0x00beffff,0xfffffd88,0x3fe6000d,0x05fff11f,0x0ffffd40,0x202ffe80,
    0xffd81ffe,0x2fffd42f,0x0fd80df5,0xfff12fc4,0xffffffff,0x03ffffff,
    0x6c01bfe6,0xdfff12ff,0x7fecc459,0x06ff9804,0xe89ff900,0x1ffe61ff,
    0xbffffff0,0x01ffffff,0x7fffff70,0x3fffa200,0x000effff,0x7fe57ffa,
    0x3ffea006,0x3ffa001f,0x307ffa02,0x3f209fff,0x803f52ff,0xb9815028,
    0xcccccccc,0x01bccccc,0x2a01fffc,0xfff70fff,0x027fec01,0x80037fcc,
    0x7ff44ffc,0xb01ffe61,0xfd1fffff,0xf300ffff,0x03ffffff,0x94fffe98,
    0x2003ffff,0xfffafffa,0xffff5003,0xe80dd883,0x3ffa02ff,0x202ffc41,
    0x00001ffd,0x40000000,0xc80cfffd,0x3fee6fff,0xfffea80e,0xff73100c,
    0x0013333d,0xffe89ff9,0x701ffe62,0x3eebffff,0xfe805fff,0x06fff9ff,
    0x70ffffe6,0x2005ffff,0x07fffffe,0x35ffff50,0x85ff7333,0x3e02ffe8,
    0x002982ff,0xaa980035,0x0002601a,0xffb10002,0xfffdbdff,0x7ffcc1df,
    0xffffedef,0x7f45ffff,0xffffffff,0xfe880eff,0xffd1efff,0x3fffe6bf,
    0x3ffff302,0x00ffffe2,0x3e63fff3,0xfffe81ff,0xffd10fff,0xa801dfff,
    0x803fffff,0xfffffff8,0x24ffffff,0x0ffffffd,0x17ffffea,0xf5000000,
    0xfff707ff,0xbf30601d,0xffffb000,0x01bfffff,0xfffffff9,0xffffffff,
    0x3ffffe61,0xffffffff,0xfffffa82,0x1ffffd3f,0x40bffff3,0x7fec7fff,
    0x1ffc401f,0xff303fee,0x265fffff,0x2fffffff,0x07fffe80,0xffffff30,
    0x9fffffff,0x3fffffe2,0x3ffff63f,0x000000ff,0xb0bffe60,0x83ffffff,
    0x3bfe26fd,0x7fedc000,0x5c03efff,0xcfffffff,0x644efffd,0xffffffff,
    0xd880dfff,0xfd0dffff,0x3ffe69df,0x13ff601e,0x0400fff5,0x3fff2008,
    0x3ff20dff,0xf5005fff,0x3e6007ff,0xffffffff,0x3ae4ffff,0x260dffff,
    0x004efffe,0x7fc40000,0x3fffee1f,0xffb2ffff,0x01ffe88f,0x80035300,
    0x001aba98,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0xff800000,0x557ffe0f,0xffffffff,0x003ffb04,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0xfd000000,0x74c5fc8f,
    0x404fffff,0x000002fb,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x086fd800,0x07dff910,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x0005fc80,
    0x00000003,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x13ee0000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0xd1000000,0x00000003,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,
};

static signed short stb__courier_bold_36_usascii_x[95]={ 0,6,4,1,2,2,3,7,8,3,2,1,6,2,
7,2,2,2,1,2,2,2,3,2,2,3,7,6,-1,0,1,3,2,-1,0,0,0,0,1,1,0,2,1,0,
1,-1,-1,0,1,0,0,1,1,0,-1,-1,0,0,2,7,2,3,2,-2,6,1,-1,1,0,1,2,1,0,1,
2,1,2,-1,0,1,-1,1,1,2,2,0,0,-1,0,0,2,5,7,5,1, };
static signed short stb__courier_bold_36_usascii_y[95]={ 26,5,6,4,3,6,8,6,5,5,5,7,21,15,
22,3,5,5,5,5,5,5,5,5,5,5,11,11,7,12,7,6,5,7,7,6,7,7,7,6,7,7,7,7,
7,7,7,6,7,6,7,6,7,7,7,7,7,7,7,5,3,5,4,32,4,11,5,11,5,11,5,11,5,5,
5,5,5,11,11,11,11,11,11,11,6,11,11,11,11,11,11,5,5,5,13, };
static unsigned short stb__courier_bold_36_usascii_w[95]={ 0,6,11,17,15,15,15,5,8,8,15,17,8,15,
5,15,15,15,16,15,15,15,15,15,15,15,5,8,19,19,19,14,14,21,19,18,18,18,18,18,19,15,19,20,
18,21,20,19,18,19,20,17,17,19,21,21,19,19,15,9,15,9,15,23,7,18,20,18,20,17,17,18,19,17,
13,18,16,21,19,17,20,19,18,15,17,19,20,21,19,19,15,9,5,9,17, };
static unsigned short stb__courier_bold_36_usascii_h[95]={ 0,22,10,25,27,21,19,10,26,26,15,19,11,4,
5,27,22,21,21,22,21,22,22,22,22,22,16,19,19,10,19,21,24,19,19,21,19,19,19,21,19,19,20,19,
19,19,19,21,19,25,19,21,19,20,19,19,19,19,19,26,27,26,12,4,7,16,22,16,22,16,21,22,21,21,
28,21,21,15,15,16,22,22,15,16,21,16,15,15,15,22,15,26,26,26,8, };
static unsigned short stb__courier_bold_36_usascii_s[95]={ 253,37,219,127,31,57,140,219,108,99,101,
122,210,210,180,47,44,106,73,237,90,221,60,1,132,116,176,243,156,231,102,
140,165,37,17,155,236,217,198,174,159,143,213,122,103,80,59,37,179,145,233,
122,21,193,39,81,1,61,1,79,15,89,194,186,243,19,95,182,148,201,189,
76,169,19,1,207,226,57,174,1,200,180,38,239,1,219,137,79,117,17,158,
69,63,117,225, };
static unsigned short stb__courier_bold_36_usascii_t[95]={ 1,30,115,1,1,53,95,126,1,1,115,
95,115,24,24,1,30,53,53,1,53,1,30,30,30,30,95,30,95,115,95,
53,1,95,95,53,75,75,75,53,75,75,53,75,75,95,95,53,75,1,53,
53,75,53,75,75,75,75,95,1,1,1,115,24,126,115,30,95,30,95,30,
30,30,53,1,30,30,115,115,115,1,1,115,95,53,95,115,115,115,30,115,
1,1,1,126, };
static unsigned short stb__courier_bold_36_usascii_a[95]={ 305,305,305,305,305,305,305,305,
305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,
305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,
305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,
305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,
305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,
305,305,305,305,305,305,305, };

// Call this function with
//    font: NULL or array length
//    data: NULL or specified size
//    height: STB_FONT_courier_bold_36_usascii_BITMAP_HEIGHT or STB_FONT_courier_bold_36_usascii_BITMAP_HEIGHT_POW2
//    return value: spacing between lines
static void stb_font_courier_bold_36_usascii(stb_fontchar font[STB_FONT_courier_bold_36_usascii_NUM_CHARS],
                unsigned char data[STB_FONT_courier_bold_36_usascii_BITMAP_HEIGHT][STB_FONT_courier_bold_36_usascii_BITMAP_WIDTH],
                int height)
{
    int i,j;
    if (data != 0) {
        unsigned int *bits = stb__courier_bold_36_usascii_pixels;
        unsigned int bitpack = *bits++, numbits = 32;
        for (i=0; i < STB_FONT_courier_bold_36_usascii_BITMAP_WIDTH*height; ++i)
            data[0][i] = 0;  // zero entire bitmap
        for (j=1; j < STB_FONT_courier_bold_36_usascii_BITMAP_HEIGHT-1; ++j) {
            for (i=1; i < STB_FONT_courier_bold_36_usascii_BITMAP_WIDTH-1; ++i) {
                unsigned int value;
                if (numbits==0) bitpack = *bits++, numbits=32;
                value = bitpack & 1;
                bitpack >>= 1, --numbits;
                if (value) {
                    if (numbits < 3) bitpack = *bits++, numbits = 32;
                    data[j][i] = (bitpack & 7) * 0x20 + 0x1f;
                    bitpack >>= 3, numbits -= 3;
                } else {
                    data[j][i] = 0;
                }
            }
        }
    }

    // build font description
    if (font != 0) {
        float recip_width = 1.0f / STB_FONT_courier_bold_36_usascii_BITMAP_WIDTH;
        float recip_height = 1.0f / height;
        for (i=0; i < STB_FONT_courier_bold_36_usascii_NUM_CHARS; ++i) {
            // pad characters so they bilerp from empty space around each character
            font[i].s0 = (stb__courier_bold_36_usascii_s[i]) * recip_width;
            font[i].t0 = (stb__courier_bold_36_usascii_t[i]) * recip_height;
            font[i].s1 = (stb__courier_bold_36_usascii_s[i] + stb__courier_bold_36_usascii_w[i]) * recip_width;
            font[i].t1 = (stb__courier_bold_36_usascii_t[i] + stb__courier_bold_36_usascii_h[i]) * recip_height;
            font[i].x0 = stb__courier_bold_36_usascii_x[i];
            font[i].y0 = stb__courier_bold_36_usascii_y[i];
            font[i].x1 = stb__courier_bold_36_usascii_x[i] + stb__courier_bold_36_usascii_w[i];
            font[i].y1 = stb__courier_bold_36_usascii_y[i] + stb__courier_bold_36_usascii_h[i];
            font[i].advance_int = (stb__courier_bold_36_usascii_a[i]+8)>>4;
            font[i].s0f = (stb__courier_bold_36_usascii_s[i] - 0.5f) * recip_width;
            font[i].t0f = (stb__courier_bold_36_usascii_t[i] - 0.5f) * recip_height;
            font[i].s1f = (stb__courier_bold_36_usascii_s[i] + stb__courier_bold_36_usascii_w[i] + 0.5f) * recip_width;
            font[i].t1f = (stb__courier_bold_36_usascii_t[i] + stb__courier_bold_36_usascii_h[i] + 0.5f) * recip_height;
            font[i].x0f = stb__courier_bold_36_usascii_x[i] - 0.5f;
            font[i].y0f = stb__courier_bold_36_usascii_y[i] - 0.5f;
            font[i].x1f = stb__courier_bold_36_usascii_x[i] + stb__courier_bold_36_usascii_w[i] + 0.5f;
            font[i].y1f = stb__courier_bold_36_usascii_y[i] + stb__courier_bold_36_usascii_h[i] + 0.5f;
            font[i].advance = stb__courier_bold_36_usascii_a[i]/16.0f;
        }
    }
}

#ifndef STB_SOMEFONT_CREATE
#define STB_SOMEFONT_CREATE              stb_font_courier_bold_36_usascii
#define STB_SOMEFONT_BITMAP_WIDTH        STB_FONT_courier_bold_36_usascii_BITMAP_WIDTH
#define STB_SOMEFONT_BITMAP_HEIGHT       STB_FONT_courier_bold_36_usascii_BITMAP_HEIGHT
#define STB_SOMEFONT_BITMAP_HEIGHT_POW2  STB_FONT_courier_bold_36_usascii_BITMAP_HEIGHT_POW2
#define STB_SOMEFONT_FIRST_CHAR          STB_FONT_courier_bold_36_usascii_FIRST_CHAR
#define STB_SOMEFONT_NUM_CHARS           STB_FONT_courier_bold_36_usascii_NUM_CHARS
#define STB_SOMEFONT_LINE_SPACING        STB_FONT_courier_bold_36_usascii_LINE_SPACING
#endif

