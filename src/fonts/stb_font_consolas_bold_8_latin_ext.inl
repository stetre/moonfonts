// Font generated by stb_font_inl_generator.c (4/1 bpp)
//
// Following instructions show how to use the only included font, whatever it is, in
// a generic way so you can replace it with any other font by changing the include.
// To use multiple fonts, replace STB_SOMEFONT_* below with STB_FONT_consolas_bold_8_latin_ext_*,
// and separately install each font. Note that the CREATE function call has a
// totally different name; it's just 'stb_font_consolas_bold_8_latin_ext'.
//
/* // Example usage:

static stb_fontchar fontdata[STB_SOMEFONT_NUM_CHARS];

static void init(void)
{
    // optionally replace both STB_SOMEFONT_BITMAP_HEIGHT with STB_SOMEFONT_BITMAP_HEIGHT_POW2
    static unsigned char fontpixels[STB_SOMEFONT_BITMAP_HEIGHT][STB_SOMEFONT_BITMAP_WIDTH];
    STB_SOMEFONT_CREATE(fontdata, fontpixels, STB_SOMEFONT_BITMAP_HEIGHT);
    ... create texture ...
    // for best results rendering 1:1 pixels texels, use nearest-neighbor sampling
    // if allowed to scale up, use bilerp
}

// This function positions characters on integer coordinates, and assumes 1:1 texels to pixels
// Appropriate if nearest-neighbor sampling is used
static void draw_string_integer(int x, int y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0, cd->t0); glVertex2i(x + cd->x0, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t0); glVertex2i(x + cd->x1, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t1); glVertex2i(x + cd->x1, y + cd->y1);
        glTexCoord2f(cd->s0, cd->t1); glVertex2i(x + cd->x0, y + cd->y1);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance_int;
    }
    glEnd();
}

// This function positions characters on float coordinates, and doesn't require 1:1 texels to pixels
// Appropriate if bilinear filtering is used
static void draw_string_float(float x, float y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0f, cd->t0f); glVertex2f(x + cd->x0f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t0f); glVertex2f(x + cd->x1f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t1f); glVertex2f(x + cd->x1f, y + cd->y1f);
        glTexCoord2f(cd->s0f, cd->t1f); glVertex2f(x + cd->x0f, y + cd->y1f);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance;
    }
    glEnd();
}
*/

#ifndef STB_FONTCHAR__TYPEDEF
#define STB_FONTCHAR__TYPEDEF
typedef struct
{
    // coordinates if using integer positioning
    float s0,t0,s1,t1;
    signed short x0,y0,x1,y1;
    int   advance_int;
    // coordinates if using floating positioning
    float s0f,t0f,s1f,t1f;
    float x0f,y0f,x1f,y1f;
    float advance;
} stb_fontchar;
#endif

#define STB_FONT_consolas_bold_8_latin_ext_BITMAP_WIDTH         256
#define STB_FONT_consolas_bold_8_latin_ext_BITMAP_HEIGHT         60
#define STB_FONT_consolas_bold_8_latin_ext_BITMAP_HEIGHT_POW2    64

#define STB_FONT_consolas_bold_8_latin_ext_FIRST_CHAR            32
#define STB_FONT_consolas_bold_8_latin_ext_NUM_CHARS            560

#define STB_FONT_consolas_bold_8_latin_ext_LINE_SPACING           5

static unsigned int stb__consolas_bold_8_latin_ext_pixels[]={
    0x83118844,0x53003981,0x6441b817,0x57070d40,0x4cc1c981,0x20554040,
    0x481cc0ab,0x4535065c,0x4220824c,0x2005d4c0,0xab81c44a,0x15515540,
    0x81ac8398,0x2111a808,0x4c402a80,0x57064419,0x44183981,0x0cdc3980,
    0x34986451,0x550f3a69,0x0cd44b87,0x98aa612a,0x10e61dc6,0x3be61b1b,
    0x9987dd34,0x0d5c1cc0,0x1910d064,0xb9347258,0x5c28a89a,0x33072a24,
    0x0b81a988,0x42883331,0x37a22a98,0x1ad91a86,0x6d43b071,0x73154c4e,
    0x1e74c170,0x543550f9,0x325d6618,0x206dd269,0x31d44ee9,0x445b87dd,
    0x9a0b26de,0x32b23ee9,0xd1d8b31d,0xbb11f74c,0x8874b61f,0xbd11a6de,
    0x9347258d,0x468e4d3d,0xd334723a,0x2268e47d,0x89a395de,0x9a390fdd,
    0x93eea82c,0x1f74cd3d,0x22cc9df9,0x79d35de8,0x0db977a2,0x79d31674,
    0x549874b6,0x9139a4c7,0x876cec7f,0x1a3b3dd9,0x0e82c8f9,0xd9a3b1c8,
    0x9df32ccd,0xd1d8ec7a,0x3b524dd4,0x3234164b,0x268e4b02,0x34726eac,
    0x3472d177,0x4d1c9a3b,0x2a68e44b,0xb347249b,0x32770f93,0x234766db,
    0x12e2cc1d,0x4425c1b7,0x495b33fc,0x9676a0db,0x933dd9c9,0xb95d3cc0,
    0xb1eb5d43,0x93b16743,0xe8ec074f,0x333763b1,0x1d2c8b31,0xcda8ec7a,
    0x93b16740,0x1f27634f,0x2726964b,0x7734727c,0x3d3472d1,0x3268e476,
    0x36a68e42,0x7934720c,0x6ce4ee1a,0x3b0ec7a7,0x22164598,0x4c0593fc,
    0x644fdd77,0x188b3a3f,0x9cd26d75,0x27763eec,0x32d5970e,0x92b661d2,
    0x34164d3c,0x666c3a59,0x74d3be64,0xa874b23e,0x323dc3ee,0x34f234d3,
    0x323ee996,0x73cb2789,0x93cb2d17,0x279643a5,0x2a79644b,0x13cb23ee,
    0x32770ddd,0x074b27a9,0x2e2cc9d7,0x212ef304,0x3a1d3eec,0x98f73cc1,
    0x2936acbd,0xdf30a249,0xd9b6f547,0x89fbae3e,0xc83a26ee,0xac8fb663,
    0x3a23a808,0x647db30b,0x10f2278a,0xd10f4ddd,0x0ea34cdd,0x47dd33cc,
    0x7dd36de9,0xdd31f6cc,0xe9af7447,0x99e2b23e,0x221443ee,0xb30a22d9,
    0x1442887d,0x77657ba2,0x2a8bdd13,0x4fbb2588,0xdbd503c8,0x83324d26,
    0x87400038,0x0a09801e,0x4880cb80,0x3220054c,0xb800ee1c,0x2226400c,
    0x00003704,0x44000000,0x833001cc,0x000cc3c9,0x00019833,0x80320080,
    0x8944003b,0x00000002,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x2a800000,0x9881995c,
    0x19103109,0x4c110730,0x1cc1ac83,0x8730e2a6,0x530c2238,0x79124020,
    0x819b8890,0x0e21c42a,0x073066e2,0x73054cc0,0x81cc3370,0x1a83902a,
    0x8155066a,0x4cc2984a,0x0820a80a,0x50a20444,0x2a1c4015,0x3b660ee4,
    0x4987dd73,0x977a21c4,0x205cc09a,0x11c661ab,0xb8d5c357,0x260ea5ab,
    0x22d41905,0x11454418,0x44288151,0x10cd4099,0x2f74c535,0x09988a2a,
    0x199885cc,0x0ee20d44,0x10c54431,0x40f44153,0x4c429a83,0x3a668e41,
    0x442e61de,0x74d660a9,0xeeb8ea3c,0xb3772cc4,0x70e96cd0,0x263ee989,
    0x3f7623ee,0x644d1770,0x2e7dd53d,0x96eea0ec,0x12ef4459,0xc87eec4b,
    0x2668e4d1,0x2668e45e,0x334723ee,0x34d3a8eb,0x2cb4ea37,0x21f75c1d,
    0x25916259,0x22ddb50e,0x3776e0ca,0xeb87dd10,0x1b34723e,0xb9f6cc1b,
    0x6dc624ed,0xf4b87a60,0x07fae598,0x92ced4f6,0x8ecd1d85,0xbb926ea6,
    0x9dc3b868,0x22f544eb,0x2c425c59,0x68e49375,0x91623472,0x64d1d9a3,
    0x9d424cd1,0x5432a366,0x70efa2d3,0x22588b35,0x6c1df445,0x5c47bb32,
    0x71e591dd,0x268e4b35,0x224c1bb6,0xfc8a4c49,0x79dc5913,0x079772cc,
    0x9716741d,0x47a3b1e8,0x5c19b51d,0x5c3b868b,0x6d43d773,0x0591660e,
    0x9066d4b1,0x88d1c9a3,0x47a68e45,0x499a391d,0x2b668ba8,0x4d1750ce,
    0x0ff5c0ec,0xec858962,0xb0ae2d40,0x46964395,0x34721feb,0x44981b3b,
    0x9e624c49,0xa8fbae3a,0x0d1774fe,0x77447b8b,0x9643a595,0x5c7dd50e,
    0x5c3b868b,0x5d4d3773,0x5d7be66a,0xeaaff544,0x593cb23e,0x325fea9e,
    0x90e964f2,0xe98311e5,0x4373766d,0x21266de9,0x12c43cab,0x0e88930b,
    0x337720ec,0xab87dd30,0x9976b23c,0x31261efe,0x7dd94989,0x203b86cc,
    0x96a0a23a,0x264883c8,0x8fb663ed,0x2d4478ac,0x36621dd3,0x40a20a22,
    0x4717ba23,0x3ba678ac,0x260fba63,0xd98fba64,0x30fba63e,0x1e732003,
    0x22ae1260,0x7c57f666,0xdf91265e,0x4000136d,0x200068ab,0x11264fea,
    0x06655005,0x71066488,0x00101dc1,0x2a0e6440,0x21e4c00c,0x28819819,
    0x33222880,0x04880001,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x98000000,0x02aa14c2,0x05541550,0x002e0357,0xa81cc197,
    0x15505541,0x01a82880,0x82aa0554,0x055400aa,0xaa8510a2,0x0aa82aa0,
    0x007102aa,0x20aa12a2,0x102aa19a,0x21c42987,0x003881ab,0xaa82aa00,
    0x15505540,0x505541c0,0xa8b7a217,0xb988e60a,0x87214e41,0x10cd4419,
    0x20998131,0x453b6a39,0x215110b9,0x20e64eda,0xd8854c29,0x5102663d,
    0x50e60b98,0x5504cc17,0x1c87e441,0x19885b30,0x02662388,0x4d41550a,
    0x17035311,0x4f7621c8,0x30e66dd8,0x54c13307,0x8b7a36a0,0x7db32de8,
    0x3ed98ba6,0x3b665bd1,0xfc93bf23,0xd1c8754e,0xb4ea5ae4,0x5a32ad3a,
    0xddb56eda,0x7745a32a,0x74cf7623,0x22f5b74d,0x4f7623ee,0x7bb14de9,
    0x6ec537a6,0x3629bd33,0xdd30326d,0xd87db909,0xdb16b94e,0xed8f7629,
    0x9db16b94,0xd73277e4,0x3dd8b4b2,0x47bb11f2,0x174cc47c,0x98930ba6,
    0x2e99265c,0x260e424c,0x29dd51bd,0x27b268ac,0xd3ab4ea5,0xb0b634ea,
    0xf2cb4ea5,0x449bd6dc,0x9e5919cb,0xb8937adb,0xdb8937ad,0x8ac8937a,
    0x46d3b6a6,0x54f1c849,0x952cf644,0x912ad730,0xc8254b3d,0x565ab2e1,
    0xce9ae668,0x59d35cc2,0x4c5c9844,0xdd99265c,0x4b931263,0x6cc1c849,
    0x32d1950b,0x976f27ee,0xd17568ba,0xa8b534ea,0xd2cb4ea5,0xef98ce5c,
    0x4b29bd13,0x7cc672e6,0x2633973e,0x233973ef,0xd3593ef9,0x951d7a54,
    0x2543a390,0x44a976f2,0xc8956acb,0x6412a5db,0x74db7aa1,0x26d5976d,
    0x5ab2e4ac,0x276a4ac9,0x8f7663dd,0x9261cc49,0x21263dd9,0xaa7544ea,
    0x393472d3,0x9b6f4cdb,0xe88626de,0x56a03a20,0x37a23ee9,0x4c3a0934,
    0x537a23ee,0x9a6f4449,0x49a6f444,0x27536f4c,0x3909bd77,0x394ed8f1,
    0xd54ed8db,0x9ca76cdb,0x2a276c6d,0x5a21cc4e,0xddd76dea,0xeebb6f54,
    0x7f540006,0x813faa04,0x50004fea,0x3268e5a7,0x330007a9,0xefcb77e4,
    0x208005c6,0x00dc4ef9,0x113be608,0x982277cc,0x79d404ef,0x803dd900,
    0x00007a9c,0x8000f539,0x43603848,0x0ec3601d,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x866e1cc0,0x0e229829,0x3709066a,0x14c19b83,0x220e2298,0x0e21aa83,
    0x9b8730d4,0x88a60a61,0x9cc2a003,0x9b866e09,0x22982981,0x4c0ca838,
    0x1541a82c,0x40e60d5c,0x2503a81a,0x07102019,0x8dc00404,0x0d544eda,
    0x204d4315,0x26e21a83,0x9a87dd32,0x2aa05cc1,0xa81a8380,0xa83f9109,
    0xaa82a209,0x0aa866a1,0x3b60d41c,0x4decb664,0x1730cd44,0x35070150,
    0x23e2d6d4,0x99504c20,0x4d40b985,0x3ba61440,0x30753a84,0x4c198779,
    0x47dd33ce,0x57b52de8,0x53ed99e9,0x7569d5a7,0x366d3a9a,0xe889993e,
    0x88fba23e,0x8fba23ee,0x3b663ee8,0x74c9dd13,0x269bd34d,0x27bb14de,
    0x7bb13dd8,0x44a9eec4,0x19951de9,0xdd89eec4,0xd886fd43,0x54f7623d,
    0x87ba61db,0x37661d2c,0x43e43e40,0x076cec7c,0x9277543a,0x23e41795,
    0x334760db,0xf3aca85d,0xab4ea498,0x7534ead3,0x3f62499a,0x2593cb23,
    0x2593cb27,0x9263cb27,0x2624cf2c,0x2b6e24c4,0x36ef5b77,0x55eb6e7a,
    0x2e625dc4,0xd7335cc1,0x35cc0dd8,0x0f5d5ae6,0x5f44f379,0x9d0efaa3,
    0x6742ce85,0x98772762,0x1b93d2a4,0x91167435,0x306c367f,0x3aa36eb9,
    0x17524c3d,0x5d5a2ead,0x99a2ea68,0x2593d544,0x25934b26,0x25934b26,
    0x9e5924c6,0x7df33ef9,0x4e5cfbe6,0x32e33971,0xd8672e19,0x6c5dd34e,
    0x2d5970cd,0x33226acb,0x5cd5970d,0x1d1756ac,0x1d91b7a2,0x59336c74,
    0x932564c9,0x074ee495,0x3279d439,0x95930bca,0x874b2d10,0x2a133dd9,
    0x6f4c9303,0x3a6dbd36,0x99b7a66d,0xe98fbae4,0x98fba63e,0x8fba63ee,
    0x324c3ee9,0x2624c7dd,0x37a224c4,0x3a29bd14,0x8937a24d,0xc8c86c44,
    0x2adbd50d,0x83bb26de,0x37aa6dea,0x790db756,0x76f5c498,0x75cddd70,
    0x99bbae6e,0xd51623ef,0x71e6cc7b,0x9f75cddd,0x914c3ed9,0x3faa0667,
    0x2a000004,0x000124fe,0xfea80000,0x9a77cc04,0x89df34ef,0x01008080,
    0x80000530,0x00003d96,0x12606ed4,0x1b1d86c0,0x11d86c76,0x80005507,
    0x20003b0d,0x00000019,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00010400,0xa82221a8,0x4406c419,
    0x41d40700,0x31dd419a,0x01102203,0x08882201,0x4a629808,0x0442aa09,
    0x17714c00,0x22981c4b,0x04d41329,0x84caa357,0x42b881b9,0x10092100,
    0x0c5c3757,0x00011044,0x34725301,0x4781dbb1,0x27d910a8,0x229829b8,
    0x26886de8,0x26a12a5a,0x589b7ee1,0xd934ce98,0xe8937a67,0x6c7df35d,
    0x464c383d,0x85b714c4,0x21c0dddb,0x10cc58bb,0x2464c7fd,0x263530e6,
    0x40ee248d,0x36216259,0x6cc09528,0x3ea0c542,0x5c7dd70d,0x2266c59a,
    0x54d1c89a,0x3663849b,0xde99d43e,0x2c8ffa24,0x8626dd88,0x7e47c87c,
    0x32a0e46c,0x99ca5459,0x41930ee7,0x276d40ca,0x76d41971,0x5c4d9b74,
    0xb8bd31dd,0xc97a659b,0x832e26da,0xb97a65e9,0x409d40cb,0x41bd14f8,
    0x880a5458,0x6ec2f4c5,0xbd13cae0,0x95e98689,0x40cda9a3,0x9d424c6b,
    0x26dac849,0x34b27c9d,0x3a167431,0x31b3a62c,0x322fe889,0x21db9b2e,
    0xca76442c,0x1a32a5de,0xb4654373,0x0e56cf3b,0x1d9d7162,0x8d5992c4,
    0x222c41b9,0x2ea0dcc5,0x6c9ba27a,0x1fa54588,0x222c42c4,0xd3dd0dcc,
    0xfb962e61,0xd2cac41c,0x1b31ef54,0xf33b8498,0x9356647d,0x268ac9a5,
    0x4c959369,0x1b0d04ac,0x5a2345dc,0x9825cd4c,0xd3a9a756,0xb4ea5bd8,
    0x37723eeb,0x0771620c,0x43ef9962,0x11620d8d,0x9d45bd8b,0x10b12c41,
    0xb1034a8b,0x0eec8b10,0xef99e2ae,0xd3588344,0x13c5647b,0xb324c15d,
    0x3e61261d,0x99bba23e,0x75d2a6de,0x41bbae6e,0x37a63a86,0x3a27db54,
    0x4d7b623d,0x49bb12ed,0x75c64d3a,0x01dda750,0x0ccbfb30,0x9092fecc,
    0x3f661d71,0x232bfb35,0x87dd70eb,0xbdf15fd9,0xefaaf7c4,0xb32fecc4,
    0x71ecb4bf,0x244dc3dd,0x7eccbdf7,0x10732205,0x813faa17,0x00244ef9,
    0x4761b0c0,0x1f6c3b0d,0x00008058,0x00000004,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x40000000,0x0111119b,0x82aa14c0,
    0x3b0a60aa,0x0441043a,0x20844104,0x14c00888,0x41040044,0x262b8820,
    0x44088881,0x40420663,0x8010404b,0x5c400888,0xa8205544,0x881100d3,
    0x22011088,0x80820222,0x22208880,0x32173040,0x1776e5cc,0x2982660e,
    0xb393176c,0xeb87d66c,0xb9a2ee3e,0x5fbaa5ab,0x826a2de8,0x7dd13dea,
    0x5cd0e964,0xb83a9661,0x751444ed,0x1ca891b0,0x4ddcf762,0xedba76c6,
    0x56cf7624,0x7dd314c1,0x87a234ea,0xcb76d47c,0xd71443ed,0x21d8ec7b,
    0x4f7a62f9,0x2db34de9,0x99174eda,0xe98ef4ec,0xe997a65e,0xe8bb6a5e,
    0x43eb362c,0x22de8f2b,0x34b80ecb,0x3237345d,0xd13cb2d2,0x06546c77,
    0x225dd4b1,0xd52f4c49,0x43bbee9d,0x2b6e2cd9,0x84a8b7a7,0x0f6b9849,
    0x5598bfd5,0x20f4cd17,0x392d82ce,0x575fea9e,0x6c69dcb3,0x8931262b,
    0x2d195688,0x36763cab,0x9621d661,0x2c6d4759,0x27eeb8d7,0xd910e9ee,
    0x0e8275c3,0x6656d726,0x4b2fbd50,0xd5b07646,0xbb52c419,0x2c43fe88,
    0x156cd195,0x4e5c59b3,0x30951f21,0x0f6acb89,0x265b07a2,0x98f626de,
    0x392d44ac,0xd71e883a,0x5256cc9d,0x9f7cc557,0x3ab43ef9,0xdc8e2aed,
    0x220930cd,0x22ea1265,0xf2b85916,0xd933c55c,0x2a0f5dc5,0x6e4f7664,
    0xdd35986d,0x66ec4987,0xeca9620d,0x52c424c0,0x22f765a7,0x8a6f442b,
    0x3276c3ce,0x0f6dea89,0x930790b6,0x9bbae590,0x1e2720e8,0x74795c5b,
    0x43bbb62d,0x56824c49,0x02e665a7,0xafecc24c,0x768ba849,0xeb9e5705,
    0xb8bb261e,0x2007469b,0x37aa6aeb,0x66449800,0x557f6679,0x2624c5ab,
    0x4da755fd,0x0815c0bb,0x3003e2b2,0xdf50f009,0x911bbee9,0x323b0d80,
    0x43dd96ef,0x7bd74efa,0x4c5707c8,0xeaa77cc4,0x0000006f,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x22980220,0x08820808,0x40408441,0x88008880,0x01134ea3,0x00017501,
    0x6c770200,0x866621d1,0xea8ee28b,0x34d1975f,0x42980837,0x310620ca,
    0x4bba97a6,0x454c2a62,0x02aa14c3,0x88c466e0,0x1ddd4a23,0xbb96a337,
    0x82222931,0x5c383eeb,0x934724ee,0x279cc96b,0x3662d858,0x4cbdd33e,
    0xa9a752db,0x7771261d,0xb536eec9,0x66c24c9d,0x4e4c3aa2,0x64caee65,
    0xe887661c,0xcad87b61,0x96e16e0c,0x7b934ac8,0x6d4b1354,0x3b659d85,
    0xb84cc1c1,0x4aba0bae,0x8a4c6a6b,0x4462a699,0x33202662,0x4b3571cc,
    0x3cee5fea,0x4f64d159,0x58973725,0xb324c7b0,0x752db98e,0xba8eecd1,
    0xd8f2ee3b,0xd1950cc9,0xad88fb2a,0x2ce87663,0x5ec5376a,0x42d83723,
    0x9b7721ed,0x86cc3ac8,0x5db12de8,0x654b1254,0x44eb620e,0x928002dd,
    0x88008a89,0x00000181,0x3a20ff5c,0xec9736e1,0xc976f27e,0x221625db,
    0x0499261e,0x736f4c71,0x986a6217,0x332363bc,0x6dc5a750,0x87905d41,
    0xb863007b,0x2e9df51b,0x9abae69c,0x41bb8509,0x4c305c40,0x4b5755fd,
    0x01462188,0x00000000,0x55c00000,0x32e16c3c,0x27268e41,0x4326366d,
    0x24c0d858,0x09bb5093,0x09316644,0x0cc8d831,0x44399a75,0x000002cc,
    0x00000000,0x00000000,0x00000000,0x00000000,0x77d4d157,0x34720ee4,
    0x192cf539,0xea817be2,0x0000004f,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,
};

static signed short stb__consolas_bold_8_latin_ext_x[560]={ 0,1,0,0,0,0,0,1,1,0,0,0,0,0,
1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,
1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,
0,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,-1,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,0,0,0,-1,0,
0,0,0,0,0,0,0,0,0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,-1,0,-1,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0, };
static signed short stb__consolas_bold_8_latin_ext_y[560]={ 5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,3,2,
3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,0,1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,5,-1,0,-1,0,-1,0,-1,0,-1,-1,
-1,-1,-1,0,0,0,0,0,0,0,-1,1,1,1,1,1,1,-1,-2,-1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,5,0,-1,-1,-1,-1,
-2,-1,-1,-1,-1,1,2,2,-1,-1,-1,0,-1,-1,-1,1,-1,2,5,-1,-1,1,-1,-1,-1,0,-2,-2,-2,-2,
-2,-2,-1,-1,-2,-2,-2,-2,-2,-2,-2,-2,-1,-2,-2,-2,-2,-2,-2,1,-1,-2,-2,-2,-2,-2,-1,-1,-1,-1,
-1,-1,-1,-2,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,
-2,-1,-2,-1,-1,0,-2,-1,-2,-1,-2,-1,-2,-1,-2,-1,-1,-1,-2,-1,-2,-1,-2,-1,-1,0,-2,-1,-2,-1,
-2,-1,-2,-1,-1,-1,-2,-2,-1,-1,-2,-1,-2,-1,-2,-1,-1,-1,-2,1,-1,-1,-2,-1,-1,-1,1,-2,-2,-1,
-1,-1,-1,-1,-1,-1,-1,-2,-1,-1,0,-2,-1,-2,-1,0,-2,-1,-2,-1,-2,-1,-1,0,-2,-1,-1,0,-2,-1,
-2,-1,-2,-1,-1,0,-2,-1,-1,-1,-2,-1,-1,-1,-2,-1,-2,-1,-2,-1,-2,-2,-2,-1,-1,1,-2,-1,-2,-1,
-2,-2,-1,-2,-1,-2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-3,-3,-2,-1,-2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
-1,-1,-1,-1,-1,-1, };
static unsigned short stb__consolas_bold_8_latin_ext_w[560]={ 0,2,4,5,5,5,5,2,3,4,4,5,3,4,
2,4,5,4,4,4,5,4,5,4,4,4,2,3,4,4,4,3,5,5,5,4,5,4,4,5,5,4,4,5,
4,5,5,5,5,5,5,4,5,5,5,5,5,5,4,3,5,3,5,5,3,4,5,4,4,4,5,5,4,4,
4,5,4,5,4,5,5,4,5,4,4,4,5,5,5,5,4,4,2,4,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,2,4,5,5,5,
2,5,4,5,4,4,4,4,5,4,4,4,4,4,5,5,5,2,2,4,4,4,5,5,5,4,5,5,5,5,
5,5,6,4,4,4,4,4,4,4,4,4,5,5,5,5,5,5,5,4,5,5,5,5,5,5,5,5,4,5,
4,4,4,4,5,4,4,5,4,4,4,5,4,4,5,4,5,5,5,5,5,5,5,4,5,4,4,5,5,5,
5,4,5,4,5,4,5,5,4,4,4,4,4,4,6,6,5,5,4,4,4,4,4,4,4,4,4,4,5,5,
5,5,5,5,5,5,5,4,5,4,4,4,4,4,4,4,4,5,4,4,5,5,4,4,5,5,5,4,4,4,
4,5,6,5,6,4,4,5,5,5,4,5,4,4,5,4,5,5,5,5,5,5,5,5,6,5,5,5,6,5,
4,5,4,4,4,4,4,4,5,4,5,6,5,4,5,4,5,4,5,4,5,4,5,5,5,5,5,5,5,5,
5,4,5,4,4,4,4,4,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5,5,5,5,5,5,4,6,5,6,6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5,5,5,5,5,4,4,5,4,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5, };
static unsigned short stb__consolas_bold_8_latin_ext_h[560]={ 0,7,3,6,7,7,7,3,8,8,4,5,4,2,
3,7,7,6,6,7,6,7,7,6,7,6,6,7,6,4,6,7,8,6,6,7,6,6,6,7,6,6,7,6,
6,6,6,7,6,8,6,7,6,7,6,6,6,6,6,8,7,8,4,2,3,6,7,6,7,6,6,7,6,6,
8,6,6,5,5,6,7,7,5,6,7,5,4,4,4,6,4,8,9,8,3,6,6,6,6,6,6,6,6,6,
6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,0,7,7,6,6,6,
9,7,3,7,5,4,3,2,5,3,4,5,4,4,3,6,7,2,2,4,5,4,6,6,6,7,7,7,7,7,
7,7,6,8,7,7,7,7,7,7,7,7,6,7,8,8,8,8,8,4,7,8,8,8,8,7,6,7,7,7,
7,7,7,8,6,7,7,7,7,7,6,6,6,6,7,6,7,7,7,7,7,5,6,7,7,7,7,8,8,8,
7,7,7,7,8,7,8,7,8,7,8,7,8,7,7,7,6,7,7,7,7,7,7,7,8,7,7,7,8,8,
8,8,8,8,8,8,7,7,6,6,7,6,7,6,7,6,8,8,7,4,7,8,8,8,8,8,4,7,7,8,
8,6,6,6,6,6,6,7,6,8,7,7,6,7,8,7,8,7,8,7,8,7,7,6,7,6,8,7,7,6,
8,7,8,7,8,7,8,7,8,8,7,7,6,7,8,7,8,7,8,7,8,8,8,7,8,6,7,6,7,8,
7,7,6,7,6,7,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,7,6,6,6,
6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,
6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,
6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,
6,6,6,6,6,6,6,6,6,6,8,9,7,7,8,7,6,6,6,6,6,6,6,6,6,6,6,6,6,6,
6,6,6,6,6,6,6,6,6,6,8,7,8,8,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,
6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,
6,6,6,6,6,6, };
static unsigned short stb__consolas_bold_8_latin_ext_s[560]={ 253,253,213,136,38,131,183,225,47,51,166,
96,171,241,218,213,89,251,185,84,235,100,105,70,79,86,253,51,196,118,42,
252,62,201,223,95,212,246,241,40,19,47,23,64,37,31,25,241,13,73,1,
236,164,1,229,103,153,97,207,103,73,113,150,249,221,170,218,159,46,148,142,
7,131,126,187,114,109,85,91,91,1,226,52,75,216,63,112,144,138,40,133,
6,6,28,207,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,
6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,253,252,126,
245,239,58,9,171,233,224,68,123,228,241,79,202,161,58,128,107,196,146,67,
238,246,156,102,186,117,163,179,13,230,201,195,189,61,55,226,39,85,90,95,
28,74,18,7,33,52,204,146,198,44,50,135,191,207,129,117,141,111,177,128,
165,160,154,194,142,137,24,134,121,116,110,105,100,152,140,251,221,79,1,68,
62,56,50,44,73,157,28,22,17,12,33,11,247,247,242,236,231,236,221,225,
210,215,199,95,189,158,178,171,164,233,153,148,143,138,133,128,123,68,112,107,
102,41,56,107,85,97,169,181,105,54,49,46,35,32,174,22,24,12,169,17,
123,241,175,229,62,68,73,78,84,180,188,183,90,100,202,214,208,185,197,192,
60,111,192,76,183,123,159,123,91,79,117,56,96,29,216,235,12,222,18,22,
147,176,29,1,1,242,7,231,17,220,27,209,204,246,37,120,44,175,165,163,
66,152,71,140,135,129,153,117,190,159,80,170,91,193,86,7,81,218,199,180,
175,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,204,
6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,
6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,
6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,
6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,
6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,
6,6,6,35,1,147,210,17,33,6,6,6,6,6,6,6,6,6,6,6,
6,6,6,6,6,6,6,6,6,6,6,6,6,12,247,209,204,6,6,6,
6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,
6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,
6,6,6,6,6,6,6,6,6, };
static unsigned short stb__consolas_bold_8_latin_ext_t[560]={ 9,1,51,44,28,28,28,51,1,1,51,
51,51,51,51,28,36,44,44,36,44,36,36,44,36,44,20,36,44,51,51,
28,1,44,44,36,44,44,44,36,51,51,36,44,51,51,51,28,51,1,51,
28,44,36,44,44,44,44,44,1,36,1,51,51,51,44,28,44,36,44,44,
36,44,44,1,44,44,51,51,44,28,20,51,44,20,51,51,51,51,44,51,
11,1,11,51,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,
44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,9,11,28,
36,36,44,1,28,51,28,51,51,51,51,51,51,51,51,51,51,51,36,36,
51,51,51,51,51,36,36,36,36,28,28,28,28,36,36,36,11,28,28,28,
36,28,36,28,28,44,20,1,1,11,11,11,51,28,11,11,11,11,28,36,
28,28,28,20,28,28,1,36,28,28,28,28,28,36,36,36,36,28,44,28,
28,28,28,28,51,36,28,28,28,28,11,11,1,20,20,20,20,1,20,1,
20,1,20,11,20,1,20,20,20,36,20,20,20,20,20,20,20,1,20,20,
20,1,11,1,1,1,1,1,11,20,20,44,44,20,36,20,44,20,36,11,
11,11,51,11,11,11,11,11,11,51,11,11,11,11,36,36,36,36,36,36,
20,36,1,20,20,36,20,1,20,1,20,1,20,1,11,11,44,11,44,11,
11,11,44,11,20,1,20,1,20,1,20,1,1,11,20,44,20,1,11,1,
20,1,20,1,1,1,11,1,44,11,44,11,1,11,20,51,20,44,11,44,
44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,11,
44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,
44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,
44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,
44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,
44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,
44,44,44,1,1,28,11,1,36,44,44,44,44,44,44,44,44,44,44,44,
44,44,44,44,44,44,44,44,44,44,44,44,44,1,28,1,1,44,44,44,
44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,
44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,
44,44,44,44,44,44,44,44,44, };
static unsigned short stb__consolas_bold_8_latin_ext_a[560]={ 70,70,70,70,70,70,70,70,
70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,
70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,
70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,
70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,
70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,
70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,
70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,
70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,
70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,
70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,
70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,
70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,
70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,
70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,
70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,
70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,
70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,
70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,
70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,
70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,
70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,
70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,
70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,
70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,
70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,
70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,
70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,
70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,
70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,
70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,
70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,
70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,
70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,
70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,
70,70,70,70,70,70,70,70, };

// Call this function with
//    font: NULL or array length
//    data: NULL or specified size
//    height: STB_FONT_consolas_bold_8_latin_ext_BITMAP_HEIGHT or STB_FONT_consolas_bold_8_latin_ext_BITMAP_HEIGHT_POW2
//    return value: spacing between lines
static void stb_font_consolas_bold_8_latin_ext(stb_fontchar font[STB_FONT_consolas_bold_8_latin_ext_NUM_CHARS],
                unsigned char data[STB_FONT_consolas_bold_8_latin_ext_BITMAP_HEIGHT][STB_FONT_consolas_bold_8_latin_ext_BITMAP_WIDTH],
                int height)
{
    int i,j;
    if (data != 0) {
        unsigned int *bits = stb__consolas_bold_8_latin_ext_pixels;
        unsigned int bitpack = *bits++, numbits = 32;
        for (i=0; i < STB_FONT_consolas_bold_8_latin_ext_BITMAP_WIDTH*height; ++i)
            data[0][i] = 0;  // zero entire bitmap
        for (j=1; j < STB_FONT_consolas_bold_8_latin_ext_BITMAP_HEIGHT-1; ++j) {
            for (i=1; i < STB_FONT_consolas_bold_8_latin_ext_BITMAP_WIDTH-1; ++i) {
                unsigned int value;
                if (numbits==0) bitpack = *bits++, numbits=32;
                value = bitpack & 1;
                bitpack >>= 1, --numbits;
                if (value) {
                    if (numbits < 3) bitpack = *bits++, numbits = 32;
                    data[j][i] = (bitpack & 7) * 0x20 + 0x1f;
                    bitpack >>= 3, numbits -= 3;
                } else {
                    data[j][i] = 0;
                }
            }
        }
    }

    // build font description
    if (font != 0) {
        float recip_width = 1.0f / STB_FONT_consolas_bold_8_latin_ext_BITMAP_WIDTH;
        float recip_height = 1.0f / height;
        for (i=0; i < STB_FONT_consolas_bold_8_latin_ext_NUM_CHARS; ++i) {
            // pad characters so they bilerp from empty space around each character
            font[i].s0 = (stb__consolas_bold_8_latin_ext_s[i]) * recip_width;
            font[i].t0 = (stb__consolas_bold_8_latin_ext_t[i]) * recip_height;
            font[i].s1 = (stb__consolas_bold_8_latin_ext_s[i] + stb__consolas_bold_8_latin_ext_w[i]) * recip_width;
            font[i].t1 = (stb__consolas_bold_8_latin_ext_t[i] + stb__consolas_bold_8_latin_ext_h[i]) * recip_height;
            font[i].x0 = stb__consolas_bold_8_latin_ext_x[i];
            font[i].y0 = stb__consolas_bold_8_latin_ext_y[i];
            font[i].x1 = stb__consolas_bold_8_latin_ext_x[i] + stb__consolas_bold_8_latin_ext_w[i];
            font[i].y1 = stb__consolas_bold_8_latin_ext_y[i] + stb__consolas_bold_8_latin_ext_h[i];
            font[i].advance_int = (stb__consolas_bold_8_latin_ext_a[i]+8)>>4;
            font[i].s0f = (stb__consolas_bold_8_latin_ext_s[i] - 0.5f) * recip_width;
            font[i].t0f = (stb__consolas_bold_8_latin_ext_t[i] - 0.5f) * recip_height;
            font[i].s1f = (stb__consolas_bold_8_latin_ext_s[i] + stb__consolas_bold_8_latin_ext_w[i] + 0.5f) * recip_width;
            font[i].t1f = (stb__consolas_bold_8_latin_ext_t[i] + stb__consolas_bold_8_latin_ext_h[i] + 0.5f) * recip_height;
            font[i].x0f = stb__consolas_bold_8_latin_ext_x[i] - 0.5f;
            font[i].y0f = stb__consolas_bold_8_latin_ext_y[i] - 0.5f;
            font[i].x1f = stb__consolas_bold_8_latin_ext_x[i] + stb__consolas_bold_8_latin_ext_w[i] + 0.5f;
            font[i].y1f = stb__consolas_bold_8_latin_ext_y[i] + stb__consolas_bold_8_latin_ext_h[i] + 0.5f;
            font[i].advance = stb__consolas_bold_8_latin_ext_a[i]/16.0f;
        }
    }
}

#ifndef STB_SOMEFONT_CREATE
#define STB_SOMEFONT_CREATE              stb_font_consolas_bold_8_latin_ext
#define STB_SOMEFONT_BITMAP_WIDTH        STB_FONT_consolas_bold_8_latin_ext_BITMAP_WIDTH
#define STB_SOMEFONT_BITMAP_HEIGHT       STB_FONT_consolas_bold_8_latin_ext_BITMAP_HEIGHT
#define STB_SOMEFONT_BITMAP_HEIGHT_POW2  STB_FONT_consolas_bold_8_latin_ext_BITMAP_HEIGHT_POW2
#define STB_SOMEFONT_FIRST_CHAR          STB_FONT_consolas_bold_8_latin_ext_FIRST_CHAR
#define STB_SOMEFONT_NUM_CHARS           STB_FONT_consolas_bold_8_latin_ext_NUM_CHARS
#define STB_SOMEFONT_LINE_SPACING        STB_FONT_consolas_bold_8_latin_ext_LINE_SPACING
#endif

