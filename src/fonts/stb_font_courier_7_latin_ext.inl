// Font generated by stb_font_inl_generator.c (4/1 bpp)
//
// Following instructions show how to use the only included font, whatever it is, in
// a generic way so you can replace it with any other font by changing the include.
// To use multiple fonts, replace STB_SOMEFONT_* below with STB_FONT_courier_7_latin_ext_*,
// and separately install each font. Note that the CREATE function call has a
// totally different name; it's just 'stb_font_courier_7_latin_ext'.
//
/* // Example usage:

static stb_fontchar fontdata[STB_SOMEFONT_NUM_CHARS];

static void init(void)
{
    // optionally replace both STB_SOMEFONT_BITMAP_HEIGHT with STB_SOMEFONT_BITMAP_HEIGHT_POW2
    static unsigned char fontpixels[STB_SOMEFONT_BITMAP_HEIGHT][STB_SOMEFONT_BITMAP_WIDTH];
    STB_SOMEFONT_CREATE(fontdata, fontpixels, STB_SOMEFONT_BITMAP_HEIGHT);
    ... create texture ...
    // for best results rendering 1:1 pixels texels, use nearest-neighbor sampling
    // if allowed to scale up, use bilerp
}

// This function positions characters on integer coordinates, and assumes 1:1 texels to pixels
// Appropriate if nearest-neighbor sampling is used
static void draw_string_integer(int x, int y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0, cd->t0); glVertex2i(x + cd->x0, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t0); glVertex2i(x + cd->x1, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t1); glVertex2i(x + cd->x1, y + cd->y1);
        glTexCoord2f(cd->s0, cd->t1); glVertex2i(x + cd->x0, y + cd->y1);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance_int;
    }
    glEnd();
}

// This function positions characters on float coordinates, and doesn't require 1:1 texels to pixels
// Appropriate if bilinear filtering is used
static void draw_string_float(float x, float y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0f, cd->t0f); glVertex2f(x + cd->x0f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t0f); glVertex2f(x + cd->x1f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t1f); glVertex2f(x + cd->x1f, y + cd->y1f);
        glTexCoord2f(cd->s0f, cd->t1f); glVertex2f(x + cd->x0f, y + cd->y1f);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance;
    }
    glEnd();
}
*/

#ifndef STB_FONTCHAR__TYPEDEF
#define STB_FONTCHAR__TYPEDEF
typedef struct
{
    // coordinates if using integer positioning
    float s0,t0,s1,t1;
    signed short x0,y0,x1,y1;
    int   advance_int;
    // coordinates if using floating positioning
    float s0f,t0f,s1f,t1f;
    float x0f,y0f,x1f,y1f;
    float advance;
} stb_fontchar;
#endif

#define STB_FONT_courier_7_latin_ext_BITMAP_WIDTH         256
#define STB_FONT_courier_7_latin_ext_BITMAP_HEIGHT         44
#define STB_FONT_courier_7_latin_ext_BITMAP_HEIGHT_POW2    64

#define STB_FONT_courier_7_latin_ext_FIRST_CHAR            32
#define STB_FONT_courier_7_latin_ext_NUM_CHARS            560

#define STB_FONT_courier_7_latin_ext_LINE_SPACING           3

static unsigned int stb__courier_7_latin_ext_pixels[]={
    0x44000000,0x26060440,0x10220cc0,0x20d40983,0x2200cc09,0x26044009,
    0x00220cc0,0x13100220,0x26060998,0x2604c0c1,0x30660cc0,0x00cc0883,
    0x1980004c,0x19800980,0x181304cc,0x0c088304,0x33062044,0x102204c1,
    0x1104c4c1,0x41104c4c,0x13130989,0x21982626,0x31306098,0x99826261,
    0x26263310,0x882660c1,0x42182a20,0x884cc098,0x98826209,0x4c426609,
    0x4c311309,0x08813109,0x98110662,0x09826261,0x20882626,0x98430989,
    0x21331098,0x82618899,0x15310998,0x0a8c2662,0x4618c171,0x18630461,
    0x304618c1,0x21981182,0x30460c31,0x46302182,0x26086180,0x18186309,
    0x30c610c3,0x210c5186,0x08619851,0x18c33063,0x118630c6,0x2304618c,
    0x42630461,0x4c628c11,0x98a30cc1,0x23373098,0x210cc319,0x08230c21,
    0x30c208c3,0x208c1182,0x860c6111,0x80608c11,0x81830231,0x4cc43181,
    0x21318630,0x26218c31,0x29884c62,0x8c2630cc,0x43184461,0x04618430,
    0x18411861,0x21333046,0x2314c411,0x988a6219,0x9aa86a62,0x15443530,
    0x2e621731,0x5cc43310,0x5cc43310,0x0cc43310,0x30cc4331,0x86621853,
    0x82662198,0x41853118,0x13310998,0x4c130a66,0x4c266629,0x8a0a6629,
    0x06140999,0x8a661333,0x88a66198,0x217310b9,0x42e62198,0x42e62198,
    0x31044198,0x4c184503,0x000140a9,0x000198a8,0x00000000,0x00002000,
    0x00002004,0x40000000,0x00881000,0x00000000,0x00000000,0x02001101,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x54c08330,0x19826209,0x304c1980,0x08411001,
    0x213130a2,0x40062199,0x20440881,0x80004419,0x02630002,0x18131300,
    0x20440044,0x2260cc09,0x04c13310,0x08833066,0x41983044,0x0a198a29,
    0x4c330262,0x1886e229,0x83305441,0x98822209,0x98110a61,0x88302621,
    0x0a60c218,0x984c4c11,0x98266098,0x4c311309,0x22060d40,0x81330440,
    0x02304408,0x220ccc17,0x44c26260,0x88c22319,0x983330a1,0x42826a62,
    0x30a61428,0x30989843,0x2e0cc433,0x060604c3,0x1981110c,0x0888c0c4,
    0x8c11114c,0x433108c1,0x3105c298,0x304608c3,0x41982184,0x220c0c19,
    0x3130cc19,0x42662198,0x21841811,0x98266199,0x0c333189,0x83086e23,
    0x03046219,0x330cc083,0x31411845,0x4c5710c6,0x86e0d41b,0x44618830,
    0x44303330,0x18620cc1,0x8a8cdc43,0x22311509,0x8c5330a9,0x03030460,
    0x28298866,0x229986e2,0x88a2a298,0x0a621429,0x0c229883,0x854cc313,
    0x30a623a8,0x0a662988,0x4c230303,0x20985330,0x21998230,0x42819831,
    0x30ccc081,0x260cc433,0x21998c40,0x98666299,0x02204429,0x26208811,
    0x19886621,0x4cc42662,0x21533060,0x310441a8,0x11054cc3,0x1b8854cc,
    0x8a831044,0x2a151318,0x000a6628,0x200c4540,0xb886e21b,0x44a00019,
    0x0a660619,0x00008811,0x00100000,0x00000000,0x88000000,0x00001000,
    0x00000000,0x00000000,0x00000000,0x00008800,0x00000000,0x00000000,
    0x00000000,0x00000000,0x30660000,0x20b80983,0x86619809,0x26044199,
    0x30660cc0,0x10cc1983,0x0cc19815,0x198a8000,0x50303066,0x30cc0983,
    0x0cc09831,0x4c098826,0x20260cc0,0x10260441,0x43303001,0x33066199,
    0x30666098,0x54c33030,0x19986622,0x20a88662,0x084cc298,0x06609983,
    0x510cc133,0xa884c4c3,0x88660cc1,0x2220cc0a,0x8c223020,0x30506a21,
    0x10d44318,0x260d4461,0x4208aa21,0x0c440c31,0x84c4c66a,0x85310989,
    0x988a6208,0x21988c22,0x210cc199,0x19986620,0x4c108662,0x06304229,
    0x20628c33,0x31030a89,0x2088c0c5,0x8c104cc1,0x30a622a8,0x86e218c3,
    0x084461b8,0x41818183,0x43041830,0x506088c1,0x310c2333,0x04541843,
    0x0c219833,0x42184531,0x14cc6261,0x22111821,0x108a6609,0x413114cc,
    0x98262198,0x4c5511a9,0x88266239,0x4cc26620,0x2213310a,0x86260c19,
    0x98cc5460,0x845510a9,0xa82e20c1,0x182e6219,0x886e0dc4,0x313060b9,
    0x306620c1,0x2e621988,0x22988610,0x40c0c1a8,0x0c0c0881,0x4c433118,
    0x99a86620,0x04c43310,0x04cd4331,0x54013350,0x00000198,0x21b88000,
    0x026a628a,0x1198a806,0x2a0d4173,0x41b88001,0x22004c09,0x00dc401b,
    0x260006e2,0x215130a8,0x706e2a9a,0x571154c3,0x8553154c,0x004cd400,
    0x13350044,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x0620c000,0x04419811,0x10210c05,0x50cc1981,0x81304cc4,0x9886662a,
    0x04404009,0x44c33066,0xa8826618,0x40881310,0x8660cc19,0x982204c0,
    0x33042660,0x80110998,0x330cc198,0x88260cc1,0x02604419,0x09808811,
    0x4413104c,0x1863040a,0x33305443,0x81510cc4,0x8660cc19,0x41511461,
    0x2318a398,0x886e20c1,0x88866219,0x0c030cc0,0x19833063,0x0c2230cc,
    0x04c4c311,0x20c4610c,0x30622151,0x28984444,0x46188843,0x22113109,
    0xa886a21a,0x86606a21,0x302a20a8,0x086104c3,0x318a1983,0x088c3306,
    0x3088c223,0x186614c4,0x98866611,0x2660c142,0x8310a662,0x84266219,
    0x45310c61,0x18a62298,0x33061146,0x3102630c,0x988c6611,0x08446621,
    0x54c06533,0x44c41330,0x20606060,0x0cc29881,0x2a2a8866,0x22173108,
    0x545510b9,0x446a6619,0x9886622a,0x28186621,0x21888aa2,0xa8182201,
    0x19886621,0x13030666,0x45330ccc,0x15330a99,0x0cc42a66,0x50614d43,
    0x0c184ccc,0x22188353,0x22133109,0x4c133108,0x9a886262,0x20606060,
    0x510a9981,0x31515445,0x45400043,0x4c540019,0x04280001,0x0880662a,
    0x006e2110,0x00088000,0x2a000000,0x03700109,0x00098840,0x00130030,
    0x5c4028a8,0x1b886e21,0x22a006e2,0x00331519,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x11000000,
    0x209860cc,0x30220989,0x350660cc,0x2a88660c,0x465310d4,0x304cc061,
    0x21980c33,0x10511998,0x98866a00,0x20c13530,0x3044cc31,0x84cc40c3,
    0x04c00989,0x88885066,0x441510a0,0x10221a82,0x088c1813,0x40881531,
    0x53304409,0x05c46088,0x22503023,0x82a05429,0x41351441,0x10c23030,
    0x46188c26,0x4c426108,0x09822262,0x150106a2,0x88462141,0x3530c229,
    0x4cc26623,0x19866e61,0x99830aa2,0x04c004c1,0x4181506a,0x0a0a0998,
    0x04c4c333,0x314cc333,0x10c08433,0x50230cc3,0x44531281,0x3026181a,
    0x8c0c60a8,0x31530b98,0x42150662,0x982219a9,0x83044c18,0x306a2198,
    0x22088370,0x413530b9,0x26aa1842,0x229886e0,0x0cc18428,0x98c4c1c0,
    0x26660c12,0x75106061,0x10420d4c,0x04c41082,0x45511831,0x50e62198,
    0x44350662,0x41988619,0x11066208,0x54019802,0x57129819,0x9b89554c,
    0x54083511,0xb81712a9,0x0220ae21,0x2a261b88,0x1110dc00,0xa8984d44,
    0x44443710,0x0e443710,0x06e23371,0x710dc4a6,0x82620003,0xa8262098,
    0x45460099,0x00180019,0x00980180,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x4cd40000,0x26a13350,0x00000009,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x86605440,0x310cc098,0x22141981,0x306098c1,0x21310350,0x30622198,
    0x260ccc13,0x433104c1,0x21440810,0x98a62312,0x21313098,0x31151889,
    0x213530a2,0x886661a8,0x9886a218,0x22102631,0x2131309a,0x130c4198,
    0x219982a2,0x2130ccc0,0x88630998,0x82614c09,0x44614199,0x185310a0,
    0x0a0c2298,0x20cc4331,0x998a661b,0x8446030a,0x26614298,0x20c0c142,
    0x30611999,0x22661983,0x18830631,0x210c20c1,0x998c18c1,0x08982620,
    0x4c304311,0x18433021,0x02084262,0x98283085,0x306108c1,0x260c1988,
    0x82e060a9,0x21060b98,0x31060c21,0x33114c43,0x53308541,0x306620c1,
    0x260c1a88,0x20606189,0x982a661a,0x060608c1,0x214c4531,0x18984c1a,
    0x4c43502a,0x45511821,0x9988aa24,0x504c4620,0xb9886e21,0x44533060,
    0x2151319b,0x0dc401b8,0x221b8844,0x86e200a9,0x15130a89,0x513006e2,
    0x4019a801,0x7104c1b8,0x50dc4083,0x70aa6511,0x998544c3,0x337104c2,
    0x543710dc,0x21513188,0x546a60b8,0x4388c428,0x1353098a,0x4c543144,
    0x82613351,0x2000099a,0x000001b8,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x43330000,0x820c4298,
    0x45310c11,0x40221109,0x22150a19,0x4cc41199,0x15490260,0x0a819808,
    0x82662751,0x44220999,0x0000002a,0x00000000,0x00000000,0x20000000,
    0x42626188,0x1061099a,0x1750cdc1,0x0640855c,0x98c42655,0x814186a0,
    0x42662130,0x25514188,0x19831108,0x000aa011,0x00000000,0x00000000,
    0x00000000,0x80000000,0x2330c41a,0x2e215131,0x2088a622,0x54422299,
    0x10021103,0x000006e2,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x982a6600,0x000a26a1,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,
};

static signed short stb__courier_7_latin_ext_x[560]={ 0,1,0,0,0,0,0,1,1,0,0,0,0,0,
1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,
1,0,0,0,0,0,0,0,0,-1,1,0,1,1,1,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0, };
static signed short stb__courier_7_latin_ext_y[560]={ 5,1,1,0,0,1,1,1,1,1,1,1,4,3,
4,0,1,1,1,1,1,1,1,1,1,1,2,2,1,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,6,0,2,1,2,1,2,1,2,1,1,
1,1,1,2,2,2,2,2,2,2,1,2,2,2,2,2,2,1,1,1,2,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,5,2,0,1,1,1,
1,1,1,1,1,2,3,3,1,0,0,1,1,1,0,2,1,2,4,1,1,2,1,1,1,2,0,0,0,0,
0,0,1,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,2,1,0,0,0,0,0,1,1,0,0,
1,1,1,0,2,2,0,0,1,1,1,0,1,1,1,1,0,0,1,1,1,1,2,0,0,1,1,0,1,1,
0,1,0,1,1,2,0,0,0,1,0,1,0,1,0,1,1,1,0,1,0,1,0,1,1,2,0,1,0,1,
0,1,0,1,1,0,0,0,1,1,0,1,0,1,0,1,1,1,0,2,1,1,0,1,1,1,2,0,0,1,
1,1,1,1,1,1,1,0,0,1,2,0,1,1,1,2,0,1,0,1,0,0,1,2,0,0,1,2,0,1,
0,0,0,1,1,2,0,1,1,1,0,1,1,1,0,1,0,1,0,1,0,0,0,0,1,2,0,1,0,1,
0,0,0,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,1,1,1,1,0,2,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,0,
1,0,1,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,-1,-1,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1, };
static unsigned short stb__courier_7_latin_ext_w[560]={ 0,2,3,4,4,4,4,2,2,2,3,4,3,4,
2,4,4,4,3,4,3,4,4,3,4,4,2,3,3,4,3,3,3,4,4,4,4,4,4,4,4,4,4,4,
4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,2,3,2,4,4,2,4,4,4,4,4,4,4,4,4,
3,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,2,1,2,4,4,4,4,4,4,4,4,4,4,
4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,0,2,3,4,4,4,
1,4,3,4,2,4,4,4,4,5,2,4,2,2,2,4,4,2,2,2,3,4,4,4,4,3,4,4,4,4,
4,4,4,4,4,4,4,4,4,4,4,4,5,4,4,4,4,4,4,3,4,4,4,4,4,4,4,4,4,4,
4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,
4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,5,4,4,4,4,4,4,4,4,4,4,4,4,4,
4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,3,4,4,4,4,4,4,
4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,3,4,4,4,4,4,4,4,4,4,4,4,4,4,4,
4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,
4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,
4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,
4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,
4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,
4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,
4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,
4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,
4,4,4,4,4,4, };
static unsigned short stb__courier_7_latin_ext_h[560]={ 0,5,2,6,6,5,5,3,5,5,3,4,2,1,
2,6,5,4,4,5,4,5,5,5,5,5,4,4,4,2,4,5,5,4,4,5,4,4,4,5,4,4,5,4,
4,4,4,5,4,5,4,5,4,5,4,4,4,4,4,5,6,5,2,1,2,4,5,4,5,4,4,5,4,4,
6,4,4,3,3,4,5,5,3,4,5,4,3,4,3,5,3,5,5,5,2,4,4,4,4,4,4,4,4,4,
4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,0,5,5,4,4,4,
5,5,1,5,2,3,2,1,5,1,3,4,3,3,2,5,5,2,3,3,2,3,4,4,4,5,5,5,5,5,
5,5,4,6,5,5,5,5,5,5,5,5,4,5,6,6,6,6,6,3,5,6,6,6,6,5,4,5,6,6,
5,5,5,6,4,5,6,6,5,5,4,5,4,4,5,4,6,6,5,5,5,4,4,6,6,5,5,7,6,6,
5,5,5,5,5,4,6,6,6,5,6,5,6,5,5,5,4,5,5,5,5,5,5,5,5,4,5,5,6,6,
6,6,6,6,6,7,5,5,4,4,5,4,5,4,5,4,5,5,5,3,5,6,6,6,6,6,3,5,5,6,
6,4,4,4,4,4,4,5,5,6,5,5,4,4,5,5,6,5,6,5,6,6,4,4,5,5,6,5,5,4,
6,6,6,5,6,5,6,5,6,6,5,5,4,5,6,5,6,5,6,5,6,6,6,6,5,4,5,5,5,6,
5,5,5,5,4,5,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,5,4,4,5,4,4,4,
4,4,4,4,4,4,4,4,4,4,5,4,4,4,4,4,4,4,4,4,4,4,4,4,4,6,4,4,4,4,
4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,5,5,5,4,6,
5,6,5,6,6,6,6,6,6,6,6,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,
4,4,4,4,4,4,4,4,4,4,6,7,5,6,6,6,4,4,4,4,4,4,4,4,4,4,4,4,4,4,
4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,
4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,
4,4,4,4,4,4, };
static unsigned short stb__courier_7_latin_ext_s[560]={ 254,240,115,16,135,196,38,69,25,43,31,
122,90,134,112,119,74,127,192,64,220,56,51,79,46,219,247,224,201,80,238,
21,210,228,233,214,215,242,205,179,182,172,133,210,162,132,196,138,187,158,177,
118,167,33,157,152,147,142,137,70,91,253,85,119,109,102,40,91,45,81,76,
73,66,61,110,51,46,11,16,31,88,93,250,11,103,1,6,244,1,123,21,
163,254,61,100,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,
204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,254,176,201,
189,184,179,184,186,130,205,94,26,72,134,229,124,48,124,51,54,97,83,69,
77,57,40,105,35,104,88,229,21,16,35,78,11,50,28,134,139,16,11,6,
1,249,244,239,234,98,224,144,154,199,11,75,60,191,105,110,100,95,171,214,
166,160,150,153,148,143,130,174,128,145,100,113,108,239,98,234,117,83,21,46,
194,65,60,55,129,249,204,229,30,25,1,6,125,6,1,250,245,240,41,115,
129,105,215,124,205,120,195,235,190,96,180,175,170,165,160,155,150,145,112,135,
130,149,164,169,174,184,249,239,11,86,81,86,71,66,6,56,36,46,26,36,
31,26,64,16,21,36,56,85,95,43,235,230,80,140,16,224,119,199,219,209,
190,185,155,200,230,194,169,51,126,159,140,134,61,189,81,114,159,180,165,90,
210,215,164,70,65,60,220,51,248,41,243,31,26,225,6,144,11,1,1,244,
41,234,21,224,219,214,209,170,154,195,200,101,179,96,106,111,116,149,121,109,
139,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,71,204,204,175,
204,204,204,204,204,204,204,204,204,204,204,204,204,205,93,204,204,204,204,204,
204,204,204,204,204,204,204,204,114,56,204,204,204,204,204,204,204,204,204,204,
204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,185,210,
225,107,86,220,76,76,66,61,56,51,46,41,71,36,204,204,204,204,204,204,
204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,
204,204,204,31,6,91,21,26,16,204,204,204,204,204,204,204,204,204,204,204,
204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,
204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,
204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,
204,204,204,204,204,204,204,204,204, };
static unsigned short stb__courier_7_latin_ext_t[560]={ 7,8,38,8,8,21,27,38,27,27,38,
33,38,38,38,1,27,33,33,27,33,27,27,27,27,21,33,33,33,38,33,
27,21,33,33,21,33,33,33,21,33,33,21,33,33,33,33,21,33,21,33,
21,33,27,33,33,33,33,33,21,1,8,38,38,38,33,21,33,21,33,33,
21,33,33,1,33,33,39,38,33,21,21,33,34,21,34,39,27,39,21,38,
21,1,27,38,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,
27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,7,21,21,
27,27,27,21,21,38,21,38,38,38,38,21,38,38,27,38,38,38,27,27,
38,38,38,38,38,27,27,27,21,21,21,21,22,21,27,27,1,27,28,28,
28,21,21,21,21,27,21,1,1,1,9,8,38,21,8,8,1,1,21,27,
21,8,8,21,21,21,8,27,21,8,8,21,21,27,21,27,33,21,33,8,
1,21,21,21,27,27,1,1,21,21,1,9,8,22,22,14,14,14,33,8,
1,1,14,1,14,8,14,14,14,33,14,14,14,14,15,15,15,15,33,15,
15,1,1,1,1,1,1,1,1,15,15,33,33,15,34,15,33,15,33,15,
15,15,38,15,8,8,8,8,8,38,8,8,8,8,33,27,27,27,27,27,
8,8,8,14,14,27,27,15,15,1,15,1,15,1,1,27,27,8,8,8,
8,8,27,8,8,8,8,8,8,8,8,8,8,8,16,27,16,9,16,1,
15,1,15,1,1,1,1,8,27,8,8,15,1,15,15,15,15,27,15,27,
27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,15,27,27,8,
27,27,27,27,27,27,27,27,27,27,27,27,27,8,27,27,27,27,27,27,
27,27,27,27,27,27,27,27,1,33,27,27,27,27,27,27,27,27,27,27,
27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,14,14,
14,33,1,14,1,15,1,1,1,1,1,1,1,1,27,27,27,27,27,27,
27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,
27,27,27,1,1,15,1,1,1,27,27,27,27,27,27,27,27,27,27,27,
27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,
27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,
27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,
27,27,27,27,27,27,27,27,27, };
static unsigned short stb__courier_7_latin_ext_a[560]={ 59,59,59,59,59,59,59,59,
59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,
59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,
59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,
59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,
59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,
59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,
59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,
59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,
59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,
59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,
59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,
59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,
59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,
59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,
59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,
59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,
59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,
59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,
59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,
59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,
59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,
59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,
59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,
59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,
59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,
59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,
59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,
59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,
59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,
59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,
59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,
59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,
59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,
59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,
59,59,59,59,59,59,59,59, };

// Call this function with
//    font: NULL or array length
//    data: NULL or specified size
//    height: STB_FONT_courier_7_latin_ext_BITMAP_HEIGHT or STB_FONT_courier_7_latin_ext_BITMAP_HEIGHT_POW2
//    return value: spacing between lines
static void stb_font_courier_7_latin_ext(stb_fontchar font[STB_FONT_courier_7_latin_ext_NUM_CHARS],
                unsigned char data[STB_FONT_courier_7_latin_ext_BITMAP_HEIGHT][STB_FONT_courier_7_latin_ext_BITMAP_WIDTH],
                int height)
{
    int i,j;
    if (data != 0) {
        unsigned int *bits = stb__courier_7_latin_ext_pixels;
        unsigned int bitpack = *bits++, numbits = 32;
        for (i=0; i < STB_FONT_courier_7_latin_ext_BITMAP_WIDTH*height; ++i)
            data[0][i] = 0;  // zero entire bitmap
        for (j=1; j < STB_FONT_courier_7_latin_ext_BITMAP_HEIGHT-1; ++j) {
            for (i=1; i < STB_FONT_courier_7_latin_ext_BITMAP_WIDTH-1; ++i) {
                unsigned int value;
                if (numbits==0) bitpack = *bits++, numbits=32;
                value = bitpack & 1;
                bitpack >>= 1, --numbits;
                if (value) {
                    if (numbits < 3) bitpack = *bits++, numbits = 32;
                    data[j][i] = (bitpack & 7) * 0x20 + 0x1f;
                    bitpack >>= 3, numbits -= 3;
                } else {
                    data[j][i] = 0;
                }
            }
        }
    }

    // build font description
    if (font != 0) {
        float recip_width = 1.0f / STB_FONT_courier_7_latin_ext_BITMAP_WIDTH;
        float recip_height = 1.0f / height;
        for (i=0; i < STB_FONT_courier_7_latin_ext_NUM_CHARS; ++i) {
            // pad characters so they bilerp from empty space around each character
            font[i].s0 = (stb__courier_7_latin_ext_s[i]) * recip_width;
            font[i].t0 = (stb__courier_7_latin_ext_t[i]) * recip_height;
            font[i].s1 = (stb__courier_7_latin_ext_s[i] + stb__courier_7_latin_ext_w[i]) * recip_width;
            font[i].t1 = (stb__courier_7_latin_ext_t[i] + stb__courier_7_latin_ext_h[i]) * recip_height;
            font[i].x0 = stb__courier_7_latin_ext_x[i];
            font[i].y0 = stb__courier_7_latin_ext_y[i];
            font[i].x1 = stb__courier_7_latin_ext_x[i] + stb__courier_7_latin_ext_w[i];
            font[i].y1 = stb__courier_7_latin_ext_y[i] + stb__courier_7_latin_ext_h[i];
            font[i].advance_int = (stb__courier_7_latin_ext_a[i]+8)>>4;
            font[i].s0f = (stb__courier_7_latin_ext_s[i] - 0.5f) * recip_width;
            font[i].t0f = (stb__courier_7_latin_ext_t[i] - 0.5f) * recip_height;
            font[i].s1f = (stb__courier_7_latin_ext_s[i] + stb__courier_7_latin_ext_w[i] + 0.5f) * recip_width;
            font[i].t1f = (stb__courier_7_latin_ext_t[i] + stb__courier_7_latin_ext_h[i] + 0.5f) * recip_height;
            font[i].x0f = stb__courier_7_latin_ext_x[i] - 0.5f;
            font[i].y0f = stb__courier_7_latin_ext_y[i] - 0.5f;
            font[i].x1f = stb__courier_7_latin_ext_x[i] + stb__courier_7_latin_ext_w[i] + 0.5f;
            font[i].y1f = stb__courier_7_latin_ext_y[i] + stb__courier_7_latin_ext_h[i] + 0.5f;
            font[i].advance = stb__courier_7_latin_ext_a[i]/16.0f;
        }
    }
}

#ifndef STB_SOMEFONT_CREATE
#define STB_SOMEFONT_CREATE              stb_font_courier_7_latin_ext
#define STB_SOMEFONT_BITMAP_WIDTH        STB_FONT_courier_7_latin_ext_BITMAP_WIDTH
#define STB_SOMEFONT_BITMAP_HEIGHT       STB_FONT_courier_7_latin_ext_BITMAP_HEIGHT
#define STB_SOMEFONT_BITMAP_HEIGHT_POW2  STB_FONT_courier_7_latin_ext_BITMAP_HEIGHT_POW2
#define STB_SOMEFONT_FIRST_CHAR          STB_FONT_courier_7_latin_ext_FIRST_CHAR
#define STB_SOMEFONT_NUM_CHARS           STB_FONT_courier_7_latin_ext_NUM_CHARS
#define STB_SOMEFONT_LINE_SPACING        STB_FONT_courier_7_latin_ext_LINE_SPACING
#endif

