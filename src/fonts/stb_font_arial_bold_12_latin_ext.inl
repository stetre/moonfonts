// Font generated by stb_font_inl_generator.c (4/1 bpp)
//
// Following instructions show how to use the only included font, whatever it is, in
// a generic way so you can replace it with any other font by changing the include.
// To use multiple fonts, replace STB_SOMEFONT_* below with STB_FONT_arial_bold_12_latin_ext_*,
// and separately install each font. Note that the CREATE function call has a
// totally different name; it's just 'stb_font_arial_bold_12_latin_ext'.
//
/* // Example usage:

static stb_fontchar fontdata[STB_SOMEFONT_NUM_CHARS];

static void init(void)
{
    // optionally replace both STB_SOMEFONT_BITMAP_HEIGHT with STB_SOMEFONT_BITMAP_HEIGHT_POW2
    static unsigned char fontpixels[STB_SOMEFONT_BITMAP_HEIGHT][STB_SOMEFONT_BITMAP_WIDTH];
    STB_SOMEFONT_CREATE(fontdata, fontpixels, STB_SOMEFONT_BITMAP_HEIGHT);
    ... create texture ...
    // for best results rendering 1:1 pixels texels, use nearest-neighbor sampling
    // if allowed to scale up, use bilerp
}

// This function positions characters on integer coordinates, and assumes 1:1 texels to pixels
// Appropriate if nearest-neighbor sampling is used
static void draw_string_integer(int x, int y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0, cd->t0); glVertex2i(x + cd->x0, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t0); glVertex2i(x + cd->x1, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t1); glVertex2i(x + cd->x1, y + cd->y1);
        glTexCoord2f(cd->s0, cd->t1); glVertex2i(x + cd->x0, y + cd->y1);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance_int;
    }
    glEnd();
}

// This function positions characters on float coordinates, and doesn't require 1:1 texels to pixels
// Appropriate if bilinear filtering is used
static void draw_string_float(float x, float y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0f, cd->t0f); glVertex2f(x + cd->x0f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t0f); glVertex2f(x + cd->x1f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t1f); glVertex2f(x + cd->x1f, y + cd->y1f);
        glTexCoord2f(cd->s0f, cd->t1f); glVertex2f(x + cd->x0f, y + cd->y1f);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance;
    }
    glEnd();
}
*/

#ifndef STB_FONTCHAR__TYPEDEF
#define STB_FONTCHAR__TYPEDEF
typedef struct
{
    // coordinates if using integer positioning
    float s0,t0,s1,t1;
    signed short x0,y0,x1,y1;
    int   advance_int;
    // coordinates if using floating positioning
    float s0f,t0f,s1f,t1f;
    float x0f,y0f,x1f,y1f;
    float advance;
} stb_fontchar;
#endif

#define STB_FONT_arial_bold_12_latin_ext_BITMAP_WIDTH         256
#define STB_FONT_arial_bold_12_latin_ext_BITMAP_HEIGHT        108
#define STB_FONT_arial_bold_12_latin_ext_BITMAP_HEIGHT_POW2   128

#define STB_FONT_arial_bold_12_latin_ext_FIRST_CHAR            32
#define STB_FONT_arial_bold_12_latin_ext_NUM_CHARS            560

#define STB_FONT_arial_bold_12_latin_ext_LINE_SPACING           8

static unsigned int stb__arial_bold_12_latin_ext_pixels[]={
    0xccccb822,0x6441441c,0x3e217220,0x1c407202,0xf9839c88,0x4401b301,
    0xa84cc983,0x2e0740cc,0x203722ca,0x41404ac9,0xb80e83b8,0x970e6d42,
    0x66440887,0x5c49d701,0xdba83ccc,0x0b72203c,0x807203a8,0x032204fa,
    0xb8be23a8,0x641ccfdc,0x3ea0c883,0x24c02982,0xec80a9a8,0x07601a81,
    0x4c40a9a8,0x40a8a819,0x2a2ec40f,0x401d904e,0x40a9a848,0x3e22cc0f,
    0x99b6a6cc,0x02fe61de,0xffd8b7e2,0x4deec4fd,0x6fdc0eda,0x403b04fd,
    0x03272049,0xc87601d4,0x903dc1df,0x35c19109,0x22cdee44,0x472268ca,
    0x1a32a3b8,0x42644132,0x547711c8,0x4472268c,0x0e443e3b,0x6dc26c75,
    0x22db881d,0x7c7711c8,0xf89a32a0,0xbf16c80d,0x4c07ccfd,0x3ffe0dfd,
    0x5d4f62ea,0x71f45bc9,0x8750e449,0xdc981ddb,0x81ddb81b,0xbf91bdc9,
    0x57107b83,0xb90fcc73,0x2ffcefc8,0x5f31454c,0x05153364,0x217a2099,
    0xa99b22f9,0x6c8be628,0xd917cc3e,0x33bf22e4,0x87f6fc6f,0x0f9b22f9,
    0xff98a2a6,0xbfab641f,0x2603e60a,0x3ff20cfe,0x336b12ea,0x3e678efa,
    0x6c8be601,0x89bf3bf2,0x7e47ebdf,0x37e26fce,0x705f17eb,0x9bf37e0f,
    0xf87f51f9,0x6449fd14,0xc8be6750,0x98ea1916,0x0ffb82cc,0x22d917cc,
    0x8be6750c,0x17cc3e6c,0xf99fd4d9,0x47d4be24,0x645f309c,0x750c88a6,
    0xc87f6372,0x1f313fe6,0x57d41b20,0x74d3752e,0x300fd4d4,0x4f9b645f,
    0x897ccbe2,0x7c49f31c,0x27225f32,0xa87b82f8,0x8fccdb0f,0x6c7ea1fc,
    0x647e66db,0x9b645f36,0x2fe6d91f,0x1fef40fd,0xf36c8be6,0x917cdb23,
    0x22f987cd,0x7d57e26c,0x2afbaf41,0x20d917cc,0x3ead91f9,0xb13647d3,
    0x403e61ff,0x4babe04e,0x22be5cac,0x24a8fe25,0x7d5b22f9,0x9dfb2f41,
    0x97a0fd43,0x7f11cefd,0x27b87b81,0x5d87e66d,0x36d363ea,0x7cdb23f3,
    0xc8fcdb22,0x987f2626,0x17cc6d9f,0xb647e6d9,0x0f9b22f9,0xd73645f3,
    0x4d7607d4,0x5f33f9ef,0x3e61d364,0x7efdcd91,0x55c45b21,0x3e01f32e,
    0x54babe03,0x5d5f76bb,0x25faaed8,0x7d5b22f9,0x3f6a2ec0,0x5d81f51f,
    0xfe8ffed4,0x67cc3dc2,0xc87e66fa,0x7c53be25,0x8b6c7e63,0x8fcdb62f,
    0x3f7bf36d,0x221fab64,0x8fcdb62f,0x36c5f16d,0x6d8be21f,0x223f8972,
    0x897fee3f,0x30f9b62f,0xdd31b63f,0xf79f56c8,0x3e203e63,0x44babe01,
    0x2efcec8e,0x20dfeb88,0x7c5b62f8,0x1254fe23,0xf88fe29f,0x9a7c4953,
    0x9d702882,0xd707dcdb,0x0fd9afe8,0xf9ba2be2,0x5f14fa9e,0x7d5eedd1,
    0x17ffffe1,0x229f53df,0x3be6e8af,0xf83e4fa9,0x1364fa9e,0x41fb57fb,
    0xf53df039,0x8af887c9,0x1f33b16e,0x47ff9364,0x00fa80f9,0x0eb8babe,
    0x01b705b8,0x6c9f53df,0xf10fdabf,0x7ec5f739,0x9f10fdab,0x21725f73,
    0xbb1b887a,0x2df31bea,0x81cffcea,0x3e66defd,0x3bf60eff,0x7fbfd16d,
    0x3f266bea,0x83bffe60,0x3e66defd,0x983e0eff,0x5fb0efff,0x41cfeb88,
    0xdfff300b,0xbdfb07c1,0xfb2ffecd,0x7fcc2b8d,0x5f017fe2,0xeefea85d,
    0x0eb980ce,0x20efff98,0x5c1cfeb8,0x75c44ffe,0x7ff5c1cf,0x41660aa4,
    0x0311fffe,0x00004422,0x6d800000,0x00001fc4,0x02200180,0x06000000,
    0x09881100,0x0c413300,0x300444c0,0x00008801,0x00001000,0x22004001,
    0x00000001,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x81260000,0x803ba05d,0x8819104b,
    0x50e4418a,0x10289987,0x03221939,0x81260590,0x07221a9b,0x32035550,
    0x50757503,0x981d4331,0x3333220d,0x901eb80b,0x00644393,0xac81b3b1,
    0x0dee4c4a,0x7e401e44,0x2039b981,0x570c8872,0x577702c8,0x26055530,
    0x41f983bd,0x17cc3dbb,0x05abb8d9,0x07cc5777,0x16409910,0x17c43b88,
    0x2e0b32e0,0x0c9b81db,0x3e23b9d8,0x6fcc2b80,0x56cc5fcc,0x4c49c984,
    0x4175401f,0x37e2198a,0x0ffb87eb,0x5c0e7220,0x10b6e00b,0xdc893a19,
    0x88571dc2,0x3bb702dc,0xddb83f30,0x8d917cc1,0x0e441ddb,0x3263e675,
    0x4ea13911,0x644ea1c8,0x817c4ea1,0x644ea1c8,0x50e44ea1,0x23a87227,
    0x32b8ee3e,0x2e23e45f,0x0eedc39a,0x260b2be6,0xb8ee1bdc,0x07225f32,
    0x49807fbd,0x2a03bb70,0x43220bdc,0x9fbbf70a,0x2e2f8bdc,0x7e44fddf,
    0x0fcc6fce,0x4cdf9df9,0xefc9b22f,0xc8be66fc,0x4cbd3f36,0x17cdb22f,
    0x6c8be6d9,0x8be605f1,0xb645f36c,0x7cdb22f9,0x2e5c9b22,0x33e65f17,
    0x66fc5eba,0x3f3bf26f,0x93efbe66,0x2e7ebdf8,0x77ec5f17,0x36cfcc1c,
    0xdf903ee0,0xcefb8df9,0x363f30fe,0xf125c7d2,0x71f41f55,0x5f127cc9,
    0x24f98fcc,0x645f32f8,0x97c49f36,0x7cdb22f9,0xd917cc7f,0xf36c8be6,
    0x02f8b645,0xf9b645f3,0x917cdb22,0x26c8be6d,0x3eabe26b,0x87fddf30,
    0x3e6db0fa,0x97ccbe24,0x644be67b,0x81f55f11,0x5b21ffda,0x83ee01fa,
    0x44be24f9,0x7cc7224f,0x803f37b1,0x07e64dcd,0x32f41fa8,0xbd07ea3f,
    0xf55d8be2,0x45f35e83,0x45fdf36c,0x7cdb22f9,0x917cdb22,0x7cc0be2d,
    0x917cdb22,0x36c8be6d,0x8f53645f,0x4be64dcd,0x6d9ee0fe,0xf35e83f5,
    0x9dfb1ea3,0x2a4dcd83,0xfff93e24,0x83ee05ff,0xfaaf41fa,0x3e613311,
    0x803f57d1,0x07ea1ffa,0x32ec0fa8,0xbb03ea3f,0xaa7d4f7c,0x2f9aec0f,
    0x7e4fcdb2,0x9b645f30,0x17cdb22f,0x266fe2d9,0x36c8be61,0x2f9b645f,
    0xd917cdb2,0x87fea35c,0x4cbf12f9,0x1f56facf,0xb1bf35d8,0x43ffb50b,
    0x33e21ffa,0x35f52fb9,0x3ee01f93,0x2bb03ea0,0x2bff91fa,0x7f19f1f9,
    0x223fc254,0x3f892a3f,0x11f98fe2,0xd31fc47f,0x8fe21bff,0x6c5f13f8,
    0x29f11f36,0x7c5b62f8,0xb17c5b62,0x3ffffe2d,0x8b6c5f11,0x17c5b62f,
    0x6d8be2db,0xf31fe132,0x9d517dc5,0xf88fe2db,0x43dfbf33,0xff13e24a,
    0x6c9ffd70,0x2531fc46,0xf11fc47b,0x74c4fe27,0x6d3e3f35,0x7c45faae,
    0x5faaed84,0x07ed5fec,0x55fec5b3,0xd80d80fd,0x3e0fdabf,0x6d44fa9e,
    0x27d4f7c0,0x7c9f53df,0x6d44fa9e,0x4fa9ef81,0xf93ea7be,0x3be4fa9e,
    0x107e4fa9,0x4426409f,0x5fecbb0b,0x03f30fda,0x8bee73e2,0x099104f8,
    0xdb5f7160,0x1fb57fb0,0xafdcdfec,0x75c42649,0x03fee0df,0x1037fae2,
    0xeb839fd7,0x073fae23,0x3ae20f64,0x7ffcc1cf,0x303ae60e,0x7cc1dfff,
    0x3fe60eff,0x07ae20ef,0x983bffe6,0x3e60efff,0x3fe60eff,0xfb8b30ef,
    0x20d9500f,0x2e22fffe,0x07e61cfe,0x2e4ffeb8,0x0b7500ff,0x7ec433a0,
    0xcfeb881e,0x0cffec81,0x310009f3,0x03000000,0x00003000,0x00000620,
    0x00001800,0x81100000,0x20044018,0x01800098,0x88031010,0x00004000,
    0x00088000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x91000000,0x264065c3,0x2cbb81b0,0x32239a98,
    0xfd81cccc,0x064c6441,0x555305d5,0x886f72a0,0x1d45910c,0x006a81aa,
    0x3e800720,0xd00ed640,0x00c8801d,0x9824c0ea,0x4ac984ac,0x3206cec4,
    0x13ea01ca,0xb1015288,0xf30ae0b3,0x1d40bf25,0x05d885b8,0xcdf982ee,
    0x1cdc41cc,0x44326322,0x66540d9d,0xfecefb83,0x3fe63f30,0x20498d70,
    0x2032e049,0x00e20049,0xaa9813a2,0x3601d402,0x3201d301,0x501d900e,
    0x809b105d,0x1d100c9b,0x207ae03b,0x5d7cc0e8,0x05b9103f,0x05b9105f,
    0x3e673571,0x05ee5402,0x44193191,0x41ddb80c,0x4c7224f8,0x2e9ff31f,
    0x50e6ae26,0x195017b9,0x05e66644,0x99999990,0x2e751644,0x325432e2,
    0x22199999,0x664cea2c,0x99930ccc,0x3332e199,0x203221cc,0xb89703c8,
    0x88ee25c3,0x220bcccc,0x37efcc0c,0x24fddfb8,0x6efdc0f8,0xb7e6fc4f,
    0x20cccdf9,0x30fecefb,0x7cc1f53f,0x37e77e41,0x426623f5,0x3fbf31f9,
    0x37e6fcd7,0x21fd9df7,0x3e6750c8,0xf505fccd,0x4c999bf9,0x5b6d70ff,
    0x4cdb2ff8,0xf30ffccc,0x664dae1f,0x99930ffc,0x3f72e1ff,0x207e61cc,
    0x3f980ffb,0x33f985f3,0x666fcc5f,0xf307e65f,0x47d07fbf,0x8fa1e64b,
    0xb6c3ea4b,0x10cccdf9,0xf98e449f,0x87e60fa9,0x54be24f9,0x26bff91f,
    0x9dd3f31f,0x8b6c3ead,0x7cc7224f,0xc8be6d91,0x03f39d07,0xbb5d3fe6,
    0x9d4efa8f,0xff98bf20,0x05f90d74,0x41ee0bf2,0x3fde81f9,0x20bd1f90,
    0x7cc5e8fc,0x41f99f22,0x4c1fb4f9,0xf31ea01f,0x2db3dc03,0x23f502f9,
    0x53f30998,0xf50fcc1f,0x27f15e83,0x23f35e98,0x76ff99f9,0x11fab6cf,
    0x647e6133,0xbd759f36,0x9bf33f50,0x4fefcc79,0x9b93f36b,0x9f505f1d,
    0x6b9fdf98,0x4fa827d4,0x07e60f70,0x220db3f3,0xff100fff,0xbacf981f,
    0xf307e65e,0x1fa97e25,0x1fa83e60,0x5beb3e60,0x50999bf9,0x4d7ff23f,
    0x3e60fa9f,0x4bb03ea1,0x35fc9cfd,0x7e47e63f,0x2df59f36,0x2bff91fa,
    0x3e6db1f9,0x3dd03fee,0x4c799bf5,0x3e6cee9f,0x0fafabeb,0x4fcc2fcc,
    0x17e66cee,0x0f702fcc,0x2ad907e6,0x807f501f,0xeef983fa,0x260fcc3f,
    0x7c4bf22f,0x443f12a3,0x9d512a3f,0x3fffe6db,0x2627f14f,0x1f53f35e,
    0x47f10fcc,0x7ff543f8,0x3e63f30c,0x6754dd11,0x2627f16d,0xdd15f15e,
    0x207f4be6,0x01fffff9,0x4dff33f3,0x6ef89fed,0x7cc07744,0xdd16ff99,
    0x401dd101,0xf83f307b,0xf305ffff,0x982f9805,0x7cc1fd2f,0x76c13201,
    0x21e45faa,0x225faaed,0x0720bb0b,0x8bf737fb,0x207dc7b8,0x80fdabfd,
    0xc81d40ea,0x25d85c44,0x25fb9bfd,0x5f36defd,0x33db17e2,0x4c3335f5,
    0x7dcdf91f,0x5fb13fa7,0x47e61333,0x335fb6fc,0x266bf613,0xf983dc09,
    0x3266bea1,0x402f980f,0x12f982f9,0xa80fccbf,0xbfd7106c,0x75c46881,
    0x7fff40df,0xec85b702,0x37dc0cff,0xfd710df5,0x81d71039,0x436544f9,
    0x7642fffe,0xf9800cff,0x1fccbee2,0x23fffff3,0x4cdd11f9,0xfd0bee5f,
    0x3e65ffff,0x3ffadd11,0xfffd2fff,0x307b85ff,0x3e236c3f,0x4c02f983,
    0x2e2f982f,0x2203f32f,0x00080000,0x08801310,0x0c418800,0x88062000,
    0x13100440,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x64400000,0x301b3b00,0x203a8019,0x226603c8,0x88331501,
    0x22010152,0x5c024c0c,0x4e41d402,0x5441c984,0x40a940aa,0x70ea0bbc,
    0xf880ca85,0x0001c986,0x55409593,0x818a980a,0x93901aaa,0x4000cca0,
    0x5c6441e8,0x2a03a80c,0xb00ae03e,0x80eddc03,0x93b01ecc,0x883b6985,
    0xc81e884c,0x36016201,0xad81c980,0x10666445,0x554c3b1d,0x45886c43,
    0xbaa84bd8,0x6442d6c1,0x0ec859bd,0x32033320,0x1ccb81eb,0x36603930,
    0x64413205,0x2fdf7cc1,0x33220391,0x1e441ccc,0x64407910,0x880f2203,
    0x1019103c,0x221910bd,0x2e1ccccc,0x99911dc4,0x10644399,0x44399999,
    0x3333220c,0x9103221c,0x06443221,0x44950e44,0x7e77e40c,0x3333222f,
    0x66666441,0x21d45911,0xccc883c8,0x01e441cc,0xcccc8899,0x9b65f31c,
    0x9bf302f8,0x0ffb8399,0x2e01ff70,0x1ff700ff,0x2603fee0,0x40ffb81f,
    0x99bf31f9,0xf99fcc39,0x33337e62,0xdf987e61,0x87e61ccc,0x21cccdf9,
    0x98fcc1f9,0xf303f31f,0x83f33e45,0x4c9fd14f,0x262fdcdf,0xf31cccdf,
    0xff71ae1f,0xcccdf981,0x4c07fdc1,0x337e62cc,0x323f31cc,0x7cc0be26,
    0x81fef402,0xfbd03fde,0x40ff7a07,0x1f983fde,0x7cc3fde8,0xfc805f31,
    0x017cc5e8,0x017cc3f3,0x017cc3f3,0x31f983f3,0x32e7e63f,0x33e45f30,
    0xbd8fd43f,0x7d8be66d,0x7fcc0be6,0x3fde8d74,0x37a017cc,0x7edfcc3f,
    0x3e605f30,0x817c4d91,0x20cccdf9,0xf986d9f9,0xd9f986d9,0x86d9f986,
    0xf986d9f9,0x236cfcc1,0x99bf31f9,0x0fff8819,0x06666fcc,0x66fcc3f3,
    0x987e60cc,0x260cccdf,0xf98fcc1f,0x29f7df31,0x27eccdf9,0x363ea1f9,
    0x717ccdb4,0x3337e61f,0x73fbf30c,0x236cfccd,0x20cccdf9,0x9886d9f9,
    0x99bf31fc,0x3647e619,0x37e605f1,0x55b20ccc,0x1fab641f,0x641fab64,
    0x56c83f56,0x641f983f,0x8fcc3f56,0x80cccdf9,0xcdf983fa,0x987e60cc,
    0x260cccdf,0x3337e61f,0xf307e60c,0x97cc7e63,0xd99bf36d,0xdf10fccf,
    0x2f98fe29,0x66fcc3ea,0xdd3f30cc,0x1fab64d9,0x833337e6,0x7cc3f56c,
    0x9bf31fbd,0x41da8199,0x05f302f8,0x22fffffc,0x7c5fffff,0x7fc5ffff,
    0x7ffc5fff,0x20fcc5ff,0x265fffff,0x3005f31f,0x405f305f,0x80be61f9,
    0x80be61f9,0x98fcc1f9,0x5b23f31f,0xf99f22f9,0x7ecd7f41,0x27c8be60,
    0x33f302f9,0x7fffcdff,0xf80be65f,0x5ee5ffff,0x405f31fa,0x5fc41eb8,
    0x26fe6199,0x335f5099,0x26bea1f9,0x35f50fc9,0x2bea1f93,0x5f50fc99,
    0x7cc1f933,0x3266bea1,0x3e63f30f,0xf980999b,0x999bf982,0xbf987e60,
    0x87e60999,0x20999bf9,0x98fcc1f9,0x5b23f31f,0xf99f22f9,0x33ff3aa1,
    0x7dcdfcc1,0x2666fe64,0x5bf23f30,0x0fc99afa,0x213337f3,0x0fc99afa,
    0x267fbfd1,0x0c0999bf,0x1fffff88,0x29fffff3,0x6d9fc46d,0x446d9fc4,
    0x3f88db3f,0x263f88db,0x7f11b61f,0x7ffcc7e6,0x82f984ff,0x24fffff9,
    0x3ffe61f9,0x987e64ff,0x264fffff,0xf98fcc1f,0x4db23f31,0x1f99f22f,
    0x3fe60022,0x7ffcc4ef,0x223f34ff,0x3f88db6e,0x29fffff3,0x401fc46d,
    0x04fffff9,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x06644e44,0x165d4264,0x81106a6e,
    0x1dc41aa9,0x32217730,0xaba81640,0x260e2e22,0x155443bd,0x656444c8,
    0x23222ec0,0x40f440bb,0x1664c1d8,0x2a9a85d8,0x54c1dad8,0xcabda81a,
    0x2f2a0ccc,0x220eddc1,0x232a0c88,0x5b01ec86,0x41b905b0,0x7c4b100d,
    0x2b85fdde,0x87710bb0,0x166542f8,0xd10fb9f1,0xf07e65ff,0x716bb209,
    0x30372019,0x30ae0999,0x2bbb8bdf,0x713ef7e6,0x7f30ea05,0x2bbb81fb,
    0x4e4c1dc4,0x742cca83,0xcccffecf,0x88d95f30,0x744fc44d,0xb30a2a60,
    0x26093095,0x4aa5ed44,0x24f896a0,0x20ee20fc,0x43b883b8,0x0ee21dfc,
    0x443f33f5,0x07e66cab,0x7655c49f,0x2072e22a,0x65c41cb8,0x261cb881,
    0x21cb882f,0x5c4bb2f9,0x20de541c,0x6541fc98,0x21664c1b,0xcc981cb8,
    0x06f8be22,0xca817bf3,0x9677f21b,0x322750c8,0x54322750,0x54ea1913,
    0x6401d5ac,0x0fa8be23,0x7c4fb9f1,0x373e27dc,0x7c477f27,0x333f27dc,
    0x9bf37e1c,0xbf27c1f9,0xcee88df9,0x8fe6fc3f,0x7c3fcee8,0x03f31fcd,
    0x3e63f9bf,0x7e6fcd91,0x4cd95f31,0x3e61fbdf,0x36fe66ca,0x7f9dd10f,
    0xa87edfcc,0x1333f60f,0x3e61ffb5,0x077f26ca,0x7cdb23f3,0x647e6d91,
    0x45b23f36,0x7404aaee,0x1fa8be21,0x2a3f33f5,0x3f51f99f,0xa8be23f3,
    0x3f31f99f,0x6c3ea1b3,0x29f07e66,0xfa8db0fa,0x987ccd90,0x99b21f50,
    0x03e6130f,0x7cc261f3,0x4c3e6d91,0x5c17bf30,0x6fcc3f57,0x8fe4c40b,
    0x988d90fa,0x6c1f71fc,0x236a4ccf,0x17bf31f9,0x8fcc0fc4,0x5b23f36c,
    0x3e6d91f9,0x51d08d91,0x7c478839,0x67e43ee2,0x999f91cc,0x47333f23,
    0x333f22f8,0xb93fae1c,0xbaf99b27,0x6d9ee9f0,0x2e1f73dc,0x87dcf707,
    0xb81f307b,0x5b23f307,0x3ff6a07b,0x87fbfd10,0xbf30ffda,0xfb9ee3f7,
    0x23f7bf30,0x441ba2f9,0x7ed44ffd,0xf303f10f,0xd8fcdb63,0x4db63f36,
    0x1b50db1f,0x445a8d5f,0x7ccfb32f,0x33f30d99,0x3667e61b,0x3e617f10,
    0x215c0d99,0x266f9bf8,0x12facfaf,0xf98df37f,0x2fe24e9b,0xd37f33f9,
    0x1fcdfc49,0xf9bf8899,0x7f15d883,0x2636a7f3,0x8da8d01f,0x3eaf71f9,
    0x49d37f31,0x7743f57b,0x0aaaefda,0x31b50ed4,0x102fe23f,0x3e2dd15f,
    0x15f16e8a,0x3a2be2dd,0x78e98e86,0x26be21e4,0x27f5c3ff,0xfd713fae,
    0x3ae2fe89,0x5c3ea84f,0x27e66dff,0x7fdc5ffb,0x0cffb86d,0x3ee2ff5c,
    0x2ff5c0cf,0xbfd70b95,0xfeb8ff60,0x813ff625,0x9ffb11ce,0x71feff44,
    0x7f4419ff,0x33f663fd,0x222ffffc,0x3ff621da,0x7ec17f44,0x37bf66de,
    0xd9b7bf66,0xd2d46def,0x0001e89b,0x00000000,0x00000088,0x00000000,
    0x88000220,0x03000000,0x00000000,0x00003100,0x00000000,0x00180811,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x54000000,0x3ac8869c,0x1ec03d70,0x01d302d8,0x0ee20eee,
    0x644eaee2,0x571dc2c9,0x36225d64,0xb701b305,0x83971017,0x05b00bc9,
    0x9c989559,0x3d105d82,0xdd980e98,0x304ad882,0x59102209,0x442aa887,
    0x90f6638b,0x40ccca81,0x21912cbc,0x8289983a,0xad883ba9,0x2c409304,
    0x0fb20570,0x9df1bb7e,0x3f3be6df,0x517c5ee4,0x2cbb8331,0xe9fa82b8,
    0x11fcdf83,0x0930ddbf,0x93706666,0xb82bbb83,0xcf887502,0x201d707c,
    0x4c2f887b,0x2664c2ba,0x4d53065c,0x1eeed849,0x1f992362,0x039710d9,
    0x97103971,0x10397103,0x07710397,0x7d43f971,0x21f31f98,0x9ee5f36d,
    0x220faaf8,0x883b883b,0x3eafa83b,0x510987cc,0x12b2a1aa,0xcc985993,
    0x261664c2,0x1664c2cc,0x710d73f3,0x32126039,0x2a1911df,0x44ea1913,
    0x874c750c,0xc882f80d,0x647e6750,0x1fe77446,0x447f9dd1,0x3a23fcee,
    0x3ba23fce,0x373e23fc,0x72feff47,0x93d4be2f,0x23d47e6d,0x33e24dcd,
    0x9f73e27d,0xff87dcf8,0x7dc07b84,0x32fdf742,0x3e61fb7f,0xb7f30fdb,
    0x3f6fe61f,0x21fb7f30,0x7444e9f9,0x86c83fce,0x23f31dfc,0x5b23f36c,
    0x36ed91f9,0xff883a8e,0xb647e64f,0xfa8db1f9,0xc87d4d90,0x53643ea6,
    0x0fa9b21f,0x7ccfd4d9,0xb9f23f31,0x2fe25f17,0xb1bf36f9,0x2a1ffa8b,
    0x3f51f99f,0x267ea3f3,0x3dddd11f,0x1fcdfc47,0x47cc3b66,0x32620fdb,
    0x87f2621f,0x2621fc98,0x3f2621fc,0x43f93f31,0xfc8d90fa,0x3e63f981,
    0x647e6d91,0x09b23f36,0x33911c96,0xb647e63f,0x5c6e8bf8,0x73dc3ee7,
    0x0fb9ee1f,0x7b87dcf7,0x667e43ee,0x73dcf71c,0x7dc5f31f,0xdfbf36df,
    0xcfc8ff03,0x999f91cc,0x47333f23,0x45ff98fa,0xf8845feb,0x1f595f72,
    0x4c7ef7e6,0xbf31fbdf,0x2f7e63f7,0x3f7bf31f,0xb9ba27e6,0x8fd43ee7,
    0x4c7bf608,0x47e6db1f,0x1b63f36d,0xf80f5cae,0xd9b63f34,0x5fcc6def,
    0x26fe64e9,0x3a6fe64e,0x93a6fe64,0x264e9bf9,0x7f10d99f,0x5d7cc9d3,
    0x3e6d900f,0xf313e201,0x27e61b33,0xb33f30d9,0x3fa2be61,0xf50ed40d,
    0x3be61f73,0x7d5ee5d8,0x5c7eaf71,0x55ee3f57,0x47eaf71f,0x30fb99f9,
    0x7cc9d37f,0x85fc4db1,0xf16e8af8,0x2be2dd15,0xeaac46e8,0x3f55f33d,
    0x41ba2be2,0x0cffb81c,0x2e067fdc,0x7fdc0cff,0x067fdc0c,0xfd513fae,
    0x02eea819,0xb80fcdb2,0x4feb80ff,0x3ae27f5c,0x5f7f5c4f,0x9076a21f,
    0x7f7447df,0x3f7fa20c,0x27fbfd13,0xd13fdfe8,0x3fa27fbf,0xfd5f33fd,
    0x40cffb89,0x7f41fffc,0xd9b7bf62,0x3bf66def,0xda98e46d,0xfb0bbf23,
    0x0bae0dbd,0x00000000,0x00000000,0x06201822,0x04000000,0x01000310,
    0x00000000,0x01000000,0x10000000,0x20000010,0x00000009,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x98487700,0x8164c0bc,0x16ecc1ca,0x0c88b32a,0x55d43910,0x883ddb83,
    0x6e4c2c8e,0x87221911,0xb930363a,0x04ad8837,0x5b71016a,0x40e6ae20,
    0x03ddb83a,0x24c03bb7,0x32a090ee,0x5edc40bd,0x985b9100,0x5c5b0ae4,
    0xb31ccccc,0xc80e4477,0x10ea4da9,0x67c4db9f,0x87e7745e,0x6c0fccf8,
    0xf9807cc5,0x5b1afb22,0xf698b511,0x77e77dc3,0x645f30fa,0xbdf88b66,
    0x200eb87e,0x37bf200d,0x6fcdf86f,0x88ad8d90,0x7e77e45a,0x36a1f706,
    0x3bee0ea4,0x33f60fec,0x6efdc2fe,0x24e9ea4f,0x67ee5c49,0xf983721c,
    0x4a9f419b,0x3e63e616,0xfa9ead70,0x543e6131,0xf98b3260,0x917cc2b9,
    0x74ce493d,0xdfdb3a9d,0x9f1274bf,0x4d917ccd,0x644be64b,0x98ea1911,
    0xf82cbacb,0x0fa8be64,0x3655c4db,0x753ddd39,0x82f893e6,0x8592a0fb,
    0x447224f8,0x47d1b22c,0x14e9ea4b,0x87b81959,0xff30cac8,0x29501dff,
    0x49ddb02b,0x3ee3f57b,0x0b3ee3ec,0x261fb7f3,0x3e64fbef,0x3ab0bf22,
    0x37aab188,0xe83f32ec,0x6c8be60f,0x39dfb1a6,0xf16c8fcc,0x47d7df99,
    0xf72f41f9,0xdf9bf36c,0x2b3b9eac,0x5c2f41fa,0x415d2a0f,0x213311fa,
    0x0fcaaaa9,0x87d403f3,0x70bdf34e,0x4cbdf30f,0x883fa8af,0x74472588,
    0xddd10edd,0x3eafee7f,0x310dffb1,0x5cbe63f9,0x86c8be67,0x2ba584d5,
    0xdb03ea4b,0xf1b22f98,0x31ffda81,0xc989b23f,0x3ea6c9cf,0x59f336c0,
    0x36c3eadf,0xf559b7ab,0x0fb85d81,0x865d6222,0x2bff91fa,0x1feeeefb,
    0x5fd403f5,0x885f34f9,0x3e64efee,0x4f897cc2,0x3d71c837,0x4cc2f9ee,
    0x8fa1f32f,0xfbdf983f,0x89ee3f31,0x2361b62f,0xfd48bccb,0x8fe2dfff,
    0xb17c43f8,0x44952d8d,0x5b63f34f,0xccdfbdf8,0x7454fe24,0xbb6e7545,
    0x968d9b27,0x88fe2915,0x41ee533f,0xf14bb89c,0x7cd7a627,0x1fc43ee2,
    0x77f7d495,0xf9303f34,0x260fcc13,0x7f1feeef,0x33deaa4c,0x3a61f53f,
    0x273e0fc9,0x1357f91f,0xf98fd5ee,0x4f7c5d8d,0x98d984fa,0x3ed30d89,
    0x7ed5fec1,0x4fa9ef80,0xb9cf8a5c,0xdd15f12f,0x237ea3ee,0x7edf6c3c,
    0xaec2e21f,0x266f9bf8,0x6c1b512d,0xf70fdabf,0x4c930db5,0x2e6ff60e,
    0x3eabba5f,0x2fd576c5,0x403e60f5,0x4c0f987b,0x3601acdf,0x7e47b530,
    0x20efec3f,0x37b24fea,0xfbfd14ff,0x07bf3e67,0x2019ffd3,0x2e1dddd9,
    0xfeb8878d,0xdfff301c,0x3fae6981,0xb6f7ec4f,0xeffbefe8,0x7f7f5c41,
    0x717fff45,0xdd98dbff,0x7f5c41dd,0x07bf621c,0x216fcc36,0x220cffec,
    0xeb885ffd,0x4c1ea0df,0xf30f700f,0x1002f981,0x00000010,0x00000000,
    0x00611008,0x040c0000,0x4c000000,0x00009884,0x08000001,0x00002662,
    0x00062000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x91000000,0xb710e403,0x00791015,0x93333332,
    0x644751c8,0x5d701100,0x36b22464,0x4e4c5b00,0x90555440,0x80322155,
    0xb112a1c8,0x4771dc95,0x881cccc8,0xad81cccc,0x2201b905,0xc887901e,
    0xc8939101,0x0baa1e44,0x86447591,0x36d301c8,0x8b221931,0xe8fe02f8,
    0xffb84ebd,0x6fe7d400,0x5cbe24cc,0x26c07e66,0x1c9873e2,0x44981f4c,
    0x66444efd,0x4477510c,0x337f201e,0x075c2fec,0x4c5f31f5,0x4c2fdcdf,
    0x542fdcdf,0x04ac982e,0x22162072,0x1d5f302f,0x445886c4,0x2ea60d9d,
    0x57c47e63,0x10a94408,0xf883f2bd,0x3dc91002,0x3a01fef4,0x5f101f9c,
    0x441f9926,0x3f309dd9,0x332a0c88,0x32e3224c,0x41773f30,0x206440c8,
    0x70cb8c9d,0x23fb559f,0x3a0cb8c8,0xb17cc6dc,0x1f62f98f,0x4a95c191,
    0x3332a191,0x893332a4,0x895f302f,0x881910c8,0x32e3220c,0x33e27f30,
    0x540c880e,0x17c43fcf,0x2627cc00,0x3ea06d9f,0x23ccdf99,0x7cc132f8,
    0xffffb0a9,0x3f307e69,0xf337e654,0x3be6bf7d,0x307e64fb,0xbdf9983f,
    0xd99bf35f,0xafdf7ccf,0x2e1cffd9,0x5c1f72cf,0x4c1f72cf,0x47ed721f,
    0x9bf32a7a,0x3e26fcca,0x40fcc352,0x983f31f9,0x3efbe61f,0x3fe2bf35,
    0xfb03f301,0x5405f10d,0xb6427c41,0x53dd01fa,0x7c4799bf,0x25f5f302,
    0xf309dd98,0xfd81f983,0x9b6cbe60,0x0fccd92f,0x4be607e6,0xd99bf36d,
    0x96d97ccf,0x7ec7dffd,0x7ec1f74d,0x7cc1f74d,0x2bbe3e61,0xd80fd85d,
    0x1fcbe20f,0x23f303f3,0x30fcc1f9,0x8fe5b65f,0x07e602fb,0x0be21bf6,
    0xf83d43f8,0xf985ffff,0xf101ffff,0x6c07e605,0x3e60fcc4,0x3e60fe41,
    0x647e6d91,0x3f307e66,0x4db23f30,0x1f99f22f,0x33bf2ed9,0x47c8be62,
    0xf31f22f9,0xfdbecf83,0x7e40fe42,0xf9817c41,0x3f31f981,0x47e61f98,
    0x3f63f96c,0xf507e602,0x9bf887fb,0x0a215c19,0x3f266bea,0x7d4cf6c0,
    0x2fe2199a,0x307e6199,0x3e635775,0x7f70fcc1,0x6c8fcc33,0xf99b23f3,
    0x7cc0fcc1,0xc8be6d91,0xbb647e67,0x3e62cefc,0x7cc4fb9b,0x7cc4fb9b,
    0x7fce7ec1,0xb866fee0,0x2fe219bf,0x207e6199,0x983f31f9,0xb647e61f,
    0x337f11f9,0x3e21f983,0x7fc41fb6,0x2a0e1fff,0x1fc46d87,0x7ffcc7f3,
    0xffff11ff,0xfb07e63f,0x07e69fff,0x7fff43f3,0x5b23f30f,0x7ccd91f9,
    0x7cc0fcc1,0xc8be6d91,0x23647e67,0xefff985d,0x4efff984,0x97d41f98,
    0x7ffff45f,0x21ffffd0,0x31fffff8,0x263f303f,0xf30fcc1f,0x88fcdb23,
    0x261fffff,0x7c47f21f,0x00000005,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x66443322,
    0x87999910,0x441cccc8,0x9101910c,0x32239999,0x8b201910,0x06f264da,
    0x3223b897,0x49999910,0x911cccca,0xccc89d45,0xcb87222c,0x17999910,
    0x49701d10,0x64d2a1c8,0x9970cccc,0x21dc3999,0x0cb8ae4a,0xbacc9895,
    0x8acb882c,0x0e5c41cc,0x22b8e5c4,0x664c1bca,0xff983222,0x3e61ff72,
    0x3e64fccd,0x3e62fdcd,0xbf301f31,0x43223999,0x7c9f01f9,0x1fbbf11d,
    0x22f99fcc,0x99bf31f9,0x97f77549,0x26d70ff9,0xf31fecdf,0xdf98bf25,
    0x7f445fcc,0x5f32fcc1,0xfccc9be4,0x99fb970f,0x4bd07e43,0x365ff16d,
    0x3bf33e26,0x33ba23eb,0xd11fbdff,0x77447f9d,0x7f34dbfc,0x7e5fc4d9,
    0x77cc3f10,0x3e61fdb4,0x22f99762,0x7cc7e67d,0x05f31c98,0x5cfcc322,
    0x6fdcfe0c,0x90be2932,0x1f98bd1f,0x4b9005f3,0x26d74ff9,0x57cd3e2f,
    0x917cc3fb,0x10fefc4f,0x917ccbfd,0xf705f90f,0x17ccbe60,0x29df51f7,
    0x67dcc44e,0x643ea6c9,0x1f53e9af,0xd70fa9ae,0x20b7e677,0x3f11fc98,
    0xfcfb67cc,0x3fb9bf30,0x21f717cc,0xbd3f31f9,0x86666fcc,0xf7df31f9,
    0x2dfb9749,0x7fc40fb8,0xf98fcc0f,0x0f882ccd,0x5ae7f7e6,0x33fb9bf9,
    0x9f30dfbf,0x4cc4bd75,0x9973721f,0x547eccdf,0x740f704f,0xc9f98f75,
    0x222f8ecd,0x4ccefbdf,0xccdfb9ea,0xf73d4f73,0x3f6a1fd4,0x3f7bf30f,
    0xfaf987e2,0xbf30fafa,0x17cc9fb9,0x4c7e61f5,0x66fcc7ff,0x263f30cc,
    0xf16cdb2f,0x2a07f505,0xf31f983f,0x8bb07ddd,0x36cee9f9,0x7ccbffff,
    0x77cc3fdf,0x23f303fe,0x3e65c8fa,0x3e67eccd,0xfb81ee05,0xbebf84e8,
    0x5ee0fafa,0x7c3b8dfa,0x1d8afe9c,0x4c9d37f3,0x6d45e9bf,0x2af71f88,
    0x7cc3f11f,0x30f9eee9,0xf987dc5f,0x31f99f22,0x17cc5fdf,0x23f31f98,
    0x42f8766c,0x0be603fa,0x017cc7e6,0xf33f30be,0x4c0be6df,0x7cc1fb4f,
    0x3f301fd2,0x4d3ffbf6,0x7745f22f,0xf881ee00,0x9fed81fc,0x7f446ef8,
    0x541efebe,0x45ffbdfe,0x7d40cffa,0x7fec40cf,0x4bf7fa24,0x327e61f8,
    0x7f30f9cf,0x5fccfb53,0x47e64fb9,0xf30fc9f9,0x3e613337,0xa9b23f31,
    0xaef88be1,0x982f980a,0x4c05f31f,0xfc8fcc0f,0x3e605f36,0x97ccbf12,
    0x51f985f8,0x3e63db55,0x4d7edf22,0x203dc099,0x4ff707fe,0x008104fe,
    0x00000000,0x54fcc000,0xff30f9af,0x7fcc5dff,0x98fcc4ef,0xff34f88f,
    0x47e69fff,0x1fcd91f9,0x7fffe45f,0xf982f983,0x3d405f31,0x36e88fcc,
    0xc8be605f,0x7dc5f32f,0x2e40fcc2,0xfebe45f3,0x3dc2ffff,0x7cc13ee0,
    0x0000bee5,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x20ee2000,0x26661cb8,
    0x2a191199,0x265103ab,0x0ea19101,0x92b2a057,0x84c4ae2b,0x46441081,
    0x322950cb,0x5c999951,0x44322952,0x0cc8bb8c,0x29819391,0x10e44644,
    0x9d408202,0x3332a4c9,0x2a19913c,0xbb13cccc,0x1ecc5b83,0x26254332,
    0x44b23262,0x6449910b,0x896a38ad,0x46dcf80b,0x1011fcdf,0x2e6e43e6,
    0x77d57f66,0x45c87cc2,0x5fbee84c,0xfb97c5ee,0x27a62fff,0x53ef7e66,
    0x32a6dcf8,0x7ed726fd,0x337e67a8,0xdf35fbef,0x9f98b70b,0x87a7e25e,
    0xb52f8af8,0x6d4762a9,0x79794ddd,0x457b776a,0x8bfe23da,0x526ea6a9,
    0x5537727b,0x21f33f8f,0x3f7725ba,0x1f88325f,0x98fccfd4,0x4202130f,
    0x293b90f9,0x5c41cfe9,0x321f33fe,0x23777755,0x227db8f9,0x2be67aaf,
    0x5d5d10fa,0x2a6c97cc,0x20fd81ff,0x5caef8f9,0x6ca7c7e6,0xedb985f3,
    0x70fdf32b,0x5ffb8d7b,0x54499254,0x953b1aaa,0x1ee656e0,0x0e98b9d7,
    0xd1ea79b3,0xb175e61d,0x0c410221,0xcccfb800,0x42020f51,0x5c7db1f9,
    0xbf7101df,0xecaec7e6,0x95f73eee,0x26eec1f5,0x263f11f3,0x47e60faf,
    0x903fe26c,0x97d9f03f,0x3f87cc5f,0xd707e6d9,0x3be69dff,0x0fd7cc2f,
    0x74a85ff1,0x3ffee39f,0x203dd35f,0x7c9bd75b,0x1db71f8b,0x3551014c,
    0x00014404,0x20222222,0xf10d99f9,0x42025f37,0x985e8af8,0xdfb32efd,
    0x2f457c45,0xb1df306a,0x261ff98b,0x3321ffff,0x3643e65b,0x67dcbdbd,
    0x7ce7ec19,0x9fc3e60f,0x2e01f36c,0x07dcfcc5,0x6fc47b7b,0x4c4222fb,
    0x00044441,0x0d42a200,0x00000001,0xddddd000,0x713fae0d,0x70404bfd,
    0x6440b99f,0x3f603b75,0x2226c5de,0x6e80cfee,0x20e555cc,0x21f30c8c,
    0x7f31f76c,0xa83ffff6,0x0f98bf2f,0x07cdb27f,0xe87cc4b8,0x47091914,
    0x0000000b,0x00000000,0x00000000,0x4ccc0000,0x00000199,0x00040000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x44000000,0x3bbbba0b,0x0bba9666,0x0000593b,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x3f100000,
    0x20444444,0x2e3ff91b,0x000001a8,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,
};

static signed short stb__arial_bold_12_latin_ext_x[560]={ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,-1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,0,0,0,0,0,0,0,0,
-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,0,0,0,
0,0,0,-1,0,0,0,0,-1,-1,0,0,0,0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,-1,0,0,0,0,0,-1,0,-1,-1,-1,0,0,0,0,0,0,0,0,0,0,0,0,-1,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,-1,0,-1,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,-1,-1,-1,-1,-1,-1,0,0,0,0,0,0,0,-1,0,0,0,0,0,0,
-1,0,0,0,0,0,0,0,0,0,0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,0,
-1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,-1,1,1,1,
1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,-1,-1,0,
0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,0,0,-1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1, };
static signed short stb__arial_bold_12_latin_ext_y[560]={ 9,1,1,1,0,1,1,1,1,1,1,2,7,5,
7,1,1,1,1,1,1,1,1,1,1,1,3,3,2,3,2,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,10,1,3,1,3,1,3,1,3,1,1,
1,1,1,3,3,3,3,3,3,3,1,3,3,3,3,3,3,1,1,1,4,2,2,2,2,2,2,2,2,2,
2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,9,3,1,1,2,1,
1,1,1,1,1,3,3,5,1,-1,1,1,1,1,1,3,1,4,9,1,1,3,1,1,1,3,-1,-1,-1,-1,
-1,-1,1,1,-1,-1,-1,-1,-1,-1,-1,-1,1,-1,-1,-1,-1,-1,-1,2,0,-1,-1,-1,-1,-1,1,1,1,1,
1,1,1,0,3,3,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,3,1,1,1,1,1,1,1,
-1,1,-1,1,1,3,-1,1,-1,1,-1,1,-1,1,-1,1,1,1,-1,1,-1,1,-1,1,1,3,-1,1,-1,1,
-1,1,-1,1,1,0,-1,-1,1,1,-1,1,-1,1,-1,1,1,1,-1,3,1,1,-1,1,1,1,3,-1,-1,1,
1,1,1,1,1,1,1,-1,1,1,3,-1,1,1,1,3,-1,1,-1,1,-1,1,1,3,-1,1,1,3,-1,1,
-1,1,-1,1,1,3,-1,1,1,1,-1,1,1,1,-1,1,-1,1,-1,1,-1,0,-1,1,1,3,-1,1,-1,1,
-1,-1,1,-1,1,-1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,2,2,1,2,2,2,
2,2,2,2,2,2,2,2,2,2,1,3,2,2,2,2,2,2,2,2,2,2,2,2,2,1,3,2,2,2,
2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,-1,1,-1,1,-1,
1,-1,1,-1,-1,-1,-1,-1,-1,-1,-1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,
2,2,2,2,2,2,2,2,2,2,-2,-1,-1,1,-1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,
2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,
2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,
2,2,2,2,2,2, };
static unsigned short stb__arial_bold_12_latin_ext_w[560]={ 0,3,5,6,6,10,8,3,4,4,4,6,3,4,
3,4,6,5,6,6,6,6,6,6,6,6,2,3,6,6,6,7,11,8,8,8,8,7,7,8,7,3,6,8,
7,9,7,8,7,9,8,7,7,7,9,11,8,9,7,4,4,3,6,8,3,6,7,6,6,6,4,6,6,3,
4,6,3,9,6,7,7,6,5,6,4,6,6,9,6,6,6,4,3,4,6,6,6,6,6,6,6,6,6,6,
6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,0,2,6,6,6,6,
3,6,4,9,4,6,6,4,9,8,4,6,4,4,4,6,7,3,4,3,4,6,9,9,9,7,8,8,8,8,
8,8,12,8,7,7,7,7,4,3,5,5,9,7,8,8,8,8,8,6,9,7,7,7,7,9,7,7,6,6,
6,6,6,6,10,6,6,6,6,6,4,4,5,5,7,6,7,7,7,7,7,6,7,6,6,6,6,6,7,6,
8,6,8,6,9,7,8,6,8,6,8,6,8,6,8,8,9,7,7,6,7,6,7,6,7,6,7,6,8,6,
8,6,8,6,8,6,7,6,8,6,5,5,5,5,5,5,3,3,3,3,8,6,7,5,8,6,6,7,4,7,
4,7,5,7,5,7,3,7,6,7,6,7,6,8,8,6,8,7,8,7,8,7,11,10,8,5,8,5,8,5,
7,6,7,6,7,6,7,6,7,4,7,6,7,4,7,6,7,6,7,6,7,6,7,6,7,7,11,9,9,6,
9,7,6,7,6,7,6,4,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,8,6,6,7,6,6,6,
6,6,6,6,6,6,6,6,6,6,10,8,6,6,6,6,6,6,6,6,6,6,6,6,6,9,8,6,6,6,
6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,8,6,5,5,8,
7,7,6,7,6,7,6,7,6,7,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,
6,6,6,6,6,6,6,6,6,6,8,6,12,10,9,7,6,6,6,6,6,6,6,6,6,6,6,6,6,6,
6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,
6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,
6,6,6,6,6,6, };
static unsigned short stb__arial_bold_12_latin_ext_h[560]={ 0,8,4,9,11,9,9,4,11,11,4,6,4,2,
2,9,9,8,8,9,8,9,9,8,9,9,6,8,7,5,7,8,11,8,8,9,8,8,8,9,8,8,9,8,
8,8,8,9,8,9,8,9,8,9,8,8,8,8,8,11,9,11,5,2,2,7,9,7,9,7,8,9,8,8,
11,8,8,6,6,7,9,9,6,7,9,7,6,6,6,9,6,11,11,11,3,7,7,7,7,7,7,7,7,7,
7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,0,9,11,9,6,8,
11,11,2,9,5,6,5,2,9,2,4,8,5,5,2,9,11,2,3,5,5,6,9,9,9,9,10,10,10,10,
10,10,8,11,10,10,10,10,10,10,10,10,8,10,11,11,11,11,11,6,10,11,11,11,11,10,8,9,9,9,
9,9,9,10,7,9,9,9,9,9,8,8,8,8,9,8,9,9,9,9,9,7,7,9,9,9,9,11,11,11,
10,9,10,9,11,9,11,9,11,9,11,9,11,9,10,9,8,9,10,9,10,9,10,9,11,9,10,9,11,11,
11,11,11,11,11,12,10,10,8,8,10,8,10,8,10,8,11,11,10,6,9,11,11,11,11,11,6,10,10,11,
11,8,8,8,8,8,8,10,8,11,9,10,8,8,9,9,11,9,11,9,11,9,9,7,10,8,11,9,10,8,
11,9,11,9,11,9,11,9,12,12,10,9,8,9,11,9,11,9,11,9,11,10,11,9,11,9,10,8,10,11,
10,10,8,10,8,10,8,8,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,9,7,7,11,7,7,7,
7,7,7,7,7,7,7,7,7,7,9,7,7,7,7,7,7,7,7,7,7,7,7,7,7,9,7,7,7,7,
7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,10,9,10,8,11,
9,11,9,11,11,11,11,11,11,11,11,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,
7,7,7,7,7,7,7,7,7,7,11,11,10,9,11,9,7,7,7,7,7,7,7,7,7,7,7,7,7,7,
7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,
7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,
7,7,7,7,7,7, };
static unsigned short stb__arial_bold_12_latin_ext_s[560]={ 21,59,222,74,165,238,106,213,19,145,217,
135,228,84,249,249,56,138,68,122,144,232,25,97,11,18,253,233,31,172,38,
237,193,245,11,209,20,40,89,191,151,85,174,120,225,1,104,165,112,131,129,
105,167,92,175,185,216,75,159,172,100,161,196,71,80,243,46,8,148,1,63,
141,52,48,21,33,29,119,88,219,70,63,129,236,31,45,67,109,95,78,102,
26,102,114,237,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,
15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,21,253,128,
32,74,104,143,154,89,64,191,81,184,84,155,244,208,28,167,203,244,218,185,
67,232,163,179,149,1,181,222,188,17,26,35,44,53,68,1,205,81,99,113,
127,141,146,165,62,111,198,222,239,26,40,57,156,171,89,214,121,137,89,245,
172,165,158,151,144,137,232,197,115,41,99,92,85,175,180,185,210,48,191,33,
25,17,9,1,52,59,231,224,217,210,150,182,198,206,170,223,155,213,140,1,
126,17,112,10,99,24,84,181,67,121,50,190,36,215,24,239,10,40,43,9,
17,48,166,240,33,107,100,79,14,157,150,88,60,135,73,121,67,107,40,88,
249,77,250,58,57,223,64,1,74,142,1,249,105,35,14,169,161,22,202,198,
173,53,92,247,145,97,79,1,119,70,91,231,76,173,162,177,208,123,225,157,
106,240,239,248,133,231,148,205,189,190,196,6,1,197,203,231,196,129,201,113,
208,97,215,81,116,66,239,49,246,153,137,220,10,230,165,154,181,147,189,46,
35,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,200,15,15,177,
15,15,15,15,15,15,15,15,15,15,15,15,15,81,227,15,15,15,15,15,
15,15,15,15,15,15,15,15,54,22,15,15,15,15,15,15,15,15,15,15,
15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,211,39,
205,131,119,180,106,113,94,87,79,147,135,56,48,41,15,15,15,15,15,15,
15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,
15,15,15,70,63,132,120,31,129,15,15,15,15,15,15,15,15,15,15,15,
15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,
15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,
15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,
15,15,15,15,15,15,15,15,15, };
static unsigned short stb__arial_bold_12_latin_ext_t[560]={ 13,88,97,69,1,49,59,97,26,14,97,
97,97,104,97,49,59,88,88,59,88,59,69,88,69,69,69,78,97,97,97,
78,1,78,88,69,88,88,88,69,88,88,69,88,78,88,88,69,88,69,88,
69,88,69,88,88,79,88,88,1,69,1,97,104,104,88,69,97,69,97,88,
69,88,88,1,88,88,97,97,88,59,59,97,88,49,97,97,97,97,59,97,
1,1,1,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,
97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,13,14,1,
69,97,79,1,1,104,69,97,97,97,104,69,100,97,79,97,97,97,69,1,
104,97,97,97,97,69,69,59,59,38,38,38,38,38,38,79,1,38,38,38,
38,38,38,38,38,79,38,1,1,14,14,14,97,38,14,1,14,14,38,69,
59,59,59,59,59,59,38,88,59,59,59,59,59,79,79,79,79,59,79,59,
59,59,59,59,97,97,49,49,49,49,14,14,14,38,49,38,49,14,49,14,
49,14,49,26,49,26,49,38,49,79,49,38,49,38,49,38,49,26,49,38,
49,26,14,14,26,26,26,26,1,38,38,79,79,38,79,38,79,38,79,26,
14,38,88,49,26,14,26,26,14,97,38,26,14,14,79,79,79,79,79,79,
26,79,26,38,26,79,79,49,49,26,49,14,49,14,49,49,88,26,69,14,
49,26,69,1,49,1,49,14,49,14,49,1,1,26,49,69,59,14,59,14,
59,14,59,14,26,14,59,14,59,26,79,26,14,26,26,79,26,79,26,79,
79,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,69,97,97,1,
97,97,97,97,97,97,97,97,97,97,97,97,97,69,88,97,97,97,97,97,
97,97,97,97,97,97,97,97,69,97,97,97,97,97,97,97,97,97,97,97,
97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,26,69,
26,79,1,59,1,69,1,1,1,1,1,1,1,1,97,97,97,97,97,97,
97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,
97,97,97,1,1,26,69,1,59,97,97,97,97,97,97,97,97,97,97,97,
97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,
97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,
97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,
97,97,97,97,97,97,97,97,97, };
static unsigned short stb__arial_bold_12_latin_ext_a[560]={ 48,57,81,96,96,153,124,41,
57,57,67,100,48,57,48,48,96,96,96,96,96,96,96,96,
96,96,57,57,100,100,100,105,168,124,124,124,124,115,105,134,
124,48,96,124,105,143,124,134,115,134,124,115,105,124,115,162,
115,115,105,57,48,57,100,96,57,96,105,96,105,96,57,105,
105,48,48,96,48,153,105,105,105,105,67,96,57,105,96,134,
96,96,86,67,48,67,100,129,129,129,129,129,129,129,129,129,
129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,
129,129,129,129,129,129,129,129,48,57,96,96,96,96,48,96,
57,127,64,96,100,57,127,95,69,94,57,57,57,99,96,48,
57,57,63,96,143,143,143,105,124,124,124,124,124,124,172,124,
115,115,115,115,48,48,48,48,124,124,134,134,134,134,134,100,
134,124,124,124,124,115,115,105,96,96,96,96,96,96,153,96,
96,96,96,96,48,48,48,48,105,105,105,105,105,105,105,94,
105,105,105,105,105,96,105,96,124,96,124,96,124,96,124,96,
124,96,124,96,124,96,124,124,124,105,115,96,115,96,115,96,
115,96,115,96,134,105,134,105,134,105,134,105,124,105,124,105,
48,48,48,48,48,48,48,48,48,48,135,96,96,48,124,96,
96,105,48,105,48,105,66,105,82,105,48,124,105,124,105,124,
105,122,124,105,134,105,134,105,134,105,172,162,124,67,124,67,
124,67,115,96,115,96,115,96,115,96,105,57,105,82,105,57,
124,105,124,105,124,105,124,105,124,105,124,105,162,134,115,96,
115,105,86,105,86,105,86,48,129,129,129,129,129,129,129,129,
129,129,129,129,129,129,129,125,129,129,96,129,129,129,129,129,
129,129,129,129,129,129,129,129,147,122,129,129,129,129,129,129,
129,129,129,129,129,129,129,143,124,129,129,129,129,129,129,129,
129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,
129,129,129,129,129,124,96,48,48,134,105,124,105,124,105,124,
105,124,105,124,105,129,129,129,129,129,129,129,129,129,129,129,
129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,
129,129,124,96,172,153,134,105,129,129,129,129,129,129,129,129,
129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,
129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,
129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,
129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,
129,129,129,129,129,129,129,129, };

// Call this function with
//    font: NULL or array length
//    data: NULL or specified size
//    height: STB_FONT_arial_bold_12_latin_ext_BITMAP_HEIGHT or STB_FONT_arial_bold_12_latin_ext_BITMAP_HEIGHT_POW2
//    return value: spacing between lines
static void stb_font_arial_bold_12_latin_ext(stb_fontchar font[STB_FONT_arial_bold_12_latin_ext_NUM_CHARS],
                unsigned char data[STB_FONT_arial_bold_12_latin_ext_BITMAP_HEIGHT][STB_FONT_arial_bold_12_latin_ext_BITMAP_WIDTH],
                int height)
{
    int i,j;
    if (data != 0) {
        unsigned int *bits = stb__arial_bold_12_latin_ext_pixels;
        unsigned int bitpack = *bits++, numbits = 32;
        for (i=0; i < STB_FONT_arial_bold_12_latin_ext_BITMAP_WIDTH*height; ++i)
            data[0][i] = 0;  // zero entire bitmap
        for (j=1; j < STB_FONT_arial_bold_12_latin_ext_BITMAP_HEIGHT-1; ++j) {
            for (i=1; i < STB_FONT_arial_bold_12_latin_ext_BITMAP_WIDTH-1; ++i) {
                unsigned int value;
                if (numbits==0) bitpack = *bits++, numbits=32;
                value = bitpack & 1;
                bitpack >>= 1, --numbits;
                if (value) {
                    if (numbits < 3) bitpack = *bits++, numbits = 32;
                    data[j][i] = (bitpack & 7) * 0x20 + 0x1f;
                    bitpack >>= 3, numbits -= 3;
                } else {
                    data[j][i] = 0;
                }
            }
        }
    }

    // build font description
    if (font != 0) {
        float recip_width = 1.0f / STB_FONT_arial_bold_12_latin_ext_BITMAP_WIDTH;
        float recip_height = 1.0f / height;
        for (i=0; i < STB_FONT_arial_bold_12_latin_ext_NUM_CHARS; ++i) {
            // pad characters so they bilerp from empty space around each character
            font[i].s0 = (stb__arial_bold_12_latin_ext_s[i]) * recip_width;
            font[i].t0 = (stb__arial_bold_12_latin_ext_t[i]) * recip_height;
            font[i].s1 = (stb__arial_bold_12_latin_ext_s[i] + stb__arial_bold_12_latin_ext_w[i]) * recip_width;
            font[i].t1 = (stb__arial_bold_12_latin_ext_t[i] + stb__arial_bold_12_latin_ext_h[i]) * recip_height;
            font[i].x0 = stb__arial_bold_12_latin_ext_x[i];
            font[i].y0 = stb__arial_bold_12_latin_ext_y[i];
            font[i].x1 = stb__arial_bold_12_latin_ext_x[i] + stb__arial_bold_12_latin_ext_w[i];
            font[i].y1 = stb__arial_bold_12_latin_ext_y[i] + stb__arial_bold_12_latin_ext_h[i];
            font[i].advance_int = (stb__arial_bold_12_latin_ext_a[i]+8)>>4;
            font[i].s0f = (stb__arial_bold_12_latin_ext_s[i] - 0.5f) * recip_width;
            font[i].t0f = (stb__arial_bold_12_latin_ext_t[i] - 0.5f) * recip_height;
            font[i].s1f = (stb__arial_bold_12_latin_ext_s[i] + stb__arial_bold_12_latin_ext_w[i] + 0.5f) * recip_width;
            font[i].t1f = (stb__arial_bold_12_latin_ext_t[i] + stb__arial_bold_12_latin_ext_h[i] + 0.5f) * recip_height;
            font[i].x0f = stb__arial_bold_12_latin_ext_x[i] - 0.5f;
            font[i].y0f = stb__arial_bold_12_latin_ext_y[i] - 0.5f;
            font[i].x1f = stb__arial_bold_12_latin_ext_x[i] + stb__arial_bold_12_latin_ext_w[i] + 0.5f;
            font[i].y1f = stb__arial_bold_12_latin_ext_y[i] + stb__arial_bold_12_latin_ext_h[i] + 0.5f;
            font[i].advance = stb__arial_bold_12_latin_ext_a[i]/16.0f;
        }
    }
}

#ifndef STB_SOMEFONT_CREATE
#define STB_SOMEFONT_CREATE              stb_font_arial_bold_12_latin_ext
#define STB_SOMEFONT_BITMAP_WIDTH        STB_FONT_arial_bold_12_latin_ext_BITMAP_WIDTH
#define STB_SOMEFONT_BITMAP_HEIGHT       STB_FONT_arial_bold_12_latin_ext_BITMAP_HEIGHT
#define STB_SOMEFONT_BITMAP_HEIGHT_POW2  STB_FONT_arial_bold_12_latin_ext_BITMAP_HEIGHT_POW2
#define STB_SOMEFONT_FIRST_CHAR          STB_FONT_arial_bold_12_latin_ext_FIRST_CHAR
#define STB_SOMEFONT_NUM_CHARS           STB_FONT_arial_bold_12_latin_ext_NUM_CHARS
#define STB_SOMEFONT_LINE_SPACING        STB_FONT_arial_bold_12_latin_ext_LINE_SPACING
#endif

