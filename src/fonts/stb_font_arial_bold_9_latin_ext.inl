// Font generated by stb_font_inl_generator.c (4/1 bpp)
//
// Following instructions show how to use the only included font, whatever it is, in
// a generic way so you can replace it with any other font by changing the include.
// To use multiple fonts, replace STB_SOMEFONT_* below with STB_FONT_arial_bold_9_latin_ext_*,
// and separately install each font. Note that the CREATE function call has a
// totally different name; it's just 'stb_font_arial_bold_9_latin_ext'.
//
/* // Example usage:

static stb_fontchar fontdata[STB_SOMEFONT_NUM_CHARS];

static void init(void)
{
    // optionally replace both STB_SOMEFONT_BITMAP_HEIGHT with STB_SOMEFONT_BITMAP_HEIGHT_POW2
    static unsigned char fontpixels[STB_SOMEFONT_BITMAP_HEIGHT][STB_SOMEFONT_BITMAP_WIDTH];
    STB_SOMEFONT_CREATE(fontdata, fontpixels, STB_SOMEFONT_BITMAP_HEIGHT);
    ... create texture ...
    // for best results rendering 1:1 pixels texels, use nearest-neighbor sampling
    // if allowed to scale up, use bilerp
}

// This function positions characters on integer coordinates, and assumes 1:1 texels to pixels
// Appropriate if nearest-neighbor sampling is used
static void draw_string_integer(int x, int y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0, cd->t0); glVertex2i(x + cd->x0, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t0); glVertex2i(x + cd->x1, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t1); glVertex2i(x + cd->x1, y + cd->y1);
        glTexCoord2f(cd->s0, cd->t1); glVertex2i(x + cd->x0, y + cd->y1);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance_int;
    }
    glEnd();
}

// This function positions characters on float coordinates, and doesn't require 1:1 texels to pixels
// Appropriate if bilinear filtering is used
static void draw_string_float(float x, float y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0f, cd->t0f); glVertex2f(x + cd->x0f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t0f); glVertex2f(x + cd->x1f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t1f); glVertex2f(x + cd->x1f, y + cd->y1f);
        glTexCoord2f(cd->s0f, cd->t1f); glVertex2f(x + cd->x0f, y + cd->y1f);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance;
    }
    glEnd();
}
*/

#ifndef STB_FONTCHAR__TYPEDEF
#define STB_FONTCHAR__TYPEDEF
typedef struct
{
    // coordinates if using integer positioning
    float s0,t0,s1,t1;
    signed short x0,y0,x1,y1;
    int   advance_int;
    // coordinates if using floating positioning
    float s0f,t0f,s1f,t1f;
    float x0f,y0f,x1f,y1f;
    float advance;
} stb_fontchar;
#endif

#define STB_FONT_arial_bold_9_latin_ext_BITMAP_WIDTH         256
#define STB_FONT_arial_bold_9_latin_ext_BITMAP_HEIGHT         74
#define STB_FONT_arial_bold_9_latin_ext_BITMAP_HEIGHT_POW2   128

#define STB_FONT_arial_bold_9_latin_ext_FIRST_CHAR            32
#define STB_FONT_arial_bold_9_latin_ext_NUM_CHARS            560

#define STB_FONT_arial_bold_9_latin_ext_LINE_SPACING           6

static unsigned int stb__arial_bold_9_latin_ext_pixels[]={
    0x0300a004,0x00054066,0x44402011,0x01100880,0x26026202,0x02201100,
    0x00022200,0x0a806011,0x00110088,0x4c044020,0x12777641,0x02882811,
    0x0c042051,0x28804400,0x80a60750,0x7107503a,0x21620ea0,0x41ea81a8,
    0x881b02b8,0x441aa829,0x901bb02a,0x9039b309,0x9059b309,0x2ea07209,
    0xdd881c84,0x5c0edd40,0xcc883902,0x8827e620,0x79036e2d,0x32a09303,
    0x774c24c1,0xbc825d40,0x2616ed41,0x6ed45bdc,0x2a16e4c2,0x93b05703,
    0xb06c4654,0x6c465493,0x8ca92760,0xa92760d8,0x36a0d88c,0x20d92a2d,
    0x6ed42dda,0x2616ed42,0x0d92a2dc,0xb25433b2,0x950d92a1,0x85b9306c,
    0x37260cec,0x67643c42,0x6ecc5fb0,0x261eecc3,0x8454c3dd,0xb254364a,
    0x57cc4981,0xf55f12e9,0x974d7cc9,0x260faaf8,0x10889b03,0x110f96a1,
    0x21f2d422,0xf96a1108,0x2d422110,0x3a6be61f,0xf987cb52,0x35f32e9a,
    0x3a6be65d,0x21f55f12,0x4ed43e5a,0xa87cb53c,0x1f2d43e5,0x543eabe2,
    0x55f13c9d,0x36a3c41f,0x7c4b53c9,0x35f12e9a,0x3a6be25d,0x2a5d9d32,
    0x1f2d43e5,0xb72dc6a8,0xb7366d6e,0xd505aadc,0x5c7f98bb,0x0f96a5b4,
    0xf2d4b697,0x5a96d2e1,0x52da5c3e,0x2e5b87cb,0x5b87cb55,0x2b72dd6e,
    0x82d56e5b,0x6fc43e5a,0xb50f96a2,0x43e5a87c,0x45bf105a,0xf11e205a,
    0x0b72d45b,0xb82dc16e,0x0f96a5b4,0x1aa07cb5,0xccbb5497,0x6a92e6aa,
    0x23ed40b7,0x6d2e2ebc,0x4b87cb52,0x70f96a5b,0x1f2d4b69,0x25a96d2e,
    0xab54970f,0xd525c3e5,0x4976a92e,0x96a0b76a,0x557ae20f,0x1f2d43e5,
    0x0b70f96a,0x05baf5c4,0x57ae21e2,0x3b2b73f9,0x5d7b2b75,0x7532bd95,
    0x5a87cb52,0xf88d503e,0x27f33d88,0x3623e23d,0x21f11f13,0x657c79cc,
    0x6a9756a5,0x9756a1f1,0x56a1f16a,0x43e2d52e,0x45aa5d5a,0x7b11f10f,
    0xf887c5aa,0x11f13d88,0x3623e27b,0x21f11f13,0x56e1f16a,0x43e2d56a,
    0x5aa1f16a,0xf11f10f8,0xf8b556e1,0x2e240f88,0x3f324d55,0x5b8fcd6e,
    0x7456e3f3,0x3e2d52ed,0x643e2d50,0xcfeb85ba,0x819ddb50,0x3ae0cfeb,
    0xa9f7aa3f,0xbf10fcce,0x127fec5d,0x7fec5dbf,0xd8bb7e24,0x3b7e24ff,
    0xd713ff62,0x27fec19f,0xeb833fae,0x33fae0cf,0xfb0ffae0,0x17fec49f,
    0xffd89ffb,0x2e27fec4,0x3ff623fe,0x1a0ffae2,0x22c5ffb1,0x3ae2efeb,
    0x3bfae2ef,0x6c3d3932,0x27fec4ff,0x04003ff5,0x36000000,0x00001322,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00040030,0x01e5c000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x02220000,0x03110222,0x13000226,0x175c0220,
    0x80000111,0x501b2541,0xdb822203,0x11101500,0x81110280,0x04403031,
    0xb0606764,0x5001981d,0x0004445d,0x5b87bdd5,0xc98e6044,0x546e002d,
    0x15ec3c83,0x0ee07362,0x177441d4,0x882c41dc,0x5904c83e,0x8d01910f,
    0x97303e5a,0x98989320,0x6d425cc0,0x6d40aa01,0x0e416441,0x64ed40d8,
    0x41f0f323,0x543a84c8,0x2e07660d,0x267aa0db,0x81b07a1f,0x1f55f149,
    0x4d106654,0xb53c40cb,0x21b2545b,0xdda8364a,0x9516ed42,0x3eeeb86c,
    0x41ec1fe4,0x2221d13c,0x7ddd708a,0x23b0f96a,0xb254573d,0xd13c83e7,
    0x213bbb21,0xd73eeeec,0x3bbaa7dd,0x64bddd55,0x37e21d13,0xa87c0ea2,
    0x54398364,0x20f7baa4,0x7dd7543d,0x6f7543e0,0xa82d5263,0xf7254365,
    0xaf9bc1db,0x87cb52e9,0x57cc3e5a,0xd35f32e9,0x310f96a5,0x986985f5,
    0x4d8f987f,0xa9896d2e,0xc87cb52f,0x5c3d6f9b,0xf316b6a5,0x4fcc49b1,
    0x4cedf4c0,0x2a5f5310,0x33d5099e,0x226c7cc1,0x11955eb8,0x8fcb50f8,
    0xa92a5dea,0x3e61f99e,0x70fef547,0x8fccf54b,0x3ea0b749,0x5b8ee1d3,
    0x72de6479,0xb50f96ab,0x56e5b87c,0xf2d56e5b,0x2541f441,0x764175e4,
    0x222da5c6,0x73c5a63e,0xb8f1f97b,0x76416f45,0x77b07886,0x1f44399d,
    0x3aa599d5,0x237642cc,0x33aad55b,0x57543e1f,0xa9f6a1fa,0x83eebaa4,
    0x656a2ebc,0xbaea9aa5,0x23e2930f,0xd1fd50f8,0x596b8ee1,0x2d525dec,
    0xf2d43e5a,0x976a92e1,0x83e5ab54,0x5f07905d,0xb50be0b9,0xfd85d8ba,
    0x36b7a63f,0x1f22dc6c,0x887882f8,0x20aaecbf,0x8d57545d,0x2f81aaea,
    0x5a97fec4,0xaea87c5b,0x4f3991fa,0x07f7aa4a,0xd2d4b95f,0xfdea87c7,
    0x3feb9261,0x543b6f2a,0x783bbae4,0x2a7b11f1,0x45aa1f16,0x7b11f10f,
    0x54f623e2,0x03ae1f16,0x99d507a6,0xf883d01f,0x201d72ed,0xfb8ff80c,
    0x09b12dc4,0x643c40f4,0x0eb85dcd,0x202d42d4,0xa547701e,0x96a1f12d,
    0x54fbd51f,0xa972b50d,0x1540fcce,0x4b95a974,0x52a24c49,0x84b9a0fe,
    0x833fae79,0x7fec4ffd,0x7067f5c4,0x7fec19fd,0xc97fffa4,0x21322d84,
    0xfffd001e,0xb6c0c98b,0x952dc2f8,0x3c40f401,0x7ffdc3e2,0x2abfffd4,
    0xfff57fff,0x37103d0f,0x4972da54,0x93007e5a,0x5b3e96a5,0x50371264,
    0x513e96a9,0x552a15c4,0x414c2a0f,0x0000002b,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x1b055b10,0x403d8118,0x01110a00,0x3986cb50,0x40eec044,
    0x6cc0cddb,0x030372ee,0x931d4044,0x2a002060,0x43b14a83,0x51eecc5c,
    0x08088b37,0x12a3a844,0x00226022,0x35706044,0x80000888,0x105d4000,
    0x44222221,0x81fe60cb,0xd885503c,0xfa8f7443,0x391261d3,0x56429ea8,
    0x67fc1b70,0x0590b30f,0x5a92a072,0x222c44a8,0xa86973bd,0x10cc3e8d,
    0x2625d37f,0xd910ec28,0x2e18a543,0x1dc2ecc5,0x4776132e,0x1044c43a,
    0x40eea85b,0x931d46ac,0x3d988b7b,0x507cf61f,0xb02ebc89,0x2a5ee887,
    0x2a4a8365,0x2930e8fe,0x77cc365a,0x3b72eaa0,0xf1eff63a,0x20f607b0,
    0x8ea16a4a,0x65c95049,0x217baa4c,0x65416e4b,0x2bddd569,0x552a3ccb,
    0x20f616e4,0x4a83d84a,0x2ece992a,0x3d8bddd5,0x952f7754,0x713eabe2,
    0x6d4b5b59,0x2be2dc5a,0x5c7f985c,0x74fea1bc,0xdbca96e0,0xe9fd420e,
    0x464f75b0,0x64471956,0xff30f47b,0x4950ff30,0x16a4a85a,0x41ff72dc,
    0x25c1fcfa,0x6557b2b7,0x2133d569,0x4aadc4e9,0x70ff316e,0x5b87f98b,
    0x25b4b96e,0x3e6099ea,0x704cf547,0x2366d6eb,0xde85bd4b,0x99d52dc2,
    0x22ebc81f,0x3faa3adb,0x4a96e0e8,0x754621fd,0xd5f50e8f,0x65e5a721,
    0x83a3ddc0,0x75e42ebc,0x50b52542,0x25b82d49,0x65aa3ceb,0x23f125c6,
    0x2ad3955c,0x9ba62cce,0x22dc955b,0x22dc2ebc,0x72dc2ebc,0xd52ea5cb,
    0x175e4599,0xadc599d5,0x5c6aaccb,0x70f90f94,0xf89916cb,0x93ba25ca,
    0x2e0edbca,0x987d52a5,0x41db7954,0x372aa5e9,0x47bb81de,0x3e2e57c7,
    0xf52545ca,0x5a92a9ff,0x7c65cb70,0xb8fe2b50,0xa977f544,0x355d569c,
    0x55b9aeaa,0x32be2dc9,0x32be2dc5,0x44b72dc5,0x55d52edd,0xd52e57c3,
    0xf9adc355,0xd8cb87b3,0x2dc26c44,0x66754170,0x752a0e0f,0x0aa16e0f,
    0x87f52a93,0x85e46ac9,0x33ddc1d9,0x87e67549,0x260fccea,0x49506443,
    0xc88b705a,0x26c42a80,0xb55c82cc,0xadc7fd10,0xcea86e1b,0xea96e0fc,
    0xb96e0fcc,0x547a6e65,0x0fccea85,0x6d56e0b5,0x33620cee,0x406540ca,
    0x6c32605b,0x4a819322,0x222dc1f5,0x54a9441b,0x540e5c1f,0x49980bcb,
    0x5322d82a,0x42b9322d,0xfa92a0b9,0x7516e4ff,0x0c883710,0x51c882b8,
    0x5c28ffff,0x43261915,0x25b9322d,0x25b9322d,0xf51e5c5b,0x4c8b6fff,
    0xadcffff5,0x000e4400,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0xd0000000,0x225eeea8,0x3b303008,
    0x731cc150,0x9c986dd4,0x4dc24c3d,0x2ee05dc5,0x36a0e642,0x64c3ddcb,
    0x55c07322,0xcb811114,0xa8498082,0x2a06dc2a,0x4c0d80cd,0x06248adc,
    0x1bb81111,0x07321554,0x22cb8597,0xb2454188,0xc81d9891,0x2f5c2541,
    0x4f542262,0x2a076a09,0x204c4c5c,0x14a96a1d,0x2bea1313,0xd30620fa,
    0x220c41d5,0x82620989,0x099fc9e9,0x20511edc,0xf9d54ad8,0x37a61c41,
    0x26221443,0xf9826608,0x221447ab,0xd35be9af,0x07e754bb,0x2a60a051,
    0x13105440,0xdb97aa13,0x44263148,0x13110a8a,0x54226221,0xd9d35eee,
    0x54b33aa5,0x3baa1dee,0x25d9d35e,0x4b55eeea,0x54b6954a,0x1ef4cba5,
    0x3a63d9f7,0x996d2a3d,0x7c52e3de,0x5d9d31bc,0xce98f7a6,0x4b6b50af,
    0x2f726de8,0x4a9b7a26,0x99b7a25b,0xbd11eaaa,0x43f52d4d,0x96d6a7ca,
    0x37a25de9,0x44bbd30e,0x36950ede,0x0afd8b52,0xda54b695,0xa54b6952,
    0x2133d52d,0x2baa5b4b,0x1f73d51a,0xa5c267aa,0x2133d52d,0xda552a5a,
    0xdc96cb52,0x4333aa6b,0x6d2a6bdc,0x264d7b92,0x6cee377f,0x9dcd7b92,
    0xb96d2a2d,0x71ce6413,0x25b4a827,0x6675c13b,0x4b82772e,0x279cc96a,
    0x3e545b4a,0x7ca8f299,0xb4a9e532,0xa8b512a5,0x96d2a5b4,0x6d2a5b4a,
    0x2e599d52,0x2a16a5d4,0x66754ba5,0x754ba972,0x73bb52cc,0x5a9752a9,
    0x91ce647a,0x273239db,0xcc9752a3,0x1ea3a639,0x9cc9752e,0x951752e3,
    0x223a5cb6,0x51d2e4ed,0x23a5cba9,0x971f88e8,0x3d88f88e,0xb4a9f7aa,
    0x4b9e7325,0xb9e73259,0x9752a594,0x52a2d44a,0x54ba952e,0x9752a5d4,
    0xbb11aaea,0x5fffea5d,0x5754ba5a,0x25dbb11a,0x5b51aaea,0x3b7e23df,
    0x44df1b52,0x1166e4ed,0x76fc49db,0xfc89db12,0xdd15fffc,0x893b625d,
    0x20c82eee,0x21c44ed8,0x37e24ed8,0xb89db12e,0x13b623fe,0x12019dd7,
    0x3ef547a2,0x6f54bdd1,0xf897ba27,0x4c1912ed,0x4bb7e22f,0xbf12edf8,
    0x4bb7e25d,0x1e9b985a,0x87c56a48,0x1e9b985a,0x000000b5,0x00000000,
    0xa8000000,0x000dc003,0x00000000,0x0012a15c,0x0ea00000,0x20000000,
    0x32e7fffa,0x3fea9503,0x9fffea2f,0x3ffea3cb,0x00000007,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x55c00000,0x20d4b265,0x21ddc0cc,0x4c1c81d9,0x2c880884,0x06dc26d4,
    0x55b0360a,0x40d80db8,0x1088302b,0x2b624ec1,0x36e15e43,0x415c0d80,
    0x833222dc,0x21da8108,0xcc8eb639,0x1b80e644,0x82220444,0x8165c2cb,
    0x1cc3902c,0x982065c4,0x42d66e09,0x4c098829,0xa8502809,0x2264c4dd,
    0x04d40e9e,0x441441b7,0x0c409980,0x9b7a2144,0x40c45b4a,0x2054c098,
    0x441440aa,0x952d6d43,0x31e9dcb7,0x3f2d493d,0x730aba29,0x6744b220,
    0x45dbd12e,0x044c4438,0x25013331,0xbcb81950,0x76f45a24,0xa8379b50,
    0x3b7a24dd,0x221dbd10,0xdbd10ede,0xe8873ea1,0x513ee1fd,0xa97ec9bb,
    0x8f7a64dd,0x37a63de9,0x3b8f7a63,0xd12da541,0x977a61db,0x37a65de9,
    0xe9977a65,0x10f32a5d,0x71e9dc5b,0x7f2d439b,0xe98b7e61,0x4bb3a65d,
    0x6d2e5b3b,0x2a1dbd12,0x3f7a65b4,0x3f9d11ed,0x5643b3aa,0x794c9c79,
    0xf51c9d84,0x93ca6439,0x3ca64f29,0x5cc4f299,0xe99e52e7,0x39f50cdd,
    0x1cfa8764,0xbdc9af72,0xdc9af726,0xb51d2e6b,0x23ca64ba,0x23e547ca,
    0x23e547ca,0x3ab2a7ca,0xf4b96e20,0x5a9a76e3,0x478a883e,0x96cee7ca,
    0x752a5d4b,0xa54f2992,0x32ff2a2d,0x2a7b7774,0x1f7a6795,0x2e1652eb,
    0xf73149c9,0x2972ca5c,0x5cb2972c,0x937a6594,0x752e5b4a,0xeb9ee627,
    0x664f7310,0xc8e73239,0x8e73239c,0x37e24ed8,0x64b2972e,0x9e73279c,
    0x273279cc,0x4a9e7327,0xb9e2aa79,0x9eb31eee,0x260f99e9,0x9e7321f2,
    0x37625d4b,0x25ddd12d,0x752a594b,0x555f3972,0xad4b2bae,0x44b3332c,
    0x2b0bdd16,0x49bd33cb,0x3ba25ee8,0xe897ba25,0xb10e445e,0x6f76c4bd,
    0x7cc9bd32,0x6c49bd33,0x893b624e,0x13b624ed,0xe8920391,0xa9f7aa5e,
    0x9f7aa7de,0x37aa7dea,0x447b32a7,0x6c0ee3ee,0x21f7643e,0x37aa3ee8,
    0x4cbbba27,0x12c81e9b,0x76fc4bdd,0x3ddbbd52,0xeda97baa,0x443dd30d,
    0x00041007,0x3a800000,0x00000000,0x75000000,0x00002540,0x80000000,
    0x0000002a,0x20797000,0x1000001a,0x01220000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x32000000,
    0x8e60821d,0x0111120d,0x16e419d9,0x5bb5032e,0x332a0570,0x37264982,
    0xa83dd982,0x654182cc,0x152c4330,0x208152c4,0x20c82dc9,0x92e61262,
    0x1ec43639,0x2303bbb3,0x2e930620,0x37910931,0x1cc885dc,0x72ddddc8,
    0x82631039,0x9d41c839,0x7cb259ca,0x1907cb50,0xda876f54,0x4b1b53c8,
    0x2be64ad9,0x5426c2e9,0xb4c2aaa9,0x222e9af8,0x2ea2e9af,0x6c3c2aab,
    0x30e59891,0xaf9661cb,0x1b7340f9,0xd932a16a,0x8b54fddf,0xd10fb9da,
    0x2a2cc3f9,0x10b66555,0x0cc18831,0x84cedf4c,0x37a60adc,0x44951edf,
    0x226a20a8,0x2b663de8,0x2e0f96a5,0xf89e56a2,0x770b722d,0x4b52dcd1,
    0x9a9c87f9,0x25ab4c48,0x64096e5a,0x22438caa,0x7580aacb,0xa802eb01,
    0x2fd92205,0x20ca8ab5,0x950fbbea,0x2e3d1dc8,0xfffb3dbb,0x7f3156a1,
    0x544a8950,0xbbeabc84,0x541f9d50,0x1d54cbfc,0x6dc3f3aa,0x745bdacf,
    0x20f96a2d,0x1165aa49,0x70ff2bd7,0xb525cf17,0x2b216de4,0xbb4c4889,
    0xf95b9a64,0x23a6564b,0x8327084c,0x221cab88,0x4b841938,0x2a5a8ea0,
    0xd512a1b5,0xb12a1f77,0x575cba7d,0x541b512c,0x89505d85,0x3e22544a,
    0xb50bbeca,0x57ce5cb6,0xdad49b2a,0x3cee3aa2,0x3e2d31f2,0x1bdd52c0,
    0x85ab552e,0x23e258ca,0x172be3d8,0x32719717,0xbb1d15a9,0x25b8fcc9,
    0xb539a8ab,0x036a2e02,0x2a706e27,0x23a2d30d,0x5a8720f8,0xb512a16a,
    0xad44a87c,0x8bdd50f8,0x2e16a0b9,0x44a89505,0x2767644a,0xbd52da54,
    0xa92e3ddb,0x443aa5b4,0x213223ee,0x2a583ffd,0xb2ffd884,0x3b621ffd,
    0xa86775c2,0x5e40fcce,0xb87faa3b,0x7f5c4ffe,0x51dde42e,0xb9c45d3b,
    0x0edca62d,0x244b6e53,0x4c587dd7,0x29fff53f,0x21f2d44a,0x177fd44a,
    0x43fff601,0xff34fffa,0x12a254bf,0xfa87c495,0x0b6954ff,0x36952540,
    0x540dffd2,0x14c0000c,0xd8000000,0x00000f22,0x65400005,0x44102042,
    0x00010208,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0xd8e40000,0x2cb82e40,0x4111115c,0x16211108,0x15c0c460,0x86641991,
    0xb92e44ca,0x044227bb,0x0883bbb3,0x21623bb8,0x1cc18111,0x399cc0e6,
    0x1cce6390,0x89b15644,0x0db8ecc0,0x0c41260c,0x1d8a4d22,0x0002b873,
    0x2b8f776a,0xa9edc1b1,0x44cc65ad,0xa882a220,0x54111109,0x886cd9b4,
    0x33bb7a20,0xaa886a25,0x41a88a60,0x13f31099,0x3b516d2a,0x9376a1f7,
    0x88661898,0xbd15aede,0x9d512a1d,0x34aa5419,0x32a33288,0x1d504408,
    0x4fa8f7a6,0x9b7a21fd,0x25de985a,0x47d1b569,0x260fe65a,0x9881771c,
    0x323e62fa,0x26b636a4,0xd73b0bef,0x70fcea9e,0xa54029fb,0x377263bd,
    0x7deed2e6,0x7edcbd50,0x45ea92a4,0xda54784a,0xa8f47722,0x3f3aa1cf,
    0xdca64950,0x654f2993,0x4b95b509,0xa899954a,0x3f3aa954,0x92fc92a0,
    0x476d4d7b,0xa82770fd,0xb44f9505,0xb2d45eea,0x116f4c79,0x83e819d7,
    0x73d106ec,0x372a19db,0x16d6a5ae,0xa54021d5,0x54f3c83e,0x2a173bb4,
    0x92a0ea85,0x3664a85a,0x8ba950df,0x2625d3ed,0xa96d6a7b,0x971e52e4,
    0xa8e654b2,0x552a6a8d,0x2954a87f,0x32545b5a,0x951ce64b,0x52e1f77d,
    0x273216a3,0x7e7d5627,0x25ddd6a0,0xfc9817d7,0x02f81761,0x47bfb25b,
    0x2a2ebee8,0x083aa5b4,0x905d9b10,0xddbfb1e5,0x03aa2549,0x25425495,
    0x8bb7e23c,0x3a61f15a,0xa96d2a4d,0xd117b624,0x3ea254bd,0x6d52a2ef,
    0x54aa543c,0x264a8b69,0xca93b625,0xdb10f9fc,0x6f542d49,0x4b95a9c7,
    0x43ffdb5a,0x85d71fb8,0x480f406b,0x7ce742cc,0xfe96d2a0,0x0031136f,
    0xa800f2c8,0x9537ff44,0x3c254254,0x05dff500,0x254b6950,0xb512a000,
    0x7c6552a0,0x4aa552a0,0x0b32545b,0x03ef5950,0x809fff50,0x4fe2b568,
    0x2101dc5a,0x0bfffd00,0x0001e03d,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x4d2a0000,0x2b9ec724,
    0xbb90d872,0xb30ee47b,0x261b07bb,0xd8e61ddd,0xcb864b30,0x5bbb30cc,
    0x79137766,0x261ddd98,0x26622ddd,0x99771260,0x10886221,0x84431111,
    0x2231ca21,0x22110410,0x20c22088,0x33311620,0x065472a1,0x54698959,
    0x2133312c,0xda840cb9,0x5d4aeb11,0x4441711c,0x22f22eae,0x9a5c3d6f,
    0x5427e626,0x2676a69c,0x2a1fd10f,0xf96a6b9d,0x4c3a7f50,0x2676a6ba,
    0x4c133b50,0x7dced47f,0x5cf33b50,0x457534fd,0x97aa6bda,0xdbf9d74a,
    0xe896faa5,0x3dae765e,0x67543e59,0x4499950f,0x2e15d536,0x43911eee,
    0xd83bb31d,0x75d32a2e,0xa96f62fe,0x3bacd6b4,0x4fee5b97,0xca8bf54a,
    0xbc478fca,0x4d30783c,0x130faaea,0x9ae36a1d,0xd50fbbea,0x20d81d1f,
    0x2faa2aea,0xa8b6f22b,0x65f547a5,0xccb87545,0x54d3950c,0x1f4ba545,
    0x3607ec97,0x2bb72a2f,0x5a96b665,0x403fea5b,0x7731cfdb,0x65c76e17,
    0x74459b32,0x32133268,0x73892fa2,0x1108ac5b,0x2a0aaa11,0x6cef445f,
    0x81eae86c,0x3aa1f887,0xf50e81fd,0x5df543bd,0x1d97950f,0x2efaa2cc,
    0x7c377d50,0x2e96a5ca,0x2a1d97d5,0x36e24c0e,0x29512a6e,0x74951f4b,
    0x89a3262f,0x7742ebee,0xea96d2a1,0xa8d1043c,0x41111bbb,0x21124dc0,
    0x2a635001,0x0010020c,0x42fae880,0xd709f57f,0x83d11e0d,0x21d0b95a,
    0x87cb505a,0x15c1fd4a,0x2a16a16a,0x2b50fcce,0x974b50f8,0x00626ffe,
    0xa5d2a254,0xd3994a8f,0x1f39d001,0x2da546b8,0x1a21f195,0x00000001,
    0x00000000,0x07d57200,0x220be2bb,0xffc8f03f,0x742e96a7,0xf96a0b50,
    0xd83e6950,0x7fd42d41,0xa9e45b7f,0x3fea2eff,0x0000005f,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x26000000,0xb8c4362c,
    0x4ea1911c,0x3157149e,0x99044444,0x00000599,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x20000000,0x5398248b,0x0230ea37,
    0x6643db77,0x000001cc,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000b88,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,
};

static signed short stb__arial_bold_9_latin_ext_x[560]={ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,0,0,0,0,0,0,0,0,
-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,
0,0,0,-1,0,0,0,0,-1,-1,0,0,0,0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,-1,0,0,0,0,0,-1,0,-1,-1,-1,0,0,0,0,0,0,0,0,0,0,0,0,-1,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,-1,0,-1,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,-1,-1,-1,-1,-1,-1,0,0,0,0,0,0,0,-1,0,0,0,0,0,0,
-1,0,0,0,0,0,0,0,0,0,0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,0,
-1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,-1,1,1,1,
1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,-1,-1,0,
0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,0,0,-1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1, };
static signed short stb__arial_bold_9_latin_ext_y[560]={ 7,1,1,1,0,1,1,1,1,1,1,2,5,4,
5,1,1,1,1,1,1,1,1,1,1,1,2,2,1,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,7,1,2,1,2,1,2,1,2,1,1,
1,1,1,2,2,2,2,2,2,2,1,2,2,2,2,2,2,1,1,1,3,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,7,2,1,1,2,1,
1,1,1,1,1,3,2,4,1,0,1,1,1,1,1,2,1,3,7,1,1,3,1,1,1,2,-1,-1,-1,-1,
-1,0,1,1,-1,-1,-1,-1,-1,-1,-1,-1,1,-1,-1,-1,-1,-1,-1,2,0,-1,-1,-1,-1,-1,1,1,1,1,
1,1,1,0,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,1,1,1,1,1,1,1,
-1,1,-1,1,1,2,-1,1,-1,1,-1,1,-1,1,-1,1,1,1,-1,1,-1,1,-1,1,1,2,-1,1,-1,1,
-1,1,-1,1,1,0,-1,-1,1,1,-1,1,-1,1,-1,1,1,1,-1,2,1,1,-1,1,1,1,2,-1,-1,1,
1,1,1,1,1,1,1,-1,1,1,2,-1,1,1,1,2,-1,1,-1,1,-1,1,1,2,-1,1,1,2,-1,1,
-1,1,-1,1,1,2,-1,1,1,1,-1,1,1,1,-1,1,-1,1,-1,1,-1,0,-1,1,1,2,-1,1,-1,1,
-1,-1,1,-1,1,-1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1,1,-1,1,-1,
1,-1,1,-1,-1,-1,-1,-1,-1,-1,-1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,-2,-1,-1,1,-1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1, };
static unsigned short stb__arial_bold_9_latin_ext_w[560]={ 0,2,4,5,5,7,6,2,3,3,3,5,2,3,
2,4,5,4,5,5,5,5,5,5,5,5,2,2,5,5,5,5,8,6,6,6,6,5,5,6,6,2,4,6,
5,7,6,6,6,7,6,5,5,6,7,8,6,7,5,3,4,3,5,6,2,5,5,5,5,5,3,5,5,2,
3,5,2,7,5,5,5,5,4,5,3,5,5,7,5,5,4,3,2,3,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,2,5,5,5,5,
2,5,3,7,3,5,5,3,7,6,3,5,3,3,3,5,6,2,3,2,3,5,7,7,7,5,6,6,6,6,
6,6,9,6,5,5,5,5,3,3,4,4,7,6,6,6,6,6,6,5,7,6,6,6,6,7,6,5,5,5,
5,5,5,5,7,5,5,5,5,5,3,3,4,4,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
6,5,6,5,7,5,6,5,6,5,6,5,6,5,6,6,7,5,5,5,5,5,5,5,5,5,5,5,6,5,
6,5,6,5,6,5,6,5,6,5,4,4,4,4,4,4,3,3,2,2,6,4,5,4,6,5,5,5,3,5,
4,5,4,5,4,5,3,6,5,6,5,6,5,7,6,5,6,5,6,5,6,5,8,8,6,4,6,4,6,4,
5,5,5,5,5,5,5,5,5,3,5,4,5,3,6,5,6,5,6,5,6,5,6,5,6,5,8,7,7,5,
7,5,4,5,4,5,4,3,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,6,5,5,6,5,5,5,
5,5,5,5,5,5,5,5,5,5,7,6,5,5,5,5,5,5,5,5,5,5,5,5,5,7,6,5,5,5,
5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,6,5,4,4,6,
5,6,5,6,5,6,5,6,5,6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5,5,5,5,5,6,5,9,7,7,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5, };
static unsigned short stb__arial_bold_9_latin_ext_h[560]={ 0,6,3,7,8,7,7,3,8,8,3,5,4,2,
2,7,7,6,6,7,6,7,7,6,7,7,5,7,6,4,6,6,8,6,6,7,6,6,6,7,6,6,7,6,
6,6,6,7,6,7,6,7,6,7,6,6,6,6,6,8,7,8,4,2,2,6,7,6,7,6,6,7,6,6,
8,6,6,5,5,6,7,7,5,6,7,6,5,5,5,7,5,8,8,8,2,6,6,6,6,6,6,6,6,6,
6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,0,7,8,7,5,6,
8,8,2,7,4,4,4,2,7,1,3,6,4,4,2,7,8,2,2,4,4,4,7,7,7,7,8,8,8,8,
8,7,6,8,8,8,8,8,8,8,8,8,6,8,9,9,9,9,9,5,8,9,9,9,9,8,6,7,7,7,
7,7,7,8,6,7,7,7,7,7,6,6,6,6,7,6,7,7,7,7,7,5,6,7,7,7,7,8,8,8,
8,7,8,7,8,7,9,7,9,7,9,7,9,7,8,7,6,7,8,7,8,7,8,7,8,7,8,7,9,8,
9,8,9,8,8,9,8,8,6,6,8,6,8,6,8,6,8,8,8,5,7,8,9,8,8,8,5,8,8,8,
8,6,6,6,6,6,6,8,6,8,7,8,6,6,7,7,9,7,9,7,9,7,7,6,8,6,8,7,8,6,
9,7,9,7,8,7,9,7,9,9,8,7,6,7,9,7,9,7,9,7,9,8,9,7,8,7,8,6,8,8,
8,8,6,8,6,8,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,7,6,6,8,6,6,6,
6,6,6,6,6,6,6,6,6,6,7,6,6,6,6,6,6,6,6,6,6,6,6,6,6,7,6,6,6,6,
6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,8,7,8,6,9,
7,9,7,9,9,9,9,9,9,9,9,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,
6,6,6,6,6,6,6,6,6,6,9,9,8,7,9,7,6,6,6,6,6,6,6,6,6,6,6,6,6,6,
6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,
6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,
6,6,6,6,6,6, };
static unsigned short stb__arial_bold_9_latin_ext_s[560]={ 254,205,244,70,170,7,57,241,242,90,249,
183,231,12,253,139,43,44,31,158,218,184,170,70,1,246,180,129,224,189,230,
250,74,88,102,132,95,82,76,84,56,215,71,208,193,179,63,49,49,76,37,
31,25,13,17,8,1,242,236,189,20,172,209,33,20,199,240,187,196,173,169,
202,158,155,252,145,142,134,168,124,25,208,126,101,144,87,162,154,142,7,109,
214,225,252,27,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,
26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,254,252,33,
37,120,1,58,68,23,63,215,203,219,12,91,40,1,184,195,199,5,164,83,
9,16,238,234,225,121,113,105,99,94,101,187,199,200,56,217,228,146,164,26,
234,240,211,206,129,93,235,1,16,95,109,123,148,244,137,150,157,164,152,135,
152,146,140,134,128,122,183,233,104,98,92,86,80,151,113,76,164,51,107,39,
33,27,21,116,114,178,249,243,237,231,7,246,1,227,203,26,191,18,179,171,
165,184,152,23,140,130,128,19,115,170,103,1,88,140,76,38,64,13,134,221,
109,207,32,221,215,214,7,152,228,176,166,159,227,13,202,46,212,194,207,183,
179,176,131,44,159,248,147,140,134,174,123,119,113,108,190,154,148,130,196,241,
61,245,51,122,39,15,39,57,185,29,209,22,197,1,1,94,47,218,56,207,
221,193,71,178,74,144,64,160,45,197,15,191,203,118,226,81,70,241,82,234,
215,15,146,36,71,8,51,83,110,90,7,110,104,63,43,251,77,21,134,61,
166,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,158,26,26,49,
26,26,26,26,26,26,26,26,26,26,26,26,26,171,117,26,26,26,26,26,
26,26,26,26,26,26,26,26,176,32,26,26,26,26,26,26,26,26,26,26,
26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,56,190,
99,66,116,214,102,220,88,82,75,69,62,56,49,43,26,26,26,26,26,26,
26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,
26,26,26,36,30,124,226,8,234,26,26,26,26,26,26,26,26,26,26,26,
26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,
26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,
26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,
26,26,26,26,26,26,26,26,26, };
static unsigned short stb__arial_bold_9_latin_ext_t[560]={ 1,55,62,30,21,39,39,62,11,21,62,
62,62,69,62,47,47,62,62,39,55,39,39,62,47,39,62,47,55,62,55,
55,21,62,62,47,62,62,62,47,62,55,47,55,55,55,62,47,62,47,62,
47,62,47,62,62,62,55,55,11,47,11,62,69,69,55,39,55,39,55,55,
39,55,55,21,55,55,62,62,55,47,39,62,55,47,55,62,62,62,47,62,
11,11,11,69,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,
55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,1,39,21,
47,62,55,21,21,69,47,62,62,62,69,47,69,69,47,62,62,69,39,21,
69,69,62,62,62,47,47,47,47,21,21,21,21,11,47,47,11,11,21,30,
21,21,21,21,21,55,11,1,1,1,1,1,62,21,1,1,1,1,11,55,
39,39,39,39,39,39,11,47,39,39,39,39,39,55,55,55,55,39,55,39,
39,39,39,39,62,47,30,30,30,30,21,11,21,21,30,21,30,21,30,1,
30,1,30,1,30,1,30,30,30,47,30,30,30,11,30,30,30,30,30,21,
30,1,30,1,21,1,30,21,1,11,11,47,47,21,47,21,47,21,47,21,
21,21,62,30,21,1,21,21,21,62,21,21,21,21,47,47,47,55,47,47,
21,47,21,30,21,55,55,30,30,11,30,11,30,11,39,30,55,11,55,11,
30,11,55,1,39,1,39,11,39,1,39,1,1,11,30,55,39,1,30,1,
30,11,30,11,11,11,30,11,39,11,55,11,11,11,11,47,11,55,11,55,
47,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,30,55,55,11,
55,55,55,55,55,55,55,55,55,55,55,55,55,30,55,55,55,55,55,55,
55,55,55,55,55,55,55,55,39,55,55,55,55,55,55,55,55,55,55,55,
55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,11,39,
11,55,1,39,1,39,1,1,1,1,1,1,1,1,55,55,55,55,55,55,
55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,
55,55,55,1,1,11,39,1,39,55,55,55,55,55,55,55,55,55,55,55,
55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,
55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,
55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,
55,55,55,55,55,55,55,55,55, };
static unsigned short stb__arial_bold_9_latin_ext_a[560]={ 36,43,61,72,72,115,93,31,
43,43,50,75,36,43,36,36,72,72,72,72,72,72,72,72,
72,72,43,43,75,75,75,79,126,93,93,93,93,86,79,100,
93,36,72,93,79,107,93,100,86,100,93,86,79,93,86,122,
86,86,79,43,36,43,75,72,43,72,79,72,79,72,43,79,
79,36,36,72,36,115,79,79,79,79,50,72,43,79,72,100,
72,72,64,50,36,50,75,97,97,97,97,97,97,97,97,97,
97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,
97,97,97,97,97,97,97,97,36,43,72,72,72,72,36,72,
43,95,48,72,75,43,95,71,52,71,43,43,43,74,72,36,
43,43,47,72,107,107,107,79,93,93,93,93,93,93,129,93,
86,86,86,86,36,36,36,36,93,93,100,100,100,100,100,75,
100,93,93,93,93,86,86,79,72,72,72,72,72,72,115,72,
72,72,72,72,36,36,36,36,79,79,79,79,79,79,79,71,
79,79,79,79,79,72,79,72,93,72,93,72,93,72,93,72,
93,72,93,72,93,72,93,93,93,79,86,72,86,72,86,72,
86,72,86,72,100,79,100,79,100,79,100,79,93,79,93,79,
36,36,36,36,36,36,36,36,36,36,101,72,72,36,93,72,
72,79,36,79,36,79,50,79,62,79,36,93,79,93,79,93,
79,91,93,79,100,79,100,79,100,79,129,122,93,50,93,50,
93,50,86,72,86,72,86,72,86,72,79,43,79,62,79,43,
93,79,93,79,93,79,93,79,93,79,93,79,122,100,86,72,
86,79,64,79,64,79,64,36,97,97,97,97,97,97,97,97,
97,97,97,97,97,97,97,94,97,97,72,97,97,97,97,97,
97,97,97,97,97,97,97,97,110,92,97,97,97,97,97,97,
97,97,97,97,97,97,97,107,93,97,97,97,97,97,97,97,
97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,
97,97,97,97,97,93,72,36,36,100,79,93,79,93,79,93,
79,93,79,93,79,97,97,97,97,97,97,97,97,97,97,97,
97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,
97,97,93,72,129,115,100,79,97,97,97,97,97,97,97,97,
97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,
97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,
97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,
97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,
97,97,97,97,97,97,97,97, };

// Call this function with
//    font: NULL or array length
//    data: NULL or specified size
//    height: STB_FONT_arial_bold_9_latin_ext_BITMAP_HEIGHT or STB_FONT_arial_bold_9_latin_ext_BITMAP_HEIGHT_POW2
//    return value: spacing between lines
static void stb_font_arial_bold_9_latin_ext(stb_fontchar font[STB_FONT_arial_bold_9_latin_ext_NUM_CHARS],
                unsigned char data[STB_FONT_arial_bold_9_latin_ext_BITMAP_HEIGHT][STB_FONT_arial_bold_9_latin_ext_BITMAP_WIDTH],
                int height)
{
    int i,j;
    if (data != 0) {
        unsigned int *bits = stb__arial_bold_9_latin_ext_pixels;
        unsigned int bitpack = *bits++, numbits = 32;
        for (i=0; i < STB_FONT_arial_bold_9_latin_ext_BITMAP_WIDTH*height; ++i)
            data[0][i] = 0;  // zero entire bitmap
        for (j=1; j < STB_FONT_arial_bold_9_latin_ext_BITMAP_HEIGHT-1; ++j) {
            for (i=1; i < STB_FONT_arial_bold_9_latin_ext_BITMAP_WIDTH-1; ++i) {
                unsigned int value;
                if (numbits==0) bitpack = *bits++, numbits=32;
                value = bitpack & 1;
                bitpack >>= 1, --numbits;
                if (value) {
                    if (numbits < 3) bitpack = *bits++, numbits = 32;
                    data[j][i] = (bitpack & 7) * 0x20 + 0x1f;
                    bitpack >>= 3, numbits -= 3;
                } else {
                    data[j][i] = 0;
                }
            }
        }
    }

    // build font description
    if (font != 0) {
        float recip_width = 1.0f / STB_FONT_arial_bold_9_latin_ext_BITMAP_WIDTH;
        float recip_height = 1.0f / height;
        for (i=0; i < STB_FONT_arial_bold_9_latin_ext_NUM_CHARS; ++i) {
            // pad characters so they bilerp from empty space around each character
            font[i].s0 = (stb__arial_bold_9_latin_ext_s[i]) * recip_width;
            font[i].t0 = (stb__arial_bold_9_latin_ext_t[i]) * recip_height;
            font[i].s1 = (stb__arial_bold_9_latin_ext_s[i] + stb__arial_bold_9_latin_ext_w[i]) * recip_width;
            font[i].t1 = (stb__arial_bold_9_latin_ext_t[i] + stb__arial_bold_9_latin_ext_h[i]) * recip_height;
            font[i].x0 = stb__arial_bold_9_latin_ext_x[i];
            font[i].y0 = stb__arial_bold_9_latin_ext_y[i];
            font[i].x1 = stb__arial_bold_9_latin_ext_x[i] + stb__arial_bold_9_latin_ext_w[i];
            font[i].y1 = stb__arial_bold_9_latin_ext_y[i] + stb__arial_bold_9_latin_ext_h[i];
            font[i].advance_int = (stb__arial_bold_9_latin_ext_a[i]+8)>>4;
            font[i].s0f = (stb__arial_bold_9_latin_ext_s[i] - 0.5f) * recip_width;
            font[i].t0f = (stb__arial_bold_9_latin_ext_t[i] - 0.5f) * recip_height;
            font[i].s1f = (stb__arial_bold_9_latin_ext_s[i] + stb__arial_bold_9_latin_ext_w[i] + 0.5f) * recip_width;
            font[i].t1f = (stb__arial_bold_9_latin_ext_t[i] + stb__arial_bold_9_latin_ext_h[i] + 0.5f) * recip_height;
            font[i].x0f = stb__arial_bold_9_latin_ext_x[i] - 0.5f;
            font[i].y0f = stb__arial_bold_9_latin_ext_y[i] - 0.5f;
            font[i].x1f = stb__arial_bold_9_latin_ext_x[i] + stb__arial_bold_9_latin_ext_w[i] + 0.5f;
            font[i].y1f = stb__arial_bold_9_latin_ext_y[i] + stb__arial_bold_9_latin_ext_h[i] + 0.5f;
            font[i].advance = stb__arial_bold_9_latin_ext_a[i]/16.0f;
        }
    }
}

#ifndef STB_SOMEFONT_CREATE
#define STB_SOMEFONT_CREATE              stb_font_arial_bold_9_latin_ext
#define STB_SOMEFONT_BITMAP_WIDTH        STB_FONT_arial_bold_9_latin_ext_BITMAP_WIDTH
#define STB_SOMEFONT_BITMAP_HEIGHT       STB_FONT_arial_bold_9_latin_ext_BITMAP_HEIGHT
#define STB_SOMEFONT_BITMAP_HEIGHT_POW2  STB_FONT_arial_bold_9_latin_ext_BITMAP_HEIGHT_POW2
#define STB_SOMEFONT_FIRST_CHAR          STB_FONT_arial_bold_9_latin_ext_FIRST_CHAR
#define STB_SOMEFONT_NUM_CHARS           STB_FONT_arial_bold_9_latin_ext_NUM_CHARS
#define STB_SOMEFONT_LINE_SPACING        STB_FONT_arial_bold_9_latin_ext_LINE_SPACING
#endif

