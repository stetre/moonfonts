// Font generated by stb_font_inl_generator.c (4/1 bpp)
//
// Following instructions show how to use the only included font, whatever it is, in
// a generic way so you can replace it with any other font by changing the include.
// To use multiple fonts, replace STB_SOMEFONT_* below with STB_FONT_consolas_16_latin1_*,
// and separately install each font. Note that the CREATE function call has a
// totally different name; it's just 'stb_font_consolas_16_latin1'.
//
/* // Example usage:

static stb_fontchar fontdata[STB_SOMEFONT_NUM_CHARS];

static void init(void)
{
    // optionally replace both STB_SOMEFONT_BITMAP_HEIGHT with STB_SOMEFONT_BITMAP_HEIGHT_POW2
    static unsigned char fontpixels[STB_SOMEFONT_BITMAP_HEIGHT][STB_SOMEFONT_BITMAP_WIDTH];
    STB_SOMEFONT_CREATE(fontdata, fontpixels, STB_SOMEFONT_BITMAP_HEIGHT);
    ... create texture ...
    // for best results rendering 1:1 pixels texels, use nearest-neighbor sampling
    // if allowed to scale up, use bilerp
}

// This function positions characters on integer coordinates, and assumes 1:1 texels to pixels
// Appropriate if nearest-neighbor sampling is used
static void draw_string_integer(int x, int y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0, cd->t0); glVertex2i(x + cd->x0, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t0); glVertex2i(x + cd->x1, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t1); glVertex2i(x + cd->x1, y + cd->y1);
        glTexCoord2f(cd->s0, cd->t1); glVertex2i(x + cd->x0, y + cd->y1);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance_int;
    }
    glEnd();
}

// This function positions characters on float coordinates, and doesn't require 1:1 texels to pixels
// Appropriate if bilinear filtering is used
static void draw_string_float(float x, float y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0f, cd->t0f); glVertex2f(x + cd->x0f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t0f); glVertex2f(x + cd->x1f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t1f); glVertex2f(x + cd->x1f, y + cd->y1f);
        glTexCoord2f(cd->s0f, cd->t1f); glVertex2f(x + cd->x0f, y + cd->y1f);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance;
    }
    glEnd();
}
*/

#ifndef STB_FONTCHAR__TYPEDEF
#define STB_FONTCHAR__TYPEDEF
typedef struct
{
    // coordinates if using integer positioning
    float s0,t0,s1,t1;
    signed short x0,y0,x1,y1;
    int   advance_int;
    // coordinates if using floating positioning
    float s0f,t0f,s1f,t1f;
    float x0f,y0f,x1f,y1f;
    float advance;
} stb_fontchar;
#endif

#define STB_FONT_consolas_16_latin1_BITMAP_WIDTH         256
#define STB_FONT_consolas_16_latin1_BITMAP_HEIGHT         90
#define STB_FONT_consolas_16_latin1_BITMAP_HEIGHT_POW2   128

#define STB_FONT_consolas_16_latin1_FIRST_CHAR            32
#define STB_FONT_consolas_16_latin1_NUM_CHARS            224

#define STB_FONT_consolas_16_latin1_LINE_SPACING          11

static unsigned int stb__consolas_16_latin1_pixels[]={
    0x00034cd3,0x55530400,0x003114c0,0x8d554426,0x2e800009,0x220000b9,
    0x0b72e81a,0x401013f6,0x00000098,0xf3001930,0x000ed889,0x0014c019,
    0x36200000,0x99e6000e,0xe8801367,0x7653e205,0x26fd80fe,0x3a203fe8,
    0x365ddf33,0x37ff2205,0x10971d80,0x260b3bfb,0x8e45ffff,0x2d8cc83a,
    0x2237ff4c,0xb505fffd,0x2f80bfff,0x22034f44,0x4016e01d,0xb717200f,
    0x59dfd880,0x059dfd88,0x983ea0b7,0x004d9e67,0x89f100f6,0x807d40f9,
    0x7997a07a,0x47d03f88,0x2510006b,0x0cf982db,0x06188186,0x9024e862,
    0xf913e61d,0x540b91ff,0x060b7d06,0x01881862,0xfffb10f3,0x8807e21f,
    0x25105b72,0x013102db,0xf33cc1f5,0x0000026c,0x02dc0f98,0x983ee07e,
    0x4c83f507,0xa81d31e8,0x36013105,0xf707e205,0x7cf707e2,0x7b85f103,
    0x2e47fffc,0x032607d0,0x22f707e2,0x3a63dc1f,0x27b60eff,0x4026c0ad,
    0x88130098,0x17fff620,0xf33cc1f5,0x327f566c,0x3ae5a81d,0x07cc3eee,
    0xf05f016e,0x97607987,0x791110f8,0xb117627c,0x05f0bfff,0x45ee0fc4,
    0x9fb3dc1f,0x23f30f50,0x5c8ffff8,0x3f601f30,0xbdc1f884,0xf33dc1f8,
    0xf3f85b97,0xd801f303,0x541ff04f,0x27cc3b26,0xf33cc1f5,0x17d4f76c,
    0x2625d89f,0x07cc4e99,0x985d0132,0xf703cc1f,0xbcfecad4,0x42f89f24,
    0x4c9f30ec,0x707e201f,0x2f707e2f,0x2e1eeaeb,0x3fa2f886,0x9905c8ff,
    0x221f7e20,0x1f8bdc1f,0x132bb3dc,0x7403ebb6,0x41f7e203,0x7c5aa3ff,
    0x41f53dc2,0x0ed92279,0x3e27c972,0x1f313a02,0x37201744,0x81e61ee0,
    0x2d3790f9,0x4be24abd,0x2e17c47b,0xf880be27,0x41f8bdc1,0x8fe47d7b,
    0x261f887b,0x885c8fff,0x3f3d501f,0x8bdc1f88,0x27f3dc1f,0x3ffd882d,
    0x4f540d50,0x2a7cf81f,0x23f30f56,0x9b03cc79,0x5cbe26b8,0x3e627407,
    0x36009fb0,0x0f30d93f,0x2995b2f8,0xdaec4b9e,0x0fcc3d44,0x20fc409d,
    0x7b83f17b,0x0f54d8bb,0x327501f3,0x53606b85,0x2e0fc44e,0x27b83f17,
    0x7d403d4e,0xb01f80ef,0x3e7e13a9,0x221eed53,0x0798f32f,0x5d8d7136,
    0x4c4e809b,0x900ba60f,0x3cc35c1b,0x367a5f10,0xfa8771f3,0x443dc1f9,
    0xf881b22f,0x41f8bdc1,0x361bd17b,0x06c85f14,0x102e85c8,0x3f11b23f,
    0xb83f17b8,0x803e3b27,0x5c85e8cb,0xf0d91f88,0x3ddaad73,0x4c798fc4,
    0x6c4d8a27,0x00fcfd45,0xc81f313a,0x3e617405,0x3f303cc0,0x6de6f67a,
    0x7b86ef81,0x3be61f88,0x83f1299b,0x7b83f17b,0xd83f7f62,0x802fb8af,
    0xf503d45c,0x83f10fcc,0x7b83f17b,0x0373fba2,0x7c42ecf2,0x83f33d40,
    0x56aaf89f,0x4c01f30f,0x70dd9e67,0x00ddf03f,0x5c0f989d,0x17c17c05,
    0x3a7b81e6,0x06cedeb9,0x30f505f9,0xeffd881f,0x7cbb0be3,0x27cc2ec2,
    0x80177fe4,0xdb01ec5c,0x2f89f555,0x5d85f2ec,0x2e22cfb8,0xb02fccd9,
    0xfaaaed87,0x6aec8fc4,0x2a6c85f1,0x2799e60e,0x901efffd,0x989d005f,
    0x3e02dc0f,0x03cc4e82,0x88a96c9d,0x220d900a,0xf883642f,0xfb89ed80,
    0x3ee27b62,0x3e60d702,0xf893a000,0xddddf100,0xb89ed8dd,0x2e27b62f,
    0xd885a82f,0x2a02dfff,0x3bbbbe27,0xdf88fc6e,0x3ee2bf66,0x27987ee2,
    0x64013679,0xf987f006,0x0be035c0,0x70798be6,0x5002dc1f,0x457ec05f,
    0x20d502fb,0x443fffd8,0x2aa3fffd,0x3ba04fba,0x6d6742cb,0x7a81720f,
    0x3f621f98,0x7fec43ff,0xf809703f,0x1ea5d000,0x321f87e6,0x177fe46f,
    0x2799e604,0x02fa804d,0x3e60fdc3,0xfb80fc40,0x1e61f500,0x19f10be6,
    0x00bfee04,0x980bbff2,0x80800801,0x4402deea,0x764c1cec,0xbb00e41c,
    0x40040fe0,0xd101e400,0x05d9d400,0xdf30fc7f,0x27980020,0xfb813679,
    0x3fffe02f,0x203fbb23,0x0ffe26ec,0x3bbe6790,0x3fa607b2,0x000c43ee,
    0x00000004,0x00000000,0x00000000,0x00000000,0x00000000,0x044f33cc,
    0x06600310,0x81006662,0x13330001,0x00262002,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00030600,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x027cc000,0x166009fb,0x0205b974,0x00013e60,0x04000000,
    0x00000000,0x0072a000,0xb72e8000,0xf3013f60,0x200ed889,0x8000b72e,
    0x076c44f9,0x3b100000,0x016c6640,0x47209951,0x3fffc83a,0xfd803b10,
    0x400ee883,0x0ee883fd,0x3e26fe88,0xe88bd101,0x4e7ec00e,0x2207fb05,
    0x0026c69d,0x1d4721f4,0x8816c664,0xc816e01d,0x2f440751,0x16e01d88,
    0x324acf88,0x013101df,0xfb100988,0x04c40bfd,0x30fb87dc,0x19702201,
    0xb813205b,0x09902d8c,0x0264ba99,0x1026407b,0x9705d917,0xd5d105b1,
    0x3e8004d8,0x82666662,0x20999998,0x20999998,0x20999998,0x00999998,
    0x3333107b,0x4cccc413,0x277fec09,0x6c45f931,0xfd885fff,0x88ec85ff,
    0x7fec43ff,0x1f326c5f,0x05f103f2,0x00000000,0x074d6cf2,0x00000000,
    0x4d815300,0x3f23e800,0x3f23ffff,0x3f23ffff,0x3f23ffff,0x3ea3ffff,
    0x4002ffff,0x22fffffa,0x42fffffa,0xf900fc9a,0x44f98764,0x449f30ec,
    0xc8f7b72f,0x9f49f30e,0xb13e24e9,0x11e43c8d,0xd885dffb,0xfd982eff,
    0x23f3aa2e,0xeffd882e,0x82efea82,0x982effd8,0x7ec42efd,0x3ab362ef,
    0xfeed984f,0x2600f983,0x803e600f,0x807a80f9,0x3d42efd9,0x36601ea0,
    0x11f504fe,0x3e27b85f,0x6cf53dc2,0x85f10f9a,0x427cfa7b,0xd83f30fb,
    0x33732744,0x4cdcc3f9,0x26be61fc,0x322e61fb,0xf9337305,0x7dcd7dc3,
    0x7e4cdcc2,0x3ee6be61,0x3f266e61,0x5f53ddb1,0x1fcce7cc,0x1f3007cc,
    0xf3007cc0,0xf980f501,0x1ea1fb9a,0xbfa80f50,0x56c80fb9,0x1ea3f30f,
    0x1f3dc7e6,0x261ea3f1,0x05f17d1f,0x26c2ed7a,0x807f013a,0x0bb1363f,
    0x1fc001f3,0xf806c87f,0x80bb1363,0x2e41db3f,0xf983e8bd,0x9803e600,
    0x203e600f,0x3626c07a,0x0f501ea5,0xfd2743e8,0x3e21ee3b,0x25f10f72,
    0x47e2b57b,0x7d2f887b,0x2fea0bf2,0x2744d80f,0x10ff32a2,0x6fc7f995,
    0xae86eccc,0xcca881b9,0x7a81f13f,0x23fcca88,0x46ecccdf,0x9b3fcca8,
    0x7d0be6b8,0x7cc01f30,0x9803e600,0xeeefa80f,0x33337e0e,0x3bbbea6e,
    0x3bbbea0e,0x5c83f10e,0xf10f70fa,0x47e21ee3,0x43e67979,0x7d1f887b,
    0x27ec1fdc,0xf32744d8,0x7cc7d559,0x37e3eaac,0x6dc3cccc,0x3e61fbea,
    0x1f33eaac,0x567cc7a8,0x3337e3ea,0x2b3e63cc,0x6b89b3ea,0x983e83f1,
    0x803e600f,0x03e600f9,0xf06667ea,0x5479999b,0x7d41999f,0x07e21999,
    0x1ea16cd9,0x4c3d43e6,0x23f5f10f,0x3e61ea6c,0xa86c87d0,0x744bb00f,
    0x6c7d1364,0x80bd1f44,0x47b3c8f9,0x2f89f44d,0x7d136364,0xd13602f4,
    0x7cbb1367,0x3e60fe63,0x9803e600,0x203e600f,0x202f407a,0x203d407a,
    0x22026c2f,0x5f13642f,0x47fe46c8,0x90be22fb,0x0db11f4d,0x27ea01f3,
    0x457a4fd8,0x6c57a3fd,0x442fee3f,0x2eae4fa0,0x91fec57a,0xbd0bea3d,
    0xbfb8ff62,0xd8af4110,0x3ee1bb3f,0x3ba67b61,0x2600f983,0x803e600f,
    0x407a80f9,0x54110bfb,0x3203d407,0x1f43f71e,0x17dc57ec,0x0bee2bf6,
    0x360bbff6,0x3a2fb8af,0x981eff8b,0x7ffb100f,0x5fffcc9b,0x2fffe63d,
    0x7fffdc3d,0x2ff44b72,0x8f6fffe6,0x982fffc8,0x5c3dbfff,0x3e62ffff,
    0xfd73dbff,0xefe883df,0x3ee623d9,0x3ee62099,0x3ee62099,0x3ee62099,
    0x267ea099,0x7ffdc099,0x2667ea2f,0x2667ea09,0x3fff2209,0x7e417e22,
    0xdff902ef,0x9002ba05,0x40005dff,0x400400f9,0x11000800,0x20010000,
    0x11000800,0x04000040,0x7fffff90,0x1fffffe4,0x47fffff9,0x23fffffc,
    0x02fffffa,0xffff5011,0x7fffd45f,0x0020102f,0x12004002,0x00000100,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x13f60000,0x0005b974,0xf9804fd8,0x000ed884,
    0x18000000,0x205bb500,0x2e4ba000,0x5d00000c,0x99998972,0xa980c401,
    0x04c40001,0x5300d440,0x04cccc43,0x262004c4,0xc85e8800,0x51c82d8c,
    0x905e8807,0x6c405b19,0x6c02dc01,0x273f603f,0x980ee885,0xa87e20fe,
    0x74c2fbbf,0x3b07e21f,0x20fe992e,0x03ba21f8,0x7d4971d8,0xfc887fff,
    0x3bfa21ff,0x4e7ec0ef,0x04fefc85,0xa8bffff3,0xff76ffff,0x7fec4dff,
    0xfdee885f,0x4c41ec05,0x98809999,0x4403d800,0x004c4009,0x8cb80262,
    0xec8b882d,0x2aa13202,0x4b91320f,0x322ea84e,0x07d54004,0x00132099,
    0x0ef40354,0x88fe26d8,0x75c2ec8b,0xcf985f30,0x20bfa860,0x8764d901,
    0x361f44f9,0xfffa8005,0x04fd82ff,0x809fb000,0x27ec04fd,0x00000000,
    0x2e074c3e,0x9d905f16,0x3f6603a6,0x1d30f82e,0xdffb1000,0x1ae03545,
    0x003e89b0,0xbb1761fc,0x32004f80,0x27b85f16,0x3f19956b,0x7a8f21e4,
    0x207df880,0xf102efea,0x3efc40fb,0x540fbf10,0xfd502efe,0x3c87905d,
    0xf882e87c,0x4ea884fd,0x735f305d,0x05d0f83f,0x7303ddd5,0x3aa3f933,
    0x3317b009,0x1f917f50,0x1177dd64,0xf1ff621f,0x0007cc05,0x3e61ead9,
    0x257f37b1,0x49d1363c,0xf9ea807a,0xfb9afb81,0x01f9ea82,0x2a03f3d5,
    0xafb81f9e,0x57dc2fb9,0x226c2fb9,0x105c944e,0xb88a29fd,0xb1360b92,
    0x220b928b,0x7f001f99,0xf0bbffea,0xa81dfdfd,0x6f6c0fff,0x31f30fb9,
    0x0fccf5bd,0x1e654f50,0xf10f76c8,0x971327a5,0x7a93a26c,0xf09d4d80,
    0xd4d86c87,0x82753609,0x87f09d4d,0x1b21fc6c,0xf984e89b,0x9fccf880,
    0x201f306b,0x86ecccdf,0x01f800f9,0x307f9951,0x3a27c3f9,0x3befb625,
    0x267f1b60,0x4cf53fbf,0xa99ea02f,0x1eed906d,0x2dd747e2,0x2744d92e,
    0x41ddddf5,0xf88d91f8,0x47e23d40,0xd91f886c,0x11b23f10,0x3e27a81f,
    0xd1363d40,0x43935d09,0x4177b67b,0x6fc1a8ae,0xae83cccc,0x207e01a8,
    0x03eaacf9,0x3dc3f8fe,0x9b27c4bb,0x43df14e8,0x9813e27a,0x6c835c0f,
    0x361f30f5,0x47b4cf8b,0x3f52744d,0x267a8333,0xf503e61f,0x507e67a8,
    0x9ea0fccf,0x503e61f9,0x1ea07ccf,0xadc4e89b,0x44f70fbc,0xdb5b82fe,
    0x5b805e8b,0x40fc0bdb,0x7f01f44d,0x3f9ae274,0x4e89b364,0x6e89b0fa,
    0x0d713e20,0x3217c576,0x45545aa6,0x4e89760f,0x55db01ea,0x217c49f5,
    0x55576c6c,0x55576c4f,0x55576c4f,0xd90be24f,0xb1b217c4,0x1f32744b,
    0x8bf987cc,0x47cc4fea,0x5fdc5bea,0x547cc110,0x207e05be,0x827fb15e,
    0x47ea0ed9,0x4c7ba3f9,0x49d1364f,0x41fb89fb,0x2299bef9,0x56c89cfb,
    0x7ec7f735,0x6ec2fb8a,0x9fa89d10,0x81ea4fd8,0x6eeeeef8,0x22fa8f64,
    0x6eeeeef8,0x3bbbbbe2,0x3bbbbe26,0xfa8f646e,0x2fa8f642,0x27ec4fd4,
    0x2a0f547d,0x22fbcfff,0x85fddd3e,0x3a2ffffb,0x445fddd3,0x2609bf99,
    0xf93dbfff,0xff7019ff,0xfffd887f,0x713a26c4,0x3a603dff,0x7f543eff,
    0x7fff54ff,0x205dff90,0xd883effc,0x3ea4dbff,0x0f509999,0x7fe443f3,
    0x7cc3d42f,0x23f30f51,0x221f987a,0xc882fffc,0xfd882fff,0xf8b74dbf,
    0x2dc002ff,0x2201b931,0xb9312dc0,0x7ffffe41,0x00220084,0x4d804004,
    0x00008274,0x01000040,0xf5004000,0x1765ffff,0xbb0081fc,0xf82ecfe0,
    0x40fe0bb3,0x01001000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x325d0000,0x40b61e45,0x4c000aa9,
    0x30fd409a,0x80bd0310,0x0c010039,0x3bbbfae0,0x85a81d30,0xc800b92e,
    0xd984feaa,0x08003dee,0x4477fb20,0x20266000,0x80c4b92e,0x00266209,
    0x31099998,0xd1013333,0x6c0ff60b,0x744d8971,0x7ff7f443,0xb83fff50,
    0x3ea3ffef,0x87b83f11,0x201e406e,0x3cc1ffeb,0x3f913f50,0x6c2ec4f8,
    0x202e4971,0x22fa9eed,0xb3f99cf9,0xd03f7009,0x1363735d,0x0ffbfa20,
    0x2f892e3b,0xfffd07dc,0xeffb805f,0xfffff51e,0x32e07b05,0x4d8002d8,
    0x083b61f4,0x3e4083f0,0x07b83f10,0x80bffaa0,0x0f3011fa,0xf90be26c,
    0x320017c4,0xb9076c05,0x26cfa2f4,0x3ea0fd40,0x1799db00,0x00044bb0,
    0x217c43f2,0x405f713e,0x007a86de,0xdfd50000,0x21f44d85,0x803f003f,
    0x7c4d10f9,0x21dc3dc1,0x02ffbafb,0x3fbaa099,0x99b23eee,0x7b97c40f,
    0x5c9e43c8,0xf9ae26c0,0x004d9f42,0xadd81720,0x017c1feb,0x3a03ddd5,
    0xd87d0b94,0x50d7d306,0x0f77540f,0x5c0f7754,0x362fb9af,0x0bf61f44,
    0x4b9007e0,0xf707e279,0x792f8990,0x440fa0b9,0x20999fb9,0xb04fcefa,
    0xd136136b,0x23d89729,0x1f8b644d,0xefbcd9f4,0x907bbaa2,0x17a26c0b,
    0x7ccc405f,0x03f5f501,0x9b07a87d,0x440f50d7,0x99881f99,0x3643f81f,
    0x221fc4bb,0x07e03efd,0xf983bfaa,0x27b83f10,0x43e24fc9,0x3ba67a8f,
    0x7985eeef,0x802aaf60,0x4d81f9fa,0xbd15ca74,0x5f2f44d8,0x9efd9fcc,
    0x3f3310fb,0x89b00fa8,0x99bf916c,0xfb00fc07,0x23ddfd09,0x5c7c40f9,
    0xddf51eef,0x803f01dd,0x2a07c41f,0x3fa27f67,0x01df9304,0xfb53103f,
    0x0fc43e61,0x209cf9ee,0x4f5698f9,0x2aadeaa8,0x2bba0798,0x1bbe009a,
    0x6e53a26c,0x88dd85e8,0x263b61fc,0x3f8db3fe,0x56fc41f8,0x5e89b098,
    0x05559f51,0x7e54c0fc,0x873e61ab,0xebadc0fa,0x2667ea19,0x1f803f01,
    0xd9ea07cc,0x02fabffe,0x007e13e2,0xf887cd3a,0x00f9bdc1,0x41ae795f,
    0x703cc03e,0x209ffddf,0xe89b02fc,0x360bdd94,0x7441efff,0x89b3e9ef,
    0xd881f84e,0x53bb1fff,0x002f83fb,0x9fb9503f,0x3ec3e839,0x543656f4,
    0xf803f007,0x9b217c41,0x0bb0004d,0x2a7d003f,0x2bb0be0f,0x1fd901f9,
    0x00fa05f5,0x85f101f3,0x6c0d907b,0x66e53a25,0x1004d80f,0x2744d9f4,
    0x41f880fc,0xf81deffd,0x3103f002,0x3e8133f7,0x3bbe62fc,0xf007a86e,
    0xec81f803,0x026c5f51,0x3ea626a2,0x93041f82,0xed87ea1f,0x3f62fb89,
    0x3fffd80a,0x33a00fa0,0xc87f1088,0x2a02fa86,0xb94fd89f,0x009b03b6,
    0x9d1367d0,0x21aa03f0,0x4dfcc04d,0x3e662099,0x3fbb209b,0x64e742ee,
    0xd726c0ef,0x267ea133,0x7f331099,0x5fccc413,0x3fff2209,0x3e2026c2,
    0x2623efff,0xffb09bf9,0x10fd43bf,0xf907fffb,0x800bc85f,0xffda803e,
    0x3bfbff24,0x100bfee1,0x329b7ffb,0x04d83ba5,0xe89b3e80,0x137f3314,
    0x204d8198,0x5ffffff9,0x13fffff2,0x7ff403e6,0x70fc40ce,0x3fea7fff,
    0xfff92fff,0x7ffe49ff,0x220104ff,0x7e406000,0x0224ffff,0x100100c4,
    0x7d000b81,0x13310000,0x00800310,0x112f44b9,0x13611000,0x3ffff29d,
    0x0000004f,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x99998000,0x06662199,
    0x13310260,0x98809880,0xb8199999,0x2666661f,0x30066609,0x26662310,
    0x40608099,0x02a600a9,0x04431031,0x33333022,0x04402613,0x01108813,
    0x08804c22,0x41333331,0x3100c409,0x30199881,0x09100280,0x666666cc,
    0x7ffff90e,0xfd87fd30,0x9fb04eff,0xffffff50,0xf13fd81f,0x22dfffff,
    0x442effff,0xffcbdc1f,0x8b543fff,0x1ffff4c7,0x88ffbba2,0x49b36c3f,
    0x7fffc2f9,0x881f96ff,0x6a83fe2f,0x36cba0b9,0xffff53f8,0xf897e25f,
    0xfb13f607,0x0fc49fff,0x4c00de88,0x2f66a607,0x64572190,0x0ff3f61f,
    0x220fd49b,0x07cc07df,0x29b00510,0x45f711f8,0x263dc1f8,0x1a6b500f,
    0xbb07e475,0x21f70fcc,0x745361f9,0xf12f9804,0x1ffc6d89,0x97416ed5,
    0xa87cc0fa,0x543fe607,0x89dd507e,0x229f514d,0x03b6201f,0xa8a60798,
    0xf8972196,0x361fc262,0x27aa1fc4,0x003e601f,0x3e21f300,0x83f136c1,
    0x2207cc7b,0x1cfdceec,0x07e23f10,0x89d5e89d,0x3a00bb4d,0x1f987dc5,
    0x2ed53e7c,0x0fe23f06,0xd303d4d9,0x221ef67b,0x226c4daf,0x9003f16d,
    0x7e55443f,0x3a14c2aa,0x7d4b90c9,0x24d87f01,0x4ea6c1fa,0x00003e60,
    0x2a0fc49b,0x8f707e27,0x6ed440f9,0xf300adda,0x8b907e21,0x66c0fdf9,
    0x0fb800ec,0x3f0bb5e8,0x8b55aa7f,0x745d87e5,0xae981ea3,0x6c0f8f8e,
    0x6c4d89b5,0x2e003f16,0x9fb9912f,0xd7329899,0x7ee76432,0xdfb0fe03,
    0x91f885fd,0x1007cc0d,0xf107cc05,0xdf10f983,0xf98fdddd,0x01325b00,
    0xd30de8bb,0xdb05f90b,0x05f1001f,0x3e03efea,0x5aad56b9,0x7d41f1fb,
    0x77d41f30,0x3ed50eee,0x3ea0f8cd,0x2a4d89b0,0x1003f13f,0x40f301bd,
    0xc8643b29,0x1fc05ebe,0x8bf2ab76,0x4c07e67a,0x40ff200f,0x2a0fc45d,
    0x5559f10f,0xd00f98fb,0x0fc80f25,0x2777fec4,0x76ec2ff4,0x6c05e804,
    0x5f13f04f,0x6775e6d5,0x5cbe20f8,0x15557d46,0x3e27f2d5,0x6c4d8ba0,
    0x3e23ffef,0x3027cc01,0x64294c0f,0x80fe2b90,0x9b626c3f,0x04faaaed,
    0x27cc01f3,0x07e20fcc,0x2e0fc4fb,0x3ae07cc7,0xb86efeef,0xc87b001f,
    0x4e6c2faf,0x003ee02f,0x647e01f5,0x3f1f36ae,0x3abb0f3f,0x2d703d43,
    0x57dc7e39,0xbb0adeaa,0x01f88135,0x09100fee,0x4320c94c,0x3f81ee5c,
    0x7c5b626c,0x306eeeee,0x41fc401f,0x221f885d,0xf707e25f,0x7cc40f98,
    0x7e41af99,0x4c1f3001,0xa6c1f92f,0x02f881fb,0x23f00f98,0x99f16df8,
    0x27ea1efa,0xb703d40f,0x7775c7e0,0x09b1effe,0x1e880fc4,0x26666660,
    0x320b94c0,0x11fc4b90,0x36139f33,0xf52fb99d,0x1f303f30,0x3e61bae0,
    0xfc9af881,0xf707e20e,0x8267ee62,0x5f703e78,0x54c41333,0xf12f43fc,
    0x81db26c9,0x819999ed,0x643f00f9,0x7647be6f,0xa86ef886,0x0fc16e07,
    0x204d89b0,0x00999af8,0x3fffffe0,0x777774c5,0x7c8b90fe,0x57fffff2,
    0x362dfffd,0x1f307f05,0x82ec0b20,0x40befff8,0xfcbdc1f8,0x5e63ffff,
    0xffffe878,0x077bf26f,0xb1fb83f7,0xff12f449,0xf30fffff,0x6f987e01,
    0xb06f99fe,0x640f507f,0x26c05f05,0xfff88136,0x000005ff,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x20000000,0x101cc0c8,0xfb813305,0x36204c41,0x203fd9ef,0x5dffb101,
    0x543bfd90,0xfd985ffd,0x0790f22e,0x0bbfaa00,0xdf759010,0x676c6545,
    0x3bbbbae0,0x5c991361,0x03a65b03,0x57de4cb5,0x010003fa,0x01004011,
    0x02044182,0xa9de8086,0x8bd104e9,0x3f61fddc,0x98bfbee3,0x0f9bfd9a,
    0x9b982fc8,0x2bba1fc9,0x335f31b9,0xfb9af985,0x984e89b1,0x2e6bee07,
    0x2edeb82f,0x43ee77b6,0x24e9beea,0x20fc9998,0x5c3f52fa,0x21fc5f05,
    0x3af7a65d,0x307886ad,0x37fec3fb,0xfa83bff2,0x7c56e1ef,0x17cc3b21,
    0xf107e2d5,0x3e60dfdf,0x4511ec04,0x260f71f8,0x19305d0f,0x07d4fe00,
    0x13600fa8,0x09d136bb,0x321fc0f3,0x6ce5e5c6,0xf53f8db2,0x2f9835c5,
    0x543f9fc8,0xc83e2b36,0x8f987e26,0x550f89f9,0xfbe885da,0x2262f881,
    0x2e3f13f8,0x6c6b9f46,0x4be23fae,0xf71f984d,0xd502fb81,0x33cc09fd,
    0xccfdb98f,0xca88003f,0x440b93fc,0xcdf81cfe,0xe89b6ecc,0x1f107984,
    0xd8db47a8,0x54e89b58,0x4e88188f,0x5e617fa0,0x7c479afc,0xf3798d71,
    0x76ec43e2,0x641f80ce,0x265f306d,0x21f11e27,0x321fec3e,0x4d701d55,
    0x807f21f8,0x7c409b1f,0x5e7d4d72,0xdd31aaaf,0x261ddddd,0xb93eaacf,
    0xf8bfb500,0x9b3ccccd,0xfddd34e8,0x03e61ddd,0x1eeac4f5,0x2a9d136d,
    0xd80bb007,0xce8f884f,0x7d4d86ad,0x3e2f3798,0x4033f620,0x21fdd41f,
    0x647e24f9,0x21f8b5c6,0x5aa0eef9,0x227b81f8,0x4037a21f,0x20c4deed,
    0x5361effb,0xaaa880f9,0xd1362aaa,0x4c003e67,0x5d817a2f,0x655453a2,
    0x0be22abf,0x193b68d9,0x2a9d136b,0x200fb807,0xbf82fafb,0xfa85bf8e,
    0x79bcc0f9,0x3a7aa1f1,0xd01f81ea,0x504e7dc9,0x8fc43dff,0x76cfe64e,
    0x20755360,0x886d9cf9,0x320100ed,0x8dc8083f,0x02008cfd,0x23fd8af4,
    0x13098adf,0xbfb87ea2,0x227ea110,0x207984fd,0xa85f51ec,0x1363d72c,
    0xf301ea9d,0x7cc13337,0x3ee81f72,0x17be09db,0x0f8bcde6,0x3fe05a21,
    0x1dffd6ff,0x8037fffc,0x43a8b13a,0x41c9621d,0x00fefefa,0x7774c3f9,
    0x74cbf26e,0x3fa66eee,0xb80fff9b,0xbfff981f,0x3ffae63d,0x07ffff71,
    0x225ffff7,0x984dbffd,0x3fff2207,0x43bdd502,0x07aa744d,0xa7ffffec,
    0x323744f8,0x3207f71f,0x2f37982f,0x002440f8,0x00000262,0xf1000000,
    0x1ae06d87,0x40833333,0x08019999,0x00803660,0x44004400,0x09100100,
    0x00000020,0x00000000,0x00000000,0x00000000,0x40c00000,0x00000018,
    0x00000000,0x00000000,0x53000000,0x080080c0,0x26666082,0x14404099,
    0x3ae5c974,0x99502e0d,0x77777439,0x3e21933e,0xfffffff0,0x13bbb6bf,
    0x00000000,0x00000000,0x00000000,0x00000000,0x417ec000,0x80fdc2fc,
    0xaf57e4e8,0x24fffffe,0x21ff45d8,0x2fe6751d,0x4c0f88ed,0x2aaa0aaa,
    0x29fd3eaa,0x2666666a,0x55550999,0x00000003,0x00000000,0x00000000,
    0x00000000,0x3ea00000,0x2a357444,0x742d880f,0x990009d4,0x5a8017ec,
    0x00013ff2,0x188f54f6,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x365b0be2,0xe8003ea3,0x2eeee9b4,0x001002bb,0x00001880,
    0x00000057,0x00000000,0x00000000,0x00000000,0x00000000,0x8bd70000,
    0x2443e269,0xc95cae00,0x003ccccc,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x90591000,0x00003b83,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
};

static signed short stb__consolas_16_latin1_x[224]={ 0,3,2,0,0,0,0,3,2,2,1,0,1,2,
3,0,0,1,1,1,0,1,0,0,0,0,3,1,1,1,1,2,0,0,1,0,0,1,1,0,0,1,1,1,
1,0,0,0,1,0,1,0,0,0,0,0,0,0,0,2,1,2,0,0,0,1,1,1,0,0,0,0,1,1,
1,1,1,0,1,0,1,0,1,1,0,1,0,0,0,0,1,1,3,1,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,
3,1,0,0,1,1,0,2,0,0,1,0,1,2,0,1,0,3,3,1,1,1,0,0,0,1,0,0,0,0,
0,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,1,0,0,
0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,
 };
static signed short stb__consolas_16_latin1_y[224]={ 11,-1,-1,0,-1,-1,0,-1,-1,-1,-1,2,8,6,
8,-1,0,0,0,0,0,0,0,0,0,0,3,3,2,4,2,-1,-1,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,-1,-1,0,13,-1,3,-1,3,-1,3,-1,3,-1,-1,
-1,-1,-1,3,3,3,3,3,3,3,0,3,3,3,3,3,3,-1,-2,-1,5,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,3,-1,0,1,0,
-2,-1,0,0,0,3,6,6,-1,0,-1,1,-1,-1,-1,3,-1,5,11,-1,0,3,-1,-1,-1,3,-2,-2,-2,-3,
-2,-3,0,0,-2,-2,-2,-2,-2,-2,-2,-2,0,-3,-2,-2,-2,-3,-2,3,-1,-2,-2,-2,-2,-2,0,-1,-1,-1,
-1,-1,0,-1,3,3,-1,-1,-1,0,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,0,2,1,-1,-1,-1,0,-1,-1,0,
 };
static unsigned short stb__consolas_16_latin1_w[224]={ 0,3,5,9,8,9,9,3,5,5,7,9,5,5,
3,8,9,7,7,7,9,7,8,8,8,8,3,5,7,7,7,6,9,9,7,8,9,7,7,8,8,7,6,8,
7,9,8,9,7,9,8,8,9,8,9,9,9,9,8,5,7,5,8,9,6,7,7,7,8,8,9,9,7,7,
6,8,7,9,7,9,7,8,8,7,8,7,9,9,9,9,7,7,3,7,9,9,9,9,9,9,9,9,9,9,
9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,0,3,8,8,9,9,
3,7,7,9,7,7,8,5,8,7,7,8,6,5,8,8,8,3,3,6,7,7,9,9,9,6,9,9,9,9,
9,9,10,8,8,8,8,8,8,8,8,8,9,8,9,9,9,9,9,7,9,8,8,8,8,9,7,7,8,8,
8,8,8,8,9,7,8,8,8,8,8,8,8,8,8,8,9,9,9,9,9,9,9,8,8,8,8,9,7,9,
 };
static unsigned short stb__consolas_16_latin1_h[224]={ 0,13,5,11,14,13,12,5,16,16,8,9,6,2,
4,14,12,11,11,12,11,12,12,11,12,11,9,11,10,5,10,13,16,11,11,12,11,11,11,12,11,11,12,11,
11,11,11,12,11,14,11,12,11,12,11,11,11,11,11,16,14,16,6,2,5,9,13,9,13,9,12,12,12,12,
16,12,12,8,8,9,12,12,8,9,12,9,8,8,8,12,8,16,17,16,4,11,11,11,11,11,11,11,11,11,
11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,12,14,11,10,11,
17,14,4,12,9,7,4,2,8,4,7,10,8,8,5,12,14,3,3,8,9,7,12,12,12,12,13,13,13,14,
13,14,11,14,13,13,13,13,13,13,13,13,11,14,14,14,14,15,14,7,14,14,14,14,14,13,11,13,13,13,
13,13,12,13,9,11,13,13,13,12,12,12,12,11,13,12,13,13,13,13,12,9,12,13,13,13,12,16,16,15,
 };
static unsigned short stb__consolas_16_latin1_s[224]={ 254,250,148,98,204,95,108,135,56,68,194,
100,120,226,169,158,200,20,108,55,210,165,173,62,182,116,27,56,11,154,236,
249,74,36,28,210,71,248,192,219,81,90,228,135,228,200,163,235,220,139,11,
38,46,67,182,172,125,153,144,62,213,34,126,216,162,59,151,67,159,83,93,
112,167,175,27,141,47,184,129,110,150,158,137,75,103,92,174,164,154,122,146,
40,1,48,181,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,254,63,195,
199,1,217,5,131,173,245,19,246,199,226,120,191,222,244,215,209,139,29,149,
208,212,202,31,230,137,98,118,76,59,49,39,221,19,167,237,104,231,222,10,
204,195,186,177,168,227,231,240,1,11,94,31,238,21,186,177,122,113,49,191,
41,68,105,77,124,156,142,39,183,86,213,133,128,147,1,10,208,240,191,114,
29,69,79,19,49,83,89,1,59,132,17,9,84, };
static unsigned short stb__consolas_16_latin1_t[224]={ 1,1,82,61,1,19,34,82,1,1,73,
73,82,82,82,1,34,61,61,48,61,34,34,61,34,61,73,61,73,82,61,
19,1,61,61,34,61,48,61,34,61,61,34,61,61,61,61,34,61,1,61,
48,61,48,61,61,61,61,61,1,1,1,82,82,82,73,19,73,19,73,48,
48,48,48,1,48,48,73,73,73,48,48,73,73,48,73,73,73,73,48,73,
1,1,1,82,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,
61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,1,48,1,
48,73,48,1,1,82,34,73,73,82,82,73,82,73,61,73,73,82,48,1,
82,82,73,73,73,34,34,34,48,34,34,34,1,34,1,48,1,19,19,34,
19,19,19,19,19,48,1,1,19,19,1,19,73,19,1,1,1,1,19,48,
19,19,19,19,19,34,19,73,48,19,19,19,34,34,48,48,48,19,34,19,
34,34,34,48,73,48,34,34,19,48,1,1,1, };
static unsigned short stb__consolas_16_latin1_a[224]={ 141,141,141,141,141,141,141,141,
141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,
141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,
141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,
141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,
141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,
141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,
141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,
141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,
141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,
141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,
141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,
141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,
141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,
141,141,141,141,141,141,141,141, };

// Call this function with
//    font: NULL or array length
//    data: NULL or specified size
//    height: STB_FONT_consolas_16_latin1_BITMAP_HEIGHT or STB_FONT_consolas_16_latin1_BITMAP_HEIGHT_POW2
//    return value: spacing between lines
static void stb_font_consolas_16_latin1(stb_fontchar font[STB_FONT_consolas_16_latin1_NUM_CHARS],
                unsigned char data[STB_FONT_consolas_16_latin1_BITMAP_HEIGHT][STB_FONT_consolas_16_latin1_BITMAP_WIDTH],
                int height)
{
    int i,j;
    if (data != 0) {
        unsigned int *bits = stb__consolas_16_latin1_pixels;
        unsigned int bitpack = *bits++, numbits = 32;
        for (i=0; i < STB_FONT_consolas_16_latin1_BITMAP_WIDTH*height; ++i)
            data[0][i] = 0;  // zero entire bitmap
        for (j=1; j < STB_FONT_consolas_16_latin1_BITMAP_HEIGHT-1; ++j) {
            for (i=1; i < STB_FONT_consolas_16_latin1_BITMAP_WIDTH-1; ++i) {
                unsigned int value;
                if (numbits==0) bitpack = *bits++, numbits=32;
                value = bitpack & 1;
                bitpack >>= 1, --numbits;
                if (value) {
                    if (numbits < 3) bitpack = *bits++, numbits = 32;
                    data[j][i] = (bitpack & 7) * 0x20 + 0x1f;
                    bitpack >>= 3, numbits -= 3;
                } else {
                    data[j][i] = 0;
                }
            }
        }
    }

    // build font description
    if (font != 0) {
        float recip_width = 1.0f / STB_FONT_consolas_16_latin1_BITMAP_WIDTH;
        float recip_height = 1.0f / height;
        for (i=0; i < STB_FONT_consolas_16_latin1_NUM_CHARS; ++i) {
            // pad characters so they bilerp from empty space around each character
            font[i].s0 = (stb__consolas_16_latin1_s[i]) * recip_width;
            font[i].t0 = (stb__consolas_16_latin1_t[i]) * recip_height;
            font[i].s1 = (stb__consolas_16_latin1_s[i] + stb__consolas_16_latin1_w[i]) * recip_width;
            font[i].t1 = (stb__consolas_16_latin1_t[i] + stb__consolas_16_latin1_h[i]) * recip_height;
            font[i].x0 = stb__consolas_16_latin1_x[i];
            font[i].y0 = stb__consolas_16_latin1_y[i];
            font[i].x1 = stb__consolas_16_latin1_x[i] + stb__consolas_16_latin1_w[i];
            font[i].y1 = stb__consolas_16_latin1_y[i] + stb__consolas_16_latin1_h[i];
            font[i].advance_int = (stb__consolas_16_latin1_a[i]+8)>>4;
            font[i].s0f = (stb__consolas_16_latin1_s[i] - 0.5f) * recip_width;
            font[i].t0f = (stb__consolas_16_latin1_t[i] - 0.5f) * recip_height;
            font[i].s1f = (stb__consolas_16_latin1_s[i] + stb__consolas_16_latin1_w[i] + 0.5f) * recip_width;
            font[i].t1f = (stb__consolas_16_latin1_t[i] + stb__consolas_16_latin1_h[i] + 0.5f) * recip_height;
            font[i].x0f = stb__consolas_16_latin1_x[i] - 0.5f;
            font[i].y0f = stb__consolas_16_latin1_y[i] - 0.5f;
            font[i].x1f = stb__consolas_16_latin1_x[i] + stb__consolas_16_latin1_w[i] + 0.5f;
            font[i].y1f = stb__consolas_16_latin1_y[i] + stb__consolas_16_latin1_h[i] + 0.5f;
            font[i].advance = stb__consolas_16_latin1_a[i]/16.0f;
        }
    }
}

#ifndef STB_SOMEFONT_CREATE
#define STB_SOMEFONT_CREATE              stb_font_consolas_16_latin1
#define STB_SOMEFONT_BITMAP_WIDTH        STB_FONT_consolas_16_latin1_BITMAP_WIDTH
#define STB_SOMEFONT_BITMAP_HEIGHT       STB_FONT_consolas_16_latin1_BITMAP_HEIGHT
#define STB_SOMEFONT_BITMAP_HEIGHT_POW2  STB_FONT_consolas_16_latin1_BITMAP_HEIGHT_POW2
#define STB_SOMEFONT_FIRST_CHAR          STB_FONT_consolas_16_latin1_FIRST_CHAR
#define STB_SOMEFONT_NUM_CHARS           STB_FONT_consolas_16_latin1_NUM_CHARS
#define STB_SOMEFONT_LINE_SPACING        STB_FONT_consolas_16_latin1_LINE_SPACING
#endif

