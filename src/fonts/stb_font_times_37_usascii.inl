// Font generated by stb_font_inl_generator.c (4/1 bpp)
//
// Following instructions show how to use the only included font, whatever it is, in
// a generic way so you can replace it with any other font by changing the include.
// To use multiple fonts, replace STB_SOMEFONT_* below with STB_FONT_times_37_usascii_*,
// and separately install each font. Note that the CREATE function call has a
// totally different name; it's just 'stb_font_times_37_usascii'.
//
/* // Example usage:

static stb_fontchar fontdata[STB_SOMEFONT_NUM_CHARS];

static void init(void)
{
    // optionally replace both STB_SOMEFONT_BITMAP_HEIGHT with STB_SOMEFONT_BITMAP_HEIGHT_POW2
    static unsigned char fontpixels[STB_SOMEFONT_BITMAP_HEIGHT][STB_SOMEFONT_BITMAP_WIDTH];
    STB_SOMEFONT_CREATE(fontdata, fontpixels, STB_SOMEFONT_BITMAP_HEIGHT);
    ... create texture ...
    // for best results rendering 1:1 pixels texels, use nearest-neighbor sampling
    // if allowed to scale up, use bilerp
}

// This function positions characters on integer coordinates, and assumes 1:1 texels to pixels
// Appropriate if nearest-neighbor sampling is used
static void draw_string_integer(int x, int y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0, cd->t0); glVertex2i(x + cd->x0, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t0); glVertex2i(x + cd->x1, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t1); glVertex2i(x + cd->x1, y + cd->y1);
        glTexCoord2f(cd->s0, cd->t1); glVertex2i(x + cd->x0, y + cd->y1);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance_int;
    }
    glEnd();
}

// This function positions characters on float coordinates, and doesn't require 1:1 texels to pixels
// Appropriate if bilinear filtering is used
static void draw_string_float(float x, float y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0f, cd->t0f); glVertex2f(x + cd->x0f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t0f); glVertex2f(x + cd->x1f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t1f); glVertex2f(x + cd->x1f, y + cd->y1f);
        glTexCoord2f(cd->s0f, cd->t1f); glVertex2f(x + cd->x0f, y + cd->y1f);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance;
    }
    glEnd();
}
*/

#ifndef STB_FONTCHAR__TYPEDEF
#define STB_FONTCHAR__TYPEDEF
typedef struct
{
    // coordinates if using integer positioning
    float s0,t0,s1,t1;
    signed short x0,y0,x1,y1;
    int   advance_int;
    // coordinates if using floating positioning
    float s0f,t0f,s1f,t1f;
    float x0f,y0f,x1f,y1f;
    float advance;
} stb_fontchar;
#endif

#define STB_FONT_times_37_usascii_BITMAP_WIDTH         256
#define STB_FONT_times_37_usascii_BITMAP_HEIGHT        154
#define STB_FONT_times_37_usascii_BITMAP_HEIGHT_POW2   256

#define STB_FONT_times_37_usascii_FIRST_CHAR            32
#define STB_FONT_times_37_usascii_NUM_CHARS             95

#define STB_FONT_times_37_usascii_LINE_SPACING          24

static unsigned int stb__times_37_usascii_pixels[]={
    0x00088000,0x20000800,0x00020018,0x73100000,0x32e00159,0x911ccccc,
    0x80799999,0x0008804b,0x00401300,0x00040000,0x004c1351,0x0006604c,
    0x0006e201,0x6ef76dc4,0x40002dff,0x0b760ffa,0x5d700f50,0x06447200,
    0xbfff7000,0xb809fffb,0x32ffcccc,0x07999bff,0xb00d6ecc,0x1f100009,
    0x0001fd50,0x007f6a00,0xb9ffdff7,0x3fae203f,0x09fffd70,0xfe80fea8,
    0x67e4c007,0x07d97300,0x30bff600,0x103d409b,0x5d30019d,0x44001e98,
    0x6d440dfd,0x3fe001ef,0x7001ff32,0x9ffdddff,0x80006a83,0x7fffe45b,
    0x7dc00000,0xdb101fff,0x0fffe443,0x547fff64,0x85ffffff,0x4c0ffffb,
    0xf7001fff,0x0dc80017,0x4077d400,0x20f504f8,0x3f7004f8,0x54013a20,
    0xffe803ff,0x265ff002,0x5fec00ff,0x8ffb14b8,0x740001f8,0x00ffe843,
    0xffd84000,0x3601fd01,0x3ff601ff,0xfffd51db,0x81ffd085,0x4402fff9,
    0x2a0001ed,0xfc800006,0x3fb07a81,0x9803f300,0x37fc402f,0x01fff880,
    0x1ff32ff8,0x8972fdc0,0x0004d87d,0x7fe403e2,0xf7000000,0x409f703f,
    0x3f201ffc,0x0dffb05f,0xff103ff2,0x0774403f,0x0025c000,0x2a17ee00,
    0x400ff887,0x1f9005f8,0x000fff40,0xff00dff3,0xf803fe65,0x0f312e3f,
    0x2dc000f5,0x0001ff90,0x107fea00,0x7fd401ff,0x407fee01,0xfb81fff9,
    0x00fff80f,0xb00001b6,0x7e400003,0xff987a86,0x000ff401,0x17fee09f,
    0x00fffa00,0x03fe65ff,0x0971ffc4,0x40007e0d,0x03ff203e,0x7fd40000,
    0x2a03fdc1,0x3fee01ff,0x20bff600,0x7fe80ffb,0x00007ee0,0x40000b30,
    0xa87a87fd,0x1bee02ff,0xff05f900,0xff70007f,0x997fc01f,0x9bfe00ff,
    0x09b0484b,0x6401f300,0x000000ff,0x6fc83ff5,0x700ffd40,0x7fe401ff,
    0xd80ffb83,0x009f307f,0x1d4c732a,0x01500074,0x21ea1bfa,0x3fa03ff9,
    0x237d4003,0x8002fff9,0x3e01fff9,0x401ff32f,0x00974ffd,0x2dc003d4,
    0x3303ff20,0x2a353000,0x037ec1ff,0xfb807fea,0x0ffee00f,0x3f603fee,
    0xd300fb06,0x9fd3915d,0xfc880590,0x50bff01f,0x209ff10f,0x44000ff9,
    0x3ffea3ff,0xfff88001,0x7ccbfe02,0x3ffee00f,0x0fc004bd,0xf900ba00,
    0x3ffff21f,0x6f7ec403,0x741ffcef,0x0ffd407f,0x5401ff70,0x0ffb82ff,
    0x4f885fc8,0x7f427cc0,0x3203b82f,0xf881fffe,0xff07a83f,0x001ff609,
    0xfff92ff4,0x3ffe0001,0x7ccbfe04,0x7ffec00f,0x026c004f,0xfc801f30,
    0xfffffd8f,0x47dd104f,0x6c1fffe8,0x3fea00ff,0x803fee01,0xffb80ffb,
    0xfb84fb80,0x6c1bea01,0xb009507f,0x0bf603ff,0x817ec1ea,0xfd0007ff,
    0x003ffecd,0x7c0bfff0,0x001ff32f,0x005ffffb,0x0b7003d4,0x239dff90,
    0xe82fffd8,0x1fff881f,0xf5027fe4,0x0ffdc03f,0x3ee0ff90,0xe83fa80f,
    0x403fe206,0x007705ff,0x3ea03ff7,0x0fd07a82,0x4001bfe2,0xfffb0ffd,
    0x2fff4000,0x3fe65ff0,0xffff7000,0x800fc00b,0x2ffc802e,0xfb8dff90,
    0x307ff605,0x3f203fff,0x07fee01f,0xff703fe8,0x9f05f301,0xf8827ec0,
    0x7005b03f,0x437403ff,0x303f987a,0x32000bff,0x1fff71ff,0x13ffe000,
    0x1ff32ff8,0x7fff4400,0x804c800e,0xffc800f9,0x23fff100,0x3ee02ff8,
    0x2fffd81f,0x807ffb22,0xdf304ffb,0x4407fdc0,0xa817c41f,0x1ff500ff,
    0x3ee003a0,0x2a1e401f,0xf500e4c7,0x3f20009f,0x03fff53f,0x07fff100,
    0x0ff997fc,0x7fff5c00,0x403d401f,0x1ff9005b,0xfb97fe40,0x07fea01f,
    0x3bffffe2,0x201ffaaf,0x7442fffb,0x03fee01f,0x40be60fc,0x1bf204fe,
    0xffb80344,0xf54e9801,0x3f201362,0xff70003f,0x00bffe29,0x80bffe60,
    0x01ff32ff,0xffe9cb80,0x7401f807,0x01ff9002,0xffc9ffdc,0x407fea00,
    0x52ffffe8,0x7fdc03ff,0x0dfdcefb,0xf807fdc0,0x7cc0fd40,0x09ff102f,
    0x7fdc012a,0xf54d9801,0xf7003762,0x3ea0009f,0x00fffe5f,0xf01bfea0,
    0x003fe65f,0x3ffa2970,0xf3026402,0x03ff2001,0xffb3ffa8,0x00ffd401,
    0x3ff506a2,0x4c47fdc0,0xff70009a,0x03ea1a01,0x7e403ff2,0x2005902f,
    0x5dc01ffb,0x03b31ea0,0x80027fd4,0x3ff24ffb,0x2ffd8006,0xff997fc0,
    0xf125c000,0x207a809f,0x3ff2005c,0x747fea00,0x3fea01ff,0x3ff50001,
    0x0007fdc0,0x0201ff70,0x1bf607e6,0x6983ffcc,0x807fee00,0xf987a86e,
    0x00bff103,0xfb0bff20,0x7fcc005f,0xf32ff806,0x2e06201f,0x7c03ff44,
    0x64005d02,0x3fee00ff,0x5405ffb0,0xf50001ff,0x07fdc03f,0x01ff7000,
    0x7f417c40,0x05fdd985,0x7fdc005b,0xf505f501,0x6ff81fa0,0x83ffb000,
    0x36006ff8,0x2ff801ff,0x16601ff3,0x00df912e,0x001f3099,0xf9007fe4,
    0x5037fdcd,0x2a0003ff,0x3fee01ff,0x3fee0000,0x641fc000,0x363a60ff,
    0x4005d84f,0x5fb01ffb,0x0bf60f50,0xe8003fec,0x4ff980ff,0x001ffb80,
    0x03fe65ff,0x3a25c3cc,0xc87a804f,0x07fe4005,0x7fcc3ff0,0x05ff502f,
    0x80bfee00,0x20001ffc,0x5fc80ffb,0xfffa86c8,0x4bfb0eec,0x202444ea,
    0xff881ffb,0xbff07a83,0x4001ff20,0x3fa606fe,0x1efd880d,0x7ccbfe00,
    0xb89f300f,0x4003bea4,0x2001742f,0x7f701ffc,0x883fff90,0x90003ffd,
    0x7fec07ff,0x3ff20002,0x20fffc41,0xfffd80f9,0x6777fd44,0x7dc01d81,
    0x50bff01f,0x209ff10f,0xf8001ffa,0xefea802f,0x002efedd,0x1ff32ff8,
    0x5c33fe60,0x4003ff54,0x0003e64c,0xfb85fff5,0x9fffd104,0xbfffbd75,
    0x3ff2a007,0x3f6e2cff,0x8002cfff,0x7fe83ffe,0x80a609d0,0x016a01a8,
    0x7fc07fee,0xff987a86,0x000ffa03,0xfc800ff5,0x20007fff,0x01ff32ff,
    0x7777fed4,0x4c000cfe,0x44001727,0x1efefffc,0xeffffc80,0x000cffa9,
    0x26666662,0x26666660,0x3fae0009,0x2a22dfff,0x0001f500,0x2e007a00,
    0x0ffb00ff,0x05ff50f5,0x36002fc4,0xffa8004f,0xff0004ff,0x2003fe65,
    0x001dda98,0x001a8540,0x000aa980,0x051054c4,0x00000000,0xd9000000,
    0x09b00000,0xfc81fee0,0xff987a86,0x8007dc01,0x30000ef8,0x0003fffd,
    0x03fe65ff,0x00009700,0x00000000,0x00000000,0x00000000,0x00013a00,
    0x3ee004d8,0x2a17ee06,0x800ff887,0x03f7005e,0xfffc8800,0x997fc001,
    0x14c000ff,0xb8000000,0x111002cc,0x11111111,0x2e111111,0x4ddddddd,
    0x00000000,0xdd880000,0x13a20000,0x6409f700,0xfb07a81f,0x803f3003,
    0x200002e8,0x000bffb8,0x03fe65ff,0xf9100000,0x11a0039d,0x2fe88dff,
    0xfffffff3,0xffffffff,0x3ffff2ff,0x00005fff,0x00000000,0x1000bf20,
    0x26c407d9,0x27c403f2,0x09f107a8,0x74407aa0,0x2e000004,0x9970adfd,
    0x3e65ff99,0x003cccdf,0x373be600,0xd300beff,0x7dc1ff30,0x2666666f,
    0x99999999,0xbbb71999,0x0009bbbb,0x00000000,0x1cfd9800,0x007f9310,
    0x5f35dff7,0x7a813660,0x2002fa60,0x0174c1d8,0x55100000,0x3333332e,
    0x99999911,0x17400007,0x456ffed4,0x7f502ea8,0x00027fcc,0x00000000,
    0x00000000,0xdffd7100,0x80079dfd,0x901dfffd,0x807a805b,0x237002eb,
    0x000000c8,0x00000000,0x880d1000,0x03efffeb,0x000a22dc,0x00000000,
    0x00000000,0x00260000,0x00000c00,0x00040031,0x00000000,0x00000000,
    0x53000c40,0x00024005,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0xacba8800,0x00110000,0x02200100,0x01988000,0x30002000,0xb880ea07,
    0x0390001b,0x00dd4400,0x00373000,0x001aca88,0x26666662,0x5cc40009,
    0x99999884,0x98199999,0x677fdc00,0x3004ffed,0xa80007fb,0x7fb500ef,
    0x9fd30000,0x55557bfb,0x7bfd9500,0x360b9001,0x9fb9fb04,0x0006b800,
    0x5dfbffb3,0x67f5c000,0xffc802fe,0xd800dfff,0x1fffffff,0x159dd500,
    0xffffffd0,0x6c1fffff,0x5fe980ff,0x203dfb10,0x003fffea,0x2a17fec0,
    0x0003fffe,0xff3077d4,0xeb80ffff,0x806ffc89,0xf907f03e,0x98017e45,
    0xff88001f,0x4001ba22,0x017ec3fc,0xffffbff7,0xffff980d,0xd8805fff,
    0x7ffcc04f,0xffffffff,0x2a17ffc6,0xffb803ff,0x07ff9083,0x40ef9800,
    0x0007ff90,0x7dc1ffc4,0x3ea009af,0x2017fe41,0x4c1f882f,0x802fd47f,
    0xdfd0004e,0xb8005f70,0x81ff886f,0x3fee21e9,0x333b601f,0x5401cccc,
    0xefd802ff,0xdccccccd,0x1077e43f,0x7ec00bff,0x07ff501f,0xff500000,
    0x7fdc0007,0x403ff881,0x01b907f8,0x43d407cc,0x03fc46fa,0xf8800364,
    0x004f983f,0x7e40bfe2,0xff900d85,0x0003e609,0x4400ffd4,0x81fd802f,
    0x001ffd80,0x7cc1bfea,0x8000003f,0x20003ff9,0xbff00ffd,0x0007fa80,
    0x6435c1ea,0x00ffc46f,0x260003f3,0x01fc84ff,0x4c03ff20,0xf30041ff,
    0x0013609f,0xb801ffc4,0x200df003,0xe8005ffb,0x3ff983ff,0xf9800000,
    0x3f20003f,0x80dfd00f,0x320006fb,0xbfb09b05,0x1f407ff0,0x0dff3000,
    0x6fe800df,0x0017fe20,0x07f305ff,0x8017f600,0x009f5000,0x2000bffe,
    0x7cc0fffb,0x8000003f,0x20003ff9,0xff882ffa,0x8037ec05,0x9ce99998,
    0x19bf9999,0x5ff11bf2,0x10001b20,0x3f621fff,0x17fe6002,0x4400ffd0,
    0xbfffb06f,0x07fee005,0x07f20000,0x007ffe20,0x307ffea0,0x200007ff,
    0x87ff300a,0xbff10028,0xe803ff50,0xfff5006f,0xffffffff,0x3ea1ffff,
    0x4c0ffc47,0xfe80000f,0x261ffacf,0x2e099999,0x7ff405ff,0x101f5000,
    0x3dffffff,0x0037fcc0,0x5006f800,0x30003fff,0xff985fff,0x77fff4c3,
    0x0ffe440d,0xfd33ff98,0xff3009ff,0x40ff6217,0xfffffffd,0x7333105f,
    0xf733333f,0x07fc4333,0x07d10df5,0x3ffee000,0x7ffe40cf,0x13ff23df,
    0x3003ffb0,0x3b72603f,0x703fffff,0xddb717ff,0x3ea00019,0x1fff9004,
    0x9fff1000,0xfa83ff98,0xfffdb01e,0x2affe603,0x02fffddf,0xdfdfff98,
    0x3fa66201,0x7000999e,0xfa81720d,0x1720bf63,0xfff98000,0x20bff604,
    0x7ec03ffc,0x27fd402f,0xffffc880,0xcedffd82,0x002fffeb,0xfb001fc8,
    0x7fc000ff,0x21ffcc5f,0xffb005e8,0x377fe603,0x101bfe20,0x2000223d,
    0x9b0006fe,0x9d701360,0x01f505fd,0x3ffee000,0x09f700ff,0xfb00fff6,
    0x3fff207f,0xf5000eff,0xfff81fff,0x00fffb83,0xfb0037c0,0x7fc000ff,
    0x11ffcc5f,0x7fe4009d,0x20bff301,0x17a00ffc,0x01bfa000,0x02f81f40,
    0x0be20330,0x802fbae2,0xfff8cfe8,0x3601fb06,0x7fec02ff,0x3ffae603,
    0x3fa2007f,0x817fe24f,0x26005ffc,0xff90404f,0x3fe0001f,0x99ffcc3f,
    0x7fdc004f,0x207ff301,0xff501ffb,0x01333357,0x2001bfa0,0x01f881f8,
    0xe885d800,0xf306e99e,0x1fffdc7f,0xffc80be2,0x017fec03,0x001fffa8,
    0xffa9bfe2,0x03ffea05,0xf700fe40,0x03fff51d,0x85fff100,0x03f9bff9,
    0x301ffb80,0x3fee07ff,0xfffff501,0x019fffff,0xa88037f4,0xaaaabfca,
    0x002aaafc,0x2fd80fa8,0x7ff117ea,0x641fffd0,0x01ffdc05,0xb8007ffa,
    0x7ec004ff,0x8813fee7,0xdf001fff,0xf9afff80,0xf98002ff,0x6ffcc1ff,
    0xfb8004ff,0x07ff301f,0xfb807fee,0xffffffff,0x0dfd00ff,0x3ffffea0,
    0xffffffff,0x3e2000ff,0x220ff982,0x03ff60ff,0x7cd7ffea,0x027fd400,
    0xf0003ffa,0x7fa800df,0xfd013fea,0x09f3005f,0xfff0ffd8,0xfff50007,
    0xffd7ff30,0x1ffb8005,0x2e07ff30,0x4cf201ff,0xfdbaaa99,0x000dfd03,
    0x001360bb,0x1fea09b0,0x37fccbfe,0x5d5fffb0,0x80bff300,0xfd8006ff,
    0x137c4005,0xffc80bff,0x801fc801,0x01bfee0a,0x260bff60,0x1fff8bff,
    0x407fee00,0xff703ff9,0xc8016e03,0x000dfd06,0x000be07d,0xff900fb8,
    0x3ff29ff0,0x3fffe205,0x81bfa005,0xc8004ff9,0x27c4004f,0xff701bfe,
    0x000df001,0x30017ff4,0x3fe60bff,0x001dff53,0x7cc07fee,0x03ff703f,
    0x25c007f3,0x44006fe8,0x000f881f,0x7e405f10,0xffb4ff86,0x7ffcc01f,
    0xffb8200e,0x003ff500,0xa8005fd0,0x203fec1f,0x4f9806fc,0x1bfe6000,
    0x300ffd80,0x2ffe47ff,0x301ffb80,0x3fee07ff,0x1005fe81,0x01bfa03d,
    0x0f501f30,0x2a026c00,0xf93ff87f,0x7f4407ff,0x25981fff,0xbfb02ff8,
    0x00bf3000,0x7ff109d0,0x64017f40,0x7d40001f,0x1efc804f,0xfb0ffe60,
    0x3ff7009f,0x5c0ffe60,0xdffd81ff,0xe80baa01,0x835c006f,0x0d70005c,
    0x7c41ff30,0x3dfff51f,0xfff9bf50,0x85d5137f,0x0ff986f9,0x87f602b8,
    0x6d881dd8,0x2603fea0,0x00dd005f,0x07bfa200,0x50037fa6,0xfff889ff,
    0x80ffe403,0xff703ffa,0xffffd105,0x03dfdddd,0x6c007ff8,0x30009b04,
    0x8bf6003f,0x7ffe45fb,0x23fecbdf,0xfffffffa,0x7449f705,0xbeffb81f,
    0x4c0dfb88,0xebabefff,0x20dfd804,0x9f3005ea,0xfeb80000,0x02effddf,
    0xf70bff70,0x7ff407ff,0x20bff903,0x36a04ffd,0x03deffff,0x002fff98,
    0x0017c0fa,0x3ba00274,0xfb81efa9,0x80dfffff,0x0cffffe9,0x33f7fae0,
    0xfffff100,0x7fe407df,0x2002deff,0x04eedffb,0x00007f20,0x001aa980,
    0x3bffffae,0xdffffd33,0x7ffff5c7,0xffffd51d,0x3fffae7d,0x00c401df,
    0xfffffb50,0x00a8019b,0x06c80015,0x0cedb880,0x006aa620,0x22000d44,
    0x02aa6001,0x00015100,0xa8000a98,0x00000002,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0xcb980000,
    0x2ea2001a,0x33310009,0x10133333,0x10135975,0x00133333,0x4ccccccc,
    0x99751000,0x98828837,0x20999999,0x99999999,0x99999880,0x26666621,
    0x4cc00999,0x33109999,0x01333333,0x4ccccccc,0x81597300,0x2ea20019,
    0x220a80ac,0x99999999,0x26666600,0x6ff54099,0x2601efdb,0x02ffddfe,
    0xffffec98,0x5675c2df,0x64c1effc,0x000ffffe,0x39ffffb7,0xdeffda80,
    0x4badfedc,0xfffffda8,0x3fffb21d,0xec881cff,0xfb50cfff,0x01bfffff,
    0x3fffffd8,0xffffff95,0x7fedc039,0x7f4c2dff,0xeadffedf,0xeffea802,
    0xf9aceecc,0x3ffffaa0,0x3b202dff,0x2e1dffff,0x07f440cf,0xfd306fcc,
    0x7fff4009,0x6c40fb80,0xfff502ff,0x0ef9800d,0x00affd80,0x5409ffd3,
    0x3f604fff,0x3ff002ff,0x03fffea0,0x105ff880,0x4001ffff,0xefa81ff9,
    0x3ffee20b,0x2fbfa202,0x1fffc880,0x03ffffa8,0x883dff10,0x8df900ff,
    0x5ff506f8,0x217ff200,0xbff305f8,0x02fffd40,0xfd1017e0,0x17f6003f,
    0x4c09ffd0,0x9f001fff,0x007ffc80,0x3f600fe8,0x85f8005f,0x3ea02ff8,
    0x0bff302f,0x5c07fea0,0xf1003fff,0x40bf701f,0x0ff60ff9,0xf7006fd8,
    0x40ff509f,0xff100fff,0x27c007ff,0x8007ffa0,0x7fdc06f8,0x01ffec06,
    0x3e200fcc,0x3e2002ff,0x027fe403,0x3fe42740,0x7c417dc0,0x17dc006f,
    0x200fffb0,0x0df902fb,0xff887fc4,0x00ffea02,0x3ea13fee,0x05ff902f,
    0x0bfffbe2,0xff901f40,0x80d70007,0x2a01fff8,0x06b806ff,0x4009ffb0,
    0x7fe400fb,0xd84e8003,0xb05f006f,0x7d0005ff,0x01fffc40,0x3ff70274,
    0xffa9bea0,0x017fe201,0x3e213fee,0x03ff903f,0x3fffabe2,0xf303e800,
    0x1a0001ff,0x880fff60,0x1f400fff,0x00fff980,0xff9009d0,0xd09d0007,
    0x85b003ff,0x70006ffa,0x0fffb807,0xf9803ee0,0x23fd80ef,0x7fc02ffb,
    0x04ffb807,0x03fec073,0xdfff15f1,0xfb03e801,0x00c0009f,0x3a037fd4,
    0x03e603ff,0x803ffe80,0xffc801f9,0xc84e8003,0x15c01eff,0x40013ffa,
    0x5ffe8038,0xfd005f30,0x227d41df,0x7f403ffc,0x27fdc00f,0x027fc400,
    0x3ffe65f1,0x7c41f405,0x000002ff,0xf301fff8,0x03640dff,0x201bfee0,
    0x7ff9006c,0xf509d000,0x44005fff,0x00002fff,0x41fffcc0,0xfff1005e,
    0xf707f53f,0x1ffe809f,0x0027fdc0,0x3e2037e4,0x80fffea2,0x1fffb83e,
    0xfc800000,0xfffd704f,0x2000fa03,0x3e202fff,0x07ff9003,0x3f209d00,
    0xb801efff,0x00000fff,0x20fffb80,0x3a6000fb,0xf501ffff,0x0fff80df,
    0x0027fdc0,0xf1007fe2,0x02fffc85,0x0fff907d,0x3e600000,0xff97d06f,
    0x0001f309,0x7dc0bff9,0x07ff9000,0x7ec09d00,0x200cffff,0x00007ffc,
    0x457ffa00,0xfe88003f,0xfff104ff,0x403ffc05,0x5c004ffb,0x82f8803f,
    0x3e81fffd,0x2007ffd8,0xefffffdb,0x20fffc02,0x87ff99f9,0xff10006c,
    0x8013a03f,0xe8003ffc,0x7fffdc04,0xfffb03ff,0x4c000000,0x006dafff,
    0xbfffbf50,0x83fff501,0xb806ffd8,0x274004ff,0xe882f880,0x41f40eff,
    0x4000fffd,0x9004fffb,0x3e6c89ff,0x001fc1ff,0xf309ffb0,0x1ffe4003,
    0x44027400,0x1efffffd,0x0003ffec,0x3fff2000,0x2fc8001f,0x2e0dfff9,
    0xdedcdfff,0xffb804ff,0x801aa004,0xfff302f8,0xffc83e8b,0x7fc4002f,
    0xfff3002f,0x93ff23f8,0x260000f9,0x036c0fff,0x000fff20,0xfe98013a,
    0x3f20ffff,0x000000ff,0x0027ff40,0x3fee27dc,0x9dd9304f,0x2007ffa5,
    0x36004ffb,0x80be2001,0x0fa4fffa,0x000fffee,0xe8007ffe,0x4c1f32ff,
    0x001727ff,0xf88fffa0,0x1ffe4002,0x4001f400,0x2e6ffffb,0x00002fff,
    0x01ffe400,0x7dc1fe20,0x7fd4007f,0x09ff7006,0x3e200340,0x97ffdc02,
    0x5fff983e,0x00fff800,0x2e53fee0,0x03f97ff4,0x26ffb800,0xffb8007b,
    0x003f8004,0x25fffd10,0x0003fffa,0x1ffe4000,0xc81bee00,0x3fa002ff,
    0x7ff7002f,0x22002400,0xfffd802f,0xfffd03e9,0x01fff000,0x7c7ffc40,
    0xf9dffb83,0xfff00000,0x2e0013a5,0x3f8005ff,0xfe8800d8,0x0bfff14f,
    0xfc800000,0x27f4003f,0x4c013fe0,0x3ee004ff,0x0051002f,0xfd002f88,
    0x3ea07fff,0x7fc001ff,0x7ff4000f,0xfff880fd,0x3200005d,0x001f9dff,
    0x4006ffa8,0x002d81f9,0x7fdcbff5,0x00060006,0xd000fff2,0x04fd809f,
    0xb800dfb0,0x000001ff,0x7c400be2,0x3fa03fff,0x7ffc006f,0x7ffdc000,
    0x0bfffa05,0xfff88000,0xff10006e,0x83dc001f,0x7ff3005d,0x001fffc4,
    0x7e40024c,0x2fe4003f,0x3200bf60,0x832a00ef,0x02000ffb,0x4005f100,
    0x2603fff9,0x3e003fff,0x7c4000ff,0x3fee02ff,0x6c00000f,0x20002fff,
    0xf3003ffc,0x2003f609,0x7fd42ffb,0x0162001f,0x001ffe40,0x7c407fe2,
    0x00efb806,0x3fc97fe2,0x007fd100,0x2e001fcc,0x7ec403ff,0x1fff004f,
    0x80ffb000,0x00005ff8,0x0007ff98,0x4c01ffd8,0x07ff605f,0x3e60bff0,
    0x1e9802ff,0x09ffd000,0x881df500,0x3f6201fd,0x2fff8804,0x7fdc00bd,
    0x037f2006,0x2007f900,0x980bdffb,0x8000effc,0x2fd805fa,0x9fd00000,
    0xfff10000,0x77edc437,0x2ffff600,0x03bfae21,0xaceffe98,0x001db730,
    0x03bffe60,0x337fa600,0xeca80cfe,0x3ee000cf,0x2000cdff,0x64404ff9,
    0x01dfffff,0xc9800f60,0xfedceffe,0x7c0001cf,0x000fa802,0x001f7000,
    0x3fff2200,0x00cfffff,0x7ffed5ec,0x1003fffe,0xffffffb9,0x3ae0007d,
    0x2dffffff,0x01a98800,0x80006aa2,0x220002a8,0x40000001,0x2a200018,
    0x000009aa,0x001c400e,0x0000e000,0x2aeea620,0x2a60a001,0x200009aa,
    0x0001aaa9,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x26600000,0x99999999,0x22199999,
    0x99999999,0x99998809,0x26662199,0x20019999,0x99999998,0x99999999,
    0x33331099,0x33000013,0x4cc43333,0x09999999,0x26666200,0x4c419999,
    0x80999999,0x99999998,0x99980001,0x22199999,0x99999999,0x99999981,
    0x33310999,0x33333333,0x98033333,0x3fffe603,0xffffffff,0x3f625fff,
    0x3effffff,0xeffffca8,0xfffd710c,0x5bffffff,0x3fffff60,0xffffffff,
    0xd932ffff,0x0001ffff,0x1effffdc,0xfffffd71,0x5c40059d,0x2dfffffd,
    0x7ffffe4c,0xffeb881c,0xefffffff,0xfb71000c,0x217dffff,0xfffffdb8,
    0xfffdb83d,0xd710bdff,0xffffffff,0x20ffffff,0x3e606fd9,0x99999abe,
    0x00fffd99,0x00dffff5,0xfc807ff5,0xfeca9aff,0x56ff40df,0x9effb99a,
    0x82ffca99,0x0004fffd,0x700bfffe,0x00007fff,0xd803fff9,0xf9000cff,
    0xf93335ff,0xfa8007ff,0x7fe403ff,0xfff9801f,0x837fe404,0x6cc7fca9,
    0x3aa06fff,0x2fff9800,0x03fffcc0,0x7d401fdc,0xeffe886f,0x7fd413a0,
    0xf707f305,0x70001fff,0xf300ffff,0x500001ff,0xff880fff,0x37fd4002,
    0x005fff98,0x5007ffe2,0x7fc00fff,0x37fd402f,0x51707dc0,0x01d40dff,
    0x802fff44,0x2603fffa,0xdff3004f,0xe8fffe20,0x40bff500,0xffefa83b,
    0xffee8003,0x07ff8806,0x0dff3000,0x98001fe8,0x3fea06ff,0x3ffe000f,
    0x037fcc00,0xa803ffd0,0x01d006ff,0x01b81bfe,0x000effd8,0x2203fff2,
    0x3fe6005e,0x59bff606,0x8817fea0,0x6ffbf983,0x7fdfd400,0x07ff8806,
    0x0dff3000,0x98000fec,0x7ffc06ff,0x03ffe003,0x400dff30,0x7cc01ffe,
    0x2015006f,0x200606fe,0x8001fffa,0x0ed85ffe,0x81bfe600,0xa801fffb,
    0xf98005ff,0x2002ffe8,0x806ff9de,0x00007ff8,0x3f60dff3,0x3fe60001,
    0x02fff406,0x9801fff0,0x3fa006ff,0x37fcc01f,0x037f4000,0x09fff100,
    0x8bffe600,0x7cc001fb,0x3ffea06f,0x05ffa802,0xffb8f980,0xf35f3006,
    0xfff100df,0x3fe60000,0x0001fd86,0x3e037fcc,0x3fe004ff,0x37fcc00f,
    0x803ffd00,0x00406ff9,0xb00037f4,0xc8000dff,0x02fa8fff,0x206ff980,
    0xa800fffb,0xf98005ff,0xb005fff0,0x201bfe6d,0x00007ff8,0x7ec4dff3,
    0xff980001,0x0fffe606,0x400fff80,0x3a006ff9,0x7fcc01ff,0x3a00ae06,
    0xff70006f,0xfd00003f,0x20009fbf,0x3f606ff9,0xbff5006f,0x2e1f3000,
    0x97c405ff,0xf8806ff9,0xf300007f,0x007fa2df,0x037fcc00,0xf800dffd,
    0x7fcc00ff,0x07ffa006,0x740dff30,0x006fe802,0x003fff98,0x0dfff300,
    0x837fcc00,0x5001fffb,0xf3000bff,0x807ffe21,0x01bfe67c,0x0001ffe2,
    0x7f477fcc,0x3e600001,0xeffd986f,0x07ffc000,0x801bfe60,0x7cc01ffe,
    0xda9999ef,0x06fe802f,0x005ffe80,0x07ffdc00,0x1eff9800,0x00bfffaa,
    0x8005ffa8,0x17ff20f9,0xdff31fc4,0x00fff100,0x3bffe600,0x200005ff,
    0xdcaafff9,0xf0003eff,0xff9801ff,0xeeeeeeef,0x01fffeee,0x7fffffcc,
    0xe802ffff,0x7fe4006f,0x5400000f,0x30005fff,0xffffbfff,0xfa80019d,
    0x0f98005f,0x2e03ffe2,0x01bfe60f,0x0001ffe2,0x7fe77fcc,0xf300005f,
    0x9ffd99ff,0x0fff8000,0x557ffcc0,0xaaaaaaaa,0x7cc01ffe,0xb99999ef,
    0x06fe802f,0x00bffe60,0xff9f3000,0xff30007f,0xfa80000d,0x0f98005f,
    0x27c27fec,0x2201bfe6,0x300007ff,0x3fff2dff,0xff980005,0x007ffe66,
    0x400fff80,0x3a006ff9,0x7fcc01ff,0x3a00b206,0xffd1006f,0xe880000b,
    0x001fff94,0x0006ff98,0x002ffd40,0x3fe607cc,0xf303ee0f,0xfff100df,
    0x3fe60000,0x017fff26,0xb8dff300,0xf0000fff,0xff9801ff,0x07ffa006,
    0x540dff30,0x006fe802,0x0001fff9,0x7ff46d80,0x37fcc005,0x3fea0000,
    0x80f98005,0x217a3ffd,0xf8806ff9,0xf300007f,0x5fffc8df,0x1bfe6000,
    0x40017ff6,0x7cc00fff,0x3ffa006f,0x037fcc01,0x01bfa002,0x0007ffea,
    0xf981f900,0x3e6003ff,0x5400006f,0xf98005ff,0xf57ffa80,0x00dff303,
    0x0000fff1,0x3ee1bfe6,0xf30005ff,0x7fff10df,0x01fff000,0x2006ff98,
    0x7cc01ffe,0xfe80006f,0x27ffc406,0xfa805300,0x01fff902,0x001bfe60,
    0x00bff500,0x3fa01f30,0xff305ebf,0x0fff100d,0xff983980,0x0bfff706,
    0x20dff300,0x4000fffa,0x7cc00fff,0x3ffa006f,0x037fcc01,0x2037f400,
    0x64006ffd,0xd013e201,0x3e600dff,0x5400006f,0xf98005ff,0x5ffff500,
    0x201bfe60,0x6c007ff8,0x206ff981,0x4005fffb,0x3f206ff9,0x7ffc006f,
    0x037fcc00,0x9803ffd0,0xe80006ff,0x3ffee06f,0x881e2001,0xfff9805e,
    0x06ff9804,0x37fd4000,0xd007d400,0x7fcc0dff,0x07ff8806,0x7fcc1aa0,
    0x6fffdc06,0x0dff3000,0x2005ffe8,0x7cc00fff,0x3ffa006f,0x037fd402,
    0x8837f400,0x22003fff,0x01fd106e,0x00bfff60,0x0000fff5,0x8006ffb8,
    0x3fee01fb,0x01ffee02,0x2003ffe6,0xfff504fa,0x1dfffb00,0x80fff500,
    0x8803fff8,0x7d401fff,0x3ffe007f,0x03ffd402,0xe837f400,0xaaaaafff,
    0xffebaaaa,0x00fffa85,0x05ffffb0,0x00bfff62,0x7ffec400,0x13f62001,
    0x36207f88,0x32202fff,0xaaabefff,0x81ffecaa,0x401fffd8,0x0bfffffb,
    0x05fffb10,0x01cfffa8,0x8813ffee,0xa801fffd,0x36205fff,0x20001fff,
    0x7dc0fff8,0xffffffff,0xffffffff,0x3ffffae3,0x3ffae05f,0xb33fffff,
    0x9dffffff,0x3ff66000,0x203effff,0xcfffffd9,0xfd983c80,0x24efffff,
    0xffffffc9,0xffffffff,0x7ffecc7f,0xfd84efff,0xefffffff,0xfffffb31,
    0x7fec09df,0xff912fff,0x219dffff,0xffffffd9,0xfffec84e,0xfb31ceff,
    0x09bfffff,0x7fffed40,0x000002df,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x7fffe400,0x7ff4c0df,
    0x3333312f,0x33333333,0x99881333,0x00999999,0x2c980000,0x99999988,
    0x00000999,0x40000660,0x5001aca8,0x00019801,0x000000d3,0x20000000,
    0x98060a98,0x42b800a9,0x7403fff9,0x3ffae20f,0xffffffff,0x5c45ffff,
    0xfffffffe,0x00bdefff,0x84fe8800,0xfffffeb8,0x2deeffff,0x00bd0000,
    0xffffc880,0x3ffa01ef,0x4000b600,0x00000079,0x00ed43aa,0x377ee000,
    0xfea85eff,0xf704ffed,0x04ffb85f,0xfff701fc,0x037dcc40,0x3357fff9,
    0x1bfffb75,0x27fe4000,0x827fff20,0x01effea9,0x003fe600,0xfffffe80,
    0xff882fff,0x005f301f,0x00001e60,0x219ff710,0x0002efd8,0x3ee20fa8,
    0xf5077d45,0x07ff909f,0x07d40dff,0x200fff30,0x1bfea06a,0x05fffd30,
    0x09fff500,0x5c06ffa8,0x90000fff,0x320007ff,0x3ffaa2df,0x106fc80f,
    0x260005ff,0x93000007,0x326017df,0xb0000bff,0x7ff17609,0xff70ffb0,
    0x205ff707,0x3ffc404e,0x3e606880,0xffd8806f,0x2fe2001f,0x7fcc04ff,
    0x04ffc806,0x07fff880,0x3a207f00,0x220104ff,0x30002ffe,0xda80000f,
    0x2e2002df,0x22001cff,0x7c4b306f,0x40ffc83f,0xff881ffa,0x4401f986,
    0x812007ff,0x3a006ff9,0xbb000fff,0xf9809ff1,0x7ff9806f,0xffefb800,
    0x202d4002,0x2a006ffa,0x6fffffff,0x0001e600,0x0073fae2,0x05bfd500,
    0x0e09ff30,0x1ff701d9,0xf700ff98,0x8806c83f,0x300007ff,0x7d400dff,
    0x8fb804ff,0x7cc04ff8,0x3fff006f,0xffbce800,0x40054005,0x262006ff,
    0x0099bffb,0x88001e60,0x0000bffc,0x05f7ecc0,0x005dffd0,0x03ffd710,
    0x2ffc40df,0x3fe200fe,0xf9801807,0x7fec006f,0xf897c407,0x37fcc04f,
    0x007ffcc0,0xfff13f50,0xfd000003,0x5ff30009,0x001e6000,0x000bbf6a,
    0x3ff22000,0xffffa80c,0xbed9802e,0x05e81ffc,0x0fa8ffe4,0x807ff880,
    0x06ff9806,0x017ffd40,0x027fc49d,0x2e01bfe6,0x2ec006ff,0x00009ff9,
    0x30007ff0,0x3baa05ff,0xefeeeeee,0x0eeeeeee,0x0003bfd3,0xfd710000,
    0xfffe981b,0x45fb104f,0x04d81ffb,0x04eaffc4,0xa80fff10,0x06ff9807,
    0x827ffcc0,0x027fc46c,0xf301bfe6,0x7cc007ff,0x003ffe62,0x00ff8800,
    0x302ff980,0xb9999999,0x9999999f,0x2fff2219,0x40000000,0x500cfeb8,
    0xf98dffff,0x40ffdc1e,0xaffc802a,0xfff1001f,0xd7533333,0x0dff300f,
    0x85fff880,0x27fc41f9,0x103bfe60,0x005fff73,0x3ffe86c8,0x13ea0000,
    0x017fcc00,0x88007980,0x0001cffb,0x5ffe4400,0x5fff7000,0x3ee0bfe6,
    0x3e20001f,0x3e2006ff,0xffffffff,0xff9807ff,0x6fff8006,0x4ff883e8,
    0x7ffffcc0,0x0effffff,0x541fc400,0x200006ff,0xf30000fe,0x1e60005f,
    0x5bfd5000,0xfda80000,0x540e602e,0x20ff95ff,0x40001ffb,0x22002ffd,
    0xfd3107ff,0x00dff300,0x5c8bfff0,0x9809ff10,0xba999fff,0x002effec,
    0x7ffc03ee,0x2fb80001,0x5ff30040,0x001e6000,0x01f7ecc0,0x073fae00,
    0x7f403e60,0xf703ffb5,0xf980003f,0x3ffc4007,0x3e601e20,0x7fc4006f,
    0x4403ea4f,0x7fcc04ff,0x77ffdc06,0x3204e800,0x440005ff,0x37fa204f,
    0x002ff980,0x80000f30,0x000cffc8,0x0017ff91,0x3fd81fcc,0xffb89ff7,
    0x200038af,0x7fc4004e,0xf9805807,0x7fcc006f,0x3339f12f,0x39ff3333,
    0x0dff3013,0x80bfff50,0xcccccdfa,0x000fffdc,0xff901760,0x05ff309f,
    0x0001e600,0x0eff5c40,0x002efd98,0x4417ff30,0x3bffe26f,0xefffacfc,
    0x03f30001,0x807ff880,0x06ff9801,0xb8fffd40,0xffffffff,0x83ffffff,
    0xfd006ff9,0x676c01ff,0xeccccccc,0xd90003ff,0x7fffa801,0x0002ff98,
    0x000000f3,0x3a61dfb5,0x4c0001df,0xbeddffff,0x977ff540,0x0001eff8,
    0x3e200172,0xf300007f,0xffd800df,0x3ffffee6,0xffffffff,0x06ff983f,
    0x205fff70,0xffa802f8,0x00ea8006,0xf30f3530,0x1e60007f,0xc9800000,
    0x00001950,0x801a9884,0x80001008,0xf88002f8,0x4144007f,0x2a006ff9,
    0x26621fff,0xf9999999,0xf98099cf,0xfff5006f,0xe801b203,0x3e6002ff,
    0x885b8000,0x400325ff,0x00000048,0x00000000,0x80000000,0xff10005d,
    0x981d800f,0x3fa006ff,0xff88005f,0x037fcc04,0xf107ffc8,0x2ffdc007,
    0x0401f980,0xdfff01e8,0x0000005d,0x00000000,0x00000000,0xfedffc80,
    0xfff10000,0xf983d400,0xffd8806f,0xff88000e,0x037fcc04,0xb827ffc4,
    0x3fe2000f,0x00fd401f,0x40b903a2,0x0003eff9,0x00000000,0x00000000,
    0xfff80000,0x260002ff,0x9f3007ff,0x301bfee0,0x40007ffd,0x7dc04ff8,
    0x7ff4406f,0x006f880d,0x2a05ffe8,0xbaaaaacf,0x0fa65fcc,0x00000040,
    0x00000000,0x00000000,0x39ff5000,0xfffc8000,0xa999999c,0xfd881ffc,
    0xca99abff,0x0001effd,0xb1027fc4,0x33357fff,0x209fff95,0xe8006fd8,
    0x7d40cfff,0xffffffff,0x00262fff,0x00000000,0x00000000,0x00000000,
    0x4c000100,0xffffffec,0xffffffff,0x7fffecc6,0xbdefffff,0xf100001a,
    0xfffb309f,0xffffffff,0x3ee037bd,0x400dffff,0xfffffffd,0xffffff33,
    0x0fffffff,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x06a60000,0x000a9880,0x3ee00544,0x4c0dffff,0xfdb1fffe,0xfffd83ff,
    0x7fffe40f,0xffffd52f,0x5fffd87f,0x200c4130,0x10054419,0x204c0015,
    0x7fcc00a8,0xffffffff,0xffff51ff,0x3ffa65df,0x0001003f,0x10100054,
    0x002b8857,0xfffdfb10,0x7f7f4c05,0x3b2201ef,0x2204ffed,0x37404ffe,
    0xfd01ffd8,0x1fff301f,0x540dffb0,0x97f5c43f,0x75c46ffc,0xbfffb13f,
    0x77fff4c1,0x25fd7100,0x204fffd9,0x9999acf9,0xfb84ffd9,0x077cc2ff,
    0x8002fc80,0xff9005f8,0xf90ffe45,0xdfa8001f,0x2e0fff21,0x5ffd10bf,
    0x7441dd10,0xbff300ef,0xff701f80,0x403ff203,0xdff01ffc,0x3fae3640,
    0xffffbaff,0x37fffd71,0x2bfff9bf,0x5fffcefa,0x9afffeb8,0x02fffdef,
    0x37fd40b3,0xec8bff90,0x013fa000,0x100bfb20,0x3f61ffff,0x00bffa2f,
    0xff885f98,0x220fe60f,0x07f40fff,0xfd037fc4,0xb81aa01f,0x1ff701ff,
    0x6413fe20,0x205d00ff,0x9b55cffb,0x41bbff70,0x20ebffe8,0xf901ffd8,
    0x7fcc1bbf,0x3e207307,0x7ff400ff,0x09803f52,0x40088ff6,0xe806c9f9,
    0x3ffb2fff,0xb000ffec,0x83ff603f,0x7ffb00fd,0xff9027ec,0x40ffea07,
    0x07fee02e,0xfd007fdc,0x213fea0f,0x3bfea079,0x05ff9800,0x3ea0bff7,
    0x0bff502f,0x80441ff6,0xf9802ffe,0x5c02f8ff,0x2e3f72ff,0x457a00ff,
    0x6c54403f,0x7e41ff73,0x0ff5000f,0x3bf315c4,0xff933333,0x880ffe2b,
    0xdff00fff,0xffb80f30,0x401ff701,0xffd82ffa,0x3e604c86,0x7ff3003f,
    0x4c0ffe60,0x5ff503ff,0x8003ff20,0x2e004ffc,0xf9804fff,0xff979aff,
    0xa83ea01f,0x2a1f000f,0x003fd47f,0xfb800df7,0xccccccce,0x03ff53cc,
    0xf901ffe8,0x5c04c83f,0x1ff701ff,0x222ffc40,0x0fc2ffbf,0x2005ff30,
    0xff103ff9,0x413fe209,0xff702ff9,0x1bfea003,0x00bffa00,0x6f67f64c,
    0x7f100bef,0x4b500bd0,0x037cc5f9,0xc800dfb0,0x7fe4004f,0x817fec01,
    0x00fc5ff8,0x7dc07fee,0x07fe400f,0x54bff199,0x017fcc06,0xf103ff98,
    0x13fe209f,0xfa817fcc,0xfff8801f,0xeffa8000,0x6ff4c000,0xf306c800,
    0x3e0f4c03,0x3a004f84,0x2fec007f,0x007ffa00,0x7ec07ff9,0xf700b70f,
    0x03fee03f,0x3e25ff30,0x0f61ff90,0x2005ff30,0xff103ff9,0x413fe209,
    0xff502ff9,0x05ffd003,0x9ffbd100,0xd9fb7100,0x3e6039fb,0x7641b201,
    0x03e82e80,0x8003ff60,0x7ec007fc,0x0ffdc02f,0x0ba7ff50,0x5c07fea0,
    0x6fe800ff,0x45ffccb7,0x17fcc00f,0x103ff980,0x3fe209ff,0x205ff304,
    0x7e401ffa,0x29b0004f,0x3e602ffd,0xffb78bff,0xf880bd0d,0x01700c43,
    0x7fe40039,0xffb9c403,0x7ff93802,0xe807fc80,0xf50079ff,0x03fee05f,
    0x07e7fee0,0x30097dfd,0x3e6005ff,0x09ff103f,0x7cc13fe2,0x03ff502f,
    0x05037fd4,0x1fff135c,0x7dcbfee0,0x7d41ffb0,0x000fa800,0xffa80000,
    0xffa96406,0xffa95c06,0x402fe406,0x3003fffb,0x3ff605ff,0x5eff8801,
    0x801fffb8,0xf3002ff9,0x13fe207f,0xf9827fc4,0x03ff502f,0x5803ffe2,
    0xffa81f30,0x2fd86a05,0x003f88aa,0xaaaa893a,0xaaaaaaaa,0x400aaaaa,
    0xf305fff8,0x880effe8,0xd00fff46,0xfff1005f,0x1bfe2001,0x005ffbd1,
    0x3e20bff6,0x7ff3006f,0x40ffe600,0xff104ff8,0x40bfe609,0xffd01ffa,
    0x3f886805,0x2007ffb0,0x006204fe,0x7ffd4310,0xffffffff,0x01ffffff,
    0x8adfffa8,0x7fd42fea,0x3fdaabef,0x4c077fd4,0x17f2004f,0xb9fff900,
    0x5bfff73f,0x3606fa80,0x9ff5003f,0x413fe600,0xff104ff8,0x40ffee0b,
    0xffc82ffb,0x88db5304,0xfff500fe,0x007fb005,0x00000000,0xffffd800,
    0xff904fff,0x20dfffff,0x3a60dffa,0x017cc005,0x3bfffa20,0x0017df71,
    0x00f980be,0x200dff70,0xff505ffb,0x41bfea0b,0xffb04ffc,0xfffff989,
    0x6fffffff,0x707bffe6,0x01dfffff,0x00000018,0x70000000,0x807fffff,
    0x04fffffa,0x7777ff4c,0x00050003,0x00a60544,0x200a0060,0x5effffea,
    0xdffffb30,0x3ffff6a9,0xffffb54e,0x3fffaa7d,0xfffd73ef,0x000005bf,
    0x00000000,0x00000000,0x026a6000,0x000aa980,0x00002aa2,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x7ffd4000,0xffffffff,0x01ffffff,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x4ccccc40,0x99999999,
    0x00001999,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
};

static signed short stb__times_37_usascii_x[95]={ 0,3,2,0,1,1,1,1,1,0,2,0,1,1,
2,0,1,3,0,1,0,1,1,1,2,1,2,2,0,0,0,1,1,0,0,1,0,0,0,1,0,0,0,0,
0,0,-1,1,0,1,0,2,1,0,0,0,0,0,0,2,0,1,0,-1,1,1,-1,1,1,1,1,0,0,0,
-3,0,0,0,0,1,-1,1,0,1,0,0,0,0,0,0,0,4,2,2,0, };
static signed short stb__times_37_usascii_y[95]={ 29,6,6,6,5,6,6,6,5,5,5,9,25,20,
25,5,6,6,6,6,6,6,6,6,6,6,13,13,9,14,9,6,5,6,6,6,6,6,6,6,6,6,6,6,
6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,5,6,6,34,6,13,5,13,5,13,5,13,5,5,
5,5,5,13,13,13,13,13,13,13,9,14,14,14,14,14,14,5,5,5,17, };
static unsigned short stb__times_37_usascii_w[95]={ 0,5,10,17,15,26,24,4,10,10,13,19,6,9,
4,10,15,10,16,13,16,14,15,15,13,15,5,6,19,19,19,13,29,24,21,21,23,20,18,23,24,11,13,25,
20,30,25,22,18,22,23,15,19,24,24,32,24,24,20,8,10,8,16,18,7,14,17,13,16,13,14,17,17,9,
10,17,9,26,17,15,17,16,12,11,10,17,17,24,17,17,15,10,2,10,19, };
static unsigned short stb__times_37_usascii_h[95]={ 0,24,10,24,27,24,24,10,32,32,15,18,10,3,
5,25,24,23,23,24,23,24,24,24,24,24,17,22,17,8,17,24,32,23,23,24,23,23,23,24,23,23,24,23,
23,23,24,24,23,30,23,24,23,24,24,24,23,23,23,30,25,30,13,3,6,17,25,17,25,17,24,24,24,24,
32,24,24,16,16,17,24,24,16,17,21,16,16,16,15,23,15,32,32,32,6, };
static unsigned short stb__times_37_usascii_s[95]={ 254,248,236,103,130,121,148,250,67,78,198,
163,229,198,174,157,173,244,128,189,64,203,218,234,1,15,250,145,183,229,203,
45,1,103,81,208,40,19,225,85,200,188,31,138,117,86,59,1,47,89,164,
192,66,167,142,109,22,230,1,121,146,112,212,179,166,235,168,1,186,15,88,
70,52,42,31,24,238,119,146,29,220,203,106,223,152,63,45,81,180,1,164,
56,53,42,146, };
static unsigned short stb__times_37_usascii_t[95]={ 1,1,132,34,1,34,34,108,1,1,132,
108,132,27,27,1,34,84,108,34,108,34,34,34,59,59,34,108,108,143,108,
59,1,108,108,59,108,108,84,59,84,84,59,84,84,84,59,34,84,1,84,
59,84,59,59,59,84,59,84,1,1,1,132,27,27,108,1,132,1,132,34,
34,34,34,1,34,1,132,132,132,1,1,132,108,108,132,132,132,132,108,132,
1,1,1,27, };
static unsigned short stb__times_37_usascii_a[95]={ 134,178,218,267,267,445,416,96,
178,178,267,301,134,178,134,149,267,267,267,267,267,267,267,267,
267,267,149,149,301,301,301,237,492,386,357,357,386,327,297,386,
386,178,208,386,327,475,386,386,297,386,357,297,327,386,386,505,
386,386,327,178,149,178,251,267,178,237,267,237,267,237,178,267,
267,149,149,267,149,416,267,267,267,267,178,208,149,267,267,386,
267,267,237,257,107,257,289, };

// Call this function with
//    font: NULL or array length
//    data: NULL or specified size
//    height: STB_FONT_times_37_usascii_BITMAP_HEIGHT or STB_FONT_times_37_usascii_BITMAP_HEIGHT_POW2
//    return value: spacing between lines
static void stb_font_times_37_usascii(stb_fontchar font[STB_FONT_times_37_usascii_NUM_CHARS],
                unsigned char data[STB_FONT_times_37_usascii_BITMAP_HEIGHT][STB_FONT_times_37_usascii_BITMAP_WIDTH],
                int height)
{
    int i,j;
    if (data != 0) {
        unsigned int *bits = stb__times_37_usascii_pixels;
        unsigned int bitpack = *bits++, numbits = 32;
        for (i=0; i < STB_FONT_times_37_usascii_BITMAP_WIDTH*height; ++i)
            data[0][i] = 0;  // zero entire bitmap
        for (j=1; j < STB_FONT_times_37_usascii_BITMAP_HEIGHT-1; ++j) {
            for (i=1; i < STB_FONT_times_37_usascii_BITMAP_WIDTH-1; ++i) {
                unsigned int value;
                if (numbits==0) bitpack = *bits++, numbits=32;
                value = bitpack & 1;
                bitpack >>= 1, --numbits;
                if (value) {
                    if (numbits < 3) bitpack = *bits++, numbits = 32;
                    data[j][i] = (bitpack & 7) * 0x20 + 0x1f;
                    bitpack >>= 3, numbits -= 3;
                } else {
                    data[j][i] = 0;
                }
            }
        }
    }

    // build font description
    if (font != 0) {
        float recip_width = 1.0f / STB_FONT_times_37_usascii_BITMAP_WIDTH;
        float recip_height = 1.0f / height;
        for (i=0; i < STB_FONT_times_37_usascii_NUM_CHARS; ++i) {
            // pad characters so they bilerp from empty space around each character
            font[i].s0 = (stb__times_37_usascii_s[i]) * recip_width;
            font[i].t0 = (stb__times_37_usascii_t[i]) * recip_height;
            font[i].s1 = (stb__times_37_usascii_s[i] + stb__times_37_usascii_w[i]) * recip_width;
            font[i].t1 = (stb__times_37_usascii_t[i] + stb__times_37_usascii_h[i]) * recip_height;
            font[i].x0 = stb__times_37_usascii_x[i];
            font[i].y0 = stb__times_37_usascii_y[i];
            font[i].x1 = stb__times_37_usascii_x[i] + stb__times_37_usascii_w[i];
            font[i].y1 = stb__times_37_usascii_y[i] + stb__times_37_usascii_h[i];
            font[i].advance_int = (stb__times_37_usascii_a[i]+8)>>4;
            font[i].s0f = (stb__times_37_usascii_s[i] - 0.5f) * recip_width;
            font[i].t0f = (stb__times_37_usascii_t[i] - 0.5f) * recip_height;
            font[i].s1f = (stb__times_37_usascii_s[i] + stb__times_37_usascii_w[i] + 0.5f) * recip_width;
            font[i].t1f = (stb__times_37_usascii_t[i] + stb__times_37_usascii_h[i] + 0.5f) * recip_height;
            font[i].x0f = stb__times_37_usascii_x[i] - 0.5f;
            font[i].y0f = stb__times_37_usascii_y[i] - 0.5f;
            font[i].x1f = stb__times_37_usascii_x[i] + stb__times_37_usascii_w[i] + 0.5f;
            font[i].y1f = stb__times_37_usascii_y[i] + stb__times_37_usascii_h[i] + 0.5f;
            font[i].advance = stb__times_37_usascii_a[i]/16.0f;
        }
    }
}

#ifndef STB_SOMEFONT_CREATE
#define STB_SOMEFONT_CREATE              stb_font_times_37_usascii
#define STB_SOMEFONT_BITMAP_WIDTH        STB_FONT_times_37_usascii_BITMAP_WIDTH
#define STB_SOMEFONT_BITMAP_HEIGHT       STB_FONT_times_37_usascii_BITMAP_HEIGHT
#define STB_SOMEFONT_BITMAP_HEIGHT_POW2  STB_FONT_times_37_usascii_BITMAP_HEIGHT_POW2
#define STB_SOMEFONT_FIRST_CHAR          STB_FONT_times_37_usascii_FIRST_CHAR
#define STB_SOMEFONT_NUM_CHARS           STB_FONT_times_37_usascii_NUM_CHARS
#define STB_SOMEFONT_LINE_SPACING        STB_FONT_times_37_usascii_LINE_SPACING
#endif

