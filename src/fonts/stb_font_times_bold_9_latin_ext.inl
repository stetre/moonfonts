// Font generated by stb_font_inl_generator.c (4/1 bpp)
//
// Following instructions show how to use the only included font, whatever it is, in
// a generic way so you can replace it with any other font by changing the include.
// To use multiple fonts, replace STB_SOMEFONT_* below with STB_FONT_times_bold_9_latin_ext_*,
// and separately install each font. Note that the CREATE function call has a
// totally different name; it's just 'stb_font_times_bold_9_latin_ext'.
//
/* // Example usage:

static stb_fontchar fontdata[STB_SOMEFONT_NUM_CHARS];

static void init(void)
{
    // optionally replace both STB_SOMEFONT_BITMAP_HEIGHT with STB_SOMEFONT_BITMAP_HEIGHT_POW2
    static unsigned char fontpixels[STB_SOMEFONT_BITMAP_HEIGHT][STB_SOMEFONT_BITMAP_WIDTH];
    STB_SOMEFONT_CREATE(fontdata, fontpixels, STB_SOMEFONT_BITMAP_HEIGHT);
    ... create texture ...
    // for best results rendering 1:1 pixels texels, use nearest-neighbor sampling
    // if allowed to scale up, use bilerp
}

// This function positions characters on integer coordinates, and assumes 1:1 texels to pixels
// Appropriate if nearest-neighbor sampling is used
static void draw_string_integer(int x, int y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0, cd->t0); glVertex2i(x + cd->x0, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t0); glVertex2i(x + cd->x1, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t1); glVertex2i(x + cd->x1, y + cd->y1);
        glTexCoord2f(cd->s0, cd->t1); glVertex2i(x + cd->x0, y + cd->y1);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance_int;
    }
    glEnd();
}

// This function positions characters on float coordinates, and doesn't require 1:1 texels to pixels
// Appropriate if bilinear filtering is used
static void draw_string_float(float x, float y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0f, cd->t0f); glVertex2f(x + cd->x0f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t0f); glVertex2f(x + cd->x1f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t1f); glVertex2f(x + cd->x1f, y + cd->y1f);
        glTexCoord2f(cd->s0f, cd->t1f); glVertex2f(x + cd->x0f, y + cd->y1f);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance;
    }
    glEnd();
}
*/

#ifndef STB_FONTCHAR__TYPEDEF
#define STB_FONTCHAR__TYPEDEF
typedef struct
{
    // coordinates if using integer positioning
    float s0,t0,s1,t1;
    signed short x0,y0,x1,y1;
    int   advance_int;
    // coordinates if using floating positioning
    float s0f,t0f,s1f,t1f;
    float x0f,y0f,x1f,y1f;
    float advance;
} stb_fontchar;
#endif

#define STB_FONT_times_bold_9_latin_ext_BITMAP_WIDTH         256
#define STB_FONT_times_bold_9_latin_ext_BITMAP_HEIGHT         68
#define STB_FONT_times_bold_9_latin_ext_BITMAP_HEIGHT_POW2   128

#define STB_FONT_times_bold_9_latin_ext_FIRST_CHAR            32
#define STB_FONT_times_bold_9_latin_ext_NUM_CHARS            560

#define STB_FONT_times_bold_9_latin_ext_LINE_SPACING           6

static unsigned int stb__times_bold_9_latin_ext_pixels[]={
    0x0200400c,0x0a030188,0x01080200,0x100a2011,0x44026000,0x84030000,
    0x40420200,0x02015008,0x44000018,0x40014408,0x00022008,0x04019800,
    0x2202a8a2,0xcc812204,0x815414c0,0x2e03504a,0x9702b80c,0x65c0aa03,
    0x37205501,0x06e09900,0x82a806e4,0xa85c80cb,0x0aa0903b,0x13603762,
    0x06ee05dc,0xb8154132,0x201b902a,0x00664059,0x880ccd09,0x0198189a,
    0x81982aa6,0x21353019,0x541a8aa9,0x5155309b,0x261aa983,0x5441a8aa,
    0x2a2aa619,0x2a604cc1,0x13531a8a,0xa9829835,0x30dd4352,0x54c35155,
    0x5309aa82,0xa8d4c2a1,0x4c6a3531,0x2a61a8aa,0x42a22a61,0x4c1a8aa9,
    0xa8806601,0x2aa2aa19,0x20d4c288,0xe88763d6,0x3b1e85d1,0x154532d8,
    0x2996c154,0x25b0a3f1,0xb0a3f129,0x51f89263,0x7c4931d8,0x43b1e851,
    0x8fc451f8,0x221d8f42,0x2495451f,0x83f051f8,0x57e2532d,0xf1147e22,
    0x451f88a3,0x2afc492a,0x47a147e2,0x41d8f41d,0x47cc931d,0x495450f9,
    0x5cb73574,0x7354b937,0x5442354b,0x1aa1dc0c,0xd5143e21,0x98a1f108,
    0x8a1f1046,0x21f10469,0x225b9aa2,0x287c450f,0x3e25b9aa,0x22175c50,
    0x543f050f,0x1bfa8846,0x1f1143e2,0x5c50f88a,0x0dfd442e,0x26a8a1f1,
    0x25b9aa5b,0x22fa0469,0x0bae09bf,0x327b9b3a,0x9b27a98d,0x5541727b,
    0x17236c2d,0x172287c4,0x972287c4,0x9143e219,0x21f10ccb,0x227b9b22,
    0x287c450f,0x3e27b9b2,0x225fb850,0x643f050f,0x49f33105,0x87c450f8,
    0x2e143e22,0x93e6625f,0x736450f8,0x64f7364f,0x75d70665,0xe8bf703d,
    0x1ea93279,0x4993ccb9,0x45b9307a,0x81ea2f89,0xf03d451f,0x1367a8a3,
    0x367a8a3f,0x9e628fc4,0x7c28fc4c,0x8993cc51,0x0e89451f,0x3f17147e,
    0xf71883d4,0x51f851f8,0xe89451f8,0x3f1ee310,0x9932798a,0x367a9327,
    0x0fc57c44,0x2ad0744a,0x4dec0b9a,0x05cd540c,0x6dc2ab2e,0x71726a4d,
    0x56641559,0x905565c1,0xd9cb8359,0x2e0d6643,0x56643d9c,0x205cd541,
    0x56641acc,0x205cd541,0x26ee1acc,0x590d6643,0x2155970d,0x3599123a,
    0x6641acc8,0xa8e6ee1a,0x83599123,0x5540b9aa,0x6ce5c0b9,0x2ee12483,
    0x0200a239,0x57000000,0x00000bea,0x80002000,0x00000000,0x00200000,
    0x00000000,0x00004000,0x00400000,0x00000400,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x30420000,
    0x1982a813,0x04401ab8,0x390d46a6,0x01030000,0x88021032,0x530664c1,
    0x50998355,0x0a635305,0x55530021,0x22624885,0x21a982a2,0x0b802029,
    0x400c4042,0x98355309,0x00020300,0x30a01080,0x2e0ddc5b,0x2606640a,
    0x1f884803,0x89901885,0xa85351a9,0x3c882882,0x51a98760,0x70e27e23,
    0x3e216a15,0x83c88171,0x504d7ce3,0x44e2e633,0x0b524aa5,0x644281dc,
    0x22640c84,0x8d71f10a,0xc8382a86,0x42203b04,0x0e4c4828,0x33a6455b,
    0x2ad86615,0x21555510,0x2ad850f8,0x28fc4098,0x36155d44,0x0af2a22a,
    0x51f887ee,0x53214fc4,0xaf859d53,0x22bca983,0x4c17c1eb,0x2c56b2e5,
    0x48da85d7,0x33a646d8,0x26390375,0xf88542ba,0x75334698,0x98083983,
    0x06541aaa,0x8fc4598b,0x23e25aca,0x542a5f11,0x45f205ac,0xca8a1f12,
    0x7c43b85a,0x2f88a850,0x88a96b2a,0x7c45a82f,0x21dfc450,0xf1b518f8,
    0xf9c0fdf8,0x5f0b509a,0xb4ed4f10,0xb52fdc58,0x445f1307,0xb71f118f,
    0x9ae3e248,0x83f9f10a,0x4d71f10c,0x7c43b83b,0x86f26389,0x3f11e21d,
    0x89b1a76a,0x276a18eb,0x831f3506,0x34ed451f,0x143e236c,0x34ed45d8,
    0x443c82ec,0x44fc450f,0x3eb526c1,0x7c1b67e0,0x417c2d42,0x45a76a78,
    0xea8744a5,0x22e4d42e,0x3e23e24d,0x4c7c4712,0x6c7c42a6,0x98f885c4,
    0x11b60ee6,0xd86a853f,0x23f11e21,0x21cc69da,0x34ed44f8,0x20dfd54c,
    0x276a1acb,0x3e17c4c6,0xa81f3051,0x807cc69d,0x4c51f81e,0x51cc5bbf,
    0x457ccb7d,0x2617c0df,0x220fe20e,0x2c5a7ae7,0x4f547377,0x8bea571f,
    0x1fc3e239,0x87f3e239,0x5f15f30a,0x43f9f134,0x117c4c39,0x0bf8877f,
    0x1f88f116,0x044cd7d1,0x1afa226c,0x4c08bcca,0x2a35f441,0x156645c9,
    0x7d1189f4,0x68313e8d,0x0e035990,0x102d4113,0x41c17c05,0x6a88f303,
    0x051090b1,0xf8822638,0x44361f88,0x302a4d8f,0x6c7c4d03,0x9726a1c4,
    0x062189f8,0x7cc79871,0x7440dc02,0x2a39000d,0x06443baf,0x02fa95c0,
    0x01d57f70,0x20eabfb8,0x8ae0001b,0x03025c1b,0x0c141fc4,0x8ae215c4,
    0x00440c42,0x3ea0dc72,0xf98c42cb,0x18132f8a,0x22be6198,0xf52b842f,
    0x096efe65,0x0015c408,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x09800000,0x20cc0e64,0x88066010,
    0x0dc98099,0x0a985554,0x80c01815,0x41353008,0x04022008,0x54c33044,
    0x2a010301,0x98180002,0x440dec08,0x31031000,0x88110d4c,0x81dd819a,
    0x40dd8828,0x18662c01,0x26055e54,0x261ab981,0x1d89e83c,0x54c330cc,
    0x8aff6351,0x019055f8,0x6c26c0e6,0x2e058532,0x2443d881,0x440fc4b5,
    0x0ab81544,0x85b30f66,0x1984a848,0xc81a8530,0x3f114c0c,0x1265b064,
    0x30ddc066,0x36615117,0x46e67d52,0xa9870dc9,0x0ec7a0a9,0x5e54c5f1,
    0x225b9aa1,0x7c455772,0x115ffc51,0x011037f5,0x35408802,0x30d5d4c2,
    0x55cc3575,0x2d46e61b,0x4c3503f1,0x32bb881b,0x8d4c3555,0x2e2331a9,
    0x10ec7a2b,0x4b2e2577,0x2e2b89a9,0x31b98fc4,0x1d8f408f,0x157e20a6,
    0x446a6553,0x20eb931f,0xb9aa09f8,0x7c4b66a5,0x7b9b2389,0x10ced64a,
    0x2bfc8a1f,0x2e13e662,0x0ee07703,0x227e20b9,0x88e27e23,0x47e2389f,
    0x2a07e25a,0x2f207e25,0x4713f13b,0x2a5f11f8,0x9aa77790,0x5ceef25b,
    0x3a3f13cb,0x223f16a2,0x50ccd91f,0x10b52dcd,0x8fc437f5,0x8883e1f8,
    0x047c2999,0x1973dcd9,0xf30a7e29,0x5e3e5264,0x22143e21,0x43dc622a,
    0x360db06d,0x9f883d46,0x2214fc42,0xa8fc429f,0xb5047e25,0x5e4c0fc4,
    0xf8853f10,0xc9863ae1,0x33dcd90b,0xf05e4179,0x7c5a8ba3,0xd9e63f11,
    0x2a7b9b24,0x3e6623ce,0x0fc47e24,0x8afa701f,0x64f30a8f,0xbf887644,
    0x20cabb83,0x089eae98,0x5154147e,0x0be26247,0xf8985f13,0x885565c2,
    0x1dfc43bf,0x3f10efe2,0x5abf99ae,0xa81f896a,0x877f10ab,0x513e21f8,
    0x4c9e6157,0x564c2aea,0xb8beafe0,0x0fc4be65,0x3cc79377,0x134f5499,
    0x11f89ee3,0xd8e07c3f,0xa82a3e1b,0x2ea20b9a,0x10313f12,0xc830503f,
    0x982a81ac,0x545c9a80,0x2e4d45c9,0x0c4fc438,0x7c4313f1,0x447e2189,
    0x225a8281,0xae65411f,0x3e2189f8,0x332a26c1,0xa82e6aa5,0x4b9935cc,
    0x10545d1f,0x0e20fc47,0xb505cd54,0x4491d4d3,0x3e63f11f,0xaf982042,
    0x42aa0009,0x5105bbf9,0x00333103,0x57030550,0xfa95cbea,0x10bea572,
    0x25bbf983,0x3e65bbf9,0x0cbe65bb,0x3e66b818,0x466a65ab,0x3e65bbf9,
    0xa9837a22,0x33530019,0x57cc66a6,0x390e64f8,0x00130be6,0x200f5d50,
    0x005f32f9,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x7b011300,0x0c429883,0x42b80544,
    0x4cc198a9,0x40883311,0x55554c19,0x44630260,0x28862618,0x85304ca8,
    0x20c54c0c,0x5304cc28,0x13301103,0x0e415c35,0x23531438,0x422200aa,
    0x2203349b,0x004cc0cc,0x3022614c,0x01502e09,0x54c4a831,0x504d4330,
    0x83ac8755,0x45fc43a8,0x87906a1d,0x33b11c3b,0x9c1a866f,0x20e88b23,
    0x0d554c29,0x14cc3ae2,0x68b92ba6,0x234ce25c,0x22d8f41a,0x2aaa23a8,
    0x44f30cc2,0x5c38d51f,0x02d46a63,0x07032a01,0x5419b8d3,0x82882819,
    0x493752ae,0x4dd452f8,0x5f107ae4,0x4655dc31,0xa8a5c7e2,0xba88aa0b,
    0x45aa5530,0xb715418f,0x55315499,0x8f8926ea,0x99af2238,0x31d7912a,
    0x093067ae,0x35493174,0x226498b7,0x1624c2f8,0x1eb9aa1f,0x47e21951,
    0x42b82bea,0x47ae49ba,0x26ea6bc8,0xba926ea4,0x9926ea49,0x71a7660f,
    0x34ecc31d,0xaedc47ee,0x827e7a63,0x2aeeb70f,0x2ee3b954,0x5721b74a,
    0x372a1cf8,0x32a15711,0x3661b71d,0x2e14fc69,0x5c36e69b,0x5c2d469b,
    0xd55b70aa,0x35c2aae9,0x20555cd5,0x50555c5c,0x75cd50f8,0x87c5b551,
    0x46d878da,0xb96a69d9,0x9a76669b,0x276669d9,0xfa9a7666,0x3e1a7663,
    0x2134ecc4,0x0bd1975c,0x88f8995d,0x3295793b,0xd8a55e43,0x223e2f55,
    0x2dbb8791,0xb35d8879,0x643bf8d3,0x6576268b,0x642d468b,0x323d34c3,
    0x64973cc3,0x1e40f983,0x9aae7e04,0xf8b2e25a,0xf131eb50,0xb534ecc3,
    0x3b3345e4,0xb334eccd,0x134eccd3,0x435f442b,0x735f443d,0x2f3e6575,
    0x8a62e0de,0x710beaf9,0x442fa637,0x5c9371bb,0xd33bafbb,0x7d31ce17,
    0x5f4526e1,0xb30c47c6,0xd9a4dcd7,0x303660eb,0x1d55c17d,0x555417d3,
    0xe82fa60b,0x42fa6113,0x332be668,0x665c3663,0x1d6d43e3,0xbe89766a,
    0x5ecc3666,0xe89afa26,0x89afa26b,0x0ff6e6be,0x88017620,0x00000000,
    0x10000000,0x7cc00002,0x000005ab,0x00000000,0x007557dc,0x3e600000,
    0x2fa95c02,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x30b55000,0x0aa08a83,
    0x30a9870e,0x4c2204c3,0x22a6151a,0x544288aa,0x3706620a,0x54c1c288,
    0x30660cc1,0x0aa08a83,0x4153070e,0xaa882a29,0x82660cc0,0x2a04cc29,
    0x4c14c189,0x04d4409a,0x40e2062a,0x20cc0cc3,0x980cb881,0x2aa62201,
    0x442aa21a,0x3305544a,0x4c3e6198,0x7c470ea0,0x7cc7cc50,0x54c54450,
    0x1d445510,0x9543302a,0x2a8aee63,0x25442aa2,0x4c1982aa,0xf8967661,
    0x54d5c455,0x25c59770,0x125c7955,0xfa987a3d,0x3b14cb61,0x260b5126,
    0x2aea1980,0x040e0d43,0x1b83b1e8,0x544711f1,0x2217510b,0x217510ba,
    0x0cf60ba8,0x87c38b6a,0x4dfc5741,0x50cca6a0,0x21542a85,0x770baa2a,
    0x4432a297,0x219510ca,0x19510ca8,0x56d432a2,0x150dfd43,0x2ef23379,
    0x1d819515,0x4dee1751,0x11aa584c,0x4dd411a6,0x82af2a24,0x837f51ba,
    0x15c0542b,0x3a65b9aa,0x5770a7e2,0x5dd2aee9,0x2e95774a,0x827ea4ab,
    0xf8514abb,0xeb9eb830,0x2a50dd41,0x23b951dc,0x3b951dca,0xb77927dc,
    0x6d54b6aa,0x2aa5b552,0x2a5b552d,0x8d1b52da,0xaeca3f98,0x2aa99b32,
    0xabb8622d,0x8f531b94,0x320b92fa,0x69d98665,0x54ef32aa,0x83fb14bb,
    0x46d8286d,0xcbc9aa5b,0xabc877f3,0x2f295794,0x3295794a,0x322744ab,
    0x23f054ab,0x0fc57c41,0x64a22e66,0x90f21e43,0x2e1d1287,0x259714ab,
    0x59712cb8,0x65c4b2e2,0x56a59712,0x2667b847,0x88ec29bc,0x579022cb,
    0x42dc7aa9,0x9aa0f52b,0x89a7664d,0xad6e44bb,0x3e264cac,0x87e261c1,
    0xabc92e79,0x5c4311f5,0x2237711b,0x237711bb,0x20dc1bb8,0x99071cc9,
    0xa8249033,0x42fa62aa,0x17d30be9,0x4ddc2fa6,0x65c33223,0x2e79973c,
    0x279973cc,0x79973ccb,0x23a9336e,0x51155544,0x591e65c3,0x37b0ddc4,
    0x2e15e419,0x26ee0aac,0xb9afa23d,0x9950cead,0x9a86ee63,0x366a145d,
    0x105cd545,0xb57f337b,0x00000000,0x00000080,0x00000000,0x00000000,
    0x00000000,0x00000800,0x00000020,0x40bea570,0x0005f52b,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x835309b1,0x104311aa,0x21862555,0x89a98228,0x306aa62a,
    0x28822a05,0x26239838,0x502a14c1,0x40220cc5,0x950aaaa8,0x524dcc77,
    0x2618a899,0x2a60d4c1,0x26498701,0x98051099,0x99104cc3,0x644ef2a1,
    0xa98a551c,0x9395001a,0x102222c4,0x87e01105,0x1c912cd8,0x39229bb7,
    0x2fea3922,0x2a3e24ea,0x16a07ae5,0x18828813,0x885931e4,0x2d4772a2,
    0x517b806a,0x9da9a7a6,0x516a1545,0x2209f88b,0x2ae2881f,0x2277b50a,
    0x95055c06,0xe9865441,0x2e175169,0x2d47c455,0x36673771,0x11110c69,
    0x815c0541,0x488b2a1f,0x52235017,0x7c0ba443,0x5f0f85d0,0x4750efa6,
    0x77951d9a,0x4766a188,0x0f23a84a,0x40ecd4d5,0x36618f9a,0xa9676a68,
    0x477951dc,0x0f4fc0da,0x1e47507f,0xd998636a,0x7951d44b,0xd996d547,
    0x22957768,0x2f87c09f,0x4ecc9577,0x93081146,0x3f06d837,0x9989764c,
    0x26624852,0x253131b9,0xa8baafe2,0x3d33e8bf,0x96e25a8d,0x116269e9,
    0x2d4254b7,0x896e17d3,0xbfba885b,0xea9abaa1,0xe98790eb,0xf82f6a69,
    0x501f14c8,0x5a85f4cb,0x5a8f1d10,0xcb89a7a6,0x2f2d3d52,0x545bd54a,
    0x5793e8bf,0x9235f449,0x208e9840,0x3e2e1f89,0x4a9c4881,0x9c389c24,
    0x21743e4a,0x1b31f88f,0x87e25a8d,0x276a68d9,0x42543f12,0x896a1c5a,
    0x22f3181f,0x30170a20,0x9a36617d,0x30caf85a,0x4c5a861f,0x7b4416a1,
    0x4d1b32d4,0x5a623ccb,0x5bb51bb8,0x911f88f8,0x34415037,0x350b3081,
    0x2e3564bb,0x2e22a09c,0x16470665,0x3e6b7115,0x2fe63f8a,0x71ebaa3c,
    0xea956e4d,0x6426e26a,0xd70b72ad,0xdc96e3a8,0x57d4322a,0x0150223b,
    0x6b9abaa0,0x2fe60fcc,0x4131ae5a,0x1f3f306b,0x0d5d535c,0x5c805710,
    0x001e5fcc,0x11324493,0x2571aa11,0x810002fa,0x20982020,0x00000040,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x98000000,0x2f26289a,0x954c3311,0x206a674b,0x44c2aaa9,
    0x89819510,0x1130b320,0x57951d5c,0xa8310d4c,0x20298662,0x20a61880,
    0x98a23bb8,0x9854c1aa,0x4c555511,0x80aa981a,0x054c9109,0x4c6a2153,
    0x986aaa62,0x2aa62aaa,0x220d54c1,0x23531aaa,0x5513530a,0x99986544,
    0x4fc45531,0xc823a659,0x47c436e3,0x3e503f11,0x5432a099,0x752542da,
    0x9709b893,0x13c6d4d3,0xca93623f,0x02d4b51f,0x16a29857,0x09e8eef2,
    0x7c4991f1,0x17c44c52,0x367e03f1,0x22287a22,0x23f1765d,0x8e23e20b,
    0x3e2133f2,0x2e3e25b8,0x7d1287c6,0xa8ba3f0a,0x273372da,0x2187c0db,
    0x88de4c59,0x01f1365d,0x711d40fc,0x3663a859,0x1791d469,0x3e0fad4d,
    0x547612e0,0x360e3665,0x77d31d46,0x0fa85e44,0x3ae2647c,0x0f85c818,
    0x7547b1f0,0x731f5021,0x3f039f8b,0x1f107e05,0x4698f87e,0x41fd418f,
    0x65c45d0f,0x45d89c72,0x74c6a80f,0x1d493708,0x2fea123e,0x79972d40,
    0x1a7665a8,0x535eccb5,0x2e0f8b7d,0x4cb52444,0x21f8983d,0xa9a7665a,
    0x7f0d10ac,0xf309f05b,0x2fe01f01,0x4798f462,0x7c5b9cd8,0x03bf80ed,
    0x7f0f883f,0x2fe0fdfc,0xabf86d84,0x5cf32e2e,0xf89374cc,0x1660a810,
    0x87c08992,0x85a81f80,0x2fa25a83,0x53442d46,0x44b83e0b,0x74cb508b,
    0x52ecd42e,0x95346ccb,0x23e1a2b9,0x3e83d879,0x7c087c11,0x8527f640,
    0x7c5b8fa8,0x188f85d8,0x447c41f8,0xf1363e1f,0x43e89811,0x00005d0f,
    0x8316afe6,0x306e286a,0x3f88b57f,0x5c3a86b8,0xb30d7006,0x8be612a1,
    0x27ff70dc,0x43e7aa6b,0x9ae5f52b,0x26a67aea,0x5fcc1f31,0x2e2ec43b,
    0x7f30eaaf,0xe817ccb5,0x764e5301,0x1bf15f30,0xf116afe6,0x22cbf987,
    0xf32f8af9,0x23f74a85,0x003f8af9,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x94655dc0,
    0x7524c74b,0x0282a893,0x33037505,0x5441802a,0x4793750b,0xabbb8108,
    0x92239910,0x930abca8,0x86305437,0x43b3518a,0x23a8a208,0x303119da,
    0x288c4318,0xa92aef2a,0x8e32a3bc,0x2ee18800,0x377771bb,0x08ac9862,
    0xaa866113,0x04cc222a,0x99dddc15,0x1f109f9e,0x6cc2aae3,0x70772a69,
    0x497750e0,0x06ee22ba,0x26957702,0x1ce40e9d,0x5477b577,0x79955143,
    0x45c23a67,0x36635734,0x54cb7159,0x22d4b11a,0x1951223e,0x14a95dcc,
    0x0fbc6cc9,0x1eccd3d3,0x2a774932,0x0133330c,0x53094e4e,0x4cc50cdc,
    0x0dd4ee19,0x132ba007,0x3661e49b,0xb770f269,0x46f6ee37,0x01975adc,
    0x5dddc766,0x36695791,0x320d9869,0x22d40eab,0xb312ee20,0x1b573aa8,
    0x41f89c5c,0x2a1530bc,0x489135c5,0x28a4ec47,0xfbc6cc91,0x74cd1b30,
    0xb818942d,0x0133310b,0x00005542,0x2e000000,0xd3154298,0x99afa217,
    0x202e20be,0x710e6543,0x1406ea17,0x5f446ee2,0x2e639c46,0x896a0ceb,
    0x433ab6e6,0x029c086a,0x21a8ab72,0xea99ae29,0x21844313,0xea826072,
    0x5d51f8f9,0x08fcf5cd,0x00000000,0x00000000,0x50000000,0x00181777,
    0x00000108,0x01ae0000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
};

static signed short stb__times_bold_9_latin_ext_x[560]={ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,0,0,0,0,0,0,0,0,0,0,
-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,-1,0,-1,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,-1,0,-1,0,-1,0,0,0,0,0,0,0,-1,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,-1,1,1,1,
1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,-1,0,
0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,0,0,-1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1, };
static signed short stb__times_bold_9_latin_ext_y[560]={ 7,1,1,1,1,1,1,1,1,1,1,2,5,4,
5,1,1,1,1,1,1,1,1,1,1,1,3,3,2,3,2,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,8,1,3,1,3,1,3,1,3,1,1,
1,1,1,3,3,3,3,3,3,3,1,3,3,3,3,3,3,1,1,1,4,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,7,3,1,1,2,1,
1,1,1,1,1,3,3,4,1,0,1,2,1,1,1,3,1,3,6,1,1,3,1,1,1,3,-1,-1,-1,0,
0,0,1,1,-1,-1,-1,0,-1,-1,-1,0,1,0,-1,-1,-1,0,0,2,1,-1,-1,-1,0,-1,1,1,1,1,
1,1,1,1,3,3,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,3,1,1,1,1,1,1,1,
0,2,-1,1,1,3,-1,1,-1,1,-1,1,-1,1,-1,1,1,1,0,2,-1,1,-1,1,1,3,-1,1,-1,1,
-1,1,-1,1,1,1,-1,-1,1,1,-1,1,0,2,-1,1,1,1,0,3,1,1,-1,1,1,1,3,-1,-1,1,
1,1,1,1,1,1,1,-1,1,1,3,-1,1,1,1,3,0,2,-1,1,-1,1,1,3,-1,1,1,3,-1,1,
-1,1,-1,1,1,3,-1,1,1,1,-1,1,1,1,-1,1,0,2,-1,1,-1,1,-1,1,1,3,-1,1,-1,1,
0,-1,1,0,1,-1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,1,1,1,1,0,3,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1,1,-1,1,-1,
1,-1,1,-1,0,-1,0,-1,0,-1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,-2,-1,-1,1,-1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1, };
static unsigned short stb__times_bold_9_latin_ext_w[560]={ 0,3,4,4,4,8,7,2,3,3,4,5,2,3,
2,3,4,4,4,4,4,4,4,4,4,4,3,3,5,5,5,4,8,6,6,6,6,6,5,7,7,3,5,7,
6,8,6,7,5,7,6,5,6,6,6,9,6,6,6,3,3,2,5,6,2,4,5,4,5,4,4,4,5,3,
4,5,3,7,5,4,5,5,4,3,3,5,4,6,4,4,4,3,2,3,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,3,4,4,4,5,
2,4,3,6,3,4,5,3,6,6,3,5,3,3,3,5,5,2,2,3,3,4,6,6,6,4,6,6,6,6,
6,6,9,6,6,6,6,6,3,3,3,3,6,6,7,7,7,7,7,5,7,6,6,6,6,6,5,5,4,4,
4,4,4,4,6,4,4,4,4,4,4,3,4,4,4,5,4,4,4,4,4,5,4,5,5,5,5,4,5,4,
6,4,6,4,6,5,6,4,6,4,6,4,6,4,6,6,6,5,6,4,6,4,6,4,6,4,6,4,7,4,
7,4,7,4,7,4,7,5,7,5,3,4,3,4,3,4,3,3,3,3,7,4,5,4,7,5,5,6,3,6,
3,6,4,6,4,6,3,6,5,6,5,6,5,7,6,4,7,4,7,4,7,4,8,6,6,4,6,4,6,4,
5,3,5,3,5,3,5,3,6,3,6,5,6,3,6,5,6,5,6,5,6,5,6,5,6,5,9,6,6,4,
6,6,4,6,4,6,4,4,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,6,5,5,6,5,5,5,
5,5,5,5,5,5,5,5,5,5,7,5,5,5,5,5,5,5,5,5,5,5,5,5,5,7,6,5,5,5,
5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,6,4,3,4,7,
4,6,5,6,5,6,5,6,5,6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5,5,5,5,5,6,4,9,6,7,4,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5, };
static unsigned short stb__times_bold_9_latin_ext_h[560]={ 0,7,4,7,7,7,7,4,8,8,4,5,4,2,
3,7,7,6,6,7,6,7,7,7,7,7,5,6,5,3,5,7,8,6,6,7,6,6,6,7,6,6,7,6,
6,6,7,7,6,8,6,7,6,7,7,7,6,6,6,8,7,8,4,1,2,5,7,5,7,5,6,6,6,6,
8,6,6,4,4,5,6,6,4,5,7,5,5,5,4,6,4,8,8,8,2,6,6,6,6,6,6,6,6,6,
6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,0,6,8,7,5,6,
8,8,2,7,3,4,3,2,7,2,4,5,4,4,2,6,8,2,3,4,3,4,7,7,7,6,8,8,8,7,
7,7,6,8,8,8,8,7,8,8,8,7,6,8,9,9,9,8,8,5,7,9,9,9,8,8,6,7,7,7,
7,7,7,7,5,6,7,7,7,7,6,6,6,6,7,6,7,7,7,7,7,5,5,7,7,7,7,8,8,8,
7,6,8,7,8,6,9,7,9,7,9,7,9,7,8,7,6,7,7,6,8,7,8,7,8,6,8,7,9,8,
9,8,9,8,8,8,8,8,6,6,8,6,7,5,8,6,8,8,7,4,7,8,9,8,8,8,4,8,8,8,
8,6,6,6,6,6,6,9,6,8,6,9,6,6,7,6,8,6,9,7,9,7,7,5,8,6,8,6,8,6,
9,7,9,7,8,6,9,7,8,8,8,7,6,7,9,7,8,6,9,7,9,7,9,7,8,6,9,7,8,8,
7,8,6,7,6,8,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,7,6,6,8,6,6,6,
6,6,6,6,6,6,6,6,6,6,7,6,6,6,6,6,6,6,6,6,6,6,6,6,6,8,5,6,6,6,
6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,8,7,8,6,9,
7,9,7,9,8,9,8,9,8,9,8,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,
6,6,6,6,6,6,6,6,6,6,9,9,8,7,9,7,6,6,6,6,6,6,6,6,6,6,6,6,6,6,
6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,
6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,
6,6,6,6,6,6, };
static unsigned short stb__times_bold_9_latin_ext_s[560]={ 253,172,119,80,20,243,25,162,222,245,129,
35,189,241,195,45,99,84,89,182,165,14,251,26,220,154,94,170,46,202,52,
164,32,104,131,187,205,191,219,194,232,80,8,183,152,174,140,243,159,24,212,
93,198,49,33,56,225,138,145,155,232,253,151,249,228,240,197,13,220,24,126,
121,115,111,249,98,94,169,177,64,74,68,105,250,216,18,8,1,142,22,124,
190,201,211,218,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,
244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,253,240,240,
250,245,215,1,12,224,66,198,114,208,241,147,231,110,29,134,165,245,132,48,
238,192,147,214,157,19,31,38,82,61,68,75,1,236,225,116,82,89,96,103,
1,110,198,231,193,53,224,1,17,102,210,164,76,174,117,132,145,41,152,154,
134,129,124,119,114,109,104,98,171,88,83,78,73,97,167,189,63,40,194,28,
23,18,13,8,58,41,244,238,232,226,178,113,108,203,200,226,188,171,46,158,
167,25,155,44,142,58,130,183,117,221,107,100,138,141,85,233,75,101,102,17,
52,72,136,87,159,229,172,202,177,182,218,45,60,235,41,252,89,148,52,194,
190,239,138,176,150,152,145,119,165,183,129,125,118,114,1,176,27,149,160,107,
165,76,54,126,199,143,181,40,205,4,210,221,57,213,47,66,82,215,250,204,
8,194,13,247,62,193,113,159,18,139,90,138,134,127,124,34,184,172,210,94,
57,179,1,206,94,186,14,39,234,237,33,16,11,7,67,71,160,111,80,87,
92,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,135,244,244,87,
244,244,244,244,244,244,244,244,244,244,244,244,244,147,228,244,244,244,244,244,
244,244,244,244,244,244,244,244,59,69,244,244,244,244,244,244,244,244,244,244,
244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,52,159,
1,66,124,169,110,202,95,5,80,74,65,23,51,46,244,244,244,244,244,244,
244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,
244,244,244,37,32,29,208,9,215,244,244,244,244,244,244,244,244,244,244,244,
244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,
244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,
244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,
244,244,244,244,244,244,244,244,244, };
static unsigned short stb__times_bold_9_latin_ext_t[560]={ 10,29,60,29,29,20,29,60,11,11,60,
60,60,60,60,37,37,53,53,37,53,45,37,45,37,37,60,53,60,60,60,
37,20,53,53,37,53,53,53,37,53,53,45,53,53,53,37,37,53,20,53,
37,53,37,37,37,53,53,53,11,37,1,60,60,60,53,29,60,29,60,53,
53,53,53,11,53,53,60,60,60,53,53,60,53,29,60,60,60,60,53,60,
11,11,11,60,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,
45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,10,45,11,
29,53,45,20,20,60,37,60,60,60,60,37,60,60,60,60,60,60,45,20,
60,60,60,60,60,45,45,45,45,20,20,20,45,37,37,45,20,20,20,20,
37,20,20,20,29,45,20,1,1,1,20,20,60,37,1,1,1,20,20,45,
37,37,37,37,37,37,37,60,45,37,37,37,37,45,45,45,53,37,45,37,
37,37,37,37,60,60,29,29,29,29,11,11,11,29,45,11,29,11,53,1,
29,1,29,1,29,1,29,11,29,45,29,29,45,20,29,11,29,11,45,20,
29,1,20,1,20,1,20,20,20,20,20,45,45,20,53,20,60,20,53,20,
20,20,60,29,11,1,11,11,11,60,20,20,20,20,53,45,53,45,45,45,
1,45,20,45,1,45,45,29,45,20,45,1,29,1,29,29,60,11,45,11,
53,11,53,1,29,1,29,11,53,1,29,11,11,11,29,53,29,1,29,11,
53,1,29,1,29,1,29,11,45,1,29,11,11,29,11,45,29,45,11,45,
45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,29,45,45,11,
45,45,45,45,45,45,45,45,45,45,45,45,45,29,45,45,45,45,45,45,
45,45,45,45,45,45,45,45,11,60,45,45,45,45,45,45,45,45,45,45,
45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,11,37,
11,45,1,37,1,37,1,11,1,11,1,11,1,11,45,45,45,45,45,45,
45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,
45,45,45,1,1,11,37,1,37,45,45,45,45,45,45,45,45,45,45,45,
45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,
45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,
45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,
45,45,45,45,45,45,45,45,45, };
static unsigned short stb__times_bold_9_latin_ext_a[560]={ 33,43,72,65,65,130,108,36,
43,43,65,74,33,43,33,36,65,65,65,65,65,65,65,65,
65,65,43,43,74,74,74,65,121,94,87,94,94,87,79,101,
101,51,65,101,87,123,94,101,79,101,94,72,87,94,94,130,
94,94,87,43,36,43,76,65,43,65,72,58,72,58,43,65,
72,36,43,72,36,108,72,65,72,72,58,51,43,72,65,94,
65,65,58,51,29,51,68,101,101,101,101,101,101,101,101,101,
101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,
101,101,101,101,101,101,101,101,33,43,65,65,65,65,29,65,
43,97,39,65,74,43,97,65,52,71,39,39,43,75,70,33,
43,39,43,65,98,98,98,65,94,94,94,94,94,94,130,94,
87,87,87,87,51,51,51,51,94,94,101,101,101,101,101,74,
101,94,94,94,94,94,79,72,65,65,65,65,65,65,94,58,
58,58,58,58,36,36,36,36,65,72,65,65,65,65,65,71,
65,72,72,72,72,65,72,65,94,65,94,65,94,65,94,58,
94,58,94,58,94,58,94,95,94,72,87,58,87,58,87,58,
87,58,87,58,101,65,101,65,101,65,101,65,101,72,101,72,
51,36,51,36,51,36,51,36,51,36,107,72,65,43,101,72,
72,87,36,87,36,87,61,87,51,87,36,94,72,94,72,94,
72,95,100,72,101,65,101,65,101,65,130,94,94,58,94,58,
94,58,72,51,72,51,72,51,72,51,87,43,87,68,87,43,
94,72,94,72,94,72,94,72,94,72,94,72,130,94,94,65,
94,87,58,87,58,87,58,36,101,101,101,101,101,101,101,101,
101,101,101,101,101,101,101,96,101,101,65,101,101,101,101,101,
101,101,101,101,101,101,101,101,101,72,101,101,101,101,101,101,
101,101,101,101,101,101,101,103,78,101,101,101,101,101,101,101,
101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,
101,101,101,101,101,94,65,51,36,101,65,94,72,94,72,94,
72,94,72,94,72,101,101,101,101,101,101,101,101,101,101,101,
101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,
101,101,94,65,130,94,101,65,101,101,101,101,101,101,101,101,
101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,
101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,
101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,
101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,
101,101,101,101,101,101,101,101, };

// Call this function with
//    font: NULL or array length
//    data: NULL or specified size
//    height: STB_FONT_times_bold_9_latin_ext_BITMAP_HEIGHT or STB_FONT_times_bold_9_latin_ext_BITMAP_HEIGHT_POW2
//    return value: spacing between lines
static void stb_font_times_bold_9_latin_ext(stb_fontchar font[STB_FONT_times_bold_9_latin_ext_NUM_CHARS],
                unsigned char data[STB_FONT_times_bold_9_latin_ext_BITMAP_HEIGHT][STB_FONT_times_bold_9_latin_ext_BITMAP_WIDTH],
                int height)
{
    int i,j;
    if (data != 0) {
        unsigned int *bits = stb__times_bold_9_latin_ext_pixels;
        unsigned int bitpack = *bits++, numbits = 32;
        for (i=0; i < STB_FONT_times_bold_9_latin_ext_BITMAP_WIDTH*height; ++i)
            data[0][i] = 0;  // zero entire bitmap
        for (j=1; j < STB_FONT_times_bold_9_latin_ext_BITMAP_HEIGHT-1; ++j) {
            for (i=1; i < STB_FONT_times_bold_9_latin_ext_BITMAP_WIDTH-1; ++i) {
                unsigned int value;
                if (numbits==0) bitpack = *bits++, numbits=32;
                value = bitpack & 1;
                bitpack >>= 1, --numbits;
                if (value) {
                    if (numbits < 3) bitpack = *bits++, numbits = 32;
                    data[j][i] = (bitpack & 7) * 0x20 + 0x1f;
                    bitpack >>= 3, numbits -= 3;
                } else {
                    data[j][i] = 0;
                }
            }
        }
    }

    // build font description
    if (font != 0) {
        float recip_width = 1.0f / STB_FONT_times_bold_9_latin_ext_BITMAP_WIDTH;
        float recip_height = 1.0f / height;
        for (i=0; i < STB_FONT_times_bold_9_latin_ext_NUM_CHARS; ++i) {
            // pad characters so they bilerp from empty space around each character
            font[i].s0 = (stb__times_bold_9_latin_ext_s[i]) * recip_width;
            font[i].t0 = (stb__times_bold_9_latin_ext_t[i]) * recip_height;
            font[i].s1 = (stb__times_bold_9_latin_ext_s[i] + stb__times_bold_9_latin_ext_w[i]) * recip_width;
            font[i].t1 = (stb__times_bold_9_latin_ext_t[i] + stb__times_bold_9_latin_ext_h[i]) * recip_height;
            font[i].x0 = stb__times_bold_9_latin_ext_x[i];
            font[i].y0 = stb__times_bold_9_latin_ext_y[i];
            font[i].x1 = stb__times_bold_9_latin_ext_x[i] + stb__times_bold_9_latin_ext_w[i];
            font[i].y1 = stb__times_bold_9_latin_ext_y[i] + stb__times_bold_9_latin_ext_h[i];
            font[i].advance_int = (stb__times_bold_9_latin_ext_a[i]+8)>>4;
            font[i].s0f = (stb__times_bold_9_latin_ext_s[i] - 0.5f) * recip_width;
            font[i].t0f = (stb__times_bold_9_latin_ext_t[i] - 0.5f) * recip_height;
            font[i].s1f = (stb__times_bold_9_latin_ext_s[i] + stb__times_bold_9_latin_ext_w[i] + 0.5f) * recip_width;
            font[i].t1f = (stb__times_bold_9_latin_ext_t[i] + stb__times_bold_9_latin_ext_h[i] + 0.5f) * recip_height;
            font[i].x0f = stb__times_bold_9_latin_ext_x[i] - 0.5f;
            font[i].y0f = stb__times_bold_9_latin_ext_y[i] - 0.5f;
            font[i].x1f = stb__times_bold_9_latin_ext_x[i] + stb__times_bold_9_latin_ext_w[i] + 0.5f;
            font[i].y1f = stb__times_bold_9_latin_ext_y[i] + stb__times_bold_9_latin_ext_h[i] + 0.5f;
            font[i].advance = stb__times_bold_9_latin_ext_a[i]/16.0f;
        }
    }
}

#ifndef STB_SOMEFONT_CREATE
#define STB_SOMEFONT_CREATE              stb_font_times_bold_9_latin_ext
#define STB_SOMEFONT_BITMAP_WIDTH        STB_FONT_times_bold_9_latin_ext_BITMAP_WIDTH
#define STB_SOMEFONT_BITMAP_HEIGHT       STB_FONT_times_bold_9_latin_ext_BITMAP_HEIGHT
#define STB_SOMEFONT_BITMAP_HEIGHT_POW2  STB_FONT_times_bold_9_latin_ext_BITMAP_HEIGHT_POW2
#define STB_SOMEFONT_FIRST_CHAR          STB_FONT_times_bold_9_latin_ext_FIRST_CHAR
#define STB_SOMEFONT_NUM_CHARS           STB_FONT_times_bold_9_latin_ext_NUM_CHARS
#define STB_SOMEFONT_LINE_SPACING        STB_FONT_times_bold_9_latin_ext_LINE_SPACING
#endif

