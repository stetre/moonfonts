// Font generated by stb_font_inl_generator.c (4/1 bpp)
//
// Following instructions show how to use the only included font, whatever it is, in
// a generic way so you can replace it with any other font by changing the include.
// To use multiple fonts, replace STB_SOMEFONT_* below with STB_FONT_consolas_bold_18_latin1_*,
// and separately install each font. Note that the CREATE function call has a
// totally different name; it's just 'stb_font_consolas_bold_18_latin1'.
//
/* // Example usage:

static stb_fontchar fontdata[STB_SOMEFONT_NUM_CHARS];

static void init(void)
{
    // optionally replace both STB_SOMEFONT_BITMAP_HEIGHT with STB_SOMEFONT_BITMAP_HEIGHT_POW2
    static unsigned char fontpixels[STB_SOMEFONT_BITMAP_HEIGHT][STB_SOMEFONT_BITMAP_WIDTH];
    STB_SOMEFONT_CREATE(fontdata, fontpixels, STB_SOMEFONT_BITMAP_HEIGHT);
    ... create texture ...
    // for best results rendering 1:1 pixels texels, use nearest-neighbor sampling
    // if allowed to scale up, use bilerp
}

// This function positions characters on integer coordinates, and assumes 1:1 texels to pixels
// Appropriate if nearest-neighbor sampling is used
static void draw_string_integer(int x, int y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0, cd->t0); glVertex2i(x + cd->x0, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t0); glVertex2i(x + cd->x1, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t1); glVertex2i(x + cd->x1, y + cd->y1);
        glTexCoord2f(cd->s0, cd->t1); glVertex2i(x + cd->x0, y + cd->y1);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance_int;
    }
    glEnd();
}

// This function positions characters on float coordinates, and doesn't require 1:1 texels to pixels
// Appropriate if bilinear filtering is used
static void draw_string_float(float x, float y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0f, cd->t0f); glVertex2f(x + cd->x0f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t0f); glVertex2f(x + cd->x1f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t1f); glVertex2f(x + cd->x1f, y + cd->y1f);
        glTexCoord2f(cd->s0f, cd->t1f); glVertex2f(x + cd->x0f, y + cd->y1f);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance;
    }
    glEnd();
}
*/

#ifndef STB_FONTCHAR__TYPEDEF
#define STB_FONTCHAR__TYPEDEF
typedef struct
{
    // coordinates if using integer positioning
    float s0,t0,s1,t1;
    signed short x0,y0,x1,y1;
    int   advance_int;
    // coordinates if using floating positioning
    float s0f,t0f,s1f,t1f;
    float x0f,y0f,x1f,y1f;
    float advance;
} stb_fontchar;
#endif

#define STB_FONT_consolas_bold_18_latin1_BITMAP_WIDTH         256
#define STB_FONT_consolas_bold_18_latin1_BITMAP_HEIGHT        112
#define STB_FONT_consolas_bold_18_latin1_BITMAP_HEIGHT_POW2   128

#define STB_FONT_consolas_bold_18_latin1_FIRST_CHAR            32
#define STB_FONT_consolas_bold_18_latin1_NUM_CHARS            224

#define STB_FONT_consolas_bold_18_latin1_LINE_SPACING          12

static unsigned int stb__consolas_bold_18_latin1_pixels[]={
    0x0002a8aa,0x75055500,0x002aa0dc,0x32a05b30,0xaf775c0b,0x701eeee9,
    0x006fa2bb,0x02600088,0x80566544,0x09802cca,0x009b2e40,0x32601995,
    0x277ae00c,0x26cb9038,0x6440a980,0x5531001c,0x17910155,0x221fe7f8,
    0x6c00b52e,0xa9ff80df,0x0017ec6f,0xffd11bfa,0x7f75c3ff,0x03ddff57,
    0x3fa2bffb,0x009f003f,0x3fea0be6,0x7ec42fff,0xd900efff,0x23fe209f,
    0x77d407f9,0x3fdbf301,0xdffdbf10,0xf98ff881,0x260fb007,0x3f2201ff,
    0xe80fffff,0xff3fc5ed,0x13f69fd0,0x5c80fae0,0x02fd87b1,0x3fa1fdc0,
    0x5fe0ff32,0x3be204fa,0x4c06f880,0xfa801dfb,0x988bfe81,0x7e577ec0,
    0x0d53f05f,0x98057154,0x0130c401,0x5500aa82,0xf995015c,0xb004c409,
    0x1ff3ffff,0x7c7a9f88,0x4df91fe7,0x00002fe8,0x0005fb00,0x2fa85f70,
    0x409f57f8,0x03f604fa,0x3fffffa2,0x203f2201,0x3fe604ff,0x3207fe60,
    0x82a883ff,0x0599502a,0x5402cca8,0x665402cc,0xffffd102,0x2a82a88d,
    0x7dffffe2,0x44ffd80f,0xffa9fe7f,0xf90ffcc0,0x3f29fb0b,0x5fb4fd85,
    0xffc89ffb,0x45be5fff,0x7f84f999,0x27d409f5,0xbfd03f90,0xd30197fb,
    0xffd0ffff,0xf0bf501b,0x0399305f,0x41ff0ff3,0x0effffe8,0x77ffff44,
    0x7ffff440,0x7fff440e,0x56fec0ef,0x1fe65ffe,0x7ffcc3fe,0x2a01ff7f,
    0xd9fe7f81,0x4c9f702f,0x43fe20ff,0x3fe20ff9,0xffdfffb0,0x7f7775c9,
    0xfff77f35,0x2aff0bf7,0x80fea04f,0x4ffc42fc,0x3bfe207c,0x7f7e46ee,
    0x427dc3ff,0x5ffe83fe,0x0ff87f98,0x3ff2bbf6,0x7e577ec5,0x6577ec5f,
    0x577ec5ff,0x3fe65ffc,0x30ffdf88,0x221ff0ff,0x1ff7ffff,0x1ffffecc,
    0xff8bfcff,0xfe8df100,0x7fd17ee3,0x1ffb2fdc,0x5fa81fea,0x5f9df3f7,
    0x3eaff0bf,0xa80bf204,0x6effc0cf,0x2757f206,0x3f623fe2,0x3613f23f,
    0x3fffc43f,0x87fc3fcc,0x3fe60ff9,0x7cc1ff30,0x4c1ff30f,0x41ff30ff,
    0x2bf50ff9,0xf31feafa,0x7f41ff0f,0x541ff7ff,0xf2ffccce,0x06fabfcf,
    0x4df707fc,0xd37dc2fe,0xf117ec5f,0x6d7ea01f,0xf9fbbfaf,0x09f57f85,
    0xc880bff7,0x3ffee3ff,0x3e5fd03f,0xf917fc43,0x3a1bea1f,0x7f67dc2f,
    0x7fc3fcc2,0x5ff0bf50,0x4bfe17ea,0x52ff85fa,0x2e5ff0bf,0x7fb1f94f,
    0x83fe1fe6,0x1ff7ffd8,0xff04fc80,0x5fb013ee,0x3fc4ffc4,0x3fc4ffc4,
    0x03ff0bf6,0x7df757ea,0xf85f9fca,0xff709f57,0x3efe8809,0x0ffffed4,
    0x20be2bfa,0x1ff12ffe,0x07fe1fe6,0x989f95fb,0xf90ff87f,0x3f27fd09,
    0x9f93fe84,0x13f27fd0,0xfa7e4ffa,0x1fe67f95,0x4ea203fe,0xdaa980ff,
    0x3eeff04f,0x321fe404,0xf904fbcf,0x2fd89f79,0x7d403fe2,0xf93f7dd5,
    0x2aff09f1,0x807f604f,0x37e203fb,0x4e7e46ff,0xeffe881f,0x867fc6fc,
    0xf57f86fb,0xff87f98d,0x7fb09f90,0x4ff613f2,0x93fd84fc,0x2e7fb09f,
    0x5fb2f9cf,0x03fe1fe6,0xfe883fe0,0xff04ffff,0x5fb017ea,0x01feef98,
    0xd83fddf3,0xa81bf22f,0xf5f7dd5f,0x2ff05f7f,0x0fea04fa,0x3e601fc8,
    0x7fd47fa9,0xfb80cbfe,0x7fe41fff,0x7d42ffef,0x7cc3ff15,0xdf70ff87,
    0x1bee5fd0,0x437dcbfa,0xd0df72fe,0x3f3bea5f,0x1fe63ff0,0x3fe003fe,
    0x7dc33fa0,0xf8bfcff4,0x740ffc07,0x7ff406ff,0xfdcdfd86,0x6d7ea01f,
    0x6ffeff9f,0x813eaff0,0x07f204fa,0x3f23ee31,0xfffffb86,0x20dfd100,
    0xc82efffb,0xf88ff63f,0xff53fc47,0x1fea3ff0,0x43fd47fe,0xf0ff51ff,
    0x5bffe23f,0x11fe26fb,0x83fe00ff,0x7d3f61ff,0x01fe9fe7,0x3fee0df3,
    0x417fdc02,0x01effffd,0xa8fcafd4,0xff00b98b,0x4fa813ea,0xff307f20,
    0x203fffff,0x5401bfe8,0x03fe207f,0x7ffffff4,0xdf50ffc5,0xfb867fc4,
    0x5c33fe26,0x433fe26f,0x33fe26fb,0xffa8df70,0x7fc2ffee,0x8221bea1,
    0x677f47fa,0x7cff4ffe,0x7ec17f27,0x700df703,0x06bf60df,0x7f54fc80,
    0x9f57f800,0xfb02fc40,0xeffed881,0xf82ec01c,0x404ffccd,0xf32ecefe,
    0x1ffddddf,0x7fe67fe4,0x7f7ffe42,0x77ffe42f,0x7ffe42ff,0x7fe42ffe,
    0xfd82ffef,0xffc81eff,0xfd82ffcc,0x74c3ffdd,0xff4fadff,0x87fd13fc,
    0x2a620ffb,0xf53101ff,0x00bf603f,0xf8bfea17,0x3310a61f,0x0677eaff,
    0xf530d7f4,0x2004e80f,0xffffd04f,0xfffd3007,0x3fe13ee9,0x3ffff222,
    0x3dfff702,0x07bffee0,0x80f7ffdc,0xd01efffb,0x7e44013d,0xfb302fff,
    0x804405df,0xff31fe7f,0xf70bfe63,0x7fdc07ff,0x00bf603f,0x98bfffff,
    0x644fffff,0xfff57fff,0x2fff503f,0x7c02fff8,0x000fe003,0xfb04cc00,
    0x2209f905,0x20011000,0x00110008,0x03e88022,0x00000440,0x43fcff00,
    0x507fb5fa,0xbca80179,0x20055400,0x7101ccca,0x55530599,0x02aaaa25,
    0x002aa298,0x00980026,0x00000000,0x00000000,0x00000000,0x00000000,
    0x8a0ff3fc,0x00000028,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x93200000,0x0000004c,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x20000000,0x93001cc8,0x332a0019,0x50199300,0x99500015,0x026cb901,
    0x75c06654,0xbd70389d,0x65440713,0x0d4401cc,0x54003991,0x0cc980cc,
    0x2026cb90,0xcc980cca,0x801cc880,0x9911365c,0x06e3a803,0x2eea02a8,
    0x260aa882,0x6fcc01ff,0x77d401fe,0x3fdbf301,0x54003fc8,0x8ff881ef,
    0x77d407f9,0xffedf881,0x7f6fc40e,0xfff980ef,0x1fe406ff,0x2a007fe6,
    0xedf981ef,0x4c7fc41f,0x07bea07f,0x207fb7e6,0x3e201ff9,0xf987f98f,
    0x2a7fe01f,0x09ffb06f,0x41dffffb,0x04c40ff9,0x40098620,0x130c4019,
    0x4c006f88,0x05715401,0x55040198,0x80aa8201,0x4b9aeff8,0x2203fe20,
    0x20198009,0x8aa02618,0x8806602b,0x04c40261,0x102b8aa0,0xd8ae4013,
    0x2ea9eb83,0x3fa27bee,0x9503fe62,0x50551059,0x15415445,0xfb01aa98,
    0x06aa6005,0x53035530,0x2a235303,0xa981541a,0x00bfb01a,0x55444fb8,
    0x2a21aaaa,0x221aaaaa,0x21aaaaaa,0x1aaaaaa8,0x2aaaaaa6,0x2aaaaa61,
    0x01aa981a,0x35555553,0x5555554c,0xf9000001,0xff31fec7,0x3ffffa21,
    0x3e1fe60e,0xff0ff30f,0x20bffd01,0xffd005f9,0x85ffe80b,0x11ff86fa,
    0x80fe8dff,0x5ff05ffe,0x541fe800,0x23ffffff,0x3ffffffa,0x3fffffea,
    0x3ffffea3,0x3ffff23f,0x3fff24ff,0xffe84fff,0xfffff905,0x7fffe49f,
    0x7fec44ff,0xeffd882e,0x77dcbf62,0xefd9fe20,0x3e65ffca,0xff30ff87,
    0xff881ff0,0x007fa07f,0x440ffff1,0x5fd07fff,0xfff12fdc,0x3e207f45,
    0x0ff887ff,0x2a17ea00,0x21aaaaef,0x1aaaaefa,0x2aaabbea,0x2aabbea1,
    0x3fea621a,0x3ea62099,0x7fc4099f,0xff53107f,0x7d4c4133,0x3fe2099f,
    0x3e21ffcd,0xfb1ffcdf,0xf881ff35,0x7cc1ff37,0xff0ff30f,0x3fe1fe61,
    0x17f67dc0,0x7dc04fb8,0x9f702fec,0x2df505fd,0x3fe21ff8,0xf703fa6f,
    0xff985fd9,0x20bf6000,0x37d406fa,0xf501bea0,0x01fe200d,0x67dc0ff1,
    0x1fe202fe,0x3f20ff10,0x3fc97ea3,0x5d7ed7ea,0xf57f885f,0x3e65ff0b,
    0xff30ff87,0xafd81ff0,0x03fe04fc,0x04fcafd8,0x209f95fb,0x445fbafe,
    0x1fd1fedf,0x44fcafd8,0xf1001ff8,0x501bea0d,0x06fa80df,0xf88037d4,
    0xb03fc407,0x4409f95f,0x83fc407f,0x7fbaabfe,0x3eeaaffa,0x7ff55fb7,
    0x213f2ff0,0xf0ff33fe,0x3e1fe61f,0x6fabfc0f,0x7f80ff20,0x55fe0df5,
    0xfddf506f,0x5fadf883,0xf57f81fd,0x2007ff0d,0xdff503fc,0x7fd43ddd,
    0x3ea1eeee,0x2a1eeeef,0x81eeeeff,0x3fc407f8,0x81beaff0,0x3fc407f8,
    0xfffffff8,0x3fffffe7,0x3f25fb7f,0x4fcbfc4f,0x0ff33fd8,0x21fe61ff,
    0x457ea0ff,0x0df101ff,0x0ffc57ea,0x0ffc57ea,0xf885ffe8,0x41fd3ff5,
    0x83ff15fa,0x7c0c1ffc,0xffff500f,0x7ffd45ff,0x3fea2fff,0x3ea2ffff,
    0x882fffff,0x83fc407f,0x03ff15fa,0xff101fe2,0xff003fe0,0xf717ec01,
    0x6fb9543f,0x0ff32fe8,0x21fe61ff,0xd8ff20ff,0x20bf603f,0x90ff63fc,
    0xa81fec7f,0x75f881ff,0x7e41fd9f,0xfd10ff63,0xfb8dfdff,0x501bea04,
    0x06fa80df,0xf88037d4,0xc83fc407,0x440ff63f,0x83fc407f,0x1ff403fe,
    0x2fe85fb0,0x7c3fd4aa,0xf88ff11f,0xff11fe27,0xffffffe8,0x3a17ea05,
    0x45ffffff,0x5ffffffe,0x3e20ff10,0x41fdff15,0x5ffffffe,0x4ffffd88,
    0xdf500ff4,0x5406fa80,0x037d406f,0x7c407f88,0xfffffd07,0x01fe20bf,
    0x3fe60ff1,0x3e63dccd,0xfb3dccdf,0x21ff9955,0xcff89ffa,0x1ff8df70,
    0x43ff1bea,0x3bfe66fa,0x200ffeee,0x3bfe61fe,0xf30ffeee,0x1ffddddf,
    0x3e20ff10,0x4c3fff25,0xffeeeeff,0xf303fb00,0x406fa80b,0x37d406fa,
    0x4401bea0,0x43fc407f,0xfeeeeff9,0x407f880f,0x3faa07f8,0x7f542fff,
    0x95fb2fff,0x7fcc5dff,0xffdfff90,0xfccffc85,0x667fe42f,0x213ee2ff,
    0x93ee02ff,0x72ff84fb,0x105ff09f,0x897e20ff,0x09f70fff,0x41be05ff,
    0x7fd402fd,0x3ea2eeee,0x2a2eeeef,0x22eeeeff,0x2eeeeffa,0x3bbffbae,
    0x3bffbae3,0xff09f73e,0x77ff75c5,0x3ffbae3e,0x013103ee,0x04400988,
    0x7ffdc088,0xfffc881e,0xfffc882f,0x6417ec2f,0xd976204f,0xfb4fc82f,
    0xf109f905,0xfb17e20f,0x320bf61f,0xd105904f,0xffff500b,0x7ffd47ff,
    0x3fea3fff,0x3ea3ffff,0x323fffff,0x24ffffff,0x4ffffffc,0x49f905fb,
    0x4ffffffc,0x3ffffff2,0x00000004,0x88004400,0x00011000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x54000000,0x540dcc2a,0x2a00aaa1,0x8ae606e3,0x0000aa00,
    0x0dc75000,0xa98026a6,0x9800130a,0x5400022b,0x055506e3,0x55002a20,
    0x05550005,0x2aa00154,0x402aa802,0x510000aa,0x06fec003,0x7dc9fdf3,
    0xf013fa21,0xf88df53f,0xd80fdeff,0xffd504ff,0x27f65fff,0x3ff04ffd,
    0xfffb8df5,0xffdfd104,0x441df303,0x00fdefff,0x53ff0bf7,0x04fe88df,
    0x102fffec,0x7ec009fd,0x09ffb00d,0xf8837f60,0x813fa20f,0xf70002fd,
    0x2e03be6b,0x2d97c83e,0x05d904f8,0x383d8ae4,0x3d705db3,0xbefa85d5,
    0xffb1cffc,0xb909ffdf,0xfd950f62,0xffff88bf,0x3ffc80af,0x202ed99c,
    0xb15c87fd,0x5c0bb207,0x403feadf,0x3eb802ec,0x0baa7ae0,0xff507d70,
    0x3605d903,0xbf70002f,0x9000fff2,0x0076df2f,0x00800400,0xd17e4010,
    0xa87fec3f,0xfa80007f,0x3ea6e21f,0x03ff302f,0x002c9800,0x47fa0080,
    0x000004fa,0x40080000,0x5fb0003b,0x4d7ee000,0x3ff621ff,0x6fefcc2e,
    0xffb102fa,0xfffd985d,0x7ffecc3f,0x7ffecc3f,0xfb17e43f,0xff117ec3,
    0x2effe981,0x36617fc0,0x98006fff,0x2202effe,0xf717ec1a,0x7fffecc9,
    0x2fd97ec3,0x27dc5fb0,0x427dc5fb,0x982effe9,0xa83ffffd,0x2effe982,
    0x27fed7ec,0x5ffffd98,0x3f37fe20,0x7c66d41f,0xf9bff104,0x6667543f,
    0x333aa2ff,0x33aa2ffc,0x3ea2ffcc,0x7ec6fcbf,0xff50ffc2,0x2605fffd,
    0x37fe61ff,0x2a002ffc,0x02fffeff,0x22fd89f5,0x333aa4fb,0x3fea2ffc,
    0x8bf605fd,0xb8bf64fb,0x7f7fd44f,0x667542ff,0x237c2ffc,0x2fffeffa,
    0x3ffbfff6,0x766ffcc4,0xa8ff205f,0x403f605f,0x017ea3fc,0x4fc809f9,
    0xdf527e40,0x2fd81bff,0x3fe83fe2,0xffd91ff2,0x3f23fe8b,0x3fe81105,
    0x3f6a1ff2,0x9f717ec4,0x7f44fc80,0x717ec03f,0xf717ec9f,0x3f23fe89,
    0x7c4fc807,0xff91ff47,0x7fa87fec,0x0bf71ff4,0x7dd55ff4,0x2025f507,
    0x7fbaabfe,0x84fdaa98,0x984fdaa9,0x3fa4fdaa,0xf917ec00,0x3e63fccd,
    0x10b7f60f,0x43fd41ff,0x8ff31ffa,0x3ff60ff9,0xf717ec4f,0x9fb55309,
    0xfea7ffec,0x9f717ec0,0x49f717ec,0x07fcc7f9,0x227ed54c,0xf31fe67f,
    0xf88bf61f,0x5c1ff10f,0x3e1dd15f,0x87ffffff,0x45ffadf8,0x7fffffff,
    0x3fffffa2,0x3ffffa24,0x3fffa24f,0x3bbf64ff,0x66fec2cc,0x1bea1ffd,
    0x81fd87fe,0x43fcc7f9,0x0df54ffb,0x07fea3ff,0x49f717ec,0x4fffffe8,
    0xf7ff1bf5,0x7dc5fb0f,0x4fb8bf64,0x87fe1bea,0x4fffffe8,0x86fa9fe2,
    0xf85fb1ff,0xfb8ff31f,0x3fe7ff95,0xbf1fb000,0x007fc5f5,0x27dc33fa,
    0x93ee19fd,0x49f70cfe,0x6ffffffa,0x07bffff6,0x7fc41ff3,0x3e602a60,
    0x741fea0f,0x441ff34f,0x40df70ff,0xe93ee2fd,0x329f70cf,0x0bfff33f,
    0xb27dc5fb,0xf327dc5f,0xd07fc41f,0x893ee19f,0x883fe67f,0x445fb0ff,
    0xb8ff30ff,0x3a3ff35f,0x8afa803f,0x1ff47f3f,0x4fd87fe0,0x24fd87fe,
    0x453f61ff,0x47fe20ff,0x3e201afd,0x951bee3f,0x6c5ff101,0x227f905f,
    0xa9bee3ff,0x27fb01ff,0x87fe4ff9,0x5c9f94fd,0x33fd82ff,0x99fec9ff,
    0x8ffe24ff,0xb0ffc6fb,0xf13fc49f,0xfb37dc7f,0xff137e45,0x0897fe23,
    0x37337fe6,0xade97a23,0x337fe62f,0x33bfa3dc,0x3bfa4ffe,0x3fa4ffec,
    0xf34ffece,0xd87fcc1f,0xeffc802f,0x27fc2ffd,0xffeeffc8,0x3237e541,
    0x42ffdeff,0x2e1cdffe,0x24fffdff,0x4ffecefe,0xffd9bff3,0xffbff70d,
    0x7effdc9f,0x77fe44ff,0x77f42ffd,0x3e64ffec,0x37bff20f,0x337f62ff,
    0x7fec1ffd,0x5405fffd,0x322ffffe,0x217faa0f,0x22ffffea,0x4fadffe9,
    0x3eb7ffa6,0x2b7ffa64,0x3bbffa4f,0x00bf62ff,0x4177ffdc,0x3ff203fe,
    0x03ef82ef,0x105dfff7,0x6c47fffb,0x264fadff,0x24fadffe,0xfdbffffa,
    0x56ffec45,0x37ff624f,0xfffb84fa,0xdffe982e,0x03fe64fa,0xc85dfff7,
    0x881effff,0x05f9dffd,0x08001310,0x11004c40,0x11001100,0x0bccca80,
    0x22000554,0x08800400,0x80088000,0x00880aa8,0x00880088,0x02200220,
    0x08800880,0x4402aa20,0x11001800,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x0aa00000,
    0xb882aa80,0x2f220bcc,0x2ec01a81,0x882aaa20,0xa82aaaaa,0x665402bc,
    0x208ae602,0x0aaaaaa8,0xe8399971,0x2613f22f,0x88000aa3,0xa881ccca,
    0x99502bcc,0x002a9879,0x0aa02aa8,0xc8aa0aa2,0x534fd85f,0xfffb3001,
    0x09ffb0bd,0xf881bfb0,0x951fffff,0x00fdc1fb,0x3f6207f3,0x3fea1fff,
    0x3f627fff,0xfe885fee,0x7c40efff,0xf50fdeff,0x2e3fffff,0x3a5fffff,
    0x3a13f22f,0x5c0ff8af,0x7cc2fffe,0x7dc6ffff,0x7c47ffff,0x220fffff,
    0x3f2005fd,0x89ffb00e,0x30ff87f9,0x87fc41ff,0x7fcc03fd,0x75c5fecd,
    0x3ae02ea9,0x9119fb03,0x8876e49f,0xfffea84f,0xabefe883,0x2a66620a,
    0xf983b67f,0x7e577ec5,0x5db3385f,0x666677d4,0xff733530,0x4fc8bfa3,
    0xd89b0db8,0x222feeff,0x24b9aeff,0x5baacffb,0x5cccefec,0xa804eb80,
    0x2a7ae04e,0x3e1fe62e,0xfb8ffa0f,0xfd00ff65,0x0002fdc7,0xfa8bfa00,
    0x76cbf725,0x7feffd40,0x002fdc2f,0xb8fcdfe6,0xff30fabd,0x0007fcc1,
    0xff0013ea,0x4fc8bfa3,0x41ffa800,0xf8817f60,0x02ff803f,0x00000000,
    0x41ff0ff3,0xd8bfa6fb,0x83fe203f,0xb8bf65fb,0x77ff4c4f,0xe89efc82,
    0x55f7532f,0xf35fd05f,0x12fe8dfd,0xb65fe600,0x2a7f3dfd,0x362ff85f,
    0x2a4ffd9f,0xff3000cf,0x89f917f4,0x641ffffa,0x017fc04f,0x3fa00ff3,
    0x3ffea02e,0xffffa81f,0x3ffff501,0x0ff87f98,0x1fe27fe2,0x9b7ec7fb,
    0xfb2fdc7f,0xff527dc5,0xd885fffd,0x3ae3ffff,0xf984f8ac,0x41ff1f96,
    0x0dfffeff,0x46edfe60,0x4fca745f,0x3ff63fe8,0xff52ffef,0xee985dff,
    0xc8bfa1ef,0x7ff7544f,0xf101fec1,0x937dc01f,0xfffa8999,0x7f7540be,
    0xffeea81f,0x3ffdd501,0x0ff87f98,0x227de7e4,0x21df93fd,0xb2fdc7f9,
    0xfd27dc5f,0x7dc3fe47,0x3f604fff,0x2dd5fa80,0xbfff11fe,0x7cc0bffb,
    0xd89f19d7,0x7fb09f95,0x4fc87fec,0x3fffb993,0x86ffff4c,0x09ff33fe,
    0x13f20ff4,0x2e00ff98,0x03fffe5f,0x01dfffb3,0x3fd007fa,0xf983fd00,
    0x7cc0ff87,0x5fec1fee,0x3fe20ffa,0x7ecbff11,0x3fcd3ee2,0xefb83fe6,
    0xfa84ffb9,0x7f3df102,0x0ffc43fe,0x3e601ff3,0x467febb7,0xfd0df74e,
    0xbf717ec5,0xd8827f40,0xffbffd5f,0x07fa05ff,0xf1083ff3,0x337dc03f,
    0x32201ff3,0x03fd05ff,0xfe801fe8,0x7fc3fcc1,0xd86ffe80,0xfd81ffdf,
    0x365fffdf,0x7d53ee2f,0x3fe1ff86,0xbf11bea1,0xfbff17f6,0x1ff8df51,
    0x7f9807fc,0x19ff71f7,0x3e1fea5f,0xfb8bf61f,0xa817f205,0x1bfffd6f,
    0x07fa07ff,0x8ffbbffa,0x3fe603ff,0x32007fc0,0x803fd06f,0x1fe801fe,
    0x1fe23fc4,0x7ec17fdc,0xfd880eff,0x3f65fbdf,0x7fcd3ee2,0xff83fe20,
    0x1fb1be61,0xffb8bdf5,0x7ec2ffdf,0x6409fea4,0x2629f15f,0x33fe26c8,
    0x2fd8df70,0x7fc417ee,0x7f57f204,0x3fd00c09,0x8bfffee0,0xfd0c1ffc,
    0x2060ff8b,0x03fd05fc,0xfe801fe8,0x3ea1ff81,0x360df706,0x2205febf,
    0x9fecbf70,0x7ff14ff9,0x3bf637dc,0x3ea3ffcc,0xc85daf8a,0xf982efff,
    0x2e3ffcdf,0x322ffdcf,0x42fda9cf,0x2ffefffc,0x2bf717ec,0x0effecdb,
    0x3ffd99b9,0xfd0007fa,0x4407f403,0x26feffff,0xffeefffa,0xfdddff10,
    0x007fa05f,0x3fd003fd,0xff99ff90,0x0ffd4c45,0x3ff8bfd8,0x3ee5fb80,
    0x324fffdf,0x42ffdeff,0x23ffffd8,0xffff55e8,0x4009fc87,0x543ffffa,
    0xeb83ffff,0xff701eff,0x45fb03df,0xffff95fb,0x7fffec19,0x200bfa1d,
    0x3cdffccb,0x3f2205f8,0x7f4c4fff,0x3fa25fff,0x65c2efff,0x2e3cdffc,
    0x43cdffcc,0x3cdffccb,0x0bffff22,0x6c07fff7,0x805ff53f,0x3ff625fb,
    0x7fdc4fad,0x404c02ef,0xdb3310fc,0x44004d81,0x44004400,0x6c011000,
    0x9897ee2f,0x54026600,0xfffd800a,0x0e446fff,0x09800880,0xfd806620,
    0x366fffff,0x46ffffff,0x6ffffffd,0x2f2a0110,0xf91fec00,0x40d4401f,
    0x00110008,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x88000000,0x2a21a81a,0xcca81a81,
    0x50066402,0x00155019,0x510bcba8,0x01101555,0x4c00aa81,0x700aa82a,
    0x55550599,0x2aaa0013,0x555510aa,0x2a215555,0xa9809aaa,0x4c055442,
    0x80a981aa,0x303551a8,0x2aaaa255,0x555510aa,0x882aa355,0x985440aa,
    0x44ffa80a,0x89ff51fb,0x3ff621fb,0xff980eff,0xb01ff102,0x7fec005f,
    0xffff51ff,0xfe85f983,0xf8805fd1,0x103fe61f,0xf8bffffd,0x403fffff,
    0x53fffffa,0xf999999f,0x3ffffe63,0x917fc43f,0x17ffa0df,0x53e607f2,
    0x54fd85fd,0x25ffffff,0x3ffffffa,0x42ff45fd,0x101f92fa,0x127c49f3,
    0x227c49f3,0x4fe99efc,0xf100fe88,0x005fb01f,0x42667bea,0x441fe998,
    0x6fccccfe,0x033bfffa,0x83fd9bee,0x41c89dfc,0x3ffdabff,0x267fbf60,
    0xf8f7af50,0xfb55ff31,0xf16fc87f,0xffff105f,0x7f303f90,0x47fe1fea,
    0x0aaaaefa,0x35555df5,0x077dcbfa,0x407c8fdc,0x3e03b64f,0xff883b64,
    0x8003fe60,0xfffffffb,0x32005fb4,0x81fe803f,0x0ffffff9,0x3fffbbfa,
    0x6faafe81,0xff805fd0,0x7c41fee0,0xbbd40fed,0xf31f8dfc,0x7c47fb8d,
    0xf706fcaf,0x1fb85fd9,0x3ff13fa8,0x0df53fcc,0x5fd037d4,0xee883ff3,
    0x02effeef,0x7c0bea9f,0x6f985f54,0x7d47ffa6,0x77541fff,0xfb3eeeff,
    0x3609ffb5,0x81fe803f,0x0ffa9ef8,0x37eccbfa,0x80ff77d4,0x07fc00ff,
    0x5f703ff1,0x547a81fd,0x8df31f9f,0x77dc1ff8,0x95fb01ff,0xdd2fb89f,
    0x24fd8bea,0x81bea5fb,0x2bfa06fa,0xffe883fe,0x902effee,0x56409f15,
    0x75fa84f8,0x3aa5ffff,0xff101ffe,0xfdfffb01,0x3fb3225f,0x3fd04ccd,
    0x17e47f50,0x07fcc5fd,0x5442ffec,0x741aabff,0x5ff0eeff,0x3bbfafd0,
    0x3f662f51,0xf0df31f8,0x0bffd05f,0x5c6fabfc,0xfa8ff8af,0x2fe9bee2,
    0x8aaabbea,0x1eeeeffa,0xd80dfdfd,0x7ec017e7,0xb80fd800,0xfd9efddf,
    0xf101fe82,0x21ffb01f,0xffff34fc,0x3fa0ffff,0x3ee3fb81,0x7f98bfa2,
    0xf501ff30,0xf8bfffff,0x5ff0ffff,0xfffd4f98,0x8efe5ea3,0xff0df31f,
    0x209ffd05,0x43ff15fa,0xabffbafa,0x223fe21f,0x3ffea0ff,0xfff50fff,
    0x3bfa5fff,0xf8b7406f,0x012fa804,0xffa817d4,0x3a07fa5f,0x01ff101f,
    0x42fdc5fb,0x1fe803fd,0x83fa5f98,0x8bfb12fe,0x4ffffffc,0x266bfe62,
    0x3e60ff80,0xfe8fe41f,0x7c5bbd40,0xff98df31,0x0ffffd41,0x47fb1fe4,
    0xbdfddbfa,0x7d57f41f,0x4ccf7d45,0xfe81bea1,0xfca83ffa,0x204efccf,
    0x0effadf8,0x25fdafc4,0x3fe22ff9,0xf101fe80,0x5c5fb01f,0x803fd85f,
    0xfff881fe,0x7fff47fe,0x4cc40fff,0xff8099ff,0xf707fc00,0xfffff81f,
    0x419bd40f,0xfb8df31f,0x7edff40f,0xfffffe85,0x2fefe65f,0x7e40fcfd,
    0x37d43fcd,0x7f40df50,0x7e41ffaa,0x07ffffff,0x3ea623f6,0x77d47ec2,
    0xbf717f45,0xff807fa0,0x3ee2fd81,0xe803fd85,0xffefc81f,0x3bbfa4fe,
    0xfcca80bd,0x0ff82ccf,0x75c47fc0,0x666fd44f,0x7dbd40ff,0x716f98fc,
    0x37fb89fd,0x77fcc5ff,0xf30ffeee,0x1fdf51fd,0x40ffff98,0x1bea06fa,
    0x0dfb2fe8,0x80bea9f1,0x83ba22fa,0x5daf8afa,0x7feeffdc,0x7403fd01,
    0x5fb3ccef,0x1fec2fdc,0x3ea0ff40,0x747fe20f,0xfeeb802f,0x3fa63eef,
    0x7c5eeeef,0x40dfffef,0x3bbfa0fd,0x33753f52,0x3bfe63f3,0x3e20dfff,
    0xfb9bf63f,0xff12ff84,0x203ffe2d,0x6fa86fff,0x3bbbfea0,0x3e25fd2e,
    0xfb9fcc3f,0x7ccbd101,0x2abd10ae,0x7d43ffff,0x665c1eff,0xe983cdff,
    0x45fb4fff,0x03fd85fb,0x79bff997,0xfd154154,0x83fc4005,0xfffffffa,
    0x16f7ffc6,0x3ffa37c4,0xfffff53f,0x3fe63fff,0x6fc82def,0x2fd9ffcc,
    0x7ff14fc8,0xffc83fec,0x2a06fa84,0xd3ffffff,0x50ffdc5f,0x6403f25f,
    0x53fff20f,0xdb3310fc,0x7ec02201,0x206fffff,0xb8bf6098,0xb03fd85f,
    0x0dffffff,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x55555300,0x10397035,0xa8805995,0xaaaaa82a,
    0x2aaaa2aa,0x03532aaa,0x20aa2353,0x2aaaaa2a,0x1aaaaa80,0x2a202a88,
    0x5511541a,0x81555555,0xaa82ccb8,0xaaa8aa61,0x000000aa,0x00004017,
    0x00008000,0x0bd0014c,0xffffffc8,0x50fffaa4,0x40bfffff,0xfff85ffd,
    0x3fa6ffff,0xf56fffff,0x3e23ff0d,0xffd3fc47,0xffe8dfff,0x3fcc5fff,
    0xfe8dff10,0xffffff30,0x7ffcc3ff,0x97fe25ff,0x3fffa7fe,0x3fa20dff,
    0x404ffbdf,0x7fecc6fc,0xffeb83ff,0x77ff4c2f,0x6fffea82,0x22effd88,
    0xff004ff8,0x9ffa9880,0x7ffffb09,0xffc9bfa8,0x85fffa81,0x6feccccc,
    0x3feaaaaa,0x5fb8bfa5,0x4ff11fe2,0x2ffa9afe,0x3ff2b3fa,0xf881fe62,
    0x443fa2ff,0xaaaffbaa,0x3ea73fa0,0x22fff12f,0x2b3fa7ff,0x2f665ffb,
    0x81fedffc,0x7541efd8,0x362ffccc,0x2a2feeff,0x22fffeff,0x45cbcff9,
    0x1ffcdff8,0x3e017fe6,0x70ff1007,0x8107fb1b,0x57fc43fe,0x05ff005f,
    0xdf507fdc,0x7f887fe2,0x43fd3fc4,0xd87fa5fb,0x881fe64f,0x03fa6fff,
    0x3fcc1fe2,0x7f7c57f2,0xfd0fdfba,0xff03fd45,0xbfd10fe6,0x553f2001,
    0x7fd041ff,0x0df93fe4,0x17ea3fc8,0xcc81dfd1,0x204ccffc,0x1fec07f8,
    0x3f217f40,0xfb805f9b,0x20bfe606,0x445fbafe,0xfd3fc47f,0x3fd1fec3,
    0x0ff31fec,0xe8ff6fc4,0x307f880f,0xf36fa8ff,0x1f9db9f7,0x0ff88bfa,
    0x7dd77d4c,0x2013fe64,0xf94fdaa9,0x263fcc09,0x5bff50ff,0x7557fd01,
    0x3ffb10ff,0x3fffffe2,0x01fe207f,0xff9807fb,0x2fcdbe60,0xfd017fc0,
    0x3fbbea0b,0x7777fc41,0x3bbfa7fe,0x5e7f44fe,0x1fe60efd,0xd5fadf88,
    0x20ff101f,0xfc99cff8,0x7fdb5f37,0xb8bfa1f9,0x3fffa26f,0x3f64ffff,
    0x3ffa201f,0x07fb4fff,0x0ffc37d4,0xf89ffff9,0x07ffffff,0x1fe09ff5,
    0x3603fc40,0x0ffe203f,0x017e63fd,0x7fdc0df7,0x217ffa00,0xfffffff8,
    0x3fffffa7,0x3ffffa2f,0x103fcc0c,0x3fa7febf,0x3207f880,0x56ffffff,
    0xf91ff75f,0x3f2f3fa3,0x2f4bf22f,0x740bff20,0x369f70cf,0x83fe604f,
    0x6d440ff8,0x003fe2ff,0xff01ffdc,0xb01fe200,0x13fa207f,0xdf533bf7,
    0x40ffa013,0x7d402ff8,0x447f881f,0x6447fa7f,0x3eeffa7f,0x103fcc1f,
    0x3fb3eebf,0x4c07f880,0xf55fcbcc,0x47f2df35,0x42fffffe,0x500ff17d,
    0x43ff09ff,0x83ff74fd,0x7dc7ff10,0xfd1ff406,0x05ff9007,0xff1007f8,
    0xe883fd80,0xffffc84f,0xfa83ffff,0x2017fa07,0x8ff107f8,0x987fa7f8,
    0x323fd0ff,0x103fcc5f,0x3fbfe2bf,0x4007f880,0x325f73fc,0x33fa5f72,
    0xfb9f9009,0x260395bf,0x677f45ff,0x3ffa4ffe,0x3ff23fee,0x3722ffde,
    0x261ffcbc,0x13dccdff,0x00003dfb,0x7ec07f88,0xa827f443,0xcefdcccc,
    0xf703fe82,0x0ff1001f,0x4ff11fe2,0xe9fee1fe,0x4c3ff11f,0xc97e207f,
    0x7f880fff,0x5c3fee00,0xfd2fb81f,0x8efe9805,0x2201fffd,0x6fff4c3e,
    0x3ff224fa,0x7ffdc2ff,0x7fffe42e,0xfffea82e,0xb803b22f,0x83cccccc,
    0x3eeffeeb,0xfffffff9,0x3ffffff6,0x5417e607,0xffff00ff,0xff10ffff,
    0xff11fe20,0x7ff777f4,0x5fd87fa3,0x3bbbbfe6,0x7fc4bf14,0x207f880f,
    0x22fffeeb,0xd2fb81fb,0x3102005f,0x00110000,0x80110022,0x09880099,
    0xffffd000,0xfff90bff,0x3ff29fff,0xffd7ffff,0x4c0fffff,0x207fd05f,
    0xfffffff8,0xf107f887,0x3fa7f88f,0x7f41bdff,0x7cc7fe61,0xf15fffff,
    0x880ffd8b,0x3bff207f,0x5c0fe40c,0x0005fd3f,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x64c00000,0xb8bf61cc,0x0000004f,0x5400d400,
    0x332601bb,0x1c1c0002,0x2bf101fd,0x34fd85fc,0x07fcc5ff,0x7ffe4154,
    0x2aa23fff,0x664c1100,0x2a06040b,0x404181bb,0x15c01bb9,0xaaaaaaa8,
    0x05550221,0x33333332,0x4aa22aa3,0xfb1fecdc,0x9fda7dc5,0x2fea4ffd,
    0x3ee0effb,0x04fd9ffa,0x36203ff5,0xfb85fcce,0x1fe04fff,0x29f927ec,
    0x34f981fd,0x07fc41ff,0x0ffa1ff7,0xff9057a1,0x3ee7ffff,0x0ffa81ff,
    0x321ffffb,0x7ec1fd1f,0x57e61fff,0x3ffee3fa,0x03ff703f,0xbffffffd,
    0xfe887fea,0xffffff84,0x3ea7fe4f,0xfd9fd446,0x7fed3ee2,0xff52ffef,
    0x7dcbfddf,0x0feeffdf,0xbb00ef98,0xf89d5bd9,0x3fc0ff15,0xefccff98,
    0x54aa5f90,0xfb8ffa3f,0x5fcdfd85,0x7d6ecf54,0x664bfb01,0x3ffc81fe,
    0xef887fc1,0x22a65fa8,0x227fa3fe,0x22bf10ff,0x6ecf887e,0xaaaaaa98,
    0xd909ffb1,0x98888887,0x3e63fa4f,0x27fdff55,0x6d3ee2fd,0x2a9f90ff,
    0x5cff13ff,0x5f73ff5f,0x791f1000,0x27ccf3b9,0x81fe01fb,0x2e0efff9,
    0xfb8ff8bf,0x2fe9bee2,0x40ffff88,0x1effffea,0xfe80ffb8,0x3a3fe881,
    0xca7d44fe,0xb8ffc43f,0x7cc5fb4f,0x1f903f23,0xf50007f5,0xf880003f,
    0x57e63fa4,0x3f67f56f,0x17ed3ee2,0x91beabf7,0x76f97dc9,0x3333265f,
    0x2d50cccc,0x223f1eec,0x266f88ef,0xcccffccc,0x2627fec0,0xfcbffbcf,
    0x3e27fe21,0x413fee07,0xa80dffe8,0x03fd01ff,0xffcc8bf6,0x27d5be22,
    0x4fec7ff3,0x3be20ff8,0x1fcc7e88,0x7ffec1fb,0x00224fff,0x7d8ae200,
    0x3f7fa9f1,0x7dc5fb3f,0xafdc5fb4,0x97dc05fa,0x3ea5f76f,0x1fffffff,
    0x7c7b32f3,0x8bffff20,0xfffffffa,0x3ffbf21f,0x3fbb7e24,0xbcfc87de,
    0xffff104f,0xfeeffb81,0x20ffe22f,0x2a0afe98,0x49f905fc,0x30ff89fe,
    0x3e6137ff,0xffc8bf56,0x263742ff,0x3bbbb25f,0x000004ee,0xa8bc8800,
    0x3fe67fb0,0xafdc5fb4,0x97dc05fa,0x0005f76f,0x2faef2be,0x401bca86,
    0x31df907f,0x5fffc7ff,0xef987ffc,0xb9fd01fe,0xde8d98df,0x417fa0d8,
    0xf15ffffd,0xfffff87d,0x8bf67f90,0x2e5ffffe,0xb985fb4f,0x0880881b,
    0x00000000,0x2aaaaa00,0xfffbff72,0x5fb8bf69,0x2fb80bf5,0x5c0beedf,
    0x222fea03,0x555541fb,0x541fe02a,0xfe87a60e,0xd05ffa9f,0x5bf20dff,
    0x0dd03ff8,0x7ddddff9,0x00aaaaa6,0x38826f2e,0x5555512a,0x01911d85,
    0x00000000,0xf1000000,0x362fffff,0xfb4fadff,0x5faafdc5,0x76f97dc0,
    0x03ff505f,0x20effecc,0x07fffff8,0xfb0001fe,0xfb827fcd,0x21ffa82f,
    0x80981ffa,0x4ffffffc,0x00000000,0x00000000,0x00000000,0x00880000,
    0xaafdc5fb,0xf97dc05f,0xbd105f76,0x20000000,0x0000004c,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x0dc55000,0xa8822222,0x2616ecc2,0x2e155400,0x22222223,0x37772088,
    0x0001fa3d,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x7d4ffc00,0x97fffdc6,0xfff10ff8,0xd80bea9f,0x4fff20df,0xffffffff,
    0x9ffffb6f,0x0000027c,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x987b15c8,0xff10aaaa,0x77f4dfdc,0x07d900ff,0x33329ff9,
    0x13cccccc,0x32213333,0x00000001,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0xb99fe000,0x007ffb10,0x00033220,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x1be00000,
    0x00000020,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,
};

static signed short stb__consolas_bold_18_latin1_x[224]={ 0,3,1,0,0,0,0,3,2,2,1,0,1,2,
3,0,0,1,1,1,0,1,0,0,0,0,3,1,0,1,1,2,0,0,1,0,0,1,1,0,0,1,1,1,
1,0,0,0,1,0,1,0,0,0,0,0,0,0,0,2,1,2,0,0,0,0,1,1,0,0,0,0,1,1,
1,1,1,0,1,0,1,0,1,1,0,1,0,0,0,0,1,1,3,1,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,
3,0,0,0,1,1,0,2,0,0,1,0,2,2,0,1,0,3,3,2,1,1,0,0,0,1,0,0,0,0,
0,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,1,0,0,
0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,
 };
static signed short stb__consolas_bold_18_latin1_y[224]={ 13,0,0,1,-1,0,0,0,-1,-1,0,3,9,7,
9,0,1,1,1,1,1,1,1,1,1,1,3,3,3,5,3,0,0,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,14,0,3,0,3,0,3,0,3,0,0,
0,0,0,3,3,3,3,3,3,3,1,4,4,4,4,4,4,0,-2,0,6,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,13,3,-1,1,1,1,
-2,0,0,1,1,4,7,7,0,0,0,2,0,0,0,4,0,6,13,0,1,4,0,0,0,3,-2,-2,-2,-2,
-2,-3,1,1,-2,-2,-2,-2,-2,-2,-2,-2,1,-2,-2,-2,-2,-2,-2,4,-1,-2,-2,-2,-2,-2,1,0,0,0,
0,0,0,-1,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,2,0,0,0,0,0,0,0,
 };
static unsigned short stb__consolas_bold_18_latin1_w[224]={ 0,4,7,10,10,10,11,4,6,6,8,10,6,6,
4,9,10,8,8,8,10,8,10,9,9,9,4,6,9,8,8,7,10,10,9,9,10,8,8,10,10,8,7,9,
8,10,10,10,9,10,9,9,10,10,10,10,10,10,9,6,9,5,10,10,7,9,9,8,9,9,10,10,8,8,
7,9,8,10,8,10,9,9,9,8,9,8,10,10,10,10,8,7,3,8,10,10,10,10,10,10,10,10,10,10,
10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,0,4,9,10,10,10,
3,10,8,10,7,8,9,6,10,8,8,9,6,6,10,9,10,4,4,6,8,8,10,10,10,7,10,10,10,10,
10,10,11,9,9,9,9,9,9,9,9,9,10,10,10,10,10,10,10,8,10,10,10,10,10,10,9,9,9,10,
9,9,9,9,10,8,9,10,9,9,9,10,9,9,10,9,10,10,10,10,10,10,10,9,10,9,9,10,9,10,
 };
static unsigned short stb__consolas_bold_18_latin1_h[224]={ 0,14,5,12,17,14,14,5,18,18,9,10,8,3,
5,15,13,12,12,13,12,13,13,12,13,12,11,14,11,6,11,14,17,12,12,13,12,12,12,13,12,12,13,12,
12,12,12,13,12,16,12,13,12,13,12,12,12,12,12,17,15,17,7,3,5,11,14,11,14,11,13,14,13,13,
17,13,13,10,10,11,14,14,10,11,13,10,9,9,9,13,9,17,19,17,5,12,12,12,12,12,12,12,12,12,
12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,0,14,17,12,12,12,
19,16,5,13,10,8,5,3,10,5,7,11,8,8,5,13,16,4,3,8,10,8,13,13,13,14,15,15,15,15,
15,16,12,15,15,15,15,15,15,15,15,15,12,15,16,16,16,16,16,9,16,16,16,16,16,15,12,14,14,14,
14,14,14,15,11,13,14,14,14,14,13,13,13,13,14,13,14,14,14,14,14,10,13,14,14,14,14,17,17,17,
 };
static unsigned short stb__consolas_bold_18_latin1_s[224]={ 246,251,248,242,104,12,160,108,9,16,132,
79,157,151,225,120,23,10,19,124,28,115,64,39,32,132,251,114,174,216,233,
95,63,181,81,162,159,223,214,172,70,1,75,232,101,142,110,94,153,136,91,
183,121,224,203,192,170,59,49,80,45,74,205,140,230,184,231,194,241,223,62,
63,53,34,55,246,73,37,18,203,74,1,27,214,43,9,110,99,121,235,141,
87,5,95,113,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,
148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,246,215,115,
114,82,103,1,125,90,83,1,187,238,151,59,99,196,242,180,164,124,133,235,
135,158,150,70,171,12,1,42,132,190,55,34,99,66,147,136,110,130,140,150,
160,211,170,180,201,125,88,1,169,180,191,202,90,213,224,23,12,158,77,93,
241,150,204,53,43,33,246,163,153,23,1,231,221,193,203,214,143,103,105,220,
21,193,121,84,48,53,172,182,11,140,23,45,34, };
static unsigned short stb__consolas_bold_18_latin1_t[224]={ 17,21,95,68,1,38,38,105,1,1,95,
95,95,105,95,21,68,82,82,53,82,53,53,82,53,82,38,38,82,95,82,
38,1,68,82,53,68,68,68,53,82,82,53,68,82,82,82,53,82,1,82,
53,82,53,68,68,68,82,82,1,21,1,95,105,95,82,38,82,38,82,68,
38,68,68,1,53,68,95,95,82,38,53,95,82,68,95,95,95,95,53,95,
1,1,1,105,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,
68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,17,38,1,
68,68,68,1,1,105,53,95,95,95,105,95,105,95,82,95,95,105,53,1,
105,105,95,95,95,68,68,53,38,21,21,21,21,21,1,68,21,21,21,21,
21,21,21,21,21,68,21,21,1,1,1,1,95,1,1,21,21,1,21,68,
21,38,38,38,38,38,1,82,53,38,38,21,21,53,53,53,53,38,53,38,
53,38,38,38,95,53,38,38,53,38,1,1,1, };
static unsigned short stb__consolas_bold_18_latin1_a[224]={ 158,158,158,158,158,158,158,158,
158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,
158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,
158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,
158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,
158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,
158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,
158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,
158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,
158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,
158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,
158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,
158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,
158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,
158,158,158,158,158,158,158,158, };

// Call this function with
//    font: NULL or array length
//    data: NULL or specified size
//    height: STB_FONT_consolas_bold_18_latin1_BITMAP_HEIGHT or STB_FONT_consolas_bold_18_latin1_BITMAP_HEIGHT_POW2
//    return value: spacing between lines
static void stb_font_consolas_bold_18_latin1(stb_fontchar font[STB_FONT_consolas_bold_18_latin1_NUM_CHARS],
                unsigned char data[STB_FONT_consolas_bold_18_latin1_BITMAP_HEIGHT][STB_FONT_consolas_bold_18_latin1_BITMAP_WIDTH],
                int height)
{
    int i,j;
    if (data != 0) {
        unsigned int *bits = stb__consolas_bold_18_latin1_pixels;
        unsigned int bitpack = *bits++, numbits = 32;
        for (i=0; i < STB_FONT_consolas_bold_18_latin1_BITMAP_WIDTH*height; ++i)
            data[0][i] = 0;  // zero entire bitmap
        for (j=1; j < STB_FONT_consolas_bold_18_latin1_BITMAP_HEIGHT-1; ++j) {
            for (i=1; i < STB_FONT_consolas_bold_18_latin1_BITMAP_WIDTH-1; ++i) {
                unsigned int value;
                if (numbits==0) bitpack = *bits++, numbits=32;
                value = bitpack & 1;
                bitpack >>= 1, --numbits;
                if (value) {
                    if (numbits < 3) bitpack = *bits++, numbits = 32;
                    data[j][i] = (bitpack & 7) * 0x20 + 0x1f;
                    bitpack >>= 3, numbits -= 3;
                } else {
                    data[j][i] = 0;
                }
            }
        }
    }

    // build font description
    if (font != 0) {
        float recip_width = 1.0f / STB_FONT_consolas_bold_18_latin1_BITMAP_WIDTH;
        float recip_height = 1.0f / height;
        for (i=0; i < STB_FONT_consolas_bold_18_latin1_NUM_CHARS; ++i) {
            // pad characters so they bilerp from empty space around each character
            font[i].s0 = (stb__consolas_bold_18_latin1_s[i]) * recip_width;
            font[i].t0 = (stb__consolas_bold_18_latin1_t[i]) * recip_height;
            font[i].s1 = (stb__consolas_bold_18_latin1_s[i] + stb__consolas_bold_18_latin1_w[i]) * recip_width;
            font[i].t1 = (stb__consolas_bold_18_latin1_t[i] + stb__consolas_bold_18_latin1_h[i]) * recip_height;
            font[i].x0 = stb__consolas_bold_18_latin1_x[i];
            font[i].y0 = stb__consolas_bold_18_latin1_y[i];
            font[i].x1 = stb__consolas_bold_18_latin1_x[i] + stb__consolas_bold_18_latin1_w[i];
            font[i].y1 = stb__consolas_bold_18_latin1_y[i] + stb__consolas_bold_18_latin1_h[i];
            font[i].advance_int = (stb__consolas_bold_18_latin1_a[i]+8)>>4;
            font[i].s0f = (stb__consolas_bold_18_latin1_s[i] - 0.5f) * recip_width;
            font[i].t0f = (stb__consolas_bold_18_latin1_t[i] - 0.5f) * recip_height;
            font[i].s1f = (stb__consolas_bold_18_latin1_s[i] + stb__consolas_bold_18_latin1_w[i] + 0.5f) * recip_width;
            font[i].t1f = (stb__consolas_bold_18_latin1_t[i] + stb__consolas_bold_18_latin1_h[i] + 0.5f) * recip_height;
            font[i].x0f = stb__consolas_bold_18_latin1_x[i] - 0.5f;
            font[i].y0f = stb__consolas_bold_18_latin1_y[i] - 0.5f;
            font[i].x1f = stb__consolas_bold_18_latin1_x[i] + stb__consolas_bold_18_latin1_w[i] + 0.5f;
            font[i].y1f = stb__consolas_bold_18_latin1_y[i] + stb__consolas_bold_18_latin1_h[i] + 0.5f;
            font[i].advance = stb__consolas_bold_18_latin1_a[i]/16.0f;
        }
    }
}

#ifndef STB_SOMEFONT_CREATE
#define STB_SOMEFONT_CREATE              stb_font_consolas_bold_18_latin1
#define STB_SOMEFONT_BITMAP_WIDTH        STB_FONT_consolas_bold_18_latin1_BITMAP_WIDTH
#define STB_SOMEFONT_BITMAP_HEIGHT       STB_FONT_consolas_bold_18_latin1_BITMAP_HEIGHT
#define STB_SOMEFONT_BITMAP_HEIGHT_POW2  STB_FONT_consolas_bold_18_latin1_BITMAP_HEIGHT_POW2
#define STB_SOMEFONT_FIRST_CHAR          STB_FONT_consolas_bold_18_latin1_FIRST_CHAR
#define STB_SOMEFONT_NUM_CHARS           STB_FONT_consolas_bold_18_latin1_NUM_CHARS
#define STB_SOMEFONT_LINE_SPACING        STB_FONT_consolas_bold_18_latin1_LINE_SPACING
#endif

