// Font generated by stb_font_inl_generator.c (4/1 bpp)
//
// Following instructions show how to use the only included font, whatever it is, in
// a generic way so you can replace it with any other font by changing the include.
// To use multiple fonts, replace STB_SOMEFONT_* below with STB_FONT_courier_44_usascii_*,
// and separately install each font. Note that the CREATE function call has a
// totally different name; it's just 'stb_font_courier_44_usascii'.
//
/* // Example usage:

static stb_fontchar fontdata[STB_SOMEFONT_NUM_CHARS];

static void init(void)
{
    // optionally replace both STB_SOMEFONT_BITMAP_HEIGHT with STB_SOMEFONT_BITMAP_HEIGHT_POW2
    static unsigned char fontpixels[STB_SOMEFONT_BITMAP_HEIGHT][STB_SOMEFONT_BITMAP_WIDTH];
    STB_SOMEFONT_CREATE(fontdata, fontpixels, STB_SOMEFONT_BITMAP_HEIGHT);
    ... create texture ...
    // for best results rendering 1:1 pixels texels, use nearest-neighbor sampling
    // if allowed to scale up, use bilerp
}

// This function positions characters on integer coordinates, and assumes 1:1 texels to pixels
// Appropriate if nearest-neighbor sampling is used
static void draw_string_integer(int x, int y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0, cd->t0); glVertex2i(x + cd->x0, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t0); glVertex2i(x + cd->x1, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t1); glVertex2i(x + cd->x1, y + cd->y1);
        glTexCoord2f(cd->s0, cd->t1); glVertex2i(x + cd->x0, y + cd->y1);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance_int;
    }
    glEnd();
}

// This function positions characters on float coordinates, and doesn't require 1:1 texels to pixels
// Appropriate if bilinear filtering is used
static void draw_string_float(float x, float y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0f, cd->t0f); glVertex2f(x + cd->x0f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t0f); glVertex2f(x + cd->x1f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t1f); glVertex2f(x + cd->x1f, y + cd->y1f);
        glTexCoord2f(cd->s0f, cd->t1f); glVertex2f(x + cd->x0f, y + cd->y1f);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance;
    }
    glEnd();
}
*/

#ifndef STB_FONTCHAR__TYPEDEF
#define STB_FONTCHAR__TYPEDEF
typedef struct
{
    // coordinates if using integer positioning
    float s0,t0,s1,t1;
    signed short x0,y0,x1,y1;
    int   advance_int;
    // coordinates if using floating positioning
    float s0f,t0f,s1f,t1f;
    float x0f,y0f,x1f,y1f;
    float advance;
} stb_fontchar;
#endif

#define STB_FONT_courier_44_usascii_BITMAP_WIDTH         256
#define STB_FONT_courier_44_usascii_BITMAP_HEIGHT        172
#define STB_FONT_courier_44_usascii_BITMAP_HEIGHT_POW2   256

#define STB_FONT_courier_44_usascii_FIRST_CHAR            32
#define STB_FONT_courier_44_usascii_NUM_CHARS             95

#define STB_FONT_courier_44_usascii_LINE_SPACING          21

static unsigned int stb__courier_44_usascii_pixels[]={
    0x00099300,0x00004310,0xcc801b00,0x44098001,0xc8803601,0x3bddddd4,
    0xeec80362,0x0ea02eee,0x04de5cc0,0x0aba8800,0x30000800,0x00151001,
    0x0004d4c0,0x7640a880,0xfa800eee,0x26d80007,0x8800004e,0x27fe402f,
    0x0d917a00,0x7fe40fe2,0x3bdddff4,0xeec817e2,0xbf303fee,0xfffffb80,
    0x32000dff,0x00efffff,0x01ffff4c,0x7540df90,0x3004ffff,0x3dfffffb,
    0xffd95000,0x3fff67ff,0x00ff5007,0x3f24f880,0x7c400000,0x02fc8802,
    0x20db13e0,0x0cf883f8,0x05fb013e,0x7f40fe20,0x42b7f601,0x401efca8,
    0xa88acfd8,0x39f500ee,0x3a00bd71,0xcefc80ff,0x100efdba,0x75379dfb,
    0x3a2009fd,0x3ca9bdff,0x200dfff9,0x640007fa,0x0013e20f,0x5efed440,
    0x013e2021,0x882f44f8,0x7c0fb83f,0x8037cc04,0x06fa83f8,0xf9807fd1,
    0x40bf602f,0x02f886e8,0x1ffd007f,0xdf505fb8,0xf9013fa0,0x03ffa805,
    0x005fffb8,0x44000993,0x000fd84f,0x7f7ffd40,0xbd07ceff,0xbd0fe200,
    0x17a0fe20,0x0ffa013e,0x3fa0fe20,0x2005f902,0x3f980fe8,0x1ea0fcc0,
    0xffd806c8,0x3ee037c0,0xfb002d82,0x007bee01,0x0027ffcc,0x03f90000,
    0x5c0007f3,0x7fe4c1ef,0x1005d80f,0xf104f87f,0x09f0bd07,0xf100df50,
    0xf307f987,0x84f98009,0xc87f007d,0x3601e204,0x200fdc7f,0x4c0006f8,
    0x005f982f,0x001fffc4,0x05f88000,0x7cc001f6,0x407fc405,0x85f3005d,
    0xd07f104f,0x3e009f0b,0x21fc401f,0x01fd04fc,0x7cc3fb00,0x6b8bb003,
    0x3f201ea0,0xfc8037c7,0x0fe20001,0x3e0003fa,0x000002ff,0x7d403f70,
    0x00fc8003,0x00bb07b8,0x03f887e6,0xf0bd07f1,0x013f2009,0x80ff87f1,
    0xf10003fa,0xd800fdc9,0x5d80fcc6,0x3e27fc80,0x009f3003,0x3ee17c40,
    0x3ffd0003,0x55555554,0x4001aaaa,0x006e806f,0x402006d8,0x43f5005d,
    0x07f103f8,0x2009f0bd,0x1fc407f8,0x03ee0bf5,0x1f26d800,0x361ba620,
    0x003ee21d,0x01f99bee,0xb80013e0,0x20005e87,0xfff50ffd,0xffffffff,
    0x017d4009,0x360017d4,0x05d80006,0x17cc1f50,0x85e83f88,0x0bfe004f,
    0x13f63f88,0x320003e4,0xffb81b67,0xdfd886ff,0xf7001ffc,0xd0007dcd,
    0x17e6000b,0xfc8000fe,0x4ccccc47,0x004f9999,0x06e801ba,0x0000fdc0,
    0x6664c176,0xdfdcccfd,0x07f11ccc,0x4009f0bd,0x8fe204fe,0x00bb03ff,
    0x0bd0fb80,0xdb35dfd1,0x40565d40,0x97ee4da8,0x036c007c,0x2617f220,
    0x4009881f,0x9f0005fa,0x800bea00,0x3a2001fb,0xdb0000bf,0x3ffffee0,
    0xffffffff,0xbf07f13f,0x7ec009f0,0x7c4fe205,0x0009f02f,0xb09f2f98,
    0x8006d85f,0x20befdb8,0x001f25fa,0xffe880f9,0x41f704ff,0x01efffdb,
    0x27c0002e,0xf8007e80,0x7fe44005,0xf7000ace,0xfb8f9003,0xf987f100,
    0x32004f83,0x4cfe206f,0x009f00ff,0x89f1f980,0x006d83f9,0x017bfb71,
    0x007c93ea,0x7f6403e4,0x6cd903ff,0x3febabdf,0x04f80000,0xb8003f98,
    0xdb88001f,0x200cffff,0x3600bfe8,0xf8807dc6,0xf01df913,0x03fdc009,
    0x81fea7f1,0x7dc0005e,0x80fb89f0,0x3fae206d,0x4f9800bd,0x0f9001f2,
    0xd85fc980,0x3f205fb6,0x27c00002,0x40007ec0,0x980005f8,0x2601efdb,
    0x91b606ff,0xfe9fc40f,0x4009f01f,0x7f100ffa,0x07d81fee,0x89f3e400,
    0x446d80fc,0x000adfeb,0x00f91fcc,0xf70007c8,0x0fe76c1d,0x00003fa0,
    0x27cc04f8,0x001f9000,0x40ff4c00,0x3a01cfe8,0x7f103e45,0x3e03bf66,
    0x81fea004,0x40ff53f8,0x360000fb,0x07f513e6,0x056fd4db,0xf10054c4,
    0x36003e47,0x8fe60006,0xf9803ffc,0x13e00003,0x40001f90,0x400004f8,
    0x02fb83f8,0x1036c5e8,0xf83fa87f,0x81bf2004,0x01ff33f8,0x4c000fe6,
    0xdf113e4f,0x2e006d81,0x900cffff,0xd0007dc1,0x26d8000b,0x13e006fb,
    0x204f8000,0xd80004f8,0x6c00000f,0xff987d85,0xffffffff,0x3e25ffff,
    0x04f85f83,0xf8817f60,0x6c03ff13,0x0fd8000f,0x3bfea17a,0xc800feab,
    0x00db50be,0x4e800bea,0xa87dc000,0x01b6002f,0x3204f800,0xf980000f,
    0xb000ea03,0x9710bb0d,0xf999df99,0x7c45999d,0x04f85e83,0xf8813fa0,
    0xf980ffe3,0x227cc004,0xfffb306d,0x1f9809ff,0x7f3007f0,0x000fe200,
    0x01fc5f30,0x40000db0,0x00bf104f,0xf903ec00,0x6c27c001,0x7c3f8805,
    0x3a0fe204,0x3e004f85,0xe8fe202f,0x017ec04f,0x3e40fe88,0x400c4cc0,
    0x4017206b,0x05f7005f,0x360fa800,0x0013a006,0x3f704f80,0x1fcc0000,
    0xd800efc8,0x9805d81f,0xf1027c2f,0x09f0bd07,0x8803fe20,0x2017ee3f,
    0x7fcc04fd,0x0000fb81,0x0f301ec0,0x3a007f20,0x47d80006,0x3f8801fb,
    0x413e0000,0xe800005f,0x05dff906,0x2ec13fa6,0x7f117cc0,0x2f41fc40,
    0x4fb8027c,0xff11fc40,0x37dfb001,0x403bf2a2,0x400003f9,0x511b205c,
    0x5405f981,0x7000542f,0xb00dd07f,0x7c00001f,0x0002fb84,0xec82fa80,
    0xfeeeffea,0x017602ff,0x03f887ea,0x217a0fe2,0x03fd004f,0x1fec3f88,
    0xffffea80,0x07e804ff,0x807cc000,0x0fffe63f,0x1be605f9,0xf7007ff1,
    0xb813ea0b,0x7c00003f,0x00006e84,0xa8621ba0,0x00acefec,0x07d402ec,
    0x1fc405f3,0x4027c2f4,0x3f8806fa,0x360037cc,0x2a001bef,0x6400003f,
    0xf91b662e,0xcfe88dff,0x81ffb98a,0x30abefe9,0x5c01bfd5,0xfd988aef,
    0x4f800005,0x000017d4,0x22005f50,0x017a002f,0x01f983ee,0x217a0fe2,
    0x03fd804f,0x2fe83f88,0x004fd880,0x4409fb01,0x3ff2001c,0x7fd40dfe,
    0xffff904f,0xfda801df,0x02ffffff,0xfffffb50,0x3e000007,0x00003744,
    0xf8802fc0,0x007f1002,0x201fa8f7,0xf87d83f8,0x007fcc04,0x2fd41fc4,
    0x3fbffe60,0xeb89bdef,0x5eff441f,0x01ffba99,0x300d5440,0xaba88059,
    0xaba98000,0x26ea0001,0xf1000000,0x0001fcc7,0x400fdc00,0x1f9002f8,
    0x0fa8f900,0x3ee0fe20,0x3f2027c3,0x207f1003,0xfff101fe,0xffdb99bd,
    0x7e405fff,0x01dfffff,0x00000000,0x00000000,0xf7000000,0x00003ec3,
    0x8805f880,0x2ff5c02f,0x03dc6c80,0x77ec0fe2,0x19999df3,0xccb81be2,
    0x9f303fcc,0x51004d40,0x554c0037,0x11111009,0x11111111,0x3faa1111,
    0xffffffff,0xffffffff,0x0003ffff,0x00000000,0x00fe67e8,0x0fc80000,
    0x36017c40,0x2062001d,0x2a01d802,0xdfffff5d,0xfd807a25,0x2e03ffff,
    0x00000004,0x7fffdc00,0xffffffff,0x99915fff,0x99999999,0x99999999,
    0x00003999,0x80000000,0x003ae5fb,0x3e880000,0x00000b80,0x00000000,
    0x00000000,0x00000000,0x3ffffee0,0xffffffff,0x000005ff,0x00000000,
    0x99999800,0x0004fdb9,0x01100000,0x00000000,0x00000000,0x00000000,
    0x10000000,0x11111111,0x11111111,0x00000000,0x80000000,0xfffffffb,
    0x0000003e,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x88000000,0x00aaaaaa,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x2a200000,0x00988001,0x5c000000,0x5553001c,0x6fedcc43,0xeca8001b,
    0x55541bdf,0x77774c0a,0x3eeeeeee,0x0002a200,0x5dddb100,0x0aaaaaa0,
    0x85555530,0x0003eeed,0xddddddb0,0x7ddddddd,0x6776e4c0,0x2aaaa20a,
    0xffff7000,0xfe9801bf,0x2000beff,0x20003eb9,0xfff003fe,0x3bffa29f,
    0x801fffec,0xfeceffd8,0x17fffe5f,0xddddddf5,0x9807dddd,0x04ffffec,
    0xfddb1000,0xfffff107,0x3ffe203f,0x3bb61fff,0xff00004f,0xdddddddd,
    0x9109fddd,0xffdbbdff,0x0ffffe27,0x537bfd10,0x3ea05ff9,0x2ffcaacf,
    0x3fffb260,0x0ffa0003,0x4e7ccc40,0x3fd302ff,0xb81ffcc0,0x819df8ef,
    0xa80001fa,0xfdb9beff,0x2200001e,0x37f7103f,0xcfa98801,0x00013e00,
    0x13e0027c,0xb1019fd1,0x0137f39f,0x3a205fd0,0x4077cc1f,0x7fd41fd8,
    0x003fabef,0x2000ffa0,0xd800dfef,0x801dd01f,0x2a04fee8,0x7dc0001f,
    0x01fd300d,0x00fe2000,0x0fc800bf,0x800027c0,0x0be6003e,0xdf5003fd,
    0x0bee007f,0x0fd8df10,0x7b51be20,0x0001fc41,0xff000397,0x43f4001f,
    0xff3001fc,0x000fd409,0xf100df30,0x3e20000b,0x800fdc03,0x04f804f8,
    0xc8001000,0x800bee0f,0xbd003ffb,0x7cc7ee00,0x802fa802,0x000003f8,
    0x8005ff00,0x013e22f9,0x7d409f90,0x07f20001,0x0000fdc0,0x2fc01fc4,
    0xf800fc80,0x00000004,0x8005f8bd,0x3f8803fe,0x3ee5f300,0x100bf000,
    0x0000007f,0x74001fe0,0x5000be64,0x00fd409f,0x44009d00,0xf880002f,
    0x401fb803,0x09f004f8,0xf3000000,0x40017cc7,0x3f8803fb,0x1f25f100,
    0xf8807c80,0x00000003,0x9b6000df,0x7c4000fb,0x0007ea04,0x04f80008,
    0x2b3bb2a2,0x7c00fe20,0x8007e405,0x77edcc4f,0x2e00002c,0x0003ea0f,
    0x26c00fea,0x0db0fa80,0x2200fcc0,0x5551003f,0xf0003555,0xc9f2000b,
    0x409f0007,0x597511fa,0xf9800001,0xbbdff902,0x0fe23fff,0xf880fdc0,
    0xfd93e004,0x1effecef,0x5c6e8000,0x3f98000f,0xd003f700,0xf7003dcb,
    0x003f8807,0x7ffffffb,0x000df000,0x001fa9b6,0x9f5027cc,0xbffffffd,
    0x3f200001,0x880dfc80,0x003f8afd,0x007dc17e,0x07fd19f0,0x8000ffea,
    0x00fd43f8,0x8801fd40,0x8bf600ef,0xff8800f9,0x001fc404,0x07f33333,
    0x0001ff00,0x0017cc9f,0xffa813ea,0xfb989bdf,0x7cc0002f,0xb802fc84,
    0x2e003fcf,0x002fc41f,0x1007bb7e,0x2e0003fd,0x001fc41f,0xd1001fe4,
    0xfd73359f,0xf9009f05,0x03f880bf,0x000fe200,0xf70013fe,0x74006f85,
    0x006e204f,0x20001fd1,0x1fd40ef8,0x007ffb00,0x00fdc5f8,0x4007ffe0,
    0xdb0006f8,0x88003ba0,0xfe8003ff,0x901fffff,0x6d7e403f,0x001fc405,
    0xf0007f10,0x3e6003ff,0x7003fa85,0x200009ff,0xe88004f9,0x4006d80f,
    0x5c003ff8,0x20017e0f,0x7d4003ff,0x827c4003,0x3f6004f9,0x77e4003f,
    0x00efdcbc,0x2fd887fb,0x03f880db,0x000fe200,0x500bfb7e,0x0ff601ff,
    0x009f9f70,0x2003e400,0x05f01fe8,0x0007f900,0x0007eebf,0x3e0003fe,
    0x00fd4004,0x6c4019f9,0x36003fcf,0x01dd302f,0x3ffb7ffa,0x7f1017a3,
    0x01fc4000,0xadfda7c0,0x03dfb531,0x98d77ec4,0x009f3fea,0x8007d400,
    0x3f301fe8,0x007f5000,0x00bf3f70,0x6c001be0,0x403e4006,0x9889bffc,
    0x03f89ffb,0xfd003f90,0x056f5cc0,0x07f1017e,0x001fc400,0xfffd727c,
    0x54009fff,0x2effffff,0x9800013e,0x1ff9802f,0x4c001ee0,0xfff0003f,
    0x017e0003,0x3e003e40,0xfffd3004,0x3e21bfff,0x2007f003,0xf30001f9,
    0x003f8809,0x2000fe20,0x1aca884f,0x2b2a6000,0x00004f80,0xdf300be6,
    0x000fa801,0x70003f98,0x2fc000bf,0x2007c800,0x544002f9,0x03f881bb,
    0x3a001f98,0x03f50004,0x20003f88,0x4f8003f8,0x80000000,0x2a00004f,
    0x03be601f,0x20007e20,0xf70003fb,0x03fc0003,0x32005e80,0xf1000007,
    0x800f7007,0x0fd0006d,0x40007f10,0x4f8003f8,0x40000000,0x200003f8,
    0x03bea07c,0xc8003e80,0x0bf0003f,0x001ff800,0x17a004f8,0x1fc40000,
    0xd0007dc0,0x07f9000b,0x40007f10,0x4f8003f8,0x40000000,0x100001fa,
    0x03bea0df,0x4001f900,0xb8003ff9,0x7fc0001f,0x00fe4005,0x00002f98,
    0xf3007f10,0x013e2005,0x2200bf30,0x3e20003f,0x004f8003,0x3a200000,
    0x4007f107,0x0dfb81fc,0x005f9800,0x2000fffa,0xff80006e,0x09f3003f,
    0x00007dc0,0xd003f880,0x03f9001d,0x8007fd40,0x220003f8,0x04f8003f,
    0x36000000,0x037f603f,0xbf709f90,0x6fcc0400,0x3ebba200,0x017dc003,
    0x1fe67c00,0xd001bea0,0x4400000b,0x1bf3003f,0x9001fdc0,0x7c4003df,
    0x0fe20003,0x4efccc40,0x20000199,0xfca99999,0xcffb803f,0x0bfd531a,
    0x3e8009f7,0x311bff98,0x9bf11df7,0x4cccc439,0x00099ee9,0xfba7e65c,
    0xbfb510ae,0x01fc4001,0x53331000,0xf500337f,0x3faa237f,0xca98dcc5,
    0x332604ff,0xccdfcccc,0x99712ccc,0x99df9999,0x7fc39999,0x3fffffff,
    0xfffa8000,0x001effff,0x3ffffb22,0x99fb02ff,0x99999999,0x36609f99,
    0x0dffffff,0x7c7ffff1,0xffffffff,0x3fa000ff,0x3ffaa4ff,0x8003ffff,
    0x200000f9,0xffffffff,0xffe8803f,0xfb82ffff,0x02ceffff,0x7fffffdc,
    0x5fffffff,0xfffffff3,0xffffffff,0x555554c9,0x200002aa,0x009aaaa9,
    0x0d5d4400,0x3fffff60,0xffffffff,0x1bb9804f,0xaaaa9800,0x001aaaaa,
    0x1bca8800,0x00000000,0x5555554c,0x2a2000aa,0x5d4401ab,0x0000000a,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x32a00000,0x20abcced,0x002eeed8,0x20000800,
    0x002eeed8,0x3bbbaa00,0x4c0002ee,0x0001accb,0x4ccccccc,0x73019999,
    0x000379b9,0x102af2e6,0x13333310,0x26666620,0x3bba6001,0x56654000,
    0x5d440081,0x40040acc,0xffefffe9,0x3bb627ff,0x4400002f,0xdb10001f,
    0x400005fd,0x3feeeeea,0xffff7000,0x0003bfff,0xffffffff,0x229fffff,
    0xffefffeb,0xfda800df,0x9dffffff,0x3ffe61f9,0x7c43ffff,0x04ffffff,
    0x003fdfd0,0xffffffb7,0x2203e65f,0xfffffffc,0x74406b8d,0x019881cf,
    0x800005f1,0x880002f9,0x4000002f,0xfc8003f8,0xff7510ad,0xaaa98005,
    0xaaafeaaa,0x817dff0a,0xb100ffc8,0x2a2159df,0x541fefec,0x80aaadfa,
    0x0acfbaaa,0x1faafa80,0x86f7fa20,0x1fbdfea8,0x220eff44,0x6407effb,
    0x3e20002f,0x7cc00002,0x2f880002,0x7c400000,0x0ffa2003,0x0005fd30,
    0x04f81b60,0x7fd05f98,0x407ff200,0x17cc004f,0x3f56f880,0x200bfe20,
    0x7ec1fffa,0x03ff4402,0xf10001ba,0xf9800005,0x2f880002,0x7c400000,
    0x00bf2003,0x00007f44,0x009f036c,0x07f90bee,0x9f01fc80,0x002f9800,
    0x407ea3f9,0x3e6002fd,0x400fe61f,0x027c07f9,0x000be200,0x0005f300,
    0x00005f10,0x3003f880,0x5f88009f,0x206d8000,0x47f1002c,0xf98005f9,
    0x98009f01,0x24f8802f,0x05fa81fa,0x3ee1fc80,0xf01fa000,0x2f880009,
    0xbaaa8000,0xaaaaaacf,0x17c401aa,0x3e200000,0x001fb003,0x80003f90,
    0x3a00006d,0x40003ee5,0x30013e03,0x41fb005f,0x00fc81fa,0x1f20f980,
    0x5544b700,0xaaaadfaa,0x7c401aaa,0xaaaaa882,0x7fffc40a,0xffffffff,
    0x17c407ff,0x039bfb95,0x401fc400,0xf10003f9,0x06d80005,0x5e93e000,
    0x09f00000,0x4c02f980,0x740fd43f,0xf7060004,0x7fd40001,0xffffffff,
    0x7c407fff,0xfffffc82,0xfa99883f,0x9999999b,0xc97c4009,0x3ffeceff,
    0x007f1000,0x6c0001f7,0x036c0004,0x3e1fa800,0x9f000003,0x402f9800,
    0x441fa86e,0x2600002f,0x4c40004f,0x9999df99,0x7c400999,0x135ff702,
    0x0005f300,0x17fd7f10,0x8003fc88,0x07c803f8,0x00036400,0x260001b6,
    0x0007e66e,0x20027c00,0x0bee02f9,0x01f507ea,0x0cfc8000,0x009f0000,
    0xfa82f880,0x17cc000e,0x7ffc4000,0x4003f401,0x06d803f8,0x0007d400,
    0x44000db0,0x01ee1efc,0x004f8000,0x5f8817cc,0x07c83f50,0xbff70000,
    0x3e000137,0x17c40004,0x200037ee,0x880002f9,0x2fb801ff,0x401fc400,
    0x7cc0004f,0x01b60001,0x037ff220,0x400000f9,0x17cc004f,0x3f501fc8,
    0x000007c8,0x3bfff6e2,0x09f000ad,0x362f8800,0x3e60004f,0x3f880002,
    0x8009f100,0x04e803f8,0x000fcc00,0xf9800db0,0x00f900cf,0x0027c000,
    0x13e20be6,0x03e41fa8,0x97300000,0x9f003ffd,0x8af88000,0x4c0003fe,
    0xf880002f,0x0013e002,0x0db007f1,0x750fa800,0x4006d800,0x03dc02f9,
    0x7777775c,0x004f84ee,0x07ec17cc,0x07c83f50,0x26000000,0x027c02fe,
    0x3fb3e200,0x2f980005,0x02f88000,0xf10013e0,0x000f9007,0x001b66c8,
    0x1f9800db,0x2e00fd40,0xefeeeeee,0x4c004f84,0x201fd42f,0x00fd41fa,
    0xb1000000,0x0027c01f,0x3f7bfe20,0x17cc0003,0x017c4000,0xf88009f0,
    0x000fb803,0x006d9360,0x3a20036c,0x0017cc00,0x09f01f98,0x7f42f980,
    0x99999999,0x0fe61afb,0x30000000,0x0027c05f,0x7e43be20,0x0be60003,
    0x00be2000,0x7c4004f8,0x003f9803,0x036c7f10,0x00001b60,0xf30003f8,
    0x70017a03,0xfffff83f,0xffffffff,0x000bf13f,0x7c000a20,0x00013e04,
    0x03fd85f1,0x0005f300,0x7c005f10,0x01fc4004,0xd8000fd8,0xf001b61f,
    0x74000009,0x1f98000e,0x7d800d70,0xaaaaaaa8,0x0abfcaaa,0x200007ee,
    0x5e8000fb,0x100013e0,0x007fb05f,0x00005f30,0x27c005f1,0x400fe200,
    0x7cc004f9,0xf50036c5,0x4c000007,0x1f98004f,0x7c003f30,0x07ea0006,
    0x4c800374,0xf88005f7,0x00013e03,0x0bf605f1,0x000bf100,0x7c005f10,
    0x01fc4004,0x22007f90,0x00fec0fe,0x4c000fd8,0x05f9001a,0x3e01f980,
    0x005f9006,0xf980fd40,0x4bf62005,0x36000efb,0x0013e01f,0x7ec05f10,
    0x007f4002,0x17c40ecc,0x88009f00,0x3f62003f,0x417fcc04,0x7ec03fe9,
    0x7fff4002,0x019fd005,0xf9807ee0,0x017f200d,0x5403f500,0x7f4401ef,
    0x003bfee3,0x09f00ff2,0x402f8800,0x3e6002fd,0x3aea62ce,0x02f881ff,
    0xf10013e0,0x7df90007,0x07ff2a23,0x31bdfd88,0x88009fb7,0x000fffff,
    0x44357ff7,0x401ffeb9,0xb711bff9,0xa80001bf,0x67fd401f,0x3ffb711a,
    0x9cfeafb8,0x517fae60,0x99df9999,0x10399999,0x5c05f997,0x803ccffc,
    0xffffffea,0x6e540bef,0x99303cdf,0x2e2199df,0xdfcccccc,0x01cccccc,
    0x3fffffaa,0xff7000cf,0x005fffff,0x01bfffa0,0xfffffb30,0x4005bfff,
    0xffffffe9,0x99710003,0x44039bfb,0xfffffffc,0x3f26980d,0x2effffff,
    0xffffffd8,0x3fffffff,0x02ffff98,0x3bfffffa,0x57955000,0xffffe803,
    0xfffc80ff,0xfff31fff,0xffffffff,0x1009ffff,0x00015795,0x0026f2a2,
    0x00bcb880,0x2b2ea600,0x2a200009,0x200009bc,0xfffffff9,0x37953002,
    0x2f2a6000,0x0000001a,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x33333000,0x33333333,0x4c413333,
    0x99999999,0x33310000,0x00333333,0x0cccccc4,0x26666620,0x4cccccc0,
    0x4cccc400,0x4cccc099,0x99999999,0x4cccc409,0x33310099,0x33331013,
    0x99998801,0x4ccccc40,0x41999999,0x10199998,0x31033333,0x33100333,
    0x99983333,0x99999999,0x98999999,0xffffffff,0xffffffff,0xfffff34f,
    0xdfffffff,0x3ffee007,0xffffffff,0xfff101de,0x2a09ffff,0x2fffffff,
    0xfffffff9,0x7ffffc03,0x3ffe67ff,0xffffffff,0x3ffe63ff,0x4c2fffff,
    0x42ffffff,0x01ffffff,0x47fffffe,0xfffffffb,0x16ffffff,0x09ffffff,
    0x89ffffff,0x403fffff,0x5fffffff,0xfffffffd,0xffffffff,0x559f39ff,
    0x559f7555,0x549f5555,0xaaaadfba,0x00efecaa,0x55fe5544,0xffdbaaaa,
    0x555fb504,0x55554015,0xf9510aee,0xa9805559,0x261adfba,0xaaaaaacf,
    0x543fbaaa,0x02aadfba,0x3059fd55,0x98055df9,0x2a22dfda,0xadfbaaaa,
    0x2e61aaaa,0xa980aadf,0x54c0adfa,0x2600fffa,0x30adfbaa,0x5555dd55,
    0x55555555,0x2203f39f,0x2213e03f,0x0efa803f,0x8801f500,0x01f704fc,
    0x9f02f400,0x207ea000,0x3fb002f9,0x6c00fe20,0x02fc803f,0x4400df10,
    0x07f1003f,0x77c027c0,0x07f1005f,0x67c0036c,0x07f101f9,0x01fc427c,
    0xf5005f98,0x20bf2001,0x3a0000fa,0x0003f204,0x017cc1b6,0x7f101fd4,
    0x003fd880,0x3fa003fa,0x00fe2000,0x9f001fc4,0x03f79f00,0x36c07f10,
    0x0fce7c00,0x13e03f88,0xfc800fe2,0x000fa800,0x407e617a,0x80fe0098,
    0x7c4003f9,0x8805f303,0x01fc405f,0x88005fd1,0x017e406f,0x4400fe20,
    0x013e003f,0x4403753e,0x001b603f,0x4407e73e,0x2213e03f,0x07e6003f,
    0xc8003ea0,0xfd02f887,0xd00be20f,0x00fb800d,0x0fe805f3,0xe981fc40,
    0x9f50001f,0x20013ea0,0x7f1003f8,0x7c027c00,0xf8807f54,0x2001b603,
    0xf101f9be,0x7c427c07,0x007ea003,0xfb8003ea,0x7c41fc40,0x02f982fe,
    0xbd000fdc,0xf700fc40,0x307f1005,0xc80001df,0x002fcc2f,0xf1003f88,
    0x4027c007,0x8803f64f,0x081b603f,0x201d1130,0x20ba03f8,0x1b6003f8,
    0xd0007d40,0x3ea13e0d,0x01fa84f9,0xf98027c4,0x9f300402,0xf50fe200,
    0x3600001d,0x001fd11f,0x4400fe20,0x013e003f,0x204f893e,0x41b603f8,
    0x7c40007a,0x03f88003,0x2a005f90,0x09f3000f,0x36df217a,0x3e4007dc,
    0x20007c80,0xf1000ee8,0x0006fdc7,0xfb1dd100,0x1fc40003,0x2003f880,
    0x644f804f,0x407f101f,0x001f706d,0x4001fc40,0x7f4c03f8,0x003ea005,
    0x36c03fe6,0x640fbafc,0x005f3007,0x7e40009f,0x64fe2001,0x800003ff,
    0x0003fef9,0xf8801fc4,0xaaaaaaad,0xf804faaa,0xf8837c44,0x2aabb603,
    0x0000fdaa,0x22000fe2,0xecbaaadf,0x54003fff,0x3fee600f,0x7f31f201,
    0x00d90fe2,0x07ea02f4,0x001fd400,0x3b3f2fe2,0x400001ef,0x880006fc,
    0xfff1003f,0xffffffff,0x09f009ff,0x07f105f5,0x7fffffec,0x220000ff,
    0xff88003f,0x3fffffff,0x99bf5000,0x1bfffb99,0x07dc7b80,0x2005d8bd,
    0x01b600fb,0x40037c40,0x3a63fff8,0xf100003f,0x880003ff,0x39f1003f,
    0x33333333,0x09f009f3,0x07f103f6,0x4ccccf6c,0x220000fc,0x3f88003f,
    0x000dfe88,0xeeeeefa8,0xf5001cde,0xd1f236c1,0x81fc4009,0xfb0003f8,
    0x5ff10001,0x0003fb10,0x01fd3fb0,0x801fc400,0x13e003f8,0x27cc13e0,
    0x06d80fe2,0x440001f7,0x3f88003f,0x0003bf20,0x200001f5,0xa89f11f9,
    0xb0013e1f,0x0003ee0d,0x20100bee,0x037403f8,0x7ccfee00,0x0fe20005,
    0xf001fc40,0x6409f009,0xd80fe21f,0x8000f506,0xf88003f8,0x0077d403,
    0x00001f50,0x417d4be2,0x8007f14f,0x005e81fa,0x7c405f98,0x4c03f881,
    0x9f30004f,0x10004fa8,0x0fe2007f,0x4f804f80,0x3f897e20,0x00001b60,
    0x88003f88,0x04fa803f,0x00003ea0,0x360f93f8,0xf0005f36,0x8002f98b,
    0x17cc00ee,0x7e401fc4,0x837c4000,0xf88002fc,0x007f1003,0x027c027c,
    0x01fc4bee,0x400000db,0xf88003f8,0x005f9003,0x800003ea,0x3ee0bd4f,
    0xc8001fa8,0x2001f60f,0x2f9801fc,0xf8803f88,0x007f4004,0xf88001fd,
    0x007f1003,0x027c027c,0x203f8b74,0x2000006d,0xf88003f8,0x003fa003,
    0x800003ea,0xf103f8de,0x10001f57,0x0013e27f,0x3e6009f5,0x9003f882,
    0x0bf2001f,0x8800df10,0x07f1003f,0x27c027c0,0x1fc67cc0,0x00000db0,
    0x44001fc4,0x13e6003f,0x00003ea0,0x201fbdd8,0x20007bde,0x4003f76e,
    0x3e6006f8,0x3003f882,0x09f5007f,0x88013e60,0x07f1003f,0x27c027c0,
    0x03f9fc80,0x800001b6,0xf88003f8,0x00fe4003,0x800003ea,0x7e407dec,
    0x3ea0006c,0x7ec006e9,0x20be6000,0x1ba003f8,0xb800df10,0x07f1003f,
    0xf800fe20,0x1004f804,0x36c07fdf,0xccb88000,0xccccdfcc,0x9bf99700,
    0xef880199,0x3f73222c,0x01cccccd,0x404ffb80,0x40006ffa,0x7c003fef,
    0xccccccce,0x22fdcccc,0xcccdfccb,0x8f33ee00,0x1ccdfec8,0x9ff99710,
    0x33333263,0xcccccdfc,0x99bf9952,0x9df99703,0xcefcb819,0x3fee01cc,
    0x67f66543,0x000bcccc,0x3fffffe6,0x882fffff,0xffffffff,0x25ffb801,
    0xfffffffa,0xa8003fff,0x5ff802ff,0x07fe4000,0x3ffffe00,0xffffffff,
    0xffff12ff,0x4405ffff,0xff30ffff,0x2607ffff,0x74ffffff,0xffffffff,
    0x36bfffff,0x83ffffff,0x2ffffffe,0x3fffffe2,0x21ff403f,0xfffffffd,
    0x00000fff,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x26200000,0x99999999,0x09999999,0x99999998,
    0x4cc40019,0x99980009,0x99999881,0x00019999,0x26666662,0x33100019,
    0x03333333,0x09999880,0x04cccc40,0x00055440,0x03320d44,0x40000000,
    0x076002d9,0xf3035100,0xffffffff,0xffffffff,0xfffffe87,0x1bdfffff,
    0x3ffffe20,0x3fff2000,0x3fffe64f,0xffffffff,0x3fe000de,0x1fffffff,
    0x7fffdc00,0x04ffffff,0x3fffffe0,0x3ffffe01,0x3fff201f,0xfb801fef,
    0x0ffee5ff,0x88000000,0xf1001ffd,0x7ffdc007,0xadfbaa85,0xaaaaaaaa,
    0x6d4c3fba,0xcaaaaaaf,0x2e603ffe,0x3e003fdf,0x5540adfd,0xaaaaacfb,
    0x003ffcba,0x7f955553,0xaa88009f,0xaaaafeaa,0x3fea6000,0x7f54c02a,
    0x2bbf602b,0xf800dfc9,0x3661ffff,0x000002ef,0x033ff220,0x2003f880,
    0x102fffff,0x1fc4007f,0xfd8807c8,0x1b6fe205,0x027cfd40,0x36200fe2,
    0x2db0001f,0x6d80007d,0x07f50000,0xf5013e60,0x3e200109,0xea82ffff,
    0x000001ef,0x0006ffdc,0xf8801fc4,0xf102ffff,0x81fc4007,0x0bee007c,
    0x017d5fc4,0x4404fb74,0x01fa003f,0x17d4fe20,0x001b6000,0xe800fd80,
    0x00fe400f,0x1ffff600,0x001bff70,0x1efea800,0x00fe2000,0x207fffd8,
    0x3e2003f8,0xe800f903,0xdd3f880f,0x09f2f980,0x2a003f88,0x07dc001f,
    0x6d8000bf,0x17e20000,0xdb005f70,0x2f6a0000,0xcffc8800,0x7ecc0000,
    0xf880002e,0x05ed4003,0xf8007f10,0x9800f902,0xf73f884f,0x09f3ec03,
    0x26003f88,0x2374002f,0x360000fc,0x7d400006,0x200bf103,0x000000fb,
    0x0fff2200,0x0fff2200,0x03f88000,0x07f10000,0x01f20180,0x7f103f20,
    0x23f8827c,0x01fc404f,0x4c001f70,0x001fc42f,0x00000db0,0x01fb01fb,
    0x00013e20,0x3f660000,0xffc8802e,0x4400000c,0x1000003f,0x0013607f,
    0x3f3000f9,0x03f23f88,0x404f83f2,0xdd1003f8,0xe80fc800,0x01b60006,
    0x517e2000,0x0fb8005f,0x00000000,0x2e03dfd5,0x00000dff,0x00007f10,
    0x2f40fe20,0x2001f200,0x11fc43f8,0x4f89f07f,0x4401fc40,0x2fc002fe,
    0xb0001fb8,0x2a00000d,0x000bf12f,0x0000017e,0x1bff7000,0x0007bfaa,
    0xdddddb10,0xdddddfdd,0x20005ddd,0xaaaaadf8,0x03e4005e,0x1fc44f80,
    0xf83f51f6,0x5567c404,0xffecaaaa,0x817cc001,0xdb0004f8,0x7ec00000,
    0x44000fd8,0x00002ffe,0xff910000,0x0bbf6619,0x3bbb2000,0xeeefeeee,
    0x001deeee,0xffffff10,0x7c800bff,0xf889f000,0x0dd17cc3,0xfff8809f,
    0xffffffff,0x03ec000d,0x36c001f6,0xdf100000,0xefb8007f,0x0de986ea,
    0x01eeeeb8,0x037fee00,0x000f7f54,0x003f8800,0x339f1000,0x800bd333,
    0x89f0007c,0xf36d83f8,0xf8809f05,0xba99999b,0x1004ffdc,0x02f9809f,
    0x00006d80,0x20037dc0,0xb13e64f9,0xfffd01bf,0x3faa000b,0xbff7001e,
    0xf8800001,0x0164c003,0x02f40fe2,0x7c001f20,0x7d41fc43,0x809f07d9,
    0xfb1003f8,0x003f500b,0x0db000bd,0x3f880000,0x3207dc00,0x220bf11f,
    0x4001ffff,0x8002efd9,0x000cffc8,0x4007f100,0x2206fffc,0x8009b03f,
    0x2f98007c,0xfee81fc4,0xf8809f03,0x00fe4003,0x3ffffff6,0x00ffffff,
    0xd50036c0,0x003f8800,0xab7442f4,0x9fff702f,0x1ffe4400,0x7fec4000,
    0x3f880003,0xfffff100,0x000fe205,0x4003e406,0x81fc40fb,0x09f00ffb,
    0xf8003f88,0x3337e204,0xcccccccc,0x036c003f,0x44001f70,0x0fe2003f,
    0x807edfd4,0x7000effd,0x000019ff,0x002efe98,0x4400fe20,0x102fffff,
    0x1f98007f,0x6d8007c8,0x55103f88,0x3e2027c0,0x207c8003,0x1b6000fb,
    0x5c00db00,0x0fe2000f,0x7ec0df00,0x0bffe04f,0x0037fea0,0xbfd50000,
    0x07f10003,0x037ffe40,0xf98007f1,0x4c007c81,0x003f884f,0x7f1013e0,
    0x740f9000,0x00fd4005,0x7dc00db0,0x00fe2000,0x3e203fd0,0x0bff500f,
    0x001efea8,0x7fdc0000,0x0fe2000d,0x88059300,0x0fcc003f,0xff1003e4,
    0x0007f101,0x0fe2027c,0x7cc17e00,0x004f8002,0x0fb801b6,0x000fe200,
    0x3ff609f5,0x401ff902,0x00002efc,0x3ff22000,0x007f1001,0x00fe2000,
    0x0f903f30,0x440bfa20,0x13e0003f,0xc8007f10,0x000f902f,0x06d801f2,
    0x88003ee0,0xefc8003f,0x9fb9fb33,0x2027fc17,0x0000003c,0x80072200,
    0x1000000c,0x1f98007f,0x75cc07c8,0x00fe203f,0x7c404f80,0x09f91003,
    0xf980027c,0x400db002,0x3e2000fb,0xfff70003,0x3ffe27ff,0x00001ba1,
    0x00000000,0xb8000000,0xccccdfcc,0xdccccccc,0x33fb2a1f,0xffeccccc,
    0xbf99101e,0x65401799,0x222cefcc,0xcccdfccb,0xffeccccc,0xcdfdc984,
    0x332a00bc,0x3222cefc,0xcccfeccc,0xeccccccc,0x3332e00f,0x1ccccefc,
    0x01595100,0x00000000,0x00000000,0xff100000,0xffffffff,0xffffffff,
    0x7ffffec3,0x00bdffff,0x7fffffd4,0x3fff601f,0x3fe66fff,0xffffffff,
    0x701bdfff,0x3fffffff,0x7fffff40,0x3fffea6f,0xffffffff,0x00ffffff,
    0xfffffff1,0x0007ffff,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x10000000,0x17bdfdb7,0x372a0026,0x2000bcef,0xdefedba8,0xdb730002,
    0x00c459df,0x33bfb2e2,0x1aaaa802,0x06aaaa60,0x02aaaaa6,0x0aaaaaa0,
    0x6e4c3555,0xa8801bdf,0xb9501aaa,0x21555105,0x6d42dfda,0xaaa801ce,
    0x555302aa,0xaaaa8155,0xaaaaaaaa,0x7fdc001a,0xcffedcde,0x3ffa203f,
    0x02fffdce,0x6f7ffec4,0x001efedc,0x3b37bff2,0x206c9eff,0xfecdfffb,
    0xfff101ef,0x7ffec07f,0xffffe85f,0x7ffc403f,0xfff50fff,0x373bff27,
    0x7fec04ff,0x7ffd45ff,0x3fee1ffe,0xffdffdbf,0x7ffbff91,0x7ffffc40,
    0xffffd80f,0x3fffe23f,0xffffffff,0x37f2004f,0x07ff9101,0x74c0bfee,
    0x2b3a205f,0x801df500,0xd500bfe9,0xbfd10dff,0x413faa01,0x4c03f998,
    0x9f305e99,0x2a620013,0x67cc40bf,0x4fc80bfd,0xb2f4ccc0,0x1fa615df,
    0x447fff51,0x3624fcfe,0x4efe4406,0x07bee600,0x333339f1,0x03ff3333,
    0x6c0077c0,0x00df983f,0x80004fb8,0x0f7403fb,0xfd86fd80,0x805f9002,
    0x817a003f,0x1f70005e,0x00bffe20,0x37a001fd,0x03104fe8,0xff509ff1,
    0x7003f30b,0x0efa809f,0xfd803f88,0x00fe2001,0x03741fc4,0x00007f20,
    0x01fb817e,0x7f51be20,0x200fd800,0x817a003f,0x2013107c,0x0bfe206d,
    0x7400bea0,0x88002fee,0x40df105f,0x09f7004f,0x2f8817ea,0x40017e40,
    0x815000fe,0x744001fc,0x06d80006,0xd9000bf1,0xf88006f8,0xe800fe04,
    0x3207ea05,0x4409d06f,0x013e004f,0x8000fff4,0x813e02f8,0x17ee004f,
    0x80300bf5,0xf70003fc,0x1760003b,0x8007dc00,0xf506d808,0x44110003,
    0x0db0003f,0x0bd001fc,0x7ff417c4,0xf101fc41,0x8027c007,0x220000ee,
    0xf813e02f,0xaafd4004,0xfb80005f,0x7fd40004,0x401acdef,0x3f30004f,
    0x3fffb660,0x706eceff,0xf500001f,0x55555557,0xf9555555,0xbd001fc0,
    0x5fcc4f80,0x100fd43f,0x027c007f,0x440005e8,0xf813e02f,0xfefa8004,
    0x5fa80004,0xb9510000,0x107ffffd,0x3e20005f,0x677fec43,0x6ffdccac,
    0x20000d90,0xfffffffb,0xffffffff,0x007f00ff,0x91b602f4,0x07b8db1f,
    0x9f001fc4,0x00017a00,0x027c05f1,0x3f60009f,0x7cc0000f,0x88000006,
    0x3e20dfda,0x45f10003,0xd800cfe8,0x0000f906,0x26666bea,0x99999999,
    0x00fe0199,0x07dc05e8,0x6d87eabd,0xf001fc40,0x0017a009,0x27c05f10,
    0xf70009f0,0x20001dfb,0x00000ef8,0x3e2fcc00,0x43f50004,0x1b6002fd,
    0x400007dc,0x000003f8,0x02f4007f,0x897cc7e6,0xf1013e4f,0x8027c007,
    0x7c40005e,0x4f813e02,0xf9a7e400,0x7f44000e,0x00980000,0x0db07dc0,
    0x09f1f200,0x3f306d80,0x017e0000,0x001fc000,0x2e7f00bd,0x17c5b60f,
    0xf800fe20,0x000bd004,0x13e02f88,0x3f2004f8,0x00077cc4,0x200003fd,
    0x0fcc003f,0xf98007f5,0xd000be65,0x001be20d,0x000bee08,0x44013e00,
    0xbd5e805f,0x00fa9fa8,0x9f001fc4,0x00017a00,0x027c05f1,0x0ff2009f,
    0x6c0077cc,0x802cc01f,0x07e4006f,0xfe8007f6,0x4c017e20,0x0fea06fe,
    0xfe8bd300,0x3a018000,0x05ff9806,0xf82f9fc8,0x3f8807cc,0x74013e00,
    0x17c40005,0x027c09f0,0x3e601fec,0x00bf200e,0x6ffc01ee,0x885fa800,
    0x7f4c02ff,0x5c00fe82,0x7ec06fff,0x1ffc8804,0xa80177c4,0x03f900fe,
    0x402fffdc,0xfd80fdfa,0x03f8805e,0x2f4013e0,0x80be2000,0xb013e04f,
    0x3be2007f,0x7003fb80,0x3bffe00f,0x3f6a60ab,0x2b7fa206,0x05ff9511,
    0x5442bbe6,0xcfd8dfec,0xbefd882c,0xdff95309,0x2b7fa201,0x3ffaea61,
    0x233fe202,0xe8dfeca8,0x3fe203ce,0x407ff505,0x0bcefcca,0x2cefcb88,
    0x3bf33326,0x2ccccccc,0x39bfb910,0xdf059df0,0xcefdb859,0xfb99303c,
    0x33fea19f,0xcccccccc,0x35d007ec,0xfffffffb,0xff70017f,0x01bfffff,
    0xfffffe98,0x3fff62ff,0x3fffea06,0x001dffff,0xfffffff7,0xf30017df,
    0x45ffffff,0x7fc06ffe,0xd807fe02,0x81ffffff,0x26fffff8,0xfffffffb,
    0x04ffffff,0x09fffff5,0xfff0bfff,0xfffffe8d,0xffffc80e,0xffff71ff,
    0xffffffff,0x2a2000ff,0x0001accb,0x00137953,0x009bca98,0x59753000,
    0x2a600013,0x10001abb,0x00015795,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0xaa980000,
    0x5302aaaa,0x00555555,0x55550093,0x0aaaaa85,0xeeb80000,0x3bbb22ee,
    0xeeeeeeee,0x0deeeeee,0x00000002,0x00000000,0x00000000,0x00000000,
    0xd8000000,0x0fffffff,0xffffffe8,0x007dc00f,0xfb1ffffa,0xe8801fff,
    0x3fffa001,0x3bbbb20f,0xeeeeeeee,0x70deeeee,0x0000005f,0x00000000,
    0x00000000,0x00000000,0x40000000,0x0099df99,0x026fee66,0xfb003ee0,
    0xfffb8dff,0x00ffd807,0x03ffff88,0xfe880000,0x00000003,0x00000000,
    0x00000000,0x00000000,0x64000000,0x01b6000f,0xfb801f70,0x7ffd45ff,
    0x37e7dc06,0x037ffd40,0xfb100000,0x00000009,0x00000000,0x00000000,
    0x00000000,0x44000000,0x07f3003f,0x5400fb80,0x7fcc3fff,0x553ea04f,
    0x7ffec04f,0x80000002,0x000005fc,0x00000000,0x00000000,0x00000000,
    0x00000000,0x07e401f6,0x3ee1cee8,0x267fb510,0x7fc42fff,0xc8df103f,
    0x1bffe02f,0xb8000000,0x0000005f,0x00000000,0x00000000,0x00000000,
    0x30000000,0x04f8805f,0x373fff6a,0x0cfffdbf,0xff03fff1,0x203fa05f,
    0xfff981fd,0xfffffd02,0xffffffff,0x403fffff,0x00000029,0x00000000,
    0x00000000,0x00000000,0x20000000,0x00fdc06e,0x7fffedc4,0x1fff02cf,
    0xfb03ffd0,0x703ba203,0x66540bff,0xcccccccc,0xbccccccc,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x05e807ea,0x806ff980,
    0x1ffb07fe,0x7cc03fb8,0x000ffec5,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x505f8000,0x9fd0005f,0x06fd807f,0x05f98ff7,
    0x3fe29f70,0x19db5005,0x00593000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x3ee00000,0xc8006d80,0x5403fb2f,0xb89f303f,0x4db2000d,
    0xefc800ff,0x8aa01efd,0x0006fffc,0x00000000,0x00000000,0x00000000,
    0x00000000,0x44f88000,0x7d4003f9,0x0003be24,0x2e000000,0x264fc801,
    0x14fa82fe,0x005fffff,0x00000000,0x00000000,0x00000000,0x00000000,
    0x1f900000,0xf10007e4,0x0009f50d,0x00000000,0x3f620fe6,0xff897ee3,
    0x00002fff,0x00000000,0x00000000,0x00000000,0x00000000,0xf13f9800,
    0x00fa8009,0x000000f7,0x0a200000,0x1bffff90,0x006fffc8,0x00000000,
    0x00000000,0x00000000,0x00000000,0x5b600000,0x000000fb,0x00000000,
    0xca800000,0x00b2602d,0x00000000,0x00000000,0x00000000,0x00000000,
    0xf5000000,0x00000bfb,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x000fff40,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,
};

static signed short stb__courier_44_usascii_x[95]={ 0,9,5,3,4,3,4,9,11,5,0,2,5,3,
8,4,4,4,3,3,4,3,5,4,4,5,8,5,0,1,0,0,4,0,1,2,2,1,3,2,2,4,3,1,
2,0,0,0,3,1,1,3,2,1,0,0,1,1,4,0,0,0,4,1,8,2,0,3,2,2,4,2,1,3,
3,3,3,0,2,2,0,2,3,3,2,1,1,1,1,2,4,0,10,0,3, };
static signed short stb__courier_44_usascii_y[95]={ 32,7,8,6,6,7,11,8,8,8,8,11,26,19,
27,5,7,7,7,7,8,8,7,8,7,7,15,15,11,17,11,9,7,9,9,9,9,9,9,9,9,9,9,9,
9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,8,5,8,7,41,6,15,8,15,8,15,8,15,8,7,
7,8,8,15,15,15,15,15,15,15,9,15,15,15,15,15,15,8,8,8,18, };
static unsigned short stb__courier_44_usascii_w[95]={ 0,5,14,17,15,17,16,6,7,8,15,19,9,17,
7,16,15,15,16,17,15,17,15,15,15,15,7,10,19,21,19,14,15,24,21,19,20,20,19,20,20,15,20,22,
20,24,22,20,19,21,23,17,19,21,24,23,21,21,16,7,15,7,15,24,7,20,22,18,21,19,18,20,21,17,
13,20,17,24,20,19,22,21,19,17,19,21,22,22,21,21,16,8,3,8,17, };
static unsigned short stb__courier_44_usascii_h[95]={ 0,26,12,29,30,26,22,12,29,29,15,20,12,4,
6,31,26,25,25,26,24,25,26,25,26,26,18,22,20,8,20,24,28,23,23,24,23,23,23,24,23,23,24,23,
23,23,23,24,23,28,23,24,23,24,23,23,23,23,23,29,31,29,12,2,7,18,25,18,25,18,24,25,24,25,
33,24,24,17,17,18,25,25,17,18,24,18,17,18,17,25,17,29,29,29,6, };
static unsigned short stb__courier_44_usascii_s[95]={ 249,193,183,73,48,175,158,249,129,112,167,
226,214,175,242,15,199,33,129,215,201,111,233,213,1,17,246,175,206,224,186,
143,159,90,68,217,22,1,236,158,192,176,122,131,115,43,213,101,45,137,21,
237,1,179,89,65,154,136,114,104,32,121,198,193,246,39,190,60,146,79,1,
90,61,49,1,20,83,185,144,19,67,229,165,1,41,99,144,121,210,168,232,
95,91,64,224, };
static unsigned short stb__courier_44_usascii_t[95]={ 14,1,153,1,1,1,111,1,1,1,153,
111,153,28,162,1,1,35,35,1,62,35,1,35,35,35,111,111,111,153,111,
62,1,111,111,62,111,111,87,62,87,87,62,87,111,111,87,62,87,1,87,
62,87,62,87,87,87,111,87,1,1,1,153,28,153,135,35,135,35,135,62,
35,62,35,1,62,62,135,135,135,35,35,135,135,62,135,153,135,135,35,135,
1,1,1,162, };
static unsigned short stb__courier_44_usascii_a[95]={ 373,373,373,373,373,373,373,373,
373,373,373,373,373,373,373,373,373,373,373,373,373,373,373,373,
373,373,373,373,373,373,373,373,373,373,373,373,373,373,373,373,
373,373,373,373,373,373,373,373,373,373,373,373,373,373,373,373,
373,373,373,373,373,373,373,373,373,373,373,373,373,373,373,373,
373,373,373,373,373,373,373,373,373,373,373,373,373,373,373,373,
373,373,373,373,373,373,373, };

// Call this function with
//    font: NULL or array length
//    data: NULL or specified size
//    height: STB_FONT_courier_44_usascii_BITMAP_HEIGHT or STB_FONT_courier_44_usascii_BITMAP_HEIGHT_POW2
//    return value: spacing between lines
static void stb_font_courier_44_usascii(stb_fontchar font[STB_FONT_courier_44_usascii_NUM_CHARS],
                unsigned char data[STB_FONT_courier_44_usascii_BITMAP_HEIGHT][STB_FONT_courier_44_usascii_BITMAP_WIDTH],
                int height)
{
    int i,j;
    if (data != 0) {
        unsigned int *bits = stb__courier_44_usascii_pixels;
        unsigned int bitpack = *bits++, numbits = 32;
        for (i=0; i < STB_FONT_courier_44_usascii_BITMAP_WIDTH*height; ++i)
            data[0][i] = 0;  // zero entire bitmap
        for (j=1; j < STB_FONT_courier_44_usascii_BITMAP_HEIGHT-1; ++j) {
            for (i=1; i < STB_FONT_courier_44_usascii_BITMAP_WIDTH-1; ++i) {
                unsigned int value;
                if (numbits==0) bitpack = *bits++, numbits=32;
                value = bitpack & 1;
                bitpack >>= 1, --numbits;
                if (value) {
                    if (numbits < 3) bitpack = *bits++, numbits = 32;
                    data[j][i] = (bitpack & 7) * 0x20 + 0x1f;
                    bitpack >>= 3, numbits -= 3;
                } else {
                    data[j][i] = 0;
                }
            }
        }
    }

    // build font description
    if (font != 0) {
        float recip_width = 1.0f / STB_FONT_courier_44_usascii_BITMAP_WIDTH;
        float recip_height = 1.0f / height;
        for (i=0; i < STB_FONT_courier_44_usascii_NUM_CHARS; ++i) {
            // pad characters so they bilerp from empty space around each character
            font[i].s0 = (stb__courier_44_usascii_s[i]) * recip_width;
            font[i].t0 = (stb__courier_44_usascii_t[i]) * recip_height;
            font[i].s1 = (stb__courier_44_usascii_s[i] + stb__courier_44_usascii_w[i]) * recip_width;
            font[i].t1 = (stb__courier_44_usascii_t[i] + stb__courier_44_usascii_h[i]) * recip_height;
            font[i].x0 = stb__courier_44_usascii_x[i];
            font[i].y0 = stb__courier_44_usascii_y[i];
            font[i].x1 = stb__courier_44_usascii_x[i] + stb__courier_44_usascii_w[i];
            font[i].y1 = stb__courier_44_usascii_y[i] + stb__courier_44_usascii_h[i];
            font[i].advance_int = (stb__courier_44_usascii_a[i]+8)>>4;
            font[i].s0f = (stb__courier_44_usascii_s[i] - 0.5f) * recip_width;
            font[i].t0f = (stb__courier_44_usascii_t[i] - 0.5f) * recip_height;
            font[i].s1f = (stb__courier_44_usascii_s[i] + stb__courier_44_usascii_w[i] + 0.5f) * recip_width;
            font[i].t1f = (stb__courier_44_usascii_t[i] + stb__courier_44_usascii_h[i] + 0.5f) * recip_height;
            font[i].x0f = stb__courier_44_usascii_x[i] - 0.5f;
            font[i].y0f = stb__courier_44_usascii_y[i] - 0.5f;
            font[i].x1f = stb__courier_44_usascii_x[i] + stb__courier_44_usascii_w[i] + 0.5f;
            font[i].y1f = stb__courier_44_usascii_y[i] + stb__courier_44_usascii_h[i] + 0.5f;
            font[i].advance = stb__courier_44_usascii_a[i]/16.0f;
        }
    }
}

#ifndef STB_SOMEFONT_CREATE
#define STB_SOMEFONT_CREATE              stb_font_courier_44_usascii
#define STB_SOMEFONT_BITMAP_WIDTH        STB_FONT_courier_44_usascii_BITMAP_WIDTH
#define STB_SOMEFONT_BITMAP_HEIGHT       STB_FONT_courier_44_usascii_BITMAP_HEIGHT
#define STB_SOMEFONT_BITMAP_HEIGHT_POW2  STB_FONT_courier_44_usascii_BITMAP_HEIGHT_POW2
#define STB_SOMEFONT_FIRST_CHAR          STB_FONT_courier_44_usascii_FIRST_CHAR
#define STB_SOMEFONT_NUM_CHARS           STB_FONT_courier_44_usascii_NUM_CHARS
#define STB_SOMEFONT_LINE_SPACING        STB_FONT_courier_44_usascii_LINE_SPACING
#endif

