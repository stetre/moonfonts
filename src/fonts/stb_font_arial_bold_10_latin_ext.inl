// Font generated by stb_font_inl_generator.c (4/1 bpp)
//
// Following instructions show how to use the only included font, whatever it is, in
// a generic way so you can replace it with any other font by changing the include.
// To use multiple fonts, replace STB_SOMEFONT_* below with STB_FONT_arial_bold_10_latin_ext_*,
// and separately install each font. Note that the CREATE function call has a
// totally different name; it's just 'stb_font_arial_bold_10_latin_ext'.
//
/* // Example usage:

static stb_fontchar fontdata[STB_SOMEFONT_NUM_CHARS];

static void init(void)
{
    // optionally replace both STB_SOMEFONT_BITMAP_HEIGHT with STB_SOMEFONT_BITMAP_HEIGHT_POW2
    static unsigned char fontpixels[STB_SOMEFONT_BITMAP_HEIGHT][STB_SOMEFONT_BITMAP_WIDTH];
    STB_SOMEFONT_CREATE(fontdata, fontpixels, STB_SOMEFONT_BITMAP_HEIGHT);
    ... create texture ...
    // for best results rendering 1:1 pixels texels, use nearest-neighbor sampling
    // if allowed to scale up, use bilerp
}

// This function positions characters on integer coordinates, and assumes 1:1 texels to pixels
// Appropriate if nearest-neighbor sampling is used
static void draw_string_integer(int x, int y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0, cd->t0); glVertex2i(x + cd->x0, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t0); glVertex2i(x + cd->x1, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t1); glVertex2i(x + cd->x1, y + cd->y1);
        glTexCoord2f(cd->s0, cd->t1); glVertex2i(x + cd->x0, y + cd->y1);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance_int;
    }
    glEnd();
}

// This function positions characters on float coordinates, and doesn't require 1:1 texels to pixels
// Appropriate if bilinear filtering is used
static void draw_string_float(float x, float y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0f, cd->t0f); glVertex2f(x + cd->x0f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t0f); glVertex2f(x + cd->x1f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t1f); glVertex2f(x + cd->x1f, y + cd->y1f);
        glTexCoord2f(cd->s0f, cd->t1f); glVertex2f(x + cd->x0f, y + cd->y1f);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance;
    }
    glEnd();
}
*/

#ifndef STB_FONTCHAR__TYPEDEF
#define STB_FONTCHAR__TYPEDEF
typedef struct
{
    // coordinates if using integer positioning
    float s0,t0,s1,t1;
    signed short x0,y0,x1,y1;
    int   advance_int;
    // coordinates if using floating positioning
    float s0f,t0f,s1f,t1f;
    float x0f,y0f,x1f,y1f;
    float advance;
} stb_fontchar;
#endif

#define STB_FONT_arial_bold_10_latin_ext_BITMAP_WIDTH         256
#define STB_FONT_arial_bold_10_latin_ext_BITMAP_HEIGHT         86
#define STB_FONT_arial_bold_10_latin_ext_BITMAP_HEIGHT_POW2   128

#define STB_FONT_arial_bold_10_latin_ext_FIRST_CHAR            32
#define STB_FONT_arial_bold_10_latin_ext_NUM_CHARS            560

#define STB_FONT_arial_bold_10_latin_ext_LINE_SPACING           6

static unsigned int stb__arial_bold_10_latin_ext_pixels[]={
    0x00044018,0x55504400,0x00000155,0x00000000,0x06000188,0x00000000,
    0x00c00000,0x10000000,0x00004201,0x81802000,0x403a05db,0x0ee880e8,
    0x37f2e0e8,0x55c1a20c,0x6642ed40,0x0c984b80,0x2ee0775c,0xbb03dd81,
    0x6e40f303,0x175c34c3,0x0d302dd8,0x12ee07b6,0xb10b00f8,0x320d307b,
    0x077440eb,0x01e80e64,0x21ab6079,0x98bb704b,0x5135101b,0xbc980b98,
    0x17405c40,0x9a8864dc,0x432ae1a8,0x2e1a89a8,0x513510ba,0xa885c5c3,
    0x05441a89,0x106622a2,0x9032a015,0x301bb87f,0x41573019,0x4c1a88a8,
    0x1037301c,0x2331441d,0xbb8330a8,0x220ab981,0x81750662,0x2a233128,
    0x31511988,0x7e415033,0x7efec5ec,0x8ff7f21f,0x64c6dcf8,0xb8b82e80,
    0x172dcf50,0x25b9ea17,0x5cf50b8b,0x3d42e2e5,0x1fefe4b7,0xbf92dcf5,
    0x4fdfd87f,0xfdfd8bee,0x11fefe44,0x73d4db9f,0x22f67e4b,0x6545ecfc,
    0xaadcf539,0xfdfd96e7,0xa9b73e24,0xfdfd96e7,0xf55b9ea4,0x16e7aadc,
    0xb887cc7e,0x4bf61f10,0x7d4750f8,0x41edc151,0x5399cc2e,0x7339adcf,
    0x2735b9ea,0x9adcf539,0x5b9ea733,0x7a8ea1f1,0x3a87c56e,0x987c43ea,
    0x87c43ea7,0x7d4750f8,0x5b9ea151,0x4c2e21f3,0x3e61710f,0xadcf56da,
    0x87d56e7a,0x2a3f50f8,0xfaadcf50,0xb9ea1f10,0x7aadcf55,0xb5c7e16e,
    0x36d70aa8,0xd80d73da,0x3a7263ef,0x55aa1742,0x6aadcf56,0x55b9ead5,
    0xb73d5aad,0x27ab55aa,0x3d40d75b,0x6b81aeb7,0x1ae799f4,0xfb01ae7d,
    0x2b73d47d,0x2e15516b,0x56e15516,0xaadcf56a,0x3a35d6e7,0x7a8fbf63,
    0x4fa35d6e,0x73d56e7a,0xf85b9eab,0x4bf26f51,0x2a5f3cea,0xb8888227,
    0x85fd912f,0x56ab542e,0xd56aae4f,0x2d55c9ea,0xaae4f56a,0x5c9ead56,
    0x4f5044f5,0x5044f55c,0x2df12f8f,0x27a97c7a,0x3ee22208,0x7aae4f52,
    0x4dea5f93,0xd91d72fc,0x4f55c9ea,0x12f8f55c,0x9ea5f711,0x52f8f55c,
    0x327aae4f,0x7c2e4f55,0x5f317f11,0x3e3dd7e2,0x23aa5d8a,0x0bab92e8,
    0x2d76a815,0xd54d89f9,0x6c4fcdae,0x7cdaed54,0x2ed54d89,0x49b13f36,
    0x3e65d8af,0x22be4d89,0x3dc5fc5d,0x7b8bf82a,0xd52ec57c,0x27e65d11,
    0x317f14d8,0x262fe25f,0x4db3b62f,0x3f34d89f,0x5c5fc9b1,0x4ba23aa7,
    0x3e4d89f9,0x27e67b8b,0xb13f34d8,0x53627e69,0x3a60f9cd,0xfdb50cff,
    0x0dfda83b,0xdf52ffe4,0x7442d87d,0x3bff26de,0x64dbdd10,0xbdd10eff,
    0x8877fe4d,0x3ff26dee,0x037f6a0e,0x6d41dff9,0x6fecc0df,0xbfb30ec1,
    0x40dfda83,0x7fe45ffc,0x33ffa60e,0x433ffa60,0x3f25b9c9,0x3bff20ef,
    0x9077f660,0xeffc8bff,0x9077f660,0x7fe41dff,0x43bff20e,0x02004fe9,
    0x38000000,0x00000000,0x00000000,0x02800000,0x00000000,0x03bd9000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x22000210,0x2a600082,
    0x88198a20,0x0e887100,0x415c41c4,0x03ee8808,0x550b8800,0x00006441,
    0x01a80011,0x57315440,0x22a81081,0x55051028,0x57300055,0x01aaa881,
    0x14400000,0x98165cd5,0xb090b306,0x50fbf985,0x16f42dcf,0x2612a2cc,
    0x7443ec85,0x4198a20e,0x21dd81ee,0x645f70dc,0x402ed44b,0xb8bb500e,
    0x540ed80f,0x8db9f13f,0x1aa241cc,0x3fff6354,0x7441b666,0x3ea2ebac,
    0x04b84fcc,0x42bd80f2,0x0aa8e659,0x47301950,0x2b2a65da,0x7a87f10a,
    0x2298556e,0x85b8b30a,0x50f75459,0x2e7a94c3,0x43981d45,0x51b9742d,
    0x02af2aa5,0x42aaaaa6,0x3a0abca9,0x3540ba81,0x2882a3f5,0xbea9546e,
    0xbff1aa0c,0x06f2a279,0xd57931d1,0x986b9ea1,0x01aca883,0xb5473073,
    0x7ec4fdfd,0xf9b544fd,0xfd9952ec,0x5437b6e1,0xfd9ed6e7,0xfd1663f1,
    0x17c45983,0x54be23ee,0x03fd16e7,0x9741e8d5,0x3f2e5d5b,0xdfde80cd,
    0xfd9951cc,0x0ff41741,0x87dfb1aa,0xa9756e6a,0x71aa5caf,0x33ea79bf,
    0x32eaa4fc,0x9f52bbf8,0x83fd05dd,0xe84fccfa,0x5d53541f,0x7d43e21f,
    0xbb541f10,0x645f304d,0x64f34d8d,0x26fbeb75,0x4df99667,0xcd80f880,
    0x25b9ea5c,0x26a84df9,0x3f12e86c,0xf302e81f,0x17cc03f1,0x4df983ea,
    0xf7111354,0xf3f13545,0xd53c5aa1,0x9ea79b50,0x743a326b,0x9d5f51b9,
    0x7a89bf30,0x89bf31ae,0xd1afaa6a,0x547d1ae7,0x44579d76,0x9eef444e,
    0xf34d89f9,0x4cb7b5d3,0x711e7325,0x1ff30798,0x664b93d4,0x3e66a879,
    0x0bdb1740,0x77d3605d,0x213a20ee,0x23ce644d,0x3a23aa6a,0x4bdb1aa2,
    0x1aa6a8fa,0x67d4f366,0x23e722ee,0x45ea68f9,0x23ce643f,0x642eecfa,
    0xd535479c,0x8f52f8f5,0x7ec5aa2f,0x6c41760e,0x83bff20f,0x23df8cdf,
    0x8bf37e59,0x9b02dc59,0x24d89f98,0x3542fcdf,0x7d45d0ba,0xdf982e82,
    0x2ec19afc,0x7e6fc1e8,0xbff91aa2,0x517d46a8,0x43545fdd,0xd5f53cd9,
    0xfcebba89,0x0fb9ea0b,0xfa8bf37e,0xfcdf84ea,0x7f6a9aa2,0xb8bf8f71,
    0xc8172e47,0x1f8d980e,0xe97f41cc,0x67d5661f,0xd89666dc,0x3f213204,
    0xb99f50ef,0x11ec6a8d,0x741ee25d,0x1fbadc82,0x0f880ec8,0xa9b733ea,
    0x3542d40e,0x706a8f71,0x2a79b305,0x0bc87f17,0x81b30766,0x2a6dccfa,
    0x67d47f17,0x6a8aa6dc,0xd983bfb3,0x28ba61df,0x21ffffe8,0x42d884eb,
    0x488f90fc,0x488fc47b,0x04c80376,0x21f88f60,0xec8f546a,0x0ba05d71,
    0x7fffc3f1,0x23ffffd3,0x3f11ec4c,0x83c893a6,0x950bae6a,0x79307660,
    0x40fb9ea5,0xc80bdeca,0x47e23d84,0x1ec3ee7a,0x007663f1,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x22880000,0x017b6010,0x0542a510,0x80000544,0x00006228,
    0x55100000,0x22464155,0x0000a228,0x220a21c8,0x00930a62,0x1058e800,
    0x0e726001,0x80d4c062,0x1332001b,0x05da814c,0xa826445b,0xb30d300a,
    0x3f225476,0x81ee83fd,0x5b9fd42c,0x886982d4,0x1d34b86e,0xccfa8f64,
    0xd512321c,0x40e883d4,0x2a5ba82d,0x87f37a86,0x884b82bd,0x01bb80ee,
    0x13dd8899,0xde835115,0x42f67e42,0x5c2f4c1b,0x883fd01b,0x13c40bca,
    0x7ec15555,0x983a84fd,0xf887c193,0x44544750,0x15755118,0x456e3fea,
    0x1510abba,0x2eee2311,0x21cce20b,0x2e0f50aa,0xf5354551,0x00a88e60,
    0x65aa7395,0x307f3f51,0x25309a87,0x360abba8,0x2aa24fdf,0x7a8a20aa,
    0x2531456e,0x541710f9,0x8117139c,0x7cc4fdfd,0x7f67d44d,0xccfa96a1,
    0x3e21f51c,0x5aa0ff40,0x035cb61f,0x7d56e7f5,0xbbd51ccc,0x3333eab7,
    0x556e7f51,0x5aa1cccf,0xff53546a,0x1756e1ff,0x6a83d4d5,0x6d7cc1ea,
    0x7d4bbd56,0x5c6a80ff,0x9f52f88f,0x443ea399,0x3999f50f,0xadcf5354,
    0x8b5d6e7a,0xdb5f30aa,0x443ea1aa,0x51e7320f,0x5497364f,0x23e8d707,
    0xfb544df9,0x113d4f61,0xaadc7fd4,0xbbf1d507,0x47fd41ea,0xb540f55b,
    0x3f53546a,0x07cfc433,0x6a83d4d5,0x6aadc1ea,0x5fd47ff5,0xcd86a86d,
    0x35c1ea5c,0xd503d4fa,0x9eab73d4,0x3f26f55b,0x755aab72,0x3e8d71ca,
    0x7a8bf37e,0x3ea5a9ea,0xf8f50fff,0xd51e7322,0x2be2d87e,0x377aa5d8,
    0x1ffff55b,0xfaafddaa,0xbbd50fff,0x3fffeab7,0x2a355aa0,0x5ed81ea6,
    0x2a0f5354,0x47541ea6,0x21f5d56c,0x6a87f17a,0x3ea0ff98,0xf8f50fff,
    0x41ffff52,0x55c9ea6a,0x5fcbdddf,0x91d52fa8,0x5572bead,0xccfa97c7,
    0x27a9ea6d,0x0667ea69,0xdf8f717f,0x0fdaa2fc,0x06fed43d,0x2abbf1d5,
    0xe9aa199f,0x54333f55,0x3f55df8e,0x8d56a833,0x3fffea6a,0x4d50bea3,
    0xd51ffffa,0xd9d903d4,0x27aa6daa,0x6c1aa0fb,0x20ccfd44,0x3ea7b8bf,
    0xf3354199,0x27ea9b13,0x3ff665c9,0x55b3b20c,0x5c5fcd56,0x51f88f67,
    0x21d1362f,0x37f6607a,0x1b733ea1,0x4c2c47e6,0x5fbb541d,0x20d980f5,
    0x3eed507a,0xab540f55,0x22a83546,0x40d987b8,0x0f53543c,0x5916e326,
    0x0b901b30,0x4c0f5132,0x81ea1dfd,0x877fe46a,0x3b116e7a,0xd55b8c98,
    0x1dfd99aa,0xbfff5240,0xfff52a81,0x88f6007f,0x0352ec1f,0x3a6a8199,
    0x87ffff55,0x7fffd44c,0xfaaf4d53,0x55aa3fff,0x1d883546,0xa89905d7,
    0xff53542c,0x0ef643ff,0x30990395,0xf513205d,0x2a007fff,0x1aa3ffff,
    0xb8b73d40,0x51dec80c,0xc8001aad,0x00000003,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x414a0000,0x5282941b,0x2a881988,0x54405510,0x12ac8330,0x03660a65,
    0x4cc510b6,0x00aae20a,0x261cc0e6,0x0a85129a,0x50662122,0xea81330a,
    0x9885101e,0x009a8808,0x07370e6a,0x91073509,0x2a839a81,0x2aa01910,
    0x14a1aaa8,0x88590593,0x542c882c,0x7eff40cc,0x6c1e6e41,0x2a4bdfdf,
    0xfbbf50ca,0x987f74c9,0x4f50abca,0x126e2ddb,0x320190d3,0x6a965dc0,
    0x9509117c,0x320e5419,0x2aaaa23c,0x770ff5c0,0x4cafaa09,0x36616c46,
    0x83d88481,0x41ec44bc,0x3a05500c,0x22ccefde,0x4e72a1c9,0x5e547339,
    0x951cce60,0x5b864417,0x3e21eee4,0x4e65bf10,0x9b21f539,0x332a0cda,
    0x75cf50fe,0xc82f2a1c,0x892f263f,0x3fbf63db,0x2a2f8d55,0x51cce61c,
    0x2a1ca839,0x32a1cccf,0x51cce66b,0x3f215d79,0x7b70f263,0x5e543c98,
    0x2731e4c0,0xb70f2639,0xd3cc5b77,0x7ccf6e09,0x5aad56da,0x5aa5daf9,
    0x4bb5f36a,0x5c7eeeeb,0x2746b86f,0x53d5aad5,0x4c1ff44f,0x0eb9ea2f,
    0xfb976be6,0x5cdd5f12,0xf3f30c9d,0x265f1aa1,0x2ad51e9e,0x263d3d36,
    0x20f51e9e,0x5aa6daf9,0x8db5f36a,0x5b5f32fb,0x7ccba726,0xbb5f32da,
    0x6a96d7cc,0x4b6be6d5,0x1e9de9c8,0x8f77e4b9,0x55bae9c9,0x5cb55aad,
    0x96ab54f3,0xaafb9e6b,0x37ebaa7c,0x545f1ea5,0x7a9ead56,0x13a22ed8,
    0x5722e4f5,0xbcb9e679,0x19fd30fb,0x354ff3f2,0x9ff7e4be,0x3bf2d56a,
    0x27fdf93f,0xb70ffffa,0x2d56a9aa,0x2fc8d55c,0x5fd910b7,0x3cd7216e,
    0x5aad50b7,0xefec885b,0x6e4d73fe,0x2bfb2219,0x2d56c8ea,0xa9aad76b,
    0x355aed76,0x5cbb15f3,0x8bf87f76,0x56bb547b,0x999535cf,0x5fcc2ec5,
    0x6ab5c4e9,0x6abeb9e6,0x6e4fa666,0x199d52dc,0xa8556e3f,0x8556ed76,
    0x27ea155b,0x5365aa19,0x6cb55aed,0x576a87d4,0x76a97572,0xd5355ae5,
    0x56bb54ae,0x4eadcaed,0x3e67e215,0x325d5c84,0xdbdd16ce,0xdd10f7ec,
    0x20f7ecdb,0x3620dfea,0x3660ecff,0x6f7441df,0x88bfaf56,0x01d90dfe,
    0x36037fae,0x4dbe21ef,0x3ba61efe,0x5459770e,0x3224fe9e,0xdbdd10ee,
    0x6443bb22,0x6c0f50ee,0x37ba26df,0x88dbfb16,0x543bf26f,0x3bf23eef,
    0xf907bf60,0x9b7ba21d,0x9dd30efc,0xcdfb8bfd,0xddf54fff,0x00b71937,
    0x00000000,0x70000000,0x01ffffe8,0x00010000,0x00000111,0xfffa8000,
    0x0000003f,0x00000000,0x00000000,0x00077b20,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x8386a000,0x204c40c8,0x82a03ee8,0x2bba829b,0x07205c5c,
    0xe88730e6,0x7170cc3e,0xc8089881,0x07307301,0x03510e6e,0x40aeea0a,
    0x46405128,0x15406443,0x0dd440aa,0x205c414c,0x20c4c48c,0x542a80c8,
    0xa981a982,0xd9502981,0x712f2126,0xd3053079,0x540da872,0x22e2a88a,
    0x3216ea0b,0x41440c81,0x702e2e1c,0x20b75097,0xb301901b,0x7c46d883,
    0x2eeee26d,0x40d56a80,0x41de438c,0xad884884,0x1f7e63b9,0x448c8193,
    0x425e43bc,0x3e22440c,0x3f3e20fb,0xeab82dc1,0x1edc40d8,0x07fa0f6e,
    0x6dc477f9,0x97c47dc3,0x4ce67339,0x9cce6733,0x51a1aa39,0x0bca8179,
    0x32a05e54,0x205e540b,0x176541ca,0x67d47ab3,0x5af2a1cc,0x6540caea,
    0x32a0e541,0x2320e541,0x2311aacc,0xb70f6e0f,0x6dc3db87,0x36e1edc3,
    0xa83e3aa3,0x81fe8136,0xdb849bd8,0x5d3930c9,0x3ee26fcc,0x2064edc2,
    0x55aa5ccd,0xb55aad56,0xa9aad56a,0xb5f32c46,0x32ed7ccb,0x57ccbb5f,
    0x976be65d,0x7f11e9e9,0x53dadcdb,0x5b6be60f,0x3a65cafa,0x3d3d31e9,
    0x74c7a7a6,0x44e721e9,0x39327c48,0x4ba7265d,0x3932e9c9,0x4ba7265d,
    0x7d52e9c9,0x4c1cfd8d,0x6c6c04df,0x219fd31d,0x3322fec8,0x74c3cc79,
    0x07fcc0cf,0xab55aad5,0xb55aad56,0x4751aa6a,0x9ae4f35c,0xb93cd727,
    0x4f35c9e6,0x2b73fefc,0xa9756e79,0x2b70ffff,0xc9e6d56a,0xfdf93fef,
    0x64ffbf27,0x32323fef,0x974438a8,0xd912fec8,0x4bfb225f,0xd912fec8,
    0x4bfb225f,0x57cc9d6a,0x303ce640,0x26677b39,0x8bab93e9,0x1e62fcdf,
    0x360fa666,0xd56bb544,0x56bb55ae,0x646a9aed,0xd7355ae1,0x4d56b9aa,
    0xab5cd56b,0x6a8556e6,0x50fb4cd7,0xcb54333f,0x5cd51f56,0x8556e155,
    0x556e155b,0x3232aae0,0xae4ba950,0x64bab92e,0x975725d5,0x75725d5c,
    0x5c3e6d52,0x7e6fc11e,0x477a1b02,0xdf50eee9,0x3733ea7d,0xdd31be26,
    0xe889901d,0xdbdd16de,0x745b7ba2,0x0d1aa6de,0xefd83dfb,0x360f7ec1,
    0x0f7ec1ef,0x7e41dd91,0xf527e41e,0xeab6fec0,0x3bb222fe,0x221dd910,
    0xdd910eec,0x21dccb81,0x3bea5fd8,0x27ddf53e,0xdf53eefa,0x4fbbea7d,
    0x7d53eefa,0xa7f76cbf,0x106dccfa,0x8f600008,0xc80001f8,0x80000004,
    0x0000046a,0x00000000,0x3ffffa80,0x00000000,0x00000200,0x00000000,
    0x0fc47b00,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x80000000,0x0a880ab9,0x2a037510,0x5135100a,
    0x05405554,0x05107593,0x01510151,0x209879b1,0x2a24ec41,0x166c41c0,
    0x098182a2,0x20cc5106,0x881441b9,0x40511b82,0x730143c9,0x641c4395,
    0x40aaa881,0x4630a628,0x225109a8,0x9731ccc1,0x236e7c43,0x6c44fdfc,
    0x6fec3b9a,0x7fefec4f,0x3e0bbbe1,0xf302ea21,0x07e7c4db,0x5c47fbf9,
    0x21d51988,0x3a0aa829,0x310361fd,0x0e279507,0xf50a61d5,0xbd9f92dc,
    0x43540bcc,0x3a60f339,0x540d12da,0x206e5caf,0xfddf980b,0x3b6eff21,
    0x5f4c32a1,0xb11a6f32,0xf505fd47,0x887c42a3,0x2b3a720f,0x3e21f51a,
    0x4bf61f10,0xd07e01f8,0x23d4c83f,0x43e23d5a,0x2dcfea3a,0x33541219,
    0xe82b822d,0x04a5441f,0xb9ea1219,0x42e21f35,0x43542cf9,0x16e0f349,
    0xa8655564,0x072e6d56,0x2dcd303d,0x41d933f7,0x4c2ba649,0x6d5cc917,
    0x3bf60d51,0x647d1ae3,0xd748bbd9,0x2b6d73e8,0x03fdf53d,0x226fcc3f,
    0x3fa3f9db,0xffa81ae5,0x46a2e5b8,0xddd73540,0x37e624c1,0x094d6544,
    0x3d40d45c,0x5545aeb7,0x5d505f30,0x7779b547,0x75c2bb54,0x5aad54d9,
    0x41b20bfa,0x267a8cfd,0x3545feef,0xf50798d3,0x221aab95,0x8f52fb88,
    0x2732723e,0x52f8f538,0x908be79d,0x4e643f09,0xd52ecc87,0x089ea5d1,
    0x216f77aa,0x2e6a8d34,0x66468796,0x834d2079,0x4f50ed8c,0x3f26f55c,
    0x27aa0fd2,0x19bcdaa1,0x56e077e4,0x55aad54b,0x5c087546,0x4fccd51e,
    0xd33545c9,0x2ad50798,0x11d50b56,0x7ee5fc5d,0x32e2aee1,0x89ee2fe0,
    0xda4cf75f,0x7c1f39b3,0x22e62fcd,0xf8b6b70f,0x23aa5d8a,0x6445c5df,
    0x36f33545,0xf9bf0743,0x0b913505,0x9f996217,0x317f14d8,0x8223ea5f,
    0x1f36a86a,0x97077011,0x3557212e,0xd31ae7a6,0x73cc9b11,0x31a66a8b,
    0xab54111f,0x3ff20766,0x17ffecc5,0xb307732e,0x7f6d43bf,0x9867ec1d,
    0x333ea4fe,0x88ffa26d,0x6fed45fe,0x12fddaa0,0x6a87b269,0x4b206fe4,
    0x486dccfa,0x8a443d93,0x3bff20df,0x433ffa60,0xd50ffff9,0x3ffe6d50,
    0x2e06ea0f,0x52e98974,0x9819b50b,0x9e60dfff,0x8d33545b,0xd50ffff9,
    0x000655aa,0x00040a60,0x36000004,0x00007e23,0x04bd3540,0x8801aa04,
    0x20fc47b0,0x19882040,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x82880000,0x2a750b99,0x18982663,0x0402aaa2,0x22620e54,
    0x0510f6e0,0x2170f6e2,0x5551dab9,0x24d26155,0x4c2a05c4,0xb8288e62,
    0x30a60640,0x3a833705,0x55440cdc,0x2a370aaa,0x0a251713,0x54c53144,
    0x530d42aa,0x2a2298a2,0x734aca81,0x26144197,0xfb512882,0x52e3d81d,
    0x2259915b,0x377e61cb,0x4f4c781f,0xc992ee0e,0x027e61e9,0x8e6193b7,
    0xf975cafa,0x355aa19b,0x756e1d64,0x2354af23,0x0640c82a,0x9836e0e6,
    0x6c06dc3f,0xb71ccdfd,0x9945c4b6,0x8be6f307,0x2a0fecca,0x4f32f88f,
    0x49b9f15b,0x5f56daf9,0x3fa354b9,0xeac9b541,0x239731ca,0x224cb75b,
    0x4b734c49,0xbd91afba,0x476ae65d,0x3e62fdc8,0x9fd10efe,0xd56a9261,
    0x6ab542e8,0x52632272,0x524c7bf8,0x83332e3d,0x5c76ae65,0x99970ccc,
    0x21261aa1,0xf880f8f9,0x0f324c78,0x4c0fe3e6,0x25ccd82f,0x99456e79,
    0x6ab556e7,0xbf3354f1,0xf5936a89,0x42feab95,0x2354bb6b,0x5467ec6a,
    0x5cfbfb27,0x32bea155,0x798bab95,0x974cccfa,0x3355aa6a,0x6bb5417d,
    0x52ebeaf2,0x9aa3efeb,0x8dd530fa,0x4d72bea6,0x9baa66ea,0x4d86a86a,
    0x6ec1dddf,0x20f33544,0xe880fef9,0x4c1ff104,0x7445feef,0xfab65aa3,
    0xcc9aa6a8,0xaeab5479,0xd71aad56,0x2a354bdf,0x86a8f5c6,0xa8776447,
    0x3b7a6d56,0x4bea7e63,0x4d50dee9,0x3f22d56a,0x9b7ba22d,0x51ecdce9,
    0xd35457f7,0x53c0fb8d,0x40fb9aad,0x2a1aa0fb,0x57e6fc46,0x2a0fd419,
    0x5fcc1e66,0x6c05d85d,0x2e4cfcc4,0x5b7f60f6,0x9aa2eeea,0x5aa2fcdf,
    0x2ad56aea,0x46a825c6,0x6c474c6a,0xb0232224,0x190d56a8,0x5c1ef7cc,
    0x20f21aa3,0xff0aa02e,0x77f64fd1,0x2a6a9aa4,0x543e209f,0x827ead56,
    0x21aa09fa,0x7ddee46a,0x21ae2089,0x8223e66a,0x7e47f179,0x98990088,
    0x401716e7,0x5aa0d569,0x2a5dbbea,0x5aad5d56,0x6a81d45a,0x3ffe6354,
    0x13fff60d,0x86ab5497,0x540f30d9,0x5951aa1b,0x0ec405d0,0x0f113ad9,
    0xffd354d5,0xb543a23f,0x23fffd6a,0x0d51fffe,0xff0fc4d5,0x20bae7ff,
    0x3fffe66a,0xe87dcf30,0x4c81ffff,0x2e8b73cc,0xa824d260,0xa87c47b6,
    0x00000d56,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x0d554400,0x288a20a2,0x5cc93950,0x26155530,
    0x298546a2,0x550d442a,0x551188a2,0x2aaa2155,0x55105440,0x24471055,
    0xaa835551,0x55510aaa,0x20a86601,0x0e201328,0xbca87b71,0x326931c8,
    0x4111112b,0x5c2dbcdb,0x260e543d,0x8222223c,0xa8280bca,0x4c0cc9cd,
    0x64d263bc,0x2a3fdcf9,0x0d50f886,0x3e2db5f3,0x4cffbae3,0x27b0f99f,
    0x3ea3f1fd,0x4fe6bf55,0x3999f35a,0x447f73e6,0x99f30fcf,0x3244f909,
    0x65c9fb9f,0xbbf50cdf,0x323f983f,0x0efd5365,0x193b7162,0x4b376be6,
    0x2e77d56a,0xd3913fff,0x27263d3b,0x21d3d31e,0x0812dae9,0x1f09b5f3,
    0x5dfed7cc,0xa9babe25,0x264f3d56,0x87c472d5,0x2971daea,0xd309f96a,
    0x56e3eeb8,0x3aa79bdf,0x3fe6bd97,0x260f35a8,0x3d94cfa7,0x03f540f3,
    0x1742dcf3,0x3a65b9aa,0x21f9ea3e,0xbbb94eb8,0x5c33fa27,0x5aa1bf15,
    0x36b50cea,0xfbdfb912,0x64bf7225,0x10b72ede,0xb9e2b708,0x26b74dfd,
    0x2f2e7ddf,0x3aad50fa,0x2a0feef9,0x5f53c5de,0x5b23aab9,0xf82d81fa,
    0x6d74fcc6,0x3ab7aa5b,0xb59bd35c,0x4c3fffe6,0x7cc1fcbf,0x447ddf30,
    0x9f30c79e,0xa85d05db,0xf0f61ea6,0x2eda8d55,0x26635755,0x1aad52e9,
    0x5d51aed5,0x46756e3d,0x5cbab90b,0x95daa155,0x4d56a840,0x1d32bfa9,
    0x754533f7,0x75daa6ab,0x2a5c99f9,0x2d5342ff,0x45b3b26a,0xffa86987,
    0x67c667c1,0x2bf2faa3,0x2b9f1d35,0x3e6199f9,0x317cc1bc,0x5ee4133f,
    0x57ccf12f,0x6a85d04e,0xb90f61aa,0x44175c99,0xb06f74c7,0xcdd883df,
    0x99eeedc6,0x265eecee,0xdd913ede,0x40877e41,0x3e07bf60,0x77e7fe40,
    0x887bba62,0x88f9edee,0x83e7aa6b,0xc9b55aa3,0x950f15b8,0x6c6bbe88,
    0x7543fd2f,0x2d35adf9,0x111f35fb,0x8bf883cc,0x37720f30,0xf179924f,
    0x8ea85d05,0x4c3d84d8,0x030021ff,0x00000000,0x44c00000,0x00200088,
    0x3e600040,0x6daa2eff,0x6ab54f14,0x43c477b2,0x49d3643c,0x6a8f90fc,
    0xe9a6b57f,0x27ffff35,0x7fff9079,0x08f101e6,0x740fb9e6,0x06fffd42,
    0x003741ec,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x751b9440,0x8883332e,0x93957308,0xa8ed5cc7,0x472e6593,0x1498c89c,
    0x25949831,0x50089149,0x99950544,0x05442a29,0x110dc435,0x32a140b8,
    0x253534cc,0x927e4019,0x8a4c9999,0x4c006a1c,0x0044e2e2,0x00000000,
    0x44000000,0x4b6b74fc,0x756c6ea9,0xf3dd3f50,0x4572bea3,0x42fea6df,
    0x14bafabc,0x2ef5495d,0x9e9922d5,0x2b21d53d,0x55aeaa66,0x2ae9553b,
    0x26a9ae65,0x4336e3f9,0x7d72bbb9,0x5ef5572b,0x4ccc1334,0x065ca219,
    0x46eeee89,0x0354e2e4,0x00000000,0x2e000000,0x1e7e20bf,0x1e6d41f7,
    0xa97532b5,0x517dcd56,0xecdce98d,0x7d47b321,0xfb81aa3f,0x068d8645,
    0x6c52a2d3,0x3decb951,0x887dec91,0x53776e3e,0x2a754ac9,0x00002ca9,
    0x00000000,0x00000000,0xd3000000,0x5276c17d,0x2d74413f,0xa974f2b5,
    0x52f74d56,0x8fd1ff0d,0xf3d50eae,0x76c19aa1,0x164c2e0e,0x32595188,
    0x4995023d,0x889eda60,0x00aaaa61,0x00000000,0x00000000,0x00000000,
    0x2ecc0000,0x7fff43f3,0xad42ea61,0x55aa5d3c,0x2d4fab96,0x2e64eb64,
    0xaa6daa1a,0x2ba4cf16,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00008000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,
};

static signed short stb__arial_bold_10_latin_ext_x[560]={ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,0,0,0,0,0,0,0,0,
-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,
0,0,0,-1,0,0,0,0,-1,-1,0,0,0,0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,-1,0,0,0,0,0,-1,0,-1,-1,-1,0,0,0,0,0,0,0,0,0,0,0,0,-1,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,-1,0,-1,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,-1,-1,-1,-1,-1,-1,0,0,0,0,0,0,0,-1,0,0,0,0,0,0,
-1,0,0,0,0,0,0,0,0,0,0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,0,
-1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,-1,1,1,1,
1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,-1,-1,0,
0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,0,0,-1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1, };
static signed short stb__arial_bold_10_latin_ext_y[560]={ 8,1,1,1,1,1,1,1,1,1,1,2,6,5,
6,1,1,1,1,1,1,1,1,1,1,1,3,3,2,3,2,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,8,1,3,1,3,1,3,1,3,1,1,
1,1,1,3,3,3,3,3,3,3,1,3,3,3,3,3,3,1,1,1,3,2,2,2,2,2,2,2,2,2,
2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,8,3,1,1,2,1,
1,1,1,1,1,3,3,5,1,0,1,1,1,1,1,3,1,4,8,1,1,3,1,1,1,3,-1,-1,-1,0,
0,0,1,1,-1,-1,-1,0,-1,-1,-1,0,1,0,-1,-1,-1,0,0,2,1,-1,-1,-1,0,-1,1,1,1,1,
1,1,1,1,3,3,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,3,1,1,1,1,1,1,1,
0,1,-1,1,1,3,-1,1,-1,1,-1,1,-1,1,-1,1,1,1,0,1,-1,1,-1,1,1,3,-1,1,-1,1,
-1,1,-1,1,1,0,-1,-1,1,1,-1,1,0,1,-1,1,1,1,0,3,1,1,-1,1,1,1,3,-1,-1,1,
1,1,1,1,1,1,1,-1,1,1,3,-1,1,1,1,3,0,1,-1,1,-1,1,1,3,-1,1,1,3,-1,1,
-1,1,-1,1,1,3,-1,1,1,1,-1,1,1,1,-1,1,0,1,-1,1,-1,1,-1,1,1,3,-1,1,-1,1,
0,-1,1,0,1,-1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,2,2,1,2,2,2,
2,2,2,2,2,2,2,2,2,2,1,3,2,2,2,2,2,2,2,2,2,2,2,2,2,1,3,2,2,2,
2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,-1,1,-1,1,-1,
1,-1,1,-1,-1,-1,-1,-1,-1,-1,-1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,
2,2,2,2,2,2,2,2,2,2,-1,-1,-1,1,-1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,
2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,
2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,
2,2,2,2,2,2, };
static unsigned short stb__arial_bold_10_latin_ext_w[560]={ 0,3,4,5,5,8,7,2,3,3,4,5,2,3,
2,4,5,4,5,5,5,5,5,5,5,5,3,3,5,5,5,6,9,7,7,7,7,6,6,7,6,2,5,7,
6,7,6,7,6,7,7,6,6,6,7,9,6,7,6,3,4,3,5,7,3,5,6,5,5,5,4,5,5,2,
3,5,2,8,5,6,6,5,4,5,3,5,5,7,5,5,5,4,2,4,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,3,5,5,5,5,
2,5,3,8,4,5,5,3,8,7,4,5,3,3,3,5,6,2,3,3,4,5,8,8,8,6,7,7,7,7,
7,7,10,7,6,6,6,6,3,3,4,4,8,6,7,7,7,7,7,5,7,6,6,6,6,7,6,6,5,5,
5,5,5,5,8,5,5,5,5,5,3,3,4,4,6,5,6,6,6,6,6,5,6,5,5,5,5,5,6,5,
7,5,7,5,7,6,7,5,7,5,7,5,7,5,7,7,8,6,6,5,6,5,6,5,6,5,6,5,7,5,
7,5,7,5,7,5,6,5,7,5,4,4,4,4,4,4,3,3,2,2,7,5,6,4,7,5,5,6,3,6,
4,6,4,6,4,6,3,6,5,6,5,6,5,7,7,5,7,6,7,6,7,6,9,9,7,4,7,4,7,4,
6,5,6,5,6,5,6,5,6,3,6,5,6,3,6,5,6,5,6,5,6,5,6,5,6,6,9,7,7,5,
7,6,5,6,5,6,5,4,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,7,5,5,6,5,5,5,
5,5,5,5,5,5,5,5,5,5,8,7,5,5,5,5,5,5,5,5,5,5,5,5,5,8,7,5,5,5,
5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,7,5,4,4,7,
6,6,5,6,5,6,5,6,5,6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5,5,5,5,5,7,5,10,8,7,6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5, };
static unsigned short stb__arial_bold_10_latin_ext_h[560]={ 0,7,3,8,8,8,8,3,9,9,4,6,4,2,
2,8,8,7,7,8,7,8,8,7,8,8,5,7,6,4,6,7,9,7,7,8,7,7,7,8,7,7,8,7,
7,7,7,8,7,8,7,8,7,8,7,7,7,7,7,9,8,9,4,2,2,6,8,6,8,6,7,7,7,7,
9,7,7,5,5,6,7,7,5,6,8,6,5,5,5,7,5,9,9,9,3,6,6,6,6,6,6,6,6,6,
6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,0,7,9,8,6,7,
9,9,2,8,4,5,4,2,8,2,4,7,4,4,2,7,9,2,2,4,4,5,8,8,8,7,9,9,9,8,
8,8,7,9,9,9,9,8,9,9,9,8,7,8,10,10,10,9,9,5,8,10,10,10,9,9,7,8,8,8,
8,8,8,8,6,7,8,8,8,8,7,7,7,7,8,7,8,8,8,8,8,6,6,8,8,8,8,9,9,9,
8,8,9,8,9,7,10,8,10,8,10,8,10,8,9,8,7,8,8,8,9,8,9,8,9,7,9,8,10,9,
10,9,10,9,9,10,9,9,7,7,9,7,8,7,9,7,9,9,8,5,8,9,10,9,9,9,5,9,9,9,
9,7,7,7,7,7,7,9,7,9,7,9,7,7,8,7,9,8,10,8,10,8,8,6,9,7,9,7,9,7,
10,8,10,8,9,7,10,8,10,10,9,8,7,8,10,8,9,8,10,8,10,8,10,8,9,7,9,7,9,9,
8,9,7,8,7,9,7,7,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,8,6,6,9,6,6,6,
6,6,6,6,6,6,6,6,6,6,8,6,6,6,6,6,6,6,6,6,6,6,6,6,6,8,6,6,6,6,
6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,9,8,9,7,10,
8,10,8,10,10,10,10,10,10,10,10,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,
6,6,6,6,6,6,6,6,6,6,9,10,9,8,10,8,6,6,6,6,6,6,6,6,6,6,6,6,6,6,
6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,
6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,
6,6,6,6,6,6, };
static unsigned short stb__arial_bold_10_latin_ext_s[560]={ 253,15,137,118,72,1,41,142,25,58,126,
227,117,151,190,79,132,134,88,191,101,41,102,36,67,61,74,107,1,131,147,
219,207,242,1,73,126,74,94,146,212,239,47,189,182,59,67,25,81,8,111,
1,119,139,139,49,42,204,197,159,108,111,120,174,182,196,151,208,145,202,31,
25,19,253,17,9,250,25,34,220,232,226,46,159,101,250,7,51,40,171,13,
106,57,146,145,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,
214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,253,128,21,
240,181,107,68,34,186,182,112,19,93,151,16,155,107,37,103,99,170,12,192,
163,166,84,88,59,88,130,121,202,225,44,151,113,53,246,160,62,77,91,105,
138,112,116,120,97,209,81,9,220,132,1,201,78,33,228,191,155,221,186,62,
233,227,221,215,209,203,197,187,177,176,170,164,158,166,75,113,177,125,49,112,
105,98,91,84,153,243,68,62,56,50,175,181,132,22,16,241,250,9,55,17,
225,97,213,112,200,140,188,17,176,28,163,156,150,29,144,209,132,125,43,194,
119,1,161,162,1,170,243,235,178,228,249,218,1,216,23,74,18,170,226,188,
249,253,71,124,52,249,181,173,167,65,154,150,143,138,236,231,170,161,154,118,
98,132,84,79,70,243,183,64,191,36,26,1,13,198,94,240,233,233,197,217,
249,199,7,148,112,206,10,163,69,25,36,38,128,121,30,85,184,184,170,86,
138,213,20,242,7,235,58,40,92,47,99,78,115,42,27,122,78,138,139,144,
150,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,33,214,214,71,
214,214,214,214,214,214,214,214,214,214,214,214,214,49,165,214,214,214,214,214,
214,214,214,214,214,214,214,214,85,173,214,214,214,214,214,214,214,214,214,214,
214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,93,194,
101,155,120,206,105,219,90,84,77,71,64,58,51,45,214,214,214,214,214,214,
214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,
214,214,214,60,32,128,231,9,105,214,214,214,214,214,214,214,214,214,214,214,
214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,
214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,
214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,
214,214,214,214,214,214,214,214,214, };
static unsigned short stb__arial_bold_10_latin_ext_t[560]={ 21,69,77,33,33,43,33,77,22,22,77,
69,77,77,77,43,43,69,69,43,69,52,52,69,52,52,77,69,77,77,69,
61,12,61,69,52,69,69,69,52,61,61,52,61,61,69,69,52,69,52,69,
52,69,52,69,69,69,61,61,12,52,12,77,77,77,69,43,69,43,69,69,
69,69,61,12,69,61,77,77,69,61,61,77,69,33,69,77,77,77,61,77,
12,12,12,77,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,
69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,21,61,12,
43,69,61,12,12,77,43,77,77,77,77,52,77,77,61,77,77,77,61,12,
77,77,77,77,77,52,52,52,52,12,22,12,52,52,43,61,22,22,22,22,
43,22,22,22,52,52,52,12,1,1,23,22,77,52,1,1,1,22,22,61,
43,43,43,43,43,43,43,69,52,43,43,43,43,52,61,61,61,43,61,43,
43,43,43,43,69,69,43,43,43,43,12,12,22,43,43,12,33,23,61,1,
33,1,33,1,33,1,33,22,33,61,33,33,33,22,33,22,33,22,61,22,
43,1,22,1,33,1,22,22,1,22,22,52,61,22,61,43,61,12,52,12,
12,12,77,33,22,1,22,22,22,77,22,22,22,22,52,52,52,52,52,61,
22,61,22,61,22,52,52,33,52,22,33,12,33,1,33,33,69,12,52,12,
52,12,61,1,33,1,43,12,61,1,43,1,1,12,43,61,33,1,33,12,
33,1,33,1,33,1,33,12,61,12,61,12,12,43,12,61,33,61,12,61,
61,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,33,69,69,12,
69,69,69,69,69,69,69,69,69,69,69,69,69,33,69,69,69,69,69,69,
69,69,69,69,69,69,69,69,33,69,69,69,69,69,69,69,69,69,69,69,
69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,12,33,
12,61,1,33,1,33,1,1,1,1,1,1,1,1,69,69,69,69,69,69,
69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,
69,69,69,12,1,12,33,1,33,69,69,69,69,69,69,69,69,69,69,69,
69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,
69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,
69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,
69,69,69,69,69,69,69,69,69, };
static unsigned short stb__arial_bold_10_latin_ext_a[560]={ 40,48,68,80,80,127,103,34,
48,48,56,84,40,48,40,40,80,80,80,80,80,80,80,80,
80,80,48,48,84,84,84,87,140,103,103,103,103,96,87,111,
103,40,80,103,87,119,103,111,96,111,103,96,87,103,96,135,
96,96,87,48,40,48,84,80,48,80,87,80,87,80,48,87,
87,40,40,80,40,127,87,87,87,87,56,80,48,87,80,111,
80,80,72,56,40,56,84,107,107,107,107,107,107,107,107,107,
107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,
107,107,107,107,107,107,107,107,40,48,80,80,80,80,40,80,
48,106,53,80,84,48,106,79,57,79,48,48,48,83,80,40,
48,48,52,80,119,119,119,87,103,103,103,103,103,103,143,103,
96,96,96,96,40,40,40,40,103,103,111,111,111,111,111,84,
111,103,103,103,103,96,96,87,80,80,80,80,80,80,127,80,
80,80,80,80,40,40,40,40,87,87,87,87,87,87,87,79,
87,87,87,87,87,80,87,80,103,80,103,80,103,80,103,80,
103,80,103,80,103,80,103,103,103,87,96,80,96,80,96,80,
96,80,96,80,111,87,111,87,111,87,111,87,103,87,103,87,
40,40,40,40,40,40,40,40,40,40,112,80,80,40,103,80,
80,87,40,87,40,87,55,87,69,87,40,103,87,103,87,103,
87,101,104,87,111,87,111,87,111,87,143,135,103,56,103,56,
103,56,96,80,96,80,96,80,96,80,87,48,87,69,87,48,
103,87,103,87,103,87,103,87,103,87,103,87,135,111,96,80,
96,87,72,87,72,87,72,40,107,107,107,107,107,107,107,107,
107,107,107,107,107,107,107,104,107,107,80,107,107,107,107,107,
107,107,107,107,107,107,107,107,122,102,107,107,107,107,107,107,
107,107,107,107,107,107,107,119,104,107,107,107,107,107,107,107,
107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,
107,107,107,107,107,103,80,40,40,111,87,103,87,103,87,103,
87,103,87,103,87,107,107,107,107,107,107,107,107,107,107,107,
107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,
107,107,103,80,143,127,111,87,107,107,107,107,107,107,107,107,
107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,
107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,
107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,
107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,
107,107,107,107,107,107,107,107, };

// Call this function with
//    font: NULL or array length
//    data: NULL or specified size
//    height: STB_FONT_arial_bold_10_latin_ext_BITMAP_HEIGHT or STB_FONT_arial_bold_10_latin_ext_BITMAP_HEIGHT_POW2
//    return value: spacing between lines
static void stb_font_arial_bold_10_latin_ext(stb_fontchar font[STB_FONT_arial_bold_10_latin_ext_NUM_CHARS],
                unsigned char data[STB_FONT_arial_bold_10_latin_ext_BITMAP_HEIGHT][STB_FONT_arial_bold_10_latin_ext_BITMAP_WIDTH],
                int height)
{
    int i,j;
    if (data != 0) {
        unsigned int *bits = stb__arial_bold_10_latin_ext_pixels;
        unsigned int bitpack = *bits++, numbits = 32;
        for (i=0; i < STB_FONT_arial_bold_10_latin_ext_BITMAP_WIDTH*height; ++i)
            data[0][i] = 0;  // zero entire bitmap
        for (j=1; j < STB_FONT_arial_bold_10_latin_ext_BITMAP_HEIGHT-1; ++j) {
            for (i=1; i < STB_FONT_arial_bold_10_latin_ext_BITMAP_WIDTH-1; ++i) {
                unsigned int value;
                if (numbits==0) bitpack = *bits++, numbits=32;
                value = bitpack & 1;
                bitpack >>= 1, --numbits;
                if (value) {
                    if (numbits < 3) bitpack = *bits++, numbits = 32;
                    data[j][i] = (bitpack & 7) * 0x20 + 0x1f;
                    bitpack >>= 3, numbits -= 3;
                } else {
                    data[j][i] = 0;
                }
            }
        }
    }

    // build font description
    if (font != 0) {
        float recip_width = 1.0f / STB_FONT_arial_bold_10_latin_ext_BITMAP_WIDTH;
        float recip_height = 1.0f / height;
        for (i=0; i < STB_FONT_arial_bold_10_latin_ext_NUM_CHARS; ++i) {
            // pad characters so they bilerp from empty space around each character
            font[i].s0 = (stb__arial_bold_10_latin_ext_s[i]) * recip_width;
            font[i].t0 = (stb__arial_bold_10_latin_ext_t[i]) * recip_height;
            font[i].s1 = (stb__arial_bold_10_latin_ext_s[i] + stb__arial_bold_10_latin_ext_w[i]) * recip_width;
            font[i].t1 = (stb__arial_bold_10_latin_ext_t[i] + stb__arial_bold_10_latin_ext_h[i]) * recip_height;
            font[i].x0 = stb__arial_bold_10_latin_ext_x[i];
            font[i].y0 = stb__arial_bold_10_latin_ext_y[i];
            font[i].x1 = stb__arial_bold_10_latin_ext_x[i] + stb__arial_bold_10_latin_ext_w[i];
            font[i].y1 = stb__arial_bold_10_latin_ext_y[i] + stb__arial_bold_10_latin_ext_h[i];
            font[i].advance_int = (stb__arial_bold_10_latin_ext_a[i]+8)>>4;
            font[i].s0f = (stb__arial_bold_10_latin_ext_s[i] - 0.5f) * recip_width;
            font[i].t0f = (stb__arial_bold_10_latin_ext_t[i] - 0.5f) * recip_height;
            font[i].s1f = (stb__arial_bold_10_latin_ext_s[i] + stb__arial_bold_10_latin_ext_w[i] + 0.5f) * recip_width;
            font[i].t1f = (stb__arial_bold_10_latin_ext_t[i] + stb__arial_bold_10_latin_ext_h[i] + 0.5f) * recip_height;
            font[i].x0f = stb__arial_bold_10_latin_ext_x[i] - 0.5f;
            font[i].y0f = stb__arial_bold_10_latin_ext_y[i] - 0.5f;
            font[i].x1f = stb__arial_bold_10_latin_ext_x[i] + stb__arial_bold_10_latin_ext_w[i] + 0.5f;
            font[i].y1f = stb__arial_bold_10_latin_ext_y[i] + stb__arial_bold_10_latin_ext_h[i] + 0.5f;
            font[i].advance = stb__arial_bold_10_latin_ext_a[i]/16.0f;
        }
    }
}

#ifndef STB_SOMEFONT_CREATE
#define STB_SOMEFONT_CREATE              stb_font_arial_bold_10_latin_ext
#define STB_SOMEFONT_BITMAP_WIDTH        STB_FONT_arial_bold_10_latin_ext_BITMAP_WIDTH
#define STB_SOMEFONT_BITMAP_HEIGHT       STB_FONT_arial_bold_10_latin_ext_BITMAP_HEIGHT
#define STB_SOMEFONT_BITMAP_HEIGHT_POW2  STB_FONT_arial_bold_10_latin_ext_BITMAP_HEIGHT_POW2
#define STB_SOMEFONT_FIRST_CHAR          STB_FONT_arial_bold_10_latin_ext_FIRST_CHAR
#define STB_SOMEFONT_NUM_CHARS           STB_FONT_arial_bold_10_latin_ext_NUM_CHARS
#define STB_SOMEFONT_LINE_SPACING        STB_FONT_arial_bold_10_latin_ext_LINE_SPACING
#endif

