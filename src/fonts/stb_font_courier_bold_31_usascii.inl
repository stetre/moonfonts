// Font generated by stb_font_inl_generator.c (4/1 bpp)
//
// Following instructions show how to use the only included font, whatever it is, in
// a generic way so you can replace it with any other font by changing the include.
// To use multiple fonts, replace STB_SOMEFONT_* below with STB_FONT_courier_bold_31_usascii_*,
// and separately install each font. Note that the CREATE function call has a
// totally different name; it's just 'stb_font_courier_bold_31_usascii'.
//
/* // Example usage:

static stb_fontchar fontdata[STB_SOMEFONT_NUM_CHARS];

static void init(void)
{
    // optionally replace both STB_SOMEFONT_BITMAP_HEIGHT with STB_SOMEFONT_BITMAP_HEIGHT_POW2
    static unsigned char fontpixels[STB_SOMEFONT_BITMAP_HEIGHT][STB_SOMEFONT_BITMAP_WIDTH];
    STB_SOMEFONT_CREATE(fontdata, fontpixels, STB_SOMEFONT_BITMAP_HEIGHT);
    ... create texture ...
    // for best results rendering 1:1 pixels texels, use nearest-neighbor sampling
    // if allowed to scale up, use bilerp
}

// This function positions characters on integer coordinates, and assumes 1:1 texels to pixels
// Appropriate if nearest-neighbor sampling is used
static void draw_string_integer(int x, int y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0, cd->t0); glVertex2i(x + cd->x0, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t0); glVertex2i(x + cd->x1, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t1); glVertex2i(x + cd->x1, y + cd->y1);
        glTexCoord2f(cd->s0, cd->t1); glVertex2i(x + cd->x0, y + cd->y1);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance_int;
    }
    glEnd();
}

// This function positions characters on float coordinates, and doesn't require 1:1 texels to pixels
// Appropriate if bilinear filtering is used
static void draw_string_float(float x, float y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0f, cd->t0f); glVertex2f(x + cd->x0f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t0f); glVertex2f(x + cd->x1f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t1f); glVertex2f(x + cd->x1f, y + cd->y1f);
        glTexCoord2f(cd->s0f, cd->t1f); glVertex2f(x + cd->x0f, y + cd->y1f);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance;
    }
    glEnd();
}
*/

#ifndef STB_FONTCHAR__TYPEDEF
#define STB_FONTCHAR__TYPEDEF
typedef struct
{
    // coordinates if using integer positioning
    float s0,t0,s1,t1;
    signed short x0,y0,x1,y1;
    int   advance_int;
    // coordinates if using floating positioning
    float s0f,t0f,s1f,t1f;
    float x0f,y0f,x1f,y1f;
    float advance;
} stb_fontchar;
#endif

#define STB_FONT_courier_bold_31_usascii_BITMAP_WIDTH         256
#define STB_FONT_courier_bold_31_usascii_BITMAP_HEIGHT        112
#define STB_FONT_courier_bold_31_usascii_BITMAP_HEIGHT_POW2   128

#define STB_FONT_courier_bold_31_usascii_FIRST_CHAR            32
#define STB_FONT_courier_bold_31_usascii_NUM_CHARS             95

#define STB_FONT_courier_bold_31_usascii_LINE_SPACING          15

static unsigned int stb__courier_bold_31_usascii_pixels[]={
    0xaa880000,0x98130002,0x00088000,0x26204418,0x26660999,0x71154009,
    0x65cc4003,0x876a000a,0x665400ca,0x8066200b,0x00040198,0x02cdcb98,
    0x4cccccc4,0x66544019,0x2a62000a,0x2206661a,0x03b200cb,0x00fff300,
    0x37dcff50,0x03bfe600,0xfe93fae0,0x9fffff52,0x17ffffe2,0xefc8ffd4,
    0xffffa800,0xfe800cff,0x7440ffe5,0x441fffff,0x742ffffe,0x6d43ffff,
    0xfb1002df,0x03dfffff,0x3ffffffa,0xfe880fff,0xc802ffff,0xfbefffff,
    0x3ff23fff,0x007ff106,0x8007ff98,0x0bff27fe,0x06fffa80,0xf8afffd4,
    0xfffff74f,0x3ffffe29,0x70fff886,0xffd809ff,0x1fffffff,0xff9affc0,
    0xb59dfd03,0x7ffcc3ff,0x3ffe24ff,0x33bee6ff,0xffd802ff,0x0effffff,
    0xffffffe8,0x7f441fff,0x01ffffff,0xffffffd1,0x4bffffff,0xfa81ffff,
    0x910010df,0xffa80099,0x001bfe24,0x7403ffd5,0x9ff10bff,0x8a7fdd4c,
    0xc80aadff,0x3ffe25ff,0x39fff701,0x80dffd73,0x07ff35ff,0x3fc81df7,
    0x205fffd4,0x3a0dffea,0x3e603745,0xfea889ef,0xaaffe84f,0xfc81aaaa,
    0xeffc8aef,0x9beffe80,0xbeffffdb,0x987fffe0,0xfffffffd,0x3a000001,
    0x0ffec0ff,0x40ffe600,0x7fc44ff8,0xf14ff884,0x7ffc409f,0x4c27fe41,
    0xffb01fff,0x553fe209,0x81fe82ff,0x3ffc86f9,0x260fff88,0x2007dc2f,
    0x0bff103b,0x7c400dfd,0x42ffc87f,0xfa80dffb,0xfffe84ff,0xffffff30,
    0x33107fff,0x00133333,0xff30bff3,0x3ff9800b,0xf889ff10,0x14ff884f,
    0x7fdc09ff,0x40fff885,0x7f402ffd,0x54ff881f,0x07f985ff,0x1bfe21fe,
    0x9f10ffee,0xe80007d8,0x006fe86f,0x3e617fea,0x00ffec4f,0xffd09ff9,
    0x4deffe4f,0x3e64ffeb,0xffffffff,0x01ffd804,0x4c003ffb,0x9ff103ff,
    0xf884ff88,0x409ff14f,0xff901ffe,0xa805ff87,0x7fdc42ff,0x20cffcad,
    0x7f64c5fa,0x447ff907,0xbfd80fff,0x40004fc9,0xffe84ffb,0xb80acdca,
    0x8dff02ff,0x7fcc06ff,0x3e7ffd84,0x545fd06f,0xffffffff,0x2ffcc04f,
    0x400bff50,0xff103ff9,0x884ff889,0x09ff14ff,0xf981bfe2,0x00ffe25f,
    0xffc93fe2,0xffffffff,0x7dc9f73f,0xff107fff,0x981ffdcf,0xb50dfffd,
    0x7664c03d,0xffe81fff,0x41efffff,0xff900ffd,0x7007ff41,0xdff909ff,
    0x818837fc,0xfcccccca,0x17fec04f,0x4003ffa0,0xff103ff9,0x884ff889,
    0x09ff14ff,0xf8817fe6,0x00bfea6f,0xfff92ffc,0xffffffff,0x7fc4bf27,
    0x3f207fad,0x00fff8bf,0x7fed4dc4,0x3ffa00df,0xffd02fff,0x3fffffff,
    0xff903fec,0x8827fe41,0xffb84fff,0x273fff25,0x9ff10000,0x4037fc40,
    0xf1004ffa,0x0ffea0bf,0xff109ff1,0x5c13fe29,0x7ffc04ff,0x2005ff50,
    0x7fecc5ff,0x21affeac,0x7c9f72fc,0x33ffe207,0x6d4403ff,0x800bdfff,
    0x05fffffc,0x36a39df7,0x81ff66ff,0x3fe60ffc,0xffc98bef,0x5ffb84ff,
    0x3fffffe2,0x7fc4001d,0x00bff204,0xe8007ff4,0xffd12fff,0x84ff883f,
    0x9ff14ff8,0xd00fff20,0x0ffe63ff,0x2e13fe20,0x90ffb1ff,0x7f87fa5f,
    0x7ffffe40,0xbfffb300,0x98800135,0x0104fffb,0x7fd8fff4,0xf503ff20,
    0xffffffff,0x9ff509ff,0xfffffd70,0x3fe2001d,0x00dff104,0xc801ffdc,
    0xfff54fff,0x109ff10d,0x13fe29ff,0x36017fec,0x0dff12ff,0xf907ff50,
    0x321bfa1f,0x3fc9f72f,0x0ffffe20,0xd98adfd8,0x98001dff,0x5c000ffe,
    0x03ff92ff,0x3aa03ff6,0xfdffffff,0x03ff984f,0x17fff6e6,0xb827fc40,
    0x7fc003ff,0x1bfff007,0x2217ffe4,0x4ff884ff,0x3f209ff1,0x0fff403f,
    0x7c407ff9,0x3fb2a0ff,0x1bfffccf,0x77fc4ff2,0x7dc00ffc,0x3e2000ff,
    0x0006fcbf,0x98005ff7,0x07ff53ff,0xba80fff1,0x4ff88bcc,0x804c1db0,
    0xf1007fe8,0x01ffe09f,0x100ffee0,0x3fe609ff,0x4427fc43,0x09ff14ff,
    0xff013fea,0x82fff98f,0x3e63ffe8,0xffffffff,0xa93ea7ff,0x403ffffe,
    0x5c003ffc,0x000bea0f,0x9000bfea,0x1bfe25ff,0x40017fea,0xf7004ff8,
    0x007fe40b,0x7dc27fc4,0xff88003f,0x81ffcc06,0x7fc44ff8,0xf14ff884,
    0x17fe609f,0xfb86ff88,0xffcabdff,0x7fff446f,0x5fffffff,0x2aa617e6,
    0x3ffe200a,0x7c374000,0x3fa00c44,0xf802ea0f,0x07ffa0ff,0x20005ffb,
    0xfb004ff8,0x0bff105f,0x3a13fe20,0xf90000ff,0x1ffcc05f,0x7c44ff88,
    0x14ff884f,0x3fe209ff,0x417fea07,0xfffffffb,0xdff100df,0xf01bff33,
    0x7e40001f,0x0fc8003f,0x7dff0be6,0xdffd7555,0x5567ffc4,0x545fffca,
    0xfffbcfff,0x3fe20006,0x7fec3104,0xfffebbdf,0x89ff1002,0x20004ffa,
    0x3e606ff8,0x89ff103f,0xff884ff8,0x6c09ff14,0x5ffb02ff,0x7ffff4c0,
    0x15ff803e,0x0ff609ff,0x7fffec40,0x44004fff,0xe87fbbef,0xffffffff,
    0x7ffec0ef,0x0fffffff,0xffffffb8,0x7f4c000e,0x262effff,0xffffb4ff,
    0x00bfffff,0x3fa27fc4,0x7ec0000f,0x07ff302f,0xff113fe2,0x229ff109,
    0x3fea04ff,0x407ff986,0x20bffff9,0x35ff80b8,0x3fe207ff,0xfa8fa60c,
    0xffffffff,0x7ff54000,0xfffd981d,0x7104ffff,0x9fffffff,0x7fffe401,
    0xffb8000e,0x265fffff,0xfdbf54ff,0x8003dfff,0x3fea4ff8,0xff980005,
    0x207ff305,0x7fc44ff8,0xf14ff884,0x2ffe809f,0xf301ffec,0xddffffff,
    0x4ff88bff,0x7d407ff3,0x43ffeeff,0xdeeeeedb,0x00260002,0x0026aa62,
    0x0019a998,0x1000054c,0x39ddddb7,0x3fe60188,0x5ff70004,0x0000ffec,
    0x7541ffd8,0x3ffe00ff,0x4c9ff10b,0xff14ffba,0xff70155b,0x007ffccd,
    0xfffffffb,0xf887ffff,0x805ff54f,0x03dfffdb,0x00000000,0x00000000,
    0x00000000,0x0013fe20,0x261fff71,0x200005ff,0x3fea5ff9,0x7ffdc05f,
    0x3ea9ff15,0xff14ffff,0x3fa0dfff,0x807ff91f,0xdbabcefa,0xff881cfe,
    0x2001ff33,0x00000018,0x00000000,0x00000000,0xff100000,0x7fff4c09,
    0x3f24ffff,0x7400001f,0x19ff30ff,0x749ff900,0xfffff52f,0x3ffffe29,
    0x2e1ff305,0x0000006f,0x0002a873,0x00000000,0x00000000,0x00000000,
    0x80bfa000,0xfffffffb,0x0002fd44,0x0222fcc0,0x31020200,0x4ccc1333,
    0x02044009,0x00000000,0x00000000,0x00000000,0x00000000,0x31000000,
    0xceedb880,0x0000000a,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x09988000,0x00035531,
    0x3006f2e2,0x26621575,0x00355500,0x33333330,0x80033333,0x2201aaa8,
    0x3001bdcb,0xaa880597,0x4c00000a,0xaa80099a,0x2aa9800a,0x2aaa6000,
    0x0062001a,0x2aee6200,0x332a2000,0xefffe81b,0x2ffffffb,0xffffd700,
    0xfffd107f,0xdfffdbff,0x02ffffc4,0x7fffffc0,0x007fffff,0x40ffffe6,
    0xdffffffb,0x3ffff600,0xffffa84f,0xff700002,0x403bffff,0x7f400fff,
    0xff0007ff,0x4009ffff,0x2a0001ff,0x0dffffff,0x7ffffe40,0xffff10cf,
    0xffffffff,0xfffc809f,0x7d44ffff,0xffffffff,0xff10ffff,0xff000bff,
    0xffffffff,0x7fd400ff,0xfffa83ff,0xd06fffff,0x7fffffff,0x02ffffb8,
    0xffffd800,0x3e03ffff,0x7ff400ff,0xfff0007f,0x22009fff,0xfb0003ff,
    0xdfffffff,0x3ffff603,0x3265ffff,0xaabfffff,0xf903fffd,0x10a259ff,
    0xf959ffff,0x8839ffff,0xe8005ffa,0xbaaaaaef,0x5cc006ff,0x7ffc43ff,
    0x3ffeb89c,0x5c577fcc,0x7e4c1ffe,0x7cc0002f,0xddcbbcff,0x00333200,
    0x000ffd51,0x13feeaa2,0x001ffcc0,0x4ce7ffdc,0x5c0fffeb,0xfb88beff,
    0x77ffc2ff,0x40fffa80,0xc801fffc,0xffe885ff,0x002ffc07,0xffa80f5c,
    0x3ff98004,0x7cc2ffcc,0x20ffe45f,0xffa86ff9,0x7fdc0002,0x20000002,
    0x880007fd,0xff5004ff,0x40133339,0xfb01fff9,0x80ffe89f,0x7ffc5ffa,
    0x88bfee02,0xfd001fff,0x1ffea03f,0x2a62bff0,0x3f20001a,0x2aa6201f,
    0xfa87ff30,0xe8dff02f,0x83ffd06f,0x35532ffa,0x2bff2600,0x4c400999,
    0xfb000999,0x0009988f,0xfc809ff1,0xffffffff,0x2ffd80ef,0xfb0fff40,
    0x3e37fc07,0x27fc407f,0x7c007ff9,0x03ffc06f,0x3ffefbfe,0xf8002fff,
    0xfff9106f,0x87ff7bff,0xffa85ff9,0x5c17fe25,0x6ffd42ff,0x00efffff,
    0xfffffff5,0x3f60dfff,0xb004ffff,0x7ffff4ff,0x27fc401e,0x3fffffa0,
    0x81ffffff,0xffa805ff,0xbff30043,0x2e00fff8,0x23ffa3ff,0xff03dedb,
    0x03ffc40d,0x3ffffffe,0x2004ffff,0xfe984ffa,0xffffffff,0xacffe83f,
    0x7c2ffeb9,0x3ffe887f,0x7fffffd4,0xfc80ffff,0xffffffff,0x7ffc40ff,
    0xfb004fff,0x3ffffe2f,0x27fc402f,0x3bff6e60,0x882ccccc,0xff8803ff,
    0x0fffa004,0x7fc0bfff,0x3fbbfe1f,0x740dffff,0xfff701ff,0xdfffff80,
    0x02fffeba,0xfd03ff90,0xfff95bff,0xfff307ff,0xb09fffff,0xfffc85ff,
    0x67fffd44,0x883ffdba,0xccdffecb,0x999301cc,0x3f6009ff,0x59dfff57,
    0x009ff100,0xa800ffe6,0xdfd002ff,0x0dffb100,0x317dffff,0x7c4dfff9,
    0xffefffff,0x06ffe44f,0xf01fffa6,0xff503dff,0x0dff001f,0xf701bff7,
    0x3ffa07ff,0x982fffff,0xffebdfff,0x7ffd45ff,0x5c05ff81,0xf10000ff,
    0x3ff6009f,0x000dfffb,0x4c013fe2,0x3ea003ff,0x0bff002f,0x80effe88,
    0xffffffff,0x7fc0efff,0xffd51dff,0xbdfffe83,0x407ffffd,0x3f603fff,
    0x27fd402f,0xff00fff4,0xffffb07f,0x703ffffd,0xffffffff,0x02ffa89f,
    0xffb80ffb,0x9ff10000,0x3ffff600,0xff88004f,0x07ff3004,0x401ffc40,
    0x3a204ff8,0xfff00eff,0xbffffffd,0x81dffd01,0x7fcc3ffb,0xffffffff,
    0x007ffc07,0xfc807ff5,0x406ff81f,0x7fcc3ffc,0x17ff222f,0x577fffd4,
    0x17fd43ff,0x7dc07fd8,0xff10000f,0x3fff6009,0xf88000ef,0x7ff3004f,
    0x806ff800,0xff303ffa,0xb7fc01df,0x201bccb9,0xff881ffd,0xffffd885,
    0x7c07fecf,0x27fc406f,0x3e21bfe0,0x1ffd405f,0x3e20ffee,0xc8d4c07f,
    0x17fd41ff,0x7dc07fd8,0xff10000f,0x3fff6009,0x44000eff,0xff3004ff,
    0x3ffd8007,0x203ffe20,0x400dfffa,0xf70006ff,0x0bff105f,0xffd09a98,
    0x201fff80,0x3ea03ffc,0x01fff04f,0x3f21ffec,0x01ff900f,0x2a1bfea0,
    0x0ffb02ff,0x0000ffb8,0x36009ff1,0x1effe9ff,0x013fe200,0xa8827fc4,
    0x41fffc41,0xfc83ffe8,0xdff004ff,0x1bfe6000,0x10013fee,0xfff80bff,
    0x1fff880d,0x6c07ff60,0xfff304ff,0x883ffb87,0xff7006ff,0x05ff503f,
    0xff701ff6,0x3fe20001,0x22ffb004,0x1001fffd,0x7f4009ff,0xffedbacf,
    0xbdfffa87,0x446fffca,0x2003fffd,0x320006ff,0xffdbbeff,0x3f6a001f,
    0xfffb703f,0xffd77bff,0x06ff809f,0x2b7fffe2,0xceffffec,0x77bfff10,
    0xda89fffb,0x2fffecab,0x23effeb8,0x21cfffc8,0xeeffeec9,0xedb81cee,
    0xeeeeffee,0x1fff660b,0x419dfffd,0xfffeeedb,0xf500beee,0xffffffff,
    0x3fffee0d,0x5c0dffff,0xeeeeffff,0xfff94fee,0xd000bfff,0x9fffffff,
    0x7ffffec0,0xff880eff,0xffffffff,0x7cc06fff,0x7ffd403f,0xffffffff,
    0x3ffea5ff,0x40dfffff,0xffffffff,0xfffff983,0xfffff91f,0x7fffff4d,
    0x446fffff,0xffffffff,0x3fe4ffff,0x7fffc7ff,0xffff14ff,0xffffffff,
    0x7fffe409,0x74402dff,0x703fffff,0xffffffff,0xfff1dfff,0x001fffff,
    0xffffec88,0x3fffe203,0x3600efff,0xfffcefff,0xdd003fff,0xfffb1001,
    0xdfff9dff,0xffffe985,0xffff704f,0x7fec019f,0xffd50dff,0x7ff5c7df,
    0x2effffff,0xffffffd8,0x321effff,0x7fe47fff,0x3ff61eff,0xffffffff,
    0x554c401e,0x0a988001,0x7ffffdc0,0x57ffffff,0x05bddddb,0x001a9800,
    0x037bddb5,0x0d54c400,0x4c400000,0x530001aa,0x002a6001,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x10033310,
    0x33300057,0x00133333,0x02157951,0x22bca880,0x10333300,0x54401333,
    0x51001bcb,0x31023597,0x33333333,0x33303333,0x98003333,0x26620199,
    0x40333009,0x19980998,0x44026620,0x00199999,0x26026666,0x2f754099,
    0x883fffd0,0x004fffda,0x3fffffe6,0xf503ffff,0xfdffffff,0xfffea80b,
    0x2a5fdfff,0xb1ffffff,0x98dfffff,0xeffffffc,0x3fffee01,0x3fa6feff,
    0xffffffff,0xff31ffff,0xdfffffff,0x7fffcc07,0x7fff42ff,0x3ffe25ff,
    0x3ffe22ff,0xffff13ff,0xffffe85f,0x7ffffec3,0x3ea01fff,0xf36fffff,
    0x7d49ffff,0xffff706f,0x7ffffd43,0x3fea004f,0xffffffff,0xfffffb84,
    0x207fffff,0xfffffffb,0x3fee7fff,0xfff2ffff,0x7fc4ffff,0xffffffff,
    0xfffffc80,0xfd0fffff,0xffffffff,0x3ee3ffff,0xffffffff,0xffa80fff,
    0x3e24ffff,0x266fffff,0x263fffff,0xf35fffff,0x7c49ffff,0x7fc5ffff,
    0x2fffffff,0x3ffffee0,0xfffff57f,0x442ffccb,0x321fffff,0x04ffffff,
    0x7ee66540,0x7dc0acdf,0xea99bcff,0xffa80fff,0xffca9acf,0x3bfea27f,
    0x3ff6e22c,0x33bfe21d,0x45ffeb9a,0xa9acfff9,0xffd0fffe,0x99dffb99,
    0x7ed43ffb,0xffecccdf,0xbffd506f,0xfffb9815,0x37fecc1b,0x505fffdc,
    0xfb81dffd,0x65c40bff,0x802ccffe,0x11bdffda,0x4417ffff,0xfffc84ff,
    0x26f221ff,0x40004ff8,0xff102ffa,0x43fec03f,0xf102fff9,0x40bff0ff,
    0x7fc43ff9,0x647ff883,0x1ffd02ff,0x3ff99bfa,0xff507fee,0x03ffd105,
    0xf9813fea,0x3ffe205f,0x881fff41,0x3fe23fff,0x07fc803f,0x222ffa80,
    0xff01effe,0xfcfff987,0x13fe201f,0x05ff5000,0xf300bff2,0x805ff70b,
    0x05ff86fc,0x3b60ffe6,0x641ff900,0x4ff500ff,0x8ffe66fe,0x7fd41ffb,
    0x407ff502,0xff900ffe,0x26ffa805,0x7cc05ffb,0x09ffd2ff,0x2001ff20,
    0xfff32ffa,0x217f401d,0x1ffbaffd,0x0013fe20,0x3a05ff50,0xb00800ff,
    0x2d8801ff,0x3e605ff8,0x7fc4003f,0x5027fd46,0xff32ff43,0x2a07fd47,
    0x3ff902ff,0x441ffdc0,0xff9006ff,0x001fff39,0xdffbfff5,0x003fe400,
    0x7fd57fd4,0x21fd805f,0x3ff76ffa,0x0027fc40,0x7c0bfea0,0x7fc0005f,
    0x2ffc0006,0x4007ff30,0x7c43ffea,0x201bdfff,0x8ffe62ea,0x2ffa85e8,
    0x01fffa62,0xff70dff1,0x3ffa2007,0x32002ffe,0x000fffff,0x2a001ff2,
    0x04fffdff,0x1ffe8f90,0x7c403ff7,0x7d40004f,0x04ff882f,0x013fe200,
    0x4c0bff00,0xfeb803ff,0xff980eff,0x01dfffff,0x5003ff98,0xffffffff,
    0xff9003ff,0x000ffe85,0x017fffe6,0x007fff60,0x5000ff90,0x1dffffff,
    0x7fdc1100,0x8807fee4,0x0b2204ff,0xf882ffa8,0xeeedb84f,0x13fe23de,
    0x40bff000,0x7c403ff9,0x2200dfff,0xffffffeb,0x01ffcc02,0xffffffa8,
    0xf3000eff,0x02ffccbf,0x007ffe40,0x13fffe60,0x000ff900,0xfffffff5,
    0x7fc4001d,0x807fee0f,0x3ea04ff8,0x40bfea07,0x7ffc44ff,0x3e0fffff,
    0x7fc0004f,0x00ffe605,0x8003dff1,0x0fffeca8,0x400ffe60,0xffeeeffa,
    0x3fa000ef,0x003ffb0f,0x8009ff10,0x3fffffe8,0xc81ff200,0x4fffd42f,
    0x2006ffd8,0xeccceffd,0xff100cff,0x80ffdc09,0xdfd02ffa,0xffffffb0,
    0x0006fd8b,0xff302ffc,0x803fb005,0x1ffdc029,0x2007ff30,0x3fa62ffa,
    0xff5000ef,0x000dff19,0xb0013fe2,0x3fff3bff,0xf81ff200,0x217fd44f,
    0xff003ffd,0xffffffff,0x13fe20bf,0xf701ffb8,0x07ff203f,0xfb81ff90,
    0xd818802f,0x3ff700ff,0xff100200,0x02ffc405,0x2a007ff3,0x7fec42ff,
    0x33ffe005,0xf10002ff,0x7fe4009f,0x01fff50e,0x7fc0ff90,0x2217fd45,
    0xff800fff,0xffffffff,0x09ff103f,0x7440ffdc,0x3bfea07f,0x103ff200,
    0x7d405fff,0x427fe41f,0x00007ff9,0x6403bfe6,0x3fe604ff,0x05ff5003,
    0x2007ffd1,0x007ffffc,0x4013fe20,0x7e40fffa,0x3fe400ef,0xffa8bff0,
    0x804ffa82,0xc9999999,0x3fe201ff,0x3bffee04,0x04fffcac,0x55efffec,
    0x80fffecb,0xaacefffa,0x441fffdc,0xfcbcfffe,0x153002ff,0x6ffffcc0,
    0x1ffffdab,0x77ff764c,0xfeb882de,0x7fcc2def,0x7fc401cf,0x644004ff,
    0x2defffee,0x1efffc88,0x0bbfff22,0xddfffdb5,0x2bffdddd,0x2deffeb8,
    0x005efff4,0x3bffdb70,0x3ffbbb22,0x3ea2deef,0xffffffff,0xfffe8804,
    0xefffffff,0xfffff500,0x207fffff,0xfffffff9,0xfff7004f,0x7ffffcc0,
    0x83ffffff,0xfffffffd,0x7ffdc0ff,0x7dc0ffff,0xffd806ff,0x7fec000f,
    0x0fffffff,0x37ffffe4,0x1ffffff5,0x7ffffffc,0x5fffffff,0xfffffff7,
    0x1ffffdc1,0xfffff980,0xfffff96f,0x81ffffff,0x3effffea,0x7ffed400,
    0x9802efff,0xdfffffec,0x7ffec401,0x3ee002ff,0x75f6c06f,0x01efffff,
    0xffffffd5,0xfffd309f,0x3bf609ff,0x05ffa803,0xffffea80,0xfe985fff,
    0x3f623fff,0x7fe44fff,0xffffffff,0xffd35fff,0xfff09fff,0x3f62001d,
    0xfd32efff,0xffffffff,0x0054c409,0x04d4c400,0x00153000,0x00015310,
    0x310002a6,0x00000135,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x26620000,0x03333009,0x33333331,0x06662013,0x4cc06662,
    0x80099999,0x99999999,0x99819999,0x99999999,0x99998099,0x99880099,
    0x99999999,0x10099880,0x98801333,0x40009999,0x4cc00998,0x33333009,
    0x31000133,0x00005c40,0xfd0014c0,0x7cc9ffff,0xf52fffff,0xffffffff,
    0xffffb8df,0xfffffb1f,0x3ffffe21,0x40cfffff,0xfffffffa,0x27ffffff,
    0xfffffff9,0x23ffffff,0xfffffff9,0xff500def,0xffffffff,0x1ffffe8d,
    0x37ffffec,0xffffffd8,0x3fffa007,0x3fffea06,0x3ffffea3,0x00dfffff,
    0x1ffffe4c,0x00033ff6,0x8802ff80,0x26ffffff,0x4ffffffa,0xfffffff9,
    0xffd8ffff,0xfffd3fff,0x3ffe63ff,0xffffffff,0x3fffee1f,0xffffffff,
    0x3fffee7f,0xffffffff,0x3fffee3f,0x3fffffff,0xffffffa8,0x3e26ffff,
    0x7f46ffff,0xe80fffff,0x2fffffff,0xfffff880,0xbffffb02,0x7fffffdc,
    0x01ffffff,0xdffffff3,0x03ffffc8,0x04ff8800,0x179dff50,0x0cffdca8,
    0xdff99951,0xfc883799,0x3fee22df,0x77fe4c2f,0xffffdccc,0x337ff6a0,
    0x7feccccc,0x666ffed4,0x43ffdccc,0xdcccfffa,0x7d42ffff,0xffccccdf,
    0x7ffdcc6f,0x3ff6e23f,0xfd97101d,0x2600bfff,0xf985fffe,0x6d40cfff,
    0xfdcccdff,0xffc80eff,0xfa82ffcc,0x0002ffff,0xe8013fe2,0xf504cc6f,
    0x27fc405f,0xd817fd40,0x09ff107f,0xfa87ffb1,0x21ff202f,0xff302ffa,
    0x320dfd07,0x17fd47ff,0x7c03ffea,0x7cc0ffff,0xdffb003f,0x3fa001ff,
    0x7fe41fff,0x5ff502ff,0xf107ff60,0x2e004c9f,0x001effff,0x2004ff88,
    0x9bfea7fd,0x3e201ffb,0x2ffa804f,0x3e20ffb0,0x8bff104f,0xb8a22ffa,
    0x22ffa86f,0xd05ff128,0x1ffec0df,0x7fc43ff5,0x3fffe02f,0x01ffcc5f,
    0x7fd6ffcc,0xffffd004,0x7ffffc4b,0x205ff502,0x7fc43ffa,0xffc88005,
    0x22001dff,0x3f2004ff,0x23fffb0f,0x3e200ffc,0x2ffa804f,0x3e20ffb0,
    0x8bff304f,0x3ff12ffa,0x3fea0b62,0x065cbfe2,0xff1037f4,0xfd13fc4d,
    0xeeff809f,0x0ffe62ff,0x7f4bff20,0xfdffd007,0x3fbfee1f,0x05ff502f,
    0xfd03ffd1,0x3660003f,0x300cffff,0x33bff533,0x4ffe4013,0xfb3ffff8,
    0x04ff880f,0xaaacffa8,0xf107feaa,0x0fff609f,0xff759ff5,0x9bff5007,
    0xfd007ff9,0x447fe80d,0x2017ff60,0x0fff9dff,0xff007ff3,0x4017fdcf,
    0xf4ffbffe,0x205ff5ff,0xebaacffa,0xff706fff,0x7540001d,0x3ee3ffff,
    0xffffffff,0xff706fff,0x2dffff55,0x7fc406fe,0xffffa804,0x07ffffff,
    0xb533bff1,0xfa81ffff,0x03ffffff,0xffffffa8,0x06fe803f,0xfb807fe4,
    0x5ff800ef,0x3fe69ff9,0x127fd403,0xffd00bff,0x33fefffe,0xff502ffa,
    0xffffffff,0x9ffff305,0xb80077a6,0xfb1effff,0xffffffff,0xf501ffff,
    0xffbffb7f,0xf880bff3,0xfffa804f,0x7fffffff,0xffffff10,0xf503ffff,
    0x07ffffff,0xffffff50,0x0dfd007f,0xf980ffc8,0xbff001ff,0x3e67ffa2,
    0x57fec03f,0x01ffe999,0xfffbbff4,0x02ffa8ff,0xfffffff5,0x7cc3ffff,
    0xfcafffff,0xffea806f,0x665c43ff,0xccceffcc,0xf9ff301c,0xff9ff5df,
    0x04ff8809,0x999bffa8,0xf107fe99,0xbfffffff,0x26ffea01,0xfa803ffa,
    0x03ffa9bf,0x7ec06fe8,0x43fff887,0x54bff02a,0x03ff9eff,0x3fffffe6,
    0x7404ffff,0x9ffff17f,0x7d40bfea,0xfda999bf,0x7ff90fff,0x7ffdfff3,
    0x7ffff4c0,0x9ff1000c,0x7fffc400,0x7fffff3f,0x804ff880,0xffb02ffa,
    0x2ab7fe20,0x7fd4009a,0x5001fd12,0x98ff45ff,0x406fe84f,0x4ffd85ff,
    0x7fc0ffc4,0x7feffec5,0x3ffff203,0x07ffffff,0xfff93ff4,0x540bfea3,
    0x3ff602ff,0x7fe4dfd2,0xffb104ff,0x88001bff,0x7fc004ff,0xfffb0fff,
    0x4ff8807f,0xb02ffa80,0x13fe20ff,0x10bfea00,0x10bfea00,0x37f43fdc,
    0xfc89ff70,0x83ff986f,0x7ffc45ff,0x3ffe03ff,0xfdcccccc,0x99ffa02f,
    0x0bfea5ff,0xf3017fd4,0xfd1ffa9f,0xffc883ff,0x10001eff,0xfe8009ff,
    0x3ffea6ff,0x27fc402f,0xd817fd40,0x09ff107f,0x005ff500,0xc80bfea0,
    0x437f40ff,0x2a0fffb8,0xff980fff,0xfb85ff83,0xff503fff,0x02ffc407,
    0x20998ffd,0xff502ffa,0xd9ffdc05,0xffebbdff,0xffff31cf,0xf880005d,
    0x7fec004f,0x0ffffc3f,0x3ffbbb22,0x75c2deef,0xfb30beff,0x7edc39ff,
    0x202deeff,0xeeeffeb8,0x7f5c401c,0xeeeeeeef,0xff910fff,0xfffddddf,
    0xeffff85f,0x3ffeeeee,0x2f7fff22,0x10ffff60,0x819dffd7,0x42dfffdb,
    0x40cefffb,0x22dffeda,0xeeeffeb8,0x1ffffeee,0xfffffff1,0x3ff6dfff,
    0xf100003f,0xffc8007f,0x07ffe41f,0x3ffffff2,0xf30fffff,0x3e7fffff,
    0xf36fffff,0xffffffff,0x3fffee01,0x5c06ffff,0xffffffff,0x70ffffff,
    0xffffffff,0xfff07fff,0xffffffff,0x7fffdc7f,0x3ffe23ff,0x7ffffdc3,
    0x3fffe24f,0x3ffea6ff,0x3fe24fff,0x3ee7ffff,0xffffffff,0x74c3ffff,
    0xefeeffff,0x00019d53,0x4000ec80,0xffa86ffb,0xffffe987,0x224fffff,
    0x71effffd,0x6c7dffff,0x4fffffff,0x3ffffa60,0x74c03eff,0xffffffff,
    0xd30fffff,0xbdffffff,0x3fffe017,0xffffffff,0x3ffffa63,0x21ffdc1e,
    0x1effffe9,0x1fffffec,0x3dffffb1,0x3fffffc8,0x3fffffa6,0x01ceffff,
    0x00006aa6,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x880006a0,0x4000aaaa,
    0x4001aaa8,0x0001aa98,0x4c404cc4,0x2aa62019,0x2a62000a,0x40266000,
    0x4ccc4099,0x19999999,0x54413330,0xa984cc02,0x0998801a,0x99804cc0,
    0x01333009,0x30d54662,0x00010035,0x2207ff54,0x7fec45fd,0x804fffff,
    0xffffffe9,0x3ff202fd,0xd304ffff,0x7fffcc9f,0x1ffffa63,0x7fffffdc,
    0xffd503fe,0x2e019dff,0x3ee6ffff,0x3fea6fff,0xffffffff,0xa7fffdc7,
    0x644ffffc,0xfffecfff,0xfff901ef,0xffff50bf,0x3ffff21d,0x3fffee6f,
    0xfffd11ef,0xffb9fffb,0xbfd303df,0xfffe9800,0x17ffd40f,0xfffffff5,
    0x7fdc0bff,0xffffffff,0xffffe885,0x6c0fffff,0xfff70fff,0x7fffd47f,
    0xfffffb87,0xfb86ffff,0xefffffff,0xfffffd80,0x3fffffb0,0x3fffffea,
    0x7ec7ffff,0xfffeefff,0x3ffa3fff,0xffffffff,0xfffff80f,0xfffffc87,
    0xffffffd2,0x3fffff61,0xfffff52f,0xffffffff,0xfffc81ff,0xfffd8800,
    0xfff980df,0x2af3b621,0x980ffeba,0xdbacffff,0xffe86fff,0xffecaace,
    0x2a37fdc5,0x76543ffd,0x67ffc47f,0x46ffdb9a,0xbabefffb,0x6440effe,
    0x3fea5fff,0x37fea2ef,0x4fffeccc,0x7fffe5c4,0x22feabff,0xacffffc9,
    0xd982ffda,0x13991cff,0x5cc5fff7,0x2e22dffe,0x7542cfff,0xfffbbfff,
    0x541ffdae,0x7e4406ff,0x4c01dfff,0x7fd4001b,0x303ffe82,0xeffc8dff,
    0x43ffe880,0x3ff980a9,0xff98ffb0,0x7c47f904,0x9ff902ff,0x2b7ffea0,
    0x7cc0dfff,0x13ffea1f,0x0dffff88,0x0fffcc04,0xffa82ffc,0x7fcdff53,
    0x30bff506,0x7fec0dff,0x7d43bfe1,0x5c02883f,0x002effff,0xdffd9500,
    0xff885ffd,0x3a1fec07,0xaaaaabff,0x2005ffba,0xffb03ff9,0x79bfffd0,
    0x09ff5023,0xf3037fc4,0x409fffff,0x13ffea3b,0x007fff10,0xfd81ffcc,
    0x36bff107,0x4ff99fff,0xfb03ffa0,0x23fec05f,0x0ffe65ff,0xffffd500,
    0x36200007,0xffffffff,0x027fd42f,0x7ffffc0c,0xffffffff,0x0ffe6007,
    0x7fd43fec,0x42ffffff,0x7e401ffc,0x3ffe600f,0x3fea004f,0x4ff8803f,
    0x81ffcc00,0x3ffa07fd,0xfbcffff8,0x93fea02f,0x7ec06ff9,0xff32ffc7,
    0x3ffa6007,0x00000cff,0xddffffd1,0xfa85ffff,0xfff0002f,0xffffffff,
    0x26001fff,0x0ffb03ff,0x3ffff6e2,0x03ff64ff,0x6c03ff90,0x801fffff,
    0x1003fffa,0xf98009ff,0x40ffb03f,0xffffdffc,0x7400ffdf,0x05ffb0ff,
    0x2ffc7fd8,0x91007ff3,0x001bffff,0x577fdc00,0x2617fd40,0xfd0006ff,
    0x5555557f,0x4c005555,0x8ffb03ff,0x7dcc40b8,0x09ff70ff,0xe883ffc4,
    0x2fffdfff,0x10fffea0,0x0027fc40,0x7ec0ffe6,0x3fffea07,0x06ffffcf,
    0xff8cffa8,0x7c7fd806,0x00ffe65f,0xcffffd98,0x8fffa000,0xfd881ffd,
    0x01fff82f,0xdff906dc,0xf9800100,0x47ffa84f,0x3fee05fd,0x103fff12,
    0xfd109ffb,0x3fff21df,0x43fffa83,0x9ff107f8,0x03ff9800,0x7fc40ffb,
    0xffff8cff,0xfbffd004,0x8ffb005f,0x0ffe65ff,0x3fffaa00,0x6ff8803f,
    0x5d5effd4,0x0ceffffd,0x2ab7ffee,0x42fffcba,0xbabdfffe,0x3a66ffec,
    0xbfff884f,0xcffffeba,0x559ffff0,0xfc8fffb7,0xffdbceff,0x7ffdc1ff,
    0x3fffe64f,0xdffff51d,0x23ffdddd,0xefffedb8,0xfb703dee,0xffeb87df,
    0x3fffd00c,0x400bfff6,0x806ffffb,0xff0cfffb,0x0bbfe67f,0x7fffdc00,
    0x07fee02e,0x3ffffffa,0x44ffffff,0xfffffffc,0xff986fff,0xffffffff,
    0x03fff66f,0x3ffffff2,0xfd4fffff,0xffffffff,0xffff907f,0xa81dffff,
    0xb1ffffff,0x32dfffff,0xffffffff,0xfff71fff,0xffffffff,0xfffff883,
    0xfffff31f,0xa9bff209,0x3e000fff,0x7d402fff,0xfff4ffff,0x0ffff33f,
    0x7ffe4400,0x04fd81ef,0xbfffffd3,0x503dfff9,0xfffffffd,0x7ffe4019,
    0x20ceffff,0x3f207ffb,0xffecffff,0xfffbf71e,0x5405dfff,0x0ceffffd,
    0x5ffffd88,0x4bbfffaa,0xfffffffc,0xfb11ffff,0xffffffff,0x3ffff60b,
    0xdfffb10d,0xf0ffea03,0xffb800ff,0xfffd8806,0x31bfff1e,0x00009fff,
    0x49ffffb1,0x54c00ff8,0x3300009a,0x98003355,0x54c019aa,0x00d54400,
    0x00cd54c0,0x00002a60,0x00000000,0x00000000,0x00000000,0x00000000,
    0x547fff66,0x0000002f,0x00000000,0x00000000,0x01000000,0xcca80000,
    0x77776dc4,0xceeeeeee,0x65c99931,0x0017703c,0x71000002,0x77777777,
    0x57777777,0x36a00000,0x000012a5,0x00000000,0x00000000,0x40000000,
    0x2d4001fe,0x2a4ffd80,0xffffffff,0x55ffffff,0x27fe4dff,0x307fffee,
    0x2e17e619,0xffffffff,0x3fffa7ff,0xffffffff,0x02ffffff,0x00000000,
    0x00000000,0x00000000,0x00000000,0x001ffc40,0xff007ff1,0x7ffec41f,
    0xffffffff,0x4bff12ef,0x3ff23ffb,0xff33ffff,0xf7077ec9,0xffffffff,
    0x7fffecff,0xffffffff,0x001fffff,0x00000000,0x00000000,0x00000000,
    0x00000000,0x88027fc4,0x2a02fffe,0x000003ff,0x97fd49ff,0xffc9fff8,
    0x5c2fffdf,0x777731ff,0x87777777,0x99999998,0x19999999,0x00000000,
    0x00000000,0x00000000,0x00000000,0xf35bd300,0x209d939f,0x01fffffd,
    0x00001ff9,0xff98ffa0,0x7d43fd11,0xf503ffff,0x00000009,0x00000000,
    0x00000000,0x00000000,0x00000000,0x3fff6000,0x7fffffff,0xffceffc8,
    0x503fe80e,0x99999999,0x6c179999,0x0207fc2f,0x100b7f66,0x00000001,
    0x00000000,0x00000000,0x00000000,0x00000000,0x3ffa6000,0x3fffffff,
    0xfd87ffdc,0x9837c45f,0xffffffff,0x25ffffff,0x003f41fc,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x71000000,0x303bffff,
    0x7f443fff,0x440bea4f,0xffffffff,0x23ffffff,0x0004b869,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x7e400000,0xfc80ffff,
    0x0fff883f,0x26662006,0x19999999,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x3bfea000,0x3e985ffc,0x00013a60,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0xfe800000,0x003ffd1f,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x88ff6000,0x000000ff,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000002,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
};

static signed short stb__courier_bold_31_usascii_x[95]={ 0,5,3,1,2,2,3,6,7,3,2,1,5,2,
6,2,2,2,1,1,2,1,2,2,2,2,6,5,-1,0,1,2,2,-1,0,0,0,0,1,0,0,2,1,0,
0,-1,-1,0,1,0,0,1,1,0,-1,-1,0,0,2,6,2,3,2,-2,5,1,-1,1,0,0,1,0,0,1,
2,0,1,-1,0,1,-1,0,1,2,1,0,0,-1,0,0,2,4,6,4,1, };
static signed short stb__courier_bold_31_usascii_y[95]={ 22,4,5,3,2,4,6,5,4,4,4,6,18,12,
18,2,4,4,4,4,4,4,4,4,4,4,9,9,6,10,6,5,4,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,4,2,4,3,27,3,9,4,9,4,9,4,9,4,4,
4,4,4,9,9,9,9,9,9,9,5,9,9,9,9,9,9,4,4,4,11, };
static unsigned short stb__courier_bold_31_usascii_w[95]={ 0,6,10,14,13,13,12,4,7,7,13,15,7,12,
5,13,13,13,13,14,12,14,13,12,13,13,5,7,17,16,16,13,12,19,16,16,16,16,16,17,16,13,16,17,
16,19,18,16,15,16,17,14,15,17,19,18,17,16,13,8,13,7,13,20,6,15,17,15,17,16,15,17,16,14,
11,16,14,19,16,15,17,17,15,13,16,16,17,18,16,16,13,8,4,8,14, };
static unsigned short stb__courier_bold_31_usascii_h[95]={ 0,19,8,22,24,19,17,9,23,23,13,16,9,4,
5,24,19,18,18,19,18,19,19,19,19,19,14,16,16,9,16,18,21,17,17,18,17,17,17,18,17,17,18,17,
17,17,17,18,17,22,17,18,17,18,17,17,17,17,17,23,24,23,10,4,6,14,19,14,19,14,18,19,18,18,
24,18,18,13,13,14,19,19,13,14,18,14,13,13,13,19,13,23,23,23,7, };
static unsigned short stb__courier_bold_31_usascii_s[95]={ 156,249,182,128,1,173,208,251,95,103,129,
238,157,215,250,27,217,14,242,187,1,202,19,69,100,114,76,19,1,165,221,
98,143,151,191,63,101,84,67,45,34,20,28,233,216,171,132,225,51,111,143,
112,127,80,161,1,198,181,118,86,41,78,143,228,208,27,51,43,82,59,145,
33,128,161,15,176,193,230,176,113,1,231,160,99,208,82,212,193,129,156,146,
64,73,55,193, };
static unsigned short stb__courier_bold_31_usascii_t[95]={ 21,1,97,1,1,1,65,46,1,1,97,
65,97,97,83,1,1,46,26,1,46,1,26,26,26,26,83,83,83,97,65,
46,1,65,65,46,65,65,65,46,65,65,46,46,46,65,65,26,65,1,46,
46,46,46,46,65,46,46,65,1,1,1,97,97,97,83,26,83,26,83,26,
26,26,26,1,26,26,83,83,83,26,1,83,83,26,83,83,83,83,1,83,
1,1,1,97, };
static unsigned short stb__courier_bold_31_usascii_a[95]={ 263,263,263,263,263,263,263,263,
263,263,263,263,263,263,263,263,263,263,263,263,263,263,263,263,
263,263,263,263,263,263,263,263,263,263,263,263,263,263,263,263,
263,263,263,263,263,263,263,263,263,263,263,263,263,263,263,263,
263,263,263,263,263,263,263,263,263,263,263,263,263,263,263,263,
263,263,263,263,263,263,263,263,263,263,263,263,263,263,263,263,
263,263,263,263,263,263,263, };

// Call this function with
//    font: NULL or array length
//    data: NULL or specified size
//    height: STB_FONT_courier_bold_31_usascii_BITMAP_HEIGHT or STB_FONT_courier_bold_31_usascii_BITMAP_HEIGHT_POW2
//    return value: spacing between lines
static void stb_font_courier_bold_31_usascii(stb_fontchar font[STB_FONT_courier_bold_31_usascii_NUM_CHARS],
                unsigned char data[STB_FONT_courier_bold_31_usascii_BITMAP_HEIGHT][STB_FONT_courier_bold_31_usascii_BITMAP_WIDTH],
                int height)
{
    int i,j;
    if (data != 0) {
        unsigned int *bits = stb__courier_bold_31_usascii_pixels;
        unsigned int bitpack = *bits++, numbits = 32;
        for (i=0; i < STB_FONT_courier_bold_31_usascii_BITMAP_WIDTH*height; ++i)
            data[0][i] = 0;  // zero entire bitmap
        for (j=1; j < STB_FONT_courier_bold_31_usascii_BITMAP_HEIGHT-1; ++j) {
            for (i=1; i < STB_FONT_courier_bold_31_usascii_BITMAP_WIDTH-1; ++i) {
                unsigned int value;
                if (numbits==0) bitpack = *bits++, numbits=32;
                value = bitpack & 1;
                bitpack >>= 1, --numbits;
                if (value) {
                    if (numbits < 3) bitpack = *bits++, numbits = 32;
                    data[j][i] = (bitpack & 7) * 0x20 + 0x1f;
                    bitpack >>= 3, numbits -= 3;
                } else {
                    data[j][i] = 0;
                }
            }
        }
    }

    // build font description
    if (font != 0) {
        float recip_width = 1.0f / STB_FONT_courier_bold_31_usascii_BITMAP_WIDTH;
        float recip_height = 1.0f / height;
        for (i=0; i < STB_FONT_courier_bold_31_usascii_NUM_CHARS; ++i) {
            // pad characters so they bilerp from empty space around each character
            font[i].s0 = (stb__courier_bold_31_usascii_s[i]) * recip_width;
            font[i].t0 = (stb__courier_bold_31_usascii_t[i]) * recip_height;
            font[i].s1 = (stb__courier_bold_31_usascii_s[i] + stb__courier_bold_31_usascii_w[i]) * recip_width;
            font[i].t1 = (stb__courier_bold_31_usascii_t[i] + stb__courier_bold_31_usascii_h[i]) * recip_height;
            font[i].x0 = stb__courier_bold_31_usascii_x[i];
            font[i].y0 = stb__courier_bold_31_usascii_y[i];
            font[i].x1 = stb__courier_bold_31_usascii_x[i] + stb__courier_bold_31_usascii_w[i];
            font[i].y1 = stb__courier_bold_31_usascii_y[i] + stb__courier_bold_31_usascii_h[i];
            font[i].advance_int = (stb__courier_bold_31_usascii_a[i]+8)>>4;
            font[i].s0f = (stb__courier_bold_31_usascii_s[i] - 0.5f) * recip_width;
            font[i].t0f = (stb__courier_bold_31_usascii_t[i] - 0.5f) * recip_height;
            font[i].s1f = (stb__courier_bold_31_usascii_s[i] + stb__courier_bold_31_usascii_w[i] + 0.5f) * recip_width;
            font[i].t1f = (stb__courier_bold_31_usascii_t[i] + stb__courier_bold_31_usascii_h[i] + 0.5f) * recip_height;
            font[i].x0f = stb__courier_bold_31_usascii_x[i] - 0.5f;
            font[i].y0f = stb__courier_bold_31_usascii_y[i] - 0.5f;
            font[i].x1f = stb__courier_bold_31_usascii_x[i] + stb__courier_bold_31_usascii_w[i] + 0.5f;
            font[i].y1f = stb__courier_bold_31_usascii_y[i] + stb__courier_bold_31_usascii_h[i] + 0.5f;
            font[i].advance = stb__courier_bold_31_usascii_a[i]/16.0f;
        }
    }
}

#ifndef STB_SOMEFONT_CREATE
#define STB_SOMEFONT_CREATE              stb_font_courier_bold_31_usascii
#define STB_SOMEFONT_BITMAP_WIDTH        STB_FONT_courier_bold_31_usascii_BITMAP_WIDTH
#define STB_SOMEFONT_BITMAP_HEIGHT       STB_FONT_courier_bold_31_usascii_BITMAP_HEIGHT
#define STB_SOMEFONT_BITMAP_HEIGHT_POW2  STB_FONT_courier_bold_31_usascii_BITMAP_HEIGHT_POW2
#define STB_SOMEFONT_FIRST_CHAR          STB_FONT_courier_bold_31_usascii_FIRST_CHAR
#define STB_SOMEFONT_NUM_CHARS           STB_FONT_courier_bold_31_usascii_NUM_CHARS
#define STB_SOMEFONT_LINE_SPACING        STB_FONT_courier_bold_31_usascii_LINE_SPACING
#endif

