// Font generated by stb_font_inl_generator.c (4/1 bpp)
//
// Following instructions show how to use the only included font, whatever it is, in
// a generic way so you can replace it with any other font by changing the include.
// To use multiple fonts, replace STB_SOMEFONT_* below with STB_FONT_consolas_31_usascii_*,
// and separately install each font. Note that the CREATE function call has a
// totally different name; it's just 'stb_font_consolas_31_usascii'.
//
/* // Example usage:

static stb_fontchar fontdata[STB_SOMEFONT_NUM_CHARS];

static void init(void)
{
    // optionally replace both STB_SOMEFONT_BITMAP_HEIGHT with STB_SOMEFONT_BITMAP_HEIGHT_POW2
    static unsigned char fontpixels[STB_SOMEFONT_BITMAP_HEIGHT][STB_SOMEFONT_BITMAP_WIDTH];
    STB_SOMEFONT_CREATE(fontdata, fontpixels, STB_SOMEFONT_BITMAP_HEIGHT);
    ... create texture ...
    // for best results rendering 1:1 pixels texels, use nearest-neighbor sampling
    // if allowed to scale up, use bilerp
}

// This function positions characters on integer coordinates, and assumes 1:1 texels to pixels
// Appropriate if nearest-neighbor sampling is used
static void draw_string_integer(int x, int y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0, cd->t0); glVertex2i(x + cd->x0, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t0); glVertex2i(x + cd->x1, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t1); glVertex2i(x + cd->x1, y + cd->y1);
        glTexCoord2f(cd->s0, cd->t1); glVertex2i(x + cd->x0, y + cd->y1);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance_int;
    }
    glEnd();
}

// This function positions characters on float coordinates, and doesn't require 1:1 texels to pixels
// Appropriate if bilinear filtering is used
static void draw_string_float(float x, float y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0f, cd->t0f); glVertex2f(x + cd->x0f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t0f); glVertex2f(x + cd->x1f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t1f); glVertex2f(x + cd->x1f, y + cd->y1f);
        glTexCoord2f(cd->s0f, cd->t1f); glVertex2f(x + cd->x0f, y + cd->y1f);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance;
    }
    glEnd();
}
*/

#ifndef STB_FONTCHAR__TYPEDEF
#define STB_FONTCHAR__TYPEDEF
typedef struct
{
    // coordinates if using integer positioning
    float s0,t0,s1,t1;
    signed short x0,y0,x1,y1;
    int   advance_int;
    // coordinates if using floating positioning
    float s0f,t0f,s1f,t1f;
    float x0f,y0f,x1f,y1f;
    float advance;
} stb_fontchar;
#endif

#define STB_FONT_consolas_31_usascii_BITMAP_WIDTH         256
#define STB_FONT_consolas_31_usascii_BITMAP_HEIGHT        132
#define STB_FONT_consolas_31_usascii_BITMAP_HEIGHT_POW2   256

#define STB_FONT_consolas_31_usascii_FIRST_CHAR            32
#define STB_FONT_consolas_31_usascii_NUM_CHARS             95

#define STB_FONT_consolas_31_usascii_LINE_SPACING          20

static unsigned int stb__consolas_31_usascii_pixels[]={
    0x203009d9,0x2cefb801,0x7f654000,0xffffffb4,0x3fffff29,0xab98806f,
    0x05d40000,0x00019900,0xaa800000,0x10005531,0x2a980135,0x44098800,
    0x066600aa,0x55504cc0,0x5006f2a0,0xfd8d4435,0x2e27d405,0x7ffdc03f,
    0xffb0005f,0x3fff69ff,0xfff94fff,0xfb80dfff,0x001fffff,0x1006ffc8,
    0xec9800ff,0x0000bdef,0xff31ff98,0xfffa8003,0x07fc80be,0xfd16fc80,
    0xfb01dfff,0x4ff9803f,0xfe88fff1,0xff503fff,0x36bffe61,0x17fe605f,
    0x4c405ffb,0x4004ffec,0xb09ceffb,0x213333bf,0x6fd99998,0x759ffd10,
    0xe8005ffb,0xf9800fff,0x3ffee006,0x000effff,0x3f637e40,0x7ffd4005,
    0x3fe42fff,0x74f7e400,0x86fffeff,0x7dc04ffa,0xfb1ffe1f,0x881ffb5b,
    0x3fff63ff,0xff305fdd,0x00bffa0d,0x3e003ff4,0x00bfb06f,0xbfd06fd8,
    0x003ff701,0x51037fe4,0x0379dfd9,0x65677fec,0x0001fffe,0xffa85ff1,
    0xfda98000,0x01ff22ff,0x33ffff20,0xd07ffb10,0x46fe80ff,0x83fe67ff,
    0x237e43fe,0x5fddfffc,0x2201dfd0,0xfb800ffe,0x7ff1000f,0xb0017f60,
    0x80bf90df,0x5dc004fc,0xffffc880,0xf506ffff,0x17ff20bf,0xe83fdc00,
    0x7d40004f,0x00ff90ff,0x205fff90,0x2ffb86ff,0xff87ff30,0x9f91bea7,
    0x3a20ffcc,0xc85fd8ef,0x7fcc01ff,0x02ff9804,0x3603ff30,0x37ec005f,
    0xf3003fe6,0x7f40000f,0xeddfedff,0x401dfd06,0xe8000ffd,0x00ff704f,
    0x329ff700,0xffc8007f,0x103ff203,0x3ff20bff,0xff53ffc0,0x13fa4fc8,
    0xf117f608,0x3ff2009f,0x017fc401,0xfb00ff98,0x46fd800b,0x5fd003fd,
    0x4cccccc4,0x7fe40999,0xa805fd0c,0x7fd403ff,0x07fd4004,0x0002ff88,
    0x7fcb7fc4,0xfc805544,0x40ffd407,0x5ff80ffd,0x3fe67ff8,0x37e4bfa0,
    0xfd8bfb00,0xdff1000f,0x002ff880,0x3f601ff3,0x337ec005,0x3f2001ff,
    0x3ffffea3,0x7fc5ffff,0x3200ffc7,0x7fc400ff,0x02fec006,0x20001bf6,
    0x22ff96ff,0x40effffe,0x7fd407fc,0x4c3ffa82,0x46ff82ff,0x36fdcffe,
    0x7ec003ff,0x0013fe25,0x7c401ff9,0x1ff3002f,0xb0017f60,0x2e27e4df,
    0x9f76ddfe,0x7fffffd4,0x3fe25fff,0xb003fe25,0x1ffa00df,0x402ff880,
    0x40001ff9,0xf3ff95ff,0x8dfffdff,0x7fd407fc,0xfc8dff02,0x4c6fe80f,
    0xfd1efffe,0x25fd8009,0x4c001ffb,0x3fe203ff,0x01ff5002,0xfb0017f6,
    0xffb17f4d,0x13eebfff,0x7fc5ff80,0xd00ff30f,0x1ff600df,0xd006fc80,
    0x7e40009f,0x9ffff93f,0xc8fff621,0x07fd407f,0x3fe1ffc8,0x260dfd04,
    0x003bee1a,0x37ecbfb0,0x406fe800,0xbf7004fd,0x2002fec0,0x21ff16fd,
    0x29fd1ffa,0x3fe005fa,0x5577fe45,0x05ff806f,0x1001ff90,0x3ea007ff,
    0xd999000f,0x7ffe4dff,0x7e4dff02,0x103fe407,0x07feabff,0xf98037f4,
    0x5fd8002f,0x20009ff1,0x3ee00ffc,0x1ffcc02f,0xd800bfb0,0x7f4df56f,
    0x37d4ffa3,0xfd0bff00,0x880bffff,0xff9005ff,0x01ff7001,0xe801ffc0,
    0x320dffff,0x3ff203ff,0xfe80ff90,0x6c7fec06,0x01bfa06f,0xa88027f4,
    0x3fe6bfb0,0x3ff70003,0x77ffdc40,0x07ffdd53,0x6c005fd8,0x3e29f76f,
    0x7d4bfe0f,0x417fe005,0x0cfffffc,0x6c017fe0,0x09fd007f,0xd006fc80,
    0xff9015bf,0xf91ffa80,0x017fdc0f,0x0ffeffea,0xfb805fe8,0xfff9800f,
    0x5ff35fd9,0x0bfea000,0x5d3ffee0,0xfd803fff,0xcb7ec005,0x7c4ff53f,
    0x4009f50f,0x3f2205ff,0xff04ffff,0x01bf600d,0x10007fe6,0x9fd005ff,
    0x2a03fe40,0x17ff92ff,0x802ffe4c,0x200fffff,0x7fc405fd,0xd859d932,
    0x55fddfff,0x260003ff,0x3fa603ff,0xd7531abe,0x2fec03ff,0x7edbf600,
    0x3fd4bf93,0x7fc009f7,0xffeff805,0x007fe86f,0xdfb00bff,0x017f6000,
    0x7fc813fa,0xfc97fd40,0xffffffff,0xfff9000d,0x405fd80b,0xffff75fd,
    0x6fffec7f,0x03ff55fd,0x80ffe600,0x9fd006fc,0x2002fec0,0x365fb6fd,
    0xfc9bee5f,0x017fe003,0x3ffa63fe,0x2017fe44,0x7c403ffa,0xff50002f,
    0x203fd801,0x7fdc07fc,0xffffff91,0xf88005bf,0x2fec01ff,0xff11ff70,
    0x261ff937,0x35fd9fff,0x2a0005ff,0x0ffa02ff,0xfb03fdc0,0xd6fd800b,
    0xfc97f65f,0xf8007f65,0x13fc405f,0x5ff98fff,0x2007fec0,0x740007fb,
    0x004c404f,0x7fc80ff9,0x004c5ff2,0x00bff300,0x3fe20131,0x2ff8df52,
    0x8afec262,0xf70003ff,0x0bfe203f,0xd807fd40,0xb7ec005f,0x74bf92fd,
    0x800ff15f,0x37cc05ff,0xffd03ff6,0x013fee07,0x70000ffe,0xf90000ff,
    0x326fe80f,0x3600007f,0xd80002ff,0xfb13f25f,0xf8afec07,0xff90004f,
    0x00bfe201,0xfd80ffcc,0xdb7ec005,0xf91df93f,0x0013f2df,0x5fa80bff,
    0x7fcc3ffc,0xffda9acf,0x07fd400e,0x0ffe2000,0x3f202cb8,0xc87fee07,
    0xf700007f,0x0b2a00bf,0x5fb83fea,0xbfb017f4,0xe8003ff4,0x0bfe205f,
    0xd80ffcc0,0xb7ec005f,0xffff33fc,0x01dfffd7,0x2025ff80,0x17fee4fc,
    0x7fffffd4,0xfe800eff,0xdf900005,0x403ffea0,0x3260bffc,0x03fe45ff,
    0xdff93080,0x3fff3001,0x3ea1ffc4,0x401ff30f,0x0bfee5fd,0x407ff300,
    0xf3002ff8,0x017f603f,0x93eedfb0,0xbfb33ed9,0x4bff0001,0xdfeacdfa,
    0x200ffffd,0xbeffffc9,0x01ff9800,0x03ff3000,0x3203fff9,0xffffffff,
    0x03fe40cf,0x7ffffc40,0xfff7001e,0xfe837ec5,0x6c04ffef,0x017fe25f,
    0x4401ff90,0xff3002ff,0x0017f603,0x01beadfb,0x97fe0000,0xfffffffa,
    0x2001efff,0x7e4005fe,0x7f400006,0x206ff885,0xeffffdb8,0x00ff902d,
    0x07ffff10,0x50efe880,0x3f6203ff,0x5fd803ff,0x8800ffec,0x7fc404ff,
    0x03ff3002,0xfb0017f6,0x0007fe2d,0x449ff000,0xdffffedb,0xffc8001c,
    0x07ff1001,0x0ffa8000,0x08800188,0x00019880,0x44000133,0x00040001,
    0x6ff88bfb,0x801ffb00,0xf3001ffa,0x017f607f,0x27ecdfb0,0xff300000,
    0x007fc407,0x8bbfea00,0x03fdc0d8,0x03ff8000,0x00000000,0x00000000,
    0xbfb00000,0x9805ff70,0xffd803ff,0x41bfe000,0x7ec005fd,0x0007fea6,
    0x00ffe400,0x20000ff3,0xfffffffc,0x00027f45,0x0007fb80,0x00000000,
    0x00000000,0x20bfb000,0xff101ffe,0x5ffc980d,0x0e7fec00,0xfb0017f6,
    0x301ffd8d,0xb5056c07,0x6fa809ff,0x3fee0000,0x4cc1efff,0x26000000,
    0x00000001,0x00000000,0xb0000000,0x3bfe20bf,0x8077f440,0x01fffffb,
    0x7ffffc40,0xffffffb4,0x3fffff29,0xdfffd86f,0x3e06feec,0xefffffff,
    0x00164c00,0x06aa6200,0x00000000,0x00000000,0x00000000,0x7ec00000,
    0xb1bfe605,0x7fdc01ff,0x910000cf,0x3ff69fff,0xff94ffff,0x2e0dffff,
    0x1cfffffe,0x3fffff60,0x0000003f,0x00000000,0x00000000,0x00000000,
    0x00000000,0xf980bfb0,0x2200fd42,0x44000009,0x33333109,0x26666213,
    0x09980099,0x004d4c00,0x00000000,0x00000000,0x00000000,0x00000000,
    0x36000000,0x0100805f,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x000bfb00,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00988000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x44000000,0x000661a9,0xaa9806aa,
    0x1099999a,0x53000155,0x37300005,0xcaa88000,0x200000aa,0x0aaaaaaa,
    0xb8000000,0x0001deed,0x00000000,0x40000000,0x555441a8,0x3fffae00,
    0x4003ffff,0xfe983ff8,0xffffffff,0x0005ff35,0x98000ff9,0x70001fff,
    0x0dffffff,0xfe802ed4,0x001fffff,0x2f7bfb26,0xfffe8800,0x4c004fff,
    0x002defdb,0x3bbfb6e6,0xedb9801b,0x6dc1ceff,0x00cefffe,0xf117ffcc,
    0xffb103ff,0x7ffffddf,0x43ff8800,0xfdccfffa,0xff35ffff,0x0ff90005,
    0x3fffb800,0xefffc800,0x3f606eec,0xddddb006,0x3f2003ff,0x0effffff,
    0x5d67fec0,0xf7001ffe,0x09ffffff,0xffffff70,0xffc80fff,0x1fffffff,
    0x3ffffffe,0x3ff603ff,0x03ffe25f,0x3ea0fffa,0x7fc4003f,0x503bfe23,
    0x2ff989ff,0x007fc800,0x00fffcc0,0x007bfe60,0x2000dfb0,0xfd801ffa,
    0xffebacef,0x89ff101f,0xfb804ff9,0xffea9bef,0xbfffb105,0x20ff9757,
    0xabdfffe9,0x33a1fecb,0xfffdb9aa,0x8bfff901,0x7fd40fff,0x007ff102,
    0x3ea3ff88,0x98ffb01f,0xfc8002ff,0x1c980007,0x02ffc800,0x0006fd80,
    0xfa803ff5,0x0bff905f,0x3fe0bfea,0x077fc405,0x7e40ffec,0x740a00ef,
    0x02a00dff,0x8827fe40,0x3ffc0efe,0xff1037f4,0x3ff88007,0x7dc03ff2,
    0x00bfe61f,0x0001ff20,0x1ffb0000,0xfd333300,0x1333333d,0x200ffd40,
    0x3f600efe,0x82ffa80f,0x7fe404ff,0x88bff100,0xf70006ff,0x8800009f,
    0xe80406ff,0x204ff87f,0x4c403ff8,0x323ff89a,0x1ff700ff,0x31017fcc,
    0x263fe413,0x333101aa,0xfd000333,0x3fffe00b,0xffffffff,0x07fea04f,
    0x5403ffa8,0x5ff884ff,0x3e017fdc,0x07fec05f,0x10005ffb,0x00001fff,
    0x2000bfd0,0x1ffc46fe,0x2e07ff10,0xffffffff,0x740ffea3,0x817fcc6f,
    0x3f20effb,0xbffffd37,0xfffffe81,0x2ff4001f,0xffffff80,0x4fffffff,
    0xc807fea0,0x6ff800ff,0x3ee3ffd0,0x17fcc05f,0x7c3fff90,0xff50006f,
    0xf1000007,0x3b20005f,0x1017fcc5,0xffe887ff,0x3ffffeef,0xd985fff4,
    0x17fcc2ff,0x32077fdc,0xfefffaff,0x7fff45ff,0x74001fff,0xdfb0005f,
    0x07fea000,0xfd006fd8,0x3bbfe60f,0xffa805ff,0xffffe881,0x0009ff32,
    0x00003ff2,0x0003ff60,0x405ff300,0x7fec3ff8,0x6c3ffa83,0xffffffff,
    0x5c2ff983,0xffc80eff,0x3ffa63ff,0x807fea01,0xfffffffd,0x03ffffff,
    0x54001bf6,0x1bfa01ff,0xf903fec0,0x2e005fff,0x7ffd40ff,0x7ff53ffb,
    0x01ff6000,0x3aea6600,0x5c0000ef,0x80ffe23d,0x3fea3ff9,0x547ff102,
    0xceffdbff,0x545ff300,0xff900eff,0x05ff705f,0xfb00ffd4,0xffffffff,
    0x6c07ffff,0xff50006f,0x802ffc03,0xffb80ffc,0x0d5444ff,0xdff91ff2,
    0x7fdd3fe3,0x0dfd0002,0x5ffffff5,0xffffff88,0x7fec0001,0x4417fe3f,
    0x1bfa3ffe,0x3f63ff88,0x2ff98004,0x6401dff5,0x9ff302ff,0x100ffd40,
    0x3dfd3333,0x40133333,0xf50006fd,0x17fe203f,0x2e07fe40,0x22fffeff,
    0xbfe42ff9,0x3e0dffe9,0x003ff94f,0x3ea1bfe0,0x442fffff,0xdfffffee,
    0x3e0fb200,0x3ff66fff,0x23fffe80,0x3fe204ff,0x2001bfe3,0xeffaaff9,
    0x203fe400,0x3fea04ff,0x02ff4001,0x0006fd80,0x7fc03ff5,0x98ffb005,
    0x3fff35ff,0xff707fea,0xff07fff7,0x000bfee9,0x4cc43ff4,0x9802ffb9,
    0xff706ffc,0x5ffff87f,0x75c7bfea,0xff13ffdf,0xb1ffc407,0x9999bfff,
    0xfbff3035,0xff9001df,0x2a04ff80,0x7f4001ff,0x0dfb0005,0x807fea00,
    0xdfd006fe,0x3ee0ffd8,0x41ffc8ef,0x81effffa,0x7ff53ff8,0x01ff6000,
    0xb800bfea,0xfffc83ff,0x20f7fd46,0x5ffffffd,0x0bfe67ff,0x3a23ff88,
    0xffffffff,0x2ffe61ef,0xfc801ffe,0x5027fc07,0xfe8003ff,0x0dfb0005,
    0x807fea00,0xbff007fd,0xffc85ff8,0xff987fdd,0x5ff300df,0x40017fe6,
    0x7d401ffc,0x2ffc002f,0x443fffc4,0x3bfff201,0x7fccffe3,0x88ffe202,
    0xedccceff,0xff30ffff,0x801fff35,0x27fc07fc,0x8003ff50,0xfb0005fe,
    0x3fea000d,0x00bff201,0x7fc49ff5,0x9ffffd04,0xc80bff10,0x03ffe0ff,
    0x017fea00,0xf8005ff5,0x0fff705f,0x3e204400,0x407ff13f,0xdfd13ff9,
    0x99ffec40,0x1dff52ff,0x3e03fe40,0x07fea04f,0x000bfd00,0x20003ff6,
    0x3e601ffa,0x07fec05f,0x7fc41bfe,0x0ffb01ff,0x7fe45ff8,0x1ffd0004,
    0x0017fd40,0x3e607ff1,0x4400005f,0x417fe3ff,0xff53ffe8,0x34ff9805,
    0x77fdc5ff,0xf80ff900,0x07fea04f,0x000bfd00,0x2000fff2,0x7ec01ffa,
    0x09ff703f,0x3ee03ffd,0x9ff501ff,0xf107ff20,0xa80809ff,0xff501eff,
    0x0ffec005,0x0002ffb8,0xfb1ffc40,0x7fffd01f,0xf500ffee,0x90bfe67f,
    0x1ff20dff,0x7d409ff0,0x2ff4001f,0xcfff9800,0x7d403311,0x7ffcc01f,
    0xfffca8ac,0x9bfffa80,0xfffffc98,0x219ffd00,0xf705ffc9,0x53357dff,
    0x3fff60fb,0xffc999ac,0x5cc41332,0xfc883ffe,0x8800005f,0x3bfea3ff,
    0x7fdbfd71,0x5407ffea,0x5ff30fff,0xf90bffb0,0x314ff80f,0x35ff7333,
    0x5fe80133,0x3fff2000,0x3314ffff,0x335ff733,0xffff3013,0x401dffff,
    0xfffffffc,0x106ffddf,0xfffffffd,0xffffa80b,0x207fffff,0xfffffffb,
    0xfff72fff,0x87ffffff,0x00dffff9,0x3ff88000,0x7fffffec,0x7fec7fd5,
    0xfffeeeff,0x40bfe61f,0x3fe45ffe,0x7fd53fe0,0xffffffff,0x02ff405f,
    0x3fffaa00,0xffff53ff,0xbfffffff,0x3fffb620,0xffb3003e,0x7ff45bff,
    0x3fffb204,0xfd91003d,0x8059bfff,0xfffffed9,0x3fffee2d,0xf980ceff,
    0x000002de,0x3f20ffe2,0x0ffa3eff,0xffffffd7,0x2ff9817f,0x649ffd10,
    0xaa7fc07f,0xffffffff,0x7f405fff,0x26600005,0x7ffffd41,0x05ffffff,
    0x44000188,0x03100000,0x00011000,0x26200998,0x00000099,0x00998000,
    0x26200022,0x000009a9,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x3b72ea00,0xeeeeed85,
    0xdd31eeee,0x02ee9803,0x03dd3000,0xddd0f740,0xdddddddd,0x0bbb21dd,
    0xd72774c0,0x179bdddd,0x200776c0,0x3ba25ee8,0x87ba602e,0x3a205ee9,
    0x07baa1ee,0x00000000,0x777776c0,0xb884eeee,0x000defed,0x3fffffee,
    0xffffff87,0xff51ffff,0x02ff9805,0x039dfdb7,0x44007fe6,0x3fffe1ff,
    0xffffffff,0x00dff30f,0xffc8bff6,0xdfffffff,0x405ffa80,0x3fe62ffd,
    0x87fe606f,0xf502fffa,0x0ffdc5ff,0x7ff65400,0x6dc03def,0xf00ceffe,
    0xffffffff,0xffffa8bf,0x4403ffff,0xccdefffe,0xcccccc84,0xff51ffdc,
    0x42ff9805,0xffffffe9,0x02ff883f,0x6643ff10,0xdccccccc,0x3ff60fff,
    0x22ffcc03,0xccaabffc,0xfd80efff,0x8bff502f,0x302ffff9,0x7ffd43ff,
    0x47fffb05,0x22001ffb,0xfffffffe,0xfffd306f,0xf07fffff,0x999999df,
    0x677fd459,0x01fffcaa,0x0019ffd1,0x2a3ff700,0x7fcc02ff,0x26fffe22,
    0x443ffea9,0xff3002ff,0x2ffd8001,0xb007ffc4,0x0ffc83ff,0x885ffd88,
    0xffe80fff,0x37fffcc0,0x3ee1ff98,0x77c40ffe,0x07fee3fe,0x5efff440,
    0x885dba9a,0xca9acffe,0x1ffc1fff,0x2a037a00,0x5ff705ff,0x7fdc0000,
    0x9805ff51,0x07ff62ff,0x1ffc3ff4,0x000ff980,0x7e417fea,0x09ff304f,
    0x7f401ff9,0xb89ff707,0xcff983ff,0x1ff981ff,0x70bfb3ee,0x7dc7fd9f,
    0x9ff9001f,0x07ff7000,0x7ff13fee,0x7f400800,0x004ff887,0xa8ffdc00,
    0x7fcc02ff,0x5409ff12,0x01ffc3ff,0x22007fa8,0xff100fff,0x01ffd01f,
    0x7e401ff9,0x23ffd01f,0xff306ff8,0xff30bfd5,0x2fde7dc3,0xb93fa7fa,
    0xffd001ff,0x1ffb0001,0xff17fe20,0xfd800007,0x007fdc0f,0x47fee000,
    0x7cc02ffa,0x805ff32f,0x227f45ff,0x03fd4098,0xb805ffb0,0x1ffd44ff,
    0x2e00ffc8,0xbff302ff,0x7cc07ff6,0x4c1ffb9f,0x273f21ff,0x36df30ff,
    0x007fee4f,0xc80037fc,0x7ff100ff,0x00003ff8,0x3f207fec,0x5c000186,
    0x05ff51ff,0xff72ff98,0x746fd805,0x2e27e44f,0xbff5006f,0xe87ffa00,
    0x03ff206f,0x3200ffc8,0x203ffdff,0x5ff89ff9,0x9f90ffcc,0xd9fe4ffa,
    0x007fee4f,0x4000fff4,0xff904ff9,0x0003ff83,0x7f43ff40,0xeffffdac,
    0x1ffb8003,0xf9805ff5,0x805ff52f,0x227ec7fd,0x037dc7ff,0x8007ffc4,
    0x5ff55ffa,0x8807fe40,0x7fc407fe,0x7fcc06ff,0x7cc1ff91,0x7dd3f61f,
    0x97f61ff6,0xf7001ffb,0xfd0005ff,0x3ff221bf,0xeeffff85,0xf98000bd,
    0xfffff84f,0x0effffff,0x547fee00,0x7fcc02ff,0xc80bff12,0x997f60ff,
    0x17ee2fff,0x000bff20,0x0dfd3ffb,0xd880ffc8,0xffa802ff,0x8ffcc02f,
    0x3fe64ff8,0x7fc53f61,0xb97f25fb,0x3f6001ff,0x1000beff,0xfffbfffb,
    0x3ffffe09,0x2004ffff,0xff80ffe8,0x3f660aef,0x3fee004f,0x9805ff51,
    0x13ff62ff,0xc83fff22,0x97fff25f,0x7fd405fc,0xfff98005,0x7fe401ff,
    0xfffcbaab,0x9fff7005,0x361ff980,0x43ff30ff,0x3fff64fd,0xffb97f22,
    0x7ffdc001,0xf7000cff,0x5407ffff,0xffdbaaaa,0x5ffb004f,0xe809ff10,
    0xff7000ff,0x300bfea3,0x7ffc45ff,0xffffeeef,0x7fd37dc7,0x1027e4ff,
    0x20001ffd,0xc805fffc,0xffffffff,0xfff3003f,0x7fcc03ff,0x7ccffe61,
    0xfa8ffa1f,0xf737e47f,0xf910003f,0x8807ffff,0x3ffffffd,0x1fff9800,
    0xf027fe40,0x1ffb80bf,0x2a3ff700,0x7fcc02ff,0x7fffec42,0x5c6fdbff,
    0xff1df36f,0xfc813f65,0x3e20002f,0xffc800ff,0x00acdeff,0x3febffa0,
    0xb07fe606,0x43ff31ff,0x227fc3fe,0x07fee6fc,0xfffd5000,0x2fffe60b,
    0x005fffc8,0x3203ffa8,0x2ff404ff,0x400ffe60,0x5ff51ffb,0x202ffa80,
    0x13fa19a9,0x6d3f2ff5,0x2607fb5f,0xe80005ff,0x1ff9006f,0x4ffb8000,
    0x3e607ff9,0x4dffd41f,0x50ffe1ff,0x2e7fb839,0x500001ff,0xff987fff,
    0x1fffcc0e,0x417fe200,0xfe805ffc,0x017fd406,0xff30ffc8,0x00ffb807,
    0x7d43ff80,0x3fea3fd7,0xffd03fe8,0xdfd00001,0x003ff200,0x226ff880,
    0xff980fff,0xff9efe81,0x5c00ffe1,0x007fee7f,0x46ff9800,0xff300ffc,
    0x4ff9800f,0x9005ffc8,0x7fdc03ff,0x44fff000,0x3fe404ff,0x207fdc00,
    0x7c6f9ff9,0xfc82febf,0xfd00002f,0x03ff200d,0x42ffd800,0xff985ffb,
    0xffcffa81,0x5c00ffe1,0x007fee7f,0xe8ffd000,0x07fec05f,0xc85ff700,
    0x3e2004ff,0x4dff104f,0x8bff3018,0xff300ffe,0x3ff9800b,0x44fcff98,
    0x4c2fedfd,0x200005ff,0xff9006fe,0x3fee0001,0x985ffd05,0xfffd01ff,
    0x00bfe23f,0x3ff73fdc,0x6fe80000,0xf9017fe2,0x3fe6001f,0x013ff20e,
    0x9833ff60,0x37e61ffe,0x1fffd99a,0x8857ffd4,0x2000fffa,0xff106ffb,
    0xfffa83ff,0x66fff41f,0xcccccccc,0x006fe801,0x10001ff9,0x3e601fff,
    0x07fe60ff,0x88ffffdc,0xff7002ff,0x2ab3fee1,0x002aaaaa,0xfff13fea,
    0x89bfa201,0x3ff26209,0x33fff21f,0xcccccccc,0x7ffff440,0x7cc2ffff,
    0x3fffffff,0xffffff90,0x55105fff,0x3dfff975,0xf83fffc0,0x3fea1fff,
    0xffffffff,0xfe802fff,0x01ff9006,0x809ffb00,0x3fe65ffc,0x47fffe01,
    0xf5002ff8,0x3fffee1f,0xaeffffff,0x99999abe,0x7e41fffc,0xfd510aef,
    0x7fffcc7f,0x6c1effff,0xffffffff,0xd901ffff,0x201bffff,0x1dffffeb,
    0x7fffecc0,0xfff300cf,0xf007ffff,0x3ff209ff,0x3fffea0f,0xffffffff,
    0x06fe802f,0x8001ff90,0xf8806ffa,0x03ff32ff,0xf98fffdc,0x3ff5002f,
    0x3fffffee,0xffaeffff,0xffffffff,0xffffd01f,0x989fffff,0x2dffffff,
    0xffffffb0,0x03ffffff,0x22000988,0x13100009,0x9bdff300,0x00000015,
    0x00000000,0x00000000,0x00000000,0xfd980000,0xbeffffff,0x7fff5400,
    0x33101dff,0x00000013,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00099988,0x00002660,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0xdd700000,0xd90ded80,0xaf6c001d,0xeeeeeeea,0xdd32eeee,0x91ee9803,
    0xdddddddd,0x369ddddd,0xeeeeeeee,0xddddb1ee,0x23dddddd,0xbceeeee9,
    0x3bbaa01a,0x700acdee,0x99bddddd,0xeeea8003,0x77774402,0xeeeeeeee,
    0x0fbaa00e,0x5eee8800,0xd70bb200,0x00006a07,0x7fec0ff9,0x400ffee3,
    0xfff53ff9,0xffffffff,0x500bfea7,0x3fff65ff,0xffffffff,0xffffd5ff,
    0x23ffffff,0xffffffff,0xfff51fff,0x1bffffff,0xffffff50,0xff907fff,
    0xdfffffff,0x3fff6001,0x7fffcc06,0xffffffff,0xfffea80f,0x3ff60004,
    0x0bfa006f,0x5ff507fb,0x83fe4000,0x7fc44ffb,0x23ff9006,0xffeaaaa8,
    0xff50aaaa,0x52ffa805,0xfff99999,0x3a799999,0xccccccff,0x55dff0cc,
    0x21555555,0xdcbacffa,0x7d42fffe,0xfffdbacf,0x55ffe43f,0x06fffcca,
    0x01fffff0,0x66666644,0x0ffecccc,0x3fffffaa,0xfff50004,0x17f400df,
    0x3fe60ffa,0xff90003f,0x3a0bff30,0x6ff800ff,0xf5037f40,0x2ffa805f,
    0x3a037f40,0x17fe006f,0x702ffa80,0x7fd41fff,0x647ffa81,0xffe880ff,
    0x7dffd402,0xfd00003f,0x5efffecb,0xf88004ff,0x2006fedf,0x817f41ff,
    0x8004ffe8,0x77fc47fc,0x807ff700,0x7f403ff9,0x00bfea06,0xfe805ff5,
    0x0037f406,0x7d400bff,0x97fea02f,0xffd01ffa,0x9807fe43,0xb7ec04ff,
    0xb80006ff,0x4bbee1ff,0xc8004ff9,0x006fe8ff,0x1ff81ff1,0x006ffec0,
    0xffe8ff90,0x017fe200,0xfe803ff9,0x00bfea06,0xfe805ff5,0x0037f406,
    0x7d400bff,0x8fff402f,0xff701ffa,0x8807fe45,0xa7fc03ff,0x40000ffc,
    0x261445fe,0x7cc004ff,0x5c0dfd2f,0xeeeffeee,0x02eeeffe,0x2001dff7,
    0x07ff27fc,0xe803ffa0,0x06fe806f,0xf500bfea,0x06fe805f,0xff0037f4,
    0x17fd400b,0x7d4ffea0,0x43ff901f,0xff500ffc,0xa8ffd403,0x2e0003ff,
    0xff9802ff,0xd2ff4004,0x7ffe40df,0xffffffff,0x3ea02fff,0x7fc801ff,
    0x2e007ff5,0x7ff302ff,0x540dfd00,0x7fd402ff,0x2037f402,0x3fe006fe,
    0x0bfea005,0x3ea9ff10,0x46fe881f,0xfe880ffc,0x3e3fec07,0x3fa0005f,
    0x09ff3006,0xfd07fe40,0x7dccc40d,0x9ffb999e,0x7fcc0099,0x4ffe403f,
    0x3e2004ff,0x01ff705f,0x7d40dfd0,0xaaaaaacf,0x7402ffca,0x037f406f,
    0x5555dff0,0x7fd45555,0xf55ff802,0x7ff5443f,0x555ffe42,0x400dffca,
    0x07fec4ff,0x017fd400,0x3004ff98,0x06fe87ff,0x6fa8bf70,0x4ffe8800,
    0x1bffff20,0x741ffa00,0x0dfd006f,0x7fffffd4,0x2fffffff,0x3a037f40,
    0xffffffff,0x3ffffe6f,0x2a7fffff,0x6ff802ff,0xfffffff5,0xfff905ff,
    0x01dfffff,0x7d42ffa8,0x6fe8003f,0x013fe600,0x37f42ff4,0x7dc4fc80,
    0xeffb8005,0x3fbff200,0x7fdc002f,0x801ffc42,0x3fea06fe,0xffffffff,
    0x7f402fff,0x7ffff406,0x3e6fffff,0xeeeeeeff,0x00bfea5e,0x7ffd5bfe,
    0x900cffff,0xffffffff,0x3fec09ff,0x2002ffc4,0x26002ffa,0xffb804ff,
    0xb006fe80,0x004fc87f,0x2006ffe4,0x1fff8ffc,0x717fe600,0x3fa001ff,
    0x00bfea06,0xfe805ff5,0x4cf7f406,0x3e099999,0x3fea005f,0xab7fc402,
    0xffd99aff,0x881ff902,0xff03fffb,0x003ff60b,0x4c006fe8,0x7fc404ff,
    0x200dfd03,0x01fec2fe,0x004ffd88,0x3bfe6ff9,0xb1ffa000,0x37f400df,
    0xa805ff50,0x37f402ff,0xf801bfa0,0x3fea005f,0xaaffcc02,0x07fec1ff,
    0xf8807fe4,0x17fd40ff,0x5002ffb8,0xf98007ff,0x037ec04f,0x33260dfd,
    0xecccdffc,0xd302ccdf,0x7e4007ff,0x8017fee7,0x7ff12ffb,0x5037f400,
    0xffa805ff,0x2037f402,0x3fe006fe,0x0bfea005,0x3ea7ff50,0x42ffcc1f,
    0x3f200ffc,0x777fec1f,0x5ffeeeee,0x000ffd00,0x7cc09ff3,0xccccccdf,
    0x50cccfff,0xffffffff,0x09ffffff,0x8005fff5,0x1ffec7fc,0xf74ff980,
    0x37f4001f,0xa805ff50,0x37f402ff,0xf801bfa0,0x3fea005f,0xa87ff402,
    0x1ffd81ff,0xf7007fe4,0xfffff83f,0xffffffff,0x01ffd400,0x5027fcc0,
    0xffffffff,0x3fffffff,0x2ffeeaa2,0xaabffaaa,0x00f7fdc1,0x3a23fe40,
    0xffd001ff,0xfd001bf6,0x017fd40d,0xfd00bfea,0x006fe80d,0xfa8017fe,
    0x97fee02f,0xff981ffa,0xb007fe45,0x6ffd41ff,0xdccccccc,0x3ff402ff,
    0x04ff9800,0x33333326,0xccfffccc,0x447f980c,0xbff700ff,0x1ff20001,
    0x2003ffe6,0x03ffaffb,0xf5037f40,0x2ffa805f,0x3a037f40,0x17fe006f,
    0x902ffa80,0x7fd41fff,0x643ffb01,0xbff500ff,0x4400ffd8,0x3fea05ff,
    0x9ff30003,0x0dfd0000,0x7f98df50,0x00013a20,0x3fee0ff9,0xffff9806,
    0x2aaa200f,0xaaaaffea,0xa805ff50,0x37f402ff,0xf801bfa0,0xaaaaaaef,
    0x59ff50aa,0x3fffd975,0xf301ffa8,0x4cffe4bf,0x0fffdaa9,0xfe802ffc,
    0x01ffd00f,0xf7555510,0x005555df,0xf500dfd0,0x0406fa8d,0x03fe4000,
    0xfd009ffb,0xffa80dff,0xffffffff,0x805ff53f,0x7f402ffa,0x0037f406,
    0xffffffff,0x3fea3fff,0xdfffffff,0x201ffa80,0xfff90ffe,0x3dffffff,
    0x7002ffa8,0x9ff505ff,0x3fffea00,0xffffffff,0x037f4000,0x1bea2fdc,
    0x3f200000,0x0bffa207,0x807fff70,0xfffffffa,0xff53ffff,0x02ffa805,
    0x3fa037f4,0x3fffe006,0x1fffffff,0xbdfffff5,0x0ffd4017,0x3f29ff50,
    0x1ceeffff,0x2001ffb0,0xffe85ff9,0xffff5000,0xffffffff,0x06fe8001,
    0x2fdc4fc8,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x20000000,0x2aa62028,0x553001aa,
    0x15530001,0x13551000,0x0d554c40,0x4cc01988,0x4c006660,0x80033109,
    0x88133099,0x109880aa,0x440a8835,0x00d54c09,0x33007970,0x33333333,
    0x2004cc43,0x54c00998,0x05db1001,0x21ffcc00,0xffffffc8,0xfffb103f,
    0xf9005fff,0x003dffff,0xdffffff7,0x7ffff5c1,0x3fe43fff,0xffd93fe0,
    0xaa7fcc01,0xff1001ff,0x7f4cffe5,0x57e44fff,0xff34fff9,0xe9afe49f,
    0x800dffff,0x7fcc06fd,0xffffffff,0x03fff11f,0x2e017ff4,0xfffb003f,
    0xfff70005,0x777ffc43,0xfa83ffee,0xffffefff,0x9dffd104,0x2607fffd,
    0xffeffffe,0x3bfff61f,0x323ffffe,0x527fc07f,0xffc809ff,0x2005ff31,
    0x37ff1ff9,0x9fffdfff,0x7f7f5fe4,0x0ffefe8f,0xdfff5df9,0xfb00bfff,
    0xffff980d,0x1fffffff,0x7dc1bfea,0x03fa804f,0x00bfffb0,0x6c0effc8,
    0x881102ff,0x7f4c2fff,0x42ffd82f,0xfe80ffe8,0x705c40df,0xfffa8817,
    0xff80ff90,0x3e03ffc4,0x801ffc6f,0xfdff0ffa,0x87ff547f,0xbfd1fefc,
    0x7e4bfa3f,0x3fa63fff,0x037ec01f,0x217fe600,0x7fcc4ffd,0x17d45b06,
    0x3ffea0b5,0xbffb1006,0x90017fe0,0x3fe201ff,0x8817fcc6,0x1ffdc5ff,
    0x5ff90000,0x9ff01ff2,0xf302ffc8,0x4c4fe87f,0xff3fdc1a,0x5ff903ff,
    0xffd93ff2,0x7fe53f64,0x03ffb82f,0x100037ec,0xfd101dff,0x407ff43f,
    0xaf98dff9,0xfb02ffd8,0xffd100bf,0x0037f409,0xfc809ff1,0xb01bf61f,
    0x037fc4ff,0x4ffe6000,0x27fc07fc,0x7e417fe2,0x362fec0f,0xff37e45f,
    0x4bfea05f,0x3ff60ffc,0x7fe53f60,0x809ff302,0x3a0006fd,0x3fe601ff,
    0x4c05ff76,0xffcfcffd,0x13fee01d,0x805fff30,0x9802effc,0x7fcc02ff,
    0xf9013fe2,0x00ffe61f,0x27ff1000,0x27fc07fc,0x7fc07fec,0x3e26fc85,
    0xf97f60ff,0x4732205f,0x22fec5fc,0x80ff94fd,0x555534ff,0x5555dfd5,
    0x2ffc8055,0xffdffb80,0xfffb3004,0x3ffb003b,0x00f7fd40,0x2dffffe8,
    0x8801ff70,0xddff13ff,0xfddddddd,0x007fea3f,0x7ff765c0,0x0ff93fff,
    0xffa84ff8,0x5c17fd43,0x8fffea7f,0x017fe3fe,0x5fd8bf90,0x07fca7ec,
    0xfffda7fc,0xffffffff,0x3fea05ff,0x3fff6004,0x3ff22006,0x3f2200cf,
    0x3bfee04f,0x7ffdc000,0x7fe42fff,0x8a7fc400,0xffffffff,0xf91fffff,
    0xffa8001f,0xffffffff,0xff80ff93,0xfd8dff04,0x361ff506,0x8bfe6fdf,
    0x7e4005ff,0x3f62fec5,0xff80ff94,0xffffffb4,0xbfffffff,0x001bfe60,
    0x3005fff3,0xff9f9ff9,0x7fffd43b,0x27ff4404,0xfffc9800,0x007fee4f,
    0x3fe27ff1,0x9999999c,0x07fee199,0x9bfff980,0x7e4ffe20,0xc827fc07,
    0x07ff10ff,0x4ffc7fe6,0x21ff88ff,0x7e4005ff,0x3f62fec5,0xff80ff94,
    0x0037ec04,0x8001ffd1,0x200efffe,0xaf98dff9,0xdf52ffd8,0x3f62003b,
    0x7d40005f,0x05ff51ff,0x3fe2ffa8,0x2ffa8005,0x407ff600,0x1ff93ff8,
    0xf9827fc0,0x401ff73f,0xfd5faaff,0x7fc1ff37,0x22fe4005,0xca7ec5fd,
    0x027fc07f,0xfd801bf6,0x7fec002f,0x17405ffb,0x012d45f5,0x0effc800,
    0x4bfea000,0x7ec05ff8,0x003ffa0f,0x400dff10,0x3fe206fe,0x2e03ff73,
    0x5bfa04ff,0x5ffc05fe,0xf5df72fd,0x4005ff8f,0x22fec5fc,0x80ff94fd,
    0x37ec04ff,0x004ffb80,0xffca7fdc,0x00fea004,0xfff70000,0x3fee0003,
    0x4c07ff62,0x27fd44ff,0x01ffec00,0xfd306fe8,0x20ffea7f,0x2e04fffa,
    0x402ffbff,0x3e27fcfd,0x2ffc6fcf,0xfb17f200,0xff94fd8b,0x6c04ff80,
    0x5ff9806f,0x237fcc00,0xf7002ffe,0x30000007,0xac885fff,0x07ffdcc1,
    0x2217fff3,0xfe80fffb,0x0d4c09df,0x22b7ffe2,0xffb1da98,0x7fffe4c9,
    0x117fff13,0x409ffff9,0x807ffff8,0x7ec5fffc,0x02ffc5ff,0xbfb17f20,
    0x0ff94fd8,0x7ec04ff8,0x4fffc406,0x09999999,0xf107ffa2,0x353001ff,
    0x22000000,0x3fe64ffe,0xffffffff,0xfffffb82,0xd101efff,0xffffffff,
    0xffff507f,0x263fffff,0xffffffff,0x3ff23fea,0xfd9fffff,0x27ffe404,
    0x217ffdc0,0x7fc4fffb,0x22fe4005,0xca7ec5fd,0x027fc07f,0xff701bf6,
    0xffffffff,0x81ffecbf,0x00006ffb,0xfb100000,0x3fffa69f,0x200cffff,
    0x4effffd8,0xffffd700,0x32203bff,0x0cfffffe,0x37ffffa6,0xffb87fd0,
    0x09fb0dff,0x801fff98,0x7c40fffa,0x02ffc2ff,0xbfb17f20,0x0ff94fd8,
    0x00004ff8,0xfffffff7,0x3eebffff,0x2ffec06f,0x00000000,0x33301d90,
    0x03100013,0x00998800,0x13001880,0x00131000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000004,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x009db000,
    0x0aaa8000,0x2aa05551,0x0153001a,0x77777700,0x7fffc777,0xffffffff,
    0x0007ffff,0x00000000,0x00000000,0x00000000,0x00000000,0xfff50000,
    0x7ffffc03,0x7fffffff,0xff88fffc,0x2ffe980f,0x37fffe60,0x7fc3b980,
    0x27ffffff,0xffffffff,0xffffffff,0x00000007,0x00000000,0x00000000,
    0x00000000,0x00000000,0x7c0dfbfd,0xffffffff,0x7ffc7fff,0x440fff10,
    0xff882ffd,0x5c0effff,0x7ffffc7f,0x26667fff,0x99999999,0x00199999,
    0x00000000,0x00000000,0x00000000,0x00000000,0x5fb80000,0x266607fd,
    0x99999999,0xf07ffc19,0x5ff700ff,0xfb8affc8,0x017f61ef,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0xff880000,0x0001ff50,
    0xff8ffd00,0xe8333006,0x6fffd45f,0x00002ffe,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0xfd13f200,0xfd00000b,0x0006fe8f,
    0x7fd41ff4,0x00005fff,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x303fe600,0xeeed83ff,0xeeeeeeee,0x3fa37ec6,0x44000005,
    0x00002cdb,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0xc81fec00,0x7ffffc6f,0x7fffffff,0x13b22f64,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x7fa80000,0xaa8ffe20,
    0xaaaaaaaa,0x000002aa,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00bb6000,0x00000bd7,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,
};

static signed short stb__consolas_31_usascii_x[95]={ 0,6,3,0,1,0,0,6,4,3,2,1,3,3,
5,1,1,2,2,2,0,2,1,1,1,1,6,3,2,2,3,4,0,0,2,1,1,3,3,0,1,2,2,2,
3,0,1,0,2,0,2,1,1,1,0,0,0,0,1,5,2,4,1,0,0,2,2,2,1,1,0,1,2,2,
1,2,2,1,2,1,2,1,3,2,0,2,0,0,1,0,2,2,7,3,0, };
static signed short stb__consolas_31_usascii_y[95]={ 23,1,1,3,0,1,2,1,0,0,1,7,18,13,
18,1,2,3,2,2,3,3,3,3,2,2,7,7,6,10,6,1,1,3,3,2,3,3,3,2,3,3,3,3,
3,3,3,2,3,2,3,2,3,3,3,3,3,3,3,1,1,1,3,27,1,7,1,7,1,7,1,7,1,1,
1,1,1,7,7,7,7,7,7,7,2,7,7,7,7,7,7,1,-2,1,11, };
static unsigned short stb__consolas_31_usascii_w[95]={ 0,5,11,17,15,17,18,5,10,10,13,15,8,11,
6,14,15,14,14,13,17,13,15,15,15,15,5,9,12,14,12,10,17,17,14,15,15,12,12,16,15,13,12,14,
12,17,15,17,14,18,14,15,15,15,17,17,17,18,15,8,14,8,15,18,11,13,14,13,14,15,16,15,13,13,
13,15,13,15,13,15,14,14,13,13,15,13,16,17,16,16,13,12,3,12,17, };
static unsigned short stb__consolas_31_usascii_h[95]={ 0,23,8,20,27,23,22,8,30,30,14,16,11,3,
6,26,22,20,21,22,20,21,21,20,22,21,17,22,18,9,18,23,29,20,20,22,20,20,20,22,20,20,21,20,
20,20,20,22,20,27,20,22,20,21,20,20,20,20,20,29,26,29,10,3,7,17,23,17,23,17,22,23,22,22,
29,22,22,16,16,17,23,23,16,17,22,17,16,16,16,23,16,29,32,29,7, };
static unsigned short stb__consolas_31_usascii_s[95]={ 250,226,45,219,103,232,156,248,5,16,228,
181,242,87,248,138,175,186,47,224,201,33,62,170,17,107,250,238,1,30,237,
168,71,152,137,191,106,93,80,207,48,34,78,1,243,225,209,138,176,119,122,
1,64,91,16,123,191,157,141,53,153,62,14,99,57,74,179,60,16,44,91,
31,63,77,89,47,124,151,167,28,194,1,137,14,108,88,102,119,211,209,197,
40,1,27,69, };
static unsigned short stb__consolas_31_usascii_t[95]={ 19,1,120,81,1,1,34,34,1,1,102,
102,102,120,43,1,34,81,57,34,81,58,57,81,58,57,1,34,102,120,81,
1,1,81,81,34,81,81,81,34,81,81,57,81,57,57,57,34,57,1,81,
58,81,57,81,57,57,57,57,1,1,1,120,120,120,102,1,102,34,102,34,
34,34,34,1,34,34,102,102,102,1,34,102,102,34,102,102,102,102,1,102,
1,1,1,120, };
static unsigned short stb__consolas_31_usascii_a[95]={ 273,273,273,273,273,273,273,273,
273,273,273,273,273,273,273,273,273,273,273,273,273,273,273,273,
273,273,273,273,273,273,273,273,273,273,273,273,273,273,273,273,
273,273,273,273,273,273,273,273,273,273,273,273,273,273,273,273,
273,273,273,273,273,273,273,273,273,273,273,273,273,273,273,273,
273,273,273,273,273,273,273,273,273,273,273,273,273,273,273,273,
273,273,273,273,273,273,273, };

// Call this function with
//    font: NULL or array length
//    data: NULL or specified size
//    height: STB_FONT_consolas_31_usascii_BITMAP_HEIGHT or STB_FONT_consolas_31_usascii_BITMAP_HEIGHT_POW2
//    return value: spacing between lines
static void stb_font_consolas_31_usascii(stb_fontchar font[STB_FONT_consolas_31_usascii_NUM_CHARS],
                unsigned char data[STB_FONT_consolas_31_usascii_BITMAP_HEIGHT][STB_FONT_consolas_31_usascii_BITMAP_WIDTH],
                int height)
{
    int i,j;
    if (data != 0) {
        unsigned int *bits = stb__consolas_31_usascii_pixels;
        unsigned int bitpack = *bits++, numbits = 32;
        for (i=0; i < STB_FONT_consolas_31_usascii_BITMAP_WIDTH*height; ++i)
            data[0][i] = 0;  // zero entire bitmap
        for (j=1; j < STB_FONT_consolas_31_usascii_BITMAP_HEIGHT-1; ++j) {
            for (i=1; i < STB_FONT_consolas_31_usascii_BITMAP_WIDTH-1; ++i) {
                unsigned int value;
                if (numbits==0) bitpack = *bits++, numbits=32;
                value = bitpack & 1;
                bitpack >>= 1, --numbits;
                if (value) {
                    if (numbits < 3) bitpack = *bits++, numbits = 32;
                    data[j][i] = (bitpack & 7) * 0x20 + 0x1f;
                    bitpack >>= 3, numbits -= 3;
                } else {
                    data[j][i] = 0;
                }
            }
        }
    }

    // build font description
    if (font != 0) {
        float recip_width = 1.0f / STB_FONT_consolas_31_usascii_BITMAP_WIDTH;
        float recip_height = 1.0f / height;
        for (i=0; i < STB_FONT_consolas_31_usascii_NUM_CHARS; ++i) {
            // pad characters so they bilerp from empty space around each character
            font[i].s0 = (stb__consolas_31_usascii_s[i]) * recip_width;
            font[i].t0 = (stb__consolas_31_usascii_t[i]) * recip_height;
            font[i].s1 = (stb__consolas_31_usascii_s[i] + stb__consolas_31_usascii_w[i]) * recip_width;
            font[i].t1 = (stb__consolas_31_usascii_t[i] + stb__consolas_31_usascii_h[i]) * recip_height;
            font[i].x0 = stb__consolas_31_usascii_x[i];
            font[i].y0 = stb__consolas_31_usascii_y[i];
            font[i].x1 = stb__consolas_31_usascii_x[i] + stb__consolas_31_usascii_w[i];
            font[i].y1 = stb__consolas_31_usascii_y[i] + stb__consolas_31_usascii_h[i];
            font[i].advance_int = (stb__consolas_31_usascii_a[i]+8)>>4;
            font[i].s0f = (stb__consolas_31_usascii_s[i] - 0.5f) * recip_width;
            font[i].t0f = (stb__consolas_31_usascii_t[i] - 0.5f) * recip_height;
            font[i].s1f = (stb__consolas_31_usascii_s[i] + stb__consolas_31_usascii_w[i] + 0.5f) * recip_width;
            font[i].t1f = (stb__consolas_31_usascii_t[i] + stb__consolas_31_usascii_h[i] + 0.5f) * recip_height;
            font[i].x0f = stb__consolas_31_usascii_x[i] - 0.5f;
            font[i].y0f = stb__consolas_31_usascii_y[i] - 0.5f;
            font[i].x1f = stb__consolas_31_usascii_x[i] + stb__consolas_31_usascii_w[i] + 0.5f;
            font[i].y1f = stb__consolas_31_usascii_y[i] + stb__consolas_31_usascii_h[i] + 0.5f;
            font[i].advance = stb__consolas_31_usascii_a[i]/16.0f;
        }
    }
}

#ifndef STB_SOMEFONT_CREATE
#define STB_SOMEFONT_CREATE              stb_font_consolas_31_usascii
#define STB_SOMEFONT_BITMAP_WIDTH        STB_FONT_consolas_31_usascii_BITMAP_WIDTH
#define STB_SOMEFONT_BITMAP_HEIGHT       STB_FONT_consolas_31_usascii_BITMAP_HEIGHT
#define STB_SOMEFONT_BITMAP_HEIGHT_POW2  STB_FONT_consolas_31_usascii_BITMAP_HEIGHT_POW2
#define STB_SOMEFONT_FIRST_CHAR          STB_FONT_consolas_31_usascii_FIRST_CHAR
#define STB_SOMEFONT_NUM_CHARS           STB_FONT_consolas_31_usascii_NUM_CHARS
#define STB_SOMEFONT_LINE_SPACING        STB_FONT_consolas_31_usascii_LINE_SPACING
#endif

