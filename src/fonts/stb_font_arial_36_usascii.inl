// Font generated by stb_font_inl_generator.c (4/1 bpp)
//
// Following instructions show how to use the only included font, whatever it is, in
// a generic way so you can replace it with any other font by changing the include.
// To use multiple fonts, replace STB_SOMEFONT_* below with STB_FONT_arial_36_usascii_*,
// and separately install each font. Note that the CREATE function call has a
// totally different name; it's just 'stb_font_arial_36_usascii'.
//
/* // Example usage:

static stb_fontchar fontdata[STB_SOMEFONT_NUM_CHARS];

static void init(void)
{
    // optionally replace both STB_SOMEFONT_BITMAP_HEIGHT with STB_SOMEFONT_BITMAP_HEIGHT_POW2
    static unsigned char fontpixels[STB_SOMEFONT_BITMAP_HEIGHT][STB_SOMEFONT_BITMAP_WIDTH];
    STB_SOMEFONT_CREATE(fontdata, fontpixels, STB_SOMEFONT_BITMAP_HEIGHT);
    ... create texture ...
    // for best results rendering 1:1 pixels texels, use nearest-neighbor sampling
    // if allowed to scale up, use bilerp
}

// This function positions characters on integer coordinates, and assumes 1:1 texels to pixels
// Appropriate if nearest-neighbor sampling is used
static void draw_string_integer(int x, int y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0, cd->t0); glVertex2i(x + cd->x0, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t0); glVertex2i(x + cd->x1, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t1); glVertex2i(x + cd->x1, y + cd->y1);
        glTexCoord2f(cd->s0, cd->t1); glVertex2i(x + cd->x0, y + cd->y1);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance_int;
    }
    glEnd();
}

// This function positions characters on float coordinates, and doesn't require 1:1 texels to pixels
// Appropriate if bilinear filtering is used
static void draw_string_float(float x, float y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0f, cd->t0f); glVertex2f(x + cd->x0f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t0f); glVertex2f(x + cd->x1f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t1f); glVertex2f(x + cd->x1f, y + cd->y1f);
        glTexCoord2f(cd->s0f, cd->t1f); glVertex2f(x + cd->x0f, y + cd->y1f);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance;
    }
    glEnd();
}
*/

#ifndef STB_FONTCHAR__TYPEDEF
#define STB_FONTCHAR__TYPEDEF
typedef struct
{
    // coordinates if using integer positioning
    float s0,t0,s1,t1;
    signed short x0,y0,x1,y1;
    int   advance_int;
    // coordinates if using floating positioning
    float s0f,t0f,s1f,t1f;
    float x0f,y0f,x1f,y1f;
    float advance;
} stb_fontchar;
#endif

#define STB_FONT_arial_36_usascii_BITMAP_WIDTH         256
#define STB_FONT_arial_36_usascii_BITMAP_HEIGHT        154
#define STB_FONT_arial_36_usascii_BITMAP_HEIGHT_POW2   256

#define STB_FONT_arial_36_usascii_FIRST_CHAR            32
#define STB_FONT_arial_36_usascii_NUM_CHARS             95

#define STB_FONT_arial_36_usascii_LINE_SPACING          23

static unsigned int stb__arial_36_usascii_pixels[]={
    0x355100aa,0x50015500,0x01530055,0x44000000,0x0019aaa9,0x004c0000,
    0x5554c400,0x22000009,0x00009aa9,0x1544154c,0x00000000,0x8002aa60,
    0x2e0001a9,0x3ffe604f,0x80bfe00d,0x4407fff9,0x2ffd00ff,0x06fffffa,
    0x7ffff540,0x01ceffff,0x7fffffd0,0x4000bf00,0xffffffda,0xb30001cf,
    0xbffffffd,0x13f60005,0xd9501fea,0x4fb617bf,0xdfd934ed,0xffe88037,
    0xff8803ff,0x7fdffa01,0x7cc07fa6,0x3fe05fff,0xfffff102,0x3a03fd80,
    0xfffff57f,0xfff7100d,0xfffddfff,0xe801bfff,0x303fffff,0x0179ffb7,
    0x3ffffa20,0x5fffffff,0x7fffdc00,0xefffffff,0x41ffc000,0xffd105fc,
    0xff1dffff,0x3fe77fa9,0x205fffff,0x3ffecffe,0x3a02fe40,0x7d4dff7f,
    0x3ffa6206,0x2a05ff00,0x7d401cff,0x98bff406,0x4406ff99,0x00adfffe,
    0x05ffff93,0x04ccfff4,0x3fffff62,0x7cc02fff,0xb9abdfff,0x00effffd,
    0x5efffec4,0xffffda9a,0x3ff1001e,0x3f609fd0,0xefea9adf,0xffdfd4ff,
    0x7ffd5359,0x7dc1ff70,0x03ff100f,0x8dff7fe8,0x7fd403fe,0x3205ff02,
    0x2ff8807f,0xff80cc40,0x33ffe606,0x7ffdc000,0xd80ffd02,0xffefdfff,
    0xfff102ff,0xfffa803f,0x1fffec06,0x03fffe60,0x7fc1fea0,0xb04ffc82,
    0x3ffa9fff,0x1ffd883f,0x1ffc27f4,0x98805fc8,0x7fb8dff1,0xf81ffc40,
    0x00dfb02f,0xf0000ff7,0x3ffe60df,0x3fa20001,0x207fe81f,0x2bf1effb,
    0xfd80fffc,0xff5000df,0x3bfea07f,0xbfff3000,0xf30df700,0x06ff881f,
    0xffea7ffc,0xf1bfe605,0x109fd07f,0xff0001ff,0x203ff88d,0x5ff03ff8,
    0x3a01bfa0,0xff80004f,0x001dfd06,0x81dfd100,0x3ffe07fe,0x2ffe97e0,
    0x000fffcc,0x3a03fff2,0x7d4002ff,0x27ec01ff,0x7fcc3fd4,0xea7fdc03,
    0x3fec01ff,0xbfb05ff1,0x20009f90,0x06fd86ff,0x7fc13fe2,0xa80bfd02,
    0x5ed801ff,0xff90dff0,0x33bb2601,0xff9932e1,0xf883ff43,0xff52fc5f,
    0x004ffc89,0xfb87ffb0,0xff90005f,0x7f7775c9,0xfeeeeeef,0x3ff72eef,
    0xfd4ff980,0x43ff700f,0x44fe82ff,0xdb000ff8,0x3ee1bfeb,0x413fe02f,
    0x0bfd02ff,0xfd007fe8,0xf31bfe0f,0xfffd307f,0x17fe5fff,0x07fe8dfb,
    0x45f89ff3,0x001fff01,0xfb1bfee0,0x3e60003f,0x3ffff27f,0xffffffff,
    0xff93ffff,0xd4ff8801,0x5ff500df,0x1ff41ff4,0xfe8013f6,0xff10dff7,
    0xf827fc07,0x80bfd02f,0xffd004ff,0xbfb1bfe0,0x77bfff30,0x89ff9ffd,
    0x1ffa1ffb,0x17e37fc4,0x001ffe60,0x3e0fff98,0xf10000ff,0x3332a3ff,
    0xcccccffd,0xfd2ccdff,0x29ff001f,0xff9805fe,0xff31bf24,0x0007fcc3,
    0x41bfeffd,0x17fe05ff,0x5ff817fc,0x400ffe20,0x4dff07fe,0x7fc42ff8,
    0xffffb83f,0xfd1ffc42,0xf07ff40f,0x0dff500b,0x8fffc400,0x40007ff8,
    0xdf702ffe,0xfb01ff30,0x29ff001f,0xffa805fe,0x32bbfe23,0x027ec4ff,
    0x37fdffa0,0x3fa06fe8,0x3e05ff05,0x0bfea04f,0xff83ff40,0x3f21fea6,
    0x3fff603f,0x3fa4fe80,0x4ffff207,0x4ffb805f,0x97ff4000,0x40006ff9,
    0x9fb03ffd,0x3f20ff70,0xa7fc401f,0xffb806fe,0x7ffffd41,0x003fe60d,
    0x1bfeffd0,0xff903fec,0xf505ff01,0x0ffdc03f,0xff07fe80,0x3e227ecd,
    0x3ffd407f,0x1ffa5fc8,0xbfdfffb0,0x04ffc801,0xa97fec00,0x640005ff,
    0x05ff04ff,0x3fee0bf9,0xea7fcc03,0x07fc807f,0xfb059971,0x3a013109,
    0x320dff7f,0xbff100ff,0x7c42ff81,0x07fe406f,0xff07fe80,0x3ea17fcd,
    0x2ffcc03f,0x1ffa4fd8,0x3fffff60,0x9ff702df,0x1ffe8000,0x8000dff3,
    0xff883ffc,0xf103fe81,0x4ffd80df,0x7c407ffd,0xff30006f,0x7ffff441,
    0x6ffbff42,0x4405ff70,0x8bfe4ffe,0x7401effe,0x1ffa007f,0x83ff37fc,
    0x7d400ffc,0x747ff03f,0xfd71007f,0xa81dffff,0x7c0006ff,0x01ffe0ff,
    0x505ffd00,0x80bfe0ff,0xff303ffc,0x03fffa9f,0x80017fec,0x3ffa24fd,
    0x3fa2fffd,0x3ea0dff7,0x37fc403f,0x1bfe25ff,0xd0037fc0,0x45bfe0ff,
    0x03ff40ff,0x7cc0ffdc,0x001ffa1f,0x3ffffbbe,0x001ffe60,0x7f47ff88,
    0x3fe0000f,0xffb9951f,0x9ffb9999,0x7fc45999,0xfff711cf,0x3ffffa9f,
    0x07ffb30a,0xb83fe600,0x4df911ff,0x20dff7fe,0x36203ffb,0x44bfe6ff,
    0xff803fff,0x41ffa007,0x41ff36ff,0xfd805ff8,0x20ffb80f,0x5f8007fe,
    0xff89ffd3,0xff50000f,0x001ffc8b,0x7e4fff10,0xffffffff,0x3fffffff,
    0x7fffff4c,0xfd4ffcff,0xffffffbf,0x7f4000bf,0x3e227f43,0x3feffd2f,
    0x405ff906,0x3fe0aefe,0x013fee22,0x3a001ffd,0x22dff07f,0x17fe21ff,
    0xd10dff10,0x007fe8bf,0x1ffe25f8,0x0080bff9,0xffa87ffd,0x9ffb0006,
    0x66ffe654,0xccefeccc,0xfff902cc,0x29ff33df,0xffff77fe,0x7d40007b,
    0x7417fc0f,0x3feffd3f,0x203ffb06,0x2ff82ffa,0x3601ffc8,0xffd001ff,
    0x2ff9bfe0,0x3f2037fc,0x40ffd84f,0x5f8007fe,0xff30fff4,0x70efc03f,
    0xff881dff,0x7fcc002f,0x80ff881f,0xa88003fe,0x7f53fe60,0x80001447,
    0x0ffc43fe,0xf7fea7f4,0x03ffe0df,0x2ff837ec,0x3603ff88,0xffd003ff,
    0x2ff9bfe0,0xf9807fec,0x1ffe42ff,0xeca83ff4,0x3ff22fc0,0x4077fe42,
    0xffadfffa,0x3fff701f,0x17ffa200,0x7fc43fd4,0xff300001,0x0001ffa9,
    0x7c43fd40,0xfd4fe82f,0x3e21bfef,0x417fe07f,0x09ff02ff,0xe8027fdc,
    0x6cdff07f,0x06ffdc5f,0x44bfffea,0xffd06ffc,0xbf0fff20,0x7441ffe8,
    0xfd982fff,0x6c04ffff,0x7d403fff,0xbf900eff,0x0001ff30,0x7f53fe60,
    0xfd000007,0x3e0bfe07,0x3feffd2f,0x204ff986,0x05ff04ff,0xff8817fa,
    0x20ffd005,0x03fea6ff,0xfb57fffb,0xff9fffdf,0x1ffa01bf,0x97e37fcc,
    0xfd107ff8,0x97359dff,0x803fffff,0xacefffd8,0xefffeca9,0x2e13f601,
    0x2600006f,0x00ffd4ff,0x40ff5000,0x8ffcc5fd,0x50dff7fe,0x27fc05ff,
    0xbfd02ff8,0xd006fe80,0x89bfe0ff,0x7ff443ff,0xffb8efff,0x7403ffff,
    0x8bffe07f,0x817ff25f,0xffffffd8,0xffffffff,0x7ffe400c,0xffffffff,
    0x417fc00d,0x200005fc,0x0ffd4ff9,0x07fd0000,0x7dceffcc,0x7fdffa4f,
    0x7c07fc86,0x205ff04f,0x7fdc06fe,0xf07fe800,0x41ffc8df,0x643dfdb8,
    0x4c41bdfe,0x5c0ffd09,0xadf8bfff,0x9800fffe,0xfffffffc,0x3fffe98c,
    0x7fffe440,0x8801cfff,0x03fe80ff,0x53fe6000,0x400007fe,0xffb806fb,
    0x3fa0dfff,0xff88dff7,0xf827fc04,0x80dfd02f,0xfe804ff8,0xfd0dff07,
    0x8800001d,0x01ffa6fe,0xfffffff7,0x30005fff,0x3aa01353,0x2a62003f,
    0x15440019,0x00000aa8,0x15546aa2,0x0bb60000,0x01ef64c0,0x401ff900,
    0x5ff03ff8,0x2e01bf60,0x37fc00ff,0xff886ff8,0xd100000e,0x03ff41ff,
    0x7fffff54,0x000000df,0x00000170,0x00000000,0x00000000,0x10000000,
    0xff8805ff,0x3605ff03,0x07fd007f,0xdff06ff8,0x00fffea0,0x83fff700,
    0x2a2007fe,0x000001ef,0x00000000,0x00000000,0x00000000,0x2e000000,
    0x1ffc806f,0x3ee05ff0,0x0ffa802f,0x3e0bff50,0x3ffaa06f,0xd93001ce,
    0xffd03dff,0x500bf000,0x99999999,0x99999999,0x00000199,0x00000000,
    0x00000000,0x80000000,0xffb101ff,0x817fc0ff,0x405efff8,0x7ff743fd,
    0xfffff52f,0xffff500d,0xdb999bdf,0x405fffff,0x03fffffe,0xffb805f8,
    0xffffffff,0xffffffff,0x00000001,0x00000000,0x00000000,0x3ea00000,
    0x3fffe605,0xb80bfe01,0x7cc07fff,0x97fffe66,0x06fffffa,0x3ffffee0,
    0xffffffff,0x7fff400c,0x01a803ff,0xaaaaaa98,0xaaaaaaaa,0x0000aaaa,
    0x00000000,0x00000000,0x00000000,0xe9803b60,0x177400cd,0x201b7260,
    0x59b931ec,0x2aaaaa88,0xb9753000,0x4003799b,0x00aaaaaa,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0xa9800000,
    0xa880001a,0x80000802,0x00080000,0x00000000,0x00800000,0x00000400,
    0x4d4c4000,0x80000000,0x980000aa,0x80001aa9,0x1effffe9,0x417f2000,
    0x0bdfffeb,0x9dffb700,0x7fed4003,0xffd00def,0xfb800000,0xdfd9304f,
    0x4413b619,0x03efffdc,0x7bfffb30,0xff300001,0x3ffb6209,0x701defff,
    0xfa8009ff,0x0007fb4f,0x3ffffae2,0x4000deff,0xfffffffa,0x5fd0001f,
    0xfffffe88,0x36200eff,0xffffffff,0x7fffec00,0xfe83ffff,0x5c000007,
    0x7ff444ff,0xfe9fffff,0xffffe985,0x3200efff,0xefffffff,0x7fcc0000,
    0xfffff984,0x82ffffff,0x54004ffb,0x00df74ff,0xffffff70,0x05ffffff,
    0x44bffe20,0x88006ffc,0x7fff40ff,0x0effeb9c,0x337fffd0,0x7e40dff7,
    0xffeaadff,0x003ff42f,0x13fee000,0xd757dffb,0xf98bffff,0xffc9bdff,
    0x7fff705f,0x03fff953,0x227fcc00,0x9abefffb,0x44fffeba,0x54004ffb,
    0x01ff14ff,0x3bfff620,0xfeca99bc,0xffb805ff,0x000ffe84,0x3ff237d4,
    0x709ff705,0xff301dff,0x01fff30b,0x7f41fff5,0x5c000007,0x13ff24ff,
    0x362fffe4,0xffe883ff,0x4077fc42,0x20005ffb,0x7ffc4ff9,0x0fffd403,
    0xa8009ff7,0x00bfa4ff,0x4027ffe4,0x6402fffb,0x1ffc81ff,0x3a27ec00,
    0xfff101ff,0x201fff88,0x7fdc3ffb,0xe87ffa04,0x4000007f,0xdff14ffb,
    0x265ffe80,0x3fea05ff,0xb01ffe45,0x260001ff,0x1bfe64ff,0xf71ffdc0,
    0xffa8009f,0x2a013f24,0x2a001fff,0x7fdc06ff,0x8007fe83,0x1bfe21ff,
    0x7d43ffb0,0x45ff804f,0x3ee01ffd,0x001ffa3f,0x29ff7000,0x7d402ffa,
    0x003ff65f,0x0fff89bb,0x0013fea0,0xff727fcc,0x9bfe2005,0x54004ffb,
    0x01fea4ff,0x2000fffe,0x3e601ffe,0x13fea0ff,0x220ff300,0x707fec00,
    0xffb007ff,0x3203ffc8,0x45ffa2ff,0x002cefec,0xfca7fdc0,0xaffc400f,
    0x10004ff8,0xdff00bff,0x9eff6540,0x3fee4ff9,0xb8f2e004,0x7d4004ff,
    0x807fe24f,0x50006ff9,0xffd803bf,0x003fff76,0x10005fb8,0x1ffc8dff,
    0x261ffc80,0xfff106ff,0x7fcfff41,0x004fffff,0x7ed3fee0,0x26bff007,
    0xf50002ff,0x1ffd009f,0xfffffe88,0x264ffaef,0x20000fff,0x54004ffb,
    0x01fec4ff,0x00009ff9,0xfffff100,0xfd0001df,0xffd10007,0x802ffb87,
    0x7ff42ffd,0x17ff260b,0x37bffffd,0x000bfff7,0x3ff53fee,0xff55fe80,
    0x337f6e23,0x007ff701,0xffd83ffb,0xfffebabe,0x67fff44f,0x4ffb8001,
    0x227fd400,0x3ffe05fb,0x50000002,0x000bffff,0x54003fe2,0xa82fffec,
    0xfff803ff,0xedfffc82,0xffe83fff,0x2ffe883f,0xd4ffb800,0xbff001ff,
    0x3fe63fee,0xb83fffff,0xffd802ff,0x6c13ff21,0x7f444fff,0x00bdffff,
    0x4004ffb8,0x3fcc4ffa,0x0003fff0,0xffff7000,0x3ea0005f,0x3fffa006,
    0x1fff103f,0x81fffdc0,0x3ffffffc,0x4c0bffd0,0xfb8006ff,0x801ffb4f,
    0x5ff95ff8,0xffd99dff,0x02ffc89f,0xff12ffc8,0x84fff80d,0xffffffd8,
    0xff701cff,0x4ffa8009,0xff882ff8,0x44000007,0xfffefffd,0x04fc8000,
    0x3fffbbe0,0x0dffc80c,0x43ffff98,0xfeefffd8,0x1ffe84ff,0x0007fec0,
    0x7fdd3fee,0xdaffd402,0xfa83ffff,0x07ff21ff,0x7ccbff20,0x27fdc03f,
    0xfffff930,0xff709fff,0x4ffa8009,0xff984fc8,0xeeeec806,0xe886eeee,
    0xffe89eff,0xfd0166c6,0x7fe40005,0x7fffc41f,0xfcffcbac,0x0bffea2f,
    0xfe83bff2,0x02ffb807,0xf8a7fdc0,0xafff406f,0x2a03fffd,0x07ff26ff,
    0x7dcbff20,0x27fcc01f,0xfffdb980,0x3fee0eff,0x27fd4004,0x7fc437d4,
    0xffffd807,0xfc87ffff,0xa7ffc46f,0xff306ff9,0xffb80001,0xffffe984,
    0x2ffa9fff,0xfb807ffa,0x201bfa4f,0x5c003ffa,0x13ff24ff,0xfcafffe4,
    0x0ffe806f,0xf9005ff7,0x003ff23f,0x20009ff1,0x2e6fffd9,0x7d4004ff,
    0x40ff884f,0xfd807ff8,0x7fffffff,0x5407ffc4,0x3ffbbfff,0x0000bf70,
    0xfec81ffa,0x3ff71cef,0x3a013fe2,0x2017fa6f,0x5c004ffa,0x3ffa24ff,
    0xfffebace,0x009ff75f,0x3fea3ff9,0xd1ffd803,0x13fe00ff,0x3fff5000,
    0x70013fea,0x0ffa09ff,0x80007ffe,0x2ffd47ff,0xffffff70,0x000ff601,
    0x400ffec0,0xf70ffc80,0x3ff9005f,0x3ea017fa,0x7fdc003f,0x7fffec44,
    0x75ff9eff,0xff7007ff,0x200ffe65,0x1ffb0ffd,0x2e69ff00,0x7fdc001c,
    0x800bff53,0xbf903ffc,0x0007ffb0,0x3ff23ffc,0x7fffec03,0x4407fe04,
    0xffc800a9,0x4dfd0002,0xfb801ffc,0x700dfd3f,0x026e43ff,0x32a07ff7,
    0x9ff13dfe,0x32013fea,0x09ff11ff,0x7fdcdff0,0x9a7fc401,0x7cc005ff,
    0x00dff35f,0xf303ffd8,0x00dff50f,0x3ee3ffc0,0xfffe806f,0x5c0ff301,
    0xffd803ff,0x98057511,0x0ffee5ff,0x7f47ff20,0x07fec00f,0x7fe40dff,
    0x4ff98003,0xfb00dff1,0x4c07ff8f,0x0bfea5ff,0x7fc9ff50,0x1ffd4007,
    0x22001fff,0x3fe01fff,0x004fff81,0xff98fff0,0x3ffa201f,0x04fc80ef,
    0xf101bfe6,0x407ff8ff,0x3fe61ffc,0xd0ffe805,0x7fc405ff,0xd807ff46,
    0x015732ff,0x3f23ffa8,0x17fe201f,0x7e405ff7,0x01bfe22f,0x7fe49ffb,
    0x87ff6004,0xf7006ffd,0x84fd80ff,0x4003fffa,0xffe87ffa,0xffffd105,
    0x02fe81df,0xfd01fff4,0x03ffd87f,0xffd0bff5,0xd2ffe409,0x3f603fff,
    0x427fe42f,0xff30fffa,0x07ffc40b,0x3601fff1,0x77fc43ff,0xd85ff980,
    0xfff503ff,0x077ffd49,0x98dffb10,0x7dc05fff,0x37dc03ff,0x01dfffc8,
    0x43ffff4c,0xa9adfff9,0xffbefffc,0x01ff10ef,0x12dfff98,0xf30dffd5,
    0x3f2639ff,0xfff981ff,0x3fff661c,0x2bffffa0,0x10bffd30,0xfb79ffff,
    0x2fff89ff,0xd85ffd88,0xfb30beff,0x3bff209f,0x01fff511,0x5c473ffa,
    0x7d44ffff,0xcabcefff,0xc81efffd,0xbacdffff,0x806fffec,0xff900ff8,
    0xb957bfff,0x01bfffff,0x3fffffea,0x3fea4fff,0x200df53f,0xfffffffa,
    0xff700dff,0x3fffffff,0x7ffffd40,0x741effff,0xfffffcdf,0xff700dff,
    0x09ffffff,0xd9bffff5,0x7e40bfff,0x5fffffff,0x7ffffec0,0x3e202fff,
    0xafffffff,0xfff984ff,0xffffffff,0x3fff200e,0xffffffff,0x80bfa005,
    0xfffffffa,0x01efffff,0xfffffd88,0x365fa82d,0x3f62004f,0x802fffff,
    0xcfffffe9,0xfffd8800,0xbfd04fff,0x0fffffee,0x3ffffea0,0x3ffee03e,
    0x805fffff,0x3dffffea,0xfffff700,0xfd71005d,0x13fe3dff,0x7fff6e44,
    0xb3003dff,0xbfffffff,0x04fc8005,0xfffffda8,0x10002cef,0xaa830035,
    0x13530000,0x03531000,0x004d4400,0x8000a880,0x2a000998,0x0001bddc,
    0x22000153,0x5100009a,0xa9880001,0x26620000,0x100009aa,0xa9980055,
    0x00000001,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x53100000,0x02000355,0x001aa980,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00777440,
    0xffffffb3,0x7d50019f,0xfffff900,0xf0003ff4,0xffffffff,0x7fffffff,
    0x0007ffee,0xff51bff6,0x7fc4003f,0x013fee1f,0x400fffec,0x3ff26ff8,
    0xfff10004,0x4c003ff4,0xffffffff,0xffffffff,0x3fffee7f,0xffffffff,
    0x9ffe02ce,0xff11fff9,0xfffb101f,0xffffffff,0x01ffd407,0x97ffffee,
    0x3e0007fe,0xffffffff,0x3fffffff,0x5001bffa,0xffb01fff,0x1fff400d,
    0x7c01bfe6,0xfa803fff,0x01ffe64f,0xfd27fdc0,0xfff3000f,0xffffffff,
    0x4fffffff,0xfffffffb,0xffffffff,0x7ccfff03,0x1fff11ff,0xadfffe98,
    0xffffdb99,0x807ff503,0x2099cfff,0x320007fe,0xcccccccc,0x3fffdccc,
    0x400fffe6,0xd103fff8,0xff9009ff,0x003ffe0b,0x00dffff3,0xffe85ff9,
    0x1ffe8002,0x22001ffa,0xeccccccc,0xcccccdff,0x2b7fee4c,0xccaaaaaa,
    0xff85ffff,0x447ffe67,0xeffe84cc,0x3fff2200,0x203ffa81,0x3fa07ff8,
    0x20000007,0xffb85ffe,0x5ffc800f,0x017ffcc0,0x3201dff5,0x7fe402ff,
    0x7f400ffc,0x02ffdc0f,0xfd1bfe60,0xf900000f,0x3fee005f,0x3fff2004,
    0xff33ffc1,0xfff9003f,0x1bff2003,0xf880ffea,0x01ffa05f,0x7fec0000,
    0x0bffd00e,0x800fff98,0xf880fffc,0x3fea01ff,0x7d6ff404,0x1bfe202f,
    0x8003ffe2,0x3ff43ffc,0x7fe40000,0x09ff7002,0x7c3ffe80,0x07ffe67f,
    0x007fff30,0xea8fffc4,0x41eeeffe,0x3fa04ff9,0xc8000007,0x3e601fff,
    0x3ffa02ff,0x17ffa002,0xf100fffa,0x9ffc40df,0x3fea04ff,0x005ffb03,
    0x3fa07ffc,0xfc800007,0x9ff7002f,0x45ffb800,0x3ffe67ff,0x02ffdc01,
    0xfb8dee40,0x91ffffff,0xbddfffdd,0xfb917fe8,0x400017bf,0xb802fffa,
    0xffc80fff,0x7ffc4005,0x4017ff23,0x3fea07fe,0x7e40ffb1,0x0bff501f,
    0x3a13fe60,0x37bae07f,0x05ff9000,0x0013fee0,0x7ff8dff3,0xd003ffe2,
    0x200005ff,0xaadffca8,0xffffffb0,0xe9ffe8df,0x0effffff,0x4fff9800,
    0x317ffa00,0x70001fff,0xfff31fff,0x07ff2001,0x3ff73fe4,0xfd01ffa0,
    0x3ffb001f,0x3ee0ffd0,0x3f2000ef,0x9ff7002f,0x45ffb800,0x07ffc7ff,
    0x003fff10,0x83ffa800,0xaadffba9,0x77ffff42,0x06fffdbc,0x02fff440,
    0xe8bffe60,0x360002ff,0x01ffedff,0x7c0ffea0,0x20ffe64f,0x7e405ff8,
    0x37fc403f,0xffb87fe8,0x7fe4000e,0x09ff7002,0x21fff440,0x03ffc7ff,
    0x0001ffe6,0x980ffea0,0x3ffa04ff,0x1ffe884f,0x03bff600,0x5dbfee00,
    0x440004ff,0x004fffff,0x7cc2ffc4,0x542ffc2f,0x7fc403ff,0x81ffd406,
    0x77fdc7fe,0x2ffc8000,0x009ff700,0xf0dfff53,0x407ff8ff,0x00006ff9,
    0x2603ffa8,0x3ffa04ff,0x00bfea05,0x000fffe4,0xdff9ffd0,0xff500001,
    0x3fa000df,0x6c0ffb87,0x07fe40ff,0xb00ffec0,0x9ffa01ff,0x0000effb,
    0x2e005ff9,0xeeeeefff,0xeffffffe,0x7f47ff81,0x037fd407,0x1ffd4000,
    0x7409ff30,0x3fe602ff,0x2fffa804,0x7ffcc000,0x500001ff,0x0001ffff,
    0x6fd81ff9,0x7f42ffa8,0x09ff5006,0xfe817fe2,0x001dff77,0x8017fe40,
    0xfffffffb,0x4fffffff,0xdfb1ffe0,0x007ff880,0x03ffa800,0xfe813fe6,
    0x17fe200f,0x009fff30,0x13fff200,0x7ffc4000,0xf98005ff,0x20ffe22f,
    0x3fe24ff8,0x41bfe004,0x3fa02ffb,0x000fffaf,0x8017fe40,0xeeeefffb,
    0x801efffe,0x237ec7ff,0x03ffe199,0x7ff50000,0xd027fcc0,0x5ff880ff,
    0x017ffa20,0x00fff000,0x7e7fec00,0xff8003ff,0x7407fea4,0x00bfea6f,
    0xfe81ffc8,0x7ffff407,0x640004ff,0xff7002ff,0x3bff6209,0x323ffc01,
    0x43ffe25f,0x00001ffd,0xf301ffd4,0x03ff409f,0xfd817fe2,0x400000ef,
    0x700007ff,0x3ffeedff,0x937ec001,0x93fe40ff,0x7cc001ff,0x027fcc4f,
    0x3ffbfffa,0x3f20001f,0x9ff7002f,0x00effd80,0x49f91ffe,0xff90fff8,
    0x7bf30005,0x2603ffa8,0x1ffa04ff,0x320bff10,0x00001fff,0x80007ff8,
    0x3f61fff9,0x7fdc006f,0x7d40bfd0,0x000bfd1f,0x0ffc8ffd,0x5477ff40,
    0x90000eff,0x3ee005ff,0x6ffe804f,0x9f71ffe0,0xfa87ffc4,0xffc8004f,
    0x301ffd44,0x3ff409ff,0x2a17fe20,0x00002fff,0x8000fff0,0x7c43ffe8,
    0x3e6004ff,0x403ff9af,0x007ff3ff,0x7fc5ff70,0x6c7fe805,0xf90004ff,
    0x3fee005f,0x4fff9804,0x3fb8fff0,0x3ffe27c8,0x3ffe2001,0x301ffd41,
    0x3ff409ff,0xf317fe20,0x000007ff,0x20003ffc,0xff505ffd,0x5ffc005f,
    0x7ec00ffb,0x8001ff9d,0x5ff55ff8,0xf88ffd00,0xfc8001ff,0x9ff7002f,
    0x0bffee00,0x01311ffe,0x0effc8bd,0x30dffb00,0x7fcc09ff,0x101ffa04,
    0x7ff44bff,0x7c000005,0x3ee0007f,0x3ff200ff,0xbbfb000f,0x7df700df,
    0x7ec000ff,0x3a00ffb7,0x0effa87f,0x017fe400,0x2004ffb8,0x7fc0effe,
    0x887f5007,0x2201efff,0xf981fffd,0x7cc1abff,0x01ffa04f,0x7fecbff1,
    0xf8000005,0xff30007f,0xffe8805f,0xffff7005,0xfdff3009,0x7fcc000b,
    0xfd004ffa,0x013ff60f,0x2005ff90,0x26004ffb,0x3ffc4fff,0x05f88666,
    0x5bfffff3,0x5ffff953,0x1fffff40,0xfe813fe6,0xaaffc407,0xeeeeefff,
    0xeeeeeeee,0x1ffe005e,0x13ffa200,0x01fffcc0,0x017fffc4,0x002ffff8,
    0x0fffff40,0xf107fe80,0x7e4003ff,0x9ff7002f,0x1fffc800,0xfff89ffe,
    0xffd10060,0xffffffff,0xffd8805f,0x027fcc4f,0xff880ffd,0xffffff55,
    0xffffffff,0x7c00dfff,0xffd8007f,0x7ffe4006,0x07ffe801,0x003fff60,
    0x0dfff700,0xf703ff40,0x3f2001df,0x9ff7002f,0x4dffd000,0x3ffe27ff,
    0xffda8000,0x003fffff,0x4ff98098,0xf101ffa0,0x3fffeabf,0xffffffff,
    0x006fffff,0xf7001ffe,0xfd0003ff,0xbff900df,0x037fd400,0x17ffc400,
    0xe80ffd00,0xff9004ff,0x13fee005,0x4fffe600,0x3ffe27ff,0x54cc0000,
    0x00000009,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x4c000000,0xee8803ee,0x00018804,0x00220000,0x00000000,0x00000000,
    0xf7000000,0xffffffff,0x2e017dff,0x7cc006ff,0x1ffff94f,0x5fffd000,
    0x2000bff2,0x36002ffc,0x3ffc2fff,0x2017fdc0,0x13fea7fa,0x409ff500,
    0x2effffea,0xffffff50,0xffffffff,0x3fffee3f,0xffffffff,0xff71ffff,
    0xdfffffff,0x200003bd,0x3ed81ffb,0x7dc5bfd7,0xffffffff,0xb85fffff,
    0x26004fff,0xffff94ff,0xfff98007,0x005ff92f,0x2005ff90,0xfc82fffd,
    0x03ff402f,0xffa9ffe6,0x27fd4004,0x7fffff4c,0x7d40dfff,0xffffffff,
    0x71ffffff,0xffffffff,0xffffffff,0x3ffffee3,0xffffffff,0x3e20001d,
    0xacfe81ff,0x3ee6ffff,0xccccccef,0x44ffffed,0x001ffffb,0x3ff29ff3,
    0x7e4006ff,0x5ff92fff,0x05ff9000,0x205fffb0,0x3e205ff9,0x3ffa204f,
    0x0013fea7,0xffd09ff5,0xfffb535d,0xcceffa8d,0xcccccccc,0x9dff70cc,
    0x99999999,0x3ee19999,0xdcccccef,0x02fffffe,0x03fffd00,0xfffffbfd,
    0x401ffdc7,0x2e2fffd8,0x800effff,0xfff94ff9,0x7f4001ff,0x5ff92fff,
    0x05ff9000,0x402fffd8,0xff700ffe,0x3fffaa03,0x0013fea7,0xffc89ff5,
    0x47ffd104,0x20005ffa,0x40004ffb,0xfa803ffb,0x64000fff,0xfe81ffff,
    0x5c130bff,0x3f6003ff,0x3fffee4f,0x4ff9804f,0x07ff9ff9,0x3ff7fe60,
    0x0005ff92,0x7ec05ff9,0xffb801ff,0x910dfd02,0x54ffffff,0x7d4004ff,
    0x0077fc4f,0x7fd4dff7,0x3fee0005,0x7fdc0004,0xbfff3003,0x7f7fcc00,
    0x05ffe81f,0x5001ffdc,0x67fdcdff,0x7cc01fff,0xff5ff94f,0x2fbf200d,
    0x05ff92ff,0x205ff900,0x1001fffd,0x7ff30bff,0xebffff98,0x013fea7f,
    0x7cc9ff50,0x27ff804f,0x20005ffa,0x40004ffb,0x22003ffb,0xe8802ffe,
    0xe81ffcdf,0x7fdc02ff,0x9ffe2003,0xeffbaffb,0x653fe600,0x00ffcaff,
    0x2ffbbff8,0x90005ff9,0xfffb05ff,0x0ffd8003,0x3ee07fe4,0x54ffd1ef,
    0x7d4004ff,0x00b7264f,0x7fd43ffa,0x3fee0005,0x7fdc0004,0x2ffdc003,
    0x7e47fec0,0x00ffe81f,0x3001ffdc,0x97fdcfff,0x3e604ffe,0xf35ff94f,
    0x8ff9807f,0x5ff92ffb,0x85ff9000,0x8001fffd,0x2ffc3ffa,0x9ffa175c,
    0x54004ffa,0xf30004ff,0x02ffd4ff,0x009ff700,0x003ffb80,0x2a037fc4,
    0x03ff92ff,0xff700ffd,0x2ffd4007,0x3fe65ff7,0x29ff302f,0x0dff2ffc,
    0x5ff75fc8,0x2000bff2,0x3ff62ffc,0x3fe0001f,0x020bfea6,0x9ff53ff4,
    0x04ffa800,0x54bff900,0x2e0005ff,0x5c0004ff,0xfe8003ff,0x49ff100f,
    0x7fe81ffc,0x003ffb80,0x7dc7fff1,0x03bfee2f,0x7fe53fe6,0x7c01ff92,
    0x325ff73f,0xfc8002ff,0x07fffb2f,0xb1ffc800,0x7fe800ff,0x3333bfea,
    0xcccccccc,0x88004ffd,0x3fea1fff,0x9999999d,0x7fdc0999,0x9999999d,
    0x2e099999,0xfd8003ff,0xc8dfb01f,0x07fe81ff,0x3103ffb8,0xb8dfff95,
    0x27ff42ff,0xffca7fcc,0x2a07ff32,0x25ff70ff,0xc8002ffc,0xffffdbff,
    0x3e60001f,0x8009ff3f,0x3ffea7fe,0xffffffff,0x04ffffff,0x544ffe80,
    0xffffffff,0x5c3fffff,0xffffffff,0x2fffffff,0x2000ffee,0xffb82ffc,
    0x740ffe41,0xfffb807f,0xffffffff,0x7dc1ffff,0x17ffcc2f,0x7fe53fe6,
    0x7e41bfa2,0x7e4bfee5,0xffc8002f,0xeffdefff,0x3bfa0000,0x74001ffa,
    0x3fffea7f,0xffffffff,0x004fffff,0x7d437fec,0xffffffff,0x7dc3ffff,
    0xffffffff,0x22ffffff,0xc8003ffb,0x1ffcc3ff,0x7f40ffe4,0xffffb807,
    0xffffffff,0x2ffb80cf,0x260effb8,0x45ff94ff,0x2ff80ffc,0x7fe4bfee,
    0xfffc8002,0x5ffe88ef,0x37fee000,0x7fe8006f,0x26677fea,0x99999999,
    0xb1004ffb,0xff501dff,0x9999999d,0xffb85999,0xaaaaaaad,0x2e0aaaaa,
    0xfd8003ff,0xc837f42f,0x07fe81ff,0xccceffb8,0x009abccc,0x7f40bfee,
    0x653fe64f,0x0ffe62ff,0x7fdc1ff5,0x0005ff92,0x4c1dfff9,0x10002fff,
    0x0007ffff,0x27fd4ffd,0x013fea00,0x403bffa2,0x20005ffa,0x40004ffb,
    0xe8003ffb,0x03ff21ff,0x7f40ffe4,0x03ffb807,0x02ffb800,0x3e65fff3,
    0xe85ff94f,0x2e2fec6f,0x05ff92ff,0x01dff900,0x0001fff9,0x0003fff6,
    0x4ffa9ffa,0x027fd400,0x803bffe6,0x20005ffa,0x40004ffb,0xf8003ffb,
    0x39ff30ff,0xff933333,0x1ffa1335,0x000ffee0,0xc80bfee0,0x4ff98fff,
    0xffc85ff9,0xff70bfe0,0x000bff25,0xfe80bff2,0xff50006f,0x9ffa000d,
    0x54004ffa,0x3fe604ff,0x5ffa805f,0x13fee000,0x07ff7000,0x327ff880,
    0xffffffff,0x2fffffff,0xff700ffd,0xff700007,0x9cffe805,0x85ff94ff,
    0x0ff53ff9,0x3ff25ff7,0x2ffc8002,0x013ffe60,0x000bfe60,0x9ff53ff4,
    0x04ffa800,0x2009fff3,0x20005ffa,0x40004ffb,0x64003ffb,0x3fff25ff,
    0xffffffff,0xffd2ffff,0x007ff700,0x805ff700,0x4ffcfff9,0xdfd05ff9,
    0x3fee13f6,0x0005ff92,0xfb805ff9,0x7ec002ff,0x9ffa0007,0x54004ffa,
    0xfffa84ff,0x17fea003,0x04ffb800,0x01ffdc00,0x4c3fff30,0xaaaaaaaa,
    0x0aabffda,0x03ffb800,0x02ffb800,0x4fffffc8,0xff905ff9,0xff705ff3,
    0x000bff25,0x3600bff2,0xf1000fff,0x7f40009f,0x0013fea7,0xff889ff5,
    0x7fd4002f,0x3fee0005,0x7fdc0004,0x17ffa003,0x40ffe400,0xeeeeeeed,
    0x000ffee4,0x400bfee0,0xf94ffffe,0xfdff305f,0x64bfee0f,0xfc8002ff,
    0xfff8802f,0x7ff4c205,0x9ffa0000,0x54004ffa,0x1ffec4ff,0x02ffd400,
    0x009ff700,0x403ffb80,0x01ffffa8,0xf03ff900,0xbfffffff,0x0001ffdc,
    0x98017fdc,0xff94ffff,0x13fffa05,0xffc97fdc,0xeeeeeeee,0x5ff94eee,
    0x0fffea00,0x0fffffe6,0x54ffd000,0x7d4004ff,0x3bffea4f,0xeeeeeeee,
    0x0bff50ee,0x77ffdc00,0xeeeeeeee,0xff74eeee,0xfddddddd,0x003fffff,
    0x7c0ffe40,0x5fffffff,0x0000ffee,0xc800bfee,0x5ff94fff,0x407ffee0,
    0xfff92ffb,0xffffffff,0x0bff2bff,0x41fffc80,0x005ffff8,0x3ea7fe80,
    0x7fd4004f,0x3fffff64,0xffffffff,0x00bff51f,0x7ffffdc0,0xffffffff,
    0xfff75fff,0xffffffff,0x80003bff,0x88881ffc,0x7dc08888,0xfb80003f,
    0x7ff4002f,0x2605ff94,0x3fee07ff,0xffffff92,0xbfffffff,0x8800bff2,
    0x6dc0fffe,0xfd00002c,0x0027fd4f,0xfff93fea,0xffffffff,0xff51ffff,
    0x7fdc000b,0xffffffff,0x75ffffff,0xffffffff,0x00039bdf,0x0007ff20,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x44000000,0x00001aa9,0x3bb60000,0xeeeeeeee,
    0x3bbbbaa2,0xeeeeeeee,0x0000002e,0x00000000,0xd8000000,0x1f74405e,
    0x00000000,0x00777440,0xffff9000,0x79dfffff,0xfffb1001,0x00019fff,
    0x000bffea,0x3fffffe2,0x2e3fffff,0xffffffff,0x03ffffff,0x39dfffb7,
    0xdffb7300,0xfdb30019,0x2e0039df,0x0cdeffec,0xeffec980,0x80dff01c,
    0x27db4ff9,0x42cefdb8,0x41dffeb8,0xffb713ed,0xfff8819b,0x00017d30,
    0x3ffffff2,0x1fffffff,0x3ffffea0,0x002fffff,0x005fffd8,0xffffffa8,
    0x2e3fffff,0xffffffff,0x42ffffff,0xffffffe8,0x3ff203ff,0x03ffffff,
    0xffffffb1,0x7f4c07ff,0xffffffff,0x3ffff202,0xff83ffff,0xea7fcc06,
    0xfffff9cf,0xffff32ff,0x67f47fff,0xffffffe8,0x43ffe21e,0x000cfff9,
    0x6666ffe4,0xffffedcc,0xadfff982,0x0fffeb88,0x3fbfe200,0x7fdc000f,
    0x2e000001,0xdffe84ff,0x3fffdbab,0xaabfffb8,0xfe82fffd,0xffcaabef,
    0xefff985f,0x7ffebaac,0x557fffb0,0xff89fff9,0xea7fcc06,0xfbbeffef,
    0xcfffafff,0xfd0fffeb,0xf95bfffd,0x0ccc8dff,0x5bfffff1,0x00bff200,
    0xfd0fffb1,0x2ffec09f,0xff3ff700,0x07fd8007,0x3fe60000,0x505ff985,
    0xdffa8dff,0x5c7ffa80,0xfe980dff,0x01ffe42f,0xffa85ffd,0x1ffe880d,
    0xff301bfe,0x20ffffa9,0xd82ffffc,0x7fffd3ff,0x02fff881,0xdffffb50,
    0x17fe4017,0x221ffe80,0x7fcc06ff,0x757fa007,0x37f4007f,0xffd00000,
    0x403ff701,0x3ffe0ded,0x447ffa00,0x3e600fff,0x01bfe26f,0xffe89ff9,
    0xf97fe600,0xa7fcc06f,0xff505ffe,0x53fe607f,0x3ee04ffe,0x7e44004f,
    0xc81cffff,0xff7002ff,0x4027fd47,0xf9801ffe,0x005ff73f,0x00013fe2,
    0xa817fe40,0x7c4005ff,0x855cc04f,0xfd803ffa,0x3006a61f,0x27fd49ff,
    0xff87ff40,0xea7fcc06,0xfff102ff,0x757fe201,0x3fe601ff,0x3faa0004,
    0x3f22efff,0x7ff7002f,0x6c00d544,0xffd800ff,0x200bff31,0x02622ff9,
    0x0dff3000,0x167fffc4,0x0017fd40,0x5c00ffe4,0x64c002ff,0x0bfee4ff,
    0x7fc7ff20,0xea7fcc06,0x1ffe01ff,0x3ffabff0,0x017fe200,0x3fff2600,
    0x005ff97f,0x80003ff6,0xff8806ff,0x4007ff46,0xfffc9ffb,0xfd0004ef,
    0xfffa803f,0xb80bdfff,0xfd8001ff,0x4ffa800f,0xffdb9530,0x7fe49fff,
    0xffffffff,0xdff2ffff,0xfd4ff980,0x037fc01f,0x03ff57fe,0x00017fe2,
    0xf97ffd88,0xdff5005f,0x27fec000,0x2e1ffdc0,0xffc804ff,0xffffffff,
    0x3fee001e,0xfffb3005,0xfc89ffff,0x7fe8001f,0xa8bff300,0xfffffffe,
    0x3ff64ffd,0xffffffff,0xdff3ffff,0xfd4ff980,0x406ff80f,0x80ffd5ff,
    0x00005ff8,0x32ffffd5,0xaaaaacff,0x00dffdcb,0x01dffb00,0xf881ffd0,
    0xfffe807f,0xfffba9bd,0x5ffd000f,0xffdb8800,0xff90efff,0x1ffd0003,
    0x5c9ff300,0x1bceffff,0x7fec9ff3,0xaaaaaaab,0xdff1aaaa,0xfd4ffa80,
    0x406ff80f,0x80ffd5ff,0x20005ff8,0xcfffffc8,0xffffff90,0x0bffffff,
    0x077fec00,0xd82ffcc0,0x7ffc02ff,0x09ffd103,0x000dff30,0x25fff930,
    0xc8002ffb,0xffa801ff,0x017fff33,0xffc93fea,0x0ffd0002,0xffd4ffb8,
    0x7c06ff80,0x880ffd5f,0xda8005ff,0xc82effff,0xffffffff,0x004fffff,
    0x000effd8,0x3ea05ff9,0x00d4c05f,0x9003ffe6,0x0a6007ff,0x3eabff70,
    0xa7fcc03f,0xfc802ffb,0x807ff92f,0x3fea4ffb,0x3a099803,0x3ff600ff,
    0xff80ffd4,0xfeaffc06,0x02ffc407,0xffffeb88,0x33ff201d,0xccaaaaaa,
    0x7001efff,0x7c001dff,0x07ffc07f,0x2ffd8000,0x4007ffc0,0x3e201ffe,
    0x80dff15f,0xdff32ffd,0xb0fff880,0xffd803ff,0x803ffe64,0xff91fff8,
    0x53fff209,0x37fc07fe,0x3ff57fe0,0x9997fe20,0x3ffff221,0xffc800cf,
    0x6ffd8802,0x00fff880,0x2abbfea0,0xffdaaaaa,0xff700004,0x027fd407,
    0x3205ffb8,0x0fff23ff,0xfb07ffc4,0x27fec07f,0x7e409ff9,0x27fe45ff,
    0x7ccdffb0,0xfda89cff,0x0ffd4fff,0x7fc06ff8,0xf880ffd5,0x21fff15f,
    0x002efff9,0xf0017fe4,0xff9801ff,0x7ffec004,0xffffffff,0x500007ff,
    0x7fec09ff,0xbfff1001,0xfff95117,0x8efffc41,0x443fffc9,0xd311dfff,
    0xfffa8bff,0xfff9510b,0xefff88bf,0xfffda889,0x7ffffec1,0xd4ff8eff,
    0x06ff80ff,0x07feaffc,0xff8affc4,0x003bf30f,0x800bff20,0x7d403ffc,
    0x3fe2002f,0xffffffff,0x302fffff,0x5ff70013,0x001bfe20,0xfffffff3,
    0xfd303dff,0x9fffffff,0x3ffffa60,0xfb05ffff,0xdfffdfff,0xfd30ffd3,
    0xffffffff,0x3fffae05,0x3a9ff0df,0x037fc07f,0x03ff57fe,0x7fc57fe2,
    0x8000110f,0x2e002ffc,0x7fe405ff,0x0ffee001,0x5c37fdc0,0xffd805ff,
    0x009ff501,0xfffff930,0xffc801bf,0x4402efff,0x3dfffffc,0x7ffffdc0,
    0x40bfee3f,0xcffffffc,0x801a8800,0x37fc07fe,0x3ff57fe0,0x0017fe20,
    0x0bff2000,0x403ffc80,0x3a000aa9,0xff1000ff,0x0fff983f,0xc81bfe60,
    0x4c0002ff,0xa88000a9,0x1a880009,0x009a9800,0x00d4c400,0x00000000,
    0x00000000,0x17fe4000,0x01fff880,0x6ff98000,0x427fe400,0xfb104ffe,
    0x0fff405f,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x802ffc80,0x8806ffe9,0xff900099,0x7ff98007,0x12dfff98,0xf80bffd5,
    0xf80000ff,0x2a60005f,0x00554002,0x33333333,0x03333333,0x10ccc000,
    0x76540333,0x30c401cd,0x00000033,0x3f200000,0xeeeeeeef,0x01fffffe,
    0xf003ffd8,0xfd0001ff,0xffff707f,0x809fffff,0x00006ff8,0x7c000bff,
    0x3fa000ff,0xfffff301,0xffffffff,0xba7fe4ff,0x2fff35ff,0xfd10fff8,
    0xfffd887f,0x221cffff,0x03ffe2fa,0x00000000,0x3ffff200,0xffffffff,
    0xffb002ef,0x0bff5007,0x41bfee00,0xefffffd8,0x05ff8803,0x00bff000,
    0x00fffee0,0xff300fe8,0xffffffff,0x7e4fffff,0x26bff74f,0x1fff17ff,
    0x3f23ffcc,0xffffffff,0x22fffeef,0x00000fff,0xc8000000,0xffffffff,
    0x4002ceef,0xfd803ffd,0xff10002f,0x01a9803f,0xf8000000,0xffd0005f,
    0xd96dc0ff,0x5544d917,0xaaaaaaaa,0x3f22aaaa,0x26bff74f,0x1fff17ff,
    0x3f23ffa8,0xffeca8ac,0x21ffffff,0x00000fff,0x00000000,0x00000000,
    0x00000000,0x005dd500,0xff007dd3,0x5ff5000b,0x3ff605ff,0x0fffdfee,
    0x7fe40000,0x3e6bff74,0xfb83e47f,0xfc980b26,0x0000dfff,0x00000000,
    0xb0077640,0x2f6401dd,0xeec80000,0xeeeeeeee,0x3bb625ee,0x43bb6202,
    0xfc806ff8,0x05ff801f,0xdfb6fd80,0x3fff6e60,0x0000acef,0xfa9ffdc0,
    0xe8bff14f,0x40006605,0x00000008,0x20000000,0xff102ffb,0x13fe205f,
    0xd8f71000,0xffffffff,0x7dc6ffff,0x7ffb00ff,0x7c00ffd8,0x3333226f,
    0xccceffcc,0x7ff304cc,0xf9007fea,0x000001df,0xff997fcc,0x3fa93fe2,
    0x00000000,0x00000000,0x09ff3000,0x5413ffea,0xb30002ff,0xcccb8fff,
    0xffcccccc,0x84ffd84f,0xffa85ffb,0x98ffea03,0xffffffff,0x07ffffff,
    0x05fe8ff9,0x41befbee,0x99999999,0x21999999,0x87fe0ff8,0x00bf13fe,
    0x00000000,0x00000000,0xf906ff80,0x1ff20dff,0x3fffaa00,0xffc8006f,
    0x45fff105,0xff00fff9,0x307fec0d,0xffffffff,0x0fffffff,0xffb89ff1,
    0xfd1ffa80,0xfffff98b,0xffffffff,0x3fa3fc7f,0x00187f20,0x00000000,
    0x00000000,0xf80ffc80,0xff80ffef,0xfff91005,0x70003bff,0x7d401dff,
    0x05ffd0ef,0x7c40ffe4,0x17fe005f,0x441ffb80,0x24e984ff,0x7ffcc3f9,
    0xffffffff,0x00007fff,0x00000000,0x00000000,0x7fd40000,0x7fd7fcc3,
    0x2017fcc2,0xbeffffda,0xfff50000,0x99ff9001,0xff9809ff,0x002ffa84,
    0xff8017fe,0x201ffb06,0x55544040,0xaaaaaaaa,0x00002aaa,0x00000000,
    0x00000000,0x5ff80000,0x45ffbfdc,0xeb880ffc,0x002dffff,0x00fffcc0,
    0x0dffffd0,0x3f61ffa0,0x02ffc007,0xf302ffa8,0x0000007f,0x00000000,
    0x00000000,0x00000000,0x363fec00,0xfe8ff95f,0xfffff985,0xf880000c,
    0x7cc002ff,0xf7000fff,0x027fc45f,0x74017fe0,0x037f407f,0x00000000,
    0x00000000,0x00000000,0x50000000,0xa97fc3ff,0x07ff10ff,0x0007fff3,
    0x01fff440,0x006ffe80,0xffb97fe2,0x02ffc001,0x4c400998,0x00000001,
    0x00000000,0x00000000,0x00000000,0x7ccffe20,0x2e7ff10f,0xfff980ff,
    0xd80002df,0xf70005ff,0x6c009fff,0x00dfd0ff,0x0000bff0,0x00000000,
    0x00000000,0x00000000,0x00000000,0x7e5bfa00,0x6fdaff46,0x3ffff260,
    0xfd8000be,0xff30006f,0x2003ffdd,0x3ff9affa,0x00099800,0x00000000,
    0x00000000,0x00000000,0x00000000,0x1ff70000,0x8ffc89fd,0xfb8803ff,
    0x001cffff,0x0001dff9,0x3fe6bffa,0x7bff000e,0x000001ff,0x00000000,
    0x00000000,0x00000000,0x00000000,0xff300000,0xffa85ff7,0x54001ffc,
    0x02effffd,0x0003ffea,0xff927fe4,0x3bff200b,0x0000005f,0x00000000,
    0x00000000,0x00000000,0x00000000,0x3bfa0000,0x7ffc40ff,0x3260006f,
    0x544fffff,0x30001fff,0xffe81fff,0xffff9802,0x00000002,0x00000000,
    0x00000000,0x00000000,0x00000000,0x3fff2000,0x09fffd06,0xfff71000,
    0x56fffc4f,0xaaaaaaaa,0x0bffa20a,0x2003ffe6,0x00007ffe,0x00000000,
    0x00000000,0x00000000,0x00000000,0x4c000000,0xff904fff,0xa800003f,
    0x3fffea7d,0xffffffff,0x13ff22ff,0xb805ffc8,0x000004ff,0x00000000,
    0x00000000,0x00000000,0x00000000,0xff800000,0x0fff302f,0xf50c0000,
    0xffffffff,0x2a5fffff,0x7f400fff,0x0000003f,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
};

static signed short stb__arial_36_usascii_x[95]={ 0,2,1,0,1,1,1,1,1,1,1,1,2,1,
2,0,1,3,0,1,0,1,1,1,1,1,2,2,1,1,1,1,1,-1,2,1,2,2,2,1,2,3,0,2,
2,2,2,1,2,1,2,1,0,2,0,0,0,0,0,2,0,0,0,-1,1,1,2,1,1,1,0,1,2,2,
-2,2,2,2,2,1,2,1,2,0,0,2,0,0,0,0,0,0,2,0,1, };
static signed short stb__arial_36_usascii_y[95]={ 29,5,5,5,3,5,5,5,5,5,5,10,25,19,
25,5,5,5,5,5,5,6,5,6,5,5,12,12,9,12,9,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,33,5,11,5,11,5,11,5,11,5,5,
5,5,5,11,11,11,11,11,11,11,6,12,12,12,12,12,12,5,5,5,15, };
static unsigned short stb__arial_36_usascii_w[95]={ 0,5,9,18,16,26,20,4,9,9,11,17,5,9,
5,9,16,10,17,16,17,16,16,16,16,16,5,5,17,17,17,16,31,23,18,21,20,18,17,23,19,4,14,20,
15,23,19,23,19,23,21,19,20,19,22,31,22,22,19,7,9,7,15,20,7,16,15,15,15,16,11,15,14,3,
7,14,3,23,14,16,15,15,10,15,9,14,16,24,16,16,16,11,4,10,17, };
static unsigned short stb__arial_36_usascii_h[95]={ 0,24,10,25,30,25,25,10,31,31,11,16,9,4,
4,25,25,24,24,25,24,24,25,23,25,25,17,22,17,11,17,24,31,24,24,25,24,24,24,25,24,24,25,24,
24,24,24,25,24,26,24,25,24,25,24,24,24,24,24,31,25,31,14,3,6,19,25,19,25,19,24,25,24,24,
31,24,24,18,18,19,25,25,18,19,24,18,17,17,17,24,17,31,31,31,6, };
static unsigned short stb__arial_36_usascii_s[95]={ 248,244,164,170,105,221,1,159,39,1,129,
95,174,244,206,22,147,119,150,32,226,61,130,78,66,49,232,250,26,141,238,
20,65,37,1,1,205,186,168,230,130,239,99,81,65,41,21,146,1,122,217,
180,196,200,158,126,103,80,60,97,220,57,113,122,180,144,83,111,164,161,33,
114,45,248,49,181,252,193,217,127,205,189,244,95,23,178,78,1,61,102,44,
27,22,11,188, };
static unsigned short stb__arial_36_usascii_t[95]={ 26,59,130,1,1,1,33,130,1,1,130,
130,130,104,130,33,33,85,85,33,85,110,33,110,33,33,110,59,135,130,110,
110,1,110,110,59,85,85,85,33,85,59,33,85,85,85,85,1,85,1,59,
33,59,33,59,59,59,59,59,1,33,1,130,28,130,110,33,110,33,110,59,
33,59,1,1,59,1,110,110,110,1,1,85,110,59,110,134,135,135,85,135,
1,1,1,130, };
static unsigned short stb__arial_36_usascii_a[95]={ 143,143,183,287,287,458,344,98,
172,172,201,301,143,172,143,143,287,287,287,287,287,287,287,287,
287,287,143,143,301,301,301,287,523,344,344,372,372,344,315,401,
372,143,258,344,287,429,372,401,344,401,372,344,315,372,344,487,
344,344,315,143,143,143,242,287,172,287,287,258,287,287,143,287,
287,115,115,258,115,429,287,287,287,287,172,258,143,287,258,372,
258,258,258,172,134,172,301, };

// Call this function with
//    font: NULL or array length
//    data: NULL or specified size
//    height: STB_FONT_arial_36_usascii_BITMAP_HEIGHT or STB_FONT_arial_36_usascii_BITMAP_HEIGHT_POW2
//    return value: spacing between lines
static void stb_font_arial_36_usascii(stb_fontchar font[STB_FONT_arial_36_usascii_NUM_CHARS],
                unsigned char data[STB_FONT_arial_36_usascii_BITMAP_HEIGHT][STB_FONT_arial_36_usascii_BITMAP_WIDTH],
                int height)
{
    int i,j;
    if (data != 0) {
        unsigned int *bits = stb__arial_36_usascii_pixels;
        unsigned int bitpack = *bits++, numbits = 32;
        for (i=0; i < STB_FONT_arial_36_usascii_BITMAP_WIDTH*height; ++i)
            data[0][i] = 0;  // zero entire bitmap
        for (j=1; j < STB_FONT_arial_36_usascii_BITMAP_HEIGHT-1; ++j) {
            for (i=1; i < STB_FONT_arial_36_usascii_BITMAP_WIDTH-1; ++i) {
                unsigned int value;
                if (numbits==0) bitpack = *bits++, numbits=32;
                value = bitpack & 1;
                bitpack >>= 1, --numbits;
                if (value) {
                    if (numbits < 3) bitpack = *bits++, numbits = 32;
                    data[j][i] = (bitpack & 7) * 0x20 + 0x1f;
                    bitpack >>= 3, numbits -= 3;
                } else {
                    data[j][i] = 0;
                }
            }
        }
    }

    // build font description
    if (font != 0) {
        float recip_width = 1.0f / STB_FONT_arial_36_usascii_BITMAP_WIDTH;
        float recip_height = 1.0f / height;
        for (i=0; i < STB_FONT_arial_36_usascii_NUM_CHARS; ++i) {
            // pad characters so they bilerp from empty space around each character
            font[i].s0 = (stb__arial_36_usascii_s[i]) * recip_width;
            font[i].t0 = (stb__arial_36_usascii_t[i]) * recip_height;
            font[i].s1 = (stb__arial_36_usascii_s[i] + stb__arial_36_usascii_w[i]) * recip_width;
            font[i].t1 = (stb__arial_36_usascii_t[i] + stb__arial_36_usascii_h[i]) * recip_height;
            font[i].x0 = stb__arial_36_usascii_x[i];
            font[i].y0 = stb__arial_36_usascii_y[i];
            font[i].x1 = stb__arial_36_usascii_x[i] + stb__arial_36_usascii_w[i];
            font[i].y1 = stb__arial_36_usascii_y[i] + stb__arial_36_usascii_h[i];
            font[i].advance_int = (stb__arial_36_usascii_a[i]+8)>>4;
            font[i].s0f = (stb__arial_36_usascii_s[i] - 0.5f) * recip_width;
            font[i].t0f = (stb__arial_36_usascii_t[i] - 0.5f) * recip_height;
            font[i].s1f = (stb__arial_36_usascii_s[i] + stb__arial_36_usascii_w[i] + 0.5f) * recip_width;
            font[i].t1f = (stb__arial_36_usascii_t[i] + stb__arial_36_usascii_h[i] + 0.5f) * recip_height;
            font[i].x0f = stb__arial_36_usascii_x[i] - 0.5f;
            font[i].y0f = stb__arial_36_usascii_y[i] - 0.5f;
            font[i].x1f = stb__arial_36_usascii_x[i] + stb__arial_36_usascii_w[i] + 0.5f;
            font[i].y1f = stb__arial_36_usascii_y[i] + stb__arial_36_usascii_h[i] + 0.5f;
            font[i].advance = stb__arial_36_usascii_a[i]/16.0f;
        }
    }
}

#ifndef STB_SOMEFONT_CREATE
#define STB_SOMEFONT_CREATE              stb_font_arial_36_usascii
#define STB_SOMEFONT_BITMAP_WIDTH        STB_FONT_arial_36_usascii_BITMAP_WIDTH
#define STB_SOMEFONT_BITMAP_HEIGHT       STB_FONT_arial_36_usascii_BITMAP_HEIGHT
#define STB_SOMEFONT_BITMAP_HEIGHT_POW2  STB_FONT_arial_36_usascii_BITMAP_HEIGHT_POW2
#define STB_SOMEFONT_FIRST_CHAR          STB_FONT_arial_36_usascii_FIRST_CHAR
#define STB_SOMEFONT_NUM_CHARS           STB_FONT_arial_36_usascii_NUM_CHARS
#define STB_SOMEFONT_LINE_SPACING        STB_FONT_arial_36_usascii_LINE_SPACING
#endif

