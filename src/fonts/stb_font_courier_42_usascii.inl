// Font generated by stb_font_inl_generator.c (4/1 bpp)
//
// Following instructions show how to use the only included font, whatever it is, in
// a generic way so you can replace it with any other font by changing the include.
// To use multiple fonts, replace STB_SOMEFONT_* below with STB_FONT_courier_42_usascii_*,
// and separately install each font. Note that the CREATE function call has a
// totally different name; it's just 'stb_font_courier_42_usascii'.
//
/* // Example usage:

static stb_fontchar fontdata[STB_SOMEFONT_NUM_CHARS];

static void init(void)
{
    // optionally replace both STB_SOMEFONT_BITMAP_HEIGHT with STB_SOMEFONT_BITMAP_HEIGHT_POW2
    static unsigned char fontpixels[STB_SOMEFONT_BITMAP_HEIGHT][STB_SOMEFONT_BITMAP_WIDTH];
    STB_SOMEFONT_CREATE(fontdata, fontpixels, STB_SOMEFONT_BITMAP_HEIGHT);
    ... create texture ...
    // for best results rendering 1:1 pixels texels, use nearest-neighbor sampling
    // if allowed to scale up, use bilerp
}

// This function positions characters on integer coordinates, and assumes 1:1 texels to pixels
// Appropriate if nearest-neighbor sampling is used
static void draw_string_integer(int x, int y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0, cd->t0); glVertex2i(x + cd->x0, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t0); glVertex2i(x + cd->x1, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t1); glVertex2i(x + cd->x1, y + cd->y1);
        glTexCoord2f(cd->s0, cd->t1); glVertex2i(x + cd->x0, y + cd->y1);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance_int;
    }
    glEnd();
}

// This function positions characters on float coordinates, and doesn't require 1:1 texels to pixels
// Appropriate if bilinear filtering is used
static void draw_string_float(float x, float y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0f, cd->t0f); glVertex2f(x + cd->x0f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t0f); glVertex2f(x + cd->x1f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t1f); glVertex2f(x + cd->x1f, y + cd->y1f);
        glTexCoord2f(cd->s0f, cd->t1f); glVertex2f(x + cd->x0f, y + cd->y1f);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance;
    }
    glEnd();
}
*/

#ifndef STB_FONTCHAR__TYPEDEF
#define STB_FONTCHAR__TYPEDEF
typedef struct
{
    // coordinates if using integer positioning
    float s0,t0,s1,t1;
    signed short x0,y0,x1,y1;
    int   advance_int;
    // coordinates if using floating positioning
    float s0f,t0f,s1f,t1f;
    float x0f,y0f,x1f,y1f;
    float advance;
} stb_fontchar;
#endif

#define STB_FONT_courier_42_usascii_BITMAP_WIDTH         256
#define STB_FONT_courier_42_usascii_BITMAP_HEIGHT        160
#define STB_FONT_courier_42_usascii_BITMAP_HEIGHT_POW2   256

#define STB_FONT_courier_42_usascii_FIRST_CHAR            32
#define STB_FONT_courier_42_usascii_NUM_CHARS             95

#define STB_FONT_courier_42_usascii_LINE_SPACING          20

static unsigned int stb__courier_42_usascii_pixels[]={
    0x00015500,0x98000000,0x000bb802,0x07301818,0xeeee8e4c,0xeb80e64e,
    0x2600eeee,0x59731004,0x55440001,0x20000000,0x00011000,0x40000198,
    0x1cb88008,0x001ff800,0x002e9ea0,0x64036400,0x3e6003ff,0x1b203e60,
    0xeef8f7ec,0x05f50dee,0x07fbbbb2,0x7ec406e8,0x01efffff,0x3ffffa20,
    0x7ff5401f,0x3ff1000d,0x6ffff640,0xfffd5000,0x710005df,0x207dfffb,
    0x002ffff8,0xd0000ffc,0x00003ecd,0x7ec401b2,0x541f5000,0xf986c80f,
    0x3fe01fc2,0x701f9800,0x5ff4c07f,0x00bfaa21,0x2626fbe6,0x17f902fd,
    0xf5003fb3,0x7bfd109f,0x4405ff95,0xdbaacdfe,0x3fee005f,0x704caace,
    0x800bffff,0xf50001ff,0x0001fcc5,0x1167f5c4,0x5400fe60,0x3641ee0f,
    0x201fc36c,0x1f9804fb,0xf500ff88,0x04fd801d,0x0fc8077c,0x035c07cc,
    0x7ec1ffcc,0x880fe882,0x13ea02ff,0x001bfb10,0x04ffffa8,0x80005540,
    0x0006d86e,0x7ff7ffe4,0x09f01fbf,0x20f71ee0,0x3f84f86c,0x2007fc40,
    0x04fb81f9,0x7e4003ba,0xe801f701,0x1f882e43,0x261ffcc0,0x213e203f,
    0x1fb800d8,0x8000ffa0,0x0000effd,0x20be6000,0xfd0002fa,0x7fed445b,
    0x32009f01,0x86c83e47,0xd803f84f,0x40fcc03f,0x03f701fe,0x4f886e80,
    0x016c5c80,0x3ff8805b,0x07ec0374,0x640fe000,0x0880001f,0xd8000000,
    0x2001ba06,0x0fec03fb,0x8d9004f8,0x9f0d906c,0xdf3007f0,0x7d41f980,
    0x0009f105,0x00fb85f5,0xf02647b8,0x22ff8803,0x3f9803f9,0x4c274000,
    0x0000004f,0x3e600000,0x0007ea03,0x01f100fd,0x236c013e,0x9f0d905d,
    0x3fa007f0,0xfb07e601,0x0003ee05,0x401b22f4,0x7a83d47b,0x7d45ff00,
    0x000bf000,0x03741fcc,0xcc980000,0xcccccccc,0x003f2003,0x04f800bd,
    0xb004f800,0x0d905e8b,0x2007f09f,0x87e604fb,0x01b207f8,0x02f47c80,
    0xbb0fb751,0x400bee25,0x801ee1ff,0x3f60006d,0x00017c40,0xeeeea800,
    0x06feeeee,0xf7009f10,0x0037c003,0x5e8027c0,0xf86c8274,0xf5003f84,
    0xf70fcc0f,0x0002f40d,0xb827c1f5,0xf907ffff,0x20405ffd,0x801b61ff,
    0xbf50007c,0x00000f50,0x00d90000,0x2fc003f2,0x0005f900,0xfff904f8,
    0xffffffff,0x3e1b29ff,0xf3003f83,0xc87e601f,0x000fe05f,0x07f11f98,
    0x01ee19fb,0x17f6a013,0x002f41fd,0x733100f7,0x21b209fb,0x55002bc9,
    0x64000355,0x004f8806,0x744003ee,0xd8000acf,0xdf999506,0x999bf999,
    0x05f31b25,0x3fe2007f,0x7ec3f301,0x0007f104,0x42f897c4,0x003dc4fb,
    0x017dfb51,0x002741fd,0xffc801f5,0xc93604ff,0x00effeff,0x00bfffe2,
    0xfb806c80,0x013e2000,0x79dffd70,0x005f7001,0xc817c47f,0x3e03f626,
    0x40bfe003,0x80ffa1f9,0x3e60004f,0x0fd85f11,0x36a203dc,0x3ec00bdf,
    0x0fa8013a,0x2ffdb980,0x833f27f0,0xff701fea,0x6c8000bf,0xc8005f80,
    0xcb88000f,0xfd804ffe,0x445f101e,0x3f2d902f,0x4007f02f,0x43f303fe,
    0x017a02ff,0x5f10fa80,0x887b84f8,0x000bdfdb,0x4009d1f6,0xfd8000fa,
    0x01fcbe83,0x3ff60dd1,0x3640000f,0x20007ee0,0x880003f8,0x3f600efb,
    0x4c5f101e,0x3f2d901f,0x4007f02f,0x43f303fe,0x01b602ff,0x0be27c80,
    0x6ccf70bd,0xb0000adf,0x2e005e8f,0x7f70000f,0x4c02fed8,0x1fffc43f,
    0x20364000,0x1f60005e,0x04f98000,0x1f9807f7,0x136407e6,0x007f01fb,
    0x1f9817fc,0x0fb80ffa,0x7c4dd000,0x9ee0fec2,0xbfb700a9,0x1b62dc05,
    0x40007b80,0x802fdc6d,0x037fd45e,0x2a06c800,0x3e60001f,0x1b600003,
    0x6664c36c,0xdfdccdfd,0xf31b23cc,0x22007f05,0x43f301ff,0x13e204fd,
    0xf88bea00,0xb8e7fc42,0x937fb007,0x03e400bf,0xa8000d90,0x4003ea0f,
    0x00ffe46c,0x3a06c800,0x06d80006,0x07b80026,0xffff509f,0xffffffff,
    0x1fc364bf,0xff9801fc,0x7e43f300,0x000fdc05,0x260fe17a,0x04fffffe,
    0x003e835c,0x176001f7,0xf98fe000,0xff8f9000,0x1b200005,0x400017cc,
    0x00bd02f9,0x804f8364,0xd903dc7b,0x007f09f0,0x1f981fea,0xdf101bee,
    0x207f2001,0x2eaa604e,0xb817c01c,0x005f5006,0x880009f1,0xd8017c2f,
    0x0003fe66,0x0db06c80,0xe8374000,0x04f9802f,0xc8f7009f,0x13e1b207,
    0x27dc00fe,0x3fc43f30,0x200f7cc0,0x00bb03fd,0xf103c400,0x5c037c00,
    0x7d40001f,0x4e802f40,0x00000b62,0x007f30d9,0x7417d400,0x1bea02ff,
    0x46c804f8,0x3e1b206c,0xfd003f84,0x360fcc03,0xcff9802f,0x05fd730a,
    0x000007dc,0x221e603f,0x2201fc80,0x2200185e,0x402fa85f,0x000001fa,
    0x007d86c8,0xde85e800,0xedccdffc,0x013e00df,0x640db1b6,0x03f84f86,
    0x7cc06f98,0x8802fd41,0xeffffffc,0x0027c400,0x17609b00,0xef88bff7,
    0xfa83fb00,0x07f4401d,0xbf100fe8,0x32000000,0x0001fc46,0x46a0fd40,
    0x1ceffdc9,0x5d804f80,0xf0d902ec,0xfb007f09,0xe81f9807,0x3fe6001f,
    0x3f2000ac,0x7f300000,0xff03ee21,0xbefa83ff,0x503fda88,0x262359ff,
    0x3a201ffc,0x1df711bf,0x32000000,0x00007e46,0xd9005f80,0xe804f800,
    0x0d902745,0x8807f09f,0x0fcc00ff,0xfa8027dc,0x440c019e,0x00ee01ff,
    0x0f7eff4c,0xe983ffec,0x402fffff,0xfffffec8,0xfd71004f,0x0001bfff,
    0xf1364000,0x5c000009,0x006c800f,0x13a007e6,0x6436409f,0x7dc03f86,
    0x881f9804,0x7fe400ff,0x9bdeffff,0xff981feb,0x2feba9ac,0x100d4c00,
    0xba980177,0xab988001,0x57300009,0x00000001,0x0007dcdb,0x009f1000,
    0x1b6200d9,0x80fe27c0,0x7c2f986c,0x4007fc03,0x07f701f9,0x55e77fdc,
    0x1efffecb,0x3ffff620,0x000002df,0x00000000,0x00000000,0x453e2000,
    0x8000004f,0x036400fc,0xf8017fe4,0x0d9017c3,0x777cbbf6,0x05f50dee,
    0x07fbbbb2,0x400c06e8,0x54c00098,0x00000009,0x00000000,0x00000000,
    0xf72fb800,0x10000003,0x806c809f,0x0c0c003b,0x1c980a60,0x4c999999,
    0x33332e03,0x000e600c,0x00000000,0x00000000,0x00000000,0x54000000,
    0x0001366f,0x4406b800,0x00000001,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x33326000,0x005feccc,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0xffffb800,
    0x00003def,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x40003100,0x00000008,
    0x0000aa20,0x10000110,0x3bae0001,0xeeeeeeee,0x00022003,0x07ddd700,
    0x32000300,0x80002eee,0xeeeeeee8,0x04eeeeee,0x599b9710,0x332ea015,
    0xfc8800ac,0x7001dfff,0x0017dffd,0x50002e4c,0x333200df,0x3ffb2a1c,
    0x366002ce,0x2e1cefff,0x77e42ccc,0xeeeeeeee,0x7ffed404,0xc80000df,
    0xc8804fee,0x20bdfffe,0x3b61cccc,0x880002fe,0xeeeeeeef,0x805feeee,
    0xfffefffb,0xfff910ff,0x407fffdd,0xebaacffa,0x5efe403f,0x2a02feba,
    0x0006fffc,0x76c01bea,0x59dfb2fe,0x900bfd95,0xfd9559df,0x90fbbf67,
    0xff90000f,0x05ff955b,0x2027c000,0xdbabdffb,0x5dddf1ff,0x00005f10,
    0x2ec005f1,0x102b7ee0,0x40effc33,0xdf884fe9,0x2e05f900,0xb81f703f,
    0x06dacfff,0x001bea00,0x405fd7f1,0x13f605fb,0x205dbfb8,0x7ec0007c,
    0x01fd880a,0x6409f000,0x5fb100df,0x02f8809f,0x001f8800,0x37c407f1,
    0x3200fe00,0x2007741f,0x027c40fd,0xc83971b6,0x0aa20006,0x01fff100,
    0x5f50bf10,0x40bff500,0x3ee0007c,0x000fd804,0x9f304f80,0x013ff600,
    0x200005f1,0x807ea000,0x1fc002f9,0x0be25e80,0x1f90be20,0xc803f880,
    0x80000006,0x2e002ff8,0x8017e21f,0x01f205fd,0xf1006e80,0x09f00005,
    0xfe8801ba,0x0017c404,0x036c0000,0x170003ea,0x1fa9f200,0x05d89f00,
    0x0d900f90,0xf1000000,0x547d000d,0x17e2001f,0x3a0007c8,0x4013e001,
    0x3e613e00,0x027dc001,0x00440be2,0x404f8000,0x000000fa,0x00fcc3ea,
    0x8027c3f8,0x036401fa,0x7c400000,0x2e5c8004,0x205f8007,0x0000007c,
    0x7edc417a,0x427c3dff,0x7cc000fb,0x9317c404,0x005bfffd,0x9507e600,
    0x9999fb99,0x80009999,0x4c01fc6c,0xf0027c1f,0x2006c807,0x04cccccb,
    0x4001fc40,0x2001b67b,0x5cdf205e,0x0001bded,0x3fe60fe0,0x0efdbabd,
    0x000d909f,0x25f1013e,0xecaacefb,0x7c80004f,0xefeeeeb8,0x0deeeeee,
    0xc87f1000,0x6c37400f,0x809f5005,0x3bb6006c,0x44007fee,0x27c8004f,
    0x05e8007c,0x37fffff2,0x80004ffe,0x06fcc1fc,0x84f8ee98,0x4f88007b,
    0x1fe57c40,0x8000df70,0x00fa804e,0x0ff98000,0x6c40f744,0x8807b82f,
    0x036405ff,0x1001f200,0x4bb000bf,0x3e2000fa,0x06f7ee05,0x98001bee,
    0x8027cc4f,0x0fa84ffd,0x2027d400,0x9801fff8,0x5f30004f,0x0001f500,
    0x8077e4c0,0xfeccefd8,0x807f301e,0x36406ded,0x001f2000,0x44001ff1,
    0x800fe64f,0x400405fb,0xf98003fa,0x1000ed86,0x09f109ff,0x4404fd80,
    0x3f2004ff,0x007b8001,0x300001f5,0xf5007ffb,0x809fffff,0x93fb02fb,
    0x0006c80d,0x3e2003e4,0x03ba006f,0xff1001f9,0x1f60000b,0xf01df100,
    0x04fb8005,0x3ea003f9,0x03fc404f,0x740027c0,0x001f5005,0x2005f900,
    0x3ee61cfb,0x4d6fe405,0x80d91feb,0x3e40006c,0x37f7e200,0x20bf6200,
    0x3a200ef8,0x300005ee,0x3be6003f,0x4000f980,0x07fa04f9,0x809fbf50,
    0x6d8005f8,0x8017c400,0xc80000fa,0x405f9007,0x7f5c06e8,0x01b61cff,
    0x7c8000d9,0x7cd7c400,0x3fee61bf,0x86ffa603,0x05d8dfb9,0x005f1000,
    0x1ee01df3,0x8813e200,0xb3109cfe,0xf1013e9f,0x00f70007,0xf5000fb8,
    0x0d700001,0xf3007f10,0x3e031005,0x00036405,0x5f1001f2,0x3fffffa2,
    0xfd8800ef,0x364fffff,0x0fe00005,0x6401df30,0x009f0006,0xfffffff7,
    0x3e2027c7,0x007b8003,0x1f5002ec,0x20020000,0x0136007a,0x6403f880,
    0x03e40006,0x2e60be20,0xa88000ab,0x005d81bb,0x5405f100,0x03d400ef,
    0x88027cc0,0x4f80acb9,0x40027c40,0x0fe2006c,0x0000fa80,0x80176000,
    0x3ee0007b,0x00036401,0x5f1001f2,0x40000000,0xf500005d,0x0037ea03,
    0xf50007e2,0x4f800009,0x40037c40,0x03ea005e,0x0000fa80,0x801b6000,
    0xdf30007b,0x8000d900,0x17c4007c,0xd0000000,0x1f200009,0x3a002fd4,
    0x027f4005,0x1013e000,0x7d4005ff,0x001b6002,0x100001f5,0x400f7003,
    0x1fd0005d,0x8000d900,0x17c4007c,0x88000000,0x000d982f,0x0bf707f3,
    0x2005f700,0x00004ffb,0x3fe2027c,0x05e8800f,0x2a001fc0,0x7f40000f,
    0x0fe601ff,0x2000fe60,0x0d9002fc,0x4007c800,0x000002f8,0xf101fb00,
    0x86e9807f,0x320004fb,0x7dfdc02f,0x27c00004,0x03bb3e20,0x2000fe88,
    0x7d4001f9,0x3fea0000,0x17dc05ff,0x9800bf10,0x1b2003fe,0x800f9000,
    0x000002f8,0x101fec40,0x26237dfb,0x1fe41efc,0xbf90b900,0x4bf6a213,
    0x0000bcef,0xf99704f8,0x4c37fd15,0x64001efb,0xdccca806,0xcccccccf,
    0x7fffc401,0x09dfd803,0x3501df93,0x3df97311,0x33333260,0x2cccccfe,
    0x333332e2,0xccccccfe,0x337f32e1,0x980002cc,0xffdccccc,0xfffb5003,
    0x3ba09fff,0xcccccccc,0xd705eccc,0x43dfffff,0x4002ffff,0xcefcccc9,
    0x5fffd10b,0x3fffff62,0x3d8000df,0xfffffe80,0x4fffffff,0x002cb880,
    0x3fffffea,0x3ffff604,0x3f200bdf,0xffffffff,0x3fea6fff,0xffffffff,
    0xfd15ffff,0x0dffffff,0xffff7000,0x20001bdf,0x7f401bb9,0xffffffff,
    0x4405ffff,0x00000aba,0xffffffb8,0x5cc002ff,0x0000009b,0x00000000,
    0x026ea600,0x0006ea20,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x98000000,0x40006eed,
    0x000eeed8,0x10000800,0x40599999,0x40ccccca,0x05eeeeeb,0x15e5cc00,
    0x33331000,0x03333333,0x06b32a20,0x33333101,0x26666601,0x1776c001,
    0x13797100,0x6654c008,0x3331041a,0x33333333,0x20133333,0x0007eed9,
    0x007f76cc,0x001ae000,0x2777fec4,0x1bffdd90,0x6feeeec8,0xffff9000,
    0xa8005dff,0xffffffff,0x9104ffff,0xdffffffd,0x7fd43f15,0xfd87ffff,
    0x004fffff,0x8807fdf5,0xfffeffec,0xfd303f14,0x53dffdff,0x7ffffd4f,
    0xffffffff,0x7b804fff,0x03ea0000,0x00f70000,0x2000fb80,0x1b2003f8,
    0x437fd100,0x4004fda8,0xfdaaaaaa,0xf980aaab,0x36e60acf,0x7dd42fef,
    0xaa881aac,0xd000adfa,0xffa80feb,0x3bf2609b,0x577cc2fb,0x87f7f4c0,
    0xaaaaabfa,0xaaaaaafd,0x007b804f,0x0003ea00,0x8000f700,0x1f2004f8,
    0x4c00d900,0x2fe401ff,0x403dc000,0xf9801ef9,0x002f982f,0x3f7001fc,
    0x06fd40fe,0x88bff620,0x0ffc806f,0x81b201f5,0x007b804e,0x0003ea00,
    0x0000f700,0x7f1001f7,0x2006c800,0x7f7000ee,0x407b8000,0x2e000fe8,
    0x002f982f,0x4f8801fc,0x01be20fe,0x07dc5fd0,0x1f50fe80,0x04e81b20,
    0x200007b8,0x400000fa,0xf880007b,0x000fc804,0x2fa80364,0x0007ec00,
    0x2fb80f70,0x4c17c400,0x01fc002f,0x20fe0fc8,0x7d4002fc,0xfb801b62,
    0x1b201f50,0x07b804e8,0x203ea000,0x99910008,0x999999fd,0x1f700999,
    0x4001fc40,0x05f8806c,0x0003f980,0x00bb01ee,0x017cc020,0x3e600fe0,
    0x02f41fc3,0x0bd0fc40,0x01f52440,0x804e81b2,0xcccc887b,0x43ea01cc,
    0x0cefffd9,0x3fbbb620,0xeeeeeeee,0x027c400d,0xd90001f9,0x0003f500,
    0x7b800136,0x00001fc0,0x7f000be6,0x87f0dd00,0x900001f8,0x07d4000f,
    0x013a06c8,0x3fb621ee,0x3ea02eef,0xcaadffb8,0x0f7000ef,0x407dc000,
    0xd90004f8,0x4000f700,0x1ee0006b,0x00001f98,0x3e0017cc,0x7c0fd403,
    0x00007d43,0x10004f98,0x35036407,0x3e60f700,0xfbf5000e,0x401fa207,
    0x2200007b,0x000fc84f,0x0db00d90,0x0007cc00,0x01ee07b8,0x00be6000,
    0x05f807f0,0x0006c87f,0x0016fdc0,0x0001b200,0x037ee1ee,0x402ffa80,
    0x07b802fb,0x107dc000,0x3640009f,0x10002740,0x1ee0005f,0x800006c8,
    0x1fc002f9,0x0fe01f90,0x300000db,0x0359dffb,0x00036400,0x013f23dc,
    0x2200fea0,0x007b804f,0xf727c400,0x03640001,0x3e00027c,0x40f70003,
    0x9800006c,0x81fc002f,0xb0fe04f8,0x4400000d,0x0cfffeca,0x00036400,
    0x03fd8bdc,0x2001f500,0x007b805d,0xf88fb800,0x03640004,0xf1000274,
    0x7b800265,0x2aa01b20,0x41aaaaaa,0x1fc002f9,0x0fe00fd8,0x000000db,
    0x000efb98,0x2e0001b2,0x0002fe8f,0x2ec003ea,0x00003dc0,0x007de7c4,
    0x3601b200,0x43e60006,0x81ee004e,0x7ffcc07c,0x4c6fffff,0x41fc002f,
    0x21fc02f9,0x0000007c,0x2001fd30,0xfb80006c,0x20004fff,0x0bb000fa,
    0x00000f70,0x00013fee,0x01ee01b2,0x013a6b80,0x03ea07b8,0xf5333310,
    0x8005f307,0xf806e83f,0x00007dc3,0x02f88000,0x70000d90,0x007f71df,
    0x6c003ea0,0x0007b805,0x001ff100,0xf500d900,0xe9360003,0x981ee004,
    0x2f88001f,0x22002f88,0x7777c42f,0xefeeeeee,0x0005f33e,0x13a00020,
    0x40003640,0x001fdc7b,0x5d8007d4,0x00007b80,0x00009f10,0x02f401b2,
    0x09d1fcc0,0x13e03e40,0x740be200,0x107ee004,0x99999999,0x7459df99,
    0x06c80006,0xd9006d80,0x90f70000,0x0fa8007f,0xf700bb00,0x3ee00000,
    0x0d900000,0xd000bea0,0xf002741f,0x001fc80b,0x06b817c4,0xf0001f60,
    0x0007f307,0x0003f275,0x01b2009d,0x7e41ee00,0x003ea003,0x0fd402ec,
    0x027c0000,0x400d9000,0x5f9000ed,0x5f5005e8,0x8800dd00,0x007f302f,
    0xf80009f3,0x4003f903,0x009f94fb,0x6c8017d4,0x207b8000,0x1f5003fc,
    0x26017600,0x01b8805f,0x00000fb8,0xff9801b2,0x5c2fe402,0x17e600ef,
    0x80177cc0,0x0bf202f9,0x80006f98,0x013f603f,0x3ffc97f2,0x2005f980,
    0x7b80006c,0x54017e40,0x00bb000f,0x4c42b7f2,0xf802ffdb,0x36400005,
    0x2b3f6200,0x409fb730,0x7309cfe9,0x6c4001df,0x2a209adf,0x7e401ffd,
    0x07fee61c,0xb00fe000,0x75cc37df,0x77df643f,0x3bf6620a,0xd9997100,
    0x0039999f,0x4c0fb971,0x543ccffc,0x881ccfdc,0x00bcfecb,0x7fffffe4,
    0x665c0cff,0x0bcdfdcc,0x99997100,0x99999fd9,0x7ffe4039,0x8802efff,
    0x4ffffffc,0x3ffee000,0x0befffff,0xfffff900,0x260001bf,0x01cefccc,
    0x3fffffaa,0xd34b81ef,0x7fffffff,0xfffffa80,0x804fffff,0x3207fffa,
    0x20efffff,0x84fffffe,0x2ffffff9,0x9acba880,0xffffd100,0x005fffff,
    0x3fffffea,0xffffffff,0x1acb9805,0x15773000,0x2a620000,0x20001abc,
    0x0000abb8,0x7fffffec,0x1bba8804,0xacb98800,0x00000009,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x4cccccc4,0x99800199,0x09999999,0x33333100,0x4cccc401,
    0x4ccccc09,0x4cccc009,0x26662099,0x99999999,0x4cccc409,0x26666019,
    0x01999880,0x4c099998,0x99999999,0x99880999,0x33330099,0x01333103,
    0x83333330,0x99999998,0x99999999,0x26666209,0x99999999,0x65c40999,
    0x7ffffcc1,0xceffffff,0x7fffe400,0xefffffff,0xfffff302,0x3ffe03ff,
    0xff92ffff,0x640dffff,0x26ffffff,0xfffffffb,0x264fffff,0x6fffffff,
    0x2fffffe8,0x1bffffe2,0x1fffffd8,0xfffffffb,0x88ffffff,0x40ffffff,
    0x44fffffc,0x201fffff,0x5ffffffc,0x3ffffffe,0xffffffff,0xffff34ff,
    0xffffffff,0x7c49ffff,0x65542fff,0xbaaaaabf,0x2a202ffc,0xaaaaaeea,
    0x980dfdca,0x201aaaee,0x22fdaaa9,0x1aabfca8,0x37eaaa20,0x2aafee1a,
    0xfaaaaaaa,0x55fe5544,0xdfea881a,0x0adfc982,0x8b7f2a20,0xfdaaaaa8,
    0x981aaaaa,0xa881abfc,0x54c0aeea,0x2a206ffb,0x260adfaa,0xaaaadfba,
    0xfaaaaaaa,0x2aff2aa4,0xaaaaaaaa,0x3ffee4fa,0x801f505f,0x6d801fd8,
    0xd905fa80,0x882ec000,0x2f98003f,0xfb800fb8,0x9001f501,0x01fb009f,
    0x6400dd10,0x007d4006,0x6fc406d8,0x809f002f,0x4274003f,0x93e000fa,
    0x504ffffa,0x01fa001f,0x1fd401b6,0x9d0003dc,0x640036c0,0x9801f707,
    0x003ea04f,0x3a2007fb,0x000fd806,0x1f5001b2,0xf101b600,0x9f001fb5,
    0x74003f80,0x2000fa84,0x077fec4f,0xf3000fa8,0x2006d803,0x880fa86d,
    0x409d00aa,0x27c001f9,0x37400fb8,0x6c403ea0,0x27cc002f,0xc8005f70,
    0x007d4006,0x57c406d8,0x04f804f8,0x13a001fc,0x4f8003ea,0x07d40088,
    0x6d807f00,0xf303ee00,0x207ff503,0x0027403f,0x03ee03f5,0x7d401fc8,
    0x001fe880,0x9f307f70,0x800d9000,0x0db000fa,0x03f72f88,0x01fc04f8,
    0x03ea0f60,0x50002d80,0x07e6001f,0x7dc00db0,0x7e417c40,0x402f886d,
    0x0db000fb,0x07f502cc,0xee881f50,0x0fe40001,0x32000df1,0x007d4006,
    0x17c406d8,0x404f80bd,0x4001503f,0x000500fa,0xb000fa80,0x400db00d,
    0x9f07f06d,0x01f981f7,0x7c4017c4,0x0bf10003,0xef983ea0,0x1dd00000,
    0x640003f6,0x007d4006,0x17c406d8,0x027c05f5,0x0017c0fe,0x01f501f5,
    0x007d4000,0x3600bfa2,0x207f5006,0x7c57cc3f,0x6c007d42,0x000fb806,
    0x2a001fb0,0x001df50f,0x7e6fc400,0x01b20002,0x36001f50,0x3617c406,
    0x7f013e06,0x54007f10,0x000fa80f,0x2603ea00,0xb003ffca,0x40bf700d,
    0x4e87dc4e,0x1fa803dc,0xb8002740,0x23ea002f,0x0004fffb,0x001ffd40,
    0xf5001b20,0xdddddddd,0xf880dfdd,0x4f81fcc2,0x777777c0,0x3ea003fe,
    0x0feeeeee,0x3fea0000,0xcfffffff,0x267b6000,0xdfeca999,0x4db17600,
    0xf003e47c,0x000fcc09,0x2a0027cc,0xefd8cfdf,0xff100002,0x06c80005,
    0x77777d40,0x6feeeeee,0x7e417c40,0x77c04f80,0x03feeeee,0x3bbbbea0,
    0x53000fee,0xccccfa80,0xd8005fec,0xffffffff,0x7c6c801e,0x06c87ea3,
    0x06c81f20,0x5000dd00,0x1ffa87ff,0xfefe8000,0x01b20000,0x36001f50,
    0x4417c406,0x7c04f85f,0x2003f883,0x00fa80fa,0x501fffe8,0x017f601f,
    0x55555db0,0x2a7b8003,0x0bb1fc1f,0x7c417cc0,0x01fc8003,0xb103fa80,
    0x9fc8000d,0x320006f8,0x007d4006,0x17c406d8,0x027c2fa8,0x0017c0fe,
    0x01f501f5,0x04ffffa8,0x77dc01f5,0x000db000,0x43e43ea0,0xd0013a5d,
    0x8001f70b,0x40e403fa,0x13e200fa,0xf31fd400,0x01b20009,0x36001f50,
    0xd017c406,0x1fc04f8d,0x3ea000a8,0xff700500,0x03ea0bff,0x36009f30,
    0x3f300006,0x7c3ee17a,0x207dc003,0x2fc4005e,0x07d41fc0,0x10007ee0,
    0x005f70bf,0xfa800d90,0x880db000,0xf8fe602f,0x0001fc04,0x74000fa8,
    0x03ffff11,0x3ee003ea,0x0006d802,0x07f13f10,0x005f15f3,0x0be63f88,
    0xf001fb00,0xd001f507,0x00ee800b,0x6c8003fb,0x8007d400,0x017c406d,
    0x2027c3f2,0xf500003f,0x217c4001,0x03ea00ba,0x36007ec0,0x2be00006,
    0xf39d00fb,0x64d90003,0x017dc007,0x00fa83f8,0xfb000fb8,0x00774403,
    0xfa800d90,0x880db000,0xfa7c402f,0x0001fc04,0x22000fa8,0x0fa8002f,
    0xd809f100,0x2fe00006,0x3e7b206d,0xf1f98000,0x027c4009,0x01f507f0,
    0xf7007f10,0x00bf3005,0x3ea00364,0x880db000,0xf9fb802f,0x0001fc04,
    0x22000fa8,0x0fa8002f,0xd807f200,0x33a00006,0x1f3ea04f,0x1face800,
    0x8003ba00,0x000fa83f,0x04f980fb,0x6400fea0,0x007d4006,0x17c406d8,
    0x404fee80,0xf500003f,0x017c4001,0xccfdcb88,0x2cee802c,0x999fd993,
    0xfb000599,0x3ffc405f,0x0ddf7000,0x6666fc40,0xcccccccc,0xbfb9713f,
    0x6fcc0599,0x33fae23c,0x3f32a03c,0x999931cf,0x99999fd9,0xcdfdca85,
    0xcfecc983,0x37f2e20b,0x3fe603cc,0xcdfcca84,0x8801cccc,0xccccfdcb,
    0xcccccccc,0xfff3002f,0x500bffff,0x3ffeebff,0x06ffffff,0xd807fc80,
    0x3e20006f,0x3fe2003f,0xffffffff,0xff33ffff,0x80dfffff,0xff50fffe,
    0x3a01ffff,0xf94fffff,0xffffffff,0xffe8dfff,0x7dc0ffff,0x262fffff,
    0x0fffffff,0x3fa13f20,0xffffffff,0xffff9803,0xffffffff,0x002fffff,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x80000000,0x99999998,0x26620009,0x4ccc0009,0x99999881,
    0x00009999,0x33333331,0x99998001,0x00099999,0x20066662,0x44009999,
    0x066c02ba,0x20000000,0x095004d9,0x00011000,0x32600110,0xcccccccc,
    0x7ffc3ccc,0xefffffff,0x3ffe202c,0x3fea005f,0x3ffea4ff,0xffffffff,
    0xff1001df,0x09ffffff,0x7ffffe40,0x1007ffff,0x40dfffff,0x01fffffd,
    0x9fffffd3,0x0007ff50,0xff910000,0x001b2003,0x3fffb2a2,0x5401a8be,
    0x03dfffed,0x3bbbbbea,0x45feeeee,0xaaaaeea9,0x205fecba,0x001fdfc9,
    0xa815dddb,0xaaaabfca,0x004fecaa,0xbbf55553,0x5554400f,0x01aaadfa,
    0x02bbee60,0x02cfda88,0xbb317df3,0x0bff2201,0x7dc00000,0x1b2000cf,
    0x57bff300,0x09ffffb7,0x2af3bf62,0xfa81efdc,0x80774400,0x0efb804e,
    0x009d3f30,0xa80bd5f3,0x03fb800f,0x2f9af980,0x000fe000,0x22007ee0,
    0x007ec05f,0x01efd980,0x9fd50000,0x00d90001,0x3a601ff8,0x03ff885f,
    0x1f507fa6,0x3a01fd80,0x209f3004,0x400fb9f9,0xfa80bd6c,0x001fd000,
    0x0017a7c8,0xd00003f8,0x801f900d,0xea80004f,0x300000df,0x40003bfd,
    0x0bea006c,0x3f617e60,0x441dd000,0x200fec06,0x07ee004e,0x80fe27e6,
    0xa80bd3f8,0x05f5000f,0x03ee4f80,0x0001fc00,0x3e604f98,0x0004f803,
    0x0033fee0,0x0177ec40,0x50036400,0x50f2005f,0x27c4005f,0xd005f900,
    0x986e8009,0x7dc0f91f,0x0fa80bd0,0x4007f100,0x00fe21f9,0x00001fc0,
    0x017a03f7,0x2000036c,0x2003ffc8,0x0003ffc8,0xff001b20,0x017a0001,
    0x2e003ee0,0x009d003f,0x8fcc1fa8,0x749d02f8,0x8007d405,0x1b2001fa,
    0x1fc001b6,0x21ba0000,0x5f3000fc,0xf9100000,0xcffb805d,0x36400000,
    0x2f7fa600,0x007f001a,0xfa803f30,0x0013a004,0x21f985f1,0x3a1fa86d,
    0x4007d405,0x3e2006e8,0x8001fa83,0x4c00003f,0x000fe63f,0x400000d9,
    0x7541efd9,0x2a0000df,0xfdaaaaaa,0x0aaaaaaa,0xffffec88,0x01f981de,
    0x7cc07f00,0x00274005,0x987e61fc,0x17a2f41f,0x54401f50,0x3ea000ef,
    0xf0009f00,0xf9000007,0x32001ba3,0x4000003f,0x9ff72ffd,0xfff98000,
    0xffffffff,0x803fffff,0x43ffcb98,0x7f0001f9,0x20017e20,0x44e8004e,
    0xf32f41f9,0x7d405e85,0xffeeeeee,0x36c000ef,0x7f000f90,0x3ba00000,
    0x3a6001fc,0x02a80fef,0x037faa00,0x0003bfd3,0x4cccccc4,0x999999ed,
    0x97ea0000,0xf88002f8,0x000ee882,0x4e8004e8,0x43ea0fcc,0x5405e86c,
    0xeeeeeeef,0x22004fff,0x00be602f,0x000007f0,0xa800ffe6,0xf98bd0df,
    0x7ecc002f,0x67f5401e,0x36400000,0x1f500000,0x7d40027c,0x2200ee80,
    0xd0009d03,0xcf81f989,0x405e83f8,0x7d4c00fa,0x00fb801e,0x0fe002f4,
    0x07d80000,0x8bea36c0,0x322001fc,0x7dc002ef,0x3200003f,0x003f1006,
    0x01f917c4,0x1fd86e80,0x27407cc0,0x3e61fc00,0x80fcfb81,0x007d405e,
    0x7401fd88,0xcccccccf,0x3e000fec,0x80071003,0x41fc007c,0x4009f0fd,
    0x20003ffb,0x0002ffc8,0x7f3006c8,0xf10fcc00,0x20fe400b,0x1fa801fc,
    0x7cc004e8,0x7c40fcc1,0xa80bd04f,0x01fc000f,0xfffffff3,0x007fffff,
    0x0fa801fc,0xa801f200,0xfacf881f,0x0cffa801,0xdfb30000,0x03640005,
    0x8802ff98,0x00dfa86e,0x3bee27e4,0xcccccccc,0x04e81fdc,0x0fcc3dc0,
    0x0bd00cb8,0x64000fa8,0xc801b206,0x400fe006,0x1f2000fa,0xf702f980,
    0xdfea80bd,0xd3000001,0xd90003bf,0x33ffe600,0x0ffe4c1a,0x261bffa8,
    0xffd83fea,0xffffffff,0x04e81fff,0x3e617a20,0x80bd0001,0x3dc000fa,
    0x7cc009f0,0x2007f001,0x1f2000fa,0x3a06f880,0x3dfb302f,0x2a000000,
    0x32000cff,0xd51d1006,0x9fffffff,0xfffd8801,0x0001efff,0x2004e800,
    0x01f981fd,0xfa80bd00,0xa836c000,0x0274001f,0x1f5003f8,0x2003e400,
    0x3ff981fc,0x0002ffb8,0x5ff70000,0x8001b200,0x00aacba9,0x055dcc40,
    0x9d000000,0x4c13f200,0x0bd0001f,0x26000fa8,0x000db03f,0x00fe00f7,
    0xf90007d4,0x8cff8800,0xbcfcefa8,0x00000790,0x00791000,0x000000ea,
    0x00000000,0xb5013a00,0x00fcc0bf,0x7d405e80,0x01df5000,0xf10007f1,
    0x2007f005,0x1f2000fa,0x3fff6200,0x05ffd0ef,0x00000000,0x00000000,
    0x00000000,0xcefca800,0xfffccccc,0x9bfb7103,0x665c4059,0x32e22cef,
    0xccccccfd,0x985ffdcc,0x02ccdfdc,0x33bf3326,0xdf999732,0x99999999,
    0x2e201fb9,0xcccfeccc,0x3773001c,0x00000000,0x00000000,0x00000000,
    0x7f400000,0xefffffff,0x7ffd401c,0x3ee06fff,0x265fffff,0xffffffff,
    0x01ceffff,0xdffffff7,0x7ffffdc0,0xfffff75f,0xffffffff,0x2a01ffff,
    0xffffffff,0x000005ff,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00880000,0x00013000,0x65c004c0,0xcb804ccc,0x11004ccc,
    0x88000040,0x80000000,0x100cccc8,0x97079999,0x30599999,0x89999999,
    0x82ccccc8,0x01ccccc9,0x774c02a8,0xaaaa82ee,0x5c000002,0x02dffffe,
    0xfffd9510,0xc88003df,0x11dffffe,0x6f77f647,0x77f76400,0x3199930d,
    0x7543bffb,0x99300bff,0x3ffb6219,0x665c00ce,0x7edc40cc,0x7f76c42d,
    0xdfddd301,0xdddfdd90,0xffddd507,0xeffe88bd,0xffee983e,0x405d802e,
    0x442ffff8,0xa803ffff,0x6ff54004,0x0dfecaab,0x2f3bfea0,0x004febaa,
    0x9557bdf7,0xf88f9bfd,0x42f98002,0xbefcfeea,0xbefb8efb,0xfdd505fc,
    0xd779df53,0x776c03ff,0x3bfee1fe,0x3f303fdb,0xf881b200,0x00be6003,
    0xbf5009f5,0x7c02f400,0x7fdc1fff,0x2ff9807f,0x403bf700,0x17100fea,
    0x6403fc80,0x3ffd404f,0x7d400274,0x41dff500,0x7d44fff8,0x13f7e600,
    0xf9803f4c,0x7b81bfb1,0x32003f30,0xb003e406,0x817ea00d,0x2f4004fa,
    0x207fff40,0x4403fffd,0x4c01fdee,0x0bf1005f,0x540df000,0x0ff3002f,
    0x203b60d9,0x03bea06c,0x01fc17f6,0xfa807ff3,0xfeaf9802,0x01f98003,
    0x2f980d90,0x2003f880,0x04fb85fa,0x0442f402,0xfff0fffb,0x3a1fb00d,
    0x001ba00e,0xb80007f3,0x800bf107,0x4c0fa87d,0x204e83ff,0x40f901fa,
    0x013e605e,0x7fcc02fc,0x3f30001f,0x3601b200,0x000fc806,0x09f72fd4,
    0xbd0adfe8,0xfc9bf6a2,0x17ffcc6f,0x5f88bf20,0xb0005f30,0x07b8000d,
    0x498003f5,0x77dc1f98,0x3ea03f85,0x2f40f901,0x36003f30,0x00ef9806,
    0x4007e600,0x01fa806c,0xf980027c,0xc9803fbd,0xfdefdffe,0x3fee0cef,
    0x2037fdc5,0x84fa83fa,0x7a8000fa,0x66665540,0x0f907c9a,0x743f8000,
    0x07e60fbd,0x0f901fa8,0x03f302f4,0x3e601b60,0x0fcc0002,0xbd006c80,
    0x00007dc0,0x30007ff3,0x037dffd9,0xffd13fea,0x702fc403,0xffffc85f,
    0xffffffff,0xfb80ffff,0xfffeefff,0x000bb07f,0x2be25d80,0x501ee3f8,
    0xe81f203f,0x4007e605,0x01f9806d,0x800fcc00,0x01f7006c,0xf900017a,
    0x320001df,0x7fcc04ff,0x8817fe23,0x0fec00ee,0x999999f9,0x99999999,
    0x0aefd819,0x13a0fb30,0x5cf70000,0x406c9767,0x40f901fa,0x007e605e,
    0x0fcc036c,0x007e6000,0x09f00364,0x640003f3,0x000ef9af,0x00fe5fd4,
    0x7fd43ff1,0x2007f201,0x003ea6e8,0x8017e400,0x000db07b,0x4bd0fa80,
    0xa809d0fa,0x740f901f,0x4007e605,0x01f9806d,0x800fcc00,0x03f2006c,
    0x7ec000db,0x4003be62,0x803fa5f8,0x2027dc7d,0x88e2001a,0xf880003f,
    0x5c1ee003,0x7c400007,0x2fe22f8a,0x0fd402f8,0x817a07c8,0x0db001f9,
    0x80003f30,0x0db001f9,0x7f11fc40,0x20bf6000,0xfe800ee8,0x20017e20,
    0xd0000001,0x3f30000d,0xf983dc00,0x67400003,0x0f9ed87b,0x7c80fd40,
    0x1f9817a0,0xf300db00,0x3f880003,0x4006fc80,0x4001f26d,0x3ba202fd,
    0x2a0bee00,0x0000002f,0x00bf1000,0x801fcc10,0x03f607fb,0xd905c880,
    0x0f9f50bd,0x1f203f50,0x07e605e8,0x7cc036c0,0x06e80001,0x001bffa2,
    0x0013e5f3,0x3a2007f6,0x5405300e,0x00000000,0x0033ee00,0x06f87f66,
    0x103ffec4,0xff5003df,0x20bfee05,0xfa805ff8,0x2f40f901,0x36003f30,
    0x001f9806,0x512dfa80,0x59f95df9,0x07ef7400,0x99dfd500,0xffb97103,
    0x00000017,0x50000000,0x262137ff,0x7d43ffda,0xff9510bd,0x30599f75,
    0x262139fd,0x2602efdb,0x80ff607f,0x40bdfdb8,0xcee83cfc,0x337f72a2,
    0x59fd9501,0x6fdd554c,0x02cccccc,0x3ffffee0,0x01bff24f,0x2005ffa8,
    0x4fffffe8,0xffffffa8,0x00000001,0xb1000000,0xdfffffff,0x7fffd407,
    0xff70cfff,0x7ffe40df,0x002effff,0x3fea0000,0x7fe42fff,0xd2fff40f,
    0x20bfffff,0x366ffffd,0xffffffff,0x4006ffff,0x0001aca9,0x00000000,
    0x00000000,0x40000000,0x009aca98,0x006b2ea0,0x2f2a6200,0x0000001a,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0xaaaa8800,0x02aaaa21,0x33333333,0x33333333,0x00004c01,
    0x55441980,0xaaaaaaaa,0xaaaaaaaa,0x99950aaa,0x99999999,0x00007999,
    0x00000000,0x00000000,0x00000000,0x00000000,0x263ffff8,0xff11ffff,
    0xffffffff,0xffffffff,0x0dffe985,0xfe809b00,0xffff71ef,0xffffffff,
    0xffffffff,0x3ffff27f,0xffffffff,0x000006ff,0x00000000,0x00000000,
    0x00000000,0x40000000,0x3e22ffff,0x2aaa0fff,0xaaaaaaaa,0x42aaaaaa,
    0x1ffaadf9,0x037eab90,0x893fffea,0x88888888,0x88888888,0x332a0888,
    0xcccccccc,0x0003cccc,0x00000000,0x00000000,0x00000000,0x00000000,
    0x20fffec0,0x00007fff,0x3a22fcc0,0xf517e42f,0xffffb81d,0x00000005,
    0x00000000,0x00000000,0x00000000,0x00000000,0x80000000,0x7f40fffc,
    0x4000006f,0x2f3f605a,0x1ff983fd,0x007fffe2,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x3ee00000,0x05ffd87f,0xb8000000,
    0x3a201eff,0x0005d40f,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0xffa80000,0x5c4ffc86,0xcccccccc,0xcccccccc,0x0008000c,
    0x00000051,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x09ff3000,0xeed85ff7,0xeeeeeeee,0x1eeeeeee,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x88000000,0x1ff983ff,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x17f40000,0x00007fc4,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x03b812a0,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,
};

static signed short stb__courier_42_usascii_x[95]={ 0,8,4,3,4,3,4,8,10,5,0,2,5,3,
8,4,4,4,3,3,3,3,4,3,4,4,8,5,0,1,0,0,3,0,1,2,2,1,2,2,1,4,3,1,
2,0,0,0,3,1,1,3,2,1,0,0,1,1,3,0,0,0,4,1,8,2,0,3,2,2,3,2,1,3,
3,3,3,0,1,2,0,2,3,3,2,1,1,1,1,2,4,0,10,0,3, };
static signed short stb__courier_42_usascii_y[95]={ 30,6,7,5,5,6,10,7,7,7,7,10,24,18,
25,4,6,6,6,6,7,7,6,7,6,6,14,14,10,15,10,8,6,8,8,8,8,8,8,8,8,8,8,8,
8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,7,4,7,6,38,5,13,7,13,7,13,7,13,7,6,
6,7,7,13,13,13,13,13,13,13,8,14,14,14,14,14,14,7,7,7,16, };
static unsigned short stb__courier_42_usascii_w[95]={ 0,6,14,16,15,16,15,6,8,7,14,18,9,16,
6,15,15,15,15,16,15,16,16,15,15,15,6,9,18,20,18,14,15,22,20,18,19,19,19,19,20,15,19,21,
19,23,21,19,18,20,21,16,18,20,22,22,20,20,16,7,14,7,15,23,7,19,21,17,20,18,18,19,20,16,
12,19,16,22,20,18,21,20,18,16,18,20,21,21,20,20,15,8,2,8,16, };
static unsigned short stb__courier_42_usascii_h[95]={ 0,25,11,28,29,25,21,12,28,28,14,19,12,3,
6,30,25,24,24,25,23,24,25,24,25,25,17,20,19,8,19,23,27,22,22,23,22,22,22,23,22,22,23,22,
22,22,22,23,22,27,22,23,22,23,22,22,22,22,22,28,30,28,11,3,7,18,24,18,24,18,23,24,23,24,
31,23,23,17,17,18,24,24,17,18,23,17,16,17,16,23,16,28,28,28,7, };
static unsigned short stb__courier_42_usascii_s[95]={ 253,186,58,70,45,169,130,222,123,107,207,
184,229,150,119,14,193,33,125,209,180,108,226,205,1,17,247,243,165,73,146,
240,153,66,45,196,1,227,207,139,164,148,119,105,89,21,185,99,23,132,1,
215,232,159,65,42,127,109,88,99,30,115,239,126,111,20,183,40,141,1,221,
88,21,49,1,1,82,80,103,220,66,162,124,203,42,143,164,58,186,61,239,
90,87,61,94, };
static unsigned short stb__courier_42_usascii_t[95]={ 1,1,147,1,1,1,106,129,1,1,129,
106,129,147,147,1,1,33,33,1,59,33,1,33,33,33,83,1,106,147,106,
33,1,106,106,59,106,83,83,59,83,83,59,83,106,106,83,59,83,1,83,
59,59,59,83,83,83,106,83,1,1,1,129,147,147,129,33,129,33,129,33,
33,59,33,1,59,59,129,129,106,33,33,129,106,59,129,129,129,129,59,106,
1,1,1,147, };
static unsigned short stb__courier_42_usascii_a[95]={ 356,356,356,356,356,356,356,356,
356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,
356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,
356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,
356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,
356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,
356,356,356,356,356,356,356, };

// Call this function with
//    font: NULL or array length
//    data: NULL or specified size
//    height: STB_FONT_courier_42_usascii_BITMAP_HEIGHT or STB_FONT_courier_42_usascii_BITMAP_HEIGHT_POW2
//    return value: spacing between lines
static void stb_font_courier_42_usascii(stb_fontchar font[STB_FONT_courier_42_usascii_NUM_CHARS],
                unsigned char data[STB_FONT_courier_42_usascii_BITMAP_HEIGHT][STB_FONT_courier_42_usascii_BITMAP_WIDTH],
                int height)
{
    int i,j;
    if (data != 0) {
        unsigned int *bits = stb__courier_42_usascii_pixels;
        unsigned int bitpack = *bits++, numbits = 32;
        for (i=0; i < STB_FONT_courier_42_usascii_BITMAP_WIDTH*height; ++i)
            data[0][i] = 0;  // zero entire bitmap
        for (j=1; j < STB_FONT_courier_42_usascii_BITMAP_HEIGHT-1; ++j) {
            for (i=1; i < STB_FONT_courier_42_usascii_BITMAP_WIDTH-1; ++i) {
                unsigned int value;
                if (numbits==0) bitpack = *bits++, numbits=32;
                value = bitpack & 1;
                bitpack >>= 1, --numbits;
                if (value) {
                    if (numbits < 3) bitpack = *bits++, numbits = 32;
                    data[j][i] = (bitpack & 7) * 0x20 + 0x1f;
                    bitpack >>= 3, numbits -= 3;
                } else {
                    data[j][i] = 0;
                }
            }
        }
    }

    // build font description
    if (font != 0) {
        float recip_width = 1.0f / STB_FONT_courier_42_usascii_BITMAP_WIDTH;
        float recip_height = 1.0f / height;
        for (i=0; i < STB_FONT_courier_42_usascii_NUM_CHARS; ++i) {
            // pad characters so they bilerp from empty space around each character
            font[i].s0 = (stb__courier_42_usascii_s[i]) * recip_width;
            font[i].t0 = (stb__courier_42_usascii_t[i]) * recip_height;
            font[i].s1 = (stb__courier_42_usascii_s[i] + stb__courier_42_usascii_w[i]) * recip_width;
            font[i].t1 = (stb__courier_42_usascii_t[i] + stb__courier_42_usascii_h[i]) * recip_height;
            font[i].x0 = stb__courier_42_usascii_x[i];
            font[i].y0 = stb__courier_42_usascii_y[i];
            font[i].x1 = stb__courier_42_usascii_x[i] + stb__courier_42_usascii_w[i];
            font[i].y1 = stb__courier_42_usascii_y[i] + stb__courier_42_usascii_h[i];
            font[i].advance_int = (stb__courier_42_usascii_a[i]+8)>>4;
            font[i].s0f = (stb__courier_42_usascii_s[i] - 0.5f) * recip_width;
            font[i].t0f = (stb__courier_42_usascii_t[i] - 0.5f) * recip_height;
            font[i].s1f = (stb__courier_42_usascii_s[i] + stb__courier_42_usascii_w[i] + 0.5f) * recip_width;
            font[i].t1f = (stb__courier_42_usascii_t[i] + stb__courier_42_usascii_h[i] + 0.5f) * recip_height;
            font[i].x0f = stb__courier_42_usascii_x[i] - 0.5f;
            font[i].y0f = stb__courier_42_usascii_y[i] - 0.5f;
            font[i].x1f = stb__courier_42_usascii_x[i] + stb__courier_42_usascii_w[i] + 0.5f;
            font[i].y1f = stb__courier_42_usascii_y[i] + stb__courier_42_usascii_h[i] + 0.5f;
            font[i].advance = stb__courier_42_usascii_a[i]/16.0f;
        }
    }
}

#ifndef STB_SOMEFONT_CREATE
#define STB_SOMEFONT_CREATE              stb_font_courier_42_usascii
#define STB_SOMEFONT_BITMAP_WIDTH        STB_FONT_courier_42_usascii_BITMAP_WIDTH
#define STB_SOMEFONT_BITMAP_HEIGHT       STB_FONT_courier_42_usascii_BITMAP_HEIGHT
#define STB_SOMEFONT_BITMAP_HEIGHT_POW2  STB_FONT_courier_42_usascii_BITMAP_HEIGHT_POW2
#define STB_SOMEFONT_FIRST_CHAR          STB_FONT_courier_42_usascii_FIRST_CHAR
#define STB_SOMEFONT_NUM_CHARS           STB_FONT_courier_42_usascii_NUM_CHARS
#define STB_SOMEFONT_LINE_SPACING        STB_FONT_courier_42_usascii_LINE_SPACING
#endif

