// Font generated by stb_font_inl_generator.c (4/1 bpp)
//
// Following instructions show how to use the only included font, whatever it is, in
// a generic way so you can replace it with any other font by changing the include.
// To use multiple fonts, replace STB_SOMEFONT_* below with STB_FONT_times_39_usascii_*,
// and separately install each font. Note that the CREATE function call has a
// totally different name; it's just 'stb_font_times_39_usascii'.
//
/* // Example usage:

static stb_fontchar fontdata[STB_SOMEFONT_NUM_CHARS];

static void init(void)
{
    // optionally replace both STB_SOMEFONT_BITMAP_HEIGHT with STB_SOMEFONT_BITMAP_HEIGHT_POW2
    static unsigned char fontpixels[STB_SOMEFONT_BITMAP_HEIGHT][STB_SOMEFONT_BITMAP_WIDTH];
    STB_SOMEFONT_CREATE(fontdata, fontpixels, STB_SOMEFONT_BITMAP_HEIGHT);
    ... create texture ...
    // for best results rendering 1:1 pixels texels, use nearest-neighbor sampling
    // if allowed to scale up, use bilerp
}

// This function positions characters on integer coordinates, and assumes 1:1 texels to pixels
// Appropriate if nearest-neighbor sampling is used
static void draw_string_integer(int x, int y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0, cd->t0); glVertex2i(x + cd->x0, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t0); glVertex2i(x + cd->x1, y + cd->y0);
        glTexCoord2f(cd->s1, cd->t1); glVertex2i(x + cd->x1, y + cd->y1);
        glTexCoord2f(cd->s0, cd->t1); glVertex2i(x + cd->x0, y + cd->y1);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance_int;
    }
    glEnd();
}

// This function positions characters on float coordinates, and doesn't require 1:1 texels to pixels
// Appropriate if bilinear filtering is used
static void draw_string_float(float x, float y, char *str) // draw with top-left point x,y
{
    ... use texture ...
    ... turn on alpha blending and gamma-correct alpha blending ...
    glBegin(GL_QUADS);
    while (*str) {
        int char_codepoint = *str++;
        stb_fontchar *cd = &fontdata[char_codepoint - STB_SOMEFONT_FIRST_CHAR];
        glTexCoord2f(cd->s0f, cd->t0f); glVertex2f(x + cd->x0f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t0f); glVertex2f(x + cd->x1f, y + cd->y0f);
        glTexCoord2f(cd->s1f, cd->t1f); glVertex2f(x + cd->x1f, y + cd->y1f);
        glTexCoord2f(cd->s0f, cd->t1f); glVertex2f(x + cd->x0f, y + cd->y1f);
        // if bilerping, in D3D9 you'll need a half-pixel offset here for 1:1 to behave correct
        x += cd->advance;
    }
    glEnd();
}
*/

#ifndef STB_FONTCHAR__TYPEDEF
#define STB_FONTCHAR__TYPEDEF
typedef struct
{
    // coordinates if using integer positioning
    float s0,t0,s1,t1;
    signed short x0,y0,x1,y1;
    int   advance_int;
    // coordinates if using floating positioning
    float s0f,t0f,s1f,t1f;
    float x0f,y0f,x1f,y1f;
    float advance;
} stb_fontchar;
#endif

#define STB_FONT_times_39_usascii_BITMAP_WIDTH         256
#define STB_FONT_times_39_usascii_BITMAP_HEIGHT        174
#define STB_FONT_times_39_usascii_BITMAP_HEIGHT_POW2   256

#define STB_FONT_times_39_usascii_FIRST_CHAR            32
#define STB_FONT_times_39_usascii_NUM_CHARS             95

#define STB_FONT_times_39_usascii_LINE_SPACING          25

static unsigned int stb__times_39_usascii_pixels[]={
    0x554c4000,0x4c000019,0x0a880061,0x08002200,0xa9800001,0x0009bddc,
    0xbdddddd9,0x3bbbbba2,0xa801802e,0x05300001,0x00000054,0x40c00144,
    0x00202000,0x2a001322,0xdcbbcefe,0x540001ce,0x01bd53ff,0xea800f98,
    0x2297000c,0x7d40001d,0xfffdcdef,0x6665400d,0xbff16fec,0xf0039999,
    0x0000b900,0x5ff910fa,0x6d400000,0xfec8807f,0x407c9dff,0xfd913fc9,
    0x3ff601bf,0x1dfb8803,0x000ed980,0xeb8bff70,0x9003e601,0x13a6003b,
    0xb10007b1,0x3f6603df,0xb7ec001e,0x22003ff8,0x302bcfca,0xf880001f,
    0x0bfffb61,0x3fa60000,0x6fd407ff,0x0ffff731,0x6cffffaa,0x81ffffff,
    0x7cc05fff,0x2e98000d,0x81ee8800,0x01f300fd,0xf9800fe4,0x4003b603,
    0x4400dfe9,0x36003ffe,0x007ff16f,0x3b3f7fee,0x017c1cff,0x7ec1ae00,
    0x2000002f,0x3ee07ff8,0x20fff504,0xdcbffe99,0x86fffcab,0x3ee05fff,
    0x17440003,0x17ea0000,0x6f9807cc,0xd007f100,0x03ffa00d,0x00fffc40,
    0x7ff16fd8,0x9e19fb00,0x02e45fe9,0x7dc0fa00,0x4000002f,0x0ff307fe,
    0x7dc07ff8,0xfffa83ef,0xc827ff43,0xd100002f,0x7c400001,0x900f980f,
    0x03fa009f,0xf9013ea0,0xffa8009f,0x22dfb006,0x3fdc03ff,0xf98bf11e,
    0x03f10000,0x0000bfee,0x360ffd00,0x03ff403f,0xfd813fea,0x427ff47f,
    0x400002fb,0x2600005a,0x00f982ff,0x9f900bfd,0x9817ec00,0xe8000fff,
    0x6fd804ff,0xfe807ff1,0x7c2dc3c5,0x40d70002,0x00002ffa,0x7cc3fec0,
    0x03fec01f,0xf980ffea,0x0fff60ff,0x000009f3,0x5400003a,0x00f983ff,
    0xff980dff,0x41bea001,0x90005ffe,0xfd801fff,0xf807ff16,0x42cc3c5f,
    0x07d0005c,0x00017fd4,0x2e1ff600,0x3fec00ff,0xf00ffea0,0x17fe43ff,
    0x5cc003fa,0x7705310a,0xfc808800,0xd00f982f,0x06fc80ff,0x2217fc40,
    0x30004fff,0xfd805fff,0xf807ff16,0x42c1e0ff,0x7c4000f9,0x20bfea00,
    0xd8220000,0x00ffc87f,0x3ea03fec,0x17ff403f,0x17dc3ff7,0x7567ec40,
    0x06887fc8,0xfb09fb30,0x201f301f,0xff100ffd,0x8dfd0007,0x0003fff9,
    0xd809fff1,0x807ff16f,0x001e5ffc,0x06b8007f,0xfc897fd4,0xda800dff,
    0x7fdaffff,0x6c00ffd8,0x1ffd407f,0xfa87ff60,0x2601ba0f,0x3ff620df,
    0xfea80f04,0x07fe84ff,0x3fee01f3,0x005ff701,0x7dc1ff90,0x3e0002ff,
    0xb7ec05ff,0x7d403ff8,0x40078dff,0x01f4005c,0x3fe6bfea,0x201effff,
    0xff912efb,0x03ffb0ff,0x7d407fd8,0x07fec03f,0x027ccff3,0x7fec1bea,
    0x44401d02,0x6fb84ffd,0x3ea01f30,0x007ffa07,0xfc8bfee0,0x3e0001ff,
    0xb7ec07ff,0xfd803ff8,0x4c007eff,0x01f3000f,0xacecffa8,0x706fffca,
    0x1fff20bf,0xfb00fff2,0x03ffa80f,0x9be23ff4,0x3fe601fc,0x740ffd00,
    0x84ffa800,0x01f305f8,0xfff813e6,0x3ffa8000,0x0007fff6,0x6c07ffe8,
    0x007ff16f,0x00fffff6,0x1ae007d0,0x207bfea0,0x7cc3fffa,0x0fff100f,
    0xfd80fff7,0x01ffd407,0xe9be17fe,0xf01ff406,0x003e20bf,0x7ec13fe6,
    0xf900f980,0x01ffe203,0xf92ffd40,0x7c0005ff,0xb7ec07ff,0x32003ff8,
    0x000dffff,0x00fa00b9,0xfc80bfea,0x202fec7f,0xfff887fe,0x80fff304,
    0x3e604ffa,0x13e5f80f,0x3e607fc8,0x200f503f,0x9b104ff9,0x7f101f30,
    0x003ffcc0,0x3f26ff98,0x3e0002ff,0xb7ec05ff,0x54003ff8,0x801effff,
    0x07cc00f9,0x1017fd40,0x3fe61fff,0xb83fec04,0xb511dfff,0xffa80ffd,
    0x207fb00e,0x2209f14e,0x3fee03ff,0x2600d700,0x0edc04ff,0x175c41f3,
    0x001bfea0,0xfa87ffc4,0xf10003ff,0x6fd809ff,0x10007ff1,0x005fffff,
    0x006b807d,0xfe805ff5,0x807ff71f,0xffd107fd,0xfb1dffff,0xdfffa80f,
    0x7b02fdc0,0x7fdc0fe6,0xd81bfa00,0x09ff3003,0x43e69f30,0xff7005f8,
    0x3fe2000b,0x09fff11f,0x0bffe600,0x3fe2dfb0,0xff7f0003,0x06c805ff,
    0xffa801f4,0xc97fec02,0x3fec02ff,0x97ffff20,0x7fd407fd,0x3fecdfdc,
    0x02f99640,0x7fd40dfd,0x4c003e04,0x1f6404ff,0x0f64c1f3,0x001bfea0,
    0xfb07ffc4,0x3ee000df,0x16fd806f,0x5e0007ff,0x200fffe8,0x01f300f9,
    0x900bfea0,0x0fff63ff,0x5100ffb0,0x407fd815,0x35533ffa,0x17cc6a00,
    0xfd027fc4,0x801aa05f,0x9d104ff9,0x5f301f30,0x003ffc40,0x7cc7ff88,
    0xfe8002ff,0x16fd802f,0x9e0007ff,0x7403ffe8,0x5400d703,0x3fec02ff,
    0xfd809ffb,0x3fec0007,0x000ffea0,0x7d41fc40,0x0fff902f,0xff3000fc,
    0x2603f609,0x401fb00f,0xf30007ff,0x0dff70df,0x006ffa80,0x0ffe2dfb,
    0x3fea3c00,0x3e836405,0x00bfea00,0x2ffe4dfd,0x0001ff60,0xffa80ffb,
    0x13e00003,0x3320bfea,0x009906fd,0xf884ff98,0x2601f306,0x03ffa04f,
    0x417fea00,0x3a002ffc,0xdfb000ef,0x3880ffe2,0x05ff88f0,0x03e607cc,
    0x402ffa80,0x3ffea3ff,0x003ff601,0x5407fd80,0x220003ff,0x3fe217a0,
    0x27f53225,0x26000764,0x06fb84ff,0x1fea01f3,0x8001ffc8,0x3fa04ffb,
    0x77ec401f,0x45bf6000,0x41a203ff,0xe804ff87,0x2a003643,0x1bee02ff,
    0xfd817ffa,0x3fa0000f,0x0ffee00f,0xb8ffdc00,0xdeffe80f,0x5c5bf64f,
    0x2016c0de,0x7fd84ff9,0x3ee01f30,0x03ff501f,0x403ff900,0x980bffc8,
    0x6c000efe,0x407ff16f,0x7cc781f8,0x746b801f,0x27fd4003,0xfa80fe88,
    0xfffa84ff,0x3ffe0002,0x013fee01,0xf8a7ffc0,0x2effea83,0x177fffd4,
    0x7fcc034c,0x980ffd84,0x03ff900f,0x2000ffe6,0xfb1006fd,0x3bffdbdf,
    0x45bf6000,0x1be203ff,0x2009fb1e,0x001f30f9,0x20dfff98,0x3f202fe9,
    0xeddbceff,0x1002efff,0x13bfff93,0x57fffd4c,0x17fec001,0x100540d9,
    0x01740355,0x7e41ffcc,0xd00f981f,0x37ec01ff,0x00bfe200,0xbffffd30,
    0x16fd8000,0x7fc407ff,0x6fec5e1e,0x2e4fa000,0xffff7000,0xf50019fd,
    0x3f69ffff,0x326000be,0x12cccccc,0x99999999,0x441a8001,0x2000002f,
    0x7ff3006b,0xf307ff70,0x301ffe01,0x7dc001ff,0xffb10007,0x6c0005ff,
    0x807ff16f,0xdfdfffca,0x198002ef,0x51000035,0x2a600035,0x00006a09,
    0x00000000,0x00000fa8,0xf3001e98,0x05ff305f,0x17fa01f3,0xe800bf60,
    0x7e40003f,0xb0000fff,0x00ffe2df,0x00afaa98,0x00000000,0x00000000,
    0x00000000,0x00036400,0x98007ea0,0x1ff881ff,0x9fb00f98,0x200dd100,
    0x500004f9,0x0001dffd,0x0ffe2dfb,0x74c03c00,0xeeeeeeee,0xeeeeeeee,
    0x00000005,0x00000000,0x6c000000,0xfa80000e,0x837d4001,0x01f306f9,
    0x7cc017ea,0x0006c804,0x01efea80,0xff8b7ec0,0x10090003,0x99999999,
    0x99999999,0x00000079,0x00000000,0x00000000,0x260005f7,0x0ae201ed,
    0x07f207f5,0x1fb007cc,0xc807ea00,0x2000000f,0x4c0befda,0x16feaaaa,
    0x15555bff,0x00000000,0x00000000,0x00000000,0x20000000,0x9800bee9,
    0xffb802ed,0x3ea0dd0d,0x8803e602,0x5b1000dd,0x00001b90,0x932e6200,
    0x6ffffffd,0xfffffff1,0x00000007,0x00000000,0x00000000,0x00000000,
    0xbcdefc98,0x002efedc,0x13bfffe6,0xf3007b66,0x007f7001,0x0005b1dc,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x32ea6200,
    0x220001ab,0x01700aca,0xa8003220,0x00446001,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0xdeca9800,
    0x350000ab,0x00003300,0x00330033,0x00003000,0x3a2000cc,0x32607901,
    0x7b0001cd,0xdda88000,0x2a00000c,0x26000acd,0x4001bddc,0xaaaaaaaa,
    0x6e544000,0xceffa804,0x00dffdca,0x203ffb88,0x40005feb,0xeb883ffa,
    0xd500005f,0x3335bfbf,0xffdb5003,0x1f50017d,0x33f60be0,0x5c001fea,
    0xfb10000f,0x005ff99f,0xebbffb80,0xfffc801e,0xf7004fff,0x0dffffff,
    0x0567f540,0x407bf620,0x3201efd8,0xea83fffe,0x40005fff,0x7f5c5ffb,
    0xd80005ff,0x3fff663f,0x47ea07ff,0xb805ffe8,0xfb83f306,0x4003fe63,
    0x360002f9,0x03fe20df,0x106fdc00,0x7fd403ff,0x04ffffec,0xfffffff8,
    0xefd8803f,0x1bff3001,0x807ff700,0x3ea03ffc,0x6c40005f,0x0bff701e,
    0x887fc800,0x302aafff,0x0ffe889f,0x47b82ec0,0x1ff41ff8,0x20004e80,
    0x3fc82ffb,0x80ffa800,0x83d107fb,0x5c07ffd9,0x4ccccccf,0x004fe980,
    0xd0007ff4,0x7fd405ff,0x017fe203,0x3fe60000,0x3fe60005,0x801ff904,
    0x04d882fe,0xa8b903e8,0x037ec0ff,0xb0000764,0x00fee0ff,0xff813fa0,
    0xff101d83,0x001f405f,0x800bff10,0x54004ffc,0x3fea06ff,0x017fe203,
    0x3fe20000,0x3fee0005,0x805ff702,0x220001ff,0xfb89d01f,0x4c07fc87,
    0x7f40001f,0x000fe80f,0xf9017fd4,0xffd8010f,0x8000f702,0x26000efd,
    0xe8000fff,0x7ff504ff,0x002ffc40,0x2ffc4000,0x05ff9000,0xf9817fea,
    0x3e60001f,0x7ec2f880,0x200ffc87,0xfe80004e,0x002fc41f,0xf7007fec,
    0x7fa8007f,0xb80013a0,0x7f4001ff,0xff70005f,0x07ff503f,0x0002ffc4,
    0x02ffc400,0x207ff500,0x3ea04ffa,0x1ae0001f,0x1ff207cc,0x06c81ff2,
    0x49ffb000,0xf8002fe8,0x2ffcc07f,0x5c13f200,0x000acfff,0xf000bff3,
    0x2a0009ff,0xffa82fff,0x017fe203,0xf8804400,0x8800885f,0x5ff905ff,
    0x800ffe40,0xfffffffa,0xffffffff,0xfd81ff57,0x0003f306,0x2a3ffee0,
    0xfa8001ff,0x37fc407f,0xfe81ba00,0x802fffff,0x4c002ffe,0x30003fff,
    0xff509fff,0x42ffc407,0x85eeeeec,0xff103fd9,0x0efff54b,0x3e07ff20,
    0xffeeb85f,0x101eeeef,0x559f5555,0x555dd555,0x9fd07fe2,0x00007d10,
    0x67f7ffc4,0x7fffff40,0x01bfee0e,0x5c00fff1,0xfffd300e,0x5409ffff,
    0x799517ff,0x0bffea03,0x2fffc400,0xf101ffd4,0x2bff60bf,0x1ffff5c0,
    0xff95ff88,0xf700dfff,0x1bfb317f,0x9ffb5530,0x22001555,0x2e09d01f,
    0x203fe64f,0xd800006c,0x3fa01fff,0x6ffc80df,0x007ffc40,0xa8802fdc,
    0x906ffffd,0xffdf99ff,0xfff907ff,0x7ffc0003,0x203ffa87,0xdf985ff8,
    0x7ffb1300,0x3377fe20,0x807ffb10,0x1ceeece8,0x003ff900,0x3e203ea0,
    0x3aabf602,0x001fa81f,0x7fffdc00,0x403fee04,0xff805ffc,0xffd7101f,
    0x7d4003df,0xffd83fff,0x27ffd43f,0x0007fff6,0xfa87ffe8,0x17fe203f,
    0x3ee009f3,0x7fff103f,0x440dff10,0x7e40002e,0x0d90001f,0xb73003e6,
    0x207f1017,0xd3000ba8,0x03fffb7f,0xffd80bf6,0x02fff805,0xfffffb93,
    0x7ff44005,0x807ffc1f,0x3f21fffa,0x3e0002ff,0x3ffa86ff,0xf997fe20,
    0x0ffea004,0xff02ffc4,0x0003f40f,0x8000ffe4,0x000f704d,0x6fdc1760,
    0x7fd405fc,0x20dfff32,0x2ffe405f,0x007ffe20,0x0037ffe4,0xff31ffec,
    0x25ffd80f,0x0003fffa,0x3ea17ffe,0x57fe203f,0x7d4003fa,0x0bff103f,
    0xff983ff4,0x199aaabd,0x001ffc80,0x017607f0,0x2a03ea00,0x5413ea5f,
    0x7ffec1ff,0x2e007cc3,0x7fc405ff,0x3fe6000f,0x7fd4000f,0x501bfea5,
    0x7ffccfff,0xfff10004,0x407ff507,0x06fbdff8,0x103ffa80,0x3ff40bff,
    0xffffff98,0x00bfffff,0x26003ff9,0xeeeefeee,0x5eeeffee,0x441fc400,
    0x217fc2ff,0xff884ffa,0x007d10ff,0xf880dff5,0x7e4000ff,0x6ff8003f,
    0xf101bfea,0x3ffe21ff,0xfff30005,0x407ff505,0x3fffeff8,0x81ffd400,
    0x3fa05ff8,0x3fffea07,0x7fffffff,0x2003ff90,0xcccfdcc9,0xcccdfccc,
    0xa82ec004,0x227ec0ff,0xff701ffe,0x4c0172bf,0x7fcc06ff,0x4ff98006,
    0x225fc800,0xfff806ff,0x001bff60,0xfa837fdc,0x37fe203f,0x2001fff9,
    0xff103ffa,0x503ff40b,0x2aaa662b,0xfc82fecb,0x06c8001f,0x5c0001f3,
    0xb0ff700f,0x03ffd4df,0x03f7fffa,0x5c07ff80,0xff0004ff,0x87f50007,
    0x7fe807ff,0x0017ffc4,0xfa817ff4,0x57fe203f,0x5000fffb,0x3fe207ff,
    0x541ffa05,0x217a000f,0xd8001ffc,0x4000f704,0x1ff602f8,0xfffb9ff2,
    0x3fffe200,0x0ffe4004,0x0005ff90,0x2e000bfe,0x00fff41f,0x3fee1bfa,
    0x2ffd4006,0x4407ff50,0x1bff65ff,0x881ffd40,0x1ffa05ff,0x790013e2,
    0x0003ff90,0x0017607f,0x3fe405d8,0xfff93fe4,0xffffa807,0xff982601,
    0x001bf603,0xd80037d4,0x402ffb86,0x5ffd03ff,0x007ff400,0x7c407ff5,
    0x027ff45f,0xf881ffd4,0x21ffa05f,0x3a2006fd,0x001ffc80,0x03e80fc4,
    0xa801f700,0x737ec0ff,0xfb80dfff,0xe882ffff,0xf982fec0,0x5fb0002f,
    0x201f5000,0x1fe606fe,0x402ffd88,0x5401efe8,0x3fe203ff,0x017ffc45,
    0x7c40ffea,0x21ffa05f,0x5400cffd,0x03ff902e,0x5f107a80,0x005f3000,
    0x4fe83ff3,0x213fffe2,0xfffcbfd8,0x84eb9adf,0x5fd81fe8,0xf300cb88,
    0x80cfe88b,0x3fe202fa,0x7005fb03,0xfa8817ff,0x9ff7004f,0x5437fcc0,
    0x3ee01fff,0x0dff304f,0x3e207ff4,0xcbccefff,0x3f602eec,0x8364002f,
    0x4e8000f9,0xf98ff200,0x7fffd40f,0x21efecde,0xfffffffb,0x41df100e,
    0xfff705fb,0x05f7313b,0x77bffff1,0xff5003db,0x2002fb83,0xfedeffd9,
    0x3f6002df,0x3ffee06f,0x02fffe80,0x3ee0dffb,0xfff880ff,0xffffc882,
    0x4404ffff,0x2000dfff,0x000f704d,0xfe8001d9,0xd503fe9a,0x07ffffff,
    0x33ffffa6,0x7f7ecc00,0x7fff402d,0x2e00deff,0x03dffffe,0x7677f4c0,
    0x2a20001e,0x754000ab,0x2e5effff,0x0deffffe,0x7dfffff9,0x3bffffae,
    0xdffffd54,0xffffb31b,0x953103bf,0xfda80357,0x03cfffff,0x005301a8,
    0x88001f98,0x9801dedb,0x51000aba,0x002a0005,0x8001aa98,0x880001a8,
    0x0000001a,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0xaaa98000,0xaaaaaaaa,0x33772a02,0x336e6001,
    0x5553000a,0x03555555,0x059bd971,0x0aaaaaa2,0xaaaaa880,0x971002aa,
    0x44179ddb,0xaaaaa983,0x2aaa22aa,0x501aaaaa,0x26555555,0xaaaaaaaa,
    0x55554402,0x2aaaa2aa,0x00aaaaaa,0x55555551,0x5eee5405,0x2aaa05c1,
    0x42aaaaaa,0xfffffb00,0x0fffffff,0xfd75bfd5,0x5f74401b,0x9801ffeb,
    0xdfffffca,0x54e75c1b,0x5440effd,0x003ffffd,0x9ffff951,0xeffd9805,
    0xbefecbbd,0xfffb985c,0x3ae22dff,0x01beffff,0x25bfff95,0xffffffc9,
    0x7f5c402d,0x3aea3fff,0x0adfffff,0xffff9510,0xbffd305b,0x1f9bffd9,
    0xffffeba8,0x87fee2bf,0xfffffff8,0x544fffff,0x01df506f,0xffa81bf3,
    0x3ffee002,0xf303f503,0x3fe601ff,0x7c4002ff,0x19ff7006,0x02fff4c0,
    0x440ffff1,0x7001ffff,0x3ffe20bf,0x6fe8003f,0x00ffff40,0x4c07fe20,
    0x7ec40bff,0xfff100ff,0xc93ffe0d,0xaaaacdef,0x3e22feaa,0x113fe02f,
    0x3ff603ff,0x3fff3000,0xffb81be0,0x3fffe603,0x402fc000,0x32004ffd,
    0x3ffe406f,0x007ffee0,0xff7007dc,0x3fd0007f,0x007ffb80,0x3fa20bf0,
    0x007fe405,0x3f609ffd,0x7c013e2f,0x3203fd47,0x302fe46f,0x3e200bff,
    0x1ff980ff,0xe80dff10,0x2000efff,0x1ffe404e,0x2603f400,0x7fc01fff,
    0x00bb003f,0x8800bfff,0x6ffb804f,0x2a0bd000,0x0fd801ff,0xa80fffa0,
    0x7d4012a1,0x7007fdc4,0x027fc4ff,0x22007ff6,0xff980fff,0x803ffe03,
    0x005ffffe,0x6ffa813a,0xd00f3000,0xffc809ff,0x802f8805,0x54007ffb,
    0x6ffa800f,0x320bd000,0x0fa800ff,0x800fff60,0x50bf2001,0x27ec07ff,
    0xfb807ff3,0xfff8804f,0x7c0bff00,0x7e67407f,0x09d004ff,0x000bffe2,
    0x7fdc00e8,0x07ffd406,0x22003ee0,0x3a003fff,0x0dff5005,0x7ec17a00,
    0x401f003f,0x00003ffd,0xfff10ff0,0xfb87fe03,0x2ffd403f,0x807ffc40,
    0xbff101d9,0xfffb4e80,0x2e09d005,0x4c0007ff,0x0fffc400,0xb00fffe0,
    0x37fe400b,0x5002f980,0x3a000dff,0x03fff705,0x7fec01b0,0xfa800003,
    0x83dffd04,0x27fe43fd,0x201bfe60,0x0000fff8,0x4e805ff7,0x803fffd1,
    0x09ffd04e,0x3fa00000,0x3ffea04f,0x800be206,0xc801fff9,0x1bfea007,
    0xf982f400,0x00403fff,0x0000fff6,0x7c40bf20,0x07f92fff,0xf980bff7,
    0xfff8807f,0x0bfd0000,0x7ffcc9d0,0x2613a00e,0x00003fff,0x40fff700,
    0x700ffffd,0xbffd000f,0x2004f880,0xd0006ffa,0x7fffe40b,0xffb0001e,
    0xff000007,0xeffff980,0x1fff301e,0x403ffcc0,0x8000fff8,0x4e800ffa,
    0xd02fffd4,0x05fff709,0x3e200000,0xfd7f01ff,0x0017a07f,0xb803ffea,
    0x3fea000f,0x80bd0006,0x0cfffffd,0x01ffec00,0x013e6000,0x817fffa2,
    0x2a03fff8,0xff8806ff,0x2fe8000f,0xff709d00,0x3213a09f,0xd1001fff,
    0xbddddddd,0xa84ffd80,0x886ffb8f,0xfff0002f,0x2002f409,0xd0006ffa,
    0xffff900b,0x7ec007ff,0x6400003f,0xfff9002f,0x3fee01df,0x0bff900f,
    0x001fff10,0x3a003fa8,0x07fffb04,0x3fffb09d,0xfffd9800,0x7ffa802e,
    0x3fff16d8,0x2e0007b8,0x2f980fff,0x037fd400,0xd5005e80,0x03dfffff,
    0x0007ffb0,0xfb007f80,0x01dfffb3,0x262bfffa,0x804fffeb,0x4000fff8,
    0x8274005e,0x741fffe8,0x02fffc84,0x04fff980,0x445fff10,0xd13ffa3f,
    0x7fc40009,0x8006c83f,0xd0006ffa,0xfffb800b,0x7ec03fff,0x8002a03f,
    0x1fd804f9,0x403bfff2,0x9cfffffc,0xf8801fff,0x3a6000ff,0x10274000,
    0x2741ffff,0x001fffdc,0x0017ffc4,0x07d4bffb,0x17c4fff7,0x1bff2000,
    0xf50007f1,0x17a000df,0x3fff2200,0x3ff601ff,0x03fff883,0xfd805f90,
    0x03fffb83,0x7dc26aa2,0xfff1006f,0x001dc001,0x3fe60274,0x3e613a6f,
    0xff0004ff,0x7fd4005f,0xfff11767,0x20001ee3,0x3ee2fff9,0x6ffa8000,
    0x0009d000,0x07ffff4c,0xfb83ffd8,0x0ff007ff,0xf701ff88,0xfff000df,
    0x3ffe2007,0x00072000,0x3fee013a,0xff109d5f,0x3fe000ff,0x7ffc002f,
    0xffd82f8a,0x200009d4,0x017a5ffe,0x003ffd40,0x400304f8,0xfb01fffe,
    0xffff307f,0x404f9805,0x7fec07fb,0x1bfee001,0x007ff880,0x04e8002c,
    0x9d7fff90,0x007fff20,0x000bffe0,0x01f7bff9,0x03f3fff5,0x3ffea000,
    0x30002f98,0x3e000fff,0x22005903,0xffb03ffe,0x0be2a607,0xfd805f90,
    0x01ffcc06,0x4001ffd0,0x0c006ff8,0x2004e800,0x104ffffe,0xf000bfff,
    0xf98005ff,0xff105eff,0x80000fdf,0x006dcffe,0x007ffe20,0x17203f30,
    0xb04ffc80,0x0f8807ff,0x7ec03f40,0x002ff806,0x88005ff7,0x000005ff,
    0x744009d0,0x3ee04fff,0x7fc002ff,0xffe8002f,0x3fff602f,0x7dc00004,
    0x40003fff,0x64004ffe,0x400f900f,0xffb02ffb,0x4c05b807,0x0ffb805f,
    0x2003fe20,0x75c03ff9,0x000ffe22,0x013a0003,0x809fff30,0x2000fffd,
    0xb8002fff,0x7fd407ff,0x4400001f,0x0000ffff,0x70037fd4,0x01fe409f,
    0xfd00ffe8,0x00f4c09f,0x7f400bf2,0x2013ee04,0x7c402ff9,0x00df30ff,
    0x4000ffe8,0xffa8005f,0x1fffa804,0x005fff00,0xf009ff10,0x200000df,
    0x00005ffc,0xa801bffd,0x3ff200ff,0x01ffd404,0x3b209ffd,0x2007e801,
    0x5fa83fe9,0x0077dc40,0x3f75fff8,0x17ffcc00,0x003ff700,0x26009f90,
    0xa80adffe,0x0000effd,0x9f9003fd,0x3e600000,0xb100001f,0x2a237dff,
    0x6400efeb,0x5c0adfff,0x3fea04ff,0x801540ef,0xfc8005f9,0x502ffdce,
    0x8003bfd9,0x01defffa,0x400fff80,0xefffffc8,0x0026c004,0x37bffb6e,
    0x001cfffe,0xf9803dc0,0x3a000001,0xeb800006,0xffffffff,0xcacc800b,
    0xeffefffe,0xffffc882,0x8003dfff,0x260000a9,0x4d54009a,0x05540000,
    0x00151000,0x03100000,0x9aba9800,0x0a200000,0x00000480,0x0000014c,
    0x03579553,0x55440a80,0x000001ab,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x37b2e600,
    0x2a60b81b,0xaaaaaaaa,0x55555100,0x55550555,0x55555555,0x22155555,
    0xaaaaaaaa,0xaaaa81aa,0x2a21aaaa,0x9aaaaaaa,0xaaa98019,0xaaaaaaaa,
    0x0aaaaaaa,0x15555551,0x55550000,0x2aaa2355,0x0aaaaaaa,0x2aaaa200,
    0x541aaaaa,0x1aaaaaaa,0xaaaaaa88,0x000999aa,0x00dc8810,0x2b3fffaa,
    0x1fabdfdc,0x3fffff26,0xd5100adf,0xf059ffff,0xffffffff,0xbfffffff,
    0x7ffff5c4,0xba81beff,0x21befffe,0xfffffda8,0x02dfffff,0xfffffffb,
    0xffffffff,0x36e25fff,0x0004ffff,0x5f7fffd4,0xffff9511,0x400159df,
    0xfffffca8,0x7fe541ac,0xa881beff,0xfffffffd,0x000dffff,0x3fea5ff5,
    0x1bffd884,0x05fff910,0x00dffff3,0xf101eff8,0xfe80137f,0xffd100ef,
    0xff5003ff,0x7fff5007,0x9fff9513,0x3335bfb0,0x3337ffd3,0xf907ff75,
    0x40001fff,0x4c04fffe,0x00005fff,0xd007fff5,0x7d4007ff,0xfb311aff,
    0xffd007ff,0xd117ff2b,0x3ea003ff,0xdfff302f,0x007fc400,0x3f2003f3,
    0x7f4401ff,0x3fc803ff,0x03fff100,0x6c1dfff3,0x40fffa05,0xfff983f8,
    0xff30003f,0xfff005ff,0x3e600007,0x7fcc02ff,0x7ffc4001,0x09fff501,
    0xff73ffc8,0x001ffe89,0xff901fdc,0x0bee005f,0x3e600b30,0xff1004ff,
    0x04f980df,0x407ffe20,0x07a3fffa,0x2a03ffe8,0x6ffef883,0xfffdb000,
    0x05fff003,0x3ffe2000,0x003be201,0x807ffe20,0x2a807ffd,0xffc8ffea,
    0x807d0005,0xbd006ffe,0xd1007500,0xfa800dff,0x0bf104ff,0x01fff880,
    0x40697ffe,0x12203ffe,0x0bffefe2,0xfff7f300,0x05fff003,0x3ffe2000,
    0x001dd101,0x500fffc0,0x88005fff,0x3fff32ff,0x3012e000,0xfc809fff,
    0xd8009800,0xc8001fff,0x0ee81fff,0x0fffc400,0x021fffb0,0x0807ffd0,
    0x6ffcaf88,0x7fc7e400,0x2fff801f,0xfff10000,0x001fd103,0x201fff80,
    0x8005fff8,0x0fff90ff,0x64024400,0x7f301fff,0x7fd40000,0x3fa0003f,
    0x000fe46f,0x900fffc4,0x3a003fff,0xf88003ff,0x002fff8a,0x07ffe7f1,
    0x000bffe0,0x20fffc40,0x80000fe8,0x3e601fff,0x7d8004ff,0x00013ffe,
    0x837ff400,0x2200005e,0x40005fff,0x5f54fff9,0x3ffe2000,0x03fff601,
    0x001fff40,0x5ffd97c4,0x3fe1f900,0x2fff801f,0xfff10000,0x0007f443,
    0x201fff80,0x8003fffa,0x07fff55c,0x3e600000,0x007dc3ff,0x1fffb000,
    0xfff90000,0x440009f7,0x3fe01fff,0x3ffa006f,0x32f88003,0xf8803fff,
    0x2007ffe4,0x00002fff,0x3e63fff1,0x3e00000f,0xffd101ff,0x5d2a000d,
    0x00002fff,0x43fff200,0x200003f8,0x0002fffb,0x01bfffa0,0x03fff100,
    0x800bffee,0x88003ffe,0x017ff62f,0x0fffc1f7,0x0017ffc0,0x99fff880,
    0x400000ff,0xfd881fff,0x420001ff,0x0001fffc,0x3ffa2000,0x40000db6,
    0x0005fff9,0x027ffcc0,0x07ffe200,0x0013ffee,0x10007ffd,0x07ffd45f,
    0x1fff8bd0,0x002fff80,0xf7fff100,0x800001df,0xf7311fff,0x00001bff,
    0x0007fff6,0xfff50000,0x400003fb,0x0000fffe,0x02fffd80,0x3bffe200,
    0x2effeccd,0x03ffe800,0x7f42f880,0xf83f504f,0xfff801ff,0xff100002,
    0x01dfffbf,0x7fffc000,0x00cfffff,0x7ffe4000,0x80000002,0x0004fffd,
    0x007fff20,0x3ffe6000,0xf10000ef,0x579535ff,0x7ff40003,0x42f88003,
    0x6e80fffa,0xf801fff8,0x100002ff,0xfff93fff,0x3e00001d,0xfff99aff,
    0x20088004,0x0003fffb,0xfff88000,0xff300001,0x1000009f,0x09fff39f,
    0x07ffe200,0x3ffa0000,0x82f88003,0x17cc3fff,0x7c00fffc,0x100002ff,
    0x3ff23fff,0xf80000ef,0x3ffe61ff,0x0bfee002,0x002fffd4,0xfff80000,
    0xfe880001,0xd000006f,0x017ffe4d,0x00fffc40,0x1fff4000,0x5c17c400,
    0xf836c7ff,0xfff801ff,0xff100002,0x77ffe43f,0x7ffc0000,0x007ffe41,
    0xf105ffe8,0x00000dff,0x007ffe00,0x07fff200,0x03f20000,0x8001fffd,
    0x0001fff8,0x003ffe80,0xff882f88,0x3e07f33f,0xfff801ff,0xff100002,
    0xefffc83f,0x3ffe0000,0x005ffe81,0x7ec07ff9,0x0000007f,0x0003fff0,
    0x003fffa8,0x417d4004,0x4004fff9,0x0001fff8,0x003ffe80,0xff902f88,
    0xfff81f2d,0x02fff801,0xfff88180,0x0efffc81,0x03fff000,0x2007fff1,
    0x7ffcc019,0x002e0002,0x0007ffe0,0x005fff88,0x13e60154,0x002fffc8,
    0x0007ffe2,0x00fffa00,0x7c40be20,0x3e04fbff,0xfff801ff,0x441d4002,
    0xff901fff,0xff0001df,0x3ffea03f,0x3f600001,0x4a8000ff,0x03fff000,
    0x07ffec00,0xe8807600,0x0fffe805,0x03fff100,0x7ffd0000,0x405f1000,
    0x200ffffc,0xff801fff,0x4074002f,0x3201fff8,0x4000efff,0x3f601fff,
    0x801800ef,0x4005ffe8,0xff100069,0x3ee0003f,0x3cc002ff,0x3001fd10,
    0x2200bfff,0x00001fff,0x8003ffe8,0x3fe602f8,0x0fffc04f,0x001fffc0,
    0x3ffe20d7,0x77ffe401,0x3fff1000,0x02fff440,0xb100bff1,0xd5001dff,
    0x3fe20001,0xff88002f,0x37cc005f,0x2003fe88,0x9804fffe,0x00002fff,
    0x8003fff8,0x7fec03f9,0x0bffe201,0x4013ffe0,0xfff304fc,0xffffb005,
    0x5fff1005,0x04fff980,0x2001fff5,0x8acefffc,0x000deca8,0x1bfff910,
    0xbfffe800,0xaaaaaaaa,0xa85ffdca,0x3a003fff,0x100cffff,0x001bfffb,
    0x77ffdc00,0x3bf62000,0x8817e600,0x100dfffc,0x599ffff9,0xffdb9955,
    0xbfff9103,0xfffff900,0x3ff22039,0x7fdc00df,0x37fc42df,0x3ffb6a00,
    0x002effff,0xfffffb30,0xf7005bff,0xffffffff,0xffffffff,0x7fffdc7f,
    0x3b602eff,0x6fffffff,0x3fffff66,0x10002dff,0xfffffff9,0x7fecc05b,
    0x3d02dfff,0xfffffb30,0x3f225bff,0xffffffff,0x7fffffff,0x7ffffecc,
    0x7f4c2dff,0xffffffff,0xfffffb33,0x7ec05bff,0x0a24ffff,0x55731000,
    0x00000001,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x2aa20000,0x1aaaaaaa,0x55555544,
    0x55511aaa,0x55555555,0x64555555,0x82eeeeee,0x511eeeeb,0x55555555,
    0x55555555,0xaaaaa883,0x0999aaaa,0x01c88000,0x440f6c00,0xaaaaaaaa,
    0x000019aa,0x80000360,0x002cddb9,0x9b000244,0x10418000,0x9fffff95,
    0xffca8835,0x511bdfff,0xfffffff9,0xffffffff,0x00efffb8,0xca887fe6,
    0xffffffff,0x5fffffff,0x7fffed44,0xffffffff,0x326001be,0x2e0002ff,
    0xfda881ff,0xfeffffff,0x0002dfff,0x00007f30,0xffffff91,0x012e001d,
    0x98004d80,0x1ecefefe,0x004fffa8,0xa80bfff3,0x93101fff,0x0bff90ff,
    0x3e602f98,0x7dc402ff,0x33ffea05,0xffb7511a,0x7ecc03df,0x30002fff,
    0xfa803fff,0xfea882ff,0x6c0001ef,0xfd80006f,0xfffffeff,0x0027c400,
    0xf98009b0,0x03ff710c,0x4005fff1,0x7cc03fff,0x87b801ff,0x3200fff8,
    0x02fff807,0x7fc40d70,0x7ffd401f,0xfd11303f,0x3fa0005f,0x7fc401ff,
    0x7ffe401f,0xfff10001,0x6fdc0003,0xdfff910a,0x0004fd80,0x0dd00136,
    0x3fe207ea,0x3ffe001f,0x0fffc402,0xffb83c40,0x3e013e03,0x0d1002ff,
    0x400fffc4,0x402fffd8,0xc8002ffc,0xf801ffce,0xffe801ff,0xfff70006,
    0x027c000b,0x3205fff7,0x360004ff,0x81fe2004,0x03fff01e,0x2017ffc0,
    0x7001fff8,0x20fff101,0xfff800fa,0xff012002,0x3fe2003f,0x3fee00ff,
    0x64fd4002,0xfff801ff,0x1fffa801,0xfffef800,0x80698000,0x7f4c3ffd,
    0x01eeefff,0xf9801360,0x3e03703f,0x3fe001ff,0x7ffc402f,0xffc80001,
    0xff005d83,0x7c00005f,0x3ea001ff,0x3fee05ff,0x64fe2002,0xfff801ff,
    0x2fff8801,0x7f4fd400,0x01a8003f,0x54c4ffb8,0x0aaaeffb,0xd0013600,
    0x7c001bff,0x3fe001ff,0x7ffc402f,0xff880001,0xf8017c46,0x000802ff,
    0xe8003fff,0xff700fff,0xf936c005,0x3fff003f,0x03fff500,0xfff76e80,
    0x7cc00000,0x09ff103f,0x20026c00,0x00bffffc,0x2001fff8,0x7c402fff,
    0x003601ff,0x0f917fe4,0x4017ffc0,0x03fff005,0x03fffa80,0x2a005ff7,
    0x007ff20f,0x32007ffe,0x7cc007ff,0x005fff12,0x07fea000,0xa8827fc4,
    0xeaaaaaaa,0xaaaaaaad,0x7fffec0a,0x0fffc02f,0x805fff00,0xf101fff8,
    0x9bfe2001,0x3ffe003f,0xf802cc02,0x7cc001ff,0x5ff705ff,0xfc85f100,
    0x1fff801f,0x027ffcc0,0xbff91f20,0x3ee00000,0x413fe207,0xfffffffa,
    0xffffffff,0xfea80fff,0x3fe04fff,0x3ffe001f,0x0fffc402,0x90007e4c,
    0x001f55ff,0xd1017ffc,0x07ffe00b,0x0dfff100,0x3a00bfee,0x801ffc85,
    0x3ea01fff,0x22000cff,0x0fffcc3f,0x1fec0000,0x0009ff10,0x2e00026c,
    0xff05ffff,0x999999bf,0x5fff9999,0xeefff880,0x00fffeee,0x177bfe60,
    0xdddfff00,0x0bfffddd,0x0007ffe0,0x7dc1fffe,0x407dc02f,0xff801ffc,
    0xfedcccef,0xb8001eff,0x04ffe80f,0x037c4000,0x80013fe2,0x2022004d,
    0xf80fffd8,0xeeeeeeff,0xfffeeeee,0x6fffc402,0x0ffdcccc,0x17ffec00,
    0x2b3ffe00,0x5fecaaaa,0x003fff00,0x2e0fffd0,0x0be602ff,0x7c00ffe4,
    0xfeccceff,0x8002efff,0x1fff504e,0x17ec0000,0x0013fe20,0x126004d8,
    0xff82ffd8,0x3ffe001f,0x0fffc402,0x4c000f98,0xff8006ff,0x802e402f,
    0xf8001fff,0x5ff706ff,0xff902740,0x03fff003,0x0bbffee2,0xff00fd40,
    0x2600007f,0x4ff8804f,0x80136000,0x07fea079,0xf8007ffe,0x7fc402ff,
    0x0003601f,0x3e000ff6,0x02c402ff,0x4001fff8,0xf705fff8,0x901b205f,
    0xfff003ff,0xfffe9803,0x6406d802,0xd00006ff,0x13fe200b,0x2004d800,
    0x1ff304f9,0x4003fff0,0x7c402fff,0x002e01ff,0x20003ee0,0x05802fff,
    0x8003fff0,0xf704fff9,0x99bf305f,0xffd99999,0x3fe0399b,0xfff8801f,
    0x3ffe600f,0xffffffff,0x6c0001ff,0x9ff1000e,0x0026c000,0xfd839ff3,
    0x003fff02,0x22017ffc,0x00001fff,0xff0005d8,0x7c00005f,0x7dc001ff,
    0x5ff702ff,0xffffff70,0xffffffff,0x07ffe05f,0x017fff40,0x333333f9,
    0x0bffb333,0x0007dc00,0x4000bff1,0x3be6004d,0x01ceceff,0xf8007ffe,
    0x7fc402ff,0x4400001f,0xfff0001f,0x7fc00005,0x7ff4001f,0x20bfee06,
    0xeeeeeeea,0xeeefffee,0x003fff01,0x440fffee,0xfff5003f,0x03f50001,
    0x046ff880,0x08009b00,0x7fc00aa6,0x3ffe001f,0x0fffc402,0x01b20000,
    0x002fff80,0x1fff81cc,0x07fff200,0x0002ffb8,0x3e007ff2,0xff7001ff,
    0x003ee03f,0x4003ffe8,0xff0001f9,0xb800aa1f,0x20000002,0x3e001fff,
    0x7fc402ff,0x2600001f,0x3fe0001f,0x80f4002f,0xf1001fff,0xffb809ff,
    0x3ff20002,0x01fff801,0x740fffb0,0x37fdc004,0x3005f300,0x17bfff60,
    0x00000000,0x001fff88,0xf100bffe,0x2a0003ff,0x004fbbde,0x0017ffc0,
    0x3ffe20d9,0xdffe9801,0x017fdc00,0x803ff900,0xa801fff8,0x5f704fff,
    0x3fff9800,0xa802fa80,0x19ffd105,0x00000000,0x017ffc40,0x9807fff0,
    0xd0002fff,0x000dffff,0x003fff88,0x3fe209f7,0x7ffe401f,0x05ff7002,
    0x00ffe400,0x5007ffe2,0x3a20bfff,0xffff0007,0x6677d401,0xfedccccc,
    0x00000402,0x64400000,0xf7005fff,0x7e440dff,0xf90005ff,0x80001bff,
    0x99aefffb,0xffdba999,0xdfffc881,0xfedba9ab,0x3f6000df,0x3f20005f,
    0x3ff2201f,0xba99acdf,0xb103fffe,0xf88003ff,0xfa80dfff,0xffffffff,
    0x0000ffff,0x00000000,0x3fffff66,0x7e442dff,0x2dffffff,0xffffffb3,
    0xb98005bf,0x3b220000,0xffffffff,0x6fffffff,0x7ffffecc,0xbcefffff,
    0xfdd3000a,0x001bdfff,0xd981ffc8,0xffffffff,0x1bdeefff,0xdfffff70,
    0xfffe8807,0x3e26ffff,0xffffffff,0x0005ffff,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00030000,0x06000110,0xc8008800,0x83eeeeee,
    0xdb1eeeec,0xeea87ddd,0xeeec85ee,0x3bbb64ee,0x776c2eee,0x010200ee,
    0x10011010,0x11011000,0xddddd100,0xdddddddd,0x00037fdc,0x16d43aa0,
    0x7e440000,0x000cefff,0x07ffffb5,0x7dfffd70,0xdffd9300,0x7ff4c039,
    0x03be600f,0x9109ffb1,0x3fee0dff,0xdfffa84f,0x301df700,0x3ff22bf9,
    0xd32fe4c2,0xec885bff,0x64c00dff,0x37ff6a5f,0x2f3be201,0xfffbaaaa,
    0x000ffec4,0x433ff220,0x000befd8,0x50bfe880,0x6c401dfd,0xeffa88af,
    0x98bed880,0x3ee05ffd,0x05ffb30b,0x2603ffd4,0x09ff501f,0xfd81bfe2,
    0x07ff903f,0x3faa07d4,0xdfffd5ff,0x5d7fff66,0x31ffffef,0x0bffffff,
    0x657fffaa,0x206fffff,0x3ff200f8,0x0007fd06,0x402fff66,0x000cffc9,
    0x3ea1bf60,0x207fa04f,0x06e85ffd,0x9f507ffb,0xe80fff60,0x817201ff,
    0x3fe04ff9,0x417fe206,0x13205ff8,0x337ff222,0x9114feaa,0x22199bff,
    0x0ae9effc,0x1105ffd5,0x2399bff9,0xb304ffe9,0x807ffd40,0x754006f8,
    0x2e2002ef,0xf8001dff,0x05ff885f,0x3fea0bf7,0xf981fdc7,0x81fea0ff,
    0xf500fff8,0x3017c09f,0x37fc09ff,0x6c03ffa0,0x403f00ff,0x4044fff9,
    0xff03fff8,0x9ff501df,0x41fffcc0,0x05105ff9,0x300bffe2,0xffb8801f,
    0x7540001d,0x3fa002ef,0xf10dff03,0x11fe403f,0x3fe201ff,0xb017fa2f,
    0x7ffc09ff,0x7cc06a80,0x01bfe04f,0x3fa07ff5,0x4406a84f,0xff1006ff,
    0x817fec0b,0x3e205ff9,0x0dff105f,0x009ffd00,0x7fe4c0aa,0x4c00000c,
    0x4400bffd,0x50dff301,0xf98001ff,0xeeeeeeef,0x9ff13fff,0x207ff980,
    0x03d83ffc,0xff027fcc,0x86ff880d,0x3d87fffa,0x802ffc40,0x3ee05ff8,
    0x81bfe02f,0x3fa05ff8,0x37fe4007,0x3bf6a000,0x88000002,0x1001cffc,
    0x70dffdd7,0xdf5000ff,0x33333333,0x0ffea133,0x201fff10,0x07cc6ff8,
    0xf813fe60,0x1ffc806f,0x117fe5ec,0x5ff8801f,0xb817fe00,0x1bfe02ff,
    0x3605ff88,0x3fea007f,0xeb88000f,0x000001df,0x2dfeb880,0x3e39f910,
    0x00ffd86f,0x4003fe40,0xff803ffc,0x87ff602f,0x4ff9805c,0x2601bfe0,
    0x223e64ff,0x2016e5ff,0x3e005ff8,0x0bfee05f,0x3e206ff8,0x01ff605f,
    0x0017ffc4,0x001dff98,0x74400000,0x0f7cc0ff,0x3ff61bfe,0x03fe4001,
    0x4027fec0,0x3e601ffe,0x26007e5f,0x1bfe04ff,0x49b3ff40,0x005d0ffd,
    0x7c00bff1,0x0bfee05f,0x3e206ff8,0x01ff605f,0x00027ff4,0x00b7fee2,
    0xfb300000,0x0efa817d,0xffc86ff8,0x0ffdc002,0x013ff200,0x3fa01ffa,
    0xf3006a8f,0x037fc09f,0x0f8affb8,0x01e6ffea,0xf002ffc4,0x17fdc0bf,
    0x7c40dff0,0x01ff605f,0x0001bff2,0x007dfd50,0xdfea8000,0x207ff302,
    0x6ffb86ff,0xdff52b80,0x3fee7300,0x805ff806,0x003ecffb,0x7fc09ff1,
    0x9bff1007,0x099dff0b,0x8017fe20,0x3fee05ff,0x881bfe02,0x1ff605ff,
    0x401fff50,0x3f660003,0x100000cf,0xb8039ff7,0x0dff01ff,0x4405fff3,
    0x00bffe66,0x07ffe23d,0xf1007ff0,0x7c001fff,0x0fff505f,0x40fffec0,
    0x1001fffc,0x7fc00bff,0x80bfee05,0x3fe206ff,0x881ff605,0x02c02fff,
    0x6ffe4400,0xff930001,0x3ff20017,0xb06ff883,0x9b103fff,0x903fffd8,
    0x204ffc8d,0xf9000ef9,0xfff8009f,0x0fffee42,0x305ffa80,0x7c400dff,
    0xbff1005f,0xf017fdc0,0x2ffc40df,0x7f40ffb0,0x002d404f,0x0bbfae00,
    0x0177f540,0x5077fcc0,0x98e6fffd,0xdaacffff,0x7ffc40ef,0x1ffcabef,
    0xd817ffc4,0x3fe6001f,0x7ffd4001,0xffff5fde,0x05ff003d,0xf1001ff4,
    0x3fe200df,0x80bfee06,0x3fea07ff,0x203ffa05,0x9999effc,0x004fb999,
    0x7ffb5000,0x1dffb881,0x7fffc000,0xfffd8efd,0xfffffb85,0xff501fff,
    0x07ffffff,0xf90bffa2,0x00db0005,0x8fffff20,0x32002eff,0x0007dc06,
    0x5003fff7,0x3fa01fff,0x3fff304f,0x203fff20,0x7cc2fff8,0xffffffff,
    0x0004ffff,0x87fe4c00,0x0000cff9,0x49fffb30,0x3a605ffb,0x400dffff,
    0x2fffffe8,0x77ffec40,0x330002df,0x40d44000,0x0188001a,0xfea80144,
    0x981effff,0x1deffffd,0x9dffffdb,0x3fffffaa,0xffffd50d,0xfffb31bd,
    0x00003bff,0x22000000,0x0000530b,0x00880c40,0x80015510,0x98001aa8,
    0x0000001a,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x3bbaa000,0x3bb25eee,0x013002ee,0x44024400,
    0x40edc0cc,0x99998819,0x99999999,0x10199999,0x23800577,0x99999998,
    0x00000001,0x00000000,0x00000000,0x00000000,0xbfff9100,0x2003dfb0,
    0x360007f9,0x1ffdc02f,0xffc8dff3,0x3fffea0d,0xffffffff,0x40ffffff,
    0x1cfffffc,0xfff73440,0x003fffff,0x00000000,0x00000000,0x00000000,
    0x40000000,0x06e86ffd,0x0007fdc0,0x320377d4,0x1ffea4ff,0x4c47ffff,
    0x99999999,0x99999999,0x544575c1,0xc80beffd,0x3ffffee4,0x00001fff,
    0x00000000,0x00000000,0x00000000,0x3a200000,0x003f23ff,0x513fcc35,
    0x7f19d001,0xf51ffdc0,0x5fffd8df,0x1f800000,0x7bffd710,0x554c1fd7,
    0x00aaaaaa,0x00000000,0x00000000,0x00000000,0x00000000,0x7cc7ffcc,
    0xf27fd401,0x701ffa2b,0x5403ee1f,0x17fe22ff,0x0001ae6a,0x2600d100,
    0x000beffc,0x00000000,0x00000000,0x00000000,0x00000000,0xdbff9000,
    0xbfff1007,0x1bffa2fa,0x82f43f88,0x27fc1ff9,0x000007b0,0x00100010,
    0x00000000,0x00000000,0x00000000,0x00000000,0x3ffa0000,0x3fb26006,
    0x0beffbdd,0x07ea1b60,0x0ff61fe2,0x999307c4,0x99999999,0x19999999,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x03ffe600,
    0x2bff2200,0xb01fa800,0x3f21ba0d,0xee989901,0xeeeeeeee,0xeeeeeeee,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0xbfff3000,
    0x6ff5cc00,0x3a00adfd,0x360fe204,0x74c0fa84,0x00000003,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x3ffdbe88,0x477fec40,
    0x83fffbad,0x07dc00fb,0x911a60ee,0x00000001,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x7ffc5760,0x43bfea01,0x88fff54f,
    0x889d003f,0x00000100,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x07dc0000,0x6c40dff7,0x6d4df30c,0xf50036c3,0x00000003,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x1f980000,
    0x2004ffd8,0x32200ffb,0x0015c001,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x3e209d10,0xff7002ff,0x00000001,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x202fe880,0x8801fffe,0x0000003c,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x7fffcc00,0x7ffff443,0x000000ef,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
    0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
};

static signed short stb__times_39_usascii_x[95]={ 0,3,2,0,1,1,1,1,1,0,2,0,1,1,
2,0,1,4,0,1,0,1,1,1,2,1,3,2,0,0,0,1,1,0,0,1,0,0,0,1,0,0,0,0,
0,0,-1,1,0,1,0,2,1,0,0,0,0,0,0,2,0,1,0,-1,2,1,-1,1,1,1,1,1,0,1,
-3,0,1,0,0,1,-1,1,0,1,0,0,0,0,0,0,0,4,2,3,0, };
static signed short stb__times_39_usascii_y[95]={ 31,7,7,7,5,7,7,7,6,6,6,10,27,21,
27,6,7,7,7,7,7,7,7,7,7,7,14,14,10,15,10,7,6,7,7,7,7,7,7,7,7,7,7,7,
7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,6,7,7,37,7,14,6,14,6,14,6,14,6,6,
6,6,6,14,14,14,14,14,14,14,10,15,15,15,15,15,15,6,6,6,19, };
static unsigned short stb__times_39_usascii_w[95]={ 0,5,11,17,15,28,26,4,10,11,14,20,7,10,
5,10,16,10,17,14,17,15,16,16,14,16,4,6,20,20,20,14,31,26,22,22,25,21,19,24,25,11,14,26,
21,31,26,24,19,24,24,16,20,26,26,33,26,25,21,9,10,8,16,19,6,15,18,14,17,14,15,16,18,8,
10,18,9,28,18,16,18,17,12,12,10,18,18,26,18,18,16,11,3,10,20, };
static unsigned short stb__times_39_usascii_h[95]={ 0,25,11,25,29,25,25,11,33,33,15,19,10,4,
5,26,25,24,24,25,24,25,25,25,25,25,18,23,18,8,18,25,33,24,24,25,24,24,24,25,24,24,25,24,
24,24,25,25,24,31,24,25,24,25,25,25,24,24,24,31,26,31,13,2,7,18,26,18,26,18,25,25,25,25,
33,25,25,17,17,18,25,25,17,18,22,17,17,17,16,24,16,33,33,33,6, };
static unsigned short stb__times_39_usascii_s[95]={ 213,250,157,116,138,134,163,251,71,82,125,
222,169,219,246,165,190,114,193,207,125,222,238,1,18,33,246,249,1,177,22,
65,1,166,143,1,88,66,27,107,1,237,50,194,172,140,80,1,99,94,221,
220,119,193,166,132,72,24,50,128,154,119,140,154,249,43,176,59,195,74,100,
83,64,55,33,36,26,184,213,89,231,213,171,243,211,125,106,144,106,47,232,
59,55,44,198, };
static unsigned short stb__times_39_usascii_t[95]={ 27,1,156,35,1,35,35,87,1,1,156,
113,156,156,106,1,35,113,113,35,113,35,35,61,61,61,87,61,138,156,138,
61,1,113,113,87,113,113,113,61,113,61,61,87,87,87,61,35,87,1,87,
61,87,61,61,61,87,87,87,1,1,1,156,28,138,138,1,138,1,138,35,
35,35,35,1,35,35,138,138,138,1,1,138,113,113,138,138,138,156,113,138,
1,1,1,156, };
static unsigned short stb__times_39_usascii_a[95]={ 141,188,230,282,282,469,438,102,
188,188,282,318,141,188,141,157,282,282,282,282,282,282,282,282,
282,282,157,157,318,318,318,250,519,407,376,376,407,344,313,407,
407,188,219,407,344,501,407,407,313,407,376,313,344,407,407,532,
407,407,344,188,157,188,264,282,188,250,282,250,282,250,188,282,
282,157,157,282,157,438,282,282,282,282,188,219,157,282,282,407,
282,282,250,270,113,270,305, };

// Call this function with
//    font: NULL or array length
//    data: NULL or specified size
//    height: STB_FONT_times_39_usascii_BITMAP_HEIGHT or STB_FONT_times_39_usascii_BITMAP_HEIGHT_POW2
//    return value: spacing between lines
static void stb_font_times_39_usascii(stb_fontchar font[STB_FONT_times_39_usascii_NUM_CHARS],
                unsigned char data[STB_FONT_times_39_usascii_BITMAP_HEIGHT][STB_FONT_times_39_usascii_BITMAP_WIDTH],
                int height)
{
    int i,j;
    if (data != 0) {
        unsigned int *bits = stb__times_39_usascii_pixels;
        unsigned int bitpack = *bits++, numbits = 32;
        for (i=0; i < STB_FONT_times_39_usascii_BITMAP_WIDTH*height; ++i)
            data[0][i] = 0;  // zero entire bitmap
        for (j=1; j < STB_FONT_times_39_usascii_BITMAP_HEIGHT-1; ++j) {
            for (i=1; i < STB_FONT_times_39_usascii_BITMAP_WIDTH-1; ++i) {
                unsigned int value;
                if (numbits==0) bitpack = *bits++, numbits=32;
                value = bitpack & 1;
                bitpack >>= 1, --numbits;
                if (value) {
                    if (numbits < 3) bitpack = *bits++, numbits = 32;
                    data[j][i] = (bitpack & 7) * 0x20 + 0x1f;
                    bitpack >>= 3, numbits -= 3;
                } else {
                    data[j][i] = 0;
                }
            }
        }
    }

    // build font description
    if (font != 0) {
        float recip_width = 1.0f / STB_FONT_times_39_usascii_BITMAP_WIDTH;
        float recip_height = 1.0f / height;
        for (i=0; i < STB_FONT_times_39_usascii_NUM_CHARS; ++i) {
            // pad characters so they bilerp from empty space around each character
            font[i].s0 = (stb__times_39_usascii_s[i]) * recip_width;
            font[i].t0 = (stb__times_39_usascii_t[i]) * recip_height;
            font[i].s1 = (stb__times_39_usascii_s[i] + stb__times_39_usascii_w[i]) * recip_width;
            font[i].t1 = (stb__times_39_usascii_t[i] + stb__times_39_usascii_h[i]) * recip_height;
            font[i].x0 = stb__times_39_usascii_x[i];
            font[i].y0 = stb__times_39_usascii_y[i];
            font[i].x1 = stb__times_39_usascii_x[i] + stb__times_39_usascii_w[i];
            font[i].y1 = stb__times_39_usascii_y[i] + stb__times_39_usascii_h[i];
            font[i].advance_int = (stb__times_39_usascii_a[i]+8)>>4;
            font[i].s0f = (stb__times_39_usascii_s[i] - 0.5f) * recip_width;
            font[i].t0f = (stb__times_39_usascii_t[i] - 0.5f) * recip_height;
            font[i].s1f = (stb__times_39_usascii_s[i] + stb__times_39_usascii_w[i] + 0.5f) * recip_width;
            font[i].t1f = (stb__times_39_usascii_t[i] + stb__times_39_usascii_h[i] + 0.5f) * recip_height;
            font[i].x0f = stb__times_39_usascii_x[i] - 0.5f;
            font[i].y0f = stb__times_39_usascii_y[i] - 0.5f;
            font[i].x1f = stb__times_39_usascii_x[i] + stb__times_39_usascii_w[i] + 0.5f;
            font[i].y1f = stb__times_39_usascii_y[i] + stb__times_39_usascii_h[i] + 0.5f;
            font[i].advance = stb__times_39_usascii_a[i]/16.0f;
        }
    }
}

#ifndef STB_SOMEFONT_CREATE
#define STB_SOMEFONT_CREATE              stb_font_times_39_usascii
#define STB_SOMEFONT_BITMAP_WIDTH        STB_FONT_times_39_usascii_BITMAP_WIDTH
#define STB_SOMEFONT_BITMAP_HEIGHT       STB_FONT_times_39_usascii_BITMAP_HEIGHT
#define STB_SOMEFONT_BITMAP_HEIGHT_POW2  STB_FONT_times_39_usascii_BITMAP_HEIGHT_POW2
#define STB_SOMEFONT_FIRST_CHAR          STB_FONT_times_39_usascii_FIRST_CHAR
#define STB_SOMEFONT_NUM_CHARS           STB_FONT_times_39_usascii_NUM_CHARS
#define STB_SOMEFONT_LINE_SPACING        STB_FONT_times_39_usascii_LINE_SPACING
#endif

